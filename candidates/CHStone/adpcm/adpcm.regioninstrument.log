INFO: Loop bodies will be given their own region id
DEBUG: new region: FuncRegion(id: 11820540489735594880, name: abs, fileName: adpcm.c, startLine: 236, endLine: 236
DEBUG: adding abs (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 11820540489735594880)
DEBUG: assigning function abs id 11820540489735594880
DEBUG: new region: FuncRegion(id: 16908467643585303099, name: encode, fileName: adpcm.c, startLine: 248, endLine: 248
DEBUG: adding encode (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 16908467643585303099)
DEBUG: assigning function encode id 16908467643585303099
DEBUG: new region: FuncRegion(id: 2908381613631036031, name: filtez, fileName: adpcm.c, startLine: 581, endLine: 581
DEBUG: adding filtez (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 2908381613631036031)
DEBUG: assigning function filtez id 2908381613631036031
DEBUG: new region: FuncRegion(id: 12038763858041590732, name: filtep, fileName: adpcm.c, startLine: 596, endLine: 596
DEBUG: adding filtep (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 12038763858041590732)
DEBUG: assigning function filtep id 12038763858041590732
DEBUG: new region: FuncRegion(id: 4228948249764777216, name: quantl, fileName: adpcm.c, startLine: 608, endLine: 608
DEBUG: adding quantl (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 4228948249764777216)
DEBUG: assigning function quantl id 4228948249764777216
DEBUG: new region: FuncRegion(id: 14225488945546534280, name: logscl, fileName: adpcm.c, startLine: 634, endLine: 634
DEBUG: adding logscl (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 14225488945546534280)
DEBUG: assigning function logscl id 14225488945546534280
DEBUG: new region: FuncRegion(id: 2352360963580635148, name: scalel, fileName: adpcm.c, startLine: 649, endLine: 649
DEBUG: adding scalel (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 2352360963580635148)
DEBUG: assigning function scalel id 2352360963580635148
DEBUG: new region: FuncRegion(id: 9483903866728853193, name: upzero, fileName: adpcm.c, startLine: 662, endLine: 662
DEBUG: adding upzero (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 9483903866728853193)
DEBUG: assigning function upzero id 9483903866728853193
DEBUG: new region: FuncRegion(id: 11391553384778834983, name: uppol2, fileName: adpcm.c, startLine: 698, endLine: 698
DEBUG: adding uppol2 (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 11391553384778834983)
DEBUG: assigning function uppol2 id 11391553384778834983
DEBUG: new region: FuncRegion(id: 18015964755366260760, name: uppol1, fileName: adpcm.c, startLine: 728, endLine: 728
DEBUG: adding uppol1 (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 18015964755366260760)
DEBUG: assigning function uppol1 id 18015964755366260760
DEBUG: new region: FuncRegion(id: 10273287537493959213, name: logsch, fileName: adpcm.c, startLine: 754, endLine: 754
DEBUG: adding logsch (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 10273287537493959213)
DEBUG: assigning function logsch id 10273287537493959213
DEBUG: new region: FuncRegion(id: 6275891895184710401, name: decode, fileName: adpcm.c, startLine: 401, endLine: 401
DEBUG: adding decode (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 6275891895184710401)
DEBUG: assigning function decode id 6275891895184710401
DEBUG: new region: FuncR!{!"0x11\0012\00clang version 3.6.1 (tags/RELEASE_361/final)\000\00\000\00\001", <0x3b57e70>, <0x3b517d0>, <0x3b51960>, <0x3b5e008>, <0x3b79db8>, <0x3b517d0>} ; [ DW_TAG_compile_unit ] [/home/patmos/github/bachelor_project_HLS/candidates/CHStone/adpcm/adpcm.c] [DW_LANG_C99]

!{!"0x2e\00abs\00abs\00\00236\000\001\000\000\00256\000\00237", <0x3b57e70>, <0x3b519a0>, <0x3b51a90>, null, i32 (i32)* @abs, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 236] [def] [scope 237] [abs]

!{!"0x2e\00encode\00encode\00\00248\000\001\000\000\00256\000\00249", <0x3b57e70>, <0x3b519a0>, <0x3b54c60>, null, i32 (i32, i32)* @encode, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 248] [def] [scope 249] [encode]

!{!"0x2e\00decode\00decode\00\00401\000\001\000\000\00256\000\00402", <0x3b57e70>, <0x3b519a0>, <0x3b51ff0>, null, void (i32)* @decode, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 401] [def] [scope 402] [decode]

!{!"0x2e\00reset\00reset\00\00540\000\001\000\000\000\000\00541", <0x3b57e70>, <0x3b519a0>, <0x3b521f0>, null, void ()* @reset, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 540] [def] [scope 541] [reset]

!{!"0x2e\00filtez\00filtez\00\00581\000\001\000\000\00256\000\00582", <0x3b57e70>, <0x3b519a0>, <0x3b54b50>, null, i32 (i32*, i32*)* @filtez, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 581] [def] [scope 582] [filtez]

!{!"0x2e\00filtep\00filtep\00\00596\000\001\000\000\00256\000\00597", <0x3b57e70>, <0x3b519a0>, <0x3b5a160>, null, i32 (i32, i32, i32, i32)* @filtep, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 596] [def] [scope 597] [filtep]

!{!"0x2e\00quantl\00quantl\00\00608\000\001\000\000\00256\000\00609", <0x3b57e70>, <0x3b519a0>, <0x3b54c60>, null, i32 (i32, i32)* @quantl, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 608] [def] [scope 609] [quantl]

!{!"0x2e\00logscl\00logscl\00\00634\000\001\000\000\00256\000\00635", <0x3b57e70>, <0x3b519a0>, <0x3b54c60>, null, i32 (i32, i32)* @logscl, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 634] [def] [scope 635] [logscl]

!{!"0x2e\00scalel\00scalel\00\00649\000\001\000\000\00256\000\00650", <0x3b57e70>, <0x3b519a0>, <0x3b54c60>, null, i32 (i32, i32)* @scalel, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 649] [def] [scope 650] [scalel]

!{!"0x2e\00upzero\00upzero\00\00662\000\001\000\000\00256\000\00663", <0x3b57e70>, <0x3b519a0>, <0x3b5a860>, null, void (i32, i32*, i32*)* @upzero, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 662] [def] [scope 663] [upzero]

!{!"0x2e\00uppol2\00uppol2\00\00698\000\001\000\000\00256\000\00699", <0x3b57e70>, <0x3b519a0>, <0x3b5aac0>, null, i32 (i32, i32, i32, i32, i32)* @uppol2, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 698] [def] [scope 699] [uppol2]

!{!"0x2e\00uppol1\00uppol1\00\00728\000\001\000\000\00256\000\00729", <0x3b57e70>, <0x3b519a0>, <0x3b5a160>, null, i32 (i32, i32, i32, i32)* @uppol1, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 728] [def] [scope 729] [uppol1]

!{!"0x2e\00logsch\00logsch\00\00754\000\001\000\000\00256\000\00755", <0x3b57e70>, <0x3b519a0>, <0x3b54c60>, null, i32 (i32, i32)* @logsch, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 754] [def] [scope 755] [logsch]

!{!"0x2e\00adpcm_main\00adpcm_main\00\00837\000\001\000\000\000\000\00838", <0x3b57e70>, <0x3b519a0>, <0x3b521f0>, null, void ()* @adpcm_main, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 837] [def] [scope 838] [adpcm_main]

!{!"0x2e\00main\00main\00\00859\000\001\000\000\000\000\00860", <0x3b57e70>, <0x3b519a0>, <0x3b5ddd0>, null, i32 ()* @main, null, null, <0x3b517d0>} ; [ DW_TAG_subprogram ] [line 859] [def] [scope 860] [main]

!{!"0x34\00h\00h\00\0087\000\001", null, <0x3b519a0>, <0x3b59ec0>, [24 x i32]* @h, null} ; [ DW_TAG_variable ] [h] [line 87] [def]

!{!"0x34\00qq4_code4_table\00qq4_code4_table\00\00107\000\001", null, <0x3b519a0>, <0x3b51600>, [16 x i32]* @qq4_code4_table, null} ; [ DW_TAG_variable ] [qq4_code4_table] [line 107] [def]

!{!"0x34\00qq6_code6_table\00qq6_code6_table\00\00113\000\001", null, <0x3b519a0>, <0x3b5e820>, [64 x i32]* @qq6_code6_table, null} ; [ DW_TAG_variable ] [qq6_code6_table] [line 113] [def]

!{!"0x34\00wl_code_table\00wl_code_table\00\00128\000\001", null, <0x3b519a0>, <0x3b51600>, [16 x i32]* @wl_code_table, null} ; [ DW_TAG_variable ] [wl_code_table] [line 128] [def]

!{!"0x34\00ilb_table\00ilb_table\00\00133\000\001", null, <0x3b519a0>, <0x3b5ebe0>, [32 x i32]* @ilb_table, null} ; [ DW_TAG_variable ] [ilb_table] [line 133] [def]

!{!"0x34\00decis_levl\00decis_levl\00\00147\000\001", null, <0x3b519a0>, <0x3b5ee60>, [30 x i32]* @decis_levl, null} ; [ DW_TAG_variable ] [decis_levl] [line 147] [def]

!{!"0x34\00quant26bt_pos\00quant26bt_pos\00\00158\000\001", null, <0x3b519a0>, <0x3b5acc0>, [31 x i32]* @quant26bt_pos, null} ; [ DW_TAG_variable ] [quant26bt_pos] [line 158] [def]

!{!"0x34\00quant26bt_neg\00quant26bt_neg\00\00167\000\001", null, <0x3b519a0>, <0x3b5acc0>, [31 x i32]* @quant26bt_neg, null} ; [ DW_TAG_variable ] [quant26bt_neg] [line 167] [def]

!{!"0x34\00qq2_code2_table\00qq2_code2_table\00\00179\000\001", null, <0x3b519a0>, <0x3b63590>, [4 x i32]* @qq2_code2_table, null} ; [ DW_TAG_variable ] [qq2_code2_table] [line 179] [def]

!{!"0x34\00wh_code_table\00wh_code_table\00\00183\000\001", null, <0x3b519a0>, <0x3b63590>, [4 x i32]* @wh_code_table, null} ; [ DW_TAG_variable ] [wh_code_table] [line 183] [def]

!{!"0x34\00test_data\00test_data\00\00778\000\001", null, <0x3b519a0>, <0x3b5e110>, [100 x i32]* @test_data, null} ; [ DW_TAG_variable ] [test_data] [line 778] [def]

!{!"0x34\00test_compressed\00test_compressed\00\00801\000\001", null, <0x3b519a0>, <0x3b5e110>, [100 x i32]* @test_compressed, null} ; [ DW_TAG_variable ] [test_compressed] [line 801] [def]

!{!"0x34\00test_result\00test_result\00\00813\000\001", null, <0x3b519a0>, <0x3b5e110>, [100 x i32]* @test_result, null} ; [ DW_TAG_variable ] [test_result] [line 813] [def]

!{!"0x34\00tqmf\00tqmf\00\0083\000\001", null, <0x3b519a0>, <0x3b64050>, [24 x i32]* @tqmf, null} ; [ DW_TAG_variable ] [tqmf] [line 83] [def]

!{!"0x34\00xl\00xl\00\0093\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xl, null} ; [ DW_TAG_variable ] [xl] [line 93] [def]

!{!"0x34\00xh\00xh\00\0093\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xh, null} ; [ DW_TAG_variable ] [xh] [line 93] [def]

!{!"0x34\00accumc\00accumc\00\0096\000\001", null, <0x3b519a0>, <0x3b644f0>, [11 x i32]* @accumc, null} ; [ DW_TAG_variable ] [accumc] [line 96] [def]

!{!"0x34\00accumd\00accumd\00\0096\000\001", null, <0x3b519a0>, <0x3b644f0>, [11 x i32]* @accumd, null} ; [ DW_TAG_variable ] [accumd] [line 96] [def]

!{!"0x34\00xout1\00xout1\00\0099\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xout1, null} ; [ DW_TAG_variable ] [xout1] [line 99] [def]

!{!"0x34\00xout2\00xout2\00\0099\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xout2, null} ; [ DW_TAG_variable ] [xout2] [line 99] [def]

!{!"0x34\00xs\00xs\00\00101\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xs, null} ; [ DW_TAG_variable ] [xs] [line 101] [def]

!{!"0x34\00xd\00xd\00\00101\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @xd, null} ; [ DW_TAG_variable ] [xd] [line 101] [def]

!{!"0x34\00il\00il\00\00105\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @il, null} ; [ DW_TAG_variable ] [il] [line 105] [def]

!{!"0x34\00szl\00szl\00\00105\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @szl, null} ; [ DW_TAG_variable ] [szl] [line 105] [def]

!{!"0x34\00spl\00spl\00\00105\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @spl, null} ; [ DW_TAG_variable ] [spl] [line 105] [def]

!{!"0x34\00sl\00sl\00\00105\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @sl, null} ; [ DW_TAG_variable ] [sl] [line 105] [def]

!{!"0x34\00el\00el\00\00105\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @el, null} ; [ DW_TAG_variable ] [el] [line 105] [def]

!{!"0x34\00delay_bpl\00delay_bpl\00\00124\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @delay_bpl, null} ; [ DW_TAG_variable ] [delay_bpl] [line 124] [def]

!{!"0x34\00delay_dltx\00delay_dltx\00\00126\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @delay_dltx, null} ; [ DW_TAG_variable ] [delay_dltx] [line 126] [def]

!{!"0x34\00nbl\00nbl\00\00140\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @nbl, null} ; [ DW_TAG_variable ] [nbl] [line 140] [def]

!{!"0x34\00al1\00al1\00\00141\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @al1, null} ; [ DW_TAG_variable ] [al1] [line 141] [def]

!{!"0x34\00al2\00al2\00\00141\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @al2, null} ; [ DW_TAG_variable ] [al2] [line 141] [def]

!{!"0x34\00plt\00plt\00\00142\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @plt, null} ; [ DW_TAG_variable ] [plt] [line 142] [def]

!{!"0x34\00plt1\00plt1\00\00142\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @plt1, null} ; [ DW_TAG_variable ] [plt1] [line 142] [def]

!{!"0x34\00plt2\00plt2\00\00142\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @plt2, null} ; [ DW_TAG_variable ] [plt2] [line 142] [def]

!{!"0x34\00dlt\00dlt\00\00143\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dlt, null} ; [ DW_TAG_variable ] [dlt] [line 143] [def]

!{!"0x34\00rlt\00rlt\00\00144\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rlt, null} ; [ DW_TAG_variable ] [rlt] [line 144] [def]

!{!"0x34\00rlt1\00rlt1\00\00144\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rlt1, null} ; [ DW_TAG_variable ] [rlt1] [line 144] [def]

!{!"0x34\00rlt2\00rlt2\00\00144\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rlt2, null} ; [ DW_TAG_variable ] [rlt2] [line 144] [def]

!{!"0x34\00detl\00detl\00\00154\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @detl, null} ; [ DW_TAG_variable ] [detl] [line 154] [def]

!{!"0x34\00deth\00deth\00\00175\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @deth, null} ; [ DW_TAG_variable ] [deth] [line 175] [def]

!{!"0x34\00sh\00sh\00\00176\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @sh, null} ; [ DW_TAG_variable ] [sh] [line 176] [def]

!{!"0x34\00eh\00eh\00\00177\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @eh, null} ; [ DW_TAG_variable ] [eh] [line 177] [def]

!{!"0x34\00dh\00dh\00\00188\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dh, null} ; [ DW_TAG_variable ] [dh] [line 188] [def]

!{!"0x34\00ih\00ih\00\00188\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ih, null} ; [ DW_TAG_variable ] [ih] [line 188] [def]

!{!"0x34\00nbh\00nbh\00\00189\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @nbh, null} ; [ DW_TAG_variable ] [nbh] [line 189] [def]

!{!"0x34\00szh\00szh\00\00189\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @szh, null} ; [ DW_TAG_variable ] [szh] [line 189] [def]

!{!"0x34\00sph\00sph\00\00190\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @sph, null} ; [ DW_TAG_variable ] [sph] [line 190] [def]

!{!"0x34\00ph\00ph\00\00190\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ph, null} ; [ DW_TAG_variable ] [ph] [line 190] [def]

!{!"0x34\00yh\00yh\00\00190\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @yh, null} ; [ DW_TAG_variable ] [yh] [line 190] [def]

!{!"0x34\00rh\00rh\00\00190\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rh, null} ; [ DW_TAG_variable ] [rh] [line 190] [def]

!{!"0x34\00delay_dhx\00delay_dhx\00\00192\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @delay_dhx, null} ; [ DW_TAG_variable ] [delay_dhx] [line 192] [def]

!{!"0x34\00delay_bph\00delay_bph\00\00194\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @delay_bph, null} ; [ DW_TAG_variable ] [delay_bph] [line 194] [def]

!{!"0x34\00ah1\00ah1\00\00196\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ah1, null} ; [ DW_TAG_variable ] [ah1] [line 196] [def]

!{!"0x34\00ah2\00ah2\00\00196\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ah2, null} ; [ DW_TAG_variable ] [ah2] [line 196] [def]

!{!"0x34\00ph1\00ph1\00\00197\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ph1, null} ; [ DW_TAG_variable ] [ph1] [line 197] [def]

!{!"0x34\00ph2\00ph2\00\00197\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ph2, null} ; [ DW_TAG_variable ] [ph2] [line 197] [def]

!{!"0x34\00rh1\00rh1\00\00198\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rh1, null} ; [ DW_TAG_variable ] [rh1] [line 198] [def]

!{!"0x34\00rh2\00rh2\00\00198\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rh2, null} ; [ DW_TAG_variable ] [rh2] [line 198] [def]

!{!"0x34\00ilr\00ilr\00\00201\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @ilr, null} ; [ DW_TAG_variable ] [ilr] [line 201] [def]

!{!"0x34\00rl\00rl\00\00201\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @rl, null} ; [ DW_TAG_variable ] [rl] [line 201] [def]

!{!"0x34\00dec_deth\00dec_deth\00\00202\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_deth, null} ; [ DW_TAG_variable ] [dec_deth] [line 202] [def]

!{!"0x34\00dec_detl\00dec_detl\00\00202\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_detl, null} ; [ DW_TAG_variable ] [dec_detl] [line 202] [def]

!{!"0x34\00dec_dlt\00dec_dlt\00\00202\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_dlt, null} ; [ DW_TAG_variable ] [dec_dlt] [line 202] [def]

!{!"0x34\00dec_del_bpl\00dec_del_bpl\00\00204\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @dec_del_bpl, null} ; [ DW_TAG_variable ] [dec_del_bpl] [line 204] [def]

!{!"0x34\00dec_del_dltx\00dec_del_dltx\00\00206\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @dec_del_dltx, null} ; [ DW_TAG_variable ] [dec_del_dltx] [line 206] [def]

!{!"0x34\00dec_plt\00dec_plt\00\00208\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_plt, null} ; [ DW_TAG_variable ] [dec_plt] [line 208] [def]

!{!"0x34\00dec_plt1\00dec_plt1\00\00208\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_plt1, null} ; [ DW_TAG_variable ] [dec_plt1] [line 208] [def]

!{!"0x34\00dec_plt2\00dec_plt2\00\00208\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_plt2, null} ; [ DW_TAG_variable ] [dec_plt2] [line 208] [def]

!{!"0x34\00dec_szl\00dec_szl\00\00209\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_szl, null} ; [ DW_TAG_variable ] [dec_szl] [line 209] [def]

!{!"0x34\00dec_spl\00dec_spl\00\00209\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_spl, null} ; [ DW_TAG_variable ] [dec_spl] [line 209] [def]

!{!"0x34\00dec_sl\00dec_sl\00\00209\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_sl, null} ; [ DW_TAG_variable ] [dec_sl] [line 209] [def]

!{!"0x34\00dec_rlt1\00dec_rlt1\00\00210\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_rlt1, null} ; [ DW_TAG_variable ] [dec_rlt1] [line 210] [def]

!{!"0x34\00dec_rlt2\00dec_rlt2\00\00210\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_rlt2, null} ; [ DW_TAG_variable ] [dec_rlt2] [line 210] [def]

!{!"0x34\00dec_rlt\00dec_rlt\00\00210\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_rlt, null} ; [ DW_TAG_variable ] [dec_rlt] [line 210] [def]

!{!"0x34\00dec_al1\00dec_al1\00\00211\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_al1, null} ; [ DW_TAG_variable ] [dec_al1] [line 211] [def]

!{!"0x34\00dec_al2\00dec_al2\00\00211\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_al2, null} ; [ DW_TAG_variable ] [dec_al2] [line 211] [def]

!{!"0x34\00dl\00dl\00\00212\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dl, null} ; [ DW_TAG_variable ] [dl] [line 212] [def]

!{!"0x34\00dec_nbl\00dec_nbl\00\00213\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_nbl, null} ; [ DW_TAG_variable ] [dec_nbl] [line 213] [def]

!{!"0x34\00dec_dh\00dec_dh\00\00213\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_dh, null} ; [ DW_TAG_variable ] [dec_dh] [line 213] [def]

!{!"0x34\00dec_nbh\00dec_nbh\00\00213\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_nbh, null} ; [ DW_TAG_variable ] [dec_nbh] [line 213] [def]

!{!"0x34\00dec_del_bph\00dec_del_bph\00\00216\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @dec_del_bph, null} ; [ DW_TAG_variable ] [dec_del_bph] [line 216] [def]

!{!"0x34\00dec_del_dhx\00dec_del_dhx\00\00218\000\001", null, <0x3b519a0>, <0x3b5e600>, [6 x i32]* @dec_del_dhx, null} ; [ DW_TAG_variable ] [dec_del_dhx] [line 218] [def]

!{!"0x34\00dec_szh\00dec_szh\00\00220\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_szh, null} ; [ DW_TAG_variable ] [dec_szh] [line 220] [def]

!{!"0x34\00dec_rh1\00dec_rh1\00\00222\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_rh1, null} ; [ DW_TAG_variable ] [dec_rh1] [line 222] [def]

!{!"0x34\00dec_rh2\00dec_rh2\00\00222\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_rh2, null} ; [ DW_TAG_variable ] [dec_rh2] [line 222] [def]

!{!"0x34\00dec_ah1\00dec_ah1\00\00223\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_ah1, null} ; [ DW_TAG_variable ] [dec_ah1] [line 223] [def]

!{!"0x34\00dec_ah2\00dec_ah2\00\00223\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_ah2, null} ; [ DW_TAG_variable ] [dec_ah2] [line 223] [def]

!{!"0x34\00dec_ph\00dec_ph\00\00224\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_ph, null} ; [ DW_TAG_variable ] [dec_ph] [line 224] [def]

!{!"0x34\00dec_sph\00dec_sph\00\00224\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_sph, null} ; [ DW_TAG_variable ] [dec_sph] [line 224] [def]

!{!"0x34\00dec_sh\00dec_sh\00\00226\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_sh, null} ; [ DW_TAG_variable ] [dec_sh] [line 226] [def]

!{!"0x34\00dec_ph1\00dec_ph1\00\00228\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_ph1, null} ; [ DW_TAG_variable ] [dec_ph1] [line 228] [def]

!{!"0x34\00dec_ph2\00dec_ph2\00\00228\000\001", null, <0x3b519a0>, <0x3b51898>, i32* @dec_ph2, null} ; [ DW_TAG_variable ] [dec_ph2] [line 228] [def]

!{!"0x34\00compressed\00compressed\00\00800\000\001", null, <0x3b519a0>, <0x3b79570>, [100 x i32]* @compressed, null} ; [ DW_TAG_variable ] [compressed] [line 800] [def]

!{!"0x34\00result\00result\00\00800\000\001", null, <0x3b519a0>, <0x3b79570>, [100 x i32]* @result, null} ; [ DW_TAG_variable ] [result] [line 800] [def]

!{!"0x1\00\000\00768\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5abd8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 768, align 32, offset 0] [from ]

!{!"0x26\00\000\000\000\000\000", null, null, <0x3b51898>} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from int]

!{!"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]

!{!"0x1\00\000\00512\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5dee8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 512, align 32, offset 0] [from ]

!{!"0x1\00\000\002048\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5e7b8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 2048, align 32, offset 0] [from ]

!{!"0x1\00\000\001024\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5eb78>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1024, align 32, offset 0] [from ]

!{!"0x1\00\000\00960\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5edf8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 960, align 32, offset 0] [from ]

!{!"0x1\00\000\00992\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5f078>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 992, align 32, offset 0] [from ]

!{!"0x1\00\000\00128\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5b018>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 128, align 32, offset 0] [from ]

!{!"0x1\00\000\003200\0032\000\000\000", null, null, <0x3b5deb0>, <0x3b5e0a8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 3200, align 32, offset 0] [from ]

!{!"0x1\00\000\00768\0032\000\000\000", null, null, <0x3b51898>, <0x3b5abd8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 768, align 32, offset 0] [from int]

!{!"0x1\00\000\00352\0032\000\000\000", null, null, <0x3b51898>, <0x3b64488>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 352, align 32, offset 0] [from int]

!{!"0x1\00\000\00192\0032\000\000\000", null, null, <0x3b51898>, <0x3b5e598>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 32, offset 0] [from int]

!{!"0x1\00\000\003200\0032\000\000\000", null, null, <0x3b51898>, <0x3b5e0a8>, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 3200, align 32, offset 0] [from int]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b51a20>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b57cd8>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b51920>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b520b8>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b4e678>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0xf\00\000\0064\0064\000\000", null, null, <0x3b51898>} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from int]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b4e6c8>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b5a7f0>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b5aa50>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x3b5a408>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x24\00long int\000\0064\0064\000\000\005", null, null} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]

Meta data for 1808320095846519216
Meta data for 16467612912596271223
Meta data for 6868753203666847501
Meta data for 2109699997084480401
Meta data for 7158724875876143838
Meta data for 9998946740183892715
egion(id: 12160178792060789666, name: reset, fileName: adpcm.c, startLine: 540, endLine: 540
DEBUG: adding reset (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 12160178792060789666)
DEBUG: assigning function reset id 12160178792060789666
DEBUG: new region: FuncRegion(id: 425904797478994773, name: adpcm_main, fileName: adpcm.c, startLine: 837, endLine: 837
DEBUG: adding adpcm_main (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 425904797478994773)
DEBUG: assigning function adpcm_main id 425904797478994773
DEBUG: new region: FuncRegion(id: 14768796648239662093, name: main, fileName: adpcm.c, startLine: 859, endLine: 859
DEBUG: adding main (in module: adpcm.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 14768796648239662093)
DEBUG: assigning function main id 14768796648239662093
DEBUG: found 15 func regions
INFO: Inserting the following instrumentation calls:
INFO: _KDeinit
INFO: _KEnterRegion
INFO: _KExitRegion
INFO: _KInit
INFO: _KLandingPad
DEBUG: Debug information:
DEBUG: region name to id: abs is 11820540489735594880
DEBUG: found 0 loops in function abs
DEBUG: region name to id: encode is 16908467643585303099
DEBUG: found 2 loops in function encode
DEBUG: assigning id = 1808320095846519216 to loop with the following BBs:
	for.cond31 for.body34 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 2300420563733901031
DEBUG: assigning id = 2300420563733901031 to body of loop
DEBUG: assigning id = 16467612912596271223 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 4136632151115754028
DEBUG: assigning id = 4136632151115754028 to body of loop
DEBUG: for.cond31 has 1 possible loop exit points
DEBUG: 	target #0: for.end39
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: filtez is 2908381613631036031
DEBUG: found 1 loops in function filtez
DEBUG: assigning id = 6868753203666847501 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 2103744202072609876
DEBUG: assigning id = 2103744202072609876 to body of loop
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: filtep is 12038763858041590732
DEBUG: found 0 loops in function filtep
DEBUG: region name to id: quantl is 4228948249764777216
DEBUG: found 1 loops in function quantl
DEBUG: assigning id = 2109699997084480401 to loop with the following BBs:
	for.cond for.body for.inc 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 5236523763905622951
DEBUG: assigning id = 5236523763905622951 to body of loop
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: for.body has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: logscl is 14225488945546534280
DEBUG: found 0 loops in function logscl
DEBUG: region name to id: scalel is 2352360963580635148
DEBUG: found 0 loops in function scalel
DEBUG: region name to id: upzero is 9483903866728853193
DEBUG: found 2 loops in function upzero
DEBUG: assigning id = 7158724875876143838 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 3870921345655254523
DEBUG: assigning id = 3870921345655254523 to body of loop
DEBUG: assigning id = 9998946740183892715 to loop with the following BBs:
	for.cond5 for.body8 if.else17 if.then16 if.end 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KreMeta data for 3844364560897138706
Meta data for 13433587666670149066
Meta data for 11620850301113274029
Meta data for 13502264109144410537
Meta data for 1626593478546204763
Meta data for 7209084749583782680
Meta data for 6364582301730930605
Meta data for 9508670378927217233
mlinInstrument/LoopBodyRegion.cpp:82 Meta data for 4280163660709926990
DEBUG: assigning id = 4280163660709926990 to body of loop
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: if.end29.loopexit
DEBUG: for.cond5 has 1 possible loop exit points
DEBUG: 	target #0: if.end29.loopexit1
DEBUG: region name to id: uppol2 is 11391553384778834983
DEBUG: found 0 loops in function uppol2
DEBUG: region name to id: uppol1 is 18015964755366260760
DEBUG: found 0 loops in function uppol1
DEBUG: region name to id: logsch is 10273287537493959213
DEBUG: found 0 loops in function logsch
DEBUG: region name to id: decode is 6275891895184710401
DEBUG: found 2 loops in function decode
DEBUG: assigning id = 3844364560897138706 to loop with the following BBs:
	for.cond72 for.body75 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 16124778942597733830
DEBUG: assigning id = 16124778942597733830 to body of loop
DEBUG: assigning id = 13433587666670149066 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 9102247395868130271
DEBUG: assigning id = 9102247395868130271 to body of loop
DEBUG: for.cond72 has 1 possible loop exit points
DEBUG: 	target #0: for.end82
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: reset is 12160178792060789666
DEBUG: found 4 loops in function reset
DEBUG: assigning id = 11620850301113274029 to loop with the following BBs:
	for.cond29 for.body31 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 9433840773305085530
DEBUG: assigning id = 9433840773305085530 to body of loop
DEBUG: assigning id = 13502264109144410537 to loop with the following BBs:
	for.cond21 for.body23 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 3453702328272019426
DEBUG: assigning id = 3453702328272019426 to body of loop
DEBUG: assigning id = 1626593478546204763 to loop with the following BBs:
	for.cond7 for.body9 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 8468925750886813592
DEBUG: assigning id = 8468925750886813592 to body of loop
DEBUG: assigning id = 7209084749583782680 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 6213792520234219344
DEBUG: assigning id = 6213792520234219344 to body of loop
DEBUG: for.cond29 has 1 possible loop exit points
DEBUG: 	target #0: for.end38
DEBUG: for.cond21 has 1 possible loop exit points
DEBUG: 	target #0: for.end28
DEBUG: for.cond7 has 1 possible loop exit points
DEBUG: 	target #0: for.end20
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: adpcm_main is 425904797478994773
DEBUG: found 2 loops in function adpcm_main
DEBUG: assigning id = 6364582301730930605 to loop with the following BBs:
	for.cond6 for.body8 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 6996317799149875079
DEBUG: assigning id = 6996317799149875079 to body of loop
DEBUG: assigning id = 9508670378927217233 to loop with the following BBs:
	for.cond for.body 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 1255105849232233540
DEBUG: assigning id = 1255105849232233540 to body of loop
DEBUG: for.cond6 has 1 possible loop exit points
DEBUG: 	target #0: for.end19
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: region name to id: main is 14768796648239662093
DEBUG: found 2 loops in function maiMeta data for 7590226004341738434
Meta data for 9667506582494941124
n
DEBUG: assigning id = 7590226004341738434 to loop with the following BBs:
	for.cond4 for.body6 if.then12 for.inc15 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 7385718288153927584
DEBUG: assigning id = 7385718288153927584 to body of loop
DEBUG: assigning id = 9667506582494941124 to loop with the following BBs:
	for.cond for.body if.then for.inc 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 8432504331812674398
DEBUG: assigning id = 8432504331812674398 to body of loop
DEBUG: for.cond4 has 1 possible loop exit points
DEBUG: 	target #0: for.end17
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: Writing kremlib calls to adpcm.kdump
INFO: dumping function: abs
INFO: dumping function: llvm.dbg.declare
INFO: dumping function: encode
INFO: dumping function: filtez
INFO: dumping function: filtep
INFO: dumping function: quantl
INFO: dumping function: logscl
INFO: dumping function: scalel
INFO: dumping function: upzero
INFO: dumping function: uppol2
INFO: dumping function: uppol1
INFO: dumping function: logsch
INFO: dumping function: decode
INFO: dumping function: reset
INFO: dumping function: adpcm_main
INFO: dumping function: main
INFO: dumping function: printf
INFO: dumping function: llvm.dbg.value
INFO: dumping function: _KLoad
INFO: dumping function: _KLoad0
INFO: dumping function: _KLoad1
INFO: dumping function: _KLoad2
INFO: dumping function: _KLoad3
INFO: dumping function: _KLoad4
INFO: dumping function: _KStore
INFO: dumping function: _KStoreConst
INFO: dumping function: _KEnqArgConst
INFO: dumping function: _KEnqArg
INFO: dumping function: _KPrepCall
INFO: dumping function: _KLinkReturn
INFO: dumping function: _KMalloc
INFO: dumping function: _KRealloc
INFO: dumping function: _KFree
INFO: dumping function: _KDeqArg
INFO: dumping function: _KReturnConst
INFO: dumping function: _KReturn
INFO: dumping function: _KWork
INFO: dumping function: _KTimestamp
INFO: dumping function: _KTimestamp0
INFO: dumping function: _KTimestamp1
INFO: dumping function: _KTimestamp2
INFO: dumping function: _KTimestamp3
INFO: dumping function: _KTimestamp4
INFO: dumping function: _KTimestamp5
INFO: dumping function: _KTimestamp6
INFO: dumping function: _KTimestamp7
INFO: dumping function: _KPhi
INFO: dumping function: _KPhi1To1
INFO: dumping function: _KPhi2To1
INFO: dumping function: _KPhi3To1
INFO: dumping function: _KPhi4To1
INFO: dumping function: _KPhiAddCond
INFO: dumping function: _KInduction
INFO: dumping function: _KPushCDep
INFO: dumping function: _KPopCDep
INFO: dumping function: _KPrepRTable
INFO: dumping function: _KInit
INFO: dumping function: _KDeinit
INFO: dumping function: _KEnterRegion
INFO: dumping function: _KExitRegion
INFO: dumping function: _KLandingPad
