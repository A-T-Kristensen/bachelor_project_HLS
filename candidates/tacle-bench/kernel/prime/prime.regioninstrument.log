!{!"0x11\0012\00clang version 3.6.1 (tags/RELEASE_361/final)\000\00\000\00\001", <0x3398720>, <0x339c130>, <0x339c130>, <0x33a0060>, <0x33a3780>, <0x339c130>} ; [ DW_TAG_compile_unit ] [/home/patmos/github/bachelor_project_HLS/candidates/tacle-bench/kernel/prime/prime.c] [DW_LANG_C99]

!{!"0x2e\00prime_initSeed\00prime_initSeed\00\0053\000\001\000\000\000\000\0054", <0x3398720>, <0x3394a30>, <0x339cd60>, null, void ()* @prime_initSeed, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 53] [def] [scope 54] [prime_initSeed]

!{!"0x2e\00prime_randomInteger\00prime_randomInteger\00\0059\000\001\000\000\000\000\0060", <0x3398720>, <0x3394a30>, <0x339cca0>, null, i32 ()* @prime_randomInteger, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 59] [def] [scope 60] [prime_randomInteger]

!{!"0x2e\00prime_init\00prime_init\00\0066\000\001\000\000\000\000\0067", <0x3398720>, <0x3394a30>, <0x339cd60>, null, void ()* @prime_init, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 66] [def] [scope 67] [prime_init]

!{!"0x2e\00prime_return\00prime_return\00\0075\000\001\000\000\000\000\0076", <0x3398720>, <0x3394a30>, <0x339de70>, null, i32 ()* @prime_return, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 75] [def] [scope 76] [prime_return]

!{!"0x2e\00prime_divides\00prime_divides\00\0085\000\001\000\000\00256\000\0086", <0x3398720>, <0x3394a30>, <0x339bec0>, null, i8 (i32, i32)* @prime_divides, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 85] [def] [scope 86] [prime_divides]

!{!"0x2e\00prime_even\00prime_even\00\0091\000\001\000\000\00256\000\0092", <0x3398720>, <0x3394a30>, <0x339f740>, null, i8 (i32)* @prime_even, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 91] [def] [scope 92] [prime_even]

!{!"0x2e\00prime_prime\00prime_prime\00\0097\000\001\000\000\00256\000\0098", <0x3398720>, <0x3394a30>, <0x339f740>, null, i8 (i32)* @prime_prime, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 97] [def] [scope 98] [prime_prime]

!{!"0x2e\00prime_swap\00prime_swap\00\00112\000\001\000\000\00256\000\00113", <0x3398720>, <0x3394a30>, <0x339fb30>, null, void (i32*, i32*)* @prime_swap, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 112] [def] [scope 113] [prime_swap]

!{!"0x2e\00prime_main\00prime_main\00\00124\000\001\000\000\000\000\00125", <0x3398720>, <0x3394a30>, <0x339cd60>, null, void ()* @prime_main, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 124] [def] [scope 125] [prime_main]

!{!"0x2e\00main\00main\00\00132\000\001\000\000\00256\000\00133", <0x3398720>, <0x3394a30>, <0x339de70>, null, i32 ()* @main, null, null, <0x339c130>} ; [ DW_TAG_subprogram ] [line 132] [def] [scope 133] [main]

!{!"0x34\00prime_x\00prime_x\00\0042\000\001", null, <0x3394a30>, <0x339d388>, i32* @prime_x, null} ; [ DW_TAG_variable ] [prime_x] [line 42] [def]

!{!"0x34\00prime_y\00prime_y\00\0043\000\001", null, <0x3394a30>, <0x339d388>, i32* @prime_y, null} ; [ DW_TAG_variable ] [prime_y] [line 43] [def]

!{!"0x34\00prime_result\00prime_result\00\0044\000\001", null, <0x3394a30>, <0x339de08>, i32* @prime_result, null} ; [ DW_TAG_variable ] [prime_result] [line 44] [def]

!{!"0x34\00prime_seed\00prime_seed\00\0045\000\001", null, <0x3394a30>, <0x339e3e0>, i32* @prime_seed, null} ; [ DW_TAG_variable ] [prime_seed] [line 45] [def]

!{!"0x24\00unsigned int\000\0032\0032\000\000\007", null, null} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]

!{!"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]

!{!"0x35\00\000\000\000\000\000", null, null, <0x339de08>} ; [ DW_TAG_volatile_type ] [line 0, size 0, align 0, offset 0] [from int]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339ccf8>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339d298>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339dd58>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339df88>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x24\00unsigned char\000\008\008\000\000\008", null, null} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339f6d0>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0x15\00\000\000\000\000\000\000", null, null, null, <0x339f858>, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]

!{!"0xf\00\000\0064\0064\000\000", null, null, <0x339d388>} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from unsigned int]

INFO: Loop bodies will be given their own region id
DEBUG: new region: FuncRegion(id: 9270434933601629473, name: prime_initSeed, fileName: prime.c, startLine: 53, endLine: 53
DEBUG: adding prime_initSeed (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 9270434933601629473)
DEBUG: assigning function prime_initSeed id 9270434933601629473
DEBUG: new region: FuncRegion(id: 2454404987709875756, name: prime_randomInteger, fileName: prime.c, startLine: 59, endLine: 59
DEBUG: adding prime_randomInteger (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 2454404987709875756)
DEBUG: assigning function prime_randomInteger id 2454404987709875756
DEBUG: new region: FuncRegion(id: 15630203853669942610, name: prime_init, fileName: prime.c, startLine: 66, endLine: 66
DEBUG: adding prime_init (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 15630203853669942610)
DEBUG: assigning function prime_init id 15630203853669942610
DEBUG: new region: FuncRegion(id: 2244391939030659848, name: prime_return, fileName: prime.c, startLine: 75, endLine: 75
DEBUG: adding prime_return (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 2244391939030659848)
DEBUG: assigning function prime_return id 2244391939030659848
DEBUG: new region: FuncRegion(id: 1657319958591431703, name: prime_divides, fileName: prime.c, startLine: 85, endLine: 85
DEBUG: adding prime_divides (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 1657319958591431703)
DEBUG: assigning function prime_divides id 1657319958591431703
DEBUG: new region: FuncRegion(id: 13827106322474750415, name: prime_even, fileName: prime.c, startLine: 91, endLine: 91
DEBUG: adding prime_even (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 13827106322474750415)
DEBUG: assigning function prime_even id 13827106322474750415
DEBUG: new region: FuncRegion(id: 12538153077314557604, name: prime_prime, fileName: prime.c, startLine: 97, endLine: 97
DEBUG: adding prime_prime (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 12538153077314557604)
DEBUG: assigning function prime_prime id 12538153077314557604
DEBUG: new region: FuncRegion(id: 12111017789132859219, name: prime_swap, fileName: prime.c, startLine: 112, endLine: 112
DEBUG: adding prime_swap (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 12111017789132859219)
DEBUG: assigning function prime_swap id 12111017789132859219
DEBUG: new region: FuncRegion(id: 17624194788457325186, name: prime_main, fileName: prime.c, startLine: 124, endLine: 124
DEBUG: adding prime_main (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 17624194788457325186)
DEBUG: assigning function prime_main id 17624194788457325186
DEBUG: new region: FuncRegion(id: 14768796648239662093, name: main, fileName: prime.c, startLine: 132, endLine: 132
DEBUG: adding main (in module: prime.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.bc) to list of defined functions (region_id: 14768796648239662093)
DEBUG: assigning function main id 14768796648239662093
DEBUG: found 10 func regions
INFO: Inserting the following instrumentation calls:
INFO: _KDeinit
INFO: _KEnterRegion
INFO: _KExitRegion
INFO: _KInit
INFO: _KLandingPad
DEBUG: Debug information:
DEBUG: region name to id: prime_initSeed is 9270434933601629473
DEBUG: found 0 loops in function prime_initSeed
DEBUG: region name to id: prime_randomInteger is 2454404987709875756
DEBUG: found 0 loops in function prime_randomInteger
DEBUG: region name to id: prime_init is 15630203853669942610
DEBUG: found 0 loops in function prime_init
DEBUG: rMeta data for 16623948886225746015
egion name to id: prime_return is 2244391939030659848
DEBUG: found 0 loops in function prime_return
DEBUG: region name to id: prime_divides is 1657319958591431703
DEBUG: found 0 loops in function prime_divides
DEBUG: region name to id: prime_even is 13827106322474750415
DEBUG: found 0 loops in function prime_even
DEBUG: region name to id: prime_prime is 12538153077314557604
DEBUG: found 1 loops in function prime_prime
DEBUG: assigning id = 16623948886225746015 to loop with the following BBs:
	for.cond for.body for.inc 
DEBUG: /home/patmos/Developer/kremlin/instrument/llvm/llvm-3.6.1.src/lib/Transforms/KremlinInstrument/LoopBodyRegion.cpp:82 Meta data for 14904566454110536389
DEBUG: assigning id = 14904566454110536389 to body of loop
DEBUG: for.cond has 1 possible loop exit points
DEBUG: 	target #0: for.end
DEBUG: for.body has 1 possible loop exit points
DEBUG: 	target #0: if.then6
DEBUG: region name to id: prime_swap is 12111017789132859219
DEBUG: found 0 loops in function prime_swap
DEBUG: region name to id: prime_main is 17624194788457325186
DEBUG: found 0 loops in function prime_main
DEBUG: region name to id: main is 14768796648239662093
DEBUG: found 0 loops in function main
DEBUG: Writing kremlib calls to prime.kdump
INFO: dumping function: prime_initSeed
INFO: dumping function: prime_randomInteger
INFO: dumping function: prime_init
INFO: dumping function: prime_return
INFO: dumping function: prime_divides
INFO: dumping function: llvm.dbg.declare
INFO: dumping function: prime_even
INFO: dumping function: prime_prime
INFO: dumping function: prime_swap
INFO: dumping function: prime_main
INFO: dumping function: main
INFO: dumping function: llvm.dbg.value
INFO: dumping function: _KLoad
INFO: dumping function: _KLoad0
INFO: dumping function: _KLoad1
INFO: dumping function: _KLoad2
INFO: dumping function: _KLoad3
INFO: dumping function: _KLoad4
INFO: dumping function: _KStore
INFO: dumping function: _KStoreConst
INFO: dumping function: _KEnqArgConst
INFO: dumping function: _KEnqArg
INFO: dumping function: _KPrepCall
INFO: dumping function: _KLinkReturn
INFO: dumping function: _KMalloc
INFO: dumping function: _KRealloc
INFO: dumping function: _KFree
INFO: dumping function: _KDeqArg
INFO: dumping function: _KReturnConst
INFO: dumping function: _KReturn
INFO: dumping function: _KWork
INFO: dumping function: _KPhi
INFO: dumping function: _KPhi1To1
INFO: dumping function: _KPhi2To1
INFO: dumping function: _KPhi3To1
INFO: dumping function: _KPhi4To1
INFO: dumping function: _KPhiAddCond
INFO: dumping function: _KInduction
INFO: dumping function: _KPushCDep
INFO: dumping function: _KPopCDep
INFO: dumping function: _KPrepRTable
INFO: dumping function: _KTimestamp
INFO: dumping function: _KTimestamp0
INFO: dumping function: _KTimestamp1
INFO: dumping function: _KTimestamp2
INFO: dumping function: _KTimestamp3
INFO: dumping function: _KTimestamp4
INFO: dumping function: _KTimestamp5
INFO: dumping function: _KTimestamp6
INFO: dumping function: _KTimestamp7
INFO: dumping function: _KInit
INFO: dumping function: _KDeinit
INFO: dumping function: _KEnterRegion
INFO: dumping function: _KExitRegion
INFO: dumping function: _KLandingPad
