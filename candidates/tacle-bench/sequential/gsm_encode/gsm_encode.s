	.text
	.file	"gsm_encode.simplifycfg.mem2reg.indvars.elimsinglephis.criticalpath.regioninstrument.renamemain.O3.bc"
	.section	.debug_info,"",@progbits
.Lsection_info:
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.section	.debug_line,"",@progbits
.Lsection_line:
	.section	.debug_pubnames,"",@progbits
	.section	.debug_pubtypes,"",@progbits
	.section	.debug_str,"MS",@progbits,1
.Linfo_string:
	.section	.debug_loc,"",@progbits
.Lsection_debug_loc:
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
	.file	1 "gsm_encode.c"
	.text
	.globl	gsm_sub
	.align	16, 0x90
	.type	gsm_sub,@function
gsm_sub:                                # @gsm_sub
.Lfunc_begin0:
	.loc	1 818 0                 # gsm_encode.c:818:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp0:
	.cfi_def_cfa_offset 16
.Ltmp1:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
.Ltmp3:
	.cfi_offset %rbx, -48
.Ltmp4:
	.cfi_offset %r12, -40
.Ltmp5:
	.cfi_offset %r14, -32
.Ltmp6:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_sub:a <- EDI
	#DEBUG_VALUE: gsm_sub:b <- ESI
	movl	%esi, %r12d
.Ltmp7:
	#DEBUG_VALUE: gsm_sub:b <- R12D
	movl	%edi, %ebx
.Ltmp8:
	#DEBUG_VALUE: gsm_sub:a <- EBX
	movabsq	$-1837313544132799554, %r14 # imm = 0xE6808D10ECF353BE
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$7, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$2, %edi
	callq	_KWork
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	.loc	1 819 19 prologue_end   # gsm_encode.c:819:19
.Ltmp9:
	movslq	%ebx, %rbx
.Ltmp10:
	.loc	1 819 33 is_stmt 0      # gsm_encode.c:819:33
	movslq	%r12d, %rax
	.loc	1 819 19                # gsm_encode.c:819:19
	subq	%rax, %rbx
.Ltmp11:
	#DEBUG_VALUE: gsm_sub:diff <- RBX
	movl	$6, %edi
	movl	$2, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	.loc	1 820 10 is_stmt 1      # gsm_encode.c:820:10
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movw	$-32768, %r12w          # imm = 0xFFFFFFFFFFFF8000
.Ltmp12:
	jl	.LBB0_2
.Ltmp13:
# BB#1:                                 # %cond.false
	#DEBUG_VALUE: gsm_sub:diff <- RBX
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$5, %r15d
	movl	$5, %edi
	movl	$2, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 820 10 is_stmt 0 discriminator 2 # gsm_encode.c:820:10
	cmpq	$32767, %rbx            # imm = 0x7FFF
	movw	$32767, %r12w           # imm = 0x7FFF
	cmovlew	%bx, %r12w
.Ltmp14:
.LBB0_2:                                # %cond.end7
	movl	$4, %edi
	movl	$6, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	.loc	1 820 3                 # gsm_encode.c:820:3
	movswl	%r12w, %eax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp15:
.Ltmp16:
	.size	gsm_sub, .Ltmp16-gsm_sub
.Lfunc_end0:
	.cfi_endproc

	.globl	gsm_encode
	.align	16, 0x90
	.type	gsm_encode,@function
gsm_encode:                             # @gsm_encode
.Lfunc_begin1:
	.loc	1 910 0 is_stmt 1       # gsm_encode.c:910:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp17:
	.cfi_def_cfa_offset 16
.Ltmp18:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp19:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$216, %rsp
.Ltmp20:
	.cfi_offset %rbx, -56
.Ltmp21:
	.cfi_offset %r12, -48
.Ltmp22:
	.cfi_offset %r13, -40
.Ltmp23:
	.cfi_offset %r14, -32
.Ltmp24:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_encode:s <- RDI
	#DEBUG_VALUE: gsm_encode:source <- RSI
	#DEBUG_VALUE: gsm_encode:c <- RDX
	movq	%rdx, %r13
.Ltmp25:
	#DEBUG_VALUE: gsm_encode:c <- R13
	movq	%rsi, %r15
.Ltmp26:
	#DEBUG_VALUE: gsm_encode:source <- R15
	movq	%rdi, %rbx
.Ltmp27:
	#DEBUG_VALUE: gsm_encode:s <- RBX
	movabsq	$1062016087337030260, %rdi # imm = 0xEBD0A012F795274
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$133, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$684, %edi              # imm = 0x2AC
	callq	_KWork
	movabsq	$2696064577941935422, %rdi # imm = 0x256A587303BE153E
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-208(%rbp), %rax
	.loc	1 913 3 prologue_end    # gsm_encode.c:913:3
.Ltmp28:
	movq	%rax, 8(%rsp)
	leaq	-96(%rbp), %rax
	movq	%rax, (%rsp)
	leaq	-64(%rbp), %r12
	leaq	-72(%rbp), %rcx
	leaq	-88(%rbp), %r8
	leaq	-80(%rbp), %r9
	movq	%rbx, %rdi
.Ltmp29:
	#DEBUG_VALUE: gsm_encode:s <- RDI
	movq	%r15, %rsi
.Ltmp30:
	#DEBUG_VALUE: gsm_encode:source <- RSI
	movq	%r12, %rdx
	callq	Gsm_Coder
	movl	$1, %esi
.Ltmp31:
	movl	$2, %edx
	movq	%r12, %rdi
.Ltmp32:
	callq	_KLoad0
	.loc	1 1004 9                # gsm_encode.c:1004:9
	movl	-64(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1004 8 is_stmt 0      # gsm_encode.c:1004:8
	andl	$15, %ebx
	.loc	1 1003 12 is_stmt 1     # gsm_encode.c:1003:12
	orl	$208, %ebx
	.loc	1 1003 4 is_stmt 0      # gsm_encode.c:1003:4
	leaq	1(%r13), %r15
.Ltmp33:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$2, %edi
	movl	$1, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	movl	$1, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 1003 3                # gsm_encode.c:1003:3
	movb	%bl, (%r13)
	movl	$3, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1005 14 is_stmt 1     # gsm_encode.c:1005:14
	movb	-64(%rbp), %bl
	.loc	1 1005 13 is_stmt 0     # gsm_encode.c:1005:13
	shlb	$6, %bl
	.loc	1 1006 8 is_stmt 1      # gsm_encode.c:1006:8
	leaq	-62(%rbp), %rdi
	movl	$4, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-62(%rbp), %r14b
	andb	$63, %r14b
	.loc	1 1005 12               # gsm_encode.c:1005:12
	orb	%bl, %r14b
	.loc	1 1005 4 is_stmt 0      # gsm_encode.c:1005:4
	leaq	2(%r13), %r12
.Ltmp34:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$5, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$3, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$5, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1005 3                # gsm_encode.c:1005:3
	movb	%r14b, 1(%r13)
	.loc	1 1007 14 is_stmt 1     # gsm_encode.c:1007:14
	leaq	-60(%rbp), %rdi
	movl	$6, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-60(%rbp), %r14d
	.loc	1 1007 13 is_stmt 0     # gsm_encode.c:1007:13
	shll	$3, %r14d
	.loc	1 1008 9 is_stmt 1      # gsm_encode.c:1008:9
	leaq	-58(%rbp), %r15
	movl	$7, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movzwl	-58(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1008 8 is_stmt 0      # gsm_encode.c:1008:8
	andl	$7, %ebx
	.loc	1 1007 12 is_stmt 1     # gsm_encode.c:1007:12
	orl	%r14d, %ebx
	.loc	1 1007 4 is_stmt 0      # gsm_encode.c:1007:4
	leaq	3(%r13), %rax
.Ltmp35:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$8, %edi
	movl	$6, %esi
	movl	$3, %edx
	movl	$7, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$8, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1007 3                # gsm_encode.c:1007:3
	movb	%bl, 2(%r13)
	movl	$9, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1009 14 is_stmt 1     # gsm_encode.c:1009:14
	movzwl	-58(%rbp), %r15d
	.loc	1 1009 13 is_stmt 0     # gsm_encode.c:1009:13
	shll	$6, %r15d
	.loc	1 1010 9 is_stmt 1      # gsm_encode.c:1010:9
	leaq	-56(%rbp), %rdi
	movl	$10, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-56(%rbp), %ebx
	.loc	1 1010 8 is_stmt 0      # gsm_encode.c:1010:8
	shll	$2, %ebx
	andl	$60, %ebx
	.loc	1 1009 12 is_stmt 1     # gsm_encode.c:1009:12
	orl	%r15d, %ebx
	.loc	1 1011 9                # gsm_encode.c:1011:9
	leaq	-54(%rbp), %r15
	movl	$11, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movzwl	-54(%rbp), %r14d
	shrl	$2, %r14d
	.loc	1 1011 8 is_stmt 0      # gsm_encode.c:1011:8
	andl	$3, %r14d
	.loc	1 1009 12 is_stmt 1     # gsm_encode.c:1009:12
	orl	%ebx, %r14d
	.loc	1 1009 4 is_stmt 0      # gsm_encode.c:1009:4
	leaq	4(%r13), %rax
.Ltmp36:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-224]
	movq	%rax, -224(%rbp)        # 8-byte Spill
	movl	$4, (%rsp)
	movl	$12, %edi
	movl	$11, %esi
	movl	$3, %edx
	movl	$10, %ecx
	movl	$4, %r8d
	movl	$9, %r9d
	callq	_KTimestamp3
	movl	$12, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1009 3                # gsm_encode.c:1009:3
	movb	%r14b, 3(%r13)
	movl	$13, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1012 14 is_stmt 1     # gsm_encode.c:1012:14
	movb	-54(%rbp), %r14b
	.loc	1 1012 13 is_stmt 0     # gsm_encode.c:1012:13
	shlb	$6, %r14b
	.loc	1 1013 9 is_stmt 1      # gsm_encode.c:1013:9
	leaq	-52(%rbp), %rdi
	movl	$14, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-52(%rbp), %bl
	.loc	1 1013 8 is_stmt 0      # gsm_encode.c:1013:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1012 12 is_stmt 1     # gsm_encode.c:1012:12
	orb	%r14b, %bl
	.loc	1 1014 8                # gsm_encode.c:1014:8
	leaq	-50(%rbp), %rdi
	movl	$15, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-50(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1012 12               # gsm_encode.c:1012:12
	orb	%bl, %r14b
	.loc	1 1012 4 is_stmt 0      # gsm_encode.c:1012:4
	leaq	5(%r13), %r12
.Ltmp37:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$2, (%rsp)
	movl	$16, %edi
	movl	$13, %esi
	movl	$4, %edx
	movl	$14, %ecx
	movl	$4, %r8d
	movl	$15, %r9d
	callq	_KTimestamp3
	movl	$16, %edi
	movl	$1, %edx
	movq	-224(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1012 3                # gsm_encode.c:1012:3
	movb	%r14b, 4(%r13)
	movl	$17, %esi
	movl	$2, %edx
	leaq	-72(%rbp), %rdi
	callq	_KLoad0
	.loc	1 1015 14 is_stmt 1     # gsm_encode.c:1015:14
	movzwl	-72(%rbp), %r14d
	.loc	1 1015 13 is_stmt 0     # gsm_encode.c:1015:13
	addl	%r14d, %r14d
	movl	$18, %esi
	movl	$2, %edx
	leaq	-88(%rbp), %r15
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1016 9 is_stmt 1      # gsm_encode.c:1016:9
	movzwl	-88(%rbp), %ebx
	shrl	%ebx
	.loc	1 1016 8 is_stmt 0      # gsm_encode.c:1016:8
	andl	$1, %ebx
	.loc	1 1015 12 is_stmt 1     # gsm_encode.c:1015:12
	orl	%r14d, %ebx
	.loc	1 1015 4 is_stmt 0      # gsm_encode.c:1015:4
	leaq	6(%r13), %rax
.Ltmp38:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-224]
	movq	%rax, -224(%rbp)        # 8-byte Spill
	movl	$19, %edi
	movl	$17, %esi
	movl	$3, %edx
	movl	$18, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$19, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1015 3                # gsm_encode.c:1015:3
	movb	%bl, 5(%r13)
	movl	$20, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1017 14 is_stmt 1     # gsm_encode.c:1017:14
	movzwl	-88(%rbp), %r14d
	.loc	1 1017 13 is_stmt 0     # gsm_encode.c:1017:13
	shll	$7, %r14d
	movl	$21, %esi
	movl	$2, %edx
	leaq	-80(%rbp), %rdi
	callq	_KLoad0
	.loc	1 1018 9 is_stmt 1      # gsm_encode.c:1018:9
	movzwl	-80(%rbp), %ebx
	.loc	1 1018 8 is_stmt 0      # gsm_encode.c:1018:8
	shll	$5, %ebx
	andl	$96, %ebx
	.loc	1 1017 12 is_stmt 1     # gsm_encode.c:1017:12
	orl	%r14d, %ebx
	movl	$22, %esi
	movl	$2, %edx
	leaq	-96(%rbp), %r14
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 1019 9                # gsm_encode.c:1019:9
	movzwl	-96(%rbp), %r12d
	shrl	%r12d
	.loc	1 1019 8 is_stmt 0      # gsm_encode.c:1019:8
	andl	$31, %r12d
	.loc	1 1017 12 is_stmt 1     # gsm_encode.c:1017:12
	orl	%ebx, %r12d
	.loc	1 1017 4 is_stmt 0      # gsm_encode.c:1017:4
	leaq	7(%r13), %rax
.Ltmp39:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$3, (%rsp)
	movl	$23, %edi
	movl	$20, %esi
	movl	$4, %edx
	movl	$21, %ecx
	movl	$4, %r8d
	movl	$22, %r9d
	callq	_KTimestamp3
	movl	$23, %edi
	movl	$1, %edx
	movq	-224(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1017 3                # gsm_encode.c:1017:3
	movb	%r12b, 6(%r13)
	movl	$24, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 1020 14 is_stmt 1     # gsm_encode.c:1020:14
	movzwl	-96(%rbp), %r15d
	.loc	1 1020 13 is_stmt 0     # gsm_encode.c:1020:13
	shll	$7, %r15d
	movl	$25, %esi
	movl	$2, %edx
	leaq	-208(%rbp), %rdi
	callq	_KLoad0
	.loc	1 1021 9 is_stmt 1      # gsm_encode.c:1021:9
	movl	-208(%rbp), %ebx
	.loc	1 1021 8 is_stmt 0      # gsm_encode.c:1021:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1020 12 is_stmt 1     # gsm_encode.c:1020:12
	orl	%r15d, %ebx
	.loc	1 1022 9                # gsm_encode.c:1022:9
	leaq	-206(%rbp), %rdi
	movl	$26, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-206(%rbp), %r12d
	.loc	1 1022 8 is_stmt 0      # gsm_encode.c:1022:8
	addl	%r12d, %r12d
	andl	$14, %r12d
	.loc	1 1020 12 is_stmt 1     # gsm_encode.c:1020:12
	orl	%ebx, %r12d
	.loc	1 1023 9                # gsm_encode.c:1023:9
	leaq	-204(%rbp), %r15
	movl	$27, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movl	-204(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1023 8 is_stmt 0      # gsm_encode.c:1023:8
	andl	$1, %ebx
	.loc	1 1020 12 is_stmt 1     # gsm_encode.c:1020:12
	orl	%r12d, %ebx
	.loc	1 1020 4 is_stmt 0      # gsm_encode.c:1020:4
	leaq	8(%r13), %r12
.Ltmp40:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$3, 16(%rsp)
	movl	$27, 8(%rsp)
	movl	$4, (%rsp)
	movl	$28, %edi
	movl	$25, %esi
	movl	$5, %edx
	movl	$24, %ecx
	movl	$5, %r8d
	movl	$26, %r9d
	callq	_KTimestamp4
	movl	$28, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1020 3                # gsm_encode.c:1020:3
	movb	%bl, 7(%r13)
	movl	$29, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1024 14 is_stmt 1     # gsm_encode.c:1024:14
	movb	-204(%rbp), %r14b
	.loc	1 1024 13 is_stmt 0     # gsm_encode.c:1024:13
	shlb	$6, %r14b
	.loc	1 1025 9 is_stmt 1      # gsm_encode.c:1025:9
	leaq	-202(%rbp), %rdi
	movl	$30, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-202(%rbp), %bl
	.loc	1 1025 8 is_stmt 0      # gsm_encode.c:1025:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1024 12 is_stmt 1     # gsm_encode.c:1024:12
	orb	%r14b, %bl
	.loc	1 1026 8                # gsm_encode.c:1026:8
	leaq	-200(%rbp), %rdi
	movl	$31, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-200(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1024 12               # gsm_encode.c:1024:12
	orb	%bl, %r14b
	.loc	1 1024 4 is_stmt 0      # gsm_encode.c:1024:4
	leaq	9(%r13), %r15
.Ltmp41:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$2, (%rsp)
	movl	$32, %edi
	movl	$29, %esi
	movl	$4, %edx
	movl	$30, %ecx
	movl	$4, %r8d
	movl	$31, %r9d
	callq	_KTimestamp3
	movl	$32, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1024 3                # gsm_encode.c:1024:3
	movb	%r14b, 8(%r13)
	.loc	1 1027 14 is_stmt 1     # gsm_encode.c:1027:14
	leaq	-198(%rbp), %rdi
	movl	$33, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-198(%rbp), %r14d
	.loc	1 1027 13 is_stmt 0     # gsm_encode.c:1027:13
	shll	$5, %r14d
	.loc	1 1028 9 is_stmt 1      # gsm_encode.c:1028:9
	leaq	-196(%rbp), %rdi
	movl	$34, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-196(%rbp), %ebx
	.loc	1 1028 8 is_stmt 0      # gsm_encode.c:1028:8
	shll	$2, %ebx
	andl	$28, %ebx
	.loc	1 1027 12 is_stmt 1     # gsm_encode.c:1027:12
	orl	%r14d, %ebx
	.loc	1 1029 9                # gsm_encode.c:1029:9
	leaq	-194(%rbp), %r12
	movl	$35, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-194(%rbp), %r14d
	shrl	%r14d
	.loc	1 1029 8 is_stmt 0      # gsm_encode.c:1029:8
	andl	$3, %r14d
	.loc	1 1027 12 is_stmt 1     # gsm_encode.c:1027:12
	orl	%ebx, %r14d
	.loc	1 1027 4 is_stmt 0      # gsm_encode.c:1027:4
	leaq	10(%r13), %rax
.Ltmp42:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$4, (%rsp)
	movl	$36, %edi
	movl	$35, %esi
	movl	$3, %edx
	movl	$34, %ecx
	movl	$4, %r8d
	movl	$33, %r9d
	callq	_KTimestamp3
	movl	$36, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1027 3                # gsm_encode.c:1027:3
	movb	%r14b, 9(%r13)
	movl	$37, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1030 14 is_stmt 1     # gsm_encode.c:1030:14
	movzwl	-194(%rbp), %r14d
	.loc	1 1030 13 is_stmt 0     # gsm_encode.c:1030:13
	shll	$7, %r14d
	.loc	1 1031 9 is_stmt 1      # gsm_encode.c:1031:9
	leaq	-192(%rbp), %rdi
	movl	$38, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-192(%rbp), %ebx
	.loc	1 1031 8 is_stmt 0      # gsm_encode.c:1031:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1030 12 is_stmt 1     # gsm_encode.c:1030:12
	orl	%r14d, %ebx
	.loc	1 1032 9                # gsm_encode.c:1032:9
	leaq	-190(%rbp), %rdi
	movl	$39, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-190(%rbp), %r14d
	.loc	1 1032 8 is_stmt 0      # gsm_encode.c:1032:8
	addl	%r14d, %r14d
	andl	$14, %r14d
	.loc	1 1030 12 is_stmt 1     # gsm_encode.c:1030:12
	orl	%ebx, %r14d
	.loc	1 1033 9                # gsm_encode.c:1033:9
	leaq	-188(%rbp), %r12
	movl	$40, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movl	-188(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1033 8 is_stmt 0      # gsm_encode.c:1033:8
	andl	$1, %ebx
	.loc	1 1030 12 is_stmt 1     # gsm_encode.c:1030:12
	orl	%r14d, %ebx
	.loc	1 1030 4 is_stmt 0      # gsm_encode.c:1030:4
	leaq	11(%r13), %r15
.Ltmp43:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$5, 16(%rsp)
	movl	$38, 8(%rsp)
	movl	$5, (%rsp)
	movl	$41, %edi
	movl	$40, %esi
	movl	$3, %edx
	movl	$39, %ecx
	movl	$4, %r8d
	movl	$37, %r9d
	callq	_KTimestamp4
	movl	$41, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1030 3                # gsm_encode.c:1030:3
	movb	%bl, 10(%r13)
	movl	$42, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1034 14 is_stmt 1     # gsm_encode.c:1034:14
	movb	-188(%rbp), %r14b
	.loc	1 1034 13 is_stmt 0     # gsm_encode.c:1034:13
	shlb	$6, %r14b
	.loc	1 1035 9 is_stmt 1      # gsm_encode.c:1035:9
	leaq	-186(%rbp), %rdi
	movl	$43, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-186(%rbp), %bl
	.loc	1 1035 8 is_stmt 0      # gsm_encode.c:1035:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1034 12 is_stmt 1     # gsm_encode.c:1034:12
	orb	%r14b, %bl
	.loc	1 1036 8                # gsm_encode.c:1036:8
	leaq	-184(%rbp), %rdi
	movl	$44, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-184(%rbp), %r12b
	andb	$7, %r12b
	.loc	1 1034 12               # gsm_encode.c:1034:12
	orb	%bl, %r12b
	.loc	1 1034 4 is_stmt 0      # gsm_encode.c:1034:4
	leaq	12(%r13), %r14
.Ltmp44:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$2, (%rsp)
	movl	$45, %edi
	movl	$42, %esi
	movl	$4, %edx
	movl	$43, %ecx
	movl	$4, %r8d
	movl	$44, %r9d
	callq	_KTimestamp3
	movl	$45, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1034 3                # gsm_encode.c:1034:3
	movb	%r12b, 11(%r13)
	.loc	1 1037 14 is_stmt 1     # gsm_encode.c:1037:14
	leaq	-70(%rbp), %rdi
	movl	$46, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-70(%rbp), %ebx
	.loc	1 1037 13 is_stmt 0     # gsm_encode.c:1037:13
	addl	%ebx, %ebx
	.loc	1 1038 9 is_stmt 1      # gsm_encode.c:1038:9
	leaq	-86(%rbp), %r12
	movl	$47, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-86(%rbp), %r15d
	shrl	%r15d
	.loc	1 1038 8 is_stmt 0      # gsm_encode.c:1038:8
	andl	$1, %r15d
	.loc	1 1037 12 is_stmt 1     # gsm_encode.c:1037:12
	orl	%ebx, %r15d
	.loc	1 1037 4 is_stmt 0      # gsm_encode.c:1037:4
	leaq	13(%r13), %rax
.Ltmp45:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$48, %edi
	movl	$46, %esi
	movl	$3, %edx
	movl	$47, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$48, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1037 3                # gsm_encode.c:1037:3
	movb	%r15b, 12(%r13)
	movl	$49, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1039 14 is_stmt 1     # gsm_encode.c:1039:14
	movzwl	-86(%rbp), %r14d
	.loc	1 1039 13 is_stmt 0     # gsm_encode.c:1039:13
	shll	$7, %r14d
	.loc	1 1040 9 is_stmt 1      # gsm_encode.c:1040:9
	leaq	-78(%rbp), %rdi
	movl	$50, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-78(%rbp), %ebx
	.loc	1 1040 8 is_stmt 0      # gsm_encode.c:1040:8
	shll	$5, %ebx
	andl	$96, %ebx
	.loc	1 1039 12 is_stmt 1     # gsm_encode.c:1039:12
	orl	%r14d, %ebx
	.loc	1 1041 9                # gsm_encode.c:1041:9
	leaq	-94(%rbp), %r12
	movl	$51, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-94(%rbp), %r15d
	shrl	%r15d
	.loc	1 1041 8 is_stmt 0      # gsm_encode.c:1041:8
	andl	$31, %r15d
	.loc	1 1039 12 is_stmt 1     # gsm_encode.c:1039:12
	orl	%ebx, %r15d
	.loc	1 1039 4 is_stmt 0      # gsm_encode.c:1039:4
	leaq	14(%r13), %r14
.Ltmp46:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$3, (%rsp)
	movl	$52, %edi
	movl	$49, %esi
	movl	$4, %edx
	movl	$50, %ecx
	movl	$4, %r8d
	movl	$51, %r9d
	callq	_KTimestamp3
	movl	$52, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1039 3                # gsm_encode.c:1039:3
	movb	%r15b, 13(%r13)
	movl	$53, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1042 14 is_stmt 1     # gsm_encode.c:1042:14
	movzwl	-94(%rbp), %r15d
	.loc	1 1042 13 is_stmt 0     # gsm_encode.c:1042:13
	shll	$7, %r15d
	.loc	1 1043 9 is_stmt 1      # gsm_encode.c:1043:9
	leaq	-182(%rbp), %rdi
	movl	$54, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-182(%rbp), %ebx
	.loc	1 1043 8 is_stmt 0      # gsm_encode.c:1043:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1042 12 is_stmt 1     # gsm_encode.c:1042:12
	orl	%r15d, %ebx
	.loc	1 1044 9                # gsm_encode.c:1044:9
	leaq	-180(%rbp), %rdi
	movl	$55, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-180(%rbp), %r12d
	.loc	1 1044 8 is_stmt 0      # gsm_encode.c:1044:8
	addl	%r12d, %r12d
	andl	$14, %r12d
	.loc	1 1042 12 is_stmt 1     # gsm_encode.c:1042:12
	orl	%ebx, %r12d
	.loc	1 1045 9                # gsm_encode.c:1045:9
	leaq	-178(%rbp), %r15
	movl	$56, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movzwl	-178(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1045 8 is_stmt 0      # gsm_encode.c:1045:8
	andl	$1, %ebx
	.loc	1 1042 12 is_stmt 1     # gsm_encode.c:1042:12
	orl	%r12d, %ebx
	.loc	1 1042 4 is_stmt 0      # gsm_encode.c:1042:4
	leaq	15(%r13), %r12
.Ltmp47:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$3, 16(%rsp)
	movl	$56, 8(%rsp)
	movl	$4, (%rsp)
	movl	$57, %edi
	movl	$53, %esi
	movl	$5, %edx
	movl	$54, %ecx
	movl	$5, %r8d
	movl	$55, %r9d
	callq	_KTimestamp4
	movl	$57, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1042 3                # gsm_encode.c:1042:3
	movb	%bl, 14(%r13)
	movl	$58, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1046 14 is_stmt 1     # gsm_encode.c:1046:14
	movb	-178(%rbp), %r14b
	.loc	1 1046 13 is_stmt 0     # gsm_encode.c:1046:13
	shlb	$6, %r14b
	.loc	1 1047 9 is_stmt 1      # gsm_encode.c:1047:9
	leaq	-176(%rbp), %rdi
	movl	$59, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-176(%rbp), %bl
	.loc	1 1047 8 is_stmt 0      # gsm_encode.c:1047:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1046 12 is_stmt 1     # gsm_encode.c:1046:12
	orb	%r14b, %bl
	.loc	1 1048 8                # gsm_encode.c:1048:8
	leaq	-174(%rbp), %rdi
	movl	$60, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-174(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1046 12               # gsm_encode.c:1046:12
	orb	%bl, %r14b
	.loc	1 1046 4 is_stmt 0      # gsm_encode.c:1046:4
	leaq	16(%r13), %r15
.Ltmp48:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$2, (%rsp)
	movl	$61, %edi
	movl	$58, %esi
	movl	$4, %edx
	movl	$59, %ecx
	movl	$4, %r8d
	movl	$60, %r9d
	callq	_KTimestamp3
	movl	$61, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1046 3                # gsm_encode.c:1046:3
	movb	%r14b, 15(%r13)
	.loc	1 1049 14 is_stmt 1     # gsm_encode.c:1049:14
	leaq	-172(%rbp), %rdi
	movl	$62, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-172(%rbp), %r14d
	.loc	1 1049 13 is_stmt 0     # gsm_encode.c:1049:13
	shll	$5, %r14d
	.loc	1 1050 9 is_stmt 1      # gsm_encode.c:1050:9
	leaq	-170(%rbp), %rdi
	movl	$63, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-170(%rbp), %ebx
	.loc	1 1050 8 is_stmt 0      # gsm_encode.c:1050:8
	shll	$2, %ebx
	andl	$28, %ebx
	.loc	1 1049 12 is_stmt 1     # gsm_encode.c:1049:12
	orl	%r14d, %ebx
	.loc	1 1051 9                # gsm_encode.c:1051:9
	leaq	-168(%rbp), %r12
	movl	$64, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movl	-168(%rbp), %r14d
	shrl	%r14d
	.loc	1 1051 8 is_stmt 0      # gsm_encode.c:1051:8
	andl	$3, %r14d
	.loc	1 1049 12 is_stmt 1     # gsm_encode.c:1049:12
	orl	%ebx, %r14d
	.loc	1 1049 4 is_stmt 0      # gsm_encode.c:1049:4
	leaq	17(%r13), %rax
.Ltmp49:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$3, (%rsp)
	movl	$65, %edi
	movl	$62, %esi
	movl	$4, %edx
	movl	$63, %ecx
	movl	$4, %r8d
	movl	$64, %r9d
	callq	_KTimestamp3
	movl	$65, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1049 3                # gsm_encode.c:1049:3
	movb	%r14b, 16(%r13)
	movl	$66, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1052 14 is_stmt 1     # gsm_encode.c:1052:14
	movl	-168(%rbp), %r14d
	.loc	1 1052 13 is_stmt 0     # gsm_encode.c:1052:13
	shll	$7, %r14d
	.loc	1 1053 9 is_stmt 1      # gsm_encode.c:1053:9
	leaq	-166(%rbp), %rdi
	movl	$67, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-166(%rbp), %ebx
	.loc	1 1053 8 is_stmt 0      # gsm_encode.c:1053:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1052 12 is_stmt 1     # gsm_encode.c:1052:12
	orl	%r14d, %ebx
	.loc	1 1054 9                # gsm_encode.c:1054:9
	leaq	-164(%rbp), %rdi
	movl	$68, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-164(%rbp), %r14d
	.loc	1 1054 8 is_stmt 0      # gsm_encode.c:1054:8
	addl	%r14d, %r14d
	andl	$14, %r14d
	.loc	1 1052 12 is_stmt 1     # gsm_encode.c:1052:12
	orl	%ebx, %r14d
	.loc	1 1055 9                # gsm_encode.c:1055:9
	leaq	-162(%rbp), %r12
	movl	$69, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-162(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1055 8 is_stmt 0      # gsm_encode.c:1055:8
	andl	$1, %ebx
	.loc	1 1052 12 is_stmt 1     # gsm_encode.c:1052:12
	orl	%r14d, %ebx
	.loc	1 1052 4 is_stmt 0      # gsm_encode.c:1052:4
	leaq	18(%r13), %r15
.Ltmp50:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$3, 16(%rsp)
	movl	$69, 8(%rsp)
	movl	$4, (%rsp)
	movl	$70, %edi
	movl	$66, %esi
	movl	$5, %edx
	movl	$67, %ecx
	movl	$5, %r8d
	movl	$68, %r9d
	callq	_KTimestamp4
	movl	$70, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1052 3                # gsm_encode.c:1052:3
	movb	%bl, 17(%r13)
	movl	$71, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1056 14 is_stmt 1     # gsm_encode.c:1056:14
	movb	-162(%rbp), %r14b
	.loc	1 1056 13 is_stmt 0     # gsm_encode.c:1056:13
	shlb	$6, %r14b
	.loc	1 1057 9 is_stmt 1      # gsm_encode.c:1057:9
	leaq	-160(%rbp), %rdi
	movl	$72, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-160(%rbp), %bl
	.loc	1 1057 8 is_stmt 0      # gsm_encode.c:1057:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1056 12 is_stmt 1     # gsm_encode.c:1056:12
	orb	%r14b, %bl
	.loc	1 1058 8                # gsm_encode.c:1058:8
	leaq	-158(%rbp), %rdi
	movl	$73, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-158(%rbp), %r12b
	andb	$7, %r12b
	.loc	1 1056 12               # gsm_encode.c:1056:12
	orb	%bl, %r12b
	.loc	1 1056 4 is_stmt 0      # gsm_encode.c:1056:4
	leaq	19(%r13), %r14
.Ltmp51:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$2, (%rsp)
	movl	$74, %edi
	movl	$71, %esi
	movl	$4, %edx
	movl	$72, %ecx
	movl	$4, %r8d
	movl	$73, %r9d
	callq	_KTimestamp3
	movl	$74, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1056 3                # gsm_encode.c:1056:3
	movb	%r12b, 18(%r13)
	.loc	1 1059 14 is_stmt 1     # gsm_encode.c:1059:14
	leaq	-68(%rbp), %rdi
	movl	$75, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-68(%rbp), %ebx
	.loc	1 1059 13 is_stmt 0     # gsm_encode.c:1059:13
	addl	%ebx, %ebx
	.loc	1 1060 9 is_stmt 1      # gsm_encode.c:1060:9
	leaq	-84(%rbp), %r12
	movl	$76, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-84(%rbp), %r15d
	shrl	%r15d
	.loc	1 1060 8 is_stmt 0      # gsm_encode.c:1060:8
	andl	$1, %r15d
	.loc	1 1059 12 is_stmt 1     # gsm_encode.c:1059:12
	orl	%ebx, %r15d
	.loc	1 1059 4 is_stmt 0      # gsm_encode.c:1059:4
	leaq	20(%r13), %rax
.Ltmp52:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$77, %edi
	movl	$76, %esi
	movl	$3, %edx
	movl	$75, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$77, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1059 3                # gsm_encode.c:1059:3
	movb	%r15b, 19(%r13)
	movl	$78, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1061 14 is_stmt 1     # gsm_encode.c:1061:14
	movzwl	-84(%rbp), %r14d
	.loc	1 1061 13 is_stmt 0     # gsm_encode.c:1061:13
	shll	$7, %r14d
	.loc	1 1062 9 is_stmt 1      # gsm_encode.c:1062:9
	leaq	-76(%rbp), %rdi
	movl	$79, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-76(%rbp), %ebx
	.loc	1 1062 8 is_stmt 0      # gsm_encode.c:1062:8
	shll	$5, %ebx
	andl	$96, %ebx
	.loc	1 1061 12 is_stmt 1     # gsm_encode.c:1061:12
	orl	%r14d, %ebx
	.loc	1 1063 9                # gsm_encode.c:1063:9
	leaq	-92(%rbp), %r12
	movl	$80, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-92(%rbp), %r15d
	shrl	%r15d
	.loc	1 1063 8 is_stmt 0      # gsm_encode.c:1063:8
	andl	$31, %r15d
	.loc	1 1061 12 is_stmt 1     # gsm_encode.c:1061:12
	orl	%ebx, %r15d
	.loc	1 1061 4 is_stmt 0      # gsm_encode.c:1061:4
	leaq	21(%r13), %r14
.Ltmp53:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$3, (%rsp)
	movl	$81, %edi
	movl	$78, %esi
	movl	$4, %edx
	movl	$79, %ecx
	movl	$4, %r8d
	movl	$80, %r9d
	callq	_KTimestamp3
	movl	$81, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1061 3                # gsm_encode.c:1061:3
	movb	%r15b, 20(%r13)
	movl	$82, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1064 14 is_stmt 1     # gsm_encode.c:1064:14
	movzwl	-92(%rbp), %r15d
	.loc	1 1064 13 is_stmt 0     # gsm_encode.c:1064:13
	shll	$7, %r15d
	.loc	1 1065 9 is_stmt 1      # gsm_encode.c:1065:9
	leaq	-156(%rbp), %rdi
	movl	$83, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-156(%rbp), %ebx
	.loc	1 1065 8 is_stmt 0      # gsm_encode.c:1065:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1064 12 is_stmt 1     # gsm_encode.c:1064:12
	orl	%r15d, %ebx
	.loc	1 1066 9                # gsm_encode.c:1066:9
	leaq	-154(%rbp), %rdi
	movl	$84, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-154(%rbp), %r12d
	.loc	1 1066 8 is_stmt 0      # gsm_encode.c:1066:8
	addl	%r12d, %r12d
	andl	$14, %r12d
	.loc	1 1064 12 is_stmt 1     # gsm_encode.c:1064:12
	orl	%ebx, %r12d
	.loc	1 1067 9                # gsm_encode.c:1067:9
	leaq	-152(%rbp), %r15
	movl	$85, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movl	-152(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1067 8 is_stmt 0      # gsm_encode.c:1067:8
	andl	$1, %ebx
	.loc	1 1064 12 is_stmt 1     # gsm_encode.c:1064:12
	orl	%r12d, %ebx
	.loc	1 1064 4 is_stmt 0      # gsm_encode.c:1064:4
	leaq	22(%r13), %r12
.Ltmp54:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$4, 16(%rsp)
	movl	$84, 8(%rsp)
	movl	$5, (%rsp)
	movl	$86, %edi
	movl	$83, %esi
	movl	$5, %edx
	movl	$85, %ecx
	movl	$3, %r8d
	movl	$82, %r9d
	callq	_KTimestamp4
	movl	$86, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1064 3                # gsm_encode.c:1064:3
	movb	%bl, 21(%r13)
	movl	$87, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1068 14 is_stmt 1     # gsm_encode.c:1068:14
	movb	-152(%rbp), %r14b
	.loc	1 1068 13 is_stmt 0     # gsm_encode.c:1068:13
	shlb	$6, %r14b
	.loc	1 1069 9 is_stmt 1      # gsm_encode.c:1069:9
	leaq	-150(%rbp), %rdi
	movl	$88, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-150(%rbp), %bl
	.loc	1 1069 8 is_stmt 0      # gsm_encode.c:1069:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1068 12 is_stmt 1     # gsm_encode.c:1068:12
	orb	%r14b, %bl
	.loc	1 1070 8                # gsm_encode.c:1070:8
	leaq	-148(%rbp), %rdi
	movl	$89, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-148(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1068 12               # gsm_encode.c:1068:12
	orb	%bl, %r14b
	.loc	1 1068 4 is_stmt 0      # gsm_encode.c:1068:4
	leaq	23(%r13), %r15
.Ltmp55:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$4, (%rsp)
	movl	$90, %edi
	movl	$89, %esi
	movl	$2, %edx
	movl	$88, %ecx
	movl	$4, %r8d
	movl	$87, %r9d
	callq	_KTimestamp3
	movl	$90, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1068 3                # gsm_encode.c:1068:3
	movb	%r14b, 22(%r13)
	.loc	1 1071 14 is_stmt 1     # gsm_encode.c:1071:14
	leaq	-146(%rbp), %rdi
	movl	$91, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-146(%rbp), %r14d
	.loc	1 1071 13 is_stmt 0     # gsm_encode.c:1071:13
	shll	$5, %r14d
	.loc	1 1072 9 is_stmt 1      # gsm_encode.c:1072:9
	leaq	-144(%rbp), %rdi
	movl	$92, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-144(%rbp), %ebx
	.loc	1 1072 8 is_stmt 0      # gsm_encode.c:1072:8
	shll	$2, %ebx
	andl	$28, %ebx
	.loc	1 1071 12 is_stmt 1     # gsm_encode.c:1071:12
	orl	%r14d, %ebx
	.loc	1 1073 9                # gsm_encode.c:1073:9
	leaq	-142(%rbp), %r12
	movl	$93, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-142(%rbp), %r14d
	shrl	%r14d
	.loc	1 1073 8 is_stmt 0      # gsm_encode.c:1073:8
	andl	$3, %r14d
	.loc	1 1071 12 is_stmt 1     # gsm_encode.c:1071:12
	orl	%ebx, %r14d
	.loc	1 1071 4 is_stmt 0      # gsm_encode.c:1071:4
	leaq	24(%r13), %rax
.Ltmp56:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$4, (%rsp)
	movl	$94, %edi
	movl	$91, %esi
	movl	$4, %edx
	movl	$93, %ecx
	movl	$3, %r8d
	movl	$92, %r9d
	callq	_KTimestamp3
	movl	$94, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1071 3                # gsm_encode.c:1071:3
	movb	%r14b, 23(%r13)
	movl	$95, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1074 14 is_stmt 1     # gsm_encode.c:1074:14
	movzwl	-142(%rbp), %r14d
	.loc	1 1074 13 is_stmt 0     # gsm_encode.c:1074:13
	shll	$7, %r14d
	.loc	1 1075 9 is_stmt 1      # gsm_encode.c:1075:9
	leaq	-140(%rbp), %rdi
	movl	$96, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-140(%rbp), %ebx
	.loc	1 1075 8 is_stmt 0      # gsm_encode.c:1075:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1074 12 is_stmt 1     # gsm_encode.c:1074:12
	orl	%r14d, %ebx
	.loc	1 1076 9                # gsm_encode.c:1076:9
	leaq	-138(%rbp), %rdi
	movl	$97, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-138(%rbp), %r14d
	.loc	1 1076 8 is_stmt 0      # gsm_encode.c:1076:8
	addl	%r14d, %r14d
	andl	$14, %r14d
	.loc	1 1074 12 is_stmt 1     # gsm_encode.c:1074:12
	orl	%ebx, %r14d
	.loc	1 1077 9                # gsm_encode.c:1077:9
	leaq	-136(%rbp), %r12
	movl	$98, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movl	-136(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1077 8 is_stmt 0      # gsm_encode.c:1077:8
	andl	$1, %ebx
	.loc	1 1074 12 is_stmt 1     # gsm_encode.c:1074:12
	orl	%r14d, %ebx
	.loc	1 1074 4 is_stmt 0      # gsm_encode.c:1074:4
	leaq	25(%r13), %r15
.Ltmp57:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$3, 16(%rsp)
	movl	$98, 8(%rsp)
	movl	$5, (%rsp)
	movl	$99, %edi
	movl	$97, %esi
	movl	$4, %edx
	movl	$96, %ecx
	movl	$5, %r8d
	movl	$95, %r9d
	callq	_KTimestamp4
	movl	$99, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1074 3                # gsm_encode.c:1074:3
	movb	%bl, 24(%r13)
	movl	$100, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1078 14 is_stmt 1     # gsm_encode.c:1078:14
	movb	-136(%rbp), %r14b
	.loc	1 1078 13 is_stmt 0     # gsm_encode.c:1078:13
	shlb	$6, %r14b
	.loc	1 1079 9 is_stmt 1      # gsm_encode.c:1079:9
	leaq	-134(%rbp), %rdi
	movl	$101, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-134(%rbp), %bl
	.loc	1 1079 8 is_stmt 0      # gsm_encode.c:1079:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1078 12 is_stmt 1     # gsm_encode.c:1078:12
	orb	%r14b, %bl
	.loc	1 1080 8                # gsm_encode.c:1080:8
	leaq	-132(%rbp), %rdi
	movl	$102, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-132(%rbp), %r12b
	andb	$7, %r12b
	.loc	1 1078 12               # gsm_encode.c:1078:12
	orb	%bl, %r12b
	.loc	1 1078 4 is_stmt 0      # gsm_encode.c:1078:4
	leaq	26(%r13), %r14
.Ltmp58:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$4, (%rsp)
	movl	$103, %edi
	movl	$102, %esi
	movl	$2, %edx
	movl	$100, %ecx
	movl	$4, %r8d
	movl	$101, %r9d
	callq	_KTimestamp3
	movl	$103, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1078 3                # gsm_encode.c:1078:3
	movb	%r12b, 25(%r13)
	.loc	1 1081 14 is_stmt 1     # gsm_encode.c:1081:14
	leaq	-66(%rbp), %rdi
	movl	$104, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-66(%rbp), %ebx
	.loc	1 1081 13 is_stmt 0     # gsm_encode.c:1081:13
	addl	%ebx, %ebx
	.loc	1 1082 9 is_stmt 1      # gsm_encode.c:1082:9
	leaq	-82(%rbp), %r12
	movl	$105, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-82(%rbp), %r15d
	shrl	%r15d
	.loc	1 1082 8 is_stmt 0      # gsm_encode.c:1082:8
	andl	$1, %r15d
	.loc	1 1081 12 is_stmt 1     # gsm_encode.c:1081:12
	orl	%ebx, %r15d
	.loc	1 1081 4 is_stmt 0      # gsm_encode.c:1081:4
	leaq	27(%r13), %rax
.Ltmp59:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$106, %edi
	movl	$104, %esi
	movl	$3, %edx
	movl	$105, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$106, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1081 3                # gsm_encode.c:1081:3
	movb	%r15b, 26(%r13)
	movl	$107, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1083 14 is_stmt 1     # gsm_encode.c:1083:14
	movzwl	-82(%rbp), %r14d
	.loc	1 1083 13 is_stmt 0     # gsm_encode.c:1083:13
	shll	$7, %r14d
	.loc	1 1084 9 is_stmt 1      # gsm_encode.c:1084:9
	leaq	-74(%rbp), %rdi
	movl	$108, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-74(%rbp), %ebx
	.loc	1 1084 8 is_stmt 0      # gsm_encode.c:1084:8
	shll	$5, %ebx
	andl	$96, %ebx
	.loc	1 1083 12 is_stmt 1     # gsm_encode.c:1083:12
	orl	%r14d, %ebx
	.loc	1 1085 9                # gsm_encode.c:1085:9
	leaq	-90(%rbp), %r12
	movl	$109, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-90(%rbp), %r15d
	shrl	%r15d
	.loc	1 1085 8 is_stmt 0      # gsm_encode.c:1085:8
	andl	$31, %r15d
	.loc	1 1083 12 is_stmt 1     # gsm_encode.c:1083:12
	orl	%ebx, %r15d
	.loc	1 1083 4 is_stmt 0      # gsm_encode.c:1083:4
	leaq	28(%r13), %r14
.Ltmp60:
	#DEBUG_VALUE: gsm_encode:c <- R14
	movl	$3, (%rsp)
	movl	$110, %edi
	movl	$107, %esi
	movl	$4, %edx
	movl	$108, %ecx
	movl	$4, %r8d
	movl	$109, %r9d
	callq	_KTimestamp3
	movl	$110, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1083 3                # gsm_encode.c:1083:3
	movb	%r15b, 27(%r13)
	movl	$111, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1086 14 is_stmt 1     # gsm_encode.c:1086:14
	movzwl	-90(%rbp), %r15d
	.loc	1 1086 13 is_stmt 0     # gsm_encode.c:1086:13
	shll	$7, %r15d
	.loc	1 1087 9 is_stmt 1      # gsm_encode.c:1087:9
	leaq	-130(%rbp), %rdi
	movl	$112, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-130(%rbp), %ebx
	.loc	1 1087 8 is_stmt 0      # gsm_encode.c:1087:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1086 12 is_stmt 1     # gsm_encode.c:1086:12
	orl	%r15d, %ebx
	.loc	1 1088 9                # gsm_encode.c:1088:9
	leaq	-128(%rbp), %rdi
	movl	$113, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-128(%rbp), %r12d
	.loc	1 1088 8 is_stmt 0      # gsm_encode.c:1088:8
	addl	%r12d, %r12d
	andl	$14, %r12d
	.loc	1 1086 12 is_stmt 1     # gsm_encode.c:1086:12
	orl	%ebx, %r12d
	.loc	1 1089 9                # gsm_encode.c:1089:9
	leaq	-126(%rbp), %r15
	movl	$114, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movzwl	-126(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1089 8 is_stmt 0      # gsm_encode.c:1089:8
	andl	$1, %ebx
	.loc	1 1086 12 is_stmt 1     # gsm_encode.c:1086:12
	orl	%r12d, %ebx
	.loc	1 1086 4 is_stmt 0      # gsm_encode.c:1086:4
	leaq	29(%r13), %r12
.Ltmp61:
	#DEBUG_VALUE: gsm_encode:c <- R12
	movl	$3, 16(%rsp)
	movl	$114, 8(%rsp)
	movl	$4, (%rsp)
	movl	$115, %edi
	movl	$111, %esi
	movl	$5, %edx
	movl	$112, %ecx
	movl	$5, %r8d
	movl	$113, %r9d
	callq	_KTimestamp4
	movl	$115, %edi
	movl	$1, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1086 3                # gsm_encode.c:1086:3
	movb	%bl, 28(%r13)
	movl	$116, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1090 14 is_stmt 1     # gsm_encode.c:1090:14
	movb	-126(%rbp), %r14b
	.loc	1 1090 13 is_stmt 0     # gsm_encode.c:1090:13
	shlb	$6, %r14b
	.loc	1 1091 9 is_stmt 1      # gsm_encode.c:1091:9
	leaq	-124(%rbp), %rdi
	movl	$117, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-124(%rbp), %bl
	.loc	1 1091 8 is_stmt 0      # gsm_encode.c:1091:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1090 12 is_stmt 1     # gsm_encode.c:1090:12
	orb	%r14b, %bl
	.loc	1 1092 8                # gsm_encode.c:1092:8
	leaq	-122(%rbp), %rdi
	movl	$118, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-122(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1090 12               # gsm_encode.c:1090:12
	orb	%bl, %r14b
	.loc	1 1090 4 is_stmt 0      # gsm_encode.c:1090:4
	leaq	30(%r13), %r15
.Ltmp62:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$2, (%rsp)
	movl	$119, %edi
	movl	$116, %esi
	movl	$4, %edx
	movl	$117, %ecx
	movl	$4, %r8d
	movl	$118, %r9d
	callq	_KTimestamp3
	movl	$119, %edi
	movl	$1, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 1090 3                # gsm_encode.c:1090:3
	movb	%r14b, 29(%r13)
	.loc	1 1093 14 is_stmt 1     # gsm_encode.c:1093:14
	leaq	-120(%rbp), %rdi
	movl	$120, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-120(%rbp), %r14d
	.loc	1 1093 13 is_stmt 0     # gsm_encode.c:1093:13
	shll	$5, %r14d
	.loc	1 1094 9 is_stmt 1      # gsm_encode.c:1094:9
	leaq	-118(%rbp), %rdi
	movl	$121, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-118(%rbp), %ebx
	.loc	1 1094 8 is_stmt 0      # gsm_encode.c:1094:8
	shll	$2, %ebx
	andl	$28, %ebx
	.loc	1 1093 12 is_stmt 1     # gsm_encode.c:1093:12
	orl	%r14d, %ebx
	.loc	1 1095 9                # gsm_encode.c:1095:9
	leaq	-116(%rbp), %r12
	movl	$122, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movl	-116(%rbp), %r14d
	shrl	%r14d
	.loc	1 1095 8 is_stmt 0      # gsm_encode.c:1095:8
	andl	$3, %r14d
	.loc	1 1093 12 is_stmt 1     # gsm_encode.c:1093:12
	orl	%ebx, %r14d
	.loc	1 1093 4 is_stmt 0      # gsm_encode.c:1093:4
	leaq	31(%r13), %rax
.Ltmp63:
	#DEBUG_VALUE: gsm_encode:c <- [RBP+-216]
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$3, (%rsp)
	movl	$123, %edi
	movl	$120, %esi
	movl	$4, %edx
	movl	$121, %ecx
	movl	$4, %r8d
	movl	$122, %r9d
	callq	_KTimestamp3
	movl	$123, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1093 3                # gsm_encode.c:1093:3
	movb	%r14b, 30(%r13)
	movl	$124, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1096 14 is_stmt 1     # gsm_encode.c:1096:14
	movl	-116(%rbp), %r14d
	.loc	1 1096 13 is_stmt 0     # gsm_encode.c:1096:13
	shll	$7, %r14d
	.loc	1 1097 9 is_stmt 1      # gsm_encode.c:1097:9
	leaq	-114(%rbp), %rdi
	movl	$125, %esi
	movl	$2, %edx
	callq	_KLoad0
	movzwl	-114(%rbp), %ebx
	.loc	1 1097 8 is_stmt 0      # gsm_encode.c:1097:8
	shll	$4, %ebx
	andl	$112, %ebx
	.loc	1 1096 12 is_stmt 1     # gsm_encode.c:1096:12
	orl	%r14d, %ebx
	.loc	1 1098 9                # gsm_encode.c:1098:9
	leaq	-112(%rbp), %rdi
	movl	$126, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	-112(%rbp), %r14d
	.loc	1 1098 8 is_stmt 0      # gsm_encode.c:1098:8
	addl	%r14d, %r14d
	andl	$14, %r14d
	.loc	1 1096 12 is_stmt 1     # gsm_encode.c:1096:12
	orl	%ebx, %r14d
	.loc	1 1099 9                # gsm_encode.c:1099:9
	leaq	-110(%rbp), %r12
	movl	$127, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	movzwl	-110(%rbp), %ebx
	shrl	$2, %ebx
	.loc	1 1099 8 is_stmt 0      # gsm_encode.c:1099:8
	andl	$1, %ebx
	.loc	1 1096 12 is_stmt 1     # gsm_encode.c:1096:12
	orl	%r14d, %ebx
	.loc	1 1096 4 is_stmt 0      # gsm_encode.c:1096:4
	leaq	32(%r13), %r15
.Ltmp64:
	#DEBUG_VALUE: gsm_encode:c <- R15
	movl	$3, 16(%rsp)
	movl	$127, 8(%rsp)
	movl	$4, (%rsp)
	movl	$128, %edi
	movl	$124, %esi
	movl	$5, %edx
	movl	$125, %ecx
	movl	$5, %r8d
	movl	$126, %r9d
	callq	_KTimestamp4
	movl	$128, %edi
	movl	$1, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 1096 3                # gsm_encode.c:1096:3
	movb	%bl, 31(%r13)
	movl	$129, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1100 14 is_stmt 1     # gsm_encode.c:1100:14
	movb	-110(%rbp), %r14b
	.loc	1 1100 13 is_stmt 0     # gsm_encode.c:1100:13
	shlb	$6, %r14b
	.loc	1 1101 9 is_stmt 1      # gsm_encode.c:1101:9
	leaq	-108(%rbp), %rdi
	movl	$130, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-108(%rbp), %bl
	.loc	1 1101 8 is_stmt 0      # gsm_encode.c:1101:8
	shlb	$3, %bl
	andb	$56, %bl
	.loc	1 1100 12 is_stmt 1     # gsm_encode.c:1100:12
	orb	%r14b, %bl
	.loc	1 1102 8                # gsm_encode.c:1102:8
	leaq	-106(%rbp), %rdi
	movl	$131, %esi
	movl	$2, %edx
	callq	_KLoad0
	movb	-106(%rbp), %r14b
	andb	$7, %r14b
	.loc	1 1100 12               # gsm_encode.c:1100:12
	orb	%bl, %r14b
	movl	$4, (%rsp)
	movl	$132, %edi
	movl	$130, %esi
	movl	$4, %edx
	movl	$131, %ecx
	movl	$2, %r8d
	movl	$129, %r9d
	callq	_KTimestamp3
	movl	$132, %edi
	movl	$1, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1100 3 is_stmt 0      # gsm_encode.c:1100:3
	movb	%r14b, 32(%r13)
	xorl	%esi, %esi
	movabsq	$1062016087337030260, %rdi # imm = 0xEBD0A012F795274
	callq	_KExitRegion
	.loc	1 1104 1 is_stmt 1      # gsm_encode.c:1104:1
	addq	$216, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
.Ltmp65:
	popq	%rbp
	retq
.Ltmp66:
.Ltmp67:
	.size	gsm_encode, .Ltmp67-gsm_encode
.Lfunc_end1:
	.cfi_endproc

	.globl	Gsm_Coder
	.align	16, 0x90
	.type	Gsm_Coder,@function
Gsm_Coder:                              # @Gsm_Coder
.Lfunc_begin2:
	.loc	1 1170 0                # gsm_encode.c:1170:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp68:
	.cfi_def_cfa_offset 16
.Ltmp69:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp70:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$424, %rsp              # imm = 0x1A8
.Ltmp71:
	.cfi_offset %rbx, -56
.Ltmp72:
	.cfi_offset %r12, -48
.Ltmp73:
	.cfi_offset %r13, -40
.Ltmp74:
	.cfi_offset %r14, -32
.Ltmp75:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_Coder:S <- RDI
	#DEBUG_VALUE: Gsm_Coder:s <- RSI
	#DEBUG_VALUE: Gsm_Coder:LARc <- RDX
	#DEBUG_VALUE: Gsm_Coder:Nc <- RCX
	#DEBUG_VALUE: Gsm_Coder:bc <- R8
	#DEBUG_VALUE: Gsm_Coder:Mc <- R9
	movq	%r9, -432(%rbp)         # 8-byte Spill
.Ltmp76:
	#DEBUG_VALUE: Gsm_Coder:Mc <- [RBP+-432]
	movq	%r8, -392(%rbp)         # 8-byte Spill
.Ltmp77:
	#DEBUG_VALUE: Gsm_Coder:bc <- [RBP+-392]
	movq	%rcx, -400(%rbp)        # 8-byte Spill
.Ltmp78:
	#DEBUG_VALUE: Gsm_Coder:Nc <- [RBP+-400]
	movq	%rdx, %r14
.Ltmp79:
	#DEBUG_VALUE: Gsm_Coder:LARc <- R14
	movq	%rsi, %r12
.Ltmp80:
	#DEBUG_VALUE: Gsm_Coder:s <- R12
	movq	%rdi, %rbx
.Ltmp81:
	#DEBUG_VALUE: Gsm_Coder:S <- RBX
	movq	24(%rbp), %rax
	#DEBUG_VALUE: Gsm_Coder:xMc <- [RBP+-440]
	movq	%rax, -440(%rbp)        # 8-byte Spill
	movq	16(%rbp), %rax
	#DEBUG_VALUE: Gsm_Coder:xmaxc <- [RBP+-448]
	movq	%rax, -448(%rbp)        # 8-byte Spill
	movabsq	$3318007903081931661, %rdi # imm = 0x2E0BEE9BB923238D
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$32, %edi
	movl	$4, %esi
	callq	_KPrepRTable
	.loc	1 1172 16 prologue_end  # gsm_encode.c:1172:16
.Ltmp82:
	leaq	240(%rbx), %rax
.Ltmp83:
	#DEBUG_VALUE: Gsm_Coder:dpp <- [RBP+-384]
	#DEBUG_VALUE: Gsm_Coder:dp <- [RBP+-384]
	movq	%rax, -384(%rbp)        # 8-byte Spill
	movabsq	$-9057509033977758951, %rdi # imm = 0x824D4385B7DD3B19
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-368(%rbp), %r13
	.loc	1 1179 3                # gsm_encode.c:1179:3
	movq	%rbx, %rdi
	movq	%r12, %rsi
.Ltmp84:
	#DEBUG_VALUE: Gsm_Coder:s <- RSI
	movq	-392(%rbp), %r12        # 8-byte Reload
.Ltmp85:
	#DEBUG_VALUE: Gsm_Coder:bc <- R12
	movq	%r13, %rdx
	callq	Gsm_Preprocess
	movabsq	$7882443584141119605, %rdi # imm = 0x6D6410AD42C9D075
	xorl	%esi, %esi
.Ltmp86:
	callq	_KPrepCall
	.loc	1 1180 3                # gsm_encode.c:1180:3
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	Gsm_LPC_Analysis
	movabsq	$-306889968346906241, %rdi # imm = 0xFBBDB533238D417F
	xorl	%esi, %esi
	callq	_KPrepCall
	.loc	1 1181 3                # gsm_encode.c:1181:3
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	movq	-400(%rbp), %r13        # 8-byte Reload
.Ltmp87:
	#DEBUG_VALUE: Gsm_Coder:Nc <- R13
	callq	Gsm_Short_Term_Analysis_Filter
.Ltmp88:
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	movl	$11, -376(%rbp)         # 4-byte Folded Spill
	movl	$11, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	callq	_KInduction
	movl	$14, %r14d
.Ltmp89:
	movl	$14, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$23, -416(%rbp)         # 4-byte Folded Spill
	movl	$23, %edi
	movl	$23, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$17, -420(%rbp)         # 4-byte Folded Spill
	movl	$17, %edi
	movl	$17, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$20, -408(%rbp)         # 4-byte Folded Spill
	movl	$20, %edi
	movl	$20, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$26, -412(%rbp)         # 4-byte Folded Spill
	movl	$26, %edi
	movl	$27, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$-87793293092566331, %rdi # imm = 0xFEC818770F8E4AC5
	callq	_KEnterRegion
	movl	$0, %ebx
.Ltmp90:
	jmp	.LBB2_1
.Ltmp91:
	.align	16, 0x90
.LBB2_6:                                # %for.cond9.pre_exit.for.end
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	movq	-400(%rbp), %r13        # 8-byte Reload
	.loc	1 1191 2                # gsm_encode.c:1191:2
.Ltmp92:
	addq	$2, %r13
.Ltmp93:
	#DEBUG_VALUE: Gsm_Coder:Nc <- R13
	.loc	1 1196 2                # gsm_encode.c:1196:2
	addq	$2, -448(%rbp)          # 8-byte Folded Spill
	#DEBUG_VALUE: Gsm_Coder:xmaxc <- [RBP+-448]
	movl	$1, %esi
	movabsq	$33458916742522398, %rdi # imm = 0x76DEB51F01E61E
	callq	_KExitRegion
	movl	$5, %ebx
	movl	$5, %edi
	callq	_KPushCDep
	movq	-392(%rbp), %r12        # 8-byte Reload
	.loc	1 1192 2                # gsm_encode.c:1192:2
	addq	$2, %r12
.Ltmp94:
	#DEBUG_VALUE: Gsm_Coder:bc <- R12
	.loc	1 1196 11               # gsm_encode.c:1196:11
	addq	$2, -432(%rbp)          # 8-byte Folded Spill
	#DEBUG_VALUE: Gsm_Coder:Mc <- [RBP+-432]
.Ltmp95:
	#DEBUG_VALUE: Gsm_Coder:Mc <- undef
	.loc	1 1210 5                # gsm_encode.c:1210:5
	addq	$80, -384(%rbp)         # 8-byte Folded Spill
	#DEBUG_VALUE: Gsm_Coder:dpp <- [RBP+-384]
	#DEBUG_VALUE: Gsm_Coder:dp <- [RBP+-384]
	movq	-408(%rbp), %r15        # 8-byte Reload
.Ltmp96:
	.loc	1 1184 3                # gsm_encode.c:1184:3
	incq	%r15
	.loc	1 1184 28 is_stmt 0     # gsm_encode.c:1184:28
	addq	$26, -440(%rbp)         # 8-byte Folded Spill
	#DEBUG_VALUE: Gsm_Coder:xMc <- [RBP+-440]
	movl	$21, -408(%rbp)         # 4-byte Folded Spill
	movl	$21, %edi
	movl	$19, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$28, -412(%rbp)         # 4-byte Folded Spill
	movl	$28, %edi
	movl	$25, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$18, -420(%rbp)         # 4-byte Folded Spill
	movl	$18, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$12, -376(%rbp)         # 4-byte Folded Spill
	movl	$12, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$596613191656324185, %rdi # imm = 0x84798896CFCBC59
	callq	_KExitRegion
	movl	$24, -416(%rbp)         # 4-byte Folded Spill
	movl	$15, %r14d
.Ltmp97:
.LBB2_1:                                # %for.cond
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_3 Depth 2
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	movl	$16, %edi
	movl	-420(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$13, %edi
	movl	%r14d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$19, %edi
	movl	-408(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$25, %edi
	movl	-412(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$22, %edi
	movl	-416(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$10, %edi
	movl	-376(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$6, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$25, %edi
	movl	$25, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$13, %edi
	movl	$13, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$22, %edi
	movl	$22, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$22, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$25, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$19, %edi
	movl	$19, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$10, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$19, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$13, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	.loc	1 1184 3                # gsm_encode.c:1184:3
	cmpq	$4, %r15
	je	.LBB2_7
# BB#2:                                 # %for.body
                                        #   in Loop: Header=BB2_1 Depth=1
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	movl	$2, %esi
	movabsq	$596613191656324185, %rdi # imm = 0x84798896CFCBC59
	callq	_KEnterRegion
	movl	$5, %edi
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
	.loc	1 1187 5 is_stmt 1      # gsm_encode.c:1187:5
.Ltmp98:
	leaq	(,%r15,8), %rax
	movq	%r15, -408(%rbp)        # 8-byte Spill
	leaq	(%rax,%rax,4), %rax
	.loc	1 1187 2 is_stmt 0      # gsm_encode.c:1187:2
	leaq	-368(%rbp,%rax,2), %rbx
	xorl	%esi, %esi
	movabsq	$5485572820393866992, %rdi # imm = 0x4C20AB6A951D36F0
	callq	_KPrepCall
	.loc	1 1186 5 is_stmt 1      # gsm_encode.c:1186:5
	movq	%r12, (%rsp)
	movq	%r12, -392(%rbp)        # 8-byte Spill
	movl	$Gsm_Coder.e+10, %ecx
	movq	%rbx, %rsi
	movq	-384(%rbp), %rdx        # 8-byte Reload
	movq	%rdx, %r8
	movq	%r13, %r9
	movq	%r13, -400(%rbp)        # 8-byte Spill
	callq	Gsm_Long_Term_Predictor
	xorl	%esi, %esi
	movabsq	$1802123364337886014, %rdi # imm = 0x19026DA6DCCAA33E
	callq	_KPrepCall
	movl	$Gsm_Coder.e+10, %esi
	.loc	1 1194 5                # gsm_encode.c:1194:5
	movq	-448(%rbp), %rdx        # 8-byte Reload
	movq	-432(%rbp), %rcx        # 8-byte Reload
	movq	-440(%rbp), %r8         # 8-byte Reload
	callq	Gsm_RPE_Encoding
.Ltmp99:
	#DEBUG_VALUE: i <- 0
	movl	$15, %edi
	movl	$13, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$8, %edi
	callq	_KInduction
	movl	$24, %edi
	movl	$22, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$1, %esi
	movabsq	$33458916742522398, %rdi # imm = 0x76DEB51F01E61E
	callq	_KEnterRegion
	movl	$5, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	xorl	%r13d, %r13d
	movabsq	$-522195496616044752, %rbx # imm = 0xF8C0C9F668E45730
	movq	%rbx, %r15
	.align	16, 0x90
.LBB2_3:                                # %for.body11
                                        #   Parent Loop BB2_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	#DEBUG_VALUE: i <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$7, %edi
	callq	_KPushCDep
	movl	$12, %edi
	callq	_KWork
	leaq	Gsm_Coder.e+10(%r13), %rdi
	movl	$1, %esi
	movl	$2, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 1206 12               # gsm_encode.c:1206:12
.Ltmp100:
	movswq	Gsm_Coder.e+10(%r13), %r15
	movq	-384(%rbp), %rbx        # 8-byte Reload
	leaq	(%rbx,%r13), %rdi
	movq	%rdi, -376(%rbp)        # 8-byte Spill
	movl	$3, %esi
	movl	$2, %edx
	callq	_KLoad0
	movswq	(%rbx,%r13), %rax
	leaq	(%rax,%r15), %r12
.Ltmp101:
	#DEBUG_VALUE: ltmp <- R12
	leaq	32768(%rax,%r15), %r15
	movl	$3, (%rsp)
	movl	$31, %edi
	movl	$7, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$3, %r9d
	callq	_KTimestamp3
	movl	$1, (%rsp)
	movl	$30, %r14d
	movl	$30, %edi
	movl	$7, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	movl	$3, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB2_5
.Ltmp102:
# BB#4:                                 # %cond.true
                                        #   in Loop: Header=BB2_3 Depth=2
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: ltmp <- R12
	movl	$31, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1206 12 is_stmt 0 discriminator 1 # gsm_encode.c:1206:12
	testq	%r12, %r12
	movq	$-32768, %r12           # imm = 0xFFFFFFFFFFFF8000
.Ltmp103:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r12
	movl	$4, (%rsp)
	movl	$29, %r14d
	movl	$29, %edi
	movl	$7, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$3, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
.LBB2_5:                                # %cond.end
                                        #   in Loop: Header=BB2_3 Depth=2
	movabsq	$-522195496616044752, %rbx # imm = 0xF8C0C9F668E45730
	movq	%rbx, %r15
	movq	-376(%rbp), %rbx        # 8-byte Reload
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	#DEBUG_VALUE: i <- 0
	movl	$7, %edi
	callq	_KPushCDep
	movl	$9, %edi
	movl	$7, %edx
	movl	$31, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	movl	$9, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$4, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1206 2                # gsm_encode.c:1206:2
	movw	%r12w, (%rbx)
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$5, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp104:
	.loc	1 1205 7 is_stmt 1      # gsm_encode.c:1205:7
	addq	$2, %r13
	cmpq	$80, %r13
	jne	.LBB2_3
	jmp	.LBB2_6
.Ltmp105:
.LBB2_7:                                # %for.cond.pre_exit.for.end30
	#DEBUG_VALUE: Gsm_Coder:k <- 0
	movl	$1, %esi
	movabsq	$-87793293092566331, %rdi # imm = 0xFEC818770F8E4AC5
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$3318007903081931661, %rdi # imm = 0x2E0BEE9BB923238D
	callq	_KExitRegion
	.loc	1 1216 1                # gsm_encode.c:1216:1
	addq	$424, %rsp              # imm = 0x1A8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp106:
.Ltmp107:
	.size	Gsm_Coder, .Ltmp107-Gsm_Coder
.Lfunc_end2:
	.cfi_endproc

	.globl	gsm_option
	.align	16, 0x90
	.type	gsm_option,@function
gsm_option:                             # @gsm_option
.Lfunc_begin3:
	.loc	1 1108 0                # gsm_encode.c:1108:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp108:
	.cfi_def_cfa_offset 16
.Ltmp109:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp110:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
.Ltmp111:
	.cfi_offset %rbx, -56
.Ltmp112:
	.cfi_offset %r12, -48
.Ltmp113:
	.cfi_offset %r13, -40
.Ltmp114:
	.cfi_offset %r14, -32
.Ltmp115:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_option:r <- RDI
	#DEBUG_VALUE: gsm_option:opt <- ESI
	#DEBUG_VALUE: gsm_option:val <- RDX
	movq	%rdx, %r12
.Ltmp116:
	#DEBUG_VALUE: gsm_option:val <- R12
	movl	%esi, %ebx
.Ltmp117:
	#DEBUG_VALUE: gsm_option:opt <- EBX
	movq	%rdi, %r14
.Ltmp118:
	#DEBUG_VALUE: gsm_option:r <- R14
	movabsq	$2739838778886657165, %rdi # imm = 0x2605DCDA6561148D
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$10, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KWork
	movl	$1, %edi
	callq	_KDeqArg
.Ltmp119:
	#DEBUG_VALUE: gsm_option:result <- -1
	movl	$8, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$-1, %r13d
	.loc	1 1111 3 prologue_end   # gsm_encode.c:1111:3
.Ltmp120:
	cmpl	$1, %ebx
	jne	.LBB3_3
.Ltmp121:
# BB#1:                                 # %sw.bb
	#DEBUG_VALUE: gsm_option:r <- R14
	#DEBUG_VALUE: gsm_option:val <- R12
	#DEBUG_VALUE: gsm_option:result <- -1
	movl	$8, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	.loc	1 1114 16               # gsm_encode.c:1114:16
.Ltmp122:
	leaq	652(%r14), %rbx
	movl	$2, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	movsbl	652(%r14), %r13d
	movl	$7, %r15d
	movl	$7, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$9, %edi
	movl	$1, %esi
	movl	$2, %edx
	movl	$5, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	.loc	1 1115 11               # gsm_encode.c:1115:11
	testq	%r12, %r12
	je	.LBB3_3
.Ltmp123:
# BB#2:                                 # %if.then
	#DEBUG_VALUE: gsm_option:val <- R12
	#DEBUG_VALUE: gsm_option:result <- -1
	movl	$9, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	movl	$3, %esi
	movl	$4, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1115 29 is_stmt 0     # gsm_encode.c:1115:29
.Ltmp124:
	movb	(%r12), %r14b
	movl	$0, (%rsp)
	movl	$4, %edi
	movl	$1, %esi
	movl	$2, %edx
	movl	$5, %ecx
	movl	$1, %r8d
	movl	$3, %r9d
	callq	_KTimestamp3
	movl	$4, %edi
	movl	$1, %edx
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1115 16               # gsm_encode.c:1115:16
	movb	%r14b, (%rbx)
	callq	_KPopCDep
.Ltmp125:
.LBB3_3:                                # %sw.epilog
	#DEBUG_VALUE: gsm_option:result <- -1
	movl	$6, %edi
	movl	$8, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movabsq	$2739838778886657165, %rdi # imm = 0x2605DCDA6561148D
	callq	_KExitRegion
	.loc	1 1131 3 is_stmt 1      # gsm_encode.c:1131:3
	movl	%r13d, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp126:
.Ltmp127:
	.size	gsm_option, .Ltmp127-gsm_option
.Lfunc_end3:
	.cfi_endproc

	.globl	Gsm_Preprocess
	.align	16, 0x90
	.type	Gsm_Preprocess,@function
Gsm_Preprocess:                         # @Gsm_Preprocess
.Lfunc_begin4:
	.loc	1 2932 0                # gsm_encode.c:2932:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp128:
	.cfi_def_cfa_offset 16
.Ltmp129:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp130:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$104, %rsp
.Ltmp131:
	.cfi_offset %rbx, -56
.Ltmp132:
	.cfi_offset %r12, -48
.Ltmp133:
	.cfi_offset %r13, -40
.Ltmp134:
	.cfi_offset %r14, -32
.Ltmp135:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_Preprocess:S <- RDI
	#DEBUG_VALUE: Gsm_Preprocess:s <- RSI
	#DEBUG_VALUE: Gsm_Preprocess:so <- RDX
	movq	%rdx, -88(%rbp)         # 8-byte Spill
.Ltmp136:
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	movq	%rsi, -96(%rbp)         # 8-byte Spill
.Ltmp137:
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	movq	%rdi, %rbx
.Ltmp138:
	#DEBUG_VALUE: Gsm_Preprocess:S <- RBX
	movabsq	$-250082540368408076, %rdi # imm = 0xFC87874128D051F4
	movabsq	$6382827878273809597, %r15 # imm = 0x58945C233AF87CBD
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$2, -52(%rbp)           # 4-byte Folded Spill
	movl	$39, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$12, %edi
	callq	_KWork
	.loc	1 2934 19 prologue_end  # gsm_encode.c:2934:19
.Ltmp139:
	leaq	560(%rbx), %rdi
	movq	%rdi, -112(%rbp)        # 8-byte Spill
	movl	$1, -56(%rbp)           # 4-byte Folded Spill
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	movw	560(%rbx), %ax
.Ltmp140:
	#DEBUG_VALUE: Gsm_Preprocess:z1 <- [RBP+-48]
	.loc	1 2935 19               # gsm_encode.c:2935:19
	movl	%eax, -48(%rbp)         # 4-byte Spill
	leaq	568(%rbx), %rdi
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movl	$2, %esi
	movl	$8, %edx
	callq	_KLoad0
	movq	568(%rbx), %rax
.Ltmp141:
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	.loc	1 2936 17               # gsm_encode.c:2936:17
	movq	%rax, -72(%rbp)         # 8-byte Spill
	leaq	576(%rbx), %rdi
	movq	%rdi, -104(%rbp)        # 8-byte Spill
	movl	$3, %esi
	movl	$4, %edx
	callq	_KLoad0
	movw	576(%rbx), %ax
.Ltmp142:
	#DEBUG_VALUE: Gsm_Preprocess:mp <- [RBP+-74]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	movw	%ax, -74(%rbp)          # 2-byte Spill
	movl	$22, %r14d
	movl	$22, %edi
	movl	$22, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$13, %ebx
.Ltmp143:
	movl	$13, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$19, -60(%rbp)          # 4-byte Folded Spill
	movl	$19, %edi
	movl	$19, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$0, %r13d
	movl	$0, %r12d
	xorl	%r15d, %r15d
	jmp	.LBB4_1
	.align	16, 0x90
.LBB4_18:                               # %cond.end90
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
.Ltmp144:
	#DEBUG_VALUE: Gsm_Preprocess:z1 <- [RBP+-80]
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:mp <- [RBP+-74]
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:SO <- [RBP+-80]
	movl	$6, %r12d
	movl	$6, %edi
	callq	_KPushCDep
	movl	$8, %edi
	movl	$6, %edx
	movl	$38, %ecx
	movl	%r15d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	movl	$8, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movq	-88(%rbp), %rbx         # 8-byte Reload
.Ltmp145:
	#DEBUG_VALUE: Gsm_Preprocess:so <- RBX
	movq	-48(%rbp), %r13         # 8-byte Reload
	leaq	(%rbx,%r13), %rsi
	movl	$5, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2996 5                # gsm_encode.c:2996:5
.Ltmp146:
	movw	%r14w, (%rbx,%r13)
.Ltmp147:
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	movl	$20, -60(%rbp)          # 4-byte Folded Spill
	movl	$20, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$6, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-2916594455641047406, %rdi # imm = 0xD7862CCB9DA43E92
	callq	_KExitRegion
	addq	$2, %r13
	movl	$24, %r15d
	movl	$23, %r14d
	movl	$17, -56(%rbp)          # 4-byte Folded Spill
	movl	$16, -52(%rbp)          # 4-byte Folded Spill
	movl	$14, %ebx
	movl	-80(%rbp), %eax         # 4-byte Reload
                                        # kill: AX<def> AX<kill> EAX<kill> EAX<def>
	movl	%eax, -48(%rbp)         # 4-byte Spill
.Ltmp148:
.LBB4_1:                                # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	movl	$21, %edi
	movl	%r14d, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$7, %edi
	movl	%r15d, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$18, %edi
	movl	-60(%rbp), %esi         # 4-byte Reload
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$12, %edi
	movl	%ebx, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$10, %edi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$9, %edi
	movl	-56(%rbp), %esi         # 4-byte Reload
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$7, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$21, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$9, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$24, %edi
	movl	$7, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$7, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$21, %edi
	movl	$21, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$10, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$12, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2952 3                # gsm_encode.c:2952:3
	cmpl	$320, %r13d             # imm = 0x140
	movq	%r13, %r14
	je	.LBB4_19
# BB#2:                                 # %while.body
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	movl	$2, %esi
	movabsq	$-2916594455641047406, %rdi # imm = 0xD7862CCB9DA43E92
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movq	-96(%rbp), %rbx         # 8-byte Reload
.Ltmp149:
	#DEBUG_VALUE: Gsm_Preprocess:s <- RBX
	leaq	(%rbx,%r14), %rdi
	movl	$4, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	$19, %edi
	callq	_KWork
	.loc	1 2956 10               # gsm_encode.c:2956:10
.Ltmp150:
	movswl	(%rbx,%r14), %ebx
.Ltmp151:
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	sarl	$3, %ebx
	shll	$2, %ebx
	.loc	1 2969 10               # gsm_encode.c:2969:10
	movl	%ebx, %eax
	subl	-48(%rbp), %eax         # 4-byte Folded Reload
	.loc	1 2974 12               # gsm_encode.c:2974:12
	shlq	$48, %rax
	.loc	1 2975 5                # gsm_encode.c:2975:5
	sarq	$33, %rax
.Ltmp152:
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- RAX
	movq	-72(%rbp), %rdx         # 8-byte Reload
	.loc	1 2981 17               # gsm_encode.c:2981:17
	movq	%rdx, %rcx
	shrq	$15, %rcx
	movswq	%cx, %r12
	movq	%r12, %rcx
	shlq	$15, %rcx
	.loc	1 2981 11 is_stmt 0     # gsm_encode.c:2981:11
	subl	%ecx, %edx
	.loc	1 2983 14 is_stmt 1     # gsm_encode.c:2983:14
	movswq	%dx, %rcx
	imulq	$32735, %rcx, %r13      # imm = 0x7FDF
	addq	$16384, %r13            # imm = 0x4000
	sarq	$15, %r13
	.loc	1 2983 5 is_stmt 0      # gsm_encode.c:2983:5
	addq	%rax, %r13
	.loc	1 2984 14 is_stmt 1     # gsm_encode.c:2984:14
	imulq	$32735, %r12, %r15      # imm = 0x7FDF
.Ltmp153:
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- R15
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	movl	$23, %edi
	movl	$21, %esi
	xorl	%edx, %edx
	movl	$6, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$17, %edi
	movl	$6, %esi
	movl	$2, %edx
	movl	$4, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	movl	$29, %edi
	movl	$10, %esi
	movl	$4, %edx
	movl	$6, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$29, %edi
	callq	_KPushCDep
	.loc	1 2985 14               # gsm_encode.c:2985:14
	testq	%r12, %r12
	js	.LBB4_3
.Ltmp154:
# BB#8:                                 # %cond.false40
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- R15
	movl	%ebx, -80(%rbp)         # 4-byte Spill
	movq	%r14, -48(%rbp)         # 8-byte Spill
	movl	$2, %edi
	callq	_KWork
	.loc	1 2985 14 is_stmt 0 discriminator 12 # gsm_encode.c:2985:14
	addq	%r13, %r15
.Ltmp155:
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R15
	movl	$6, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$9, (%rsp)
	movl	$32, %edi
	movl	$10, %esi
	movl	$9, %edx
	movl	$9, %ecx
	movl	$4, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	movl	$6, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$9, (%rsp)
	movl	$27, %r14d
	movl	$27, %edi
	movl	$10, %esi
	movl	$9, %edx
	movl	$9, %ecx
	movl	$4, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 2985 14 discriminator 2 # gsm_encode.c:2985:14
	testq	%r13, %r13
	jle	.LBB4_9
.Ltmp156:
# BB#10:                                # %cond.false45
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R15
	movl	$32, %r13d
	movl	$32, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$10, (%rsp)
	movl	$28, %r14d
	movl	$28, %edi
	movl	$10, %esi
	movl	$10, %edx
	movl	$9, %ecx
	movl	$5, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 2985 14 discriminator 13 # gsm_encode.c:2985:14
	cmpq	$2147483647, %r15       # imm = 0x7FFFFFFF
	movl	$2147483647, %eax       # imm = 0x7FFFFFFF
	cmovaeq	%rax, %r15
.Ltmp157:
	movq	%r15, %r12
.Ltmp158:
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	xorl	%r15d, %r15d
	jmp	.LBB4_11
.Ltmp159:
	.align	16, 0x90
.LBB4_3:                                # %cond.true
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- R15
	movl	$1, %edi
	callq	_KWork
	movl	$6, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$9, (%rsp)
	movl	$30, %edi
	movl	$10, %esi
	movl	$9, %edx
	movl	$9, %ecx
	movl	$4, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movl	$30, %edi
	callq	_KPushCDep
	.loc	1 2985 14 discriminator 1 # gsm_encode.c:2985:14
	testq	%r13, %r13
	js	.LBB4_5
.Ltmp160:
# BB#4:                                 # %cond.true25
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- R15
	movl	%ebx, -80(%rbp)         # 4-byte Spill
	movq	%r14, -48(%rbp)         # 8-byte Spill
	movl	$1, %edi
	callq	_KWork
	.loc	1 2985 14 discriminator 3 # gsm_encode.c:2985:14
	addq	%r13, %r15
.Ltmp161:
	movl	$7, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$10, (%rsp)
	movl	$25, %r14d
	movl	$25, %edi
	movl	$10, %esi
	movl	$10, %edx
	movl	$9, %ecx
	movl	$5, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movq	%r15, %r12
.Ltmp162:
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	movl	$30, %r15d
	xorl	%r13d, %r13d
.Ltmp163:
.LBB4_11:                               # %cond.end55
                                        #   in Loop: Header=BB4_1 Depth=1
	xorl	%ebx, %ebx
	jmp	.LBB4_12
	.align	16, 0x90
.LBB4_9:                                #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
.Ltmp164:
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R15
	movq	%r15, %r12
.Ltmp165:
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R12
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	movl	$32, %r13d
	jmp	.LBB4_12
.Ltmp166:
.LBB4_5:                                # %cond.false
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R15
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- R15
	movl	%ebx, -80(%rbp)         # 4-byte Spill
	movq	%r14, -48(%rbp)         # 8-byte Spill
	movl	$6, %edi
	callq	_KWork
	.loc	1 2985 14 discriminator 4 # gsm_encode.c:2985:14
	notq	%r15
.Ltmp167:
	notq	%r13
	addq	%r15, %r13
	movl	$10, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$13, (%rsp)
	movl	$31, %edi
	movl	$10, %esi
	movl	$13, %edx
	movl	$9, %ecx
	movl	$8, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	cmpq	$2147483646, %r13       # imm = 0x7FFFFFFE
	movl	$30, %r15d
	jbe	.LBB4_7
# BB#6:                                 #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	xorl	%r14d, %r14d
	movq	$-2147483648, %r12      # imm = 0xFFFFFFFF80000000
.Ltmp168:
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R12
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	movl	$31, %ebx
	xorl	%r13d, %r13d
	jmp	.LBB4_12
.Ltmp169:
.LBB4_7:                                # %cond.false35
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	movl	$31, %edi
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
	movq	$-2, %r12
.Ltmp170:
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- R12
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	.loc	1 2985 14 discriminator 7 # gsm_encode.c:2985:14
	subq	%r13, %r12
.Ltmp171:
	movl	$31, %ebx
	movl	$12, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$15, (%rsp)
	movl	$26, %r14d
	movl	$26, %edi
	movl	$10, %esi
	movl	$15, %edx
	movl	$9, %ecx
	movl	$10, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	xorl	%r13d, %r13d
	.align	16, 0x90
.LBB4_12:                               # %cond.end55
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
.Ltmp172:
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- R12
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	movl	$6, %edi
	callq	_KPushCDep
	movl	%r13d, 8(%rsp)
	movl	%ebx, (%rsp)
	movl	$16, %edi
	movl	$5, %edx
	movl	$6, %ecx
	movl	$29, %r8d
	xorl	%eax, %eax
	movl	%r14d, %esi
	movl	%r15d, %r9d
	callq	_KPhi
	movl	$2, %edi
	callq	_KWork
	.loc	1 2989 14 is_stmt 1 discriminator 1 # gsm_encode.c:2989:14
	leaq	16384(%r12), %rbx
.Ltmp173:
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- RBX
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$33, %r14d
	movl	$33, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$16, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$35, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$16, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2989 14 is_stmt 0     # gsm_encode.c:2989:14
	testq	%r12, %r12
	js	.LBB4_13
.Ltmp174:
# BB#14:                                # %cond.false61
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- R12
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- RBX
	movq	%r12, -72(%rbp)         # 8-byte Spill
.Ltmp175:
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	movl	$35, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2989 14 discriminator 2 # gsm_encode.c:2989:14
	cmpq	$2147483647, %rbx       # imm = 0x7FFFFFFF
	movl	$2147483647, %eax       # imm = 0x7FFFFFFF
	cmovaeq	%rax, %rbx
.Ltmp176:
	movl	$34, %r14d
	movl	$34, %edi
	movl	$6, %esi
	movl	$2, %edx
	movl	$16, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	jmp	.LBB4_15
	.align	16, 0x90
.LBB4_13:                               #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
.Ltmp177:
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- R12
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- R12
	#DEBUG_VALUE: Gsm_Preprocess:utmp <- RBX
	movq	%r12, -72(%rbp)         # 8-byte Spill
.Ltmp178:
.LBB4_15:                               # %cond.end69
                                        #   in Loop: Header=BB4_1 Depth=1
	movw	-74(%rbp), %r15w        # 2-byte Reload
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
.Ltmp179:
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:L_temp <- RBX
	movl	$6, %edi
	callq	_KPushCDep
	movl	$15, %edi
	movl	$6, %edx
	movl	$35, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$8, %edi
	callq	_KWork
	.loc	1 2994 13 is_stmt 1     # gsm_encode.c:2994:13
	movswq	%r15w, %rax
	.loc	1 2995 13               # gsm_encode.c:2995:13
	shrq	$15, %rbx
.Ltmp180:
                                        # kill: BX<def> BX<kill> RBX<kill>
.Ltmp181:
	#DEBUG_VALUE: Gsm_Preprocess:mp <- BX
	.loc	1 2996 13               # gsm_encode.c:2996:13
	movswq	%bx, %rcx
	movabsq	$-242064356802560, %rdx # imm = 0xFFFF23D800000000
	imulq	%rdx, %rax
	movabsq	$140737488355328, %rdx  # imm = 0x800000000000
	addq	%rdx, %rax
	sarq	$48, %rax
	leaq	(%rcx,%rax), %r14
.Ltmp182:
	#DEBUG_VALUE: Gsm_Preprocess:ltmp <- R14
	leaq	32768(%rcx,%rax), %r12
	movl	$4, (%rsp)
	movl	$38, %edi
	movl	$12, %esi
	movl	$7, %edx
	movl	$6, %ecx
	movl	$7, %r8d
	movl	$15, %r9d
	callq	_KTimestamp3
	movl	$2, (%rsp)
	movl	$37, %r15d
	movl	$37, %edi
	movl	$12, %esi
	movl	$5, %edx
	movl	$6, %ecx
	movl	$5, %r8d
	movl	$15, %r9d
	callq	_KTimestamp3
	movl	$14, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$15, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB4_16
.Ltmp183:
# BB#17:                                # %cond.true84
                                        #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:mp <- BX
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:ltmp <- R14
	movw	%bx, -74(%rbp)          # 2-byte Spill
.Ltmp184:
	#DEBUG_VALUE: Gsm_Preprocess:mp <- [RBP+-74]
	movl	$38, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2996 13 is_stmt 0 discriminator 1 # gsm_encode.c:2996:13
	testq	%r14, %r14
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
.Ltmp185:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r14
	movl	$5, (%rsp)
	movl	$36, %r15d
	movl	$36, %edi
	movl	$12, %esi
	movl	$8, %edx
	movl	$6, %ecx
	movl	$8, %r8d
	movl	$15, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	jmp	.LBB4_18
.Ltmp186:
	.align	16, 0x90
.LBB4_16:                               #   in Loop: Header=BB4_1 Depth=1
	#DEBUG_VALUE: Gsm_Preprocess:s <- [RBP+-96]
	#DEBUG_VALUE: Gsm_Preprocess:so <- [RBP+-88]
	#DEBUG_VALUE: Gsm_Preprocess:L_z2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	#DEBUG_VALUE: Gsm_Preprocess:mp <- BX
	#DEBUG_VALUE: Gsm_Preprocess:L_s2 <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Preprocess:ltmp <- R14
	movw	%bx, -74(%rbp)          # 2-byte Spill
.Ltmp187:
	#DEBUG_VALUE: Gsm_Preprocess:mp <- [RBP+-74]
	jmp	.LBB4_18
.Ltmp188:
.LBB4_19:                               # %while.cond.pre_exit.while.end
	#DEBUG_VALUE: Gsm_Preprocess:k <- 160
	movl	$1, %esi
	movabsq	$6382827878273809597, %rdi # imm = 0x58945C233AF87CBD
	callq	_KExitRegion
	movl	$3, %edi
	callq	_KWork
	movl	$9, %edi
	movl	$2, %edx
	movq	-112(%rbp), %rbx        # 8-byte Reload
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 2999 3 is_stmt 1      # gsm_encode.c:2999:3
	movl	-48(%rbp), %eax         # 4-byte Reload
	movw	%ax, (%rbx)
	movl	$10, %edi
	movl	$8, %edx
	movq	-120(%rbp), %rbx        # 8-byte Reload
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 3000 3                # gsm_encode.c:3000:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, (%rbx)
	.loc	1 3001 13               # gsm_encode.c:3001:13
	movswl	-74(%rbp), %r14d        # 2-byte Folded Reload
	movl	$11, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$11, %edi
	movl	$4, %edx
	movq	-104(%rbp), %rbx        # 8-byte Reload
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 3001 3 is_stmt 0      # gsm_encode.c:3001:3
	movl	%r14d, (%rbx)
	xorl	%esi, %esi
	movabsq	$-250082540368408076, %rdi # imm = 0xFC87874128D051F4
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	_KExitRegion            # TAILCALL
.Ltmp189:
.Ltmp190:
	.size	Gsm_Preprocess, .Ltmp190-Gsm_Preprocess
.Lfunc_end4:
	.cfi_endproc

	.globl	Gsm_LPC_Analysis
	.align	16, 0x90
	.type	Gsm_LPC_Analysis,@function
Gsm_LPC_Analysis:                       # @Gsm_LPC_Analysis
.Lfunc_begin5:
	.loc	1 2897 0 is_stmt 1      # gsm_encode.c:2897:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp191:
	.cfi_def_cfa_offset 16
.Ltmp192:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp193:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$296, %rsp              # imm = 0x128
.Ltmp194:
	.cfi_offset %rbx, -56
.Ltmp195:
	.cfi_offset %r12, -48
.Ltmp196:
	.cfi_offset %r13, -40
.Ltmp197:
	.cfi_offset %r14, -32
.Ltmp198:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:s <- RSI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RDX
	movq	%rdx, %rbx
.Ltmp199:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	movq	%rsi, %r12
.Ltmp200:
	#DEBUG_VALUE: Gsm_LPC_Analysis:s <- R12
	movabsq	$-5989144894884880199, %rdi # imm = 0xACE24873300AE0B9
.Ltmp201:
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$1, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movabsq	$-3511124666996038270, %rdi # imm = 0xCF45FAB7D596E582
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-208(%rbp), %r14
.Ltmp202:
	#DEBUG_VALUE: Reflection_coefficients:L_ACF <- R14
	#DEBUG_VALUE: Gsm_LPC_Analysis:L_ACF <- [R14+0]
	.loc	1 2904 5 prologue_end   # gsm_encode.c:2904:5
	movq	%r12, %rdi
.Ltmp203:
	#DEBUG_VALUE: Gsm_LPC_Analysis:s <- RDI
	movq	%r14, %rsi
	callq	Autocorrelation
	movabsq	$-9163821108226059648, %rdi # imm = 0x80D391410AF59280
.Ltmp204:
	xorl	%esi, %esi
	callq	_KPrepCall
	movabsq	$-1632524830202051279, %rdi # imm = 0xE9581B5100CD4531
	xorl	%esi, %esi
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KEnterRegion
	movl	$76, %edi
	movl	$4, %esi
	callq	_KPrepRTable
	movl	$5, %edi
	callq	_KWork
	movl	$1, %esi
	movl	$8, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2759 7                # gsm_encode.c:2759:7
.Ltmp205:
	movq	-208(%rbp), %r14
.Ltmp206:
	movl	$6, %edi
	movl	$1, %esi
	movl	$1, %edx
.Ltmp207:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	movl	$46, %r13d
	movl	$46, %edi
	movl	$46, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	callq	_KPushCDep
	.loc	1 2759 7                # gsm_encode.c:2759:7
.Ltmp208:
	cmpq	$0, %r14
	je	.LBB5_1
.Ltmp209:
# BB#4:                                 # %if.end.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	movq	%rbx, -248(%rbp)        # 8-byte Spill
.Ltmp210:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$3326398277586356814, %r14 # imm = 0x2E29BD9C05018A4E
	movl	$4, %edi
.Ltmp211:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KWork
	leaq	-208(%rbp), %rdi
	movl	$2, %esi
	movl	$8, %edx
	callq	_KLoad0
	.loc	1 2765 20               # gsm_encode.c:2765:20
.Ltmp212:
	movq	-208(%rbp), %rbx
	xorl	%r13d, %r13d
	movabsq	$-3284692694937527268, %rdi # imm = 0xD26A6D65A1ED9C1C
	xorl	%esi, %esi
.Ltmp213:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPrepCall
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	callq	_KEnqArg
	movl	$3, %edi
	callq	_KLinkReturn
	.loc	1 2765 10               # gsm_encode.c:2765:10
.Ltmp214:
	movq	%rbx, %rdi
	callq	gsm_norm
	movw	%ax, %bx
.Ltmp215:
	#DEBUG_VALUE: Reflection_coefficients:temp <- BX
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
.Ltmp216:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	movl	$8, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2769 37 discriminator 2 # gsm_encode.c:2769:37
.Ltmp217:
	movswq	%bx, %rax
	movl	%eax, %r15d
	leaq	-64(%rbp), %rbx
.Ltmp218:
	movabsq	$3051674016743218089, %r12 # imm = 0x2A59B9598A44DBA9
.Ltmp219:
	.align	16, 0x90
.LBB5_5:                                # %for.body4.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	movl	$2, %esi
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r12, %rdi
.Ltmp220:
	callq	_KEnterRegion
	movl	$7, %edi
	callq	_KPushCDep
	movl	$7, %edi
	callq	_KWork
	leaq	-208(%rbp,%r13), %rdi
	movl	$4, %esi
	movl	$8, %edx
	callq	_KLoad0
	.loc	1 2769 37 discriminator 2 # gsm_encode.c:2769:37
.Ltmp221:
	movq	-208(%rbp,%r13), %r14
	movb	%r15b, %cl
	shlq	%cl, %r14
	shrq	$16, %r14
.Ltmp222:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$2, (%rsp)
	movl	$5, %edi
	movl	$3, %esi
	movl	$2, %edx
	movl	$7, %ecx
	movl	$2, %r8d
	movl	$4, %r9d
	callq	_KTimestamp3
	movl	$5, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 2769 28               # gsm_encode.c:2769:28
.Ltmp223:
	movw	%r14w, (%rbx)
.Ltmp224:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2769 3                # gsm_encode.c:2769:3
.Ltmp225:
	addq	$8, %r13
	addq	$2, %rbx
	cmpq	$72, %r13
	jne	.LBB5_5
.Ltmp226:
# BB#6:                                 # %for.cond2.pre_exit.for.end10.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$-6700841552106062420, %rbx # imm = 0xA301D41C668A7DAC
	movl	$1, %esi
	movabsq	$3326398277586356814, %rdi # imm = 0x2E29BD9C05018A4E
.Ltmp227:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
.Ltmp228:
	#DEBUG_VALUE: Reflection_coefficients:i <- 1
	callq	_KPopCDep
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	xorl	%r12d, %r12d
	movl	$2, %r15d
	movabsq	$3003037126864437022, %r14 # imm = 0x29ACEE5B2A107F1E
	xorl	%r13d, %r13d
	jmp	.LBB5_7
	.align	16, 0x90
.LBB5_8:                                # %for.body14.i
                                        #   in Loop: Header=BB5_7 Depth=1
.Ltmp229:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 1
	movl	$2, %esi
	movq	%r14, %rdi
.Ltmp230:
	callq	_KEnterRegion
	movl	$49, %r12d
	movl	$49, %edi
	callq	_KPushCDep
	movl	$6, %edi
	callq	_KWork
	leaq	-64(%rbp,%r15), %rdi
	movl	$9, %esi
	movl	$10, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2775 37               # gsm_encode.c:2775:37
.Ltmp231:
	movw	-64(%rbp,%r15), %bx
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
.Ltmp232:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	leaq	-128(%rbp,%r15), %rsi
	movl	$9, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2775 28               # gsm_encode.c:2775:28
.Ltmp233:
	movw	%bx, -128(%rbp,%r15)
	movl	$48, %r13d
	movl	$48, %edi
	movl	$10, %esi
	movl	$1, %edx
	movl	$49, %ecx
	movl	$1, %r8d
.Ltmp234:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	addq	$2, %r15
.LBB5_7:                                # %for.cond11.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp235:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 1
	movl	$6, %edi
.Ltmp236:
	callq	_KPushCDep
	movl	$10, %edi
	movl	$6, %edx
	movl	%r13d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$49, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$10, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$10, %edi
	movl	$49, %esi
	callq	_KPhiAddCond
	callq	_KPopCDep
	.loc	1 2775 3                # gsm_encode.c:2775:3
.Ltmp237:
	cmpq	$16, %r15
	jne	.LBB5_8
.Ltmp238:
# BB#9:                                 # %for.cond11.pre_exit.for.end21.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$-5258093402433041696, %r14 # imm = 0xB7077FE8B8274AE0
	movl	$1, %esi
	movabsq	$-6700841552106062420, %rdi # imm = 0xA301D41C668A7DAC
.Ltmp239:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
.Ltmp240:
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	movl	$50, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	callq	_KPopCDep
	movl	$74, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$50, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movabsq	$-7938589199311646009, %r15 # imm = 0x91D4772F0546D2C7
	xorl	%ebx, %ebx
	.align	16, 0x90
.LBB5_10:                               # %for.body25.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp241:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	movl	$2, %esi
	movq	%r15, %rdi
.Ltmp242:
	callq	_KEnterRegion
	movl	$74, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	leaq	-64(%rbp,%rbx), %rdi
	movl	$11, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2778 37               # gsm_encode.c:2778:37
.Ltmp243:
	movw	-64(%rbp,%rbx), %r12w
	movl	$11, %edi
	movl	$11, %esi
	xorl	%edx, %edx
.Ltmp244:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	leaq	-96(%rbp,%rbx), %rsi
	movl	$11, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2778 28               # gsm_encode.c:2778:28
.Ltmp245:
	movw	%r12w, -96(%rbp,%rbx)
.Ltmp246:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	callq	_KPopCDep
	movl	$74, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$50, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	.loc	1 2778 3                # gsm_encode.c:2778:3
.Ltmp247:
	addq	$2, %rbx
	cmpq	$18, %rbx
	jne	.LBB5_10
.Ltmp248:
# BB#11:                                # %for.cond22.pre_exit.for.end32.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	movabsq	$6697108409187511785, %rbx # imm = 0x5CF0E89D87E72DE9
	movl	$1, %esi
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r14, %rdi
.Ltmp249:
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
.Ltmp250:
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	callq	_KPopCDep
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$46, -232(%rbp)         # 4-byte Folded Spill
	xorl	%eax, %eax
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$1, %r12d
	movl	$0, %r15d
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	movq	-248(%rbp), %r13        # 8-byte Reload
	jmp	.LBB5_12
	.align	16, 0x90
.LBB5_34:                               # %for.cond103.pre_exit.for.inc167.i
                                        #   in Loop: Header=BB5_12 Depth=1
.Ltmp251:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movl	$1, %esi
	movabsq	$7556860733764868569, %rdi # imm = 0x68DF5CCCA52719D9
.Ltmp252:
	callq	_KExitRegion
	movl	$34, %ebx
	movl	$34, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movq	-256(%rbp), %r12        # 8-byte Reload
	.loc	1 2783 3                # gsm_encode.c:2783:3
.Ltmp253:
	incq	%r12
	.loc	1 2783 28 is_stmt 0     # gsm_encode.c:2783:28
	addq	$2, %r13
.Ltmp254:
	#DEBUG_VALUE: Reflection_coefficients:r <- R13
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	movl	$3, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$3, (%rsp)
	movl	$51, %eax
	movq	%rax, -216(%rbp)        # 8-byte Spill
	movl	$17, %r14d
	movl	$51, %edi
	movl	$18, %esi
	movl	$2, %edx
	movl	$17, %ecx
	movl	$3, %r8d
	movl	$19, %r9d
	callq	_KTimestamp4
	movl	$2, 32(%rsp)
	movl	$13, 24(%rsp)
	movl	$2, 16(%rsp)
	movl	$19, 8(%rsp)
	movl	$2, (%rsp)
	movl	$54, -232(%rbp)         # 4-byte Folded Spill
	movl	$54, %edi
	movl	$18, %esi
	movl	$1, %edx
	movl	$53, %ecx
	xorl	%r8d, %r8d
	movl	$17, %r9d
	callq	_KTimestamp5
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-4260027496926221719, %rdi # imm = 0xC4E1578FE850EA69
	callq	_KExitRegion
	movl	$52, %r15d
.Ltmp255:
.LBB5_12:                               # %for.cond33.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_28 Depth 2
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movq	%r13, -224(%rbp)        # 8-byte Spill
	movl	$6, %edi
.Ltmp256:
	callq	_KPushCDep
	movl	$18, %edi
	movl	$6, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
                                        # kill: ESI<def> ESI<kill> RSI<kill>
	movl	%r14d, %ecx
	movl	%r15d, %r8d
	movl	%ebx, %r9d
	callq	_KPhi4To1
	movl	$53, %edi
	movl	$6, %edx
	movl	-232(%rbp), %esi        # 4-byte Reload
	movl	%r14d, %ecx
	movl	%r15d, %r8d
	movl	%ebx, %r9d
	callq	_KPhi4To1
	movl	$1, %edi
	callq	_KWork
	movl	$17, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$18, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$18, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$53, %edi
	movl	$17, %esi
	callq	_KPhiAddCond
	movl	$18, %edi
	movl	$17, %esi
	callq	_KPhiAddCond
	movl	$53, %edi
	movl	$53, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2783 3                # gsm_encode.c:2783:3
.Ltmp257:
	cmpq	$8, %r12
	jg	.LBB5_38
.Ltmp258:
# BB#13:                                # %for.body36.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$2, %esi
	movabsq	$-4260027496926221719, %rdi # imm = 0xC4E1578FE850EA69
.Ltmp259:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KEnterRegion
	movl	$17, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	movl	$12, %esi
	movl	$2, %edx
	.loc	1 2785 12               # gsm_encode.c:2785:12
.Ltmp260:
	leaq	-94(%rbp), %rdi
.Ltmp261:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KLoad0
	.loc	1 2785 12               # gsm_encode.c:2785:12
.Ltmp262:
	movw	-94(%rbp), %r15w
.Ltmp263:
	#DEBUG_VALUE: Reflection_coefficients:temp <- R15W
	movl	$56, %ebx
	xorl	%r14d, %r14d
	movl	$56, %edi
	movl	$17, %esi
	xorl	%edx, %edx
	movl	$12, %ecx
	xorl	%r8d, %r8d
.Ltmp264:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	movl	$57, %edi
	movl	$17, %esi
	movl	$1, %edx
	movl	$12, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2786 12               # gsm_encode.c:2786:12
.Ltmp265:
	testw	%r15w, %r15w
	js	.LBB5_15
.Ltmp266:
# BB#14:                                #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movq	%r12, -256(%rbp)        # 8-byte Spill
	jmp	.LBB5_18
.Ltmp267:
	.align	16, 0x90
.LBB5_15:                               # %cond.true.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:temp <- R15W
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$57, %edi
.Ltmp268:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2786 12 discriminator 1 # gsm_encode.c:2786:12
.Ltmp269:
	movzwl	%r15w, %ebx
	movl	$58, %r14d
	movl	$58, %edi
	movl	$17, %esi
	movl	$2, %edx
	movl	$12, %ecx
	movl	$2, %r8d
.Ltmp270:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2786 12 discriminator 1 # gsm_encode.c:2786:12
.Ltmp271:
	cmpl	$32768, %ebx            # imm = 0x8000
	jne	.LBB5_17
.Ltmp272:
# BB#16:                                #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movq	%r12, -256(%rbp)        # 8-byte Spill
	xorl	%ebx, %ebx
	movw	$32767, %r15w           # imm = 0x7FFF
	jmp	.LBB5_18
.Ltmp273:
.LBB5_17:                               # %cond.false.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:temp <- R15W
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movq	%r12, -256(%rbp)        # 8-byte Spill
	movl	$58, %r14d
	movl	$58, %edi
.Ltmp274:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2786 12 discriminator 4 # gsm_encode.c:2786:12
.Ltmp275:
	negl	%r15d
.Ltmp276:
	movl	$55, %ebx
	movl	$55, %edi
	movl	$17, %esi
	movl	$3, %edx
	movl	$12, %ecx
	movl	$3, %r8d
.Ltmp277:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.align	16, 0x90
.LBB5_18:                               # %cond.end48.i
                                        #   in Loop: Header=BB5_12 Depth=1
.Ltmp278:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:temp <- R15W
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$17, %edi
.Ltmp279:
	callq	_KPushCDep
	movl	$19, %edi
	movl	$17, %edx
	movl	$57, %ecx
	movl	%ebx, %esi
	movl	%r14d, %r8d
	callq	_KPhi3To1
	movl	$5, %edi
	callq	_KWork
	movl	$13, %esi
	movl	$2, %edx
	leaq	-96(%rbp), %r12
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2787 9                # gsm_encode.c:2787:9
.Ltmp280:
	movswl	-96(%rbp), %r14d
	movl	$16, %edi
	movl	$17, %esi
	xorl	%edx, %edx
	movl	$19, %ecx
	xorl	%r8d, %r8d
.Ltmp281:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	movl	$1, (%rsp)
	movl	$52, %edi
	movl	$17, %esi
	movl	$1, %edx
	movl	$19, %ecx
	movl	$1, %r8d
	movl	$13, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2787 9                # gsm_encode.c:2787:9
.Ltmp282:
	movswl	%r15w, %ebx
	cmpl	%ebx, %r14d
	jl	.LBB5_19
.Ltmp283:
# BB#22:                                # %if.end65.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$52, %edi
.Ltmp284:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$10, %edi
	callq	_KWork
	movl	$14, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2793 10               # gsm_encode.c:2793:10
.Ltmp285:
	movswl	-96(%rbp), %r14d
	movl	$14, %edi
	movl	$14, %esi
	xorl	%edx, %edx
.Ltmp286:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	xorl	%esi, %esi
	movabsq	$8006436232504454200, %rdi # imm = 0x6F1C9355633EAC38
	callq	_KPrepCall
	movl	$14, %edi
	callq	_KEnqArg
	movl	$16, %edi
	callq	_KEnqArg
	movl	$15, %edi
	callq	_KLinkReturn
	.loc	1 2793 10               # gsm_encode.c:2793:10
.Ltmp287:
	movl	%ebx, %edi
	movl	%r14d, %esi
	callq	gsm_div
	movw	%ax, %bx
	movl	$15, %edi
	movl	$15, %esi
	xorl	%edx, %edx
.Ltmp288:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp1
	movl	$15, %edi
	movl	$2, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 2793 5                # gsm_encode.c:2793:5
.Ltmp289:
	movw	%bx, (%r13)
	movl	$20, %esi
	movl	$2, %edx
	.loc	1 2785 12               # gsm_encode.c:2785:12
	leaq	-94(%rbp), %rdi
.Ltmp290:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KLoad0
	.loc	1 2795 9                # gsm_encode.c:2795:9
.Ltmp291:
	movw	-94(%rbp), %bx
.Ltmp292:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
	movl	$1, 16(%rsp)
	movl	$20, 8(%rsp)
	movl	$2, (%rsp)
	movl	$75, %edi
	movl	$17, %esi
	movl	$2, %edx
	movl	$19, %ecx
	movl	$2, %r8d
	movl	$13, %r9d
	callq	_KTimestamp4
	.loc	1 2795 9                # gsm_encode.c:2795:9
.Ltmp293:
	cmpw	$0, %bx
	movq	%r12, %r15
	jle	.LBB5_24
.Ltmp294:
# BB#23:                                # %if.then72.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$75, %edi
.Ltmp295:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$21, %esi
	movl	$2, %edx
	movq	%r13, %rdi
	callq	_KLoad0
	movl	$6, %edi
	callq	_KWork
	.loc	1 2795 25               # gsm_encode.c:2795:25
.Ltmp296:
	movw	(%r13), %bx
	.loc	1 2795 24 is_stmt 0     # gsm_encode.c:2795:24
	negw	%bx
.Ltmp297:
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	movl	$1, 32(%rsp)
	movl	$21, 24(%rsp)
	movl	$2, 16(%rsp)
	movl	$20, 8(%rsp)
	movl	$3, (%rsp)
	movl	$22, %edi
	movl	$17, %esi
	movl	$3, %edx
	movl	$19, %ecx
	movl	$3, %r8d
	movl	$13, %r9d
	callq	_KTimestamp5
	movl	$22, %edi
	movl	$2, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 2795 19               # gsm_encode.c:2795:19
.Ltmp298:
	movw	%bx, (%r13)
.Ltmp299:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
.LBB5_24:                               # %if.end76.i
                                        #   in Loop: Header=BB5_12 Depth=1
.Ltmp300:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$52, %edi
.Ltmp301:
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$2, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$2, (%rsp)
	movl	$34, %edi
	movl	$18, %esi
	movl	$1, %edx
	movl	$17, %ecx
	movl	$2, %r8d
	movl	$19, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movq	-256(%rbp), %r12        # 8-byte Reload
	.loc	1 2796 9                # gsm_encode.c:2796:9
.Ltmp302:
	cmpl	$8, %r12d
.Ltmp303:
	.loc	1 2796 9 is_stmt 0      # gsm_encode.c:2796:9
	je	.LBB5_37
.Ltmp304:
# BB#25:                                # %if.end80.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$34, %edi
.Ltmp305:
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$19, %edi
	callq	_KWork
	movl	$23, %esi
	movl	$2, %edx
	.loc	1 2785 12               # gsm_encode.c:2785:12
.Ltmp306:
	leaq	-94(%rbp), %rdi
.Ltmp307:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KLoad0
	.loc	1 2801 12               # gsm_encode.c:2801:12
.Ltmp308:
	movswl	-94(%rbp), %r14d
	movl	$24, %esi
	movl	$2, %edx
.Ltmp309:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2801 12               # gsm_encode.c:2801:12
.Ltmp310:
	movswl	(%r13), %ebx
	movl	$25, %esi
	movl	$2, %edx
.Ltmp311:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2801 12               # gsm_encode.c:2801:12
.Ltmp312:
	movswq	-96(%rbp), %rax
	imull	%r14d, %ebx
	shlq	$33, %rbx
	movabsq	$140737488355328, %rcx  # imm = 0x800000000000
	addq	%rcx, %rbx
	sarq	$48, %rbx
	leaq	(%rbx,%rax), %r15
.Ltmp313:
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R15
	leaq	32768(%rbx,%rax), %rbx
.Ltmp314:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$1, 64(%rsp)
	movl	$25, 56(%rsp)
	movl	$5, 48(%rsp)
	movl	$24, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$23, 24(%rsp)
	movl	$7, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$7, (%rsp)
	movl	$66, %r14d
	movl	$66, %edi
	movl	$18, %esi
	movl	$6, %edx
	movl	$17, %ecx
	movl	$7, %r8d
	movl	$19, %r9d
	callq	_KTimestamp7
	movl	$3, 64(%rsp)
	movl	$25, 56(%rsp)
	movl	$7, 48(%rsp)
	movl	$24, 40(%rsp)
	movl	$7, 32(%rsp)
	movl	$23, 24(%rsp)
	movl	$9, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$9, (%rsp)
	movl	$67, %edi
	movl	$18, %esi
	movl	$8, %edx
	movl	$17, %ecx
	movl	$9, %r8d
	movl	$19, %r9d
	callq	_KTimestamp7
	callq	_KPopCDep
	.loc	1 2801 12               # gsm_encode.c:2801:12
.Ltmp315:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB5_27
.Ltmp316:
# BB#26:                                # %cond.true93.i
                                        #   in Loop: Header=BB5_12 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R15
	movl	$67, %edi
.Ltmp317:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2801 12 discriminator 1 # gsm_encode.c:2801:12
.Ltmp318:
	testq	%r15, %r15
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
.Ltmp319:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r15
.Ltmp320:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$4, 64(%rsp)
	movl	$25, 56(%rsp)
	movl	$8, 48(%rsp)
	movl	$24, 40(%rsp)
	movl	$8, 32(%rsp)
	movl	$23, 24(%rsp)
	movl	$10, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$10, (%rsp)
	movl	$65, %r14d
	movl	$65, %edi
	movl	$18, %esi
	movl	$9, %edx
	movl	$17, %ecx
	movl	$10, %r8d
	movl	$19, %r9d
	callq	_KTimestamp7
	callq	_KPopCDep
.LBB5_27:                               # %cond.end99.i
                                        #   in Loop: Header=BB5_12 Depth=1
.Ltmp321:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	movl	$34, %edi
.Ltmp322:
	callq	_KPushCDep
	movl	$27, %edi
	movl	$34, %edx
	movl	$67, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$0, 32(%rsp)
	movl	$27, 24(%rsp)
	movl	$2, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$2, (%rsp)
	movl	$26, %edi
	movl	$18, %esi
	movl	$1, %edx
	movl	$17, %ecx
	movl	$2, %r8d
	movl	$19, %r9d
	callq	_KTimestamp5
	movl	$26, %edi
	movl	$2, %edx
	leaq	-96(%rbp), %rsi
	callq	_KStore
	.loc	1 2801 5                # gsm_encode.c:2801:5
.Ltmp323:
	movw	%r15w, -96(%rbp)
.Ltmp324:
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
	movl	$1, %esi
	movabsq	$7556860733764868569, %rdi # imm = 0x68DF5CCCA52719D9
	callq	_KEnterRegion
	movl	$8, %eax
	.loc	1 2804 22               # gsm_encode.c:2804:22
.Ltmp325:
	subq	%r12, %rax
	movq	%rax, -240(%rbp)        # 8-byte Spill
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	movl	$1, %r15d
	jmp	.LBB5_28
	.align	16, 0x90
.LBB5_33:                               # %cond.end159.i
                                        #   in Loop: Header=BB5_28 Depth=2
.Ltmp326:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movq	-232(%rbp), %rbx        # 8-byte Reload
	.loc	1 2804 5 is_stmt 0      # gsm_encode.c:2804:5
	incq	%rbx
	movl	$35, %r14d
	movl	$35, %edi
.Ltmp327:
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$41, %edi
	movl	$35, %edx
	movl	$73, %ecx
	movl	%r13d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$40, %edi
	movl	$35, %esi
	xorl	%edx, %edx
	movl	$41, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$40, %edi
	movl	$2, %edx
	movq	-216(%rbp), %rsi        # 8-byte Reload
	callq	_KStore
	.loc	1 2809 7                # gsm_encode.c:2809:7
.Ltmp328:
	movw	%r15w, -126(%rbp,%r12)
	movq	%rbx, %r15
.Ltmp329:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-4716497285028998921, %rdi # imm = 0xBE8BA2B555C090F7
	callq	_KExitRegion
	addq	$2, %r12
	movl	$32, %ebx
	movq	-224(%rbp), %r13        # 8-byte Reload
.LBB5_28:                               # %for.cond103.i
                                        #   Parent Loop BB5_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp330:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movl	$34, %edi
.Ltmp331:
	callq	_KPushCDep
	movl	$29, %edi
	movl	$34, %edx
	movl	%ebx, %esi
	movl	%r14d, %ecx
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$1, (%rsp)
	movl	$35, %edi
	movl	$18, %esi
	movl	$2, %edx
	movl	$34, %ecx
	movl	$2, %r8d
	movl	$29, %r9d
	callq	_KTimestamp3
	movl	$29, %edi
	movl	$35, %esi
	callq	_KPhiAddCond
	movl	$29, %edi
	movl	$29, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2804 17               # gsm_encode.c:2804:17
.Ltmp332:
	cmpq	-240(%rbp), %r15        # 8-byte Folded Reload
.Ltmp333:
	.loc	1 2804 5 is_stmt 0      # gsm_encode.c:2804:5
	jg	.LBB5_34
.Ltmp334:
# BB#29:                                # %for.body107.i
                                        #   in Loop: Header=BB5_28 Depth=2
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movq	%r15, -232(%rbp)        # 8-byte Spill
	movl	$2, %esi
	movabsq	$-4716497285028998921, %rdi # imm = 0xBE8BA2B555C090F7
.Ltmp335:
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	callq	_KEnterRegion
	movl	$35, %edi
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KWork
	leaq	-126(%rbp), %rax
	leaq	(%rax,%r12), %rdi
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movl	$28, %esi
	movl	$29, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2806 18               # gsm_encode.c:2806:18
.Ltmp336:
	movswl	-126(%rbp,%r12), %r15d
	movl	$30, %esi
	movl	$2, %edx
.Ltmp337:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r13, %rdi
	callq	_KLoad0
	leaq	-92(%rbp,%r12), %r14
	.loc	1 2806 18               # gsm_encode.c:2806:18
.Ltmp338:
	movswl	(%r13), %ebx
	movl	$31, %esi
	movl	$32, %edx
	movl	$2, %ecx
.Ltmp339:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r14, %rdi
	callq	_KLoad1
	.loc	1 2806 18               # gsm_encode.c:2806:18
.Ltmp340:
	movswq	-92(%rbp,%r12), %rax
	imull	%r15d, %ebx
	shlq	$33, %rbx
	movabsq	$140737488355328, %rcx  # imm = 0x800000000000
	addq	%rcx, %rbx
	sarq	$48, %rbx
	leaq	(%rbx,%rax), %r13
.Ltmp341:
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R13
	leaq	32768(%rbx,%rax), %r15
	movl	$32, %edi
	movl	$29, %esi
	movl	$1, %edx
	movl	$35, %ecx
	movl	$1, %r8d
.Ltmp342:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	movl	$3, 16(%rsp)
	movl	$31, 8(%rsp)
	movl	$7, (%rsp)
	movl	$70, %edi
	movl	$35, %esi
	movl	$7, %edx
	movl	$28, %ecx
	movl	$7, %r8d
	movl	$30, %r9d
	callq	_KTimestamp4
	movl	$1, 16(%rsp)
	movl	$31, 8(%rsp)
	movl	$5, (%rsp)
	movl	$69, %ebx
	movl	$69, %edi
	movl	$35, %esi
	movl	$5, %edx
	movl	$28, %ecx
	movl	$5, %r8d
	movl	$30, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 2806 18               # gsm_encode.c:2806:18
.Ltmp343:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_31
.Ltmp344:
# BB#30:                                # %cond.true125.i
                                        #   in Loop: Header=BB5_28 Depth=2
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R13
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movl	$70, %edi
.Ltmp345:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2806 18 discriminator 1 # gsm_encode.c:2806:18
.Ltmp346:
	testq	%r13, %r13
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
.Ltmp347:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r13
.Ltmp348:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$4, 16(%rsp)
	movl	$31, 8(%rsp)
	movl	$8, (%rsp)
	movl	$68, %ebx
	movl	$68, %edi
	movl	$35, %esi
	movl	$8, %edx
	movl	$28, %ecx
	movl	$8, %r8d
	movl	$30, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
.LBB5_31:                               # %cond.end131.i
                                        #   in Loop: Header=BB5_28 Depth=2
.Ltmp349:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movl	$35, %edi
.Ltmp350:
	callq	_KPushCDep
	movl	$36, %edi
	movl	$35, %edx
	movl	$70, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$20, %edi
	callq	_KWork
	movl	$33, %edi
	movl	$35, %esi
	xorl	%edx, %edx
	movl	$36, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	leaq	-94(%rbp,%r12), %rsi
	movl	$33, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2806 7                # gsm_encode.c:2806:7
.Ltmp351:
	movw	%r13w, -94(%rbp,%r12)
	movl	$37, %esi
	movl	$32, %edx
	movl	$2, %ecx
.Ltmp352:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%r14, %rdi
	callq	_KLoad1
	.loc	1 2809 18               # gsm_encode.c:2809:18
.Ltmp353:
	movswl	-92(%rbp,%r12), %r14d
	movl	$38, %esi
	movl	$2, %edx
	movq	-224(%rbp), %rbx        # 8-byte Reload
.Ltmp354:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2809 18               # gsm_encode.c:2809:18
.Ltmp355:
	movswl	(%rbx), %ebx
	movl	$39, %esi
	movl	$29, %edx
	movl	$2, %ecx
.Ltmp356:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movq	-216(%rbp), %rdi        # 8-byte Reload
	callq	_KLoad1
	.loc	1 2809 18               # gsm_encode.c:2809:18
.Ltmp357:
	movswq	-126(%rbp,%r12), %rax
	imull	%r14d, %ebx
	shlq	$33, %rbx
	movabsq	$140737488355328, %rcx  # imm = 0x800000000000
	addq	%rcx, %rbx
	sarq	$48, %rbx
	leaq	(%rbx,%rax), %r15
.Ltmp358:
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R15
	leaq	32768(%rbx,%rax), %rbx
.Ltmp359:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$1, 16(%rsp)
	movl	$39, 8(%rsp)
	movl	$5, (%rsp)
	movl	$72, %r13d
	movl	$72, %edi
	movl	$35, %esi
	movl	$5, %edx
	movl	$37, %ecx
	movl	$5, %r8d
	movl	$38, %r9d
	callq	_KTimestamp4
	movl	$3, 16(%rsp)
	movl	$39, 8(%rsp)
	movl	$7, (%rsp)
	movl	$73, %edi
	movl	$35, %esi
	movl	$7, %edx
	movl	$37, %ecx
	movl	$7, %r8d
	movl	$38, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 2809 18               # gsm_encode.c:2809:18
.Ltmp360:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB5_33
.Ltmp361:
# BB#32:                                # %cond.true153.i
                                        #   in Loop: Header=BB5_28 Depth=2
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 0
	#DEBUG_VALUE: Reflection_coefficients:n <- 1
	#DEBUG_VALUE: Reflection_coefficients:ltmp <- R15
	#DEBUG_VALUE: Reflection_coefficients:m <- 1
	movl	$73, %edi
.Ltmp362:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2809 18 discriminator 1 # gsm_encode.c:2809:18
.Ltmp363:
	testq	%r15, %r15
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
.Ltmp364:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r15
.Ltmp365:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	movl	$4, 16(%rsp)
	movl	$39, 8(%rsp)
	movl	$8, (%rsp)
	movl	$71, %r13d
	movl	$71, %edi
	movl	$35, %esi
	movl	$8, %edx
	movl	$37, %ecx
	movl	$8, %r8d
	movl	$38, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	jmp	.LBB5_33
.LBB5_1:                                # %if.then.i
.Ltmp366:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	movq	%rbx, -248(%rbp)        # 8-byte Spill
.Ltmp367:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$2462638385922284210, %r14 # imm = 0x222D0C907B239AB2
.Ltmp368:
	#DEBUG_VALUE: Reflection_coefficients:i <- 8
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
.Ltmp369:
	callq	_KEnterRegion
	movabsq	$-3111602966627711438, %rbx # imm = 0xD4D15D967C1A8632
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	jmp	.LBB5_2
	.align	16, 0x90
.LBB5_3:                                # %for.inc.i
                                        #   in Loop: Header=BB5_2 Depth=1
.Ltmp370:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 8
	movl	$2, %esi
	movq	%rbx, %r15
	movq	%r15, %rdi
.Ltmp371:
	callq	_KEnterRegion
	movl	$44, %r12d
	movl	$44, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp372:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	leaq	(%rbx,%r14), %rdi
	movl	$2, %esi
	callq	_KStoreConst
	.loc	1 2761 22               # gsm_encode.c:2761:22
.Ltmp373:
	movw	$0, (%rbx,%r14)
.Ltmp374:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$47, %r13d
	movl	$47, %edi
	movl	$45, %esi
	xorl	%edx, %edx
	movl	$44, %ecx
	xorl	%r8d, %r8d
.Ltmp375:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	movq	%r15, %rbx
	callq	_KExitRegion
	addq	$2, %r14
	movl	$43, %r15d
.LBB5_2:                                # %for.cond.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp376:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Reflection_coefficients:i <- 8
	movl	$6, %edi
.Ltmp377:
	callq	_KPushCDep
	movl	$42, %edi
	movl	$6, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$45, %edi
	movl	$6, %edx
	movl	%r13d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$44, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$42, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$45, %edi
	movl	$44, %esi
	callq	_KPhiAddCond
	movl	$43, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$42, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$42, %edi
	movl	$44, %esi
	callq	_KPhiAddCond
	movl	$45, %edi
	movl	$45, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2761 5                # gsm_encode.c:2761:5
.Ltmp378:
	cmpl	$16, %r14d
	jne	.LBB5_3
.Ltmp379:
# BB#35:                                # %for.cond.pre_exit.for.end170.loopexit.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$1, %esi
	movabsq	$2462638385922284210, %rdi # imm = 0x222D0C907B239AB2
.Ltmp380:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KExitRegion
	movl	$6, %edi
	jmp	.LBB5_39
.LBB5_19:                               # %cond.end48.pre_exit.if.then56.i
.Ltmp381:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movq	%r13, -224(%rbp)        # 8-byte Spill
	movl	$2, %esi
	movabsq	$-4260027496926221719, %rdi # imm = 0xC4E1578FE850EA69
.Ltmp382:
	callq	_KExitRegion
	movl	$1, %esi
	movabsq	$6697108409187511785, %rdi # imm = 0x5CF0E89D87E72DE9
	callq	_KExitRegion
	movl	$52, %edi
	callq	_KPushCDep
	movl	$1, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$1, (%rsp)
	movq	-256(%rbp), %r13        # 8-byte Reload
	movl	$60, %r12d
	xorl	%r15d, %r15d
	movl	$60, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$17, %ecx
	movl	$1, %r8d
	movl	$19, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movl	$1, %esi
	movabsq	$-2263818985144323988, %rdi # imm = 0xE0954CA092AFF06C
	callq	_KEnterRegion
	movl	$53, %ebx
	movabsq	$3464562246335145653, %r14 # imm = 0x30149901CB0926B5
	jmp	.LBB5_20
	.align	16, 0x90
.LBB5_21:                               # %for.body60.i
                                        #   in Loop: Header=BB5_20 Depth=1
.Ltmp383:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$2, %esi
	movq	%r14, %rdi
.Ltmp384:
	callq	_KEnterRegion
	movl	$62, %r15d
	movl	$62, %edi
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
.Ltmp385:
	#DEBUG_VALUE: Reflection_coefficients:r <- [RBP+-224]
	movl	$2, %esi
	movq	-224(%rbp), %rbx        # 8-byte Reload
.Ltmp386:
	#DEBUG_VALUE: Reflection_coefficients:r <- RBX
	movq	%rbx, %rdi
	callq	_KStoreConst
	.loc	1 2789 32               # gsm_encode.c:2789:32
.Ltmp387:
	movw	$0, (%rbx)
	.loc	1 2789 33 is_stmt 0 discriminator 2 # gsm_encode.c:2789:33
.Ltmp388:
	leaq	2(%rbx), %rbx
.Ltmp389:
	movq	%rbx, -224(%rbp)        # 8-byte Spill
.Ltmp390:
	.loc	1 2789 27 discriminator 3 # gsm_encode.c:2789:27
	incl	%r13d
.Ltmp391:
	#DEBUG_VALUE: Reflection_coefficients:i <- R13D
	movl	$61, %r12d
	movl	$61, %edi
	movl	$59, %esi
	movl	$1, %edx
	movl	$62, %ecx
	movl	$1, %r8d
.Ltmp392:
	.loc	1 2905 3 is_stmt 1      # gsm_encode.c:2905:3
	callq	_KTimestamp2
	movl	$64, %ebx
	movl	$64, %edi
	movl	$63, %esi
	xorl	%edx, %edx
	movl	$62, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
.Ltmp393:
.LBB5_20:                               # %for.cond57.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$52, %edi
.Ltmp394:
	callq	_KPushCDep
	movl	$59, %edi
	movl	$52, %edx
	movl	%r12d, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$63, %edi
	movl	$52, %edx
	movl	%ebx, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$63, %edi
	movl	$63, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$62, %edi
	movl	$52, %esi
	movl	$1, %edx
	movl	$59, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$59, %edi
	movl	$62, %esi
	callq	_KPhiAddCond
	movl	$59, %edi
	movl	$59, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$63, %edi
	movl	$62, %esi
	callq	_KPhiAddCond
	callq	_KPopCDep
	.loc	1 2789 7                # gsm_encode.c:2789:7
.Ltmp395:
	cmpl	$8, %r13d
	jle	.LBB5_21
.Ltmp396:
# BB#36:                                # %for.cond57.pre_exit.for.end170.loopexit1.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$1, %esi
	movabsq	$-2263818985144323988, %rdi # imm = 0xE0954CA092AFF06C
.Ltmp397:
	.loc	1 2905 3                # gsm_encode.c:2905:3
	callq	_KExitRegion
	movl	$52, %edi
	jmp	.LBB5_39
.LBB5_37:                               # %if.end76.pre_exit.for.end170.loopexit2.i
.Ltmp398:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$2, %esi
	movabsq	$-4260027496926221719, %rdi # imm = 0xC4E1578FE850EA69
.Ltmp399:
	callq	_KExitRegion
.LBB5_38:                               # %for.end170.loopexit2.i
	movl	$1, %esi
	movabsq	$6697108409187511785, %rdi # imm = 0x5CF0E89D87E72DE9
	callq	_KExitRegion
.Ltmp400:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$17, %edi
.Ltmp401:
.LBB5_39:                               # %Reflection_coefficients.exit
	callq	_KPushCDep
	callq	_KPopCDep
	movq	-248(%rbp), %r15        # 8-byte Reload
.Ltmp402:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	movabsq	$-1632524830202051279, %rdi # imm = 0xE9581B5100CD4531
.Ltmp403:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	movabsq	$-280538901871177029, %r13 # imm = 0xFC1B535AE84A52BB
	movabsq	$7280526126840968639, %rbx # imm = 0x65099FF0404E75BF
	xorl	%esi, %esi
	callq	_KExitRegion
	movabsq	$7729332788392547694, %rdi # imm = 0x6B441B3822EAD56E
.Ltmp404:
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2906 3                # gsm_encode.c:2906:3
	movq	%rbx, %rdi
	xorl	%ebx, %ebx
	callq	_KEnterRegion
	movl	$21, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp405:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	movl	$9, %r14d
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_KEnterRegion
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	jmp	.LBB5_40
.Ltmp406:
	.align	16, 0x90
.LBB5_52:                               # %select.end
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- R15
	movl	$1, (%rsp)
	movl	$4, %r12d
	movl	$3, %edi
.Ltmp407:
	movl	$4, %esi
	movl	$1, %edx
	movl	$6, %ecx
	movl	$1, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	movl	$3, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-216(%rbp), %rbx        # 8-byte Reload
	.loc	1 2848 5                # gsm_encode.c:2848:5
.Ltmp408:
	movw	%r13w, (%r15,%rbx)
	movl	$7, %r13d
	movl	$7, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$1, %r8d
.Ltmp409:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	movl	$10, %r14d
	movl	$10, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$6198582706723278369, %rdi # imm = 0x5605CA21591ECE21
	callq	_KExitRegion
	addq	$2, %rbx
.Ltmp410:
.LBB5_40:                               # %for.cond.i4
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	movl	$8, %edi
.Ltmp411:
	movl	%r14d, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$5, %edi
	movl	%r13d, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$5, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$8, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	.loc	1 2834 3                # gsm_encode.c:2834:3
.Ltmp412:
	cmpl	$16, %ebx
	je	.LBB5_53
.Ltmp413:
# BB#41:                                # %for.body.i
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	movl	$2, %esi
	movabsq	$6198582706723278369, %rdi # imm = 0x5605CA21591ECE21
.Ltmp414:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KEnterRegion
	movl	$4, %edi
	callq	_KPushCDep
	leaq	(%r15,%rbx), %rdi
	movl	$1, %esi
	movl	$2, %edx
	movq	%rdi, %r12
	callq	_KLoad0
	movl	$5, %edi
	callq	_KWork
	.loc	1 2836 12               # gsm_encode.c:2836:12
.Ltmp415:
	movq	%r15, -248(%rbp)        # 8-byte Spill
	movw	(%r15,%rbx), %r15w
.Ltmp416:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	movq	%rbx, -216(%rbp)        # 8-byte Spill
.Ltmp417:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movl	$13, %r14d
	xorl	%ebx, %ebx
	movl	$13, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%r8d, %r8d
.Ltmp418:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	movl	$14, %edi
	movl	$4, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2837 12               # gsm_encode.c:2837:12
.Ltmp419:
	testw	%r15w, %r15w
	jns	.LBB5_45
.Ltmp420:
# BB#42:                                # %cond.true.i5
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$14, %edi
.Ltmp421:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2837 12 discriminator 1 # gsm_encode.c:2837:12
.Ltmp422:
	movzwl	%r15w, %r14d
	movl	$15, %ebx
	movl	$15, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
.Ltmp423:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2837 12 discriminator 1 # gsm_encode.c:2837:12
.Ltmp424:
	cmpl	$32768, %r14d           # imm = 0x8000
	jne	.LBB5_44
.Ltmp425:
# BB#43:                                #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r14d, %r14d
	movw	$32767, %r15w           # imm = 0x7FFF
	jmp	.LBB5_45
.Ltmp426:
.LBB5_44:                               # %cond.false.i7
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$15, %ebx
	movl	$15, %edi
.Ltmp427:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2837 12 discriminator 4 # gsm_encode.c:2837:12
.Ltmp428:
	negl	%r15d
.Ltmp429:
	movl	$12, %r14d
	movl	$12, %edi
	movl	$4, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
.Ltmp430:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.align	16, 0x90
.LBB5_45:                               # %cond.end10.i
                                        #   in Loop: Header=BB5_40 Depth=1
.Ltmp431:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$4, %edi
.Ltmp432:
	callq	_KPushCDep
	movl	$11, %edi
	movl	$4, %edx
	movl	$14, %ecx
	movl	%r14d, %esi
	movl	%ebx, %r8d
	callq	_KPhi3To1
	movl	$1, %edi
	callq	_KWork
	movl	$19, %edi
	movl	$4, %esi
	movl	$1, %edx
	movl	$11, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$19, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2839 9                # gsm_encode.c:2839:9
.Ltmp433:
	movswl	%r15w, %r13d
	cmpl	$22117, %r13d           # imm = 0x5665
	jg	.LBB5_47
.Ltmp434:
# BB#46:                                # %if.then.i8
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	.loc	1 2840 7                # gsm_encode.c:2840:7
	shrl	%r13d
.Ltmp435:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R13W
	movl	$16, %r14d
	movl	$16, %edi
.Ltmp436:
	movl	$4, %esi
	movl	$2, %edx
	movl	$11, %ecx
	movl	$2, %r8d
.Ltmp437:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	callq	_KPopCDep
	xorl	%ebx, %ebx
	jmp	.LBB5_50
.Ltmp438:
	.align	16, 0x90
.LBB5_47:                               # %if.else.i
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$20, %edi
.Ltmp439:
	movl	$4, %esi
	movl	$2, %edx
	movl	$11, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$20, %edi
	callq	_KPushCDep
	.loc	1 2841 16               # gsm_encode.c:2841:16
.Ltmp440:
	cmpl	$31129, %r13d           # imm = 0x7999
	jg	.LBB5_49
.Ltmp441:
# BB#48:                                # %if.then21.i
                                        #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$1, %edi
.Ltmp442:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KWork
	.loc	1 2842 7                # gsm_encode.c:2842:7
.Ltmp443:
	addl	$-11059, %r15d          # imm = 0xFFFFFFFFFFFFD4CD
.Ltmp444:
	movl	$17, %r14d
	movl	$17, %edi
	movl	$4, %esi
	movl	$3, %edx
	movl	$11, %ecx
	movl	$3, %r8d
.Ltmp445:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$20, %ebx
	movw	%r15w, %r13w
	jmp	.LBB5_50
	.align	16, 0x90
.LBB5_49:                               # %if.else25.i
                                        #   in Loop: Header=BB5_40 Depth=1
.Ltmp446:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R15W
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- [RBP+-248]
	movl	$2, %edi
.Ltmp447:
	callq	_KWork
	.loc	1 2845 7                # gsm_encode.c:2845:7
.Ltmp448:
	leal	26624(,%r15,4), %r13d
.Ltmp449:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:temp <- R13W
	movl	$18, %r14d
	movl	$18, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$11, %ecx
	movl	$4, %r8d
.Ltmp450:
	.loc	1 2906 3                # gsm_encode.c:2906:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$20, %ebx
.Ltmp451:
.LBB5_50:                               # %if.end31.i
                                        #   in Loop: Header=BB5_40 Depth=1
	movq	-248(%rbp), %r15        # 8-byte Reload
.Ltmp452:
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- R15
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- R15
	movl	$4, %edi
.Ltmp453:
	callq	_KPushCDep
	movl	$6, %edi
	movl	$4, %edx
	movl	$19, %ecx
	movl	%r14d, %esi
	movl	%ebx, %r8d
	callq	_KPhi3To1
	movl	$2, %esi
	movl	$2, %edx
	movq	%r12, %rbx
	movq	%rbx, %rdi
	callq	_KLoad0
	movl	$8, %edi
	callq	_KWork
	.loc	1 2848 10               # gsm_encode.c:2848:10
.Ltmp454:
	movq	-216(%rbp), %rax        # 8-byte Reload
	cmpw	$0, (%r15,%rax)
	jns	.LBB5_52
.Ltmp455:
# BB#51:                                #   in Loop: Header=BB5_40 Depth=1
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:i <- 1
	#DEBUG_VALUE: Transformation_to_Log_Area_Ratios:r <- R15
	.loc	1 2848 19 is_stmt 0     # gsm_encode.c:2848:19
	negl	%r13d
	jmp	.LBB5_52
.Ltmp456:
.LBB5_53:                               # %Transformation_to_Log_Area_Ratios.exit
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R15
	movabsq	$2077866391087713929, %rbx # imm = 0x1CD6107943818E89
	movl	$1, %esi
	movabsq	$-280538901871177029, %rdi # imm = 0xFC1B535AE84A52BB
.Ltmp457:
	.loc	1 2906 3 is_stmt 1      # gsm_encode.c:2906:3
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$7280526126840968639, %rdi # imm = 0x65099FF0404E75BF
	callq	_KExitRegion
	movabsq	$-356107909005829426, %rdi # imm = 0xFB0ED9BE56001ACE
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$113, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$10, %edi
	callq	_KWork
.Ltmp458:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R15
	movl	$1, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2880 3                # gsm_encode.c:2880:3
.Ltmp459:
	movswq	(%r15), %rax
	movq	%r15, %r13
.Ltmp460:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	shlq	$45, %rax
	leaq	(%rax,%rax,4), %rbx
	sarq	$48, %rbx
.Ltmp461:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- RBX
	leaq	32768(%rbx), %r15
	movl	$27, %r14d
	movl	$27, %edi
	movl	$1, %esi
	movl	$4, %edx
.Ltmp462:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$28, %edi
	movl	$1, %esi
	movl	$6, %edx
	callq	_KTimestamp1
	.loc	1 2880 3                # gsm_encode.c:2880:3
.Ltmp463:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_55
.Ltmp464:
# BB#54:                                # %cond.true.i17
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- RBX
	movl	$28, %edi
.Ltmp465:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2880 3 discriminator 1 # gsm_encode.c:2880:3
.Ltmp466:
	testq	%rbx, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
.Ltmp467:
	cmovgq	%rax, %rbx
	movl	$26, %r14d
	movl	$26, %edi
	movl	$1, %esi
	movl	$7, %edx
.Ltmp468:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp469:
.LBB5_55:                               # %cond.end.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$25, %edi
.Ltmp470:
	movl	$28, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2880 3 discriminator 4 # gsm_encode.c:2880:3
.Ltmp471:
	leaq	33024(%rbx), %r15
	movl	$31, %r14d
	movl	$31, %edi
	movl	$25, %esi
	movl	$1, %edx
.Ltmp472:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$32, %edi
	movl	$25, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	.loc	1 2880 3 discriminator 4 # gsm_encode.c:2880:3
.Ltmp473:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_56
.Ltmp474:
# BB#57:                                # %cond.true14.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$32, %edi
.Ltmp475:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2880 3 discriminator 5 # gsm_encode.c:2880:3
.Ltmp476:
	cmpq	$-256, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$30, %r14d
	movl	$30, %edi
	movl	$25, %esi
	movl	$4, %edx
.Ltmp477:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_58
.Ltmp478:
.LBB5_56:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	.loc	1 2880 3 discriminator 4 # gsm_encode.c:2880:3
	addq	$256, %rbx              # imm = 0x100
.Ltmp479:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- RBX
.LBB5_58:                               # %cond.end20.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$29, %edi
.Ltmp480:
	movl	$32, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2880 3 discriminator 8 # gsm_encode.c:2880:3
.Ltmp481:
	shll	$16, %ebx
	sarl	$25, %ebx
	movl	$34, %edi
	movl	$29, %esi
	movl	$2, %edx
.Ltmp482:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2880 3 discriminator 8 # gsm_encode.c:2880:3
.Ltmp483:
	cmpl	$31, %ebx
	jle	.LBB5_60
.Ltmp484:
# BB#59:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	xorl	%r12d, %r12d
	movl	$63, %r15d
	xorl	%r14d, %r14d
	jmp	.LBB5_62
.Ltmp485:
.LBB5_60:                               # %cond.false30.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$34, %edi
.Ltmp486:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$35, %r14d
	movl	$35, %edi
	movl	$29, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r12d, %r12d
	.loc	1 2880 3 discriminator 10 # gsm_encode.c:2880:3
.Ltmp487:
	cmpl	$-32, %ebx
	movl	$0, %r15d
	jl	.LBB5_62
.Ltmp488:
# BB#61:                                # %cond.false35.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$35, %r14d
	movl	$35, %edi
.Ltmp489:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2880 3 discriminator 13 # gsm_encode.c:2880:3
.Ltmp490:
	addl	$32, %ebx
	movl	$33, %r12d
	movl	$33, %edi
	movl	$29, %esi
	movl	$4, %edx
.Ltmp491:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2880 3                # gsm_encode.c:2880:3
.Ltmp492:
	movl	%ebx, %r15d
.Ltmp493:
.LBB5_62:                               # %cond.end40.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- R13
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$3, %edi
.Ltmp494:
	movl	$34, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r12d, %esi
	movl	%r14d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$2, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	movl	$2, %edx
	movq	%r13, %rbx
.Ltmp495:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	movq	%rbx, -248(%rbp)        # 8-byte Spill
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 2880 3 discriminator 16 # gsm_encode.c:2880:3
.Ltmp496:
	movw	%r15w, (%rbx)
	leaq	2(%rbx), %r13
.Ltmp497:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$4, %esi
	movl	$2, %edx
.Ltmp498:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2881 3                # gsm_encode.c:2881:3
.Ltmp499:
	movswq	2(%rbx), %r14
.Ltmp500:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$175921860444160, %rax  # imm = 0xA00000000000
	imulq	%rax, %r14
	sarq	$48, %r14
.Ltmp501:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- R14
	leaq	32768(%r14), %r15
	movl	$38, %r12d
	movl	$38, %edi
	movl	$4, %esi
	movl	$4, %edx
.Ltmp502:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$39, %edi
	movl	$4, %esi
	movl	$6, %edx
	callq	_KTimestamp1
	.loc	1 2881 3                # gsm_encode.c:2881:3
.Ltmp503:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_64
.Ltmp504:
# BB#63:                                # %cond.true52.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- R14
	movl	$39, %edi
.Ltmp505:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2881 3 discriminator 1 # gsm_encode.c:2881:3
.Ltmp506:
	testq	%r14, %r14
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
.Ltmp507:
	cmovgq	%rax, %r14
	movl	$37, %r12d
	movl	$37, %edi
	movl	$4, %esi
	movl	$7, %edx
.Ltmp508:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp509:
.LBB5_64:                               # %cond.end58.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$36, %edi
.Ltmp510:
	movl	$39, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2881 3 discriminator 4 # gsm_encode.c:2881:3
.Ltmp511:
	leaq	33024(%r14), %r15
	movl	$43, %edi
	movl	$36, %esi
	movl	$3, %edx
.Ltmp512:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$42, %r12d
	movl	$42, %edi
	movl	$36, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2881 3 discriminator 4 # gsm_encode.c:2881:3
.Ltmp513:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_65
.Ltmp514:
# BB#66:                                # %cond.true66.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$43, %edi
.Ltmp515:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2881 3 discriminator 5 # gsm_encode.c:2881:3
.Ltmp516:
	cmpq	$-256, %r14
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r14
	movl	$41, %r12d
	movl	$41, %edi
	movl	$36, %esi
	movl	$4, %edx
.Ltmp517:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_67
.Ltmp518:
.LBB5_65:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	.loc	1 2881 3 discriminator 4 # gsm_encode.c:2881:3
	addq	$256, %r14              # imm = 0x100
.Ltmp519:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- R14
.LBB5_67:                               # %cond.end72.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movl	$40, %edi
.Ltmp520:
	movl	$43, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2881 3 discriminator 8 # gsm_encode.c:2881:3
.Ltmp521:
	shll	$16, %r14d
	sarl	$25, %r14d
	movl	$45, %edi
	movl	$40, %esi
	movl	$2, %edx
.Ltmp522:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
.Ltmp523:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R13
	movq	%r13, %rbx
.Ltmp524:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	.loc	1 2881 3 discriminator 8 # gsm_encode.c:2881:3
	cmpl	$31, %r14d
	jle	.LBB5_69
.Ltmp525:
# BB#68:
	xorl	%r12d, %r12d
	movl	$63, %r15d
	xorl	%r13d, %r13d
	jmp	.LBB5_71
.LBB5_69:                               # %cond.false82.i
	movl	$45, %edi
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$46, %r12d
	movl	$46, %edi
	movl	$40, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r13d, %r13d
	.loc	1 2881 3 discriminator 10 # gsm_encode.c:2881:3
.Ltmp526:
	cmpl	$-32, %r14d
	movl	$0, %r15d
	jl	.LBB5_71
.Ltmp527:
# BB#70:                                # %cond.false87.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$46, %r12d
	movl	$46, %edi
.Ltmp528:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2881 3 discriminator 13 # gsm_encode.c:2881:3
.Ltmp529:
	addl	$32, %r14d
	movl	$44, %r13d
	movl	$44, %edi
	movl	$40, %esi
	movl	$4, %edx
.Ltmp530:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2881 3                # gsm_encode.c:2881:3
.Ltmp531:
	movl	%r14d, %r15d
.Ltmp532:
.LBB5_71:                               # %cond.end92.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$6, %edi
.Ltmp533:
	movl	$45, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r13d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp534:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2881 3 discriminator 16 # gsm_encode.c:2881:3
	movw	%r15w, 2(%rbx)
	leaq	4(%rbx), %r14
.Ltmp535:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$7, %esi
	movl	$2, %edx
.Ltmp536:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2882 3                # gsm_encode.c:2882:3
.Ltmp537:
	movswq	4(%rbx), %rbx
.Ltmp538:
	movabsq	$175921860444160, %rax  # imm = 0xA00000000000
.Ltmp539:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	34816(%rbx), %r15
	movl	$49, %r12d
	movl	$49, %edi
	movl	$7, %esi
	movl	$4, %edx
.Ltmp540:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$50, %edi
	movl	$7, %esi
	movl	$6, %edx
	callq	_KTimestamp1
	.loc	1 2882 3                # gsm_encode.c:2882:3
.Ltmp541:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_72
.Ltmp542:
# BB#73:                                # %cond.true105.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movq	%r14, -216(%rbp)        # 8-byte Spill
.Ltmp543:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$50, %edi
.Ltmp544:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2882 3 discriminator 1 # gsm_encode.c:2882:3
.Ltmp545:
	cmpq	$-2048, %rbx            # imm = 0xFFFFFFFFFFFFF800
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$48, %r12d
	movl	$48, %edi
	movl	$7, %esi
	movl	$7, %edx
.Ltmp546:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_74
.LBB5_72:
.Ltmp547:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movq	%r14, -216(%rbp)        # 8-byte Spill
.Ltmp548:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2882 3                # gsm_encode.c:2882:3
	addq	$2048, %rbx             # imm = 0x800
.Ltmp549:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- RBX
.LBB5_74:                               # %cond.end111.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movabsq	$-72057594037927936, %r14 # imm = 0xFF00000000000000
	movl	$47, %edi
.Ltmp550:
	movl	$50, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2882 3 discriminator 4 # gsm_encode.c:2882:3
.Ltmp551:
	movswq	%bx, %r13
	leaq	33024(%r13), %r15
	movl	$53, %r12d
	movl	$53, %edi
	movl	$47, %esi
	movl	$1, %edx
.Ltmp552:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$54, %edi
	movl	$47, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	.loc	1 2882 3 discriminator 4 # gsm_encode.c:2882:3
.Ltmp553:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB5_75
# BB#76:                                # %cond.true119.i
.Ltmp554:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	shlq	$48, %rbx
	movl	$54, %edi
.Ltmp555:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2882 3 discriminator 5 # gsm_encode.c:2882:3
.Ltmp556:
	cmpq	%r14, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$52, %r12d
	movl	$52, %edi
	movl	$47, %esi
	movl	$4, %edx
.Ltmp557:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_77
.LBB5_75:
.Ltmp558:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2882 3 discriminator 4 # gsm_encode.c:2882:3
	addq	$256, %r13              # imm = 0x100
.Ltmp559:
.LBB5_77:                               # %cond.end125.i
	movq	-216(%rbp), %r14        # 8-byte Reload
.Ltmp560:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$51, %edi
.Ltmp561:
	movl	$54, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2882 3 discriminator 8 # gsm_encode.c:2882:3
.Ltmp562:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$56, %edi
	movl	$51, %esi
	movl	$2, %edx
.Ltmp563:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2882 3 discriminator 8 # gsm_encode.c:2882:3
.Ltmp564:
	cmpl	$15, %r13d
	jle	.LBB5_79
.Ltmp565:
# BB#78:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r12d, %r12d
	movl	$31, %r15d
	xorl	%ebx, %ebx
	jmp	.LBB5_81
.Ltmp566:
.LBB5_79:                               # %cond.false135.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$56, %edi
.Ltmp567:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$57, %r12d
	movl	$57, %edi
	movl	$51, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%ebx, %ebx
	.loc	1 2882 3 discriminator 10 # gsm_encode.c:2882:3
.Ltmp568:
	cmpl	$-16, %r13d
	movl	$0, %r15d
	jl	.LBB5_81
.Ltmp569:
# BB#80:                                # %cond.false140.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$57, %r12d
	movl	$57, %edi
.Ltmp570:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2882 3 discriminator 13 # gsm_encode.c:2882:3
.Ltmp571:
	addl	$16, %r13d
	movl	$55, %ebx
	movl	$55, %edi
	movl	$51, %esi
	movl	$4, %edx
.Ltmp572:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2882 3                # gsm_encode.c:2882:3
.Ltmp573:
	movl	%r13d, %r15d
.Ltmp574:
.LBB5_81:                               # %cond.end145.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$9, %edi
.Ltmp575:
	movl	$56, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%ebx, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$8, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp576:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2882 3 discriminator 16 # gsm_encode.c:2882:3
	movw	%r15w, 4(%rbx)
	leaq	6(%rbx), %rdi
.Ltmp577:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RDI
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movl	$10, %esi
	movl	$2, %edx
.Ltmp578:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	callq	_KLoad0
	.loc	1 2883 3                # gsm_encode.c:2883:3
.Ltmp579:
	movswq	6(%rbx), %rbx
.Ltmp580:
	movabsq	$175921860444160, %rax  # imm = 0xA00000000000
.Ltmp581:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	30208(%rbx), %r12
	movl	$60, %r15d
	movl	$60, %edi
	movl	$10, %esi
	movl	$4, %edx
.Ltmp582:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$61, %edi
	movl	$10, %esi
	movl	$6, %edx
	callq	_KTimestamp1
	.loc	1 2883 3                # gsm_encode.c:2883:3
.Ltmp583:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_82
.Ltmp584:
# BB#83:                                # %cond.true158.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$61, %edi
.Ltmp585:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2883 3 discriminator 1 # gsm_encode.c:2883:3
.Ltmp586:
	cmpq	$2560, %rbx             # imm = 0xA00
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$59, %r15d
	movl	$59, %edi
	movl	$10, %esi
	movl	$7, %edx
.Ltmp587:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_84
.LBB5_82:
.Ltmp588:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2883 3                # gsm_encode.c:2883:3
	addq	$-2560, %rbx            # imm = 0xFFFFFFFFFFFFF600
.Ltmp589:
.LBB5_84:                               # %cond.end164.i
	movabsq	$-72057594037927936, %r14 # imm = 0xFF00000000000000
.Ltmp590:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$58, %edi
.Ltmp591:
	movl	$61, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2883 3 discriminator 4 # gsm_encode.c:2883:3
.Ltmp592:
	movswq	%bx, %r13
	leaq	33024(%r13), %r12
	movl	$64, %r15d
	movl	$64, %edi
	movl	$58, %esi
	movl	$1, %edx
.Ltmp593:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$65, %edi
	movl	$58, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	.loc	1 2883 3 discriminator 4 # gsm_encode.c:2883:3
.Ltmp594:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_85
# BB#86:                                # %cond.true172.i
.Ltmp595:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	shlq	$48, %rbx
	movl	$65, %edi
.Ltmp596:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2883 3 discriminator 5 # gsm_encode.c:2883:3
.Ltmp597:
	cmpq	%r14, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$63, %r15d
	movl	$63, %edi
	movl	$58, %esi
	movl	$4, %edx
.Ltmp598:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_87
.LBB5_85:
.Ltmp599:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2883 3 discriminator 4 # gsm_encode.c:2883:3
	addq	$256, %r13              # imm = 0x100
.Ltmp600:
.LBB5_87:                               # %cond.end178.i
	movq	-216(%rbp), %rbx        # 8-byte Reload
.Ltmp601:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$62, %edi
.Ltmp602:
	movl	$65, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2883 3 discriminator 8 # gsm_encode.c:2883:3
.Ltmp603:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$67, %edi
	movl	$62, %esi
	movl	$2, %edx
.Ltmp604:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2883 3 discriminator 8 # gsm_encode.c:2883:3
.Ltmp605:
	cmpl	$15, %r13d
	jle	.LBB5_89
.Ltmp606:
# BB#88:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r15d, %r15d
	movw	$31, %r14w
	xorl	%r12d, %r12d
	jmp	.LBB5_91
.Ltmp607:
.LBB5_89:                               # %cond.false188.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$67, %edi
.Ltmp608:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$68, %r12d
	movl	$68, %edi
	movl	$62, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r15d, %r15d
	.loc	1 2883 3 discriminator 10 # gsm_encode.c:2883:3
.Ltmp609:
	cmpl	$-16, %r13d
	movl	$0, %r14d
	jl	.LBB5_91
.Ltmp610:
# BB#90:                                # %cond.false193.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$68, %r12d
	movl	$68, %edi
.Ltmp611:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2883 3 discriminator 13 # gsm_encode.c:2883:3
.Ltmp612:
	addl	$16, %r13d
	movl	$66, %r15d
	movl	$66, %edi
	movl	$62, %esi
	movl	$4, %edx
.Ltmp613:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%r13w, %r14w
.Ltmp614:
.LBB5_91:                               # %cond.end198.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$12, %edi
.Ltmp615:
	movl	$67, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$11, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$11, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp616:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2883 3 discriminator 16 # gsm_encode.c:2883:3
	movw	%r14w, 6(%rbx)
	leaq	8(%rbx), %rdi
.Ltmp617:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RDI
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movl	$13, %esi
	movl	$2, %edx
.Ltmp618:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	callq	_KLoad0
	.loc	1 2885 3                # gsm_encode.c:2885:3
.Ltmp619:
	movswq	8(%rbx), %rax
.Ltmp620:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$119949846642688, %rbx  # imm = 0x6D1800000000
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	32862(%rbx), %r12
	movl	$72, %edi
	movl	$13, %esi
	movl	$6, %edx
.Ltmp621:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$71, %r15d
	movl	$71, %edi
	movl	$13, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	.loc	1 2885 3                # gsm_encode.c:2885:3
.Ltmp622:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_92
.Ltmp623:
# BB#93:                                # %cond.true211.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$72, %edi
.Ltmp624:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2885 3 discriminator 1 # gsm_encode.c:2885:3
.Ltmp625:
	cmpq	$-94, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$70, %r15d
	movl	$70, %edi
	movl	$13, %esi
	movl	$7, %edx
.Ltmp626:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_94
.LBB5_92:
.Ltmp627:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2885 3                # gsm_encode.c:2885:3
	addq	$94, %rbx
.Ltmp628:
.LBB5_94:                               # %cond.end217.i
	movabsq	$-72057594037927936, %r14 # imm = 0xFF00000000000000
.Ltmp629:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$69, %edi
.Ltmp630:
	movl	$72, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2885 3 discriminator 4 # gsm_encode.c:2885:3
.Ltmp631:
	movswq	%bx, %r13
	leaq	33024(%r13), %r12
	movl	$76, %edi
	movl	$69, %esi
	movl	$3, %edx
.Ltmp632:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$75, %r15d
	movl	$75, %edi
	movl	$69, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2885 3 discriminator 4 # gsm_encode.c:2885:3
.Ltmp633:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_95
# BB#96:                                # %cond.true225.i
.Ltmp634:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	shlq	$48, %rbx
	movl	$76, %edi
.Ltmp635:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2885 3 discriminator 5 # gsm_encode.c:2885:3
.Ltmp636:
	cmpq	%r14, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$74, %r15d
	movl	$74, %edi
	movl	$69, %esi
	movl	$4, %edx
.Ltmp637:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_97
.LBB5_95:
.Ltmp638:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2885 3 discriminator 4 # gsm_encode.c:2885:3
	addq	$256, %r13              # imm = 0x100
.Ltmp639:
.LBB5_97:                               # %cond.end231.i
	movq	-216(%rbp), %rbx        # 8-byte Reload
.Ltmp640:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$73, %edi
.Ltmp641:
	movl	$76, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2885 3 discriminator 8 # gsm_encode.c:2885:3
.Ltmp642:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$78, %edi
	movl	$73, %esi
	movl	$2, %edx
.Ltmp643:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2885 3 discriminator 8 # gsm_encode.c:2885:3
.Ltmp644:
	cmpl	$7, %r13d
	jle	.LBB5_99
.Ltmp645:
# BB#98:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r12d, %r12d
	movw	$15, %r14w
	xorl	%r15d, %r15d
	jmp	.LBB5_101
.Ltmp646:
.LBB5_99:                               # %cond.false241.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$78, %edi
.Ltmp647:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$79, %r12d
	movl	$79, %edi
	movl	$73, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r15d, %r15d
	.loc	1 2885 3 discriminator 10 # gsm_encode.c:2885:3
.Ltmp648:
	cmpl	$-8, %r13d
	movl	$0, %r14d
	jl	.LBB5_101
.Ltmp649:
# BB#100:                               # %cond.false246.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$79, %r12d
	movl	$79, %edi
.Ltmp650:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2885 3 discriminator 13 # gsm_encode.c:2885:3
.Ltmp651:
	addl	$8, %r13d
	movl	$77, %r15d
	movl	$77, %edi
	movl	$73, %esi
	movl	$4, %edx
.Ltmp652:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%r13w, %r14w
.Ltmp653:
.LBB5_101:                              # %cond.end251.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$15, %edi
.Ltmp654:
	movl	$78, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$14, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$14, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp655:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2885 3 discriminator 16 # gsm_encode.c:2885:3
	movw	%r14w, 8(%rbx)
	leaq	10(%rbx), %rdi
.Ltmp656:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RDI
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movl	$16, %esi
	movl	$2, %edx
.Ltmp657:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	callq	_KLoad0
	.loc	1 2886 3                # gsm_encode.c:2886:3
.Ltmp658:
	movswq	10(%rbx), %rax
.Ltmp659:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$131941395333120, %rbx  # imm = 0x780000000000
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	30976(%rbx), %r12
	movl	$82, %r15d
	movl	$82, %edi
	movl	$16, %esi
	movl	$4, %edx
.Ltmp660:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$83, %edi
	movl	$16, %esi
	movl	$6, %edx
	callq	_KTimestamp1
	.loc	1 2886 3                # gsm_encode.c:2886:3
.Ltmp661:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_102
.Ltmp662:
# BB#103:                               # %cond.true264.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$83, %edi
.Ltmp663:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2886 3 discriminator 1 # gsm_encode.c:2886:3
.Ltmp664:
	cmpq	$1792, %rbx             # imm = 0x700
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$81, %r15d
	movl	$81, %edi
	movl	$16, %esi
	movl	$7, %edx
.Ltmp665:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_104
.LBB5_102:
.Ltmp666:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2886 3                # gsm_encode.c:2886:3
	addq	$-1792, %rbx            # imm = 0xFFFFFFFFFFFFF900
.Ltmp667:
.LBB5_104:                              # %cond.end270.i
	movabsq	$-72057594037927936, %r14 # imm = 0xFF00000000000000
.Ltmp668:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$80, %edi
.Ltmp669:
	movl	$83, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2886 3 discriminator 4 # gsm_encode.c:2886:3
.Ltmp670:
	movswq	%bx, %r13
	leaq	33024(%r13), %r12
	movl	$87, %edi
	movl	$80, %esi
	movl	$3, %edx
.Ltmp671:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$86, %r15d
	movl	$86, %edi
	movl	$80, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2886 3 discriminator 4 # gsm_encode.c:2886:3
.Ltmp672:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_105
# BB#106:                               # %cond.true278.i
.Ltmp673:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	shlq	$48, %rbx
	movl	$87, %edi
.Ltmp674:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2886 3 discriminator 5 # gsm_encode.c:2886:3
.Ltmp675:
	cmpq	%r14, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$85, %r15d
	movl	$85, %edi
	movl	$80, %esi
	movl	$4, %edx
.Ltmp676:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_107
.LBB5_105:
.Ltmp677:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2886 3 discriminator 4 # gsm_encode.c:2886:3
	addq	$256, %r13              # imm = 0x100
.Ltmp678:
.LBB5_107:                              # %cond.end284.i
	movq	-216(%rbp), %rbx        # 8-byte Reload
.Ltmp679:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$84, %edi
.Ltmp680:
	movl	$87, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2886 3 discriminator 8 # gsm_encode.c:2886:3
.Ltmp681:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$89, %edi
	movl	$84, %esi
	movl	$2, %edx
.Ltmp682:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2886 3 discriminator 8 # gsm_encode.c:2886:3
.Ltmp683:
	cmpl	$7, %r13d
	jle	.LBB5_109
.Ltmp684:
# BB#108:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r12d, %r12d
	movw	$15, %r14w
	xorl	%r15d, %r15d
	jmp	.LBB5_111
.Ltmp685:
.LBB5_109:                              # %cond.false294.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$89, %edi
.Ltmp686:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$90, %r12d
	movl	$90, %edi
	movl	$84, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r15d, %r15d
	.loc	1 2886 3 discriminator 10 # gsm_encode.c:2886:3
.Ltmp687:
	cmpl	$-8, %r13d
	movl	$0, %r14d
	jl	.LBB5_111
.Ltmp688:
# BB#110:                               # %cond.false299.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$90, %r12d
	movl	$90, %edi
.Ltmp689:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2886 3 discriminator 13 # gsm_encode.c:2886:3
.Ltmp690:
	addl	$8, %r13d
	movl	$88, %r15d
	movl	$88, %edi
	movl	$84, %esi
	movl	$4, %edx
.Ltmp691:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%r13w, %r14w
.Ltmp692:
.LBB5_111:                              # %cond.end304.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$18, %edi
.Ltmp693:
	movl	$89, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$17, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$17, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp694:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2886 3 discriminator 16 # gsm_encode.c:2886:3
	movw	%r14w, 10(%rbx)
	leaq	12(%rbx), %rdi
.Ltmp695:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RDI
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movl	$19, %esi
	movl	$2, %edx
.Ltmp696:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	callq	_KLoad0
	.loc	1 2887 3                # gsm_encode.c:2887:3
.Ltmp697:
	movswq	12(%rbx), %rax
.Ltmp698:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	movabsq	$73306501808128, %rbx   # imm = 0x42AC00000000
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	32427(%rbx), %r12
	movl	$94, %edi
	movl	$19, %esi
	movl	$6, %edx
.Ltmp699:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$93, %r15d
	movl	$93, %edi
	movl	$19, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	.loc	1 2887 3                # gsm_encode.c:2887:3
.Ltmp700:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_112
.Ltmp701:
# BB#113:                               # %cond.true317.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$94, %edi
.Ltmp702:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2887 3 discriminator 1 # gsm_encode.c:2887:3
.Ltmp703:
	cmpq	$341, %rbx              # imm = 0x155
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$92, %r15d
	movl	$92, %edi
	movl	$19, %esi
	movl	$7, %edx
.Ltmp704:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_114
.LBB5_112:
.Ltmp705:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2887 3                # gsm_encode.c:2887:3
	addq	$-341, %rbx             # imm = 0xFFFFFFFFFFFFFEAB
.Ltmp706:
.LBB5_114:                              # %cond.end323.i
	movabsq	$-72057594037927936, %r14 # imm = 0xFF00000000000000
.Ltmp707:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	movl	$91, %edi
.Ltmp708:
	movl	$94, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2887 3 discriminator 4 # gsm_encode.c:2887:3
.Ltmp709:
	movswq	%bx, %r13
	leaq	33024(%r13), %r12
	movl	$98, %edi
	movl	$91, %esi
	movl	$3, %edx
.Ltmp710:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$97, %r15d
	movl	$97, %edi
	movl	$91, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2887 3 discriminator 4 # gsm_encode.c:2887:3
.Ltmp711:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_115
# BB#116:                               # %cond.true331.i
.Ltmp712:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	shlq	$48, %rbx
	movl	$98, %edi
.Ltmp713:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2887 3 discriminator 5 # gsm_encode.c:2887:3
.Ltmp714:
	cmpq	%r14, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$96, %r15d
	movl	$96, %edi
	movl	$91, %esi
	movl	$4, %edx
.Ltmp715:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_117
.LBB5_115:
.Ltmp716:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- [RBP+-216]
	.loc	1 2887 3 discriminator 4 # gsm_encode.c:2887:3
	addq	$256, %r13              # imm = 0x100
.Ltmp717:
.LBB5_117:                              # %cond.end337.i
	movq	-216(%rbp), %rbx        # 8-byte Reload
.Ltmp718:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$95, %edi
.Ltmp719:
	movl	$98, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2887 3 discriminator 8 # gsm_encode.c:2887:3
.Ltmp720:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$100, %edi
	movl	$95, %esi
	movl	$2, %edx
.Ltmp721:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2887 3 discriminator 8 # gsm_encode.c:2887:3
.Ltmp722:
	cmpl	$3, %r13d
	jle	.LBB5_119
.Ltmp723:
# BB#118:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	xorl	%r15d, %r15d
	movw	$7, %r14w
	xorl	%r12d, %r12d
	jmp	.LBB5_121
.Ltmp724:
.LBB5_119:                              # %cond.false347.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$100, %edi
.Ltmp725:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$101, %r12d
	movl	$101, %edi
	movl	$95, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r15d, %r15d
	.loc	1 2887 3 discriminator 10 # gsm_encode.c:2887:3
.Ltmp726:
	cmpl	$-4, %r13d
	movl	$0, %r14d
	jl	.LBB5_121
.Ltmp727:
# BB#120:                               # %cond.false352.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$101, %r12d
	movl	$101, %edi
.Ltmp728:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2887 3 discriminator 13 # gsm_encode.c:2887:3
.Ltmp729:
	addl	$4, %r13d
	movl	$99, %r15d
	movl	$99, %edi
	movl	$95, %esi
	movl	$4, %edx
.Ltmp730:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%r13w, %r14w
.Ltmp731:
.LBB5_121:                              # %cond.end357.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- [RBP+-248]
	#DEBUG_VALUE: Quantization_and_coding:LAR <- RBX
	movl	$21, %edi
.Ltmp732:
	movl	$100, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$11, %edi
	callq	_KWork
	movl	$20, %edi
	movl	$21, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$20, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp733:
	#DEBUG_VALUE: Gsm_LPC_Analysis:LARc <- RBX
	.loc	1 2887 3 discriminator 16 # gsm_encode.c:2887:3
	movw	%r14w, 12(%rbx)
	leaq	14(%rbx), %r14
.Ltmp734:
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$22, %esi
	movl	$2, %edx
.Ltmp735:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2888 3                # gsm_encode.c:2888:3
.Ltmp736:
	movswq	14(%rbx), %rax
	movabsq	$77618648973312, %rbx   # imm = 0x469800000000
.Ltmp737:
	imulq	%rax, %rbx
	sarq	$48, %rbx
	leaq	31624(%rbx), %r12
	movl	$105, %edi
	movl	$22, %esi
	movl	$6, %edx
.Ltmp738:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$104, %r15d
	movl	$104, %edi
	movl	$22, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	.loc	1 2888 3                # gsm_encode.c:2888:3
.Ltmp739:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_122
.Ltmp740:
# BB#123:                               # %cond.true370.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$105, %edi
.Ltmp741:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2888 3 discriminator 1 # gsm_encode.c:2888:3
.Ltmp742:
	cmpq	$1144, %rbx             # imm = 0x478
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$103, %r15d
	movl	$103, %edi
	movl	$22, %esi
	movl	$7, %edx
.Ltmp743:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_124
.Ltmp744:
.LBB5_122:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	.loc	1 2888 3                # gsm_encode.c:2888:3
	addq	$-1144, %rbx            # imm = 0xFFFFFFFFFFFFFB88
.Ltmp745:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- RBX
.LBB5_124:                              # %cond.end376.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$102, %edi
.Ltmp746:
	movl	$105, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2888 3 discriminator 4 # gsm_encode.c:2888:3
.Ltmp747:
	movswq	%bx, %r13
	leaq	33024(%r13), %r12
	movl	$108, %r15d
	movl	$108, %edi
	movl	$102, %esi
	movl	$1, %edx
.Ltmp748:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	movl	$109, %edi
	movl	$102, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	.loc	1 2888 3 discriminator 4 # gsm_encode.c:2888:3
.Ltmp749:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB5_125
.Ltmp750:
# BB#126:                               # %cond.true384.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	shlq	$48, %rbx
	movl	$109, %edi
.Ltmp751:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movabsq	$-72057594037927936, %rax # imm = 0xFF00000000000000
	.loc	1 2888 3 discriminator 5 # gsm_encode.c:2888:3
.Ltmp752:
	cmpq	%rax, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r13
	movl	$107, %r15d
	movl	$107, %edi
	movl	$102, %esi
	movl	$4, %edx
.Ltmp753:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB5_127
.Ltmp754:
.LBB5_125:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	.loc	1 2888 3 discriminator 4 # gsm_encode.c:2888:3
	addq	$256, %r13              # imm = 0x100
.Ltmp755:
	#DEBUG_VALUE: Quantization_and_coding:ltmp <- R13
.LBB5_127:                              # %cond.end390.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$106, %edi
.Ltmp756:
	movl	$109, %edx
	.loc	1 2907 3                # gsm_encode.c:2907:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2888 3 discriminator 8 # gsm_encode.c:2888:3
.Ltmp757:
	shll	$16, %r13d
	sarl	$25, %r13d
	movl	$111, %edi
	movl	$106, %esi
	movl	$2, %edx
.Ltmp758:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	.loc	1 2888 3 discriminator 8 # gsm_encode.c:2888:3
.Ltmp759:
	cmpl	$3, %r13d
	jle	.LBB5_129
.Ltmp760:
# BB#128:
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	xorl	%r15d, %r15d
	movw	$7, %bx
	xorl	%r12d, %r12d
	jmp	.LBB5_131
.Ltmp761:
.LBB5_129:                              # %cond.false400.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$111, %edi
.Ltmp762:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$112, %r12d
	movl	$112, %edi
	movl	$106, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	xorl	%r15d, %r15d
	.loc	1 2888 3 discriminator 10 # gsm_encode.c:2888:3
.Ltmp763:
	cmpl	$-4, %r13d
	movl	$0, %ebx
	jl	.LBB5_131
.Ltmp764:
# BB#130:                               # %cond.false405.i
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$112, %r12d
	movl	$112, %edi
.Ltmp765:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2888 3 discriminator 13 # gsm_encode.c:2888:3
.Ltmp766:
	addl	$4, %r13d
	movl	$110, %r15d
	movl	$110, %edi
	movl	$106, %esi
	movl	$4, %edx
.Ltmp767:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%r13w, %bx
.Ltmp768:
.LBB5_131:                              # %Quantization_and_coding.exit
	#DEBUG_VALUE: Gsm_LPC_Analysis:S <- RDI
	#DEBUG_VALUE: Quantization_and_coding:LAR <- R14
	movl	$24, %edi
.Ltmp769:
	movl	$111, %edx
	movl	%r15d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$23, %edi
	movl	$24, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$23, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2888 3 discriminator 16 # gsm_encode.c:2888:3
.Ltmp770:
	movw	%bx, (%r14)
	xorl	%esi, %esi
	movabsq	$2077866391087713929, %rdi # imm = 0x1CD6107943818E89
.Ltmp771:
	.loc	1 2907 3                # gsm_encode.c:2907:3
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$-5989144894884880199, %rdi # imm = 0xACE24873300AE0B9
	callq	_KExitRegion
	.loc	1 2908 1                # gsm_encode.c:2908:1
	addq	$296, %rsp              # imm = 0x128
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
.Ltmp772:
	popq	%r15
	popq	%rbp
	retq
.Ltmp773:
.Ltmp774:
	.size	Gsm_LPC_Analysis, .Ltmp774-Gsm_LPC_Analysis
.Lfunc_end5:
	.cfi_endproc

	.globl	Gsm_Short_Term_Analysis_Filter
	.align	16, 0x90
	.type	Gsm_Short_Term_Analysis_Filter,@function
Gsm_Short_Term_Analysis_Filter:         # @Gsm_Short_Term_Analysis_Filter
.Lfunc_begin6:
	.loc	1 2537 0                # gsm_encode.c:2537:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp775:
	.cfi_def_cfa_offset 16
.Ltmp776:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp777:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$88, %rsp
.Ltmp778:
	.cfi_offset %rbx, -56
.Ltmp779:
	.cfi_offset %r12, -48
.Ltmp780:
	.cfi_offset %r13, -40
.Ltmp781:
	.cfi_offset %r14, -32
.Ltmp782:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- RDI
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- RSI
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- RDX
	movq	%rdx, -120(%rbp)        # 8-byte Spill
.Ltmp783:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movq	%rsi, %r13
.Ltmp784:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- R13
	movq	%r13, -72(%rbp)         # 8-byte Spill
	movq	%rdi, %r15
.Ltmp785:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- R15
	movq	%r15, -112(%rbp)        # 8-byte Spill
	movabsq	$-2769801177751670352, %rdi # imm = 0xD98FB080FDA731B0
	movabsq	$2851191757113011699, %r12 # imm = 0x279177CBFD3E2DF3
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$4, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$10, %edi
	callq	_KWork
	.loc	1 2538 31 prologue_end  # gsm_encode.c:2538:31
.Ltmp786:
	leaq	628(%r15), %r14
	movl	$1, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	movswq	628(%r15), %rax
	.loc	1 2538 21 is_stmt 0     # gsm_encode.c:2538:21
	shlq	$4, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movl	$2, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2539 33 is_stmt 1     # gsm_encode.c:2539:33
	movzwl	628(%r15), %ebx
	xorl	$1, %ebx
	movl	%ebx, -96(%rbp)         # 4-byte Spill
	movl	$3, %edi
	movl	$2, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	movw	%bx, 628(%r15)
.Ltmp787:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	movabsq	$8283019897515331859, %rdi # imm = 0x72F332B622E4D113
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$105, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$7, %edi
	callq	_KWork
.Ltmp788:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R13
	movl	$1, %esi
	movl	$2, %edx
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2310 3                # gsm_encode.c:2310:3
.Ltmp789:
	movswq	(%r13), %r14
.Ltmp790:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	leaq	32736(%r14), %rbx
	movl	$28, %edi
	movl	$1, %esi
	movl	$3, %edx
.Ltmp791:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$27, %r13d
	movl	$27, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2310 3                # gsm_encode.c:2310:3
.Ltmp792:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_1
.Ltmp793:
# BB#2:                                 # %cond.true.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	movl	$28, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2310 3 discriminator 1 # gsm_encode.c:2310:3
.Ltmp794:
	movswl	%r14w, %eax
	cmpl	$32, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r14
	movl	$26, %r13d
	movl	$26, %edi
	movl	$1, %esi
	movl	$4, %edx
.Ltmp795:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_3
.LBB6_1:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	.loc	1 2310 3                # gsm_encode.c:2310:3
.Ltmp796:
	addq	$-32, %r14
.Ltmp797:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R14
.LBB6_3:                                # %cond.end.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	.loc	1 2538 21               # gsm_encode.c:2538:21
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	596(%rax,%rcx), %r12
.Ltmp798:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARpp_j <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R12
	#DEBUG_VALUE: Coefficients_0_12:LARpp_j <- R12
	#DEBUG_VALUE: Coefficients_13_26:LARpp_j <- R12
	#DEBUG_VALUE: Coefficients_27_39:LARpp_j <- R12
	#DEBUG_VALUE: Coefficients_40_159:LARpp_j <- R12
	.loc	1 2310 3                # gsm_encode.c:2310:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	2(%rax), %r15
.Ltmp799:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R15
	movl	$25, %edi
	movl	$28, %edx
.Ltmp800:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r13d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2310 3 discriminator 4 # gsm_encode.c:2310:3
.Ltmp801:
	shlq	$58, %r14
	movl	$31, %edi
	movl	$25, %esi
	movl	$3, %edx
.Ltmp802:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2310 3 discriminator 4 # gsm_encode.c:2310:3
.Ltmp803:
	movq	%r14, %rbx
	sarq	$48, %rbx
	movl	$31, %edi
.Ltmp804:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$30, %edi
	movl	$25, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$29, %edi
	movl	$30, %esi
	movl	$31, %edx
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	movabsq	$112588272697344, %rax  # imm = 0x666600000000
	.loc	1 2310 3 discriminator 12 # gsm_encode.c:2310:3
.Ltmp805:
	imulq	%rax, %rbx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rbx
	sarq	$48, %rbx
	movabsq	$-9223090561878065152, %rax # imm = 0x8001000000000000
.Ltmp806:
	.loc	1 2310 3 is_stmt 0 discriminator 6 # gsm_encode.c:2310:3
	cmpq	%rax, %r14
	movq	$-13107, %r14           # imm = 0xFFFFFFFFFFFFCCCD
.Ltmp807:
	.loc	1 2310 3 discriminator 12 # gsm_encode.c:2310:3
	cmovgeq	%rbx, %r14
	leaq	32768(%r14,%r14), %rbx
	movl	$33, %r13d
	movl	$33, %edi
	movl	$29, %esi
	movl	$5, %edx
.Ltmp808:
	.loc	1 2553 3 is_stmt 1      # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$34, %edi
	movl	$29, %esi
	movl	$7, %edx
	callq	_KTimestamp1
	.loc	1 2310 3 discriminator 12 # gsm_encode.c:2310:3
.Ltmp809:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_4
.Ltmp810:
# BB#5:                                 # %cond.true31.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R15
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R12
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARpp_j <- R12
	movl	$34, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2310 3 discriminator 13 # gsm_encode.c:2310:3
.Ltmp811:
	testq	%r14, %r14
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r14
	movl	$32, %r13d
	movl	$32, %edi
	movl	$29, %esi
	movl	$8, %edx
.Ltmp812:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_6
.Ltmp813:
.LBB6_4:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R15
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R12
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARpp_j <- R12
	.loc	1 2310 3 discriminator 12 # gsm_encode.c:2310:3
	addq	%r14, %r14
.Ltmp814:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R14
.LBB6_6:                                # %cond.end37.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R15
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R12
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARpp_j <- R12
	movl	$3, %edi
	movl	$34, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r13d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	movl	$2, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 2310 3 discriminator 16 # gsm_encode.c:2310:3
.Ltmp815:
	movw	%r14w, (%r12)
	movl	$4, %esi
	movl	$2, %edx
.Ltmp816:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2311 3                # gsm_encode.c:2311:3
.Ltmp817:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	2(%rax), %r14
	leaq	32736(%r14), %rbx
	movl	$38, %edi
	movl	$4, %esi
	movl	$3, %edx
.Ltmp818:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$37, %r12d
.Ltmp819:
	movl	$37, %edi
	movl	$4, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2311 3                # gsm_encode.c:2311:3
.Ltmp820:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_7
.Ltmp821:
# BB#8:                                 # %cond.true47.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$38, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2311 3 discriminator 1 # gsm_encode.c:2311:3
.Ltmp822:
	movswl	%r14w, %eax
	cmpl	$32, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r14
	movl	$36, %r12d
	movl	$36, %edi
	movl	$4, %esi
	movl	$4, %edx
.Ltmp823:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_9
.LBB6_7:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2311 3                # gsm_encode.c:2311:3
.Ltmp824:
	addq	$-32, %r14
.Ltmp825:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R14
.LBB6_9:                                # %cond.end53.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2310 3 discriminator 16 # gsm_encode.c:2310:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	598(%rax,%rcx), %r13
.Ltmp826:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	.loc	1 2311 3                # gsm_encode.c:2311:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	4(%rax), %rax
.Ltmp827:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-88]
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movl	$35, %edi
	movl	$38, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2311 3 discriminator 4 # gsm_encode.c:2311:3
.Ltmp828:
	shlq	$58, %r14
	movl	$41, %edi
	movl	$35, %esi
	movl	$3, %edx
.Ltmp829:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2311 3 discriminator 4 # gsm_encode.c:2311:3
.Ltmp830:
	movq	%r14, %rbx
	sarq	$48, %rbx
	movl	$41, %edi
.Ltmp831:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$40, %edi
	movl	$35, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$39, %edi
	movl	$40, %esi
	movl	$41, %edx
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	movabsq	$112588272697344, %rax  # imm = 0x666600000000
	.loc	1 2311 3 discriminator 12 # gsm_encode.c:2311:3
.Ltmp832:
	imulq	%rax, %rbx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rbx
	sarq	$48, %rbx
	movabsq	$-9223090561878065152, %rax # imm = 0x8001000000000000
.Ltmp833:
	.loc	1 2311 3 is_stmt 0 discriminator 6 # gsm_encode.c:2311:3
	cmpq	%rax, %r14
	movq	$-13107, %r15           # imm = 0xFFFFFFFFFFFFCCCD
.Ltmp834:
	.loc	1 2311 3 discriminator 12 # gsm_encode.c:2311:3
	cmovgeq	%rbx, %r15
	leaq	32768(%r15,%r15), %rbx
	movl	$43, %r14d
	movl	$43, %edi
	movl	$39, %esi
	movl	$5, %edx
.Ltmp835:
	.loc	1 2553 3 is_stmt 1      # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$44, %edi
	movl	$39, %esi
	movl	$7, %edx
	callq	_KTimestamp1
	.loc	1 2311 3 discriminator 12 # gsm_encode.c:2311:3
.Ltmp836:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_10
.Ltmp837:
# BB#11:                                # %cond.true83.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-88]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	movl	$44, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2311 3 discriminator 13 # gsm_encode.c:2311:3
.Ltmp838:
	testq	%r15, %r15
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %r15
	movl	$42, %r14d
	movl	$42, %edi
	movl	$39, %esi
	movl	$8, %edx
.Ltmp839:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_12
.Ltmp840:
.LBB6_10:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-88]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	.loc	1 2311 3 discriminator 12 # gsm_encode.c:2311:3
	addq	%r15, %r15
.Ltmp841:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R15
.LBB6_12:                               # %cond.end89.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-88]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	movl	$6, %edi
	movl	$44, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r12d, %r12d
	movl	$5, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$2, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 2311 3 discriminator 16 # gsm_encode.c:2311:3
.Ltmp842:
	movw	%r15w, (%r13)
	movl	$7, %esi
	movl	$2, %edx
.Ltmp843:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2312 3                # gsm_encode.c:2312:3
.Ltmp844:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	4(%rax), %rbx
	leaq	32752(%rbx), %r15
	movl	$48, %edi
	movl	$7, %esi
	movl	$3, %edx
.Ltmp845:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$47, %r14d
	movl	$47, %edi
	movl	$7, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2312 3                # gsm_encode.c:2312:3
.Ltmp846:
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB6_13
.Ltmp847:
# BB#14:                                # %cond.true99.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$48, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2312 3 discriminator 1 # gsm_encode.c:2312:3
.Ltmp848:
	movswl	%bx, %eax
	cmpl	$16, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$46, %r14d
	movl	$46, %edi
	movl	$7, %esi
	movl	$4, %edx
.Ltmp849:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_15
.LBB6_13:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2312 3                # gsm_encode.c:2312:3
.Ltmp850:
	addq	$-16, %rbx
.Ltmp851:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_15:                               # %cond.end105.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$45, %edi
	movl	$48, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2312 3 discriminator 4 # gsm_encode.c:2312:3
.Ltmp852:
	shlq	$58, %rbx
	sarq	$48, %rbx
	addq	$-4096, %rbx            # imm = 0xFFFFFFFFFFFFF000
.Ltmp853:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$51, %edi
	movl	$45, %esi
	movl	$3, %edx
.Ltmp854:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2312 3 discriminator 4 # gsm_encode.c:2312:3
.Ltmp855:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$32767, %r15d           # imm = 0x7FFF
	jg	.LBB6_17
.Ltmp856:
# BB#16:                                # %cond.false114.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$51, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2312 3 discriminator 6 # gsm_encode.c:2312:3
.Ltmp857:
	cmpq	$-32769, %rbx           # imm = 0xFFFFFFFFFFFF7FFF
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rbx, %r15
	movl	$50, %r12d
	movl	$50, %edi
	movl	$45, %esi
	movl	$4, %edx
.Ltmp858:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp859:
.LBB6_17:                               # %cond.end121.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2311 3 discriminator 16 # gsm_encode.c:2311:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	600(%rax,%rcx), %r13
.Ltmp860:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	.loc	1 2312 3                # gsm_encode.c:2312:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	6(%rax), %r14
.Ltmp861:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R14
	movl	$49, %edi
	movl	$51, %edx
.Ltmp862:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2312 3 discriminator 12 # gsm_encode.c:2312:3
.Ltmp863:
	movswq	%r15w, %rbx
	movabsq	$112588272697344, %rax  # imm = 0x666600000000
	imulq	%rax, %rbx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rbx
	sarq	$48, %rbx
	leaq	32768(%rbx,%rbx), %r12
	movl	$53, %r15d
	movl	$53, %edi
	movl	$49, %esi
	movl	$5, %edx
.Ltmp864:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$54, %edi
	movl	$49, %esi
	movl	$7, %edx
	callq	_KTimestamp1
	.loc	1 2312 3 discriminator 12 # gsm_encode.c:2312:3
.Ltmp865:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_18
.Ltmp866:
# BB#19:                                # %cond.true135.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R14
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	movl	$54, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2312 3 discriminator 13 # gsm_encode.c:2312:3
.Ltmp867:
	testq	%rbx, %rbx
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$52, %r15d
	movl	$52, %edi
	movl	$49, %esi
	movl	$8, %edx
.Ltmp868:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_20
.Ltmp869:
.LBB6_18:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R14
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	.loc	1 2312 3 discriminator 12 # gsm_encode.c:2312:3
	addq	%rbx, %rbx
.Ltmp870:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_20:                               # %cond.end141.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R14
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R13
	movl	$9, %edi
	movl	$54, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r15d, %r15d
	movl	$8, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	movl	$2, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 2312 3 discriminator 16 # gsm_encode.c:2312:3
.Ltmp871:
	movw	%bx, (%r13)
	movl	$10, %esi
	movl	$2, %edx
.Ltmp872:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2313 3                # gsm_encode.c:2313:3
.Ltmp873:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	6(%rax), %rbx
	leaq	32752(%rbx), %r12
	movl	$58, %edi
	movl	$10, %esi
	movl	$3, %edx
.Ltmp874:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$57, %r14d
.Ltmp875:
	movl	$57, %edi
	movl	$10, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2313 3                # gsm_encode.c:2313:3
.Ltmp876:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_21
.Ltmp877:
# BB#22:                                # %cond.true151.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$58, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2313 3 discriminator 1 # gsm_encode.c:2313:3
.Ltmp878:
	movswl	%bx, %eax
	cmpl	$16, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$56, %r14d
	movl	$56, %edi
	movl	$10, %esi
	movl	$4, %edx
.Ltmp879:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_23
.LBB6_21:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2313 3                # gsm_encode.c:2313:3
.Ltmp880:
	addq	$-16, %rbx
.Ltmp881:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_23:                               # %cond.end157.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$55, %edi
	movl	$58, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2313 3 discriminator 4 # gsm_encode.c:2313:3
.Ltmp882:
	shlq	$58, %rbx
	sarq	$48, %rbx
	addq	$5120, %rbx             # imm = 0x1400
.Ltmp883:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$61, %edi
	movl	$55, %esi
	movl	$3, %edx
.Ltmp884:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2313 3 discriminator 4 # gsm_encode.c:2313:3
.Ltmp885:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$26214, %r13d           # imm = 0x6666
	jg	.LBB6_25
.Ltmp886:
# BB#24:                                # %cond.false166.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$61, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$60, %r15d
	movl	$60, %edi
	movl	$55, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2313 3 discriminator 6 # gsm_encode.c:2313:3
.Ltmp887:
	movswq	%bx, %rax
	movabsq	$112588272697344, %rcx  # imm = 0x666600000000
	imulq	%rcx, %rax
	movabsq	$140737488355328, %rcx  # imm = 0x800000000000
	addq	%rcx, %rax
	sarq	$48, %rax
	addq	%rax, %rax
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movq	$-26214, %r13           # imm = 0xFFFFFFFFFFFF999A
	cmovgq	%rax, %r13
.Ltmp888:
.LBB6_25:                               # %cond.end173.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2312 3 discriminator 16 # gsm_encode.c:2312:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	602(%rax,%rcx), %r14
.Ltmp889:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	.loc	1 2313 3                # gsm_encode.c:2313:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	8(%rax), %r12
.Ltmp890:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	movl	$59, %edi
	movl	$61, %edx
.Ltmp891:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2313 3 discriminator 12 # gsm_encode.c:2313:3
.Ltmp892:
	leaq	32768(%r13), %rbx
	movl	$64, %edi
	movl	$59, %esi
	movl	$7, %edx
.Ltmp893:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$63, %r15d
	movl	$63, %edi
	movl	$59, %esi
	movl	$5, %edx
	callq	_KTimestamp1
	.loc	1 2313 3 discriminator 12 # gsm_encode.c:2313:3
.Ltmp894:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_27
.Ltmp895:
# BB#26:                                # %cond.true187.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$64, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2313 3 discriminator 13 # gsm_encode.c:2313:3
.Ltmp896:
	testq	%r13, %r13
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
.Ltmp897:
	cmovgq	%rax, %r13
	movl	$62, %r15d
	movl	$62, %edi
	movl	$59, %esi
	movl	$8, %edx
.Ltmp898:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp899:
.LBB6_27:                               # %cond.end193.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$12, %edi
	movl	$64, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r15d, %r15d
	movl	$11, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$11, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2313 3 discriminator 16 # gsm_encode.c:2313:3
.Ltmp900:
	movw	%r13w, (%r14)
	movl	$13, %esi
	movl	$2, %edx
.Ltmp901:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2315 3                # gsm_encode.c:2315:3
.Ltmp902:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	8(%rax), %rbx
	leaq	32760(%rbx), %r12
.Ltmp903:
	movl	$67, %r14d
.Ltmp904:
	movl	$67, %edi
	movl	$13, %esi
	movl	$1, %edx
.Ltmp905:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$68, %edi
	movl	$13, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	.loc	1 2315 3                # gsm_encode.c:2315:3
.Ltmp906:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_28
.Ltmp907:
# BB#29:                                # %cond.true203.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$68, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2315 3 discriminator 1 # gsm_encode.c:2315:3
.Ltmp908:
	movswl	%bx, %eax
	cmpl	$8, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$66, %r14d
	movl	$66, %edi
	movl	$13, %esi
	movl	$4, %edx
.Ltmp909:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_30
.LBB6_28:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2315 3                # gsm_encode.c:2315:3
.Ltmp910:
	addq	$-8, %rbx
.Ltmp911:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_30:                               # %cond.end209.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$65, %edi
	movl	$68, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2315 3 discriminator 4 # gsm_encode.c:2315:3
.Ltmp912:
	shlq	$58, %rbx
	sarq	$48, %rbx
	addq	$-188, %rbx
.Ltmp913:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$71, %edi
	movl	$65, %esi
	movl	$3, %edx
.Ltmp914:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2315 3 discriminator 4 # gsm_encode.c:2315:3
.Ltmp915:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$38444, %r13d           # imm = 0x962C
	jg	.LBB6_32
.Ltmp916:
# BB#31:                                # %cond.false218.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$71, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$70, %r15d
	movl	$70, %edi
	movl	$65, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2315 3 discriminator 6 # gsm_encode.c:2315:3
.Ltmp917:
	movswq	%bx, %rax
	movabsq	$165124312662016, %rcx  # imm = 0x962E00000000
	imulq	%rax, %rcx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rcx
	sarq	$48, %rcx
	addq	%rcx, %rcx
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movq	$-38446, %r13           # imm = 0xFFFFFFFFFFFF69D2
	cmovgq	%rcx, %r13
.Ltmp918:
.LBB6_32:                               # %cond.end225.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2313 3 discriminator 16 # gsm_encode.c:2313:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	604(%rax,%rcx), %r14
.Ltmp919:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	.loc	1 2315 3                # gsm_encode.c:2315:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	10(%rax), %r12
.Ltmp920:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	movl	$69, %edi
	movl	$71, %edx
.Ltmp921:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2315 3 discriminator 12 # gsm_encode.c:2315:3
.Ltmp922:
	leaq	32768(%r13), %rbx
	movl	$74, %edi
	movl	$69, %esi
	movl	$7, %edx
.Ltmp923:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$73, %r15d
	movl	$73, %edi
	movl	$69, %esi
	movl	$5, %edx
	callq	_KTimestamp1
	.loc	1 2315 3 discriminator 12 # gsm_encode.c:2315:3
.Ltmp924:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_34
.Ltmp925:
# BB#33:                                # %cond.true239.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$74, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2315 3 discriminator 13 # gsm_encode.c:2315:3
.Ltmp926:
	testq	%r13, %r13
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
.Ltmp927:
	cmovgq	%rax, %r13
	movl	$72, %r15d
	movl	$72, %edi
	movl	$69, %esi
	movl	$8, %edx
.Ltmp928:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp929:
.LBB6_34:                               # %cond.end245.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$15, %edi
	movl	$74, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r15d, %r15d
	movl	$14, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$14, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2315 3 discriminator 16 # gsm_encode.c:2315:3
.Ltmp930:
	movw	%r13w, (%r14)
	movl	$16, %esi
	movl	$2, %edx
.Ltmp931:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2316 3                # gsm_encode.c:2316:3
.Ltmp932:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	10(%rax), %rbx
	leaq	32760(%rbx), %r12
.Ltmp933:
	movl	$78, %edi
	movl	$16, %esi
	movl	$3, %edx
.Ltmp934:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$77, %r14d
.Ltmp935:
	movl	$77, %edi
	movl	$16, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2316 3                # gsm_encode.c:2316:3
.Ltmp936:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_35
.Ltmp937:
# BB#36:                                # %cond.true255.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$78, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2316 3 discriminator 1 # gsm_encode.c:2316:3
.Ltmp938:
	movswl	%bx, %eax
	cmpl	$8, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$76, %r14d
	movl	$76, %edi
	movl	$16, %esi
	movl	$4, %edx
.Ltmp939:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_37
.LBB6_35:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2316 3                # gsm_encode.c:2316:3
.Ltmp940:
	addq	$-8, %rbx
.Ltmp941:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_37:                               # %cond.end261.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$75, %edi
	movl	$78, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2316 3 discriminator 4 # gsm_encode.c:2316:3
.Ltmp942:
	shlq	$58, %rbx
	sarq	$48, %rbx
	addq	$3584, %rbx             # imm = 0xE00
.Ltmp943:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$81, %edi
	movl	$75, %esi
	movl	$3, %edx
.Ltmp944:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2316 3 discriminator 4 # gsm_encode.c:2316:3
.Ltmp945:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$34950, %r13d           # imm = 0x8886
	jg	.LBB6_39
.Ltmp946:
# BB#38:                                # %cond.false270.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$81, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$80, %r15d
	movl	$80, %edi
	movl	$75, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2316 3 discriminator 6 # gsm_encode.c:2316:3
.Ltmp947:
	movswq	%bx, %rax
	movabsq	$150117696929792, %rcx  # imm = 0x888800000000
	imulq	%rax, %rcx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rcx
	sarq	$48, %rcx
	addq	%rcx, %rcx
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movq	$-34952, %r13           # imm = 0xFFFFFFFFFFFF7778
	cmovgq	%rcx, %r13
.Ltmp948:
.LBB6_39:                               # %cond.end277.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2315 3 discriminator 16 # gsm_encode.c:2315:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	606(%rax,%rcx), %r14
.Ltmp949:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	.loc	1 2316 3                # gsm_encode.c:2316:3
	movq	-72(%rbp), %rax         # 8-byte Reload
	leaq	12(%rax), %r12
.Ltmp950:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	movl	$79, %edi
	movl	$81, %edx
.Ltmp951:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2316 3 discriminator 12 # gsm_encode.c:2316:3
.Ltmp952:
	leaq	32768(%r13), %rbx
	movl	$84, %edi
	movl	$79, %esi
	movl	$7, %edx
.Ltmp953:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$83, %r15d
	movl	$83, %edi
	movl	$79, %esi
	movl	$5, %edx
	callq	_KTimestamp1
	.loc	1 2316 3 discriminator 12 # gsm_encode.c:2316:3
.Ltmp954:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_41
.Ltmp955:
# BB#40:                                # %cond.true291.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R13
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$84, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2316 3 discriminator 13 # gsm_encode.c:2316:3
.Ltmp956:
	testq	%r13, %r13
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
.Ltmp957:
	cmovgq	%rax, %r13
	movl	$82, %r15d
	movl	$82, %edi
	movl	$79, %esi
	movl	$8, %edx
.Ltmp958:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp959:
.LBB6_41:                               # %cond.end297.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$18, %edi
	movl	$84, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r15d, %r15d
	movl	$17, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$17, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2316 3 discriminator 16 # gsm_encode.c:2316:3
.Ltmp960:
	movw	%r13w, (%r14)
	movl	$19, %esi
	movl	$2, %edx
.Ltmp961:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2317 3                # gsm_encode.c:2317:3
.Ltmp962:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswq	12(%rax), %rbx
	leaq	32764(%rbx), %r12
.Ltmp963:
	movl	$88, %edi
	movl	$19, %esi
	movl	$3, %edx
.Ltmp964:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$87, %r14d
.Ltmp965:
	movl	$87, %edi
	movl	$19, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2317 3                # gsm_encode.c:2317:3
.Ltmp966:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_42
.Ltmp967:
# BB#43:                                # %cond.true307.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$88, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2317 3 discriminator 1 # gsm_encode.c:2317:3
.Ltmp968:
	movswl	%bx, %eax
	cmpl	$4, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$86, %r14d
	movl	$86, %edi
	movl	$19, %esi
	movl	$4, %edx
.Ltmp969:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_44
.LBB6_42:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2317 3                # gsm_encode.c:2317:3
.Ltmp970:
	addq	$-4, %rbx
.Ltmp971:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_44:                               # %cond.end313.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$85, %edi
	movl	$88, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2317 3 discriminator 4 # gsm_encode.c:2317:3
.Ltmp972:
	shlq	$58, %rbx
	sarq	$48, %rbx
	orq	$682, %rbx              # imm = 0x2AA
.Ltmp973:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$91, %edi
	movl	$85, %esi
	movl	$3, %edx
.Ltmp974:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2317 3 discriminator 4 # gsm_encode.c:2317:3
.Ltmp975:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$62906, %r12d           # imm = 0xF5BA
	jg	.LBB6_46
.Ltmp976:
# BB#45:                                # %cond.false322.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$91, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$90, %r15d
	movl	$90, %edi
	movl	$85, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movabsq	$270187802656768, %rax  # imm = 0xF5BC00000000
	.loc	1 2317 3 discriminator 6 # gsm_encode.c:2317:3
.Ltmp977:
	imulq	%rbx, %rax
	movabsq	$140737488355328, %rcx  # imm = 0x800000000000
	addq	%rcx, %rax
	sarq	$48, %rax
	addq	%rax, %rax
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movq	$-62908, %r12           # imm = 0xFFFFFFFFFFFF0A44
	cmovgq	%rax, %r12
.Ltmp978:
.LBB6_46:                               # %cond.end329.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:LARc <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2316 3 discriminator 16 # gsm_encode.c:2316:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	608(%rax,%rcx), %r14
.Ltmp979:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	.loc	1 2317 3                # gsm_encode.c:2317:3
	addq	$14, -72(%rbp)          # 8-byte Folded Spill
.Ltmp980:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	movl	$89, %edi
	movl	$91, %edx
.Ltmp981:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2317 3 discriminator 12 # gsm_encode.c:2317:3
.Ltmp982:
	leaq	32768(%r12), %rbx
	movl	$94, %edi
	movl	$89, %esi
	movl	$7, %edx
.Ltmp983:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$93, %r15d
	movl	$93, %edi
	movl	$89, %esi
	movl	$5, %edx
	callq	_KTimestamp1
	.loc	1 2317 3 discriminator 12 # gsm_encode.c:2317:3
.Ltmp984:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_48
.Ltmp985:
# BB#47:                                # %cond.true343.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$94, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2317 3 discriminator 13 # gsm_encode.c:2317:3
.Ltmp986:
	testq	%r12, %r12
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r12           # imm = 0xFFFFFFFFFFFF8000
.Ltmp987:
	cmovgq	%rax, %r12
	movl	$92, %r15d
	movl	$92, %edi
	movl	$89, %esi
	movl	$8, %edx
.Ltmp988:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp989:
.LBB6_48:                               # %cond.end349.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- [RBP+-72]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$21, %edi
	movl	$94, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$8, %edi
	callq	_KWork
	xorl	%r15d, %r15d
	movl	$20, %edi
	movl	$21, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$20, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2317 3 discriminator 16 # gsm_encode.c:2317:3
.Ltmp990:
	movw	%r12w, (%r14)
	movl	$22, %esi
	movl	$2, %edx
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp991:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARc <- RBX
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2318 3                # gsm_encode.c:2318:3
.Ltmp992:
	movswq	(%rbx), %rbx
.Ltmp993:
	leaq	32764(%rbx), %r12
	movl	$98, %edi
	movl	$22, %esi
	movl	$3, %edx
.Ltmp994:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$97, %r14d
.Ltmp995:
	movl	$97, %edi
	movl	$22, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2318 3                # gsm_encode.c:2318:3
.Ltmp996:
	cmpq	$65536, %r12            # imm = 0x10000
	jb	.LBB6_49
.Ltmp997:
# BB#50:                                # %cond.true359.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$98, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2318 3 discriminator 1 # gsm_encode.c:2318:3
.Ltmp998:
	movswl	%bx, %eax
	cmpl	$4, %eax
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	cmovgq	%rax, %rbx
	movl	$96, %r14d
	movl	$96, %edi
	movl	$22, %esi
	movl	$4, %edx
.Ltmp999:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
	jmp	.LBB6_51
.LBB6_49:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2318 3                # gsm_encode.c:2318:3
.Ltmp1000:
	addq	$-4, %rbx
.Ltmp1001:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
.LBB6_51:                               # %cond.end365.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$95, %edi
	movl	$98, %edx
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 2318 3 discriminator 4 # gsm_encode.c:2318:3
.Ltmp1002:
	shlq	$58, %rbx
	sarq	$48, %rbx
	addq	$2288, %rbx             # imm = 0x8F0
.Ltmp1003:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$101, %edi
	movl	$95, %esi
	movl	$3, %edx
.Ltmp1004:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	.loc	1 2318 3 discriminator 4 # gsm_encode.c:2318:3
.Ltmp1005:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$59414, %r12d           # imm = 0xE816
	jg	.LBB6_53
.Ltmp1006:
# BB#52:                                # %cond.false374.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- RBX
	movl	$101, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$100, %r15d
	movl	$100, %edi
	movl	$95, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2318 3 discriminator 6 # gsm_encode.c:2318:3
.Ltmp1007:
	movswq	%bx, %rax
	movabsq	$255189776859136, %rcx  # imm = 0xE81800000000
	imulq	%rax, %rcx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rcx
	sarq	$48, %rcx
	addq	%rcx, %rcx
	cmpq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movq	$-59416, %r12           # imm = 0xFFFFFFFFFFFF17E8
	cmovgq	%rcx, %r12
.Ltmp1008:
.LBB6_53:                               # %cond.end381.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	.loc	1 2317 3 discriminator 16 # gsm_encode.c:2317:3
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	leaq	610(%rax,%rcx), %r14
.Ltmp1009:
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R12
	movl	$99, %edi
	movl	$101, %edx
.Ltmp1010:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2318 3 discriminator 12 # gsm_encode.c:2318:3
.Ltmp1011:
	leaq	32768(%r12), %rbx
	movl	$103, %r15d
	movl	$103, %edi
	movl	$99, %esi
	movl	$5, %edx
.Ltmp1012:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	movl	$104, %edi
	movl	$99, %esi
	movl	$7, %edx
	callq	_KTimestamp1
	movabsq	$-9210639090133465056, %r13 # imm = 0x802D3C8C2E448820
	.loc	1 2318 3 discriminator 12 # gsm_encode.c:2318:3
.Ltmp1013:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_55
.Ltmp1014:
# BB#54:                                # %cond.true395.i
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:ltmp <- R12
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$104, %edi
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2318 3 discriminator 13 # gsm_encode.c:2318:3
.Ltmp1015:
	testq	%r12, %r12
	movl	$32767, %eax            # imm = 0x7FFF
	movq	$-32768, %r12           # imm = 0xFFFFFFFFFFFF8000
.Ltmp1016:
	cmovgq	%rax, %r12
	movl	$102, %r15d
	movl	$102, %edi
	movl	$99, %esi
	movl	$8, %edx
.Ltmp1017:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp1018:
.LBB6_55:                               # %Decoding_of_the_coded_Log_Area_Ratios.exit
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Decoding_of_the_coded_Log_Area_Ratios:LARpp <- R14
	movl	$24, %edi
	movl	$104, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$23, %edi
	movl	$24, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$23, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2318 3 discriminator 16 # gsm_encode.c:2318:3
.Ltmp1019:
	movw	%r12w, (%r14)
	xorl	%esi, %esi
	movabsq	$2851191757113011699, %rdi # imm = 0x279177CBFD3E2DF3
.Ltmp1020:
	.loc	1 2553 3                # gsm_encode.c:2553:3
	callq	_KExitRegion
	movabsq	$-935555204808323373, %rdi # imm = 0xF3043D7F7DA1CED3
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movq	%r13, %rdi
	xorl	%r13d, %r13d
	callq	_KEnterRegion
	movl	$27, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1021:
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	movl	$13, -88(%rbp)          # 4-byte Folded Spill
	movl	$13, %edi
	movl	$13, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$19, %r12d
	movl	$19, %edi
	movl	$19, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$16, %r15d
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$-4043159267163403906, %rdi # imm = 0xC7E3D0116E65897E
	callq	_KEnterRegion
	movq	-112(%rbp), %rcx        # 8-byte Reload
.Ltmp1022:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- RCX
	movq	-80(%rbp), %rax         # 8-byte Reload
	leaq	596(%rax,%rcx), %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movl	-96(%rbp), %eax         # 4-byte Reload
	movswq	%ax, %rax
	shlq	$4, %rax
	leaq	596(%rax,%rcx), %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
.Ltmp1023:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	xorl	%r14d, %r14d
.Ltmp1024:
	xorl	%ebx, %ebx
	jmp	.LBB6_56
	.align	16, 0x90
.LBB6_61:                               # %cond.end26.i
                                        #   in Loop: Header=BB6_56 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	movl	$4, %ebx
	movl	$4, %edi
	callq	_KPushCDep
	movl	$10, %edi
	movl	$4, %edx
	movl	$26, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$9, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$10, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$9, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 2352 5                # gsm_encode.c:2352:5
.Ltmp1025:
	movw	%r15w, -64(%rbp,%r13)
	movl	$11, %r14d
	movl	$11, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$1, %r8d
.Ltmp1026:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	callq	_KTimestamp2
	movl	$14, -88(%rbp)          # 4-byte Folded Spill
	movl	$14, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$20, %r12d
	movl	$20, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$17, %r15d
	movl	$17, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-3757316129980488199, %rdi # imm = 0xCBDB54E30BAAE5F9
	callq	_KExitRegion
	addq	$2, %r13
.LBB6_56:                               # %for.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	movl	$5, %edi
	movl	%r14d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$12, %edi
	movl	-88(%rbp), %esi         # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$18, %edi
	movl	%r12d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$15, %edi
	movl	%r15d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$5, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$12, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$5, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$15, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$15, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2350 3                # gsm_encode.c:2350:3
.Ltmp1027:
	cmpl	$16, %r13d
	je	.LBB6_62
.Ltmp1028:
# BB#57:                                # %for.body.i
                                        #   in Loop: Header=BB6_56 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	movl	$2, %esi
	movabsq	$-3757316129980488199, %rdi # imm = 0xCBDB54E30BAAE5F9
	.loc	1 2555 3                # gsm_encode.c:2555:3
	callq	_KEnterRegion
	movl	$4, %edi
	callq	_KPushCDep
	movl	$13, %edi
	callq	_KWork
	movq	-80(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r13), %rdi
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2351 13               # gsm_encode.c:2351:13
.Ltmp1029:
	movswl	(%rbx,%r13), %r14d
	sarl	$2, %r14d
	movq	-72(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r13), %rdi
	movl	$2, %esi
	movl	$2, %edx
.Ltmp1030:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	callq	_KLoad0
	.loc	1 2351 13               # gsm_encode.c:2351:13
.Ltmp1031:
	movswl	(%rbx,%r13), %r12d
	sarl	$2, %r12d
	addl	%r14d, %r12d
	movslq	%r12d, %r15
.Ltmp1032:
	#DEBUG_VALUE: Coefficients_0_12:ltmp <- R12D
	leaq	32768(%r15), %rbx
.Ltmp1033:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movl	$2, (%rsp)
	movl	$22, %r14d
	movl	$22, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	movl	$4, (%rsp)
	movl	$23, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2351 13               # gsm_encode.c:2351:13
.Ltmp1034:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_59
.Ltmp1035:
# BB#58:                                # %cond.true.i7
                                        #   in Loop: Header=BB6_56 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	#DEBUG_VALUE: Coefficients_0_12:ltmp <- R12D
	movl	$23, %edi
	.loc	1 2555 3                # gsm_encode.c:2555:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2351 13 discriminator 1 # gsm_encode.c:2351:13
.Ltmp1036:
	testl	%r12d, %r12d
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r15
.Ltmp1037:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movl	$5, (%rsp)
	movl	$21, %r14d
	movl	$21, %edi
	movl	$4, %esi
	movl	$5, %edx
	movl	$1, %ecx
	movl	$5, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
.Ltmp1038:
.LBB6_59:                               # %cond.end.i9
                                        #   in Loop: Header=BB6_56 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	movl	$4, %edi
	callq	_KPushCDep
	movl	$6, %edi
	movl	$4, %edx
	movl	$23, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$13, %edi
	callq	_KWork
	movl	$3, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$6, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	leaq	-64(%rbp,%r13), %r12
	movl	$3, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 2351 5                # gsm_encode.c:2351:5
.Ltmp1039:
	movw	%r15w, -64(%rbp,%r13)
	movl	$7, %esi
	movl	$2, %edx
.Ltmp1040:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2352 13               # gsm_encode.c:2352:13
.Ltmp1041:
	movswq	-64(%rbp,%r13), %rbx
	movl	$8, %esi
	movl	$2, %edx
.Ltmp1042:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2352 13               # gsm_encode.c:2352:13
.Ltmp1043:
	movq	-80(%rbp), %rax         # 8-byte Reload
	movswl	(%rax,%r13), %eax
	sarl	%eax
	cltq
	leaq	(%rax,%rbx), %r15
.Ltmp1044:
	#DEBUG_VALUE: Coefficients_0_12:ltmp <- R15
	leaq	32768(%rax,%rbx), %rbx
.Ltmp1045:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movl	$4, (%rsp)
	movl	$26, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$7, %ecx
	movl	$3, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	movl	$2, (%rsp)
	movl	$25, %r14d
	movl	$25, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$7, %ecx
	movl	$1, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2352 13               # gsm_encode.c:2352:13
.Ltmp1046:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_61
.Ltmp1047:
# BB#60:                                # %cond.true20.i
                                        #   in Loop: Header=BB6_56 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_0_12:i <- 1
	#DEBUG_VALUE: Coefficients_0_12:ltmp <- R15
	movl	$26, %edi
	.loc	1 2555 3                # gsm_encode.c:2555:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2352 13 discriminator 1 # gsm_encode.c:2352:13
.Ltmp1048:
	testq	%r15, %r15
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
.Ltmp1049:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r15
.Ltmp1050:
	.loc	1 2555 3                # gsm_encode.c:2555:3
	movl	$5, (%rsp)
	movl	$24, %r14d
	movl	$24, %edi
	movl	$4, %esi
	movl	$5, %edx
	movl	$7, %ecx
	movl	$4, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	jmp	.LBB6_61
.LBB6_62:                               # %Coefficients_0_12.exit
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movabsq	$-7566308650724943646, %r15 # imm = 0x96FF125EC49318E2
	movabsq	$-7660267503421014667, %r14 # imm = 0x95B1434A9E1F3D75
	movl	$1, %esi
	movabsq	$-4043159267163403906, %rdi # imm = 0xC7E3D0116E65897E
	callq	_KExitRegion
	xorl	%r13d, %r13d
	xorl	%esi, %esi
	movabsq	$-9210639090133465056, %rdi # imm = 0x802D3C8C2E448820
	callq	_KExitRegion
	movabsq	$-7462520966526622763, %rdi # imm = 0x986FCCB81546A3D5
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-64(%rbp), %rbx
	.loc	1 2556 3                # gsm_encode.c:2556:3
	movq	%rbx, %rdi
	callq	LARp_to_rp
	movabsq	$554047358990388938, %rdi # imm = 0x7B05F23355D8ECA
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$13, %edx
	.loc	1 2557 3                # gsm_encode.c:2557:3
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rbx, %rsi
	movq	-120(%rbp), %rcx        # 8-byte Reload
	callq	Short_term_analysis_filtering
	movabsq	$-1120215437916962973, %rdi # imm = 0xF07431FE8F0CFF63
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2559 3                # gsm_encode.c:2559:3
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$20, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1051:
	#DEBUG_VALUE: Coefficients_13_26:i <- 1
	movl	$9, %r14d
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$12, -88(%rbp)          # 4-byte Folded Spill
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$15, %ebx
	movl	$15, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	.LBB6_63
	.align	16, 0x90
.LBB6_66:                               # %cond.end.i38
                                        #   in Loop: Header=BB6_63 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_13_26:i <- 1
	movl	$4, %r15d
	movl	$4, %edi
	callq	_KPushCDep
	movl	$6, %edi
	movl	$4, %edx
	movl	$19, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$3, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	leaq	-64(%rbp,%r13), %rsi
	movl	$3, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2365 5                # gsm_encode.c:2365:5
.Ltmp1052:
	movw	%r12w, -64(%rbp,%r13)
	movl	$13, -88(%rbp)          # 4-byte Folded Spill
	movl	$13, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
.Ltmp1053:
	.loc	1 2559 3                # gsm_encode.c:2559:3
	callq	_KTimestamp2
	movl	$7, %r12d
	movl	$7, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$16, %ebx
	movl	$16, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$10, %r14d
	movl	$10, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$8168277748550815327, %rdi # imm = 0x715B8D55BD194E5F
	callq	_KExitRegion
	addq	$2, %r13
.LBB6_63:                               # %for.cond.i18
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_13_26:i <- 1
	movl	$5, %edi
	movl	%r12d, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$11, %edi
	movl	-88(%rbp), %esi         # 4-byte Reload
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$14, %edi
	movl	%ebx, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$8, %edi
	movl	%r14d, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$5, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$14, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$5, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$8, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$11, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$14, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$11, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2364 3                # gsm_encode.c:2364:3
.Ltmp1054:
	cmpl	$16, %r13d
	je	.LBB6_67
.Ltmp1055:
# BB#64:                                # %for.body.i29
                                        #   in Loop: Header=BB6_63 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_13_26:i <- 1
	movl	$2, %esi
	movabsq	$8168277748550815327, %rax # imm = 0x715B8D55BD194E5F
	movq	%rax, %rdi
	.loc	1 2559 3                # gsm_encode.c:2559:3
	callq	_KEnterRegion
	movl	$4, %edi
	callq	_KPushCDep
	movq	-80(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r13), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	movl	$13, %edi
	callq	_KWork
	.loc	1 2365 13               # gsm_encode.c:2365:13
.Ltmp1056:
	movswl	(%rbx,%r13), %r14d
	sarl	%r14d
	movq	-72(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r13), %rdi
	movl	$2, %esi
	movl	$2, %edx
.Ltmp1057:
	.loc	1 2559 3                # gsm_encode.c:2559:3
	callq	_KLoad0
	.loc	1 2365 13               # gsm_encode.c:2365:13
.Ltmp1058:
	movswl	(%rbx,%r13), %r15d
	sarl	%r15d
	addl	%r14d, %r15d
	movslq	%r15d, %r12
.Ltmp1059:
	#DEBUG_VALUE: Coefficients_13_26:ltmp <- R15D
	leaq	32768(%r12), %rbx
.Ltmp1060:
	.loc	1 2559 3                # gsm_encode.c:2559:3
	movl	$2, (%rsp)
	movl	$18, %r14d
	movl	$18, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	movl	$4, (%rsp)
	movl	$19, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2365 13               # gsm_encode.c:2365:13
.Ltmp1061:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_66
.Ltmp1062:
# BB#65:                                # %cond.true.i32
                                        #   in Loop: Header=BB6_63 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_13_26:i <- 1
	#DEBUG_VALUE: Coefficients_13_26:ltmp <- R15D
	movl	$19, %edi
	.loc	1 2559 3                # gsm_encode.c:2559:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2365 13 discriminator 1 # gsm_encode.c:2365:13
.Ltmp1063:
	testl	%r15d, %r15d
	movq	$-32768, %r12           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r12
.Ltmp1064:
	.loc	1 2559 3                # gsm_encode.c:2559:3
	movl	$5, (%rsp)
	movl	$17, %r14d
	movl	$17, %edi
	movl	$4, %esi
	movl	$5, %edx
	movl	$1, %ecx
	movl	$5, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	jmp	.LBB6_66
.Ltmp1065:
.LBB6_67:                               # %Coefficients_13_26.exit
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movabsq	$-6673064024465142683, %r13 # imm = 0xA36483A00A510C65
	movabsq	$8871715368784635694, %r15 # imm = 0x7B1EAA1FA0C8272E
	movl	$1, %esi
	movabsq	$-7566308650724943646, %rdi # imm = 0x96FF125EC49318E2
	callq	_KExitRegion
	xorl	%r12d, %r12d
	xorl	%esi, %esi
	movabsq	$-7660267503421014667, %rdi # imm = 0x95B1434A9E1F3D75
	callq	_KExitRegion
	movabsq	$-7430724998796020129, %rdi # imm = 0x98E0C2FBB725F65F
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-64(%rbp), %r14
	.loc	1 2560 3                # gsm_encode.c:2560:3
	movq	%r14, %rdi
	callq	LARp_to_rp
	.loc	1 2561 24               # gsm_encode.c:2561:24
	movq	-120(%rbp), %rax        # 8-byte Reload
	leaq	26(%rax), %rbx
	movabsq	$3129884399589627018, %rdi # imm = 0x2B6F95475193948A
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$14, %edx
	.loc	1 2561 3 is_stmt 0      # gsm_encode.c:2561:3
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%r14, %rsi
	movq	%rbx, %rcx
	callq	Short_term_analysis_filtering
	movabsq	$5081480091919767101, %rdi # imm = 0x46850B388418D63D
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2563 3 is_stmt 1      # gsm_encode.c:2563:3
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$27, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1066:
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	movl	$16, -88(%rbp)          # 4-byte Folded Spill
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$13, -96(%rbp)          # 4-byte Folded Spill
	movl	$13, %edi
	movl	$13, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$19, %r15d
	movl	$19, %edi
	movl	$19, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_KEnterRegion
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	movq	-80(%rbp), %r13         # 8-byte Reload
	jmp	.LBB6_68
	.align	16, 0x90
.LBB6_73:                               # %cond.end26.i85
                                        #   in Loop: Header=BB6_68 Depth=1
	movq	-80(%rbp), %r13         # 8-byte Reload
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	movl	$4, %ebx
	movl	$4, %edi
	callq	_KPushCDep
	movl	$10, %edi
	movl	$4, %edx
	movl	$26, %ecx
	movl	%r15d, %esi
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$9, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$10, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$9, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	-104(%rbp), %r12        # 8-byte Reload
	.loc	1 2380 5                # gsm_encode.c:2380:5
.Ltmp1067:
	movw	%r14w, -64(%rbp,%r12)
	movl	$17, -88(%rbp)          # 4-byte Folded Spill
	movl	$17, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
.Ltmp1068:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	callq	_KTimestamp2
	movl	$14, -96(%rbp)          # 4-byte Folded Spill
	movl	$14, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$20, %r15d
	movl	$20, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$11, %r14d
	movl	$11, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$5211049323297552690, %rdi # imm = 0x48515DC00E30B932
	callq	_KExitRegion
	addq	$2, %r12
.LBB6_68:                               # %for.cond.i48
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	movl	$5, %edi
	movl	%r14d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$15, %edi
	movl	-88(%rbp), %esi         # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$12, %edi
	movl	-96(%rbp), %esi         # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$18, %edi
	movl	%r15d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$5, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$15, %edi
	movl	$15, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$15, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$12, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$5, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2378 3                # gsm_encode.c:2378:3
.Ltmp1069:
	cmpl	$16, %r12d
	je	.LBB6_74
.Ltmp1070:
# BB#69:                                # %for.body.i59
                                        #   in Loop: Header=BB6_68 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	movl	$2, %esi
	movabsq	$5211049323297552690, %rdi # imm = 0x48515DC00E30B932
	.loc	1 2563 3                # gsm_encode.c:2563:3
	callq	_KEnterRegion
	movl	$4, %edi
	callq	_KPushCDep
	movl	$13, %edi
	callq	_KWork
	leaq	(%r13,%r12), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2379 13               # gsm_encode.c:2379:13
.Ltmp1071:
	movswl	(%r13,%r12), %r14d
	sarl	$2, %r14d
	movq	-72(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
.Ltmp1072:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movq	%rdi, -88(%rbp)         # 8-byte Spill
	movl	$2, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2379 13               # gsm_encode.c:2379:13
.Ltmp1073:
	movswl	(%rbx,%r12), %ebx
	sarl	$2, %ebx
	addl	%r14d, %ebx
	movslq	%ebx, %r15
.Ltmp1074:
	#DEBUG_VALUE: Coefficients_27_39:ltmp <- EBX
	leaq	32768(%r15), %r13
.Ltmp1075:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movl	$2, (%rsp)
	movq	%r12, %r14
	movl	$22, %r12d
	movl	$22, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	movl	$4, (%rsp)
	movl	$23, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2379 13               # gsm_encode.c:2379:13
.Ltmp1076:
	cmpq	$65536, %r13            # imm = 0x10000
	jb	.LBB6_71
.Ltmp1077:
# BB#70:                                # %cond.true.i62
                                        #   in Loop: Header=BB6_68 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	#DEBUG_VALUE: Coefficients_27_39:ltmp <- EBX
	movl	$23, %edi
	.loc	1 2563 3                # gsm_encode.c:2563:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2379 13 discriminator 1 # gsm_encode.c:2379:13
.Ltmp1078:
	testl	%ebx, %ebx
	movq	$-32768, %r15           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r15
.Ltmp1079:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movl	$5, (%rsp)
	movl	$21, %r12d
	movl	$21, %edi
	movl	$4, %esi
	movl	$5, %edx
	movl	$1, %ecx
	movl	$5, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
.Ltmp1080:
.LBB6_71:                               # %cond.end.i74
                                        #   in Loop: Header=BB6_68 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	movl	$4, %edi
	callq	_KPushCDep
	movl	$6, %edi
	movl	$4, %edx
	movl	$23, %ecx
	movl	%r12d, %esi
	callq	_KPhi2To1
	movl	$13, %edi
	callq	_KWork
	movl	$3, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	movl	$6, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	leaq	-64(%rbp,%r14), %r12
	movl	$3, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	.loc	1 2379 5                # gsm_encode.c:2379:5
.Ltmp1081:
	movw	%r15w, -64(%rbp,%r14)
	movl	$7, %esi
	movl	$2, %edx
.Ltmp1082:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2380 13               # gsm_encode.c:2380:13
.Ltmp1083:
	movswq	-64(%rbp,%r14), %rbx
	movl	$8, %esi
	movl	$2, %edx
.Ltmp1084:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2380 13               # gsm_encode.c:2380:13
.Ltmp1085:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movswl	(%rax,%r14), %eax
	movq	%r14, -104(%rbp)        # 8-byte Spill
	sarl	%eax
	cltq
	leaq	(%rax,%rbx), %r14
.Ltmp1086:
	#DEBUG_VALUE: Coefficients_27_39:ltmp <- R14
	leaq	32768(%rax,%rbx), %rbx
.Ltmp1087:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movl	$2, (%rsp)
	movl	$25, %r15d
	movl	$25, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$7, %ecx
	movl	$1, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	movl	$4, (%rsp)
	movl	$26, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$7, %ecx
	movl	$3, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2380 13               # gsm_encode.c:2380:13
.Ltmp1088:
	cmpq	$65536, %rbx            # imm = 0x10000
	jb	.LBB6_73
.Ltmp1089:
# BB#72:                                # %cond.true20.i77
                                        #   in Loop: Header=BB6_68 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_27_39:i <- 1
	#DEBUG_VALUE: Coefficients_27_39:ltmp <- R14
	movl	$26, %edi
	.loc	1 2563 3                # gsm_encode.c:2563:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2380 13 discriminator 1 # gsm_encode.c:2380:13
.Ltmp1090:
	testq	%r14, %r14
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
.Ltmp1091:
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r14
.Ltmp1092:
	.loc	1 2563 3                # gsm_encode.c:2563:3
	movl	$5, (%rsp)
	movl	$24, %r15d
	movl	$24, %edi
	movl	$4, %esi
	movl	$5, %edx
	movl	$7, %ecx
	movl	$4, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	jmp	.LBB6_73
.LBB6_74:                               # %Coefficients_27_39.exit
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movabsq	$8908228216996855427, %r15 # imm = 0x7BA0625D94357E83
	movabsq	$6253788133377484993, %r13 # imm = 0x56C9EB2C5E84A8C1
	movl	$1, %esi
	movabsq	$-6673064024465142683, %rdi # imm = 0xA36483A00A510C65
	callq	_KExitRegion
	xorl	%r12d, %r12d
	xorl	%esi, %esi
	movabsq	$8871715368784635694, %rdi # imm = 0x7B1EAA1FA0C8272E
	callq	_KExitRegion
	movabsq	$-3688389347291457115, %rdi # imm = 0xCCD0356E395B99A5
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-64(%rbp), %r14
	.loc	1 2564 3                # gsm_encode.c:2564:3
	movq	%r14, %rdi
	callq	LARp_to_rp
	.loc	1 2565 24               # gsm_encode.c:2565:24
	movq	-120(%rbp), %rax        # 8-byte Reload
	leaq	54(%rax), %rbx
	movabsq	$6809141768921923626, %rdi # imm = 0x5E7EEE5CC9DDC02A
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$13, %edx
	.loc	1 2565 3 is_stmt 0      # gsm_encode.c:2565:3
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%r14, %rsi
	movq	%rbx, %rcx
	callq	Short_term_analysis_filtering
	movabsq	$-5147119099235048341, %rdi # imm = 0xB891C2732977646B
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 2567 3 is_stmt 1      # gsm_encode.c:2567:3
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$11, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1093:
	#DEBUG_VALUE: Coefficients_40_159:i <- 1
	movl	$9, %ebx
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, -80(%rbp)           # 4-byte Folded Spill
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_KEnterRegion
	movabsq	$-272940320677446670, %r14 # imm = 0xFC3652397523BBF2
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	.LBB6_75
	.align	16, 0x90
.LBB6_76:                               # %for.body.i97
                                        #   in Loop: Header=BB6_75 Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_40_159:i <- 1
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$4, %r13d
	movl	$4, %edi
	callq	_KPushCDep
	movl	$6, %edi
	callq	_KWork
	movq	-72(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2393 13               # gsm_encode.c:2393:13
.Ltmp1094:
	movw	(%rbx,%r12), %bx
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
.Ltmp1095:
	.loc	1 2567 3                # gsm_encode.c:2567:3
	callq	_KTimestamp1
	leaq	-64(%rbp,%r12), %rsi
	movl	$1, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2393 5                # gsm_encode.c:2393:5
.Ltmp1096:
	movw	%bx, -64(%rbp,%r12)
	movl	$7, -80(%rbp)           # 4-byte Folded Spill
	movl	$7, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
.Ltmp1097:
	.loc	1 2567 3                # gsm_encode.c:2567:3
	callq	_KTimestamp2
	movl	$3, %r15d
	movl	$3, %edi
	movl	$2, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$10, %ebx
	movl	$10, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	addq	$2, %r12
.LBB6_75:                               # %for.cond.i92
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	#DEBUG_VALUE: Coefficients_40_159:i <- 1
	movl	$2, %edi
	movl	%r15d, %esi
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$5, %edi
	movl	-80(%rbp), %esi         # 4-byte Reload
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$8, %edi
	movl	%ebx, %esi
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$4, %edi
	movl	$2, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$2, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$4, %esi
	callq	_KPhiAddCond
	movl	$8, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2392 3                # gsm_encode.c:2392:3
.Ltmp1098:
	cmpl	$16, %r12d
	jne	.LBB6_76
.Ltmp1099:
# BB#77:                                # %Coefficients_40_159.exit
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:S <- [RBP+-112]
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- [RBP+-120]
	movl	$1, %esi
	movabsq	$6253788133377484993, %rdi # imm = 0x56C9EB2C5E84A8C1
	.loc	1 2567 3                # gsm_encode.c:2567:3
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$8908228216996855427, %rdi # imm = 0x7BA0625D94357E83
	callq	_KExitRegion
	movabsq	$8644904618300598905, %rdi # imm = 0x77F8DEF29AF0EA79
	xorl	%esi, %esi
	callq	_KPrepCall
	leaq	-64(%rbp), %r14
	.loc	1 2568 3                # gsm_encode.c:2568:3
	movq	%r14, %rdi
	callq	LARp_to_rp
	movq	-120(%rbp), %rbx        # 8-byte Reload
.Ltmp1100:
	#DEBUG_VALUE: Gsm_Short_Term_Analysis_Filter:s <- RBX
	.loc	1 2569 25               # gsm_encode.c:2569:25
	addq	$80, %rbx
.Ltmp1101:
	movabsq	$2235719332530813191, %rdi # imm = 0x1F06DEE338F8F907
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$120, %edx
	.loc	1 2569 3 is_stmt 0      # gsm_encode.c:2569:3
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%r14, %rsi
	movq	%rbx, %rcx
	callq	Short_term_analysis_filtering
	xorl	%esi, %esi
	movabsq	$-2769801177751670352, %rdi # imm = 0xD98FB080FDA731B0
	callq	_KExitRegion
	.loc	1 2570 1 is_stmt 1      # gsm_encode.c:2570:1
	addq	$88, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1102:
.Ltmp1103:
	.size	Gsm_Short_Term_Analysis_Filter, .Ltmp1103-Gsm_Short_Term_Analysis_Filter
.Lfunc_end6:
	.cfi_endproc

	.globl	Gsm_Long_Term_Predictor
	.align	16, 0x90
	.type	Gsm_Long_Term_Predictor,@function
Gsm_Long_Term_Predictor:                # @Gsm_Long_Term_Predictor
.Lfunc_begin7:
	.loc	1 2210 0                # gsm_encode.c:2210:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1104:
	.cfi_def_cfa_offset 16
.Ltmp1105:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1106:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
.Ltmp1107:
	.cfi_offset %rbx, -56
.Ltmp1108:
	.cfi_offset %r12, -48
.Ltmp1109:
	.cfi_offset %r13, -40
.Ltmp1110:
	.cfi_offset %r14, -32
.Ltmp1111:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RSI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- RDX
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- RCX
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- R8
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:Nc <- R9
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movq	%r9, %r15
.Ltmp1112:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:Nc <- R15
	movq	%r8, -56(%rbp)          # 8-byte Spill
.Ltmp1113:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	movq	%rcx, -64(%rbp)         # 8-byte Spill
.Ltmp1114:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	movq	%rdx, %r14
.Ltmp1115:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- R14
	movq	%r14, -48(%rbp)         # 8-byte Spill
	movq	%rsi, %rbx
.Ltmp1116:
	#DEBUG_VALUE: Long_term_analysis_filtering:dp <- R14
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RBX
	movq	%rbx, -72(%rbp)         # 8-byte Spill
	movq	16(%rbp), %r12
	movabsq	$5304942406281692024, %r13 # imm = 0x499EF10300538378
	xorl	%esi, %esi
	movq	%r13, %rdi
.Ltmp1117:
	callq	_KEnterRegion
	movl	$3, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$8, %edi
	callq	_KWork
	movabsq	$-6274551856974919424, %rdi # imm = 0xA8EC5054803E0900
	xorl	%esi, %esi
	callq	_KPrepCall
	.loc	1 2217 5 prologue_end   # gsm_encode.c:2217:5
.Ltmp1118:
	movq	%rbx, %rdi
.Ltmp1119:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	movq	%r14, %rsi
	movabsq	$5590998373032709146, %rbx # imm = 0x4D973765DC66CC1A
.Ltmp1120:
	#DEBUG_VALUE: Long_term_analysis_filtering:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	movq	%r13, %r14
	movq	%r12, %rdx
	movq	%r15, %rcx
	callq	Calculation_of_the_LTP_parameters
	movl	$1, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
.Ltmp1121:
	#DEBUG_VALUE: Long_term_analysis_filtering:d <- [RBP+-72]
	.loc	1 2190 11               # gsm_encode.c:2190:11
	movswl	(%r12), %r12d
	movl	$2, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	movswq	(%r15), %r15
.Ltmp1122:
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movabsq	$-5608434856272190181, %rdi # imm = 0xB22AD63685FA251B
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	callq	_KEnqArg
	movl	$1, %edi
	callq	_KEnqArg
	xorl	%esi, %esi
.Ltmp1123:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$48, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	movl	$6, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2190 3                # gsm_encode.c:2190:3
.Ltmp1124:
	cmpl	$3, %r12d
	ja	.LBB7_23
.Ltmp1125:
# BB#1:                                 # %entry
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	jmpq	*.LJTI7_0(,%r12,8)
.Ltmp1126:
.LBB7_2:                                # %sw.bb.i
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movabsq	$6084063651572276748, %r14 # imm = 0x546EEFA806D4DE0C
	movl	$6, %edi
.Ltmp1127:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
.Ltmp1128:
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$8, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	addq	%r15, %r15
	subq	%r15, -48(%rbp)         # 8-byte Folded Spill
	movabsq	$4735752405892239488, %rdi # imm = 0x41B8C5B8D9689080
	xorl	%r12d, %r12d
	movq	-56(%rbp), %r15         # 8-byte Reload
	.align	16, 0x90
.LBB7_3:                                # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1129:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$2, %esi
	callq	_KEnterRegion
	movl	$7, %edi
.Ltmp1130:
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KWork
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
	movl	$3, %esi
	movl	$4, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2191 13 discriminator 2 # gsm_encode.c:2191:13
.Ltmp1131:
	movswl	(%rbx,%r12), %eax
	imull	$3277, %eax, %ebx       # imm = 0xCCD
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$5, %edi
	movl	$7, %esi
	movl	$4, %edx
	movl	$3, %ecx
	movl	$4, %r8d
.Ltmp1132:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KTimestamp2
.Ltmp1133:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- R15
	leaq	(%r15,%r12), %r13
	movl	$5, %edi
	movl	$2, %edx
	movq	%r13, %rsi
	callq	_KStore
	.loc	1 2191 13 discriminator 2 # gsm_encode.c:2191:13
.Ltmp1134:
	movw	%bx, (%r15,%r12)
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp1135:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RBX
	leaq	(%rbx,%r12), %rdi
	movl	$9, %esi
	movl	$2, %edx
.Ltmp1136:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KLoad0
	.loc	1 2191 13 discriminator 2 # gsm_encode.c:2191:13
.Ltmp1137:
	movswq	(%rbx,%r12), %r14
.Ltmp1138:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	movl	$10, %esi
	movl	$2, %edx
.Ltmp1139:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2191 13 discriminator 2 # gsm_encode.c:2191:13
.Ltmp1140:
	movswq	(%r15,%r12), %rax
.Ltmp1141:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	subq	%rax, %r14
.Ltmp1142:
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- R14
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$2, (%rsp)
	movl	$41, %edi
	movl	$7, %esi
	movl	$2, %edx
	movl	$9, %ecx
	movl	$2, %r8d
	movl	$10, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2191 13 discriminator 2 # gsm_encode.c:2191:13
.Ltmp1143:
	cmpq	$32766, %r14            # imm = 0x7FFE
	movl	$0, %ebx
	movl	$32767, %r13d           # imm = 0x7FFF
	jg	.LBB7_5
.Ltmp1144:
# BB#4:                                 # %cond.false.i
                                        #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- R14
	movl	$41, %edi
.Ltmp1145:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2191 13 discriminator 5 # gsm_encode.c:2191:13
.Ltmp1146:
	cmpq	$-32769, %r14           # imm = 0xFFFFFFFFFFFF7FFF
	movq	$-32768, %rax           # imm = 0xFFFFFFFFFFFF8000
	cmovleq	%rax, %r14
.Ltmp1147:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$3, (%rsp)
	movl	$40, %ebx
	movl	$40, %edi
	movl	$7, %esi
	movl	$3, %edx
	movl	$9, %ecx
	movl	$3, %r8d
	movl	$10, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2191 13               # gsm_encode.c:2191:13
.Ltmp1148:
	movq	%r14, %r13
.Ltmp1149:
.LBB7_5:                                # %cond.end20.i
                                        #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$7, %edi
.Ltmp1150:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$12, %edi
	movl	$7, %edx
	movl	$41, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$11, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	movl	$12, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp1151:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- RBX
	leaq	(%rbx,%r12), %rsi
	movl	$11, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2191 13 discriminator 11 # gsm_encode.c:2191:13
.Ltmp1152:
	movw	%r13w, (%rbx,%r12)
.Ltmp1153:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$4735752405892239488, %rbx # imm = 0x41B8C5B8D9689080
	movq	%rbx, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2191 13               # gsm_encode.c:2191:13
.Ltmp1154:
	addq	$2, %r12
	cmpq	$80, %r12
	movq	%rbx, %rdi
	jne	.LBB7_3
.Ltmp1155:
# BB#6:                                 # %for.cond.pre_exit.sw.epilog.loopexit.i
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movl	$1, %esi
	movabsq	$6084063651572276748, %rdi # imm = 0x546EEFA806D4DE0C
.Ltmp1156:
	jmp	.LBB7_22
.LBB7_7:                                # %sw.bb25.i
.Ltmp1157:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movabsq	$2845347729994853298, %r14 # imm = 0x277CB4AF64CEABB2
	movl	$6, %edi
.Ltmp1158:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$17, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$16, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$17, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	addq	%r15, %r15
	subq	%r15, -48(%rbp)         # 8-byte Folded Spill
	movabsq	$3386968538330538445, %rdi # imm = 0x2F00EDF0D09DA1CD
	xorl	%r12d, %r12d
	movq	-56(%rbp), %r15         # 8-byte Reload
	.align	16, 0x90
.LBB7_8:                                # %for.body29.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1159:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$2, %esi
	callq	_KEnterRegion
	movl	$16, %edi
.Ltmp1160:
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KWork
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
	movl	$13, %esi
	movl	$14, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2192 13 discriminator 2 # gsm_encode.c:2192:13
.Ltmp1161:
	movswl	(%rbx,%r12), %eax
	imull	$11469, %eax, %ebx      # imm = 0x2CCD
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$15, %edi
	movl	$16, %esi
	movl	$4, %edx
	movl	$13, %ecx
	movl	$4, %r8d
.Ltmp1162:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KTimestamp2
.Ltmp1163:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- R15
	leaq	(%r15,%r12), %r14
	movl	$15, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2192 13 discriminator 2 # gsm_encode.c:2192:13
.Ltmp1164:
	movw	%bx, (%r15,%r12)
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp1165:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RBX
	leaq	(%rbx,%r12), %rdi
	movl	$18, %esi
	movl	$2, %edx
.Ltmp1166:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KLoad0
	.loc	1 2192 13 discriminator 2 # gsm_encode.c:2192:13
.Ltmp1167:
	movswq	(%rbx,%r12), %rbx
.Ltmp1168:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	movl	$19, %esi
	movl	$2, %edx
.Ltmp1169:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2192 13 discriminator 2 # gsm_encode.c:2192:13
.Ltmp1170:
	movswq	(%r15,%r12), %rax
.Ltmp1171:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	subq	%rax, %rbx
.Ltmp1172:
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$2, (%rsp)
	movl	$43, %edi
	movl	$16, %esi
	movl	$2, %edx
	movl	$18, %ecx
	movl	$2, %r8d
	movl	$19, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2192 13 discriminator 2 # gsm_encode.c:2192:13
.Ltmp1173:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$0, %r14d
	movl	$32767, %r13d           # imm = 0x7FFF
	jg	.LBB7_10
.Ltmp1174:
# BB#9:                                 # %cond.false51.i
                                        #   in Loop: Header=BB7_8 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	movl	$43, %edi
.Ltmp1175:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2192 13 discriminator 5 # gsm_encode.c:2192:13
.Ltmp1176:
	cmpq	$-32769, %rbx           # imm = 0xFFFFFFFFFFFF7FFF
	movq	$-32768, %rax           # imm = 0xFFFFFFFFFFFF8000
	cmovleq	%rax, %rbx
.Ltmp1177:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$3, (%rsp)
	movl	$42, %r14d
	movl	$42, %edi
	movl	$16, %esi
	movl	$3, %edx
	movl	$18, %ecx
	movl	$3, %r8d
	movl	$19, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2192 13               # gsm_encode.c:2192:13
.Ltmp1178:
	movq	%rbx, %r13
.Ltmp1179:
.LBB7_10:                               # %cond.end58.i
                                        #   in Loop: Header=BB7_8 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$16, %edi
.Ltmp1180:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$21, %edi
	movl	$16, %edx
	movl	$43, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$20, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	movl	$21, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp1181:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- RBX
	leaq	(%rbx,%r12), %rsi
	movl	$20, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2192 13 discriminator 11 # gsm_encode.c:2192:13
.Ltmp1182:
	movw	%r13w, (%rbx,%r12)
.Ltmp1183:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$3386968538330538445, %rbx # imm = 0x2F00EDF0D09DA1CD
	movq	%rbx, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$16, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$17, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2192 13               # gsm_encode.c:2192:13
.Ltmp1184:
	addq	$2, %r12
	cmpq	$80, %r12
	movq	%rbx, %rdi
	jne	.LBB7_8
.Ltmp1185:
# BB#11:                                # %for.cond26.pre_exit.sw.epilog.loopexit1.i
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movl	$1, %esi
	movabsq	$2845347729994853298, %rdi # imm = 0x277CB4AF64CEABB2
.Ltmp1186:
	jmp	.LBB7_22
.LBB7_12:                               # %sw.bb66.i
.Ltmp1187:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movabsq	$5779860588507933898, %r14 # imm = 0x503630950D4BACCA
	movl	$6, %edi
.Ltmp1188:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$26, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$25, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$26, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	addq	%r15, %r15
	subq	%r15, -48(%rbp)         # 8-byte Folded Spill
	movabsq	$-6991586529234833125, %rdi # imm = 0x9EF8E5183C8D311B
	xorl	%r12d, %r12d
	movq	-56(%rbp), %r15         # 8-byte Reload
	.align	16, 0x90
.LBB7_13:                               # %for.body70.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1189:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$2, %esi
	callq	_KEnterRegion
	movl	$25, %edi
.Ltmp1190:
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KWork
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
	movl	$22, %esi
	movl	$23, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2193 13 discriminator 2 # gsm_encode.c:2193:13
.Ltmp1191:
	movswl	(%rbx,%r12), %eax
	imull	$21299, %eax, %ebx      # imm = 0x5333
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$24, %edi
	movl	$25, %esi
	movl	$4, %edx
	movl	$22, %ecx
	movl	$4, %r8d
.Ltmp1192:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KTimestamp2
.Ltmp1193:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- R15
	leaq	(%r15,%r12), %r14
	movl	$24, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2193 13 discriminator 2 # gsm_encode.c:2193:13
.Ltmp1194:
	movw	%bx, (%r15,%r12)
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp1195:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RBX
	leaq	(%rbx,%r12), %rdi
	movl	$27, %esi
	movl	$2, %edx
.Ltmp1196:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KLoad0
	.loc	1 2193 13 discriminator 2 # gsm_encode.c:2193:13
.Ltmp1197:
	movswq	(%rbx,%r12), %rbx
.Ltmp1198:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	movl	$28, %esi
	movl	$2, %edx
.Ltmp1199:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2193 13 discriminator 2 # gsm_encode.c:2193:13
.Ltmp1200:
	movswq	(%r15,%r12), %rax
.Ltmp1201:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	subq	%rax, %rbx
.Ltmp1202:
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$2, (%rsp)
	movl	$45, %edi
	movl	$25, %esi
	movl	$2, %edx
	movl	$27, %ecx
	movl	$2, %r8d
	movl	$28, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2193 13 discriminator 2 # gsm_encode.c:2193:13
.Ltmp1203:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$0, %r14d
	movl	$32767, %r13d           # imm = 0x7FFF
	jg	.LBB7_15
.Ltmp1204:
# BB#14:                                # %cond.false92.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	movl	$45, %edi
.Ltmp1205:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2193 13 discriminator 5 # gsm_encode.c:2193:13
.Ltmp1206:
	cmpq	$-32769, %rbx           # imm = 0xFFFFFFFFFFFF7FFF
	movq	$-32768, %rax           # imm = 0xFFFFFFFFFFFF8000
	cmovleq	%rax, %rbx
.Ltmp1207:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$3, (%rsp)
	movl	$44, %r14d
	movl	$44, %edi
	movl	$25, %esi
	movl	$3, %edx
	movl	$27, %ecx
	movl	$3, %r8d
	movl	$28, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2193 13               # gsm_encode.c:2193:13
.Ltmp1208:
	movq	%rbx, %r13
.Ltmp1209:
.LBB7_15:                               # %cond.end99.i
                                        #   in Loop: Header=BB7_13 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$25, %edi
.Ltmp1210:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$30, %edi
	movl	$25, %edx
	movl	$45, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$29, %edi
	movl	$25, %esi
	xorl	%edx, %edx
	movl	$30, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp1211:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- RBX
	leaq	(%rbx,%r12), %rsi
	movl	$29, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2193 13 discriminator 11 # gsm_encode.c:2193:13
.Ltmp1212:
	movw	%r13w, (%rbx,%r12)
.Ltmp1213:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-6991586529234833125, %rbx # imm = 0x9EF8E5183C8D311B
	movq	%rbx, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$25, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$26, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2193 13               # gsm_encode.c:2193:13
.Ltmp1214:
	addq	$2, %r12
	cmpq	$80, %r12
	movq	%rbx, %rdi
	jne	.LBB7_13
.Ltmp1215:
# BB#16:                                # %for.cond67.pre_exit.sw.epilog.loopexit2.i
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movl	$1, %esi
	movabsq	$5779860588507933898, %rdi # imm = 0x503630950D4BACCA
.Ltmp1216:
	jmp	.LBB7_22
.LBB7_17:                               # %sw.bb107.i
.Ltmp1217:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dp <- [RBP+-48]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movabsq	$-7235338027827046039, %r14 # imm = 0x9B96EA65ED7E5969
	movl	$6, %edi
.Ltmp1218:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$35, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$34, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$35, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	addq	%r15, %r15
	subq	%r15, -48(%rbp)         # 8-byte Folded Spill
	movabsq	$-6900119963762003445, %rdi # imm = 0xA03DD9738C62720B
	xorl	%r12d, %r12d
	movq	-56(%rbp), %r15         # 8-byte Reload
	.align	16, 0x90
.LBB7_18:                               # %for.body111.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1219:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$2, %esi
	callq	_KEnterRegion
	movl	$34, %edi
.Ltmp1220:
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KWork
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r12), %rdi
	movl	$31, %esi
	movl	$32, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 2194 13 discriminator 2 # gsm_encode.c:2194:13
.Ltmp1221:
	movswl	(%rbx,%r12), %eax
	imull	$32767, %eax, %ebx      # imm = 0x7FFF
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$33, %edi
	movl	$34, %esi
	movl	$4, %edx
	movl	$31, %ecx
	movl	$4, %r8d
.Ltmp1222:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KTimestamp2
.Ltmp1223:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- R15
	leaq	(%r15,%r12), %r14
	movl	$33, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2194 13 discriminator 2 # gsm_encode.c:2194:13
.Ltmp1224:
	movw	%bx, (%r15,%r12)
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp1225:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- RBX
	leaq	(%rbx,%r12), %rdi
	movl	$36, %esi
	movl	$2, %edx
.Ltmp1226:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KLoad0
	.loc	1 2194 13 discriminator 2 # gsm_encode.c:2194:13
.Ltmp1227:
	movswq	(%rbx,%r12), %rbx
.Ltmp1228:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	movl	$37, %esi
	movl	$2, %edx
.Ltmp1229:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2194 13 discriminator 2 # gsm_encode.c:2194:13
.Ltmp1230:
	movswq	(%r15,%r12), %rax
.Ltmp1231:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	subq	%rax, %rbx
.Ltmp1232:
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$2, (%rsp)
	movl	$47, %edi
	movl	$34, %esi
	movl	$2, %edx
	movl	$36, %ecx
	movl	$2, %r8d
	movl	$37, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2194 13 discriminator 2 # gsm_encode.c:2194:13
.Ltmp1233:
	cmpq	$32766, %rbx            # imm = 0x7FFE
	movl	$0, %r14d
	movl	$32767, %r13d           # imm = 0x7FFF
	jg	.LBB7_20
.Ltmp1234:
# BB#19:                                # %cond.false133.i
                                        #   in Loop: Header=BB7_18 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	#DEBUG_VALUE: Long_term_analysis_filtering:ltmp <- RBX
	movl	$47, %edi
.Ltmp1235:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2194 13 discriminator 5 # gsm_encode.c:2194:13
.Ltmp1236:
	cmpq	$-32769, %rbx           # imm = 0xFFFFFFFFFFFF7FFF
	movq	$-32768, %rax           # imm = 0xFFFFFFFFFFFF8000
	cmovleq	%rax, %rbx
.Ltmp1237:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	movl	$3, (%rsp)
	movl	$46, %r14d
	movl	$46, %edi
	movl	$34, %esi
	movl	$3, %edx
	movl	$36, %ecx
	movl	$3, %r8d
	movl	$37, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 2194 13               # gsm_encode.c:2194:13
.Ltmp1238:
	movq	%rbx, %r13
.Ltmp1239:
.LBB7_20:                               # %cond.end140.i
                                        #   in Loop: Header=BB7_18 Depth=1
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:d <- [RBP+-72]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:dpp <- [RBP+-56]
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	#DEBUG_VALUE: Long_term_analysis_filtering:k <- 0
	movl	$34, %edi
.Ltmp1240:
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPushCDep
	movl	$39, %edi
	movl	$34, %edx
	movl	$47, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$38, %edi
	movl	$34, %esi
	xorl	%edx, %edx
	movl	$39, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp1241:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- RBX
	leaq	(%rbx,%r12), %rsi
	movl	$38, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 2194 13 discriminator 11 # gsm_encode.c:2194:13
.Ltmp1242:
	movw	%r13w, (%rbx,%r12)
.Ltmp1243:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:e <- [RBP+-64]
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-6900119963762003445, %rbx # imm = 0xA03DD9738C62720B
	movq	%rbx, %rdi
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$34, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$35, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2194 13               # gsm_encode.c:2194:13
.Ltmp1244:
	addq	$2, %r12
	cmpq	$80, %r12
	movq	%rbx, %rdi
	jne	.LBB7_18
.Ltmp1245:
# BB#21:                                # %for.cond108.pre_exit.sw.epilog.loopexit3.i
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	movl	$1, %esi
	movabsq	$-7235338027827046039, %rdi # imm = 0x9B96EA65ED7E5969
.Ltmp1246:
.LBB7_22:                               # %Long_term_analysis_filtering.exit
	.loc	1 2219 3                # gsm_encode.c:2219:3
	callq	_KExitRegion
	movl	$6, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	movabsq	$5304942406281692024, %r14 # imm = 0x499EF10300538378
	movabsq	$5590998373032709146, %r13 # imm = 0x4D973765DC66CC1A
	movq	%r13, %rbx
.LBB7_23:                               # %Long_term_analysis_filtering.exit
.Ltmp1247:
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:S <- RDI
	#DEBUG_VALUE: Gsm_Long_Term_Predictor:bc <- [RBP+16]
	xorl	%esi, %esi
	movq	%rbx, %rdi
.Ltmp1248:
	callq	_KExitRegion
	xorl	%esi, %esi
	movq	%r14, %rdi
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	_KExitRegion            # TAILCALL
.Ltmp1249:
.Ltmp1250:
	.size	Gsm_Long_Term_Predictor, .Ltmp1250-Gsm_Long_Term_Predictor
.Lfunc_end7:
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI7_0:
	.quad	.LBB7_2
	.quad	.LBB7_7
	.quad	.LBB7_12
	.quad	.LBB7_17

	.text
	.globl	Gsm_RPE_Encoding
	.align	16, 0x90
	.type	Gsm_RPE_Encoding,@function
Gsm_RPE_Encoding:                       # @Gsm_RPE_Encoding
.Lfunc_begin8:
	.loc	1 1681 0                # gsm_encode.c:1681:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1251:
	.cfi_def_cfa_offset 16
.Ltmp1252:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1253:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$616, %rsp              # imm = 0x268
.Ltmp1254:
	.cfi_offset %rbx, -56
.Ltmp1255:
	.cfi_offset %r12, -48
.Ltmp1256:
	.cfi_offset %r13, -40
.Ltmp1257:
	.cfi_offset %r14, -32
.Ltmp1258:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- RSI
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- RDX
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- RCX
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- R8
	movq	%r8, -256(%rbp)         # 8-byte Spill
.Ltmp1259:
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movq	%rcx, -264(%rbp)        # 8-byte Spill
.Ltmp1260:
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	movq	%rdx, -272(%rbp)        # 8-byte Spill
.Ltmp1261:
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	movq	%rsi, -248(%rbp)        # 8-byte Spill
.Ltmp1262:
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	movabsq	$-3696201437774250979, %r14 # imm = 0xCCB474602B2D7C1D
	movabsq	$-8837734710798719021, %rdi # imm = 0x855A0F1AD7B3E7D3
.Ltmp1263:
	movabsq	$-8869240818298755948, %rbx # imm = 0x84EA20778DE86494
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$4, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$12, %edi
	callq	_KWork
	movabsq	$-579044796269030183, %rdi # imm = 0xF7F6D1D3615894D9
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 1686 3 prologue_end   # gsm_encode.c:1686:3
.Ltmp1264:
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$23, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1265:
	#DEBUG_VALUE: Weighting_filter:k <- 0
	movl	$19, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$18, %edi
	movl	$19, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movabsq	$-5055238817194229552, %rdi # imm = 0xB9D82F145E5F40D0
	xorl	%r15d, %r15d
	.align	16, 0x90
.LBB8_1:                                # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1266:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: Weighting_filter:k <- 0
	movl	$2, %esi
	callq	_KEnterRegion
	movl	$18, %edi
.Ltmp1267:
	callq	_KPushCDep
	movl	$72, %edi
	callq	_KWork
.Ltmp1268:
	#DEBUG_VALUE: Weighting_filter:L_result <- 4096
	movq	-248(%rbp), %r13        # 8-byte Reload
.Ltmp1269:
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- R13
	leaq	(%r13,%r15), %rbx
	leaq	-10(%r13,%r15), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1287 7                # gsm_encode.c:1287:7
.Ltmp1270:
	movswq	-10(%r13,%r15), %rax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	leaq	-8(%r13,%r15), %rdi
	movl	$2, %esi
	movl	$2, %edx
.Ltmp1271:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad0
	.loc	1 1288 9                # gsm_encode.c:1288:9
.Ltmp1272:
	movswq	-8(%r13,%r15), %rax
	movq	%rax, -216(%rbp)        # 8-byte Spill
	leaq	-4(%r13,%r15), %rdi
	movl	$3, %esi
	movl	$4, %edx
	movl	$2, %ecx
.Ltmp1273:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1290 9                # gsm_encode.c:1290:9
.Ltmp1274:
	movswq	-4(%r13,%r15), %rax
	movq	%rax, -224(%rbp)        # 8-byte Spill
	leaq	-2(%r13,%r15), %rdi
	movl	$5, %esi
	movl	$6, %edx
	movl	$2, %ecx
.Ltmp1275:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1291 9                # gsm_encode.c:1291:9
.Ltmp1276:
	movswq	-2(%r13,%r15), %rax
.Ltmp1277:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	movq	%rax, -232(%rbp)        # 8-byte Spill
	movl	$7, %esi
	movl	$8, %edx
	movl	$2, %ecx
	movq	%rbx, %rdi
	callq	_KLoad1
	.loc	1 1292 9                # gsm_encode.c:1292:9
.Ltmp1278:
	movswq	(%r13,%r15), %rbx
	shlq	$13, %rbx
	leaq	2(%r13,%r15), %rdi
	movl	$9, %esi
	movl	$10, %edx
	movl	$2, %ecx
.Ltmp1279:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1293 9                # gsm_encode.c:1293:9
.Ltmp1280:
	movswq	2(%r13,%r15), %r12
	leaq	4(%r13,%r15), %rdi
	movl	$11, %esi
	movl	$12, %edx
	movl	$2, %ecx
.Ltmp1281:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1294 9                # gsm_encode.c:1294:9
.Ltmp1282:
	movswq	4(%r13,%r15), %r14
	leaq	8(%r13,%r15), %rdi
	movl	$13, %esi
	movl	$14, %edx
	movl	$2, %ecx
.Ltmp1283:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1296 9                # gsm_encode.c:1296:9
.Ltmp1284:
	movswq	8(%r13,%r15), %rax
	movq	%rax, -240(%rbp)        # 8-byte Spill
	leaq	10(%r13,%r15), %rdi
	movl	$15, %esi
	movl	$16, %edx
	movl	$2, %ecx
.Ltmp1285:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KLoad1
	.loc	1 1297 9                # gsm_encode.c:1297:9
.Ltmp1286:
	movswq	10(%r13,%r15), %rax
.Ltmp1287:
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	.loc	1 1686 3                # gsm_encode.c:1686:3
	addq	-232(%rbp), %r12        # 8-byte Folded Reload
	imulq	$5741, %r12, %rcx       # imm = 0x166D
	addq	-224(%rbp), %r14        # 8-byte Folded Reload
	imulq	$2054, %r14, %rdx       # imm = 0x806
	imulq	$-134, -208(%rbp), %rsi # 8-byte Folded Reload
	imulq	$-374, -216(%rbp), %rdi # 8-byte Folded Reload
                                        # imm = 0xFFFFFFFFFFFFFE8A
	addq	%rsi, %rdi
	addq	%rbx, %rdi
	.loc	1 1287 7                # gsm_encode.c:1287:7
.Ltmp1288:
	addq	%rcx, %rdi
	addq	%rdx, %rdi
	imulq	$-374, -240(%rbp), %rcx # 8-byte Folded Reload
                                        # imm = 0xFFFFFFFFFFFFFE8A
	.loc	1 1296 9                # gsm_encode.c:1296:9
	addq	%rdi, %rcx
.Ltmp1289:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	imulq	$-134, %rax, %rax
	leaq	4096(%rax,%rcx), %r13
.Ltmp1290:
	#DEBUG_VALUE: Weighting_filter:L_result <- R13
	.loc	1 1310 16               # gsm_encode.c:1310:16
	sarq	$13, %r13
.Ltmp1291:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	movl	$6, 120(%rsp)
	movl	$15, 112(%rsp)
	movl	$7, 104(%rsp)
	movl	$13, 96(%rsp)
	movl	$8, 88(%rsp)
	movl	$11, 80(%rsp)
	movl	$9, 72(%rsp)
	movl	$9, 64(%rsp)
	movl	$10, 56(%rsp)
	movl	$7, 48(%rsp)
	movl	$11, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$12, 24(%rsp)
	movl	$3, 16(%rsp)
	movl	$13, 8(%rsp)
	movl	$2, (%rsp)
	movl	$22, %edi
	movl	$10, %esi
	movl	$18, %edx
	movl	$13, %ecx
	movl	$1, %r8d
	movl	$13, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	callq	_KPopCDep
	.loc	1 1311 16               # gsm_encode.c:1311:16
.Ltmp1292:
	cmpq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	movq	$-32768, %r14           # imm = 0xFFFFFFFFFFFF8000
	movl	$0, %ebx
	jl	.LBB8_3
.Ltmp1293:
# BB#2:                                 # %cond.false.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: Weighting_filter:k <- 0
	#DEBUG_VALUE: Weighting_filter:L_result <- R13
	movl	$22, %edi
.Ltmp1294:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1312 5                # gsm_encode.c:1312:5
.Ltmp1295:
	cmpq	$32767, %r13            # imm = 0x7FFF
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %r13
.Ltmp1296:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	movl	$7, 120(%rsp)
	movl	$15, 112(%rsp)
	movl	$8, 104(%rsp)
	movl	$13, 96(%rsp)
	movl	$9, 88(%rsp)
	movl	$11, 80(%rsp)
	movl	$10, 72(%rsp)
	movl	$9, 64(%rsp)
	movl	$11, 56(%rsp)
	movl	$7, 48(%rsp)
	movl	$12, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$13, 24(%rsp)
	movl	$3, 16(%rsp)
	movl	$14, 8(%rsp)
	movl	$2, (%rsp)
	movl	$21, %ebx
	movl	$21, %edi
	movl	$10, %esi
	movl	$18, %edx
	movl	$14, %ecx
	movl	$1, %r8d
	movl	$14, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	callq	_KPopCDep
	.loc	1 1311 16               # gsm_encode.c:1311:16
.Ltmp1297:
	movq	%r13, %r14
.Ltmp1298:
.LBB8_3:                                # %cond.end56.i
                                        #   in Loop: Header=BB8_1 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: Weighting_filter:k <- 0
	movl	$18, %edi
.Ltmp1299:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KPushCDep
	movl	$20, %edi
	movl	$18, %edx
	movl	$22, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$17, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$20, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	leaq	-128(%rbp,%r15), %rsi
	movl	$17, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1311 5                # gsm_encode.c:1311:5
.Ltmp1300:
	movw	%r14w, -128(%rbp,%r15)
.Ltmp1301:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-5055238817194229552, %rbx # imm = 0xB9D82F145E5F40D0
	movq	%rbx, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$18, %edi
	movl	$19, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 1255 3                # gsm_encode.c:1255:3
.Ltmp1302:
	addq	$2, %r15
	cmpq	$80, %r15
	movq	%rbx, %rdi
	jne	.LBB8_1
.Ltmp1303:
# BB#4:                                 # %Weighting_filter.exit
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movabsq	$-6521413979635953763, %rbx # imm = 0xA57F488996884F9D
	movl	$1, %esi
	movabsq	$-3696201437774250979, %rdi # imm = 0xCCB474602B2D7C1D
.Ltmp1304:
	.loc	1 1686 3                # gsm_encode.c:1686:3
	callq	_KExitRegion
	xorl	%eax, %eax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	xorl	%esi, %esi
	movabsq	$-8869240818298755948, %rdi # imm = 0x84EA20778DE86494
	callq	_KExitRegion
	movabsq	$-1759961429823588703, %rdi # imm = 0xE7935C677CF9F6A1
	xorl	%esi, %esi
	callq	_KPrepCall
	xorl	%esi, %esi
	.loc	1 1687 3                # gsm_encode.c:1687:3
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$56, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$211, %edi
	callq	_KWork
.Ltmp1305:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- 0
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 0
	#DEBUG_VALUE: RPE_grid_selection:EM <- 0
	.loc	1 1366 3                # gsm_encode.c:1366:3
	leaq	-122(%rbp), %rdi
	movl	$1, %esi
	movl	$2, %edx
.Ltmp1306:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1366 3                # gsm_encode.c:1366:3
.Ltmp1307:
	movswl	-122(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1308:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1309:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1366 17 is_stmt 0     # gsm_encode.c:1366:17
	leaq	-116(%rbp), %rdi
	movl	$2, %esi
	movl	$2, %edx
.Ltmp1310:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1366 17               # gsm_encode.c:1366:17
.Ltmp1311:
	movswl	-116(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1312:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1313:
	addq	%r14, %rbx
.Ltmp1314:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1366 31 is_stmt 0     # gsm_encode.c:1366:31
	leaq	-110(%rbp), %rdi
	movl	$3, %esi
	movl	$2, %edx
.Ltmp1315:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1366 31               # gsm_encode.c:1366:31
.Ltmp1316:
	movswl	-110(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1317:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1318:
	addq	%rbx, %r14
.Ltmp1319:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1366 45 is_stmt 0     # gsm_encode.c:1366:45
	leaq	-104(%rbp), %rdi
	movl	$4, %esi
	movl	$2, %edx
.Ltmp1320:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1366 45               # gsm_encode.c:1366:45
.Ltmp1321:
	movswl	-104(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1322:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1323:
	addq	%r14, %rbx
.Ltmp1324:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1367 3                # gsm_encode.c:1367:3
	leaq	-98(%rbp), %rdi
	movl	$5, %esi
	movl	$2, %edx
.Ltmp1325:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1367 3                # gsm_encode.c:1367:3
.Ltmp1326:
	movswl	-98(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1327:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1328:
	addq	%rbx, %r14
.Ltmp1329:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1367 17 is_stmt 0     # gsm_encode.c:1367:17
	leaq	-92(%rbp), %rdi
	movl	$6, %esi
	movl	$2, %edx
.Ltmp1330:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1367 17               # gsm_encode.c:1367:17
.Ltmp1331:
	movswl	-92(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1332:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1333:
	addq	%r14, %rbx
.Ltmp1334:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1367 31 is_stmt 0     # gsm_encode.c:1367:31
	leaq	-86(%rbp), %rdi
	movl	$7, %esi
	movl	$2, %edx
.Ltmp1335:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1367 31               # gsm_encode.c:1367:31
.Ltmp1336:
	movswl	-86(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1337:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1338:
	addq	%rbx, %r14
.Ltmp1339:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1367 45 is_stmt 0     # gsm_encode.c:1367:45
	leaq	-80(%rbp), %rdi
	movl	$8, %esi
	movl	$2, %edx
.Ltmp1340:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1367 45               # gsm_encode.c:1367:45
.Ltmp1341:
	movswl	-80(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1342:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1343:
	addq	%r14, %rbx
.Ltmp1344:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1368 3                # gsm_encode.c:1368:3
	leaq	-74(%rbp), %rdi
	movl	$9, %esi
	movl	$2, %edx
.Ltmp1345:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1368 3                # gsm_encode.c:1368:3
.Ltmp1346:
	movswl	-74(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1347:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1348:
	addq	%rbx, %r14
.Ltmp1349:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1368 17 is_stmt 0     # gsm_encode.c:1368:17
	leaq	-68(%rbp), %rdi
	movl	$10, %esi
	movl	$2, %edx
.Ltmp1350:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1368 17               # gsm_encode.c:1368:17
.Ltmp1351:
	movswl	-68(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1352:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1353:
	addq	%r14, %rbx
.Ltmp1354:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1368 31 is_stmt 0     # gsm_encode.c:1368:31
	leaq	-62(%rbp), %rdi
	movl	$11, %esi
	movl	$2, %edx
.Ltmp1355:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1368 31               # gsm_encode.c:1368:31
.Ltmp1356:
	movswl	-62(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1357:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1358:
	addq	%rbx, %r14
.Ltmp1359:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1368 45 is_stmt 0     # gsm_encode.c:1368:45
	leaq	-56(%rbp), %rdi
	movl	$12, %esi
	movl	$2, %edx
.Ltmp1360:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1368 45               # gsm_encode.c:1368:45
.Ltmp1361:
	movswl	-56(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r12
.Ltmp1362:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R12
	imulq	%r12, %r12
.Ltmp1363:
	addq	%r14, %r12
.Ltmp1364:
	#DEBUG_VALUE: RPE_grid_selection:L_common_0_3 <- R12
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R12
	leaq	-128(%rbp), %rdi
.Ltmp1365:
	#DEBUG_VALUE: Weighting_filter:x <- RDI
	#DEBUG_VALUE: RPE_grid_selection:x <- RDI
	movl	$13, %esi
	movl	$2, %edx
.Ltmp1366:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1373 3                # gsm_encode.c:1373:3
.Ltmp1367:
	movswl	-128(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r13
.Ltmp1368:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R13
	imulq	%r13, %r13
.Ltmp1369:
	addq	%r12, %r13
.Ltmp1370:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R13
	.loc	1 1374 3                # gsm_encode.c:1374:3
	addq	%r13, %r13
.Ltmp1371:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- 0
	#DEBUG_VALUE: RPE_grid_selection:EM <- R13
	.loc	1 1380 3                # gsm_encode.c:1380:3
	leaq	-126(%rbp), %rdi
.Ltmp1372:
	movl	$14, %esi
	movl	$2, %edx
.Ltmp1373:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1380 3                # gsm_encode.c:1380:3
.Ltmp1374:
	movswl	-126(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1375:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1376:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1381 3                # gsm_encode.c:1381:3
	leaq	-120(%rbp), %rdi
	movl	$15, %esi
	movl	$2, %edx
.Ltmp1377:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1381 3                # gsm_encode.c:1381:3
.Ltmp1378:
	movswl	-120(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1379:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1380:
	addq	%r14, %rbx
.Ltmp1381:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1381 17 is_stmt 0     # gsm_encode.c:1381:17
	leaq	-114(%rbp), %rdi
	movl	$16, %esi
	movl	$2, %edx
.Ltmp1382:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1381 17               # gsm_encode.c:1381:17
.Ltmp1383:
	movswl	-114(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1384:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1385:
	addq	%rbx, %r14
.Ltmp1386:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1381 31 is_stmt 0     # gsm_encode.c:1381:31
	leaq	-108(%rbp), %rdi
	movl	$17, %esi
	movl	$2, %edx
.Ltmp1387:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1381 31               # gsm_encode.c:1381:31
.Ltmp1388:
	movswl	-108(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1389:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1390:
	addq	%r14, %rbx
.Ltmp1391:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1381 45 is_stmt 0     # gsm_encode.c:1381:45
	leaq	-102(%rbp), %rdi
	movl	$18, %esi
	movl	$2, %edx
.Ltmp1392:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1381 45               # gsm_encode.c:1381:45
.Ltmp1393:
	movswl	-102(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1394:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1395:
	addq	%rbx, %r14
.Ltmp1396:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1382 3                # gsm_encode.c:1382:3
	leaq	-96(%rbp), %rdi
	movl	$19, %esi
	movl	$2, %edx
.Ltmp1397:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1382 3                # gsm_encode.c:1382:3
.Ltmp1398:
	movswl	-96(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1399:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1400:
	addq	%r14, %rbx
.Ltmp1401:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1382 17 is_stmt 0     # gsm_encode.c:1382:17
	leaq	-90(%rbp), %rdi
	movl	$20, %esi
	movl	$2, %edx
.Ltmp1402:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1382 17               # gsm_encode.c:1382:17
.Ltmp1403:
	movswl	-90(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1404:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1405:
	addq	%rbx, %r14
.Ltmp1406:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1382 31 is_stmt 0     # gsm_encode.c:1382:31
	leaq	-84(%rbp), %rdi
	movl	$21, %esi
	movl	$2, %edx
.Ltmp1407:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1382 31               # gsm_encode.c:1382:31
.Ltmp1408:
	movswl	-84(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1409:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1410:
	addq	%r14, %rbx
.Ltmp1411:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1382 45 is_stmt 0     # gsm_encode.c:1382:45
	leaq	-78(%rbp), %rdi
	movl	$22, %esi
	movl	$2, %edx
.Ltmp1412:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1382 45               # gsm_encode.c:1382:45
.Ltmp1413:
	movswl	-78(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1414:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1415:
	addq	%rbx, %r14
.Ltmp1416:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1383 3                # gsm_encode.c:1383:3
	leaq	-72(%rbp), %rdi
	movl	$23, %esi
	movl	$2, %edx
.Ltmp1417:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1383 3                # gsm_encode.c:1383:3
.Ltmp1418:
	movswl	-72(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1419:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1420:
	addq	%r14, %rbx
.Ltmp1421:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1383 17 is_stmt 0     # gsm_encode.c:1383:17
	leaq	-66(%rbp), %rdi
	movl	$24, %esi
	movl	$2, %edx
.Ltmp1422:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1383 17               # gsm_encode.c:1383:17
.Ltmp1423:
	movswl	-66(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1424:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1425:
	addq	%rbx, %r14
.Ltmp1426:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1383 31 is_stmt 0     # gsm_encode.c:1383:31
	leaq	-60(%rbp), %rdi
	movl	$25, %esi
	movl	$2, %edx
.Ltmp1427:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1383 31               # gsm_encode.c:1383:31
.Ltmp1428:
	movswl	-60(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1429:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1430:
	addq	%r14, %rbx
.Ltmp1431:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1383 45 is_stmt 0     # gsm_encode.c:1383:45
	leaq	-54(%rbp), %rdi
	movl	$26, %esi
	movl	$2, %edx
.Ltmp1432:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1383 45               # gsm_encode.c:1383:45
.Ltmp1433:
	movswl	-54(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r15
.Ltmp1434:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R15
	imulq	%r15, %r15
.Ltmp1435:
	addq	%rbx, %r15
.Ltmp1436:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R15
	.loc	1 1384 3                # gsm_encode.c:1384:3
	addq	%r15, %r15
.Ltmp1437:
	#DEBUG_VALUE: RPE_grid_selection:EM <- R15
	.loc	1 1687 3                # gsm_encode.c:1687:3
	movl	$5, 168(%rsp)
	movl	$26, 160(%rsp)
	movl	$6, 152(%rsp)
	movl	$25, 144(%rsp)
	movl	$7, 136(%rsp)
	movl	$24, 128(%rsp)
	movl	$8, 120(%rsp)
	movl	$23, 112(%rsp)
	movl	$9, 104(%rsp)
	movl	$22, 96(%rsp)
	movl	$10, 88(%rsp)
	movl	$21, 80(%rsp)
	movl	$11, 72(%rsp)
	movl	$20, 64(%rsp)
	movl	$12, 56(%rsp)
	movl	$19, 48(%rsp)
	movl	$13, 40(%rsp)
	movl	$18, 32(%rsp)
	movl	$14, 24(%rsp)
	movl	$17, 16(%rsp)
	movl	$15, 8(%rsp)
	movl	$16, (%rsp)
	movl	$45, %edi
	movl	$13, %esi
	movl	$14, %edx
	movl	$17, %ecx
	movl	$15, %r8d
	movl	$16, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movl	$5, 168(%rsp)
	movl	$13, 160(%rsp)
	movl	$6, 152(%rsp)
	movl	$12, 144(%rsp)
	movl	$7, 136(%rsp)
	movl	$11, 128(%rsp)
	movl	$8, 120(%rsp)
	movl	$10, 112(%rsp)
	movl	$9, 104(%rsp)
	movl	$9, 96(%rsp)
	movl	$10, 88(%rsp)
	movl	$8, 80(%rsp)
	movl	$11, 72(%rsp)
	movl	$7, 64(%rsp)
	movl	$12, 56(%rsp)
	movl	$6, 48(%rsp)
	movl	$13, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$14, 24(%rsp)
	movl	$4, 16(%rsp)
	movl	$15, 8(%rsp)
	movl	$3, (%rsp)
	movl	$46, %r14d
	movl	$46, %edi
	movl	$13, %esi
	movl	$1, %edx
	movl	$17, %ecx
	movl	$2, %r8d
	movl	$16, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movl	$6, 376(%rsp)
	movl	$26, 368(%rsp)
	movl	$7, 360(%rsp)
	movl	$25, 352(%rsp)
	movl	$8, 344(%rsp)
	movl	$24, 336(%rsp)
	movl	$9, 328(%rsp)
	movl	$23, 320(%rsp)
	movl	$10, 312(%rsp)
	movl	$22, 304(%rsp)
	movl	$11, 296(%rsp)
	movl	$21, 288(%rsp)
	movl	$12, 280(%rsp)
	movl	$20, 272(%rsp)
	movl	$13, 264(%rsp)
	movl	$19, 256(%rsp)
	movl	$14, 248(%rsp)
	movl	$18, 240(%rsp)
	movl	$15, 232(%rsp)
	movl	$17, 224(%rsp)
	movl	$16, 216(%rsp)
	movl	$16, 208(%rsp)
	movl	$17, 200(%rsp)
	movl	$15, 192(%rsp)
	movl	$18, 184(%rsp)
	movl	$14, 176(%rsp)
	movl	$6, 168(%rsp)
	movl	$13, 160(%rsp)
	movl	$7, 152(%rsp)
	movl	$12, 144(%rsp)
	movl	$8, 136(%rsp)
	movl	$11, 128(%rsp)
	movl	$9, 120(%rsp)
	movl	$10, 112(%rsp)
	movl	$10, 104(%rsp)
	movl	$9, 96(%rsp)
	movl	$11, 88(%rsp)
	movl	$8, 80(%rsp)
	movl	$12, 72(%rsp)
	movl	$7, 64(%rsp)
	movl	$13, 56(%rsp)
	movl	$6, 48(%rsp)
	movl	$14, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$15, 24(%rsp)
	movl	$4, 16(%rsp)
	movl	$16, 8(%rsp)
	movl	$3, (%rsp)
	movl	$47, %edi
	movl	$26, %esi
	movl	$1, %edx
	movl	$18, %ecx
	movl	$2, %r8d
	movl	$17, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	.loc	1 1385 7                # gsm_encode.c:1385:7
.Ltmp1438:
	cmpq	%r13, %r15
	jle	.LBB8_6
.Ltmp1439:
# BB#5:                                 # %if.then.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$47, %edi
.Ltmp1440:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KPushCDep
.Ltmp1441:
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 1
	callq	_KPopCDep
	movw	$1, %ax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	movl	$45, %r14d
	movq	%r15, %r13
.LBB8_6:                                # %if.end.i
.Ltmp1442:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 0
	#DEBUG_VALUE: RPE_grid_selection:L_common_0_3 <- R12
	movl	$48, %edi
.Ltmp1443:
	xorl	%esi, %esi
	movl	$47, %edx
	callq	_KPhi1To1
	movl	$44, %edi
	movl	$47, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$106, %edi
	callq	_KWork
.Ltmp1444:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- 0
	.loc	1 1393 3                # gsm_encode.c:1393:3
	leaq	-124(%rbp), %rdi
	movl	$27, %esi
	movl	$2, %edx
.Ltmp1445:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1393 3                # gsm_encode.c:1393:3
.Ltmp1446:
	movswl	-124(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1447:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1448:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1394 3                # gsm_encode.c:1394:3
	leaq	-118(%rbp), %rdi
	movl	$28, %esi
	movl	$2, %edx
.Ltmp1449:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1394 3                # gsm_encode.c:1394:3
.Ltmp1450:
	movswl	-118(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1451:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1452:
	addq	%r14, %rbx
.Ltmp1453:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1394 17 is_stmt 0     # gsm_encode.c:1394:17
	leaq	-112(%rbp), %rdi
	movl	$29, %esi
	movl	$2, %edx
.Ltmp1454:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1394 17               # gsm_encode.c:1394:17
.Ltmp1455:
	movswl	-112(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1456:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1457:
	addq	%rbx, %r14
.Ltmp1458:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1394 31 is_stmt 0     # gsm_encode.c:1394:31
	leaq	-106(%rbp), %rdi
	movl	$30, %esi
	movl	$2, %edx
.Ltmp1459:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1394 31               # gsm_encode.c:1394:31
.Ltmp1460:
	movswl	-106(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1461:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1462:
	addq	%r14, %rbx
.Ltmp1463:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1394 45 is_stmt 0     # gsm_encode.c:1394:45
	leaq	-100(%rbp), %rdi
	movl	$31, %esi
	movl	$2, %edx
.Ltmp1464:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1394 45               # gsm_encode.c:1394:45
.Ltmp1465:
	movswl	-100(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1466:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1467:
	addq	%rbx, %r14
.Ltmp1468:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1395 3                # gsm_encode.c:1395:3
	leaq	-94(%rbp), %rdi
	movl	$32, %esi
	movl	$2, %edx
.Ltmp1469:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1395 3                # gsm_encode.c:1395:3
.Ltmp1470:
	movswl	-94(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1471:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1472:
	addq	%r14, %rbx
.Ltmp1473:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1395 17 is_stmt 0     # gsm_encode.c:1395:17
	leaq	-88(%rbp), %rdi
	movl	$33, %esi
	movl	$2, %edx
.Ltmp1474:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1395 17               # gsm_encode.c:1395:17
.Ltmp1475:
	movswl	-88(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1476:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1477:
	addq	%rbx, %r14
.Ltmp1478:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1395 31 is_stmt 0     # gsm_encode.c:1395:31
	leaq	-82(%rbp), %rdi
	movl	$34, %esi
	movl	$2, %edx
.Ltmp1479:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1395 31               # gsm_encode.c:1395:31
.Ltmp1480:
	movswl	-82(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1481:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1482:
	addq	%r14, %rbx
.Ltmp1483:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1395 45 is_stmt 0     # gsm_encode.c:1395:45
	leaq	-76(%rbp), %rdi
	movl	$35, %esi
	movl	$2, %edx
.Ltmp1484:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1395 45               # gsm_encode.c:1395:45
.Ltmp1485:
	movswl	-76(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1486:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1487:
	addq	%rbx, %r14
.Ltmp1488:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1396 3                # gsm_encode.c:1396:3
	leaq	-70(%rbp), %rdi
	movl	$36, %esi
	movl	$2, %edx
.Ltmp1489:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1396 3                # gsm_encode.c:1396:3
.Ltmp1490:
	movswl	-70(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1491:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1492:
	addq	%r14, %rbx
.Ltmp1493:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1396 17 is_stmt 0     # gsm_encode.c:1396:17
	leaq	-64(%rbp), %rdi
	movl	$37, %esi
	movl	$2, %edx
.Ltmp1494:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1396 17               # gsm_encode.c:1396:17
.Ltmp1495:
	movswl	-64(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1496:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1497:
	addq	%rbx, %r14
.Ltmp1498:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	.loc	1 1396 31 is_stmt 0     # gsm_encode.c:1396:31
	leaq	-58(%rbp), %rdi
	movl	$38, %esi
	movl	$2, %edx
.Ltmp1499:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1396 31               # gsm_encode.c:1396:31
.Ltmp1500:
	movswl	-58(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1501:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1502:
	addq	%r14, %rbx
.Ltmp1503:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1396 45 is_stmt 0     # gsm_encode.c:1396:45
	leaq	-52(%rbp), %rdi
	movl	$39, %esi
	movl	$2, %edx
.Ltmp1504:
	.loc	1 1687 3 is_stmt 1      # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1396 45               # gsm_encode.c:1396:45
.Ltmp1505:
	movswl	-52(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %r14
.Ltmp1506:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- R14
	imulq	%r14, %r14
.Ltmp1507:
	addq	%rbx, %r14
.Ltmp1508:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- R14
	movl	$44, %ebx
	.loc	1 1397 3                # gsm_encode.c:1397:3
	addq	%r14, %r14
.Ltmp1509:
	#DEBUG_VALUE: RPE_grid_selection:EM <- R14
	movl	$48, %edi
	movl	$48, %esi
	xorl	%edx, %edx
.Ltmp1510:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KTimestamp1
	movl	$6, 184(%rsp)
	movl	$39, 176(%rsp)
	movl	$7, 168(%rsp)
	movl	$38, 160(%rsp)
	movl	$8, 152(%rsp)
	movl	$37, 144(%rsp)
	movl	$9, 136(%rsp)
	movl	$36, 128(%rsp)
	movl	$10, 120(%rsp)
	movl	$35, 112(%rsp)
	movl	$11, 104(%rsp)
	movl	$34, 96(%rsp)
	movl	$12, 88(%rsp)
	movl	$33, 80(%rsp)
	movl	$13, 72(%rsp)
	movl	$32, 64(%rsp)
	movl	$14, 56(%rsp)
	movl	$31, 48(%rsp)
	movl	$15, 40(%rsp)
	movl	$30, 32(%rsp)
	movl	$16, 24(%rsp)
	movl	$29, 16(%rsp)
	movl	$17, 8(%rsp)
	movl	$28, (%rsp)
	movl	$51, %edi
	movl	$14, %esi
	movl	$44, %edx
	movl	$1, %ecx
	movl	$27, %r8d
	movl	$18, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movl	$44, %edi
	movl	$44, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, 168(%rsp)
	movl	$39, 160(%rsp)
	movl	$6, 152(%rsp)
	movl	$38, 144(%rsp)
	movl	$7, 136(%rsp)
	movl	$37, 128(%rsp)
	movl	$8, 120(%rsp)
	movl	$36, 112(%rsp)
	movl	$9, 104(%rsp)
	movl	$35, 96(%rsp)
	movl	$10, 88(%rsp)
	movl	$34, 80(%rsp)
	movl	$11, 72(%rsp)
	movl	$33, 64(%rsp)
	movl	$12, 56(%rsp)
	movl	$32, 48(%rsp)
	movl	$13, 40(%rsp)
	movl	$31, 32(%rsp)
	movl	$14, 24(%rsp)
	movl	$30, 16(%rsp)
	movl	$15, 8(%rsp)
	movl	$29, (%rsp)
	movl	$50, %edi
	movl	$13, %esi
	movl	$27, %edx
	movl	$17, %ecx
	movl	$28, %r8d
	movl	$16, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movl	$48, %esi
	.loc	1 1398 7                # gsm_encode.c:1398:7
.Ltmp1511:
	cmpq	%r13, %r14
	jle	.LBB8_8
.Ltmp1512:
# BB#7:                                 # %if.then235.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$51, %edi
.Ltmp1513:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KPushCDep
.Ltmp1514:
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 2
	callq	_KPopCDep
	movw	$2, %ax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	movl	$50, %ebx
	movq	%r14, %r13
	xorl	%esi, %esi
.LBB8_8:                                # %if.end236.i
.Ltmp1515:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 0
	#DEBUG_VALUE: RPE_grid_selection:L_common_0_3 <- R12
	movl	$52, %r15d
	movl	$52, %edi
.Ltmp1516:
	movl	$51, %edx
	callq	_KPhi1To1
	movl	$49, %edi
	movl	$51, %edx
	movl	%ebx, %esi
	callq	_KPhi1To1
	movl	$10, %edi
	callq	_KWork
	.loc	1 1406 3                # gsm_encode.c:1406:3
.Ltmp1517:
	leaq	-50(%rbp), %rdi
	movl	$40, %esi
	movl	$2, %edx
.Ltmp1518:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KLoad0
	.loc	1 1406 3                # gsm_encode.c:1406:3
.Ltmp1519:
	movswl	-50(%rbp), %eax
	sarl	$2, %eax
	movslq	%eax, %rbx
.Ltmp1520:
	#DEBUG_VALUE: RPE_grid_selection:L_temp <- RBX
	imulq	%rbx, %rbx
.Ltmp1521:
	addq	%r12, %rbx
.Ltmp1522:
	#DEBUG_VALUE: RPE_grid_selection:L_result <- RBX
	.loc	1 1407 3                # gsm_encode.c:1407:3
	addq	%rbx, %rbx
.Ltmp1523:
	#DEBUG_VALUE: RPE_grid_selection:EM <- RBX
	movl	$52, %edi
	movl	$52, %esi
	xorl	%edx, %edx
.Ltmp1524:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KTimestamp1
	movl	$6, 184(%rsp)
	movl	$40, 176(%rsp)
	movl	$1, 168(%rsp)
	movl	$49, 160(%rsp)
	movl	$7, 152(%rsp)
	movl	$12, 144(%rsp)
	movl	$8, 136(%rsp)
	movl	$11, 128(%rsp)
	movl	$9, 120(%rsp)
	movl	$10, 112(%rsp)
	movl	$10, 104(%rsp)
	movl	$9, 96(%rsp)
	movl	$11, 88(%rsp)
	movl	$8, 80(%rsp)
	movl	$12, 72(%rsp)
	movl	$7, 64(%rsp)
	movl	$13, 56(%rsp)
	movl	$6, 48(%rsp)
	movl	$14, 40(%rsp)
	movl	$5, 32(%rsp)
	movl	$15, 24(%rsp)
	movl	$4, 16(%rsp)
	movl	$16, 8(%rsp)
	movl	$3, (%rsp)
	movl	$53, %edi
	movl	$14, %esi
	movl	$1, %edx
	movl	$18, %ecx
	movl	$2, %r8d
	movl	$17, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movabsq	$-2565712442593909839, %r14 # imm = 0xDC64C2208F63E3B1
	.loc	1 1408 7                # gsm_encode.c:1408:7
.Ltmp1525:
	cmpq	%r13, %rbx
	jle	.LBB8_10
.Ltmp1526:
# BB#9:                                 # %if.then246.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$53, %edi
.Ltmp1527:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KPushCDep
.Ltmp1528:
	#DEBUG_VALUE: RPE_grid_selection:Mc <- 3
	callq	_KPopCDep
	movw	$3, %ax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	xorl	%r15d, %r15d
.LBB8_10:                               # %if.end247.i
.Ltmp1529:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$43, %edi
.Ltmp1530:
	movl	$53, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
.Ltmp1531:
	#DEBUG_VALUE: RPE_grid_selection:i <- 0
	xorl	%r12d, %r12d
	movl	$43, %edi
	movl	$43, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$54, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$55, %edi
	movl	$54, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movswq	%ax, %rax
	leaq	-128(%rbp,%rax,2), %rbx
	movabsq	$6944230152118215656, %r15 # imm = 0x605EDC87FF9023E8
	.align	16, 0x90
.LBB8_11:                               # %for.body.i17
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1532:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: RPE_grid_selection:i <- 0
	movl	$2, %esi
	movq	%r15, %rdi
.Ltmp1533:
	callq	_KEnterRegion
	movl	$55, %edi
	callq	_KPushCDep
	movl	$8, %edi
	callq	_KWork
	movl	$41, %esi
	movl	$42, %edx
	movl	$2, %ecx
	movq	%rbx, %rdi
	callq	_KLoad1
	.loc	1 1419 38               # gsm_encode.c:1419:38
.Ltmp1534:
	movw	(%rbx), %r13w
	movl	$41, %edi
	movl	$41, %esi
	xorl	%edx, %edx
.Ltmp1535:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KTimestamp1
	leaq	-160(%rbp,%r12), %rsi
	movl	$41, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1419 30               # gsm_encode.c:1419:30
.Ltmp1536:
	movw	%r13w, -160(%rbp,%r12)
.Ltmp1537:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$55, %edi
	movl	$54, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 1419 3                # gsm_encode.c:1419:3
.Ltmp1538:
	addq	$2, %r12
	addq	$6, %rbx
	cmpq	$26, %r12
	jne	.LBB8_11
.Ltmp1539:
# BB#12:                                # %RPE_grid_selection.exit
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: RPE_grid_selection:i <- 0
	movabsq	$-3969293726441912827, %r15 # imm = 0xC8EA3C62D23E4605
	movabsq	$924160285743633519, %r12 # imm = 0xCD346E22B45D46F
	movl	$1, %esi
	.loc	1 1687 3                # gsm_encode.c:1687:3
	movq	%r14, %rdi
.Ltmp1540:
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$43, %edi
	movl	$2, %edx
	movq	-264(%rbp), %rbx        # 8-byte Reload
.Ltmp1541:
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- RBX
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1420 3                # gsm_encode.c:1420:3
.Ltmp1542:
	movq	-208(%rbp), %rax        # 8-byte Reload
	movw	%ax, (%rbx)
.Ltmp1543:
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	xorl	%r13d, %r13d
	xorl	%esi, %esi
	movabsq	$-6521413979635953763, %rdi # imm = 0xA57F488996884F9D
.Ltmp1544:
	.loc	1 1687 3                # gsm_encode.c:1687:3
	callq	_KExitRegion
	movabsq	$7230407570751965714, %rdi # imm = 0x6457916093F74A12
	xorl	%esi, %esi
	callq	_KPrepCall
.Ltmp1545:
	#DEBUG_VALUE: RPE_grid_selection:Mc_out <- [RBP+-264]
	xorl	%esi, %esi
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$43, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1546:
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	movl	$25, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_KEnterRegion
	movabsq	$-696277764424124780, %r14 # imm = 0xF656530FF27F3694
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%eax, %eax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB8_13
	.align	16, 0x90
.LBB8_20:                               # %for.inc.i
                                        #   in Loop: Header=BB8_13 Depth=1
.Ltmp1547:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$28, %r12d
	movl	$28, %edi
.Ltmp1548:
	callq	_KPushCDep
	movl	$27, %r15d
	movl	$27, %edi
	movl	$28, %edx
	movl	$35, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$27, %edi
	movl	$27, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	addq	$2, %r13
.LBB8_13:                               # %for.cond.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1549:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	movl	$26, %edi
.Ltmp1550:
	movl	%r15d, %esi
	movl	%r12d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$28, %edi
	movl	$25, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$26, %edi
	movl	$28, %esi
	callq	_KPhiAddCond
	movl	$26, %edi
	movl	$26, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 1478 5                # gsm_encode.c:1478:5
.Ltmp1551:
	cmpq	$26, %r13
	je	.LBB8_21
.Ltmp1552:
# BB#14:                                # %for.body.i21
                                        #   in Loop: Header=BB8_13 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	movl	$2, %esi
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%r14, %rdi
.Ltmp1553:
	callq	_KEnterRegion
	movl	$28, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	leaq	-160(%rbp,%r13), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1479 14               # gsm_encode.c:1479:14
.Ltmp1554:
	movw	-160(%rbp,%r13), %r15w
.Ltmp1555:
	#DEBUG_VALUE: APCM_quantization:temp <- R15W
	movl	$31, %ebx
	xorl	%r12d, %r12d
	movl	$31, %edi
	movl	$28, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%r8d, %r8d
.Ltmp1556:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp2
	movl	$32, %edi
	movl	$28, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 1480 14               # gsm_encode.c:1480:14
.Ltmp1557:
	testw	%r15w, %r15w
	jns	.LBB8_18
.Ltmp1558:
# BB#15:                                # %cond.true.i
                                        #   in Loop: Header=BB8_13 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:temp <- R15W
	movl	$32, %edi
.Ltmp1559:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1480 14 discriminator 1 # gsm_encode.c:1480:14
.Ltmp1560:
	movzwl	%r15w, %ebx
	movl	$33, %r12d
	movl	$33, %edi
	movl	$28, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
.Ltmp1561:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 1480 14 discriminator 1 # gsm_encode.c:1480:14
.Ltmp1562:
	cmpl	$32768, %ebx            # imm = 0x8000
	jne	.LBB8_17
.Ltmp1563:
# BB#16:                                #   in Loop: Header=BB8_13 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	xorl	%ebx, %ebx
	movw	$32767, %r15w           # imm = 0x7FFF
	jmp	.LBB8_18
.Ltmp1564:
.LBB8_17:                               # %cond.false.i22
                                        #   in Loop: Header=BB8_13 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:temp <- R15W
	movl	$33, %r12d
	movl	$33, %edi
.Ltmp1565:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1480 14 discriminator 4 # gsm_encode.c:1480:14
.Ltmp1566:
	negl	%r15d
.Ltmp1567:
	movl	$30, %ebx
	movl	$30, %edi
	movl	$28, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
.Ltmp1568:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp2
	callq	_KPopCDep
	.align	16, 0x90
.LBB8_18:                               # %cond.end10.i
                                        #   in Loop: Header=BB8_13 Depth=1
.Ltmp1569:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:temp <- R15W
	movl	$28, %edi
.Ltmp1570:
	callq	_KPushCDep
	movl	$29, %edi
	movl	$28, %edx
	movl	$32, %ecx
	movl	%ebx, %esi
	movl	%r12d, %r8d
	callq	_KPhi3To1
	movl	$1, %edi
	callq	_KWork
	movl	$1, (%rsp)
	movl	$26, %ebx
	movl	$35, %edi
	movl	$26, %esi
	movl	$1, %edx
	movl	$28, %ecx
	movl	$1, %r8d
	movl	$29, %r9d
	callq	_KTimestamp3
	movl	$34, %edi
	movl	$28, %esi
	xorl	%edx, %edx
	movl	$29, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 1481 11               # gsm_encode.c:1481:11
.Ltmp1571:
	movq	-208(%rbp), %rax        # 8-byte Reload
	cwtl
	movswl	%r15w, %ecx
	cmpl	%eax, %ecx
	jle	.LBB8_20
.Ltmp1572:
# BB#19:                                # %if.then.i23
                                        #   in Loop: Header=BB8_13 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	$35, %edi
.Ltmp1573:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	callq	_KPopCDep
	movl	$34, %ebx
	movw	%r15w, %ax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB8_20
.LBB8_21:                               # %for.cond.pre_exit.for.end.i
.Ltmp1574:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	movl	$1, %esi
	movabsq	$924160285743633519, %rdi # imm = 0xCD346E22B45D46F
.Ltmp1575:
	callq	_KExitRegion
	leaq	-42(%rbp), %rdi
	movl	$2, %esi
	callq	_KStoreConst
	movl	$2, %edi
	callq	_KWork
.Ltmp1576:
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	.loc	1 1487 3                # gsm_encode.c:1487:3
	movw	$0, -42(%rbp)
	.loc	1 1488 11               # gsm_encode.c:1488:11
	movq	-208(%rbp), %rax        # 8-byte Reload
	movswl	%ax, %r15d
	movl	%r15d, -216(%rbp)       # 4-byte Spill
	shrl	$9, %r15d
.Ltmp1577:
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$7, %r13d
	movl	$7, %edi
.Ltmp1578:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KInduction
	movl	$37, %r12d
	movl	$37, %edi
	movl	$26, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$1404770259660246238, %rdi # imm = 0x137EBF1BBE150CDE
	callq	_KEnterRegion
	xorl	%esi, %esi
	movabsq	$-6865699641585243899, %r14 # imm = 0xA0B8228D50C8E905
	xorl	%ebx, %ebx
	movl	$0, -208(%rbp)          # 4-byte Folded Spill
	jmp	.LBB8_22
	.align	16, 0x90
.LBB8_25:                               # %for.inc34.i
                                        #   in Loop: Header=BB8_22 Depth=1
.Ltmp1579:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	.loc	1 1495 14               # gsm_encode.c:1495:14
	sarl	$17, %r15d
	movl	$6, %ebx
	movl	$6, %edi
.Ltmp1580:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	movl	$38, %r12d
	movl	$36, %esi
.LBB8_22:                               # %for.cond19.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1581:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$4, %edi
.Ltmp1582:
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$5, %edi
	movl	%r12d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$6, %edi
	movl	$7, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$4, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	movl	$4, %edi
	movl	$6, %esi
	callq	_KPhiAddCond
	.loc	1 1492 5                # gsm_encode.c:1492:5
.Ltmp1583:
	decl	%r13d
	je	.LBB8_26
.Ltmp1584:
# BB#23:                                # %for.body22.i
                                        #   in Loop: Header=BB8_22 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$2, %esi
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%r14, %rdi
.Ltmp1585:
	callq	_KEnterRegion
	movl	$6, %edi
	callq	_KPushCDep
	movl	$4, %edi
	callq	_KWork
	.loc	1 1494 17               # gsm_encode.c:1494:17
.Ltmp1586:
	shll	$16, %r15d
	cmpl	$65536, %r15d           # imm = 0x10000
	setl	%al
	movzbl	%al, %ebx
.Ltmp1587:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$2, (%rsp)
	movl	$36, %edi
	movl	$4, %esi
	movl	$1, %edx
	movl	$5, %ecx
	movl	$2, %r8d
	movl	$6, %r9d
	callq	_KTimestamp3
	movl	$38, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$6, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$3, (%rsp)
	movl	$42, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$5, %ecx
	movl	$3, %r8d
	movl	$6, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.loc	1 1497 11               # gsm_encode.c:1497:11
.Ltmp1588:
	orl	%ebx, -208(%rbp)        # 4-byte Folded Spill
	jne	.LBB8_25
.Ltmp1589:
# BB#24:                                # %if.then31.i
                                        #   in Loop: Header=BB8_22 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$42, %edi
.Ltmp1590:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
.Ltmp1591:
	#DEBUG_VALUE: APCM_quantization:exp <- [RBP+-224]
	movl	$2, %esi
	movl	$2, %edx
	leaq	-42(%rbp), %r12
.Ltmp1592:
	#DEBUG_VALUE: APCM_quantization:exp <- [R12+0]
	movq	%r12, %rdi
	callq	_KLoad0
	movl	$6, %edi
	callq	_KWork
	.loc	1 1497 23 discriminator 1 # gsm_encode.c:1497:23
.Ltmp1593:
	movw	-42(%rbp), %bx
	incw	%bx
.Ltmp1594:
	#DEBUG_VALUE: APCM_quantization:exp <- BX
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$1, 16(%rsp)
	movl	$2, 8(%rsp)
	movl	$4, (%rsp)
	movl	$3, %edi
	movl	$4, %esi
	movl	$3, %edx
	movl	$5, %ecx
	movl	$4, %r8d
	movl	$6, %r9d
	callq	_KTimestamp4
	movl	$3, %edi
	movl	$2, %edx
	movq	%r12, %rsi
.Ltmp1595:
	#DEBUG_VALUE: APCM_quantization:exp <- [RBP+-224]
	callq	_KStore
	.loc	1 1497 23 discriminator 1 # gsm_encode.c:1497:23
.Ltmp1596:
	movw	%bx, -42(%rbp)
.Ltmp1597:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPopCDep
	jmp	.LBB8_25
.LBB8_26:                               # %for.cond19.pre_exit.for.end36.i
.Ltmp1598:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$1, %esi
	movabsq	$1404770259660246238, %rdi # imm = 0x137EBF1BBE150CDE
.Ltmp1599:
	callq	_KExitRegion
	movl	$13, %edi
	callq	_KWork
	leaq	-42(%rbp), %rbx
.Ltmp1600:
	#DEBUG_VALUE: APCM_quantization:exp <- [RBX+0]
	movl	$8, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 1500 10               # gsm_encode.c:1500:10
.Ltmp1601:
	movzwl	-42(%rbp), %ecx
	addl	$5, %ecx
	.loc	1 1503 11               # gsm_encode.c:1503:11
                                        # kill: CL<def> CL<kill> ECX<kill>
	movl	-216(%rbp), %r12d       # 4-byte Reload
	sarl	%cl, %r12d
	movl	$9, %esi
	movl	$2, %edx
.Ltmp1602:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 1503 11               # gsm_encode.c:1503:11
.Ltmp1603:
	movswl	-42(%rbp), %ebx
.Ltmp1604:
	addl	%r12d, %ebx
.Ltmp1605:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$3, (%rsp)
	movl	$40, %edi
	movl	$26, %esi
	movl	$4, %edx
	movl	$8, %ecx
	movl	$5, %r8d
	movl	$9, %r9d
	callq	_KTimestamp3
	xorl	%r14d, %r14d
	.loc	1 1503 11               # gsm_encode.c:1503:11
.Ltmp1606:
	cmpl	$-4096, %ebx            # imm = 0xFFFFFFFFFFFFF000
	movw	$-32768, %r13w          # imm = 0xFFFFFFFFFFFF8000
	movl	$0, %ebx
	movl	$0, %r15d
	jl	.LBB8_29
.Ltmp1607:
# BB#27:                                # %cond.false47.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$40, %edi
.Ltmp1608:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	movl	$8, %edi
	callq	_KWork
	leaq	-42(%rbp), %rdi
.Ltmp1609:
	#DEBUG_VALUE: APCM_quantization:exp <- [RDI+0]
	movl	$10, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1503 11 discriminator 2 # gsm_encode.c:1503:11
.Ltmp1610:
	movswl	-42(%rbp), %ebx
	addl	%r12d, %ebx
	shll	$3, %ebx
.Ltmp1611:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$3, 16(%rsp)
	movl	$10, 8(%rsp)
	movl	$7, (%rsp)
	movl	$41, %r15d
	movl	$41, %edi
.Ltmp1612:
	movl	$26, %esi
	movl	$8, %edx
	movl	$8, %ecx
	movl	$9, %r8d
	movl	$9, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 1503 11 discriminator 2 # gsm_encode.c:1503:11
.Ltmp1613:
	cmpl	$32767, %ebx            # imm = 0x7FFF
	movw	$32767, %r13w           # imm = 0x7FFF
	movl	$0, %ebx
	jg	.LBB8_29
.Ltmp1614:
# BB#28:                                # %cond.false57.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$41, %r15d
	movl	$41, %edi
.Ltmp1615:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPushCDep
	movl	$7, %edi
	callq	_KWork
	leaq	-42(%rbp), %rdi
.Ltmp1616:
	#DEBUG_VALUE: APCM_quantization:exp <- [RDI+0]
	movl	$11, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1503 11 discriminator 5 # gsm_encode.c:1503:11
.Ltmp1617:
	movzwl	-42(%rbp), %r13d
	addl	%r12d, %r13d
	shll	$3, %r13d
.Ltmp1618:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$2, 32(%rsp)
	movl	$11, 24(%rsp)
	movl	$6, 16(%rsp)
	movl	$10, 8(%rsp)
	movl	$10, (%rsp)
	movl	$39, %ebx
	movl	$39, %edi
.Ltmp1619:
	movl	$26, %esi
	movl	$11, %edx
	movl	$8, %ecx
	movl	$12, %r8d
	movl	$9, %r9d
	callq	_KTimestamp5
	callq	_KPopCDep
.LBB8_29:                               # %cond.end66.i
.Ltmp1620:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	movl	$13, %edi
.Ltmp1621:
	movl	$40, %edx
	movl	%ebx, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$13, %edi
	callq	_KWork
	movl	$12, %edi
	movl	$13, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movabsq	$2793769530318020858, %rdi # imm = 0x26C57695F6EA60FA
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$12, %edi
	callq	_KEnqArg
	xorl	%esi, %esi
	movabsq	$57957301473064839, %rdi # imm = 0xCDE7DBCE713787
	.loc	1 1509 3                # gsm_encode.c:1509:3
.Ltmp1622:
	callq	_KEnterRegion
	movl	$16, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KWork
	movl	$1, %edi
	callq	_KDeqArg
.Ltmp1623:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	movl	$6, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 1436 7                # gsm_encode.c:1436:7
.Ltmp1624:
	movswl	%r13w, %ebx
	cmpl	$16, %ebx
.Ltmp1625:
	#DEBUG_VALUE: APCM_quantization:xmaxc <- R13W
	movl	$0, %r12d
	jl	.LBB8_31
.Ltmp1626:
# BB#30:                                # %if.then.i.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- R13W
	movl	$6, %edi
.Ltmp1627:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
	.loc	1 1436 25 discriminator 1 # gsm_encode.c:1436:25
.Ltmp1628:
	shrl	$3, %ebx
	addl	$65535, %ebx            # imm = 0xFFFF
.Ltmp1629:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- BX
	movl	$5, %r14d
	movl	$5, %edi
	movl	$1, %esi
	movl	$3, %edx
.Ltmp1630:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KTimestamp1
	callq	_KPopCDep
	movw	%bx, %r12w
.Ltmp1631:
.LBB8_31:                               # %if.end.i.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- R13W
	movq	%r12, -208(%rbp)        # 8-byte Spill
	movl	$4, %r15d
	movl	$4, %edi
.Ltmp1632:
	movl	$6, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	callq	_KWork
	.loc	1 1437 19               # gsm_encode.c:1437:19
.Ltmp1633:
	leal	(,%r12,8), %ebx
	.loc	1 1439 7                # gsm_encode.c:1439:7
.Ltmp1634:
	movzwl	%bx, %eax
	movl	%eax, -216(%rbp)        # 4-byte Spill
	movzwl	%r13w, %r12d
	movl	$4, %edi
	movl	$4, %esi
	xorl	%edx, %edx
.Ltmp1635:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KTimestamp1
	movl	$9, %edi
	movl	$4, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	movl	%r13d, %r14d
.Ltmp1636:
	#DEBUG_VALUE: APCM_quantization:xmaxc <- R14W
	movl	$14, %r13d
	movl	$14, %edi
	movl	$4, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$9, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	.loc	1 1439 7                # gsm_encode.c:1439:7
.Ltmp1637:
	cmpl	-216(%rbp), %r12d       # 4-byte Folded Reload
	jne	.LBB8_33
.Ltmp1638:
# BB#32:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	movl	%r14d, -216(%rbp)       # 4-byte Spill
	movw	$7, %r12w
	movw	$-4, %r14w
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	jmp	.LBB8_37
.Ltmp1639:
.LBB8_33:                               # %while.cond.preheader1.i.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- R14W
	movabsq	$787254271714111845, %rdi # imm = 0xAECE396CD6DB165
.Ltmp1640:
	.loc	1 1437 10               # gsm_encode.c:1437:10
	movl	%r14d, %r12d
	movl	%r14d, -216(%rbp)       # 4-byte Spill
.Ltmp1641:
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	subl	%ebx, %r12d
	movl	$1, %esi
.Ltmp1642:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KEnterRegion
	xorl	%r14d, %r14d
	movabsq	$4753910282248230001, %rbx # imm = 0x41F94836E37B9471
	jmp	.LBB8_34
	.align	16, 0x90
.LBB8_35:                               # %while.body.i.i
                                        #   in Loop: Header=BB8_34 Depth=1
.Ltmp1643:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	movl	$2, %esi
	movq	%rbx, %rdi
.Ltmp1644:
	callq	_KEnterRegion
	movl	$10, %r14d
	movl	$10, %edi
	callq	_KPushCDep
	movl	$3, %edi
	callq	_KWork
	.loc	1 1446 9                # gsm_encode.c:1446:9
.Ltmp1645:
	leal	1(%r12,%r12), %r12d
.Ltmp1646:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:mant <- R12W
	.loc	1 1447 2                # gsm_encode.c:1447:2
	movq	-208(%rbp), %rax        # 8-byte Reload
	decl	%eax
.Ltmp1647:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- [RBP+-208]
	.loc	1 1509 3                # gsm_encode.c:1509:3
	movq	%rax, -208(%rbp)        # 8-byte Spill
	movl	$12, %r13d
	movl	$12, %edi
	movl	$10, %esi
	movl	$2, %edx
	movl	$13, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	movl	$8, %r15d
	movl	$8, %edi
	movl	$7, %esi
	movl	$1, %edx
	movl	$10, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%rbx, %rdi
	callq	_KExitRegion
.Ltmp1648:
.LBB8_34:                               # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	movl	$9, %edi
.Ltmp1649:
	callq	_KPushCDep
	movl	$11, %edi
	movl	$9, %edx
	movl	%r13d, %esi
	movl	%r14d, %ecx
	callq	_KPhi2To1
	movl	$7, %edi
	movl	$9, %edx
	movl	%r15d, %esi
	movl	%r14d, %ecx
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$13, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	movl	$11, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$10, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$11, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$11, %edi
	movl	$10, %esi
	callq	_KPhiAddCond
	movl	$7, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$7, %edi
	movl	$10, %esi
	callq	_KPhiAddCond
	callq	_KPopCDep
	.loc	1 1445 7                # gsm_encode.c:1445:7
.Ltmp1650:
	movswl	%r12w, %eax
	cmpl	$7, %eax
	jle	.LBB8_35
.Ltmp1651:
# BB#36:                                # %while.cond.pre_exit.while.end.i.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	movl	$1, %esi
	movabsq	$787254271714111845, %rdi # imm = 0xAECE396CD6DB165
.Ltmp1652:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1449 5                # gsm_encode.c:1449:5
.Ltmp1653:
	addl	$-8, %r12d
.Ltmp1654:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:mant <- R12W
	.loc	1 1509 3                # gsm_encode.c:1509:3
	movl	$3, 16(%rsp)
	movl	$1, 8(%rsp)
	movl	$1, (%rsp)
	movl	$15, %r15d
	movl	$15, %edi
	movl	$4, %esi
	movl	$4, %edx
	movl	$9, %ecx
	movl	$1, %r8d
	movl	$11, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movl	$7, %ebx
	movq	-208(%rbp), %r14        # 8-byte Reload
.Ltmp1655:
.LBB8_37:                               # %APCM_quantization_xmaxc_to_exp_mant.exit.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	movl	$3, %edi
.Ltmp1656:
	movl	$9, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	movl	$9, %edx
	movl	%ebx, %esi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	xorl	%r13d, %r13d
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	leaq	-42(%rbp), %rbx
.Ltmp1657:
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:exp_out <- [RBX+0]
	#DEBUG_VALUE: APCM_quantization:exp <- [RBX+0]
	movl	$2, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1452 3                # gsm_encode.c:1452:3
.Ltmp1658:
	movw	%r14w, -42(%rbp)
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
.Ltmp1659:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KTimestamp1
	leaq	-44(%rbp), %r15
.Ltmp1660:
	#DEBUG_VALUE: APCM_quantization:mant <- [R15+0]
	#DEBUG_VALUE: APCM_quantization_xmaxc_to_exp_mant:mant_out <- [R15+0]
	movl	$3, %edi
	movl	$2, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1453 3                # gsm_encode.c:1453:3
.Ltmp1661:
	movw	%r12w, -44(%rbp)
	xorl	%esi, %esi
	movabsq	$57957301473064839, %rdi # imm = 0xCDE7DBCE713787
.Ltmp1662:
	.loc	1 1509 3                # gsm_encode.c:1509:3
	callq	_KExitRegion
	movl	$14, %esi
	movl	$2, %edx
.Ltmp1663:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%rbx, %rdi
	callq	_KLoad0
	movw	$6, %r14w
	.loc	1 1526 11               # gsm_encode.c:1526:11
.Ltmp1664:
	subw	-42(%rbp), %r14w
.Ltmp1665:
	#DEBUG_VALUE: APCM_quantization:temp1 <- R14W
	movl	$15, %esi
	movl	$2, %edx
.Ltmp1666:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1527 11               # gsm_encode.c:1527:11
.Ltmp1667:
	movswq	-44(%rbp), %r15
.Ltmp1668:
	leaq	gsm_NRFAC(%r15,%r15), %rdi
	movl	$16, %esi
	movl	$17, %edx
	movl	$2, %ecx
.Ltmp1669:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KLoad1
	.loc	1 1533 14               # gsm_encode.c:1533:14
.Ltmp1670:
	movswq	gsm_NRFAC(%r15,%r15), %rbx
.Ltmp1671:
	movl	$22, %edi
	movl	$14, %esi
	movl	$1, %edx
.Ltmp1672:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$21, %edi
	callq	_KInduction
	movl	$1, %esi
	movabsq	$2566345010053717514, %rdi # imm = 0x239D7D3087591E0A
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$20, %edi
	movl	$21, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 1532 23               # gsm_encode.c:1532:23
.Ltmp1673:
	movswl	%r14w, %eax
	.loc	1 1533 14               # gsm_encode.c:1533:14
	movl	%eax, -208(%rbp)        # 4-byte Spill
	addq	%rbx, %rbx
	movq	%rbx, %r14
.Ltmp1674:
	movabsq	$8451705185823455767, %r15 # imm = 0x754A7D1663557A17
	movq	-256(%rbp), %r12        # 8-byte Reload
.Ltmp1675:
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- R12
	.align	16, 0x90
.LBB8_38:                               # %for.body77.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- R12
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	movl	$2, %esi
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%r15, %rdi
.Ltmp1676:
	callq	_KEnterRegion
	movl	$20, %edi
	callq	_KPushCDep
	movl	$11, %edi
	callq	_KWork
	leaq	-160(%rbp,%r13), %rdi
	movl	$18, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1532 14               # gsm_encode.c:1532:14
.Ltmp1677:
	movswl	-160(%rbp,%r13), %eax
	movl	-208(%rbp), %ecx        # 4-byte Reload
                                        # kill: CL<def> CL<kill> ECX<kill>
	shll	%cl, %eax
	.loc	1 1533 14               # gsm_encode.c:1533:14
	movswq	%ax, %rbx
	.loc	1 1534 14               # gsm_encode.c:1534:14
	imull	%r14d, %ebx
.Ltmp1678:
	#DEBUG_VALUE: APCM_quantization:xMc <- R12
	sarl	$28, %ebx
	.loc	1 1535 16               # gsm_encode.c:1535:16
	addl	$4, %ebx
.Ltmp1679:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movl	$6, 16(%rsp)
	movl	$18, 8(%rsp)
	movl	$6, (%rsp)
	movl	$19, %edi
	movl	$22, %esi
	movl	$6, %edx
	movl	$16, %ecx
	movl	$5, %r8d
	movl	$20, %r9d
	callq	_KTimestamp4
	leaq	(%r12,%r13), %rsi
	movl	$19, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1535 7                # gsm_encode.c:1535:7
.Ltmp1680:
	movw	%bx, (%r12,%r13)
.Ltmp1681:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$20, %edi
	movl	$21, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 1530 5                # gsm_encode.c:1530:5
.Ltmp1682:
	addq	$2, %r13
	cmpq	$26, %r13
	jne	.LBB8_38
.Ltmp1683:
# BB#39:                                # %APCM_quantization.exit
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- [RBP+-272]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- R12
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_quantization:xmax <- 0
	#DEBUG_VALUE: APCM_quantization:i <- 0
	#DEBUG_VALUE: APCM_quantization:exp <- 0
	#DEBUG_VALUE: APCM_quantization:itest <- 0
	#DEBUG_VALUE: APCM_quantization:xmaxc <- [RBP+-216]
	#DEBUG_VALUE: APCM_quantization:xMc <- R12
	#DEBUG_VALUE: APCM_quantization:xMc <- [RBP+-256]
	movabsq	$116340744155545957, %r12 # imm = 0x19D534A584BC165
	movl	$1, %esi
	movabsq	$2566345010053717514, %rdi # imm = 0x239D7D3087591E0A
.Ltmp1684:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KExitRegion
	movl	$11, %edi
	callq	_KWork
	leaq	-44(%rbp), %rdi
.Ltmp1685:
	#DEBUG_VALUE: APCM_quantization:mant <- [RDI+0]
	movl	$23, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1541 16               # gsm_encode.c:1541:16
.Ltmp1686:
	movw	-44(%rbp), %bx
	xorl	%r13d, %r13d
	movl	$23, %edi
.Ltmp1687:
	movl	$23, %esi
	xorl	%edx, %edx
.Ltmp1688:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp1
	leaq	-194(%rbp), %r14
.Ltmp1689:
	#DEBUG_VALUE: Gsm_RPE_Encoding:mant <- [R14+0]
	#DEBUG_VALUE: APCM_quantization:mant_out <- [R14+0]
	movl	$23, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 1541 3                # gsm_encode.c:1541:3
.Ltmp1690:
	movw	%bx, -194(%rbp)
	leaq	-42(%rbp), %rdi
.Ltmp1691:
	#DEBUG_VALUE: APCM_quantization:exp <- [RDI+0]
	movl	$24, %esi
	movl	$2, %edx
.Ltmp1692:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KLoad0
	.loc	1 1542 16               # gsm_encode.c:1542:16
.Ltmp1693:
	movw	-42(%rbp), %bx
	movl	$24, %edi
.Ltmp1694:
	movl	$24, %esi
	xorl	%edx, %edx
.Ltmp1695:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KTimestamp1
	leaq	-196(%rbp), %r15
.Ltmp1696:
	#DEBUG_VALUE: Gsm_RPE_Encoding:exp <- [R15+0]
	#DEBUG_VALUE: APCM_quantization:exp_out <- [R15+0]
	movl	$24, %edi
	movl	$2, %edx
	movq	%r15, %rsi
	callq	_KStore
	.loc	1 1542 3                # gsm_encode.c:1542:3
.Ltmp1697:
	movw	%bx, -196(%rbp)
	movl	$12, %edi
	movl	$2, %edx
	movq	-272(%rbp), %rbx        # 8-byte Reload
.Ltmp1698:
	#DEBUG_VALUE: Gsm_RPE_Encoding:xmaxc <- RBX
	.loc	1 1689 3                # gsm_encode.c:1689:3
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1543 3                # gsm_encode.c:1543:3
.Ltmp1699:
	movl	-216(%rbp), %eax        # 4-byte Reload
	movw	%ax, (%rbx)
	xorl	%esi, %esi
	movabsq	$-3969293726441912827, %rdi # imm = 0xC8EA3C62D23E4605
.Ltmp1700:
	.loc	1 1689 3                # gsm_encode.c:1689:3
	callq	_KExitRegion
	movl	$1, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 1564 11               # gsm_encode.c:1564:11
.Ltmp1701:
	movswq	-194(%rbp), %rbx
.Ltmp1702:
	movl	$2, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 1565 11               # gsm_encode.c:1565:11
	movswl	-196(%rbp), %r15d
.Ltmp1703:
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movabsq	$4909056243729979834, %rdi # imm = 0x442078A4F5F059BA
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	callq	_KEnqArg
	movl	$1, %edi
	callq	_KEnqArg
	xorl	%esi, %esi
.Ltmp1704:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$26, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$4, %edi
	callq	_KWork
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	.loc	1 1564 11               # gsm_encode.c:1564:11
.Ltmp1705:
	leaq	gsm_FAC(%rbx,%rbx), %rdi
	movl	$3, %esi
	movl	$4, %edx
	movl	$2, %ecx
.Ltmp1706:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KLoad1
	.loc	1 1575 12               # gsm_encode.c:1575:12
.Ltmp1707:
	movswq	gsm_FAC(%rbx,%rbx), %r14
.Ltmp1708:
	movabsq	$3541245988706504587, %rdi # imm = 0x31250876E320CF8B
	xorl	%esi, %esi
.Ltmp1709:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KPrepCall
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$2, %edi
	callq	_KEnqArg
	callq	_KEnqArgConst
	movl	$5, %edi
	callq	_KLinkReturn
	movl	$6, %edi
	.loc	1 1565 11               # gsm_encode.c:1565:11
.Ltmp1710:
	movl	%r15d, %esi
	callq	gsm_sub
	movw	%ax, %bx
.Ltmp1711:
	#DEBUG_VALUE: APCM_inverse_quantization:temp2 <- BX
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
.Ltmp1712:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KTimestamp1
	movabsq	$236638021927625659, %rdi # imm = 0x348B506F558E3BB
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$5, %edi
	callq	_KEnqArg
	movl	$6, %edi
	callq	_KLinkReturn
	.loc	1 1566 23               # gsm_encode.c:1566:23
.Ltmp1713:
	movswl	%bx, %edi
	movl	%edi, -216(%rbp)        # 4-byte Spill
	movl	$1, %esi
	callq	gsm_sub
	movswl	%ax, %ebx
.Ltmp1714:
	movabsq	$4997044703917461281, %rdi # imm = 0x455911AEC7BF4F21
	xorl	%esi, %esi
.Ltmp1715:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KPrepCall
	movl	$8, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	callq	_KEnqArg
	callq	_KEnqArgConst
	movl	$7, %edi
	callq	_KLinkReturn
	movl	$1, %edi
	.loc	1 1566 11               # gsm_encode.c:1566:11
.Ltmp1716:
	movl	%ebx, %esi
	callq	gsm_asl
	movw	%ax, %bx
.Ltmp1717:
	#DEBUG_VALUE: APCM_inverse_quantization:temp3 <- BX
	movl	$21, %r15d
	movl	$21, %edi
	movl	$21, %esi
	xorl	%edx, %edx
.Ltmp1718:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KTimestamp1
	movl	$7, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$17, %r12d
	movl	$17, %edi
	movl	$17, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$4726993252327112025, %rdi # imm = 0x4199A7517CA03D59
	callq	_KEnterRegion
	.loc	1 1575 12               # gsm_encode.c:1575:12
.Ltmp1719:
	shlq	$33, %r14
	movq	%r14, -208(%rbp)        # 8-byte Spill
	.loc	1 1576 12               # gsm_encode.c:1576:12
	movswq	%bx, %rax
.Ltmp1720:
	#DEBUG_VALUE: APCM_inverse_quantization:i <- 13
	movq	%rax, -224(%rbp)        # 8-byte Spill
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
.Ltmp1721:
	jmp	.LBB8_40
.Ltmp1722:
	.align	16, 0x90
.LBB8_43:                               # %cond.end.i
                                        #   in Loop: Header=BB8_40 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_inverse_quantization:i <- 13
	#DEBUG_VALUE: APCM_inverse_quantization:xMc <- [RBP+-256]
	movl	$12, %r14d
	movl	$12, %edi
.Ltmp1723:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KPushCDep
	movl	$14, %edi
	movl	$12, %edx
	movl	$25, %ecx
	movl	%r15d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$11, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	movl	$14, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$15, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	movl	$12, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	xorl	%esi, %esi
	movabsq	$8367869661236504732, %rdi # imm = 0x7420A51F3CC5289C
	callq	_KPrepCall
	movl	$15, %edi
	callq	_KEnqArg
	movl	$11, %edi
	callq	_KEnqArg
	movl	$10, %edi
	callq	_KLinkReturn
	.loc	1 1577 14               # gsm_encode.c:1577:14
.Ltmp1724:
	movswl	%bx, %edi
	movl	-216(%rbp), %esi        # 4-byte Reload
	callq	gsm_asr
	movw	%ax, %bx
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
.Ltmp1725:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KTimestamp1
	leaq	-192(%rbp,%r13), %rsi
	movl	$10, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1577 5                # gsm_encode.c:1577:5
.Ltmp1726:
	movw	%bx, -192(%rbp,%r13)
	movl	$18, %r12d
	movl	$18, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	movl	$12, %ecx
	xorl	%r8d, %r8d
.Ltmp1727:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-4318267248483422050, %rdi # imm = 0xC4126ED110F1309E
	callq	_KExitRegion
	addq	$2, %r13
	movl	$22, %r15d
	movl	$19, %ebx
.LBB8_40:                               # %for.cond.i47
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1728:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_inverse_quantization:i <- 13
	movl	$20, %edi
.Ltmp1729:
	movl	%r15d, %esi
	movl	%r14d, %edx
	callq	_KPhi1To1
	movl	$16, %edi
	movl	%r12d, %esi
	movl	%r14d, %edx
	callq	_KPhi1To1
	movl	$13, %edi
	movl	%ebx, %esi
	movl	%r14d, %edx
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	movl	$12, %edi
	movl	$13, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$19, %edi
	movl	$13, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$12, %esi
	callq	_KPhiAddCond
	movl	$13, %edi
	movl	$12, %esi
	callq	_KPhiAddCond
	movl	$20, %edi
	movl	$20, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$20, %edi
	movl	$12, %esi
	callq	_KPhiAddCond
	.loc	1 1569 3                # gsm_encode.c:1569:3
.Ltmp1730:
	cmpl	$26, %r13d
	je	.LBB8_44
.Ltmp1731:
# BB#41:                                # %for.body.i55
                                        #   in Loop: Header=BB8_40 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_inverse_quantization:i <- 13
	movl	$2, %esi
	movabsq	$-4318267248483422050, %rdi # imm = 0xC4126ED110F1309E
.Ltmp1732:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KEnterRegion
	movl	$12, %edi
	callq	_KPushCDep
	movl	$14, %edi
	callq	_KWork
	movq	-256(%rbp), %rbx        # 8-byte Reload
.Ltmp1733:
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- RBX
	leaq	(%rbx,%r13), %rdi
	movl	$9, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1572 13               # gsm_encode.c:1572:13
.Ltmp1734:
	movzwl	(%rbx,%r13), %eax
	shll	$13, %eax
	.loc	1 1574 5                # gsm_encode.c:1574:5
	addl	$-28672, %eax           # imm = 0xFFFFFFFFFFFF9000
	.loc	1 1575 12               # gsm_encode.c:1575:12
	movswq	%ax, %rbx
.Ltmp1735:
	.loc	1 1576 12               # gsm_encode.c:1576:12
	imulq	-208(%rbp), %rbx        # 8-byte Folded Reload
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rbx
	sarq	$48, %rbx
.Ltmp1736:
	#DEBUG_VALUE: APCM_inverse_quantization:ltmp <- RBX
	movq	-224(%rbp), %rax        # 8-byte Reload
	leaq	32768(%rbx,%rax), %r14
	addq	%rax, %rbx
.Ltmp1737:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	movl	$10, 16(%rsp)
	movl	$9, 8(%rsp)
	movl	$10, (%rsp)
	movl	$25, %edi
	movl	$3, %esi
	movl	$7, %edx
	movl	$7, %ecx
	movl	$3, %r8d
	movl	$12, %r9d
	callq	_KTimestamp4
	movl	$22, %edi
	movl	$20, %esi
	xorl	%edx, %edx
	movl	$12, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$8, 16(%rsp)
	movl	$9, 8(%rsp)
	movl	$8, (%rsp)
	movl	$24, %r15d
	movl	$24, %edi
	movl	$3, %esi
	movl	$5, %edx
	movl	$7, %ecx
	movl	$1, %r8d
	movl	$12, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.loc	1 1576 12               # gsm_encode.c:1576:12
.Ltmp1738:
	cmpq	$65536, %r14            # imm = 0x10000
.Ltmp1739:
	#DEBUG_VALUE: APCM_inverse_quantization:xMc <- RBX
	jb	.LBB8_43
.Ltmp1740:
# BB#42:                                # %cond.true.i56
                                        #   in Loop: Header=BB8_40 Depth=1
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- RBX
	#DEBUG_VALUE: Gsm_RPE_Encoding:xMc <- [RBP+-256]
	#DEBUG_VALUE: APCM_inverse_quantization:i <- 13
	#DEBUG_VALUE: APCM_inverse_quantization:xMc <- RBX
	#DEBUG_VALUE: APCM_inverse_quantization:xMc <- [RBP+-256]
	movl	$25, %edi
.Ltmp1741:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1576 12 discriminator 1 # gsm_encode.c:1576:12
.Ltmp1742:
	testq	%rbx, %rbx
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %rbx
.Ltmp1743:
	.loc	1 1690 3                # gsm_encode.c:1690:3
	movl	$11, 16(%rsp)
	movl	$9, 8(%rsp)
	movl	$11, (%rsp)
	movl	$23, %r15d
	movl	$23, %edi
	movl	$3, %esi
	movl	$8, %edx
	movl	$7, %ecx
	movl	$4, %r8d
	movl	$12, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	jmp	.LBB8_43
.LBB8_44:                               # %APCM_inverse_quantization.exit
.Ltmp1744:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- [RBP+-264]
	movabsq	$-6329926289077219187, %r14 # imm = 0xA8279593D525508D
	movl	$1, %esi
	movabsq	$4726993252327112025, %rdi # imm = 0x4199A7517CA03D59
.Ltmp1745:
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$116340744155545957, %rdi # imm = 0x19D534A584BC165
	callq	_KExitRegion
	movl	$3, %esi
	movl	$2, %edx
	movq	-264(%rbp), %rbx        # 8-byte Reload
.Ltmp1746:
	#DEBUG_VALUE: Gsm_RPE_Encoding:Mc <- RBX
	movq	%rbx, %rdi
	callq	_KLoad0
.Ltmp1747:
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	.loc	1 1601 11               # gsm_encode.c:1601:11
	movswl	(%rbx), %ebx
.Ltmp1748:
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movabsq	$3113166310292200976, %rdi # imm = 0x2B343043D3AE1E10
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$3, %edi
	callq	_KEnqArg
	xorl	%esi, %esi
.Ltmp1749:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$32, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KDeqArg
	movl	$7, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$18, %r15d
	movl	$18, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %r12d
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 1601 3                # gsm_encode.c:1601:3
.Ltmp1750:
	cmpl	$3, %ebx
	jbe	.LBB8_46
.Ltmp1751:
# BB#45:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	movq	%rbx, -232(%rbp)        # 8-byte Spill
	leaq	-192(%rbp), %rax
	movq	%rax, -256(%rbp)        # 8-byte Spill
	movl	$13, %eax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	xorl	%r14d, %r14d
	movq	-248(%rbp), %rbx        # 8-byte Reload
.Ltmp1752:
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- RBX
	jmp	.LBB8_51
.Ltmp1753:
.LBB8_46:                               # %APCM_inverse_quantization.exit
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- [RBP+-248]
	movq	-248(%rbp), %r14        # 8-byte Reload
.Ltmp1754:
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- R14
	movq	%rbx, -232(%rbp)        # 8-byte Spill
	jmpq	*.LJTI8_0(,%rbx,8)
.Ltmp1755:
.LBB8_47:                               # %sw.bb.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: Gsm_RPE_Encoding:e <- R14
	movl	$7, %edi
.Ltmp1756:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
.Ltmp1757:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- R14
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KStoreConst
	.loc	1 1602 13               # gsm_encode.c:1602:13
.Ltmp1758:
	movw	$0, (%r14)
	.loc	1 1602 14 is_stmt 0     # gsm_encode.c:1602:14
	leaq	2(%r14), %r14
.Ltmp1759:
	movl	$6, %r12d
	movl	$6, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%r8d, %r8d
.Ltmp1760:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp1761:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- R14
.LBB8_48:                               # %sw.bb1.i
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	movl	$7, %edi
.Ltmp1762:
	callq	_KPushCDep
	movl	$4, %edi
	movl	$7, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
.Ltmp1763:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- R14
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KStoreConst
	.loc	1 1603 13               # gsm_encode.c:1603:13
.Ltmp1764:
	movw	$0, (%r14)
	.loc	1 1603 14 is_stmt 0     # gsm_encode.c:1603:14
	leaq	2(%r14), %r14
.Ltmp1765:
	movl	$9, %r12d
	movl	$9, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	movl	$4, %ecx
	xorl	%r8d, %r8d
.Ltmp1766:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp2
	callq	_KPopCDep
.LBB8_49:                               # %sw.bb3.i
.Ltmp1767:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	movl	$7, %edi
.Ltmp1768:
	callq	_KPushCDep
	movl	$8, %edi
	movl	$7, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
.Ltmp1769:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- R14
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KStoreConst
	.loc	1 1604 13               # gsm_encode.c:1604:13
.Ltmp1770:
	movw	$0, (%r14)
	.loc	1 1604 14 is_stmt 0     # gsm_encode.c:1604:14
	leaq	2(%r14), %r14
.Ltmp1771:
	movl	$11, %r12d
	movl	$11, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	movl	$8, %ecx
	xorl	%r8d, %r8d
.Ltmp1772:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp2
	callq	_KPopCDep
.LBB8_50:                               # %sw.bb5.i
.Ltmp1773:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	movl	$7, %edi
.Ltmp1774:
	callq	_KPushCDep
	movl	$10, %edi
	movl	$7, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$5, %edi
	callq	_KWork
	movq	%r14, %rbx
	.loc	1 1605 22               # gsm_encode.c:1605:22
.Ltmp1775:
	leaq	-190(%rbp), %rax
.Ltmp1776:
	#DEBUG_VALUE: RPE_grid_positioning:xMp <- [RBP+-256]
	.loc	1 1692 3                # gsm_encode.c:1692:3
	movq	%rax, -256(%rbp)        # 8-byte Spill
	leaq	-192(%rbp), %rdi
	movl	$2, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1605 21               # gsm_encode.c:1605:21
.Ltmp1777:
	movw	-192(%rbp), %r14w
.Ltmp1778:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- RBX
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
.Ltmp1779:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KTimestamp1
	movl	$2, %edi
	movl	$2, %edx
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 1605 13               # gsm_encode.c:1605:13
.Ltmp1780:
	movw	%r14w, (%rbx)
	.loc	1 1605 14 is_stmt 0     # gsm_encode.c:1605:14
	leaq	2(%rbx), %rbx
.Ltmp1781:
	#DEBUG_VALUE: RPE_grid_positioning:i <- 12
	movl	$15, %r12d
	movl	$15, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	movl	$10, %ecx
	xorl	%r8d, %r8d
.Ltmp1782:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp2
	movl	$17, %r15d
	movl	$17, %edi
	movl	$18, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$13, %r14d
	movl	$13, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$12, %eax
	movq	%rax, -208(%rbp)        # 8-byte Spill
.LBB8_51:                               # %do.body.preheader.i
.Ltmp1783:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	movq	%rbx, -248(%rbp)        # 8-byte Spill
	movl	$14, -216(%rbp)         # 4-byte Folded Spill
	movl	$14, %edi
.Ltmp1784:
	movl	$7, %edx
	movl	%r12d, %esi
	callq	_KPhi1To1
	movl	$12, %r13d
	movl	$12, %edi
	movl	$7, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$16, -224(%rbp)         # 4-byte Folded Spill
	movl	$16, %edi
	movl	$7, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$4, %edi
	callq	_KWork
	.loc	1 1611 6                # gsm_encode.c:1611:6
.Ltmp1785:
	movq	-208(%rbp), %rax        # 8-byte Reload
	leal	-1(%rax), %eax
.Ltmp1786:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	movq	%rax, -240(%rbp)        # 8-byte Spill
	movl	$14, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$16, %edi
	movl	$16, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$-7909545018177168821, %rdi # imm = 0x923BA6B66896DA4B
	callq	_KEnterRegion
	movabsq	$-5455372135417938584, %r15 # imm = 0xB44A9FF256D97D68
	movq	%rbx, %r14
	xorl	%ebx, %ebx
	movq	-256(%rbp), %r12        # 8-byte Reload
	.align	16, 0x90
.LBB8_52:                               # %do.body.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1787:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	movl	$2, %esi
	movq	%r15, %rdi
.Ltmp1788:
	callq	_KEnterRegion
	movl	$19, %edi
	movl	%r13d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$24, %edi
	movl	-224(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$22, %edi
	movl	-216(%rbp), %esi        # 4-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$9, %edi
	callq	_KWork
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KStoreConst
	.loc	1 1611 5                # gsm_encode.c:1611:5
.Ltmp1789:
	movw	$0, (%r14)
	leaq	2(%r14), %rdi
	movl	$2, %esi
.Ltmp1790:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KStoreConst
	.loc	1 1612 5                # gsm_encode.c:1612:5
.Ltmp1791:
	movw	$0, 2(%r14)
.Ltmp1792:
	#DEBUG_VALUE: RPE_grid_positioning:xMp <- R12
	movl	$3, %esi
	movl	$2, %edx
.Ltmp1793:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 1613 13               # gsm_encode.c:1613:13
.Ltmp1794:
	movw	(%r12), %bx
	.loc	1 1613 14 is_stmt 0     # gsm_encode.c:1613:14
	leaq	2(%r12), %r12
.Ltmp1795:
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
.Ltmp1796:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp1
	leaq	4(%r14), %rsi
	movl	$3, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1613 5                # gsm_encode.c:1613:5
.Ltmp1797:
	movw	%bx, 4(%r14)
	movl	$23, -216(%rbp)         # 4-byte Folded Spill
	movl	$23, %edi
	movl	$22, %esi
	xorl	%edx, %edx
.Ltmp1798:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KTimestamp1
	movl	$21, %ebx
	movl	$21, %edi
	movl	$19, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	movl	$19, %edi
	movl	$21, %esi
	callq	_KPhiAddCond
	movl	$24, %edi
	movl	$21, %esi
	callq	_KPhiAddCond
	movl	$22, %edi
	movl	$21, %esi
	callq	_KPhiAddCond
	movl	$25, -224(%rbp)         # 4-byte Folded Spill
	movl	$25, %edi
	movl	$24, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$20, %r13d
	movl	$20, %edi
	movl	$19, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	addq	$6, %r14
	.loc	1 1614 3                # gsm_encode.c:1614:3
.Ltmp1799:
	movq	-208(%rbp), %rax        # 8-byte Reload
	decl	%eax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jne	.LBB8_52
# BB#53:                                # %do.body.pre_exit.while.cond.preheader.i
.Ltmp1800:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	movabsq	$-3610208099333818709, %r14 # imm = 0xCDE5F6DC81F836AB
	.loc	1 1611 6                # gsm_encode.c:1611:6
	movq	-240(%rbp), %rax        # 8-byte Reload
	leaq	(%rax,%rax,2), %rbx
	movl	$1, %r15d
	movl	$1, %esi
	movabsq	$-7909545018177168821, %rdi # imm = 0x923BA6B66896DA4B
.Ltmp1801:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KExitRegion
	movq	-248(%rbp), %rax        # 8-byte Reload
	leaq	6(%rax,%rbx,2), %r12
	xorl	%r13d, %r13d
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$30, -208(%rbp)         # 4-byte Folded Spill
	movl	$30, %edi
	movl	$12, %esi
	movl	$4, %edx
	movl	$14, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movq	-232(%rbp), %r14        # 8-byte Reload
	incl	%r14d
	movabsq	$9139981477622529371, %rbx # imm = 0x7ED7BCBA6B573D5B
	jmp	.LBB8_54
	.align	16, 0x90
.LBB8_55:                               # %while.body.i
                                        #   in Loop: Header=BB8_54 Depth=1
.Ltmp1802:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	movl	$2, %esi
	movq	%rbx, %rdi
.Ltmp1803:
	callq	_KEnterRegion
	movl	$28, %r13d
	movl	$28, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
.Ltmp1804:
	#DEBUG_VALUE: RPE_grid_positioning:ep <- R12
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KStoreConst
	.loc	1 1617 20               # gsm_encode.c:1617:20
.Ltmp1805:
	movw	$0, (%r12)
	.loc	1 1617 21 is_stmt 0 discriminator 2 # gsm_encode.c:1617:21
.Ltmp1806:
	leaq	2(%r12), %r12
.Ltmp1807:
	movl	$27, -208(%rbp)         # 4-byte Folded Spill
	movl	$27, %edi
	movl	$26, %esi
	xorl	%edx, %edx
	movl	$28, %ecx
	xorl	%r8d, %r8d
.Ltmp1808:
	.loc	1 1692 3 is_stmt 1      # gsm_encode.c:1692:3
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%rbx, %rdi
	callq	_KExitRegion
	incl	%r14d
	movl	$31, %r15d
.LBB8_54:                               # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1809:
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	#DEBUG_VALUE: RPE_grid_positioning:i <- 13
	movl	$29, %edi
.Ltmp1810:
	movl	%r15d, %esi
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$26, %edi
	movl	-208(%rbp), %esi        # 4-byte Reload
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	movl	$28, %edi
	movl	$29, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	movl	$29, %edi
	movl	$28, %esi
	callq	_KPhiAddCond
	movl	$31, %edi
	movl	$29, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$26, %edi
	movl	$26, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$26, %edi
	movl	$28, %esi
	callq	_KPhiAddCond
	.loc	1 1617 3                # gsm_encode.c:1617:3
.Ltmp1811:
	movswl	%r14w, %eax
	cmpl	$3, %eax
	jle	.LBB8_55
.Ltmp1812:
# BB#56:                                # %RPE_grid_positioning.exit
	#DEBUG_VALUE: Gsm_RPE_Encoding:S <- RDI
	movl	$1, %esi
	movabsq	$-3610208099333818709, %rdi # imm = 0xCDE5F6DC81F836AB
.Ltmp1813:
	.loc	1 1692 3                # gsm_encode.c:1692:3
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$-6329926289077219187, %rdi # imm = 0xA8279593D525508D
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$-8837734710798719021, %rdi # imm = 0x855A0F1AD7B3E7D3
	callq	_KExitRegion
	.loc	1 1694 1                # gsm_encode.c:1694:1
	addq	$616, %rsp              # imm = 0x268
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1814:
.Ltmp1815:
	.size	Gsm_RPE_Encoding, .Ltmp1815-Gsm_RPE_Encoding
.Lfunc_end8:
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI8_0:
	.quad	.LBB8_50
	.quad	.LBB8_49
	.quad	.LBB8_48
	.quad	.LBB8_47

	.text
	.align	16, 0x90
	.type	Calculation_of_the_LTP_parameters,@function
Calculation_of_the_LTP_parameters:      # @Calculation_of_the_LTP_parameters
.Lfunc_begin9:
	.loc	1 1743 0                # gsm_encode.c:1743:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1816:
	.cfi_def_cfa_offset 16
.Ltmp1817:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1818:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$1448, %rsp             # imm = 0x5A8
.Ltmp1819:
	.cfi_offset %rbx, -56
.Ltmp1820:
	.cfi_offset %r12, -48
.Ltmp1821:
	.cfi_offset %r13, -40
.Ltmp1822:
	.cfi_offset %r14, -32
.Ltmp1823:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- RDI
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- RSI
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- RDX
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- RCX
	movq	%rcx, -176(%rbp)        # 8-byte Spill
.Ltmp1824:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	movq	%rdx, -184(%rbp)        # 8-byte Spill
.Ltmp1825:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	movq	%rsi, %r12
.Ltmp1826:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	movq	%rdi, %r14
.Ltmp1827:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	movq	%r14, -152(%rbp)        # 8-byte Spill
	movabsq	$-1649912826701916046, %rdi # imm = 0xE91A550696125872
	movabsq	$-2663438378930018005, %rbx # imm = 0xDB0990E7E6BBE92B
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$174, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1828:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	movl	$139, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%rbx, %rdi
	xorl	%ebx, %ebx
	callq	_KEnterRegion
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jmp	.LBB9_1
.Ltmp1829:
	.align	16, 0x90
.LBB9_8:                                # %for.inc
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	movl	$141, %r15d
	movl	$141, %edi
	callq	_KPushCDep
	movl	$140, %r13d
	movl	$140, %edi
	movl	$141, %edx
	movl	$148, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$140, %edi
	movl	$140, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$4920415537243967589, %rdi # imm = 0x4448D3DC94BD5065
	callq	_KExitRegion
	movq	-144(%rbp), %rbx        # 8-byte Reload
	addq	$2, %rbx
	movq	-152(%rbp), %r14        # 8-byte Reload
.Ltmp1830:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
.LBB9_1:                                # %for.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	movl	$4, %edi
	movl	%r13d, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$141, %edi
	movl	$139, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$4, %edi
	movl	$141, %esi
	callq	_KPhiAddCond
	.loc	1 1757 3 prologue_end   # gsm_encode.c:1757:3
.Ltmp1831:
	cmpq	$80, %rbx
	je	.LBB9_9
.Ltmp1832:
# BB#2:                                 # %for.body
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	movl	$2, %esi
	movabsq	$4920415537243967589, %rdi # imm = 0x4448D3DC94BD5065
	callq	_KEnterRegion
	movl	$141, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	leaq	(%r14,%rbx), %rdi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1758 12               # gsm_encode.c:1758:12
.Ltmp1833:
	movq	%rbx, -144(%rbp)        # 8-byte Spill
	movw	(%r14,%rbx), %r14w
.Ltmp1834:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- R14W
	movl	$145, %edi
	movl	$141, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$144, %r15d
	xorl	%r13d, %r13d
	movl	$144, %edi
	movl	$141, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 1759 12               # gsm_encode.c:1759:12
	testw	%r14w, %r14w
	jns	.LBB9_6
.Ltmp1835:
# BB#3:                                 # %cond.true
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- R14W
	movl	$145, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1759 12 is_stmt 0 discriminator 1 # gsm_encode.c:1759:12
	movzwl	%r14w, %ebx
	movl	$146, %r13d
	movl	$146, %edi
	movl	$141, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	cmpl	$32768, %ebx            # imm = 0x8000
	jne	.LBB9_5
.Ltmp1836:
# BB#4:                                 #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	xorl	%r15d, %r15d
	movw	$32767, %r14w           # imm = 0x7FFF
	jmp	.LBB9_6
.Ltmp1837:
.LBB9_5:                                # %cond.false
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- R14W
	movl	$146, %r13d
	movl	$146, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 1759 12 discriminator 4 # gsm_encode.c:1759:12
	negl	%r14d
.Ltmp1838:
	movl	$143, %r15d
	movl	$143, %edi
	movl	$141, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp1839:
	.align	16, 0x90
.LBB9_6:                                # %cond.end10
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- R14W
	movl	$141, %edi
	callq	_KPushCDep
	movl	$142, %edi
	movl	$141, %edx
	movl	$145, %ecx
	movl	%r15d, %esi
	movl	%r13d, %r8d
	callq	_KPhi3To1
	movl	$1, %edi
	callq	_KWork
	movl	$1, (%rsp)
	movl	$4, %ebx
	movl	$148, %edi
	movl	$4, %esi
	movl	$1, %edx
	movl	$141, %ecx
	movl	$1, %r8d
	movl	$142, %r9d
	callq	_KTimestamp3
	movl	$147, %edi
	movl	$141, %esi
	xorl	%edx, %edx
	movl	$142, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movq	-136(%rbp), %rdx        # 8-byte Reload
	.loc	1 1760 9 is_stmt 1      # gsm_encode.c:1760:9
	movswl	%dx, %eax
	movswl	%r14w, %ecx
	cmpl	%eax, %ecx
	jle	.LBB9_8
.Ltmp1840:
# BB#7:                                 # %if.then
                                        #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- R14W
	movl	$148, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	movl	$147, %ebx
	movw	%r14w, %dx
	jmp	.LBB9_8
.Ltmp1841:
.LBB9_9:                                # %for.cond.pre_exit.for.end
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	movl	$1, %esi
	movabsq	$-2663438378930018005, %rdi # imm = 0xDB0990E7E6BBE92B
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
.Ltmp1842:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movl	$150, %edi
	movl	$4, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$150, %edi
	callq	_KPushCDep
	movq	-136(%rbp), %rbx        # 8-byte Reload
	.loc	1 1764 7                # gsm_encode.c:1764:7
	testw	%bx, %bx
	je	.LBB9_10
.Ltmp1843:
# BB#11:                                # %if.else
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movq	%r14, -152(%rbp)        # 8-byte Spill
.Ltmp1844:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	movl	$1, %edi
	callq	_KWork
	.loc	1 1766 22               # gsm_encode.c:1766:22
.Ltmp1845:
	movswq	%bx, %rbx
	shlq	$16, %rbx
	movabsq	$-6940779229204850173, %rdi # imm = 0x9FAD66109AD5DA03
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$2, %r15d
	movl	$3, %edi
	movl	$4, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	callq	_KEnqArg
	movl	$2, %edi
	callq	_KLinkReturn
	.loc	1 1766 12 is_stmt 0     # gsm_encode.c:1766:12
	movq	%rbx, %rdi
	callq	gsm_norm
	movw	%ax, %bx
.Ltmp1846:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- BX
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movswl	%bx, %r14d
	jmp	.LBB9_12
.Ltmp1847:
.LBB9_10:                               # %if.then20
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:scal <- 0
	movq	%r14, -152(%rbp)        # 8-byte Spill
.Ltmp1848:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	callq	_KPopCDep
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
.Ltmp1849:
.LBB9_12:                               # %if.end22
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movl	$149, %edi
	movl	$150, %edx
	movl	%r15d, %esi
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$152, %edi
	movl	$149, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$152, %edi
	callq	_KPushCDep
	.loc	1 1769 7 is_stmt 1      # gsm_encode.c:1769:7
	cmpl	$7, %r14d
	jl	.LBB9_14
.Ltmp1850:
# BB#13:                                # %if.then26
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:scal <- 0
	callq	_KPopCDep
	xorl	%r14d, %r14d
	xorl	%eax, %eax
	jmp	.LBB9_15
.Ltmp1851:
.LBB9_14:                               # %if.else27
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movl	$1, %edi
	callq	_KWork
	movl	$6, %ebx
	.loc	1 1770 15               # gsm_encode.c:1770:15
.Ltmp1852:
	subl	%r14d, %ebx
	movl	$151, %r14d
	movl	$151, %edi
	movl	$149, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movswl	%bx, %eax
.Ltmp1853:
.LBB9_15:                               # %if.end31
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- [RBP+-152]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movl	%eax, -160(%rbp)        # 4-byte Spill
	movl	$9, %edi
	movl	$152, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	xorl	%ebx, %ebx
	movl	$9, %edi
	movl	$9, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	callq	_KInduction
	movl	$1, %esi
	movabsq	$-3914951541540047192, %rdi # imm = 0xC9AB4C50B5A336A8
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$8, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movabsq	$2647088312619199490, %r15 # imm = 0x24BC58CBA2C16C02
	movq	-152(%rbp), %r14        # 8-byte Reload
.Ltmp1854:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	.align	16, 0x90
.LBB9_16:                               # %for.body35
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:d <- R14
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$7, %edi
	callq	_KPushCDep
	movl	$6, %edi
	callq	_KWork
	leaq	(%r14,%rbx), %rdi
	movl	$5, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 1777 37 discriminator 2 # gsm_encode.c:1777:37
.Ltmp1855:
	movswl	(%r14,%rbx), %r13d
	movl	-160(%rbp), %ecx        # 4-byte Reload
                                        # kill: CL<def> CL<kill> ECX<kill>
	sarl	%cl, %r13d
	movl	$1, (%rsp)
	movl	$6, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$7, %ecx
	movl	$1, %r8d
	movl	$5, %r9d
	callq	_KTimestamp3
	leaq	-128(%rbp,%rbx), %rsi
	movl	$6, %edi
	movl	$2, %edx
	callq	_KStore
	.loc	1 1777 29 is_stmt 0     # gsm_encode.c:1777:29
	movw	%r13w, -128(%rbp,%rbx)
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$8, %esi
	movl	$1, %edx
	callq	_KTimestamp1
.Ltmp1856:
	.loc	1 1777 3                # gsm_encode.c:1777:3
	addq	$2, %rbx
	cmpq	$80, %rbx
	jne	.LBB9_16
.Ltmp1857:
# BB#17:                                # %for.cond32.pre_exit.for.end45
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	movabsq	$6108003933582902380, %rbx # imm = 0x54C3FD374BE5C46C
	movl	$1, %esi
	movabsq	$-3914951541540047192, %rdi # imm = 0xC9AB4C50B5A336A8
	callq	_KExitRegion
.Ltmp1858:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movw	$40, %ax
	.loc	1 1815 40 is_stmt 1     # gsm_encode.c:1815:40
.Ltmp1859:
	movl	%eax, -156(%rbp)        # 4-byte Spill
	xorl	%r13d, %r13d
	movl	$0, %ebx
	movl	$0, %r15d
	xorl	%eax, %eax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, -136(%rbp)        # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movw	$40, %ax
	movl	%eax, -164(%rbp)        # 4-byte Spill
	xorl	%r14d, %r14d
	jmp	.LBB9_18
.Ltmp1860:
	.align	16, 0x90
.LBB9_21:                               # %for.inc412
                                        #   in Loop: Header=BB9_18 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movq	%rcx, -136(%rbp)        # 8-byte Spill
	movl	$155, %r15d
	movl	$155, %edi
	callq	_KPushCDep
	movl	$158, %eax
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movl	$158, %edi
	movl	$155, %edx
	movl	$162, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$157, %eax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	movl	$157, %edi
	movl	$155, %edx
	movl	$162, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$160, %r14d
	movl	$160, %edi
	movl	$159, %esi
	movl	$1, %edx
	movl	$155, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$158, %edi
	movl	$158, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$157, %edi
	movl	$157, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$154, %ebx
	movl	$154, %edi
	movl	$153, %esi
	movl	$1, %edx
	movl	$155, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$910248232779895113, %rdi # imm = 0xCA1D9F1EC45D149
	callq	_KExitRegion
	addq	$-2, %r13
	incl	-156(%rbp)              # 4-byte Folded Spill
.Ltmp1861:
.LBB9_18:                               # %for.cond46
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movl	$159, %edi
	movl	%r14d, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$130, %edi
	movq	-152(%rbp), %rsi        # 8-byte Reload
                                        # kill: ESI<def> ESI<kill> RSI<kill>
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$156, %edi
	movq	-144(%rbp), %rsi        # 8-byte Reload
                                        # kill: ESI<def> ESI<kill> RSI<kill>
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$153, %edi
	movl	%ebx, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$130, %edi
	movl	$130, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$156, %edi
	movl	$156, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$155, %edi
	movl	$153, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$159, %edi
	movl	$155, %esi
	callq	_KPhiAddCond
	movl	$159, %edi
	movl	$159, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$130, %edi
	movl	$155, %esi
	callq	_KPhiAddCond
	movl	$156, %edi
	movl	$155, %esi
	callq	_KPhiAddCond
	movl	$153, %edi
	movl	$155, %esi
	callq	_KPhiAddCond
	movl	$153, %edi
	movl	$153, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 1785 3                # gsm_encode.c:1785:3
	cmpq	$-162, %r13
	je	.LBB9_22
.Ltmp1862:
# BB#19:                                # %for.body49
                                        #   in Loop: Header=BB9_18 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movl	$2, %esi
	movabsq	$910248232779895113, %rdi # imm = 0xCA1D9F1EC45D149
	callq	_KEnterRegion
	movl	$155, %edi
	callq	_KPushCDep
	movl	$480, %edi              # imm = 0x1E0
	callq	_KWork
	movl	$10, %esi
	movl	$2, %edx
	leaq	-128(%rbp), %rdi
	callq	_KLoad0
	leaq	-80(%r12,%r13), %rdi
	.loc	1 1796 17               # gsm_encode.c:1796:17
.Ltmp1863:
	movswl	-128(%rbp), %ebx
	movl	$11, %esi
	movl	$12, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-80(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %r14
.Ltmp1864:
	#DEBUG_VALUE: L_result <- R14
	movl	$13, %esi
	movl	$2, %edx
	.loc	1 1796 40 is_stmt 0     # gsm_encode.c:1796:40
	leaq	-126(%rbp), %rdi
	callq	_KLoad0
	leaq	-78(%r12,%r13), %rdi
	movswl	-126(%rbp), %ebx
	movl	$14, %esi
	movl	$15, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-78(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1796 28               # gsm_encode.c:1796:28
	addq	%r14, %rbx
.Ltmp1865:
	#DEBUG_VALUE: L_result <- RBX
	movl	$16, %esi
	movl	$2, %edx
	.loc	1 1797 17 is_stmt 1     # gsm_encode.c:1797:17
	leaq	-124(%rbp), %rdi
	callq	_KLoad0
	leaq	-76(%r12,%r13), %rdi
	movswl	-124(%rbp), %r14d
	movl	$17, %esi
	movl	$18, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-76(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1797 5 is_stmt 0      # gsm_encode.c:1797:5
	addq	%rbx, %r14
.Ltmp1866:
	#DEBUG_VALUE: L_result <- R14
	movl	$19, %esi
	movl	$2, %edx
	.loc	1 1797 40               # gsm_encode.c:1797:40
	leaq	-122(%rbp), %rdi
	callq	_KLoad0
	leaq	-74(%r12,%r13), %rdi
	movswl	-122(%rbp), %ebx
	movl	$20, %esi
	movl	$21, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-74(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1797 28               # gsm_encode.c:1797:28
	addq	%r14, %rbx
.Ltmp1867:
	#DEBUG_VALUE: L_result <- RBX
	movl	$22, %esi
	movl	$2, %edx
	.loc	1 1798 17 is_stmt 1     # gsm_encode.c:1798:17
	leaq	-120(%rbp), %rdi
	callq	_KLoad0
	leaq	-72(%r12,%r13), %rdi
	movswl	-120(%rbp), %r14d
	movl	$23, %esi
	movl	$24, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-72(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1798 5 is_stmt 0      # gsm_encode.c:1798:5
	addq	%rbx, %r14
.Ltmp1868:
	#DEBUG_VALUE: L_result <- R14
	movl	$25, %esi
	movl	$2, %edx
	.loc	1 1798 40               # gsm_encode.c:1798:40
	leaq	-118(%rbp), %rdi
	callq	_KLoad0
	leaq	-70(%r12,%r13), %rdi
	movswl	-118(%rbp), %ebx
	movl	$26, %esi
	movl	$27, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-70(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1798 28               # gsm_encode.c:1798:28
	addq	%r14, %rbx
.Ltmp1869:
	#DEBUG_VALUE: L_result <- RBX
	movl	$28, %esi
	movl	$2, %edx
	.loc	1 1799 17 is_stmt 1     # gsm_encode.c:1799:17
	leaq	-116(%rbp), %rdi
	callq	_KLoad0
	leaq	-68(%r12,%r13), %rdi
	movswl	-116(%rbp), %r14d
	movl	$29, %esi
	movl	$30, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-68(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1799 5 is_stmt 0      # gsm_encode.c:1799:5
	addq	%rbx, %r14
.Ltmp1870:
	#DEBUG_VALUE: L_result <- R14
	movl	$31, %esi
	movl	$2, %edx
	.loc	1 1799 40               # gsm_encode.c:1799:40
	leaq	-114(%rbp), %rdi
	callq	_KLoad0
	leaq	-66(%r12,%r13), %rdi
	movswl	-114(%rbp), %ebx
	movl	$32, %esi
	movl	$33, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-66(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1799 28               # gsm_encode.c:1799:28
	addq	%r14, %rbx
.Ltmp1871:
	#DEBUG_VALUE: L_result <- RBX
	movl	$34, %esi
	movl	$2, %edx
	.loc	1 1800 17 is_stmt 1     # gsm_encode.c:1800:17
	leaq	-112(%rbp), %rdi
	callq	_KLoad0
	leaq	-64(%r12,%r13), %rdi
	movswl	-112(%rbp), %r14d
	movl	$35, %esi
	movl	$36, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-64(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1800 5 is_stmt 0      # gsm_encode.c:1800:5
	addq	%rbx, %r14
.Ltmp1872:
	#DEBUG_VALUE: L_result <- R14
	movl	$37, %esi
	movl	$2, %edx
	.loc	1 1800 40               # gsm_encode.c:1800:40
	leaq	-110(%rbp), %rdi
	callq	_KLoad0
	leaq	-62(%r12,%r13), %rdi
	movswl	-110(%rbp), %ebx
	movl	$38, %esi
	movl	$39, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-62(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1800 28               # gsm_encode.c:1800:28
	addq	%r14, %rbx
.Ltmp1873:
	#DEBUG_VALUE: L_result <- RBX
	movl	$40, %esi
	movl	$2, %edx
	.loc	1 1801 17 is_stmt 1     # gsm_encode.c:1801:17
	leaq	-108(%rbp), %rdi
	callq	_KLoad0
	leaq	-60(%r12,%r13), %rdi
	movswl	-108(%rbp), %r14d
	movl	$41, %esi
	movl	$42, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-60(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1801 5 is_stmt 0      # gsm_encode.c:1801:5
	addq	%rbx, %r14
.Ltmp1874:
	#DEBUG_VALUE: L_result <- R14
	movl	$43, %esi
	movl	$2, %edx
	.loc	1 1801 40               # gsm_encode.c:1801:40
	leaq	-106(%rbp), %rdi
	callq	_KLoad0
	leaq	-58(%r12,%r13), %rdi
	movswl	-106(%rbp), %ebx
	movl	$44, %esi
	movl	$45, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-58(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1801 28               # gsm_encode.c:1801:28
	addq	%r14, %rbx
.Ltmp1875:
	#DEBUG_VALUE: L_result <- RBX
	movl	$46, %esi
	movl	$2, %edx
	.loc	1 1802 17 is_stmt 1     # gsm_encode.c:1802:17
	leaq	-104(%rbp), %rdi
	callq	_KLoad0
	leaq	-56(%r12,%r13), %rdi
	movswl	-104(%rbp), %r14d
	movl	$47, %esi
	movl	$48, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-56(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1802 5 is_stmt 0      # gsm_encode.c:1802:5
	addq	%rbx, %r14
.Ltmp1876:
	#DEBUG_VALUE: L_result <- R14
	movl	$49, %esi
	movl	$2, %edx
	.loc	1 1802 40               # gsm_encode.c:1802:40
	leaq	-102(%rbp), %rdi
	callq	_KLoad0
	leaq	-54(%r12,%r13), %rdi
	movswl	-102(%rbp), %ebx
	movl	$50, %esi
	movl	$51, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-54(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1802 28               # gsm_encode.c:1802:28
	addq	%r14, %rbx
.Ltmp1877:
	#DEBUG_VALUE: L_result <- RBX
	movl	$52, %esi
	movl	$2, %edx
	.loc	1 1803 17 is_stmt 1     # gsm_encode.c:1803:17
	leaq	-100(%rbp), %rdi
	callq	_KLoad0
	leaq	-52(%r12,%r13), %rdi
	movswl	-100(%rbp), %r14d
	movl	$53, %esi
	movl	$54, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-52(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1803 5 is_stmt 0      # gsm_encode.c:1803:5
	addq	%rbx, %r14
.Ltmp1878:
	#DEBUG_VALUE: L_result <- R14
	movl	$55, %esi
	movl	$2, %edx
	.loc	1 1803 40               # gsm_encode.c:1803:40
	leaq	-98(%rbp), %rdi
	callq	_KLoad0
	leaq	-50(%r12,%r13), %rdi
	movswl	-98(%rbp), %ebx
	movl	$56, %esi
	movl	$57, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-50(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1803 28               # gsm_encode.c:1803:28
	addq	%r14, %rbx
.Ltmp1879:
	#DEBUG_VALUE: L_result <- RBX
	movl	$58, %esi
	movl	$2, %edx
	.loc	1 1804 17 is_stmt 1     # gsm_encode.c:1804:17
	leaq	-96(%rbp), %rdi
	callq	_KLoad0
	leaq	-48(%r12,%r13), %rdi
	movswl	-96(%rbp), %r14d
	movl	$59, %esi
	movl	$60, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-48(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1804 5 is_stmt 0      # gsm_encode.c:1804:5
	addq	%rbx, %r14
.Ltmp1880:
	#DEBUG_VALUE: L_result <- R14
	movl	$61, %esi
	movl	$2, %edx
	.loc	1 1804 40               # gsm_encode.c:1804:40
	leaq	-94(%rbp), %rdi
	callq	_KLoad0
	leaq	-46(%r12,%r13), %rdi
	movswl	-94(%rbp), %ebx
	movl	$62, %esi
	movl	$63, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-46(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1804 28               # gsm_encode.c:1804:28
	addq	%r14, %rbx
.Ltmp1881:
	#DEBUG_VALUE: L_result <- RBX
	movl	$64, %esi
	movl	$2, %edx
	.loc	1 1805 17 is_stmt 1     # gsm_encode.c:1805:17
	leaq	-92(%rbp), %rdi
	callq	_KLoad0
	leaq	-44(%r12,%r13), %rdi
	movswl	-92(%rbp), %r14d
	movl	$65, %esi
	movl	$66, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-44(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1805 5 is_stmt 0      # gsm_encode.c:1805:5
	addq	%rbx, %r14
.Ltmp1882:
	#DEBUG_VALUE: L_result <- R14
	movl	$67, %esi
	movl	$2, %edx
	.loc	1 1805 40               # gsm_encode.c:1805:40
	leaq	-90(%rbp), %rdi
	callq	_KLoad0
	leaq	-42(%r12,%r13), %rdi
	movswl	-90(%rbp), %ebx
	movl	$68, %esi
	movl	$69, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-42(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1805 28               # gsm_encode.c:1805:28
	addq	%r14, %rbx
.Ltmp1883:
	#DEBUG_VALUE: L_result <- RBX
	movl	$70, %esi
	movl	$2, %edx
	.loc	1 1806 17 is_stmt 1     # gsm_encode.c:1806:17
	leaq	-88(%rbp), %rdi
	callq	_KLoad0
	leaq	-40(%r12,%r13), %rdi
	movswl	-88(%rbp), %r14d
	movl	$71, %esi
	movl	$72, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-40(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1806 5 is_stmt 0      # gsm_encode.c:1806:5
	addq	%rbx, %r14
.Ltmp1884:
	#DEBUG_VALUE: L_result <- R14
	movl	$73, %esi
	movl	$2, %edx
	.loc	1 1806 40               # gsm_encode.c:1806:40
	leaq	-86(%rbp), %rdi
	callq	_KLoad0
	leaq	-38(%r12,%r13), %rdi
	movswl	-86(%rbp), %ebx
	movl	$74, %esi
	movl	$75, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-38(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1806 28               # gsm_encode.c:1806:28
	addq	%r14, %rbx
.Ltmp1885:
	#DEBUG_VALUE: L_result <- RBX
	movl	$76, %esi
	movl	$2, %edx
	.loc	1 1807 17 is_stmt 1     # gsm_encode.c:1807:17
	leaq	-84(%rbp), %rdi
	callq	_KLoad0
	leaq	-36(%r12,%r13), %rdi
	movswl	-84(%rbp), %r14d
	movl	$77, %esi
	movl	$78, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-36(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1807 5 is_stmt 0      # gsm_encode.c:1807:5
	addq	%rbx, %r14
.Ltmp1886:
	#DEBUG_VALUE: L_result <- R14
	movl	$79, %esi
	movl	$2, %edx
	.loc	1 1807 40               # gsm_encode.c:1807:40
	leaq	-82(%rbp), %rdi
	callq	_KLoad0
	leaq	-34(%r12,%r13), %rdi
	movswl	-82(%rbp), %ebx
	movl	$80, %esi
	movl	$81, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-34(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1807 28               # gsm_encode.c:1807:28
	addq	%r14, %rbx
.Ltmp1887:
	#DEBUG_VALUE: L_result <- RBX
	movl	$82, %esi
	movl	$2, %edx
	.loc	1 1808 17 is_stmt 1     # gsm_encode.c:1808:17
	leaq	-80(%rbp), %rdi
	callq	_KLoad0
	leaq	-32(%r12,%r13), %rdi
	movswl	-80(%rbp), %r14d
	movl	$83, %esi
	movl	$84, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-32(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1808 5 is_stmt 0      # gsm_encode.c:1808:5
	addq	%rbx, %r14
.Ltmp1888:
	#DEBUG_VALUE: L_result <- R14
	movl	$85, %esi
	movl	$2, %edx
	.loc	1 1808 40               # gsm_encode.c:1808:40
	leaq	-78(%rbp), %rdi
	callq	_KLoad0
	leaq	-30(%r12,%r13), %rdi
	movswl	-78(%rbp), %ebx
	movl	$86, %esi
	movl	$87, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-30(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1808 28               # gsm_encode.c:1808:28
	addq	%r14, %rbx
.Ltmp1889:
	#DEBUG_VALUE: L_result <- RBX
	movl	$88, %esi
	movl	$2, %edx
	.loc	1 1809 17 is_stmt 1     # gsm_encode.c:1809:17
	leaq	-76(%rbp), %rdi
	callq	_KLoad0
	leaq	-28(%r12,%r13), %rdi
	movswl	-76(%rbp), %r14d
	movl	$89, %esi
	movl	$90, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-28(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1809 5 is_stmt 0      # gsm_encode.c:1809:5
	addq	%rbx, %r14
.Ltmp1890:
	#DEBUG_VALUE: L_result <- R14
	movl	$91, %esi
	movl	$2, %edx
	.loc	1 1809 40               # gsm_encode.c:1809:40
	leaq	-74(%rbp), %rdi
	callq	_KLoad0
	leaq	-26(%r12,%r13), %rdi
	movswl	-74(%rbp), %ebx
	movl	$92, %esi
	movl	$93, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-26(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1809 28               # gsm_encode.c:1809:28
	addq	%r14, %rbx
.Ltmp1891:
	#DEBUG_VALUE: L_result <- RBX
	movl	$94, %esi
	movl	$2, %edx
	.loc	1 1810 17 is_stmt 1     # gsm_encode.c:1810:17
	leaq	-72(%rbp), %rdi
	callq	_KLoad0
	leaq	-24(%r12,%r13), %rdi
	movswl	-72(%rbp), %r14d
	movl	$95, %esi
	movl	$96, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-24(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1810 5 is_stmt 0      # gsm_encode.c:1810:5
	addq	%rbx, %r14
.Ltmp1892:
	#DEBUG_VALUE: L_result <- R14
	movl	$97, %esi
	movl	$2, %edx
	.loc	1 1810 40               # gsm_encode.c:1810:40
	leaq	-70(%rbp), %rdi
	callq	_KLoad0
	leaq	-22(%r12,%r13), %rdi
	movswl	-70(%rbp), %ebx
	movl	$98, %esi
	movl	$99, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-22(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1810 28               # gsm_encode.c:1810:28
	addq	%r14, %rbx
.Ltmp1893:
	#DEBUG_VALUE: L_result <- RBX
	movl	$100, %esi
	movl	$2, %edx
	.loc	1 1811 17 is_stmt 1     # gsm_encode.c:1811:17
	leaq	-68(%rbp), %rdi
	callq	_KLoad0
	leaq	-20(%r12,%r13), %rdi
	movswl	-68(%rbp), %r14d
	movl	$101, %esi
	movl	$102, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-20(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1811 5 is_stmt 0      # gsm_encode.c:1811:5
	addq	%rbx, %r14
.Ltmp1894:
	#DEBUG_VALUE: L_result <- R14
	movl	$103, %esi
	movl	$2, %edx
	.loc	1 1811 40               # gsm_encode.c:1811:40
	leaq	-66(%rbp), %rdi
	callq	_KLoad0
	leaq	-18(%r12,%r13), %rdi
	movswl	-66(%rbp), %ebx
	movl	$104, %esi
	movl	$105, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-18(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1811 28               # gsm_encode.c:1811:28
	addq	%r14, %rbx
.Ltmp1895:
	#DEBUG_VALUE: L_result <- RBX
	movl	$106, %esi
	movl	$2, %edx
	.loc	1 1812 17 is_stmt 1     # gsm_encode.c:1812:17
	leaq	-64(%rbp), %rdi
	callq	_KLoad0
	leaq	-16(%r12,%r13), %rdi
	movswl	-64(%rbp), %r14d
	movl	$107, %esi
	movl	$108, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-16(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1812 5 is_stmt 0      # gsm_encode.c:1812:5
	addq	%rbx, %r14
.Ltmp1896:
	#DEBUG_VALUE: L_result <- R14
	movl	$109, %esi
	movl	$2, %edx
	.loc	1 1812 40               # gsm_encode.c:1812:40
	leaq	-62(%rbp), %rdi
	callq	_KLoad0
	leaq	-14(%r12,%r13), %rdi
	movswl	-62(%rbp), %ebx
	movl	$110, %esi
	movl	$111, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-14(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1812 28               # gsm_encode.c:1812:28
	addq	%r14, %rbx
.Ltmp1897:
	#DEBUG_VALUE: L_result <- RBX
	movl	$112, %esi
	movl	$2, %edx
	.loc	1 1813 17 is_stmt 1     # gsm_encode.c:1813:17
	leaq	-60(%rbp), %rdi
	callq	_KLoad0
	leaq	-12(%r12,%r13), %rdi
	movswl	-60(%rbp), %r14d
	movl	$113, %esi
	movl	$114, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-12(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1813 5 is_stmt 0      # gsm_encode.c:1813:5
	addq	%rbx, %r14
.Ltmp1898:
	#DEBUG_VALUE: L_result <- R14
	movl	$115, %esi
	movl	$2, %edx
	.loc	1 1813 40               # gsm_encode.c:1813:40
	leaq	-58(%rbp), %rdi
	callq	_KLoad0
	leaq	-10(%r12,%r13), %rdi
	movswl	-58(%rbp), %ebx
	movl	$116, %esi
	movl	$117, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-10(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1813 28               # gsm_encode.c:1813:28
	addq	%r14, %rbx
.Ltmp1899:
	#DEBUG_VALUE: L_result <- RBX
	movl	$118, %esi
	movl	$2, %edx
	.loc	1 1814 17 is_stmt 1     # gsm_encode.c:1814:17
	leaq	-56(%rbp), %rdi
	callq	_KLoad0
	leaq	-8(%r12,%r13), %rdi
	movswl	-56(%rbp), %r14d
	movl	$119, %esi
	movl	$120, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-8(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1814 5 is_stmt 0      # gsm_encode.c:1814:5
	addq	%rbx, %r14
.Ltmp1900:
	#DEBUG_VALUE: L_result <- R14
	movl	$121, %esi
	movl	$2, %edx
	.loc	1 1814 40               # gsm_encode.c:1814:40
	leaq	-54(%rbp), %rdi
	callq	_KLoad0
	leaq	-6(%r12,%r13), %rdi
	movswl	-54(%rbp), %ebx
	movl	$122, %esi
	movl	$123, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-6(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %rbx
	.loc	1 1814 28               # gsm_encode.c:1814:28
	addq	%r14, %rbx
.Ltmp1901:
	#DEBUG_VALUE: L_result <- RBX
	movl	$124, %esi
	movl	$2, %edx
	.loc	1 1815 17 is_stmt 1     # gsm_encode.c:1815:17
	leaq	-52(%rbp), %rdi
	callq	_KLoad0
	leaq	-4(%r12,%r13), %rdi
	movswl	-52(%rbp), %r14d
	movl	$125, %esi
	movl	$126, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-4(%r12,%r13), %eax
	imull	%r14d, %eax
	movslq	%eax, %r14
	.loc	1 1815 5 is_stmt 0      # gsm_encode.c:1815:5
	addq	%rbx, %r14
.Ltmp1902:
	#DEBUG_VALUE: L_result <- R14
	movl	$127, %esi
	movl	$2, %edx
	.loc	1 1815 40               # gsm_encode.c:1815:40
	leaq	-50(%rbp), %rdi
	callq	_KLoad0
	leaq	-2(%r12,%r13), %rdi
	movswl	-50(%rbp), %ebx
	movl	$128, %esi
	movl	$129, %edx
	movl	$2, %ecx
	callq	_KLoad1
	movswl	-2(%r12,%r13), %eax
	imull	%ebx, %eax
	movslq	%eax, %r15
	.loc	1 1815 28               # gsm_encode.c:1815:28
	addq	%r14, %r15
.Ltmp1903:
	#DEBUG_VALUE: L_result <- R15
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- R15
	movl	$4, 1272(%rsp)
	movl	$128, 1264(%rsp)
	movl	$4, 1256(%rsp)
	movl	$127, 1248(%rsp)
	movl	$5, 1240(%rsp)
	movl	$125, 1232(%rsp)
	movl	$5, 1224(%rsp)
	movl	$124, 1216(%rsp)
	movl	$6, 1208(%rsp)
	movl	$122, 1200(%rsp)
	movl	$6, 1192(%rsp)
	movl	$121, 1184(%rsp)
	movl	$7, 1176(%rsp)
	movl	$119, 1168(%rsp)
	movl	$7, 1160(%rsp)
	movl	$118, 1152(%rsp)
	movl	$8, 1144(%rsp)
	movl	$116, 1136(%rsp)
	movl	$8, 1128(%rsp)
	movl	$115, 1120(%rsp)
	movl	$9, 1112(%rsp)
	movl	$113, 1104(%rsp)
	movl	$9, 1096(%rsp)
	movl	$112, 1088(%rsp)
	movl	$10, 1080(%rsp)
	movl	$110, 1072(%rsp)
	movl	$10, 1064(%rsp)
	movl	$109, 1056(%rsp)
	movl	$11, 1048(%rsp)
	movl	$107, 1040(%rsp)
	movl	$11, 1032(%rsp)
	movl	$106, 1024(%rsp)
	movl	$12, 1016(%rsp)
	movl	$104, 1008(%rsp)
	movl	$12, 1000(%rsp)
	movl	$103, 992(%rsp)
	movl	$13, 984(%rsp)
	movl	$101, 976(%rsp)
	movl	$13, 968(%rsp)
	movl	$100, 960(%rsp)
	movl	$14, 952(%rsp)
	movl	$98, 944(%rsp)
	movl	$14, 936(%rsp)
	movl	$97, 928(%rsp)
	movl	$15, 920(%rsp)
	movl	$95, 912(%rsp)
	movl	$15, 904(%rsp)
	movl	$94, 896(%rsp)
	movl	$16, 888(%rsp)
	movl	$92, 880(%rsp)
	movl	$16, 872(%rsp)
	movl	$91, 864(%rsp)
	movl	$17, 856(%rsp)
	movl	$89, 848(%rsp)
	movl	$17, 840(%rsp)
	movl	$88, 832(%rsp)
	movl	$18, 824(%rsp)
	movl	$86, 816(%rsp)
	movl	$18, 808(%rsp)
	movl	$85, 800(%rsp)
	movl	$19, 792(%rsp)
	movl	$83, 784(%rsp)
	movl	$19, 776(%rsp)
	movl	$82, 768(%rsp)
	movl	$20, 760(%rsp)
	movl	$80, 752(%rsp)
	movl	$20, 744(%rsp)
	movl	$79, 736(%rsp)
	movl	$21, 728(%rsp)
	movl	$77, 720(%rsp)
	movl	$21, 712(%rsp)
	movl	$76, 704(%rsp)
	movl	$22, 696(%rsp)
	movl	$74, 688(%rsp)
	movl	$22, 680(%rsp)
	movl	$73, 672(%rsp)
	movl	$23, 664(%rsp)
	movl	$71, 656(%rsp)
	movl	$23, 648(%rsp)
	movl	$70, 640(%rsp)
	movl	$24, 632(%rsp)
	movl	$68, 624(%rsp)
	movl	$24, 616(%rsp)
	movl	$67, 608(%rsp)
	movl	$25, 600(%rsp)
	movl	$65, 592(%rsp)
	movl	$25, 584(%rsp)
	movl	$64, 576(%rsp)
	movl	$26, 568(%rsp)
	movl	$62, 560(%rsp)
	movl	$26, 552(%rsp)
	movl	$61, 544(%rsp)
	movl	$27, 536(%rsp)
	movl	$59, 528(%rsp)
	movl	$27, 520(%rsp)
	movl	$58, 512(%rsp)
	movl	$28, 504(%rsp)
	movl	$56, 496(%rsp)
	movl	$28, 488(%rsp)
	movl	$55, 480(%rsp)
	movl	$29, 472(%rsp)
	movl	$53, 464(%rsp)
	movl	$29, 456(%rsp)
	movl	$52, 448(%rsp)
	movl	$30, 440(%rsp)
	movl	$50, 432(%rsp)
	movl	$30, 424(%rsp)
	movl	$49, 416(%rsp)
	movl	$31, 408(%rsp)
	movl	$47, 400(%rsp)
	movl	$31, 392(%rsp)
	movl	$46, 384(%rsp)
	movl	$32, 376(%rsp)
	movl	$44, 368(%rsp)
	movl	$32, 360(%rsp)
	movl	$43, 352(%rsp)
	movl	$33, 344(%rsp)
	movl	$41, 336(%rsp)
	movl	$33, 328(%rsp)
	movl	$40, 320(%rsp)
	movl	$34, 312(%rsp)
	movl	$38, 304(%rsp)
	movl	$34, 296(%rsp)
	movl	$37, 288(%rsp)
	movl	$35, 280(%rsp)
	movl	$35, 272(%rsp)
	movl	$35, 264(%rsp)
	movl	$34, 256(%rsp)
	movl	$36, 248(%rsp)
	movl	$32, 240(%rsp)
	movl	$36, 232(%rsp)
	movl	$31, 224(%rsp)
	movl	$37, 216(%rsp)
	movl	$29, 208(%rsp)
	movl	$37, 200(%rsp)
	movl	$28, 192(%rsp)
	movl	$38, 184(%rsp)
	movl	$26, 176(%rsp)
	movl	$38, 168(%rsp)
	movl	$25, 160(%rsp)
	movl	$39, 152(%rsp)
	movl	$23, 144(%rsp)
	movl	$39, 136(%rsp)
	movl	$22, 128(%rsp)
	movl	$40, 120(%rsp)
	movl	$20, 112(%rsp)
	movl	$40, 104(%rsp)
	movl	$19, 96(%rsp)
	movl	$41, 88(%rsp)
	movl	$17, 80(%rsp)
	movl	$41, 72(%rsp)
	movl	$16, 64(%rsp)
	movl	$42, 56(%rsp)
	movl	$14, 48(%rsp)
	movl	$42, 40(%rsp)
	movl	$13, 32(%rsp)
	movl	$42, 24(%rsp)
	movl	$11, 16(%rsp)
	movl	$42, 8(%rsp)
	movl	$10, (%rsp)
	movl	$156, %r14d
	movl	$162, %edi
	movl	$82, %esi
	movl	$156, %edx
	movl	$1, %ecx
	movl	$155, %r8d
	movl	$42, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	movl	$3, 1256(%rsp)
	movl	$128, 1248(%rsp)
	movl	$3, 1240(%rsp)
	movl	$127, 1232(%rsp)
	movl	$4, 1224(%rsp)
	movl	$125, 1216(%rsp)
	movl	$4, 1208(%rsp)
	movl	$124, 1200(%rsp)
	movl	$5, 1192(%rsp)
	movl	$122, 1184(%rsp)
	movl	$5, 1176(%rsp)
	movl	$121, 1168(%rsp)
	movl	$6, 1160(%rsp)
	movl	$119, 1152(%rsp)
	movl	$6, 1144(%rsp)
	movl	$118, 1136(%rsp)
	movl	$7, 1128(%rsp)
	movl	$116, 1120(%rsp)
	movl	$7, 1112(%rsp)
	movl	$115, 1104(%rsp)
	movl	$8, 1096(%rsp)
	movl	$113, 1088(%rsp)
	movl	$8, 1080(%rsp)
	movl	$112, 1072(%rsp)
	movl	$9, 1064(%rsp)
	movl	$110, 1056(%rsp)
	movl	$9, 1048(%rsp)
	movl	$109, 1040(%rsp)
	movl	$10, 1032(%rsp)
	movl	$107, 1024(%rsp)
	movl	$10, 1016(%rsp)
	movl	$106, 1008(%rsp)
	movl	$11, 1000(%rsp)
	movl	$104, 992(%rsp)
	movl	$11, 984(%rsp)
	movl	$103, 976(%rsp)
	movl	$12, 968(%rsp)
	movl	$101, 960(%rsp)
	movl	$12, 952(%rsp)
	movl	$100, 944(%rsp)
	movl	$13, 936(%rsp)
	movl	$98, 928(%rsp)
	movl	$13, 920(%rsp)
	movl	$97, 912(%rsp)
	movl	$14, 904(%rsp)
	movl	$95, 896(%rsp)
	movl	$14, 888(%rsp)
	movl	$94, 880(%rsp)
	movl	$15, 872(%rsp)
	movl	$92, 864(%rsp)
	movl	$15, 856(%rsp)
	movl	$91, 848(%rsp)
	movl	$16, 840(%rsp)
	movl	$89, 832(%rsp)
	movl	$16, 824(%rsp)
	movl	$88, 816(%rsp)
	movl	$17, 808(%rsp)
	movl	$86, 800(%rsp)
	movl	$17, 792(%rsp)
	movl	$85, 784(%rsp)
	movl	$18, 776(%rsp)
	movl	$83, 768(%rsp)
	movl	$18, 760(%rsp)
	movl	$82, 752(%rsp)
	movl	$19, 744(%rsp)
	movl	$80, 736(%rsp)
	movl	$19, 728(%rsp)
	movl	$79, 720(%rsp)
	movl	$20, 712(%rsp)
	movl	$77, 704(%rsp)
	movl	$20, 696(%rsp)
	movl	$76, 688(%rsp)
	movl	$21, 680(%rsp)
	movl	$74, 672(%rsp)
	movl	$21, 664(%rsp)
	movl	$73, 656(%rsp)
	movl	$22, 648(%rsp)
	movl	$71, 640(%rsp)
	movl	$22, 632(%rsp)
	movl	$70, 624(%rsp)
	movl	$23, 616(%rsp)
	movl	$68, 608(%rsp)
	movl	$23, 600(%rsp)
	movl	$67, 592(%rsp)
	movl	$24, 584(%rsp)
	movl	$65, 576(%rsp)
	movl	$24, 568(%rsp)
	movl	$64, 560(%rsp)
	movl	$25, 552(%rsp)
	movl	$62, 544(%rsp)
	movl	$25, 536(%rsp)
	movl	$61, 528(%rsp)
	movl	$26, 520(%rsp)
	movl	$59, 512(%rsp)
	movl	$26, 504(%rsp)
	movl	$58, 496(%rsp)
	movl	$27, 488(%rsp)
	movl	$56, 480(%rsp)
	movl	$27, 472(%rsp)
	movl	$55, 464(%rsp)
	movl	$28, 456(%rsp)
	movl	$53, 448(%rsp)
	movl	$28, 440(%rsp)
	movl	$52, 432(%rsp)
	movl	$29, 424(%rsp)
	movl	$50, 416(%rsp)
	movl	$29, 408(%rsp)
	movl	$49, 400(%rsp)
	movl	$30, 392(%rsp)
	movl	$47, 384(%rsp)
	movl	$30, 376(%rsp)
	movl	$46, 368(%rsp)
	movl	$31, 360(%rsp)
	movl	$44, 352(%rsp)
	movl	$31, 344(%rsp)
	movl	$43, 336(%rsp)
	movl	$32, 328(%rsp)
	movl	$41, 320(%rsp)
	movl	$32, 312(%rsp)
	movl	$40, 304(%rsp)
	movl	$33, 296(%rsp)
	movl	$38, 288(%rsp)
	movl	$33, 280(%rsp)
	movl	$37, 272(%rsp)
	movl	$34, 264(%rsp)
	movl	$35, 256(%rsp)
	movl	$34, 248(%rsp)
	movl	$34, 240(%rsp)
	movl	$35, 232(%rsp)
	movl	$32, 224(%rsp)
	movl	$35, 216(%rsp)
	movl	$31, 208(%rsp)
	movl	$36, 200(%rsp)
	movl	$29, 192(%rsp)
	movl	$36, 184(%rsp)
	movl	$28, 176(%rsp)
	movl	$37, 168(%rsp)
	movl	$26, 160(%rsp)
	movl	$37, 152(%rsp)
	movl	$25, 144(%rsp)
	movl	$38, 136(%rsp)
	movl	$23, 128(%rsp)
	movl	$38, 120(%rsp)
	movl	$22, 112(%rsp)
	movl	$39, 104(%rsp)
	movl	$20, 96(%rsp)
	movl	$39, 88(%rsp)
	movl	$19, 80(%rsp)
	movl	$40, 72(%rsp)
	movl	$17, 64(%rsp)
	movl	$40, 56(%rsp)
	movl	$16, 48(%rsp)
	movl	$41, 40(%rsp)
	movl	$14, 32(%rsp)
	movl	$41, 24(%rsp)
	movl	$13, 16(%rsp)
	movl	$41, 8(%rsp)
	movl	$11, (%rsp)
	movl	$161, %edi
	movl	$81, %esi
	movl	$155, %edx
	movl	$41, %ecx
	movl	$10, %r8d
	movl	$41, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	callq	_KPopCDep
	movl	$130, %ebx
	movq	-136(%rbp), %rcx        # 8-byte Reload
	.loc	1 1817 9 is_stmt 1      # gsm_encode.c:1817:9
	cmpq	%rcx, %r15
	jle	.LBB9_21
.Ltmp1904:
# BB#20:                                # %if.then409
                                        #   in Loop: Header=BB9_18 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- R15
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movl	$162, %edi
	callq	_KPushCDep
	movl	$4, 1288(%rsp)
	movl	$128, 1280(%rsp)
	movl	$4, 1272(%rsp)
	movl	$127, 1264(%rsp)
	movl	$5, 1256(%rsp)
	movl	$125, 1248(%rsp)
	movl	$5, 1240(%rsp)
	movl	$124, 1232(%rsp)
	movl	$6, 1224(%rsp)
	movl	$122, 1216(%rsp)
	movl	$6, 1208(%rsp)
	movl	$121, 1200(%rsp)
	movl	$7, 1192(%rsp)
	movl	$119, 1184(%rsp)
	movl	$7, 1176(%rsp)
	movl	$118, 1168(%rsp)
	movl	$8, 1160(%rsp)
	movl	$116, 1152(%rsp)
	movl	$8, 1144(%rsp)
	movl	$115, 1136(%rsp)
	movl	$9, 1128(%rsp)
	movl	$113, 1120(%rsp)
	movl	$9, 1112(%rsp)
	movl	$112, 1104(%rsp)
	movl	$10, 1096(%rsp)
	movl	$110, 1088(%rsp)
	movl	$10, 1080(%rsp)
	movl	$109, 1072(%rsp)
	movl	$11, 1064(%rsp)
	movl	$107, 1056(%rsp)
	movl	$11, 1048(%rsp)
	movl	$106, 1040(%rsp)
	movl	$12, 1032(%rsp)
	movl	$104, 1024(%rsp)
	movl	$12, 1016(%rsp)
	movl	$103, 1008(%rsp)
	movl	$13, 1000(%rsp)
	movl	$101, 992(%rsp)
	movl	$13, 984(%rsp)
	movl	$100, 976(%rsp)
	movl	$14, 968(%rsp)
	movl	$98, 960(%rsp)
	movl	$14, 952(%rsp)
	movl	$97, 944(%rsp)
	movl	$15, 936(%rsp)
	movl	$95, 928(%rsp)
	movl	$15, 920(%rsp)
	movl	$94, 912(%rsp)
	movl	$16, 904(%rsp)
	movl	$92, 896(%rsp)
	movl	$16, 888(%rsp)
	movl	$91, 880(%rsp)
	movl	$17, 872(%rsp)
	movl	$89, 864(%rsp)
	movl	$17, 856(%rsp)
	movl	$88, 848(%rsp)
	movl	$18, 840(%rsp)
	movl	$86, 832(%rsp)
	movl	$18, 824(%rsp)
	movl	$85, 816(%rsp)
	movl	$19, 808(%rsp)
	movl	$83, 800(%rsp)
	movl	$19, 792(%rsp)
	movl	$82, 784(%rsp)
	movl	$20, 776(%rsp)
	movl	$80, 768(%rsp)
	movl	$20, 760(%rsp)
	movl	$79, 752(%rsp)
	movl	$21, 744(%rsp)
	movl	$77, 736(%rsp)
	movl	$21, 728(%rsp)
	movl	$76, 720(%rsp)
	movl	$22, 712(%rsp)
	movl	$74, 704(%rsp)
	movl	$22, 696(%rsp)
	movl	$73, 688(%rsp)
	movl	$23, 680(%rsp)
	movl	$71, 672(%rsp)
	movl	$23, 664(%rsp)
	movl	$70, 656(%rsp)
	movl	$24, 648(%rsp)
	movl	$68, 640(%rsp)
	movl	$24, 632(%rsp)
	movl	$67, 624(%rsp)
	movl	$25, 616(%rsp)
	movl	$65, 608(%rsp)
	movl	$25, 600(%rsp)
	movl	$64, 592(%rsp)
	movl	$26, 584(%rsp)
	movl	$62, 576(%rsp)
	movl	$26, 568(%rsp)
	movl	$61, 560(%rsp)
	movl	$27, 552(%rsp)
	movl	$59, 544(%rsp)
	movl	$27, 536(%rsp)
	movl	$58, 528(%rsp)
	movl	$28, 520(%rsp)
	movl	$56, 512(%rsp)
	movl	$28, 504(%rsp)
	movl	$55, 496(%rsp)
	movl	$29, 488(%rsp)
	movl	$53, 480(%rsp)
	movl	$29, 472(%rsp)
	movl	$52, 464(%rsp)
	movl	$30, 456(%rsp)
	movl	$50, 448(%rsp)
	movl	$30, 440(%rsp)
	movl	$49, 432(%rsp)
	movl	$31, 424(%rsp)
	movl	$47, 416(%rsp)
	movl	$31, 408(%rsp)
	movl	$46, 400(%rsp)
	movl	$32, 392(%rsp)
	movl	$44, 384(%rsp)
	movl	$32, 376(%rsp)
	movl	$43, 368(%rsp)
	movl	$33, 360(%rsp)
	movl	$41, 352(%rsp)
	movl	$33, 344(%rsp)
	movl	$40, 336(%rsp)
	movl	$34, 328(%rsp)
	movl	$38, 320(%rsp)
	movl	$34, 312(%rsp)
	movl	$37, 304(%rsp)
	movl	$35, 296(%rsp)
	movl	$35, 288(%rsp)
	movl	$35, 280(%rsp)
	movl	$34, 272(%rsp)
	movl	$36, 264(%rsp)
	movl	$32, 256(%rsp)
	movl	$36, 248(%rsp)
	movl	$31, 240(%rsp)
	movl	$37, 232(%rsp)
	movl	$29, 224(%rsp)
	movl	$37, 216(%rsp)
	movl	$28, 208(%rsp)
	movl	$38, 200(%rsp)
	movl	$26, 192(%rsp)
	movl	$38, 184(%rsp)
	movl	$25, 176(%rsp)
	movl	$39, 168(%rsp)
	movl	$23, 160(%rsp)
	movl	$39, 152(%rsp)
	movl	$22, 144(%rsp)
	movl	$40, 136(%rsp)
	movl	$20, 128(%rsp)
	movl	$40, 120(%rsp)
	movl	$19, 112(%rsp)
	movl	$41, 104(%rsp)
	movl	$17, 96(%rsp)
	movl	$41, 88(%rsp)
	movl	$16, 80(%rsp)
	movl	$42, 72(%rsp)
	movl	$14, 64(%rsp)
	movl	$42, 56(%rsp)
	movl	$13, 48(%rsp)
	movl	$42, 40(%rsp)
	movl	$11, 32(%rsp)
	movl	$42, 24(%rsp)
	movl	$10, 16(%rsp)
	movl	$42, 8(%rsp)
	movl	$155, (%rsp)
	movl	$163, %ebx
	movl	$163, %edi
	movl	$83, %esi
	movl	$156, %edx
	movl	$1, %ecx
	movl	$159, %r8d
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	callq	_KTimestamp
	callq	_KPopCDep
	movl	$161, %r14d
	movq	%r15, %rcx
.Ltmp1905:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RCX
	movl	-156(%rbp), %eax        # 4-byte Reload
                                        # kill: AX<def> AX<kill> EAX<kill> EAX<def>
	movl	%eax, -164(%rbp)        # 4-byte Spill
	jmp	.LBB9_21
.Ltmp1906:
.LBB9_22:                               # %for.cond46.pre_exit.for.end414
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dp <- R12
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- [RBP+-176]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movl	$1, %esi
	movabsq	$6108003933582902380, %rdi # imm = 0x54C3FD374BE5C46C
	callq	_KExitRegion
	movl	$130, %edi
	movl	$2, %edx
	movq	-176(%rbp), %rbx        # 8-byte Reload
.Ltmp1907:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc_out <- RBX
	movq	%rbx, %rsi
	callq	_KStore
	movl	$2, %edi
	callq	_KWork
	movl	-164(%rbp), %r14d       # 4-byte Reload
	.loc	1 1824 3                # gsm_encode.c:1824:3
	movw	%r14w, (%rbx)
	movl	$6, %eax
	.loc	1 1830 21               # gsm_encode.c:1830:21
	subl	-160(%rbp), %eax        # 4-byte Folded Reload
.Ltmp1908:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movl	%eax, -152(%rbp)        # 4-byte Spill
	movl	$164, %edi
	callq	_KInduction
	movl	$1, %esi
	movabsq	$-5934630950660867581, %rdi # imm = 0xADA3F497E8D1FA03
	callq	_KEnterRegion
	movswq	%r14w, %rax
	addq	%rax, %rax
	subq	%rax, %r12
.Ltmp1909:
	xorl	%ebx, %ebx
.Ltmp1910:
	movabsq	$-4255520711777917877, %r14 # imm = 0xC4F15A759828E44B
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jmp	.LBB9_23
	.align	16, 0x90
.LBB9_24:                               # %for.body422
                                        #   in Loop: Header=BB9_23 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$166, %r13d
	movl	$166, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	leaq	(%r12,%rbx), %rdi
	movl	$131, %esi
	movl	$132, %edx
	movl	$2, %ecx
	callq	_KLoad1
	.loc	1 1841 16               # gsm_encode.c:1841:16
.Ltmp1911:
	movswl	(%r12,%rbx), %eax
	sarl	$3, %eax
	cltq
.Ltmp1912:
	#DEBUG_VALUE: L_temp <- [RBP+-144]
	.loc	1 1842 16               # gsm_encode.c:1842:16
	imulq	%rax, %rax
	.loc	1 1842 5 is_stmt 0      # gsm_encode.c:1842:5
	addq	%rax, -144(%rbp)        # 8-byte Folded Spill
.Ltmp1913:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- [RBP+-144]
	movl	$4, (%rsp)
	movl	$165, %r15d
	movl	$165, %edi
	movl	$135, %esi
	movl	$1, %edx
	movl	$166, %ecx
	movl	$4, %r8d
	movl	$131, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	addq	$2, %rbx
.Ltmp1914:
.LBB9_23:                               # %for.cond419
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movl	$135, %edi
	movl	%r15d, %esi
	movl	%r13d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$166, %edi
	movl	$164, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$135, %edi
	movl	$166, %esi
	callq	_KPhiAddCond
	movl	$135, %edi
	movl	$135, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 1837 3 is_stmt 1      # gsm_encode.c:1837:3
	cmpq	$80, %rbx
	jne	.LBB9_24
.Ltmp1915:
# BB#25:                                # %for.cond419.pre_exit.for.end434
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movl	$1, %esi
	movabsq	$-5934630950660867581, %rdi # imm = 0xADA3F497E8D1FA03
	callq	_KExitRegion
	movl	$4, %edi
	callq	_KWork
	movq	-136(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rbx
	.loc	1 1826 3                # gsm_encode.c:1826:3
	addq	%rbx, %rbx
.Ltmp1916:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RBX
	.loc	1 1830 11               # gsm_encode.c:1830:11
	movl	-152(%rbp), %ecx        # 4-byte Reload
                                        # kill: CL<def> CL<kill> ECX<kill>
	sarq	%cl, %rbx
.Ltmp1917:
	movl	$134, %edi
	movl	$135, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$169, %edi
	movl	$156, %esi
	movl	$3, %edx
	movl	$9, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	movl	$169, %edi
	callq	_KPushCDep
	movq	%rbx, %rax
.Ltmp1918:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RAX
	.loc	1 1849 7                # gsm_encode.c:1849:7
	testq	%rax, %rax
	jle	.LBB9_26
.Ltmp1919:
# BB#27:                                # %if.end439
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RAX
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movq	-144(%rbp), %r14        # 8-byte Reload
	.loc	1 1844 3                # gsm_encode.c:1844:3
	addq	%r14, %r14
.Ltmp1920:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- R14
	movl	$1, %edi
	movq	%rax, %rbx
.Ltmp1921:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RBX
	callq	_KWork
	movl	$2, (%rsp)
	movl	$168, %edi
	movl	$156, %esi
	movl	$4, %edx
	movl	$9, %ecx
	movl	$4, %r8d
	movl	$135, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$168, %edi
	callq	_KPushCDep
	.loc	1 1853 7                # gsm_encode.c:1853:7
.Ltmp1922:
	cmpq	%r14, %rbx
	jge	.LBB9_28
.Ltmp1923:
# BB#29:                                # %if.end443
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_max <- RBX
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- R14
	movabsq	$1609298018887543670, %r13 # imm = 0x1655600591882B76
	xorl	%r12d, %r12d
	movabsq	$-2398465604925622694, %rdi # imm = 0xDEB6F03D6C6A765A
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$134, %edi
	callq	_KEnqArg
	movl	$133, %edi
	callq	_KLinkReturn
	movl	$4, %edi
	callq	_KWork
	.loc	1 1858 10               # gsm_encode.c:1858:10
	movq	%r14, %rdi
	callq	gsm_norm
	movw	%ax, %cx
.Ltmp1924:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- CX
	.loc	1 1860 7                # gsm_encode.c:1860:7
	shlq	%cl, %rbx
.Ltmp1925:
	.loc	1 1861 7                # gsm_encode.c:1861:7
                                        # kill: CL<def> CL<kill> CX<kill>
.Ltmp1926:
	shlq	%cl, %r14
.Ltmp1927:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	.loc	1 1873 8                # gsm_encode.c:1873:8
	shrq	$16, %rbx
	movswq	%bx, %rax
	.loc	1 1873 13 is_stmt 0     # gsm_encode.c:1873:13
	movq	%rax, -136(%rbp)        # 8-byte Spill
	shrq	$16, %r14
	movswq	%r14w, %r15
	movl	$167, %edi
	callq	_KInduction
	movl	$2, 16(%rsp)
	movl	$133, 8(%rsp)
	movl	$4, (%rsp)
	movl	$172, %edi
	movl	$156, %esi
	movl	$6, %edx
	movl	$9, %ecx
	movl	$6, %r8d
	movl	$135, %r9d
	callq	_KTimestamp4
	movl	$2, 16(%rsp)
	movl	$133, 8(%rsp)
	movl	$4, (%rsp)
	movl	$171, %edi
	movl	$156, %esi
	movl	$6, %edx
	movl	$9, %ecx
	movl	$6, %r8d
	movl	$135, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r13, %rdi
	callq	_KEnterRegion
	movl	$gsm_DLB, %ebx
	movabsq	$-9002396639745806215, %r14 # imm = 0x83110FF3F0C7F079
	jmp	.LBB9_30
.Ltmp1928:
	.align	16, 0x90
.LBB9_32:                               # %for.inc471
                                        #   in Loop: Header=BB9_30 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	movl	$173, %edi
	callq	_KPushCDep
	.loc	1 1870 25 is_stmt 1     # gsm_encode.c:1870:25
	incl	%r12d
.Ltmp1929:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- R12W
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	addq	$2, %rbx
.Ltmp1930:
.LBB9_30:                               # %for.cond455
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	movl	$168, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$167, %edi
	movl	$167, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$170, %edi
	movl	$168, %esi
	movl	$1, %edx
	movl	$167, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 1870 3 is_stmt 0      # gsm_encode.c:1870:3
	movswl	%r12w, %eax
	cmpl	$2, %eax
	jg	.LBB9_34
# BB#31:                                # %for.body459
                                        #   in Loop: Header=BB9_30 Depth=1
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$170, %edi
	callq	_KPushCDep
	movl	$8, %edi
	callq	_KWork
	movl	$136, %esi
	movl	$137, %edx
	movl	$2, %ecx
	movq	%rbx, %rdi
	callq	_KLoad1
	.loc	1 1873 13 is_stmt 1     # gsm_encode.c:1873:13
.Ltmp1931:
	movswq	(%rbx), %r13
	imulq	%r15, %r13
	sarq	$15, %r13
	movl	$4, 16(%rsp)
	movl	$136, 8(%rsp)
	movl	$4, (%rsp)
	movl	$173, %edi
	movl	$171, %esi
	movl	$1, %edx
	movl	$172, %ecx
	movl	$4, %r8d
	movl	$170, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
.Ltmp1932:
	.loc	1 1873 8 is_stmt 0      # gsm_encode.c:1873:8
	cmpq	%r13, -136(%rbp)        # 8-byte Folded Reload
	jg	.LBB9_32
.Ltmp1933:
# BB#33:                                # %for.body459.pre_exit.for.end473
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
.LBB9_34:                               # %for.end473
	movl	$1, %esi
	movabsq	$1609298018887543670, %rdi # imm = 0x1655600591882B76
	callq	_KExitRegion
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc <- 0
	movl	$168, %edi
	callq	_KPushCDep
	movl	$138, %edi
	movl	$167, %esi
	movl	$168, %edx
	callq	_KPhi1To1
	movl	$138, %edi
	movl	$138, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$138, %edi
	movl	$2, %edx
	movq	-184(%rbp), %rbx        # 8-byte Reload
.Ltmp1934:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- RBX
	movq	%rbx, %rsi
	callq	_KStore
	movl	$1, %edi
	callq	_KWork
	.loc	1 1876 3 is_stmt 1      # gsm_encode.c:1876:3
	movw	%r12w, (%rbx)
	jmp	.LBB9_35
.Ltmp1935:
.LBB9_26:                               # %if.then438
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	movl	$2, %esi
	movq	-184(%rbp), %rbx        # 8-byte Reload
.Ltmp1936:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- RBX
	movq	%rbx, %rdi
	callq	_KStoreConst
	movl	$1, %edi
	callq	_KWork
	.loc	1 1850 5                # gsm_encode.c:1850:5
.Ltmp1937:
	movw	$0, (%rbx)
	jmp	.LBB9_35
.Ltmp1938:
.LBB9_28:                               # %if.then442
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- [RBP+-184]
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	movl	$2, %esi
	movq	-184(%rbp), %rbx        # 8-byte Reload
.Ltmp1939:
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:bc_out <- RBX
	movq	%rbx, %rdi
	callq	_KStoreConst
	movl	$1, %edi
	callq	_KWork
	.loc	1 1854 5                # gsm_encode.c:1854:5
.Ltmp1940:
	movw	$3, (%rbx)
.Ltmp1941:
.LBB9_35:                               # %return
	callq	_KPopCDep
	movabsq	$-1649912826701916046, %rdi # imm = 0xE91A550696125872
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:dmax <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:k <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:temp <- 0
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:Nc <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:lambda <- 40
	#DEBUG_VALUE: Calculation_of_the_LTP_parameters:L_power <- 0
	xorl	%esi, %esi
	callq	_KExitRegion
	.loc	1 1877 1 discriminator 1 # gsm_encode.c:1877:1
	addq	$1448, %rsp             # imm = 0x5A8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp1942:
.Ltmp1943:
	.size	Calculation_of_the_LTP_parameters, .Ltmp1943-Calculation_of_the_LTP_parameters
.Lfunc_end9:
	.cfi_endproc

	.align	16, 0x90
	.type	LARp_to_rp,@function
LARp_to_rp:                             # @LARp_to_rp
.Lfunc_begin10:
	.loc	1 2406 0                # gsm_encode.c:2406:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1944:
	.cfi_def_cfa_offset 16
.Ltmp1945:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1946:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
.Ltmp1947:
	.cfi_offset %rbx, -56
.Ltmp1948:
	.cfi_offset %r12, -48
.Ltmp1949:
	.cfi_offset %r13, -40
.Ltmp1950:
	.cfi_offset %r14, -32
.Ltmp1951:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: LARp_to_rp:LARp <- RDI
	movq	%rdi, %r12
.Ltmp1952:
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	movq	%r12, -64(%rbp)         # 8-byte Spill
	movabsq	$-7817971202171676116, %rbx # imm = 0x9380FC9CEE52DA2C
	movabsq	$5143973743268743502, %rdi # imm = 0x476310DD9578494E
	xorl	%r13d, %r13d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$32, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp1953:
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$12, %r14d
	movl	$12, %edi
	movl	$12, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	xorl	%ebx, %ebx
	xorl	%r15d, %r15d
	jmp	.LBB10_1
.Ltmp1954:
	.align	16, 0x90
.LBB10_20:                              # %for.inc
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	callq	_KPopCDep
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$5, %ebx
	movl	$5, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$13, %r14d
	movl	$13, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	movl	$5, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$10, %r15d
	movl	$10, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$5, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-1338812822767920042, %rdi # imm = 0xED6B94D4BE2E1C56
	callq	_KExitRegion
	addq	$2, %r13
.Ltmp1955:
.LBB10_1:                               # %for.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$6, %edi
	movl	%r15d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$11, %edi
	movl	%r14d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$6, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$11, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	movl	$11, %edi
	movl	$5, %esi
	callq	_KPhiAddCond
	.loc	1 2412 3 prologue_end   # gsm_encode.c:2412:3
.Ltmp1956:
	cmpl	$16, %r13d
	je	.LBB10_21
.Ltmp1957:
# BB#2:                                 # %for.body
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$2, %esi
	movabsq	$-1338812822767920042, %rdi # imm = 0xED6B94D4BE2E1C56
	callq	_KEnterRegion
	movl	$5, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	leaq	(%r12,%r13), %r14
	movl	$1, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2423 9                # gsm_encode.c:2423:9
.Ltmp1958:
	movw	(%r12,%r13), %bx
	movl	$2, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2424 14               # gsm_encode.c:2424:14
.Ltmp1959:
	movq	%r13, -48(%rbp)         # 8-byte Spill
	movswl	(%r12,%r13), %r13d
	movl	$16, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$16, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
.Ltmp1960:
	.loc	1 2423 9                # gsm_encode.c:2423:9
	cmpw	$0, %bx
	js	.LBB10_3
.Ltmp1961:
# BB#13:                                # %if.else
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	.loc	1 2431 22 discriminator 1 # gsm_encode.c:2431:22
	movslq	%r13d, %r12
	movl	$1, (%rsp)
	movl	$29, %edi
	movl	$5, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$29, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2430 18               # gsm_encode.c:2430:18
	cmpl	$11058, %r12d           # imm = 0x2B32
	jg	.LBB10_15
# BB#14:                                # %cond.true45
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movq	%r14, -56(%rbp)         # 8-byte Spill
	.loc	1 2430 35 is_stmt 0 discriminator 1 # gsm_encode.c:2430:35
	addq	%r12, %r12
	movl	$2, (%rsp)
	movl	$25, %r14d
	movl	$25, %edi
	movl	$5, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	jmp	.LBB10_19
.Ltmp1962:
	.align	16, 0x90
.LBB10_3:                               # %if.then
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	.loc	1 2424 14 is_stmt 1     # gsm_encode.c:2424:14
	movzwl	%r13w, %ebx
	movl	$1, (%rsp)
	movl	$17, %edi
	movl	$5, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	cmpl	$32768, %ebx            # imm = 0x8000
	jne	.LBB10_5
.Ltmp1963:
# BB#4:                                 #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movq	%r14, -56(%rbp)         # 8-byte Spill
	xorl	%r14d, %r14d
	movw	$32767, %bx             # imm = 0x7FFF
	jmp	.LBB10_6
.Ltmp1964:
	.align	16, 0x90
.LBB10_15:                              # %cond.false49
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$2, (%rsp)
	movl	$30, %edi
	movl	$5, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$30, %edi
	callq	_KPushCDep
	.loc	1 2431 5                # gsm_encode.c:2431:5
.Ltmp1965:
	cmpl	$20069, %r13d           # imm = 0x4E65
	jg	.LBB10_17
# BB#16:                                # %cond.true53
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movq	%r14, -56(%rbp)         # 8-byte Spill
	movl	$1, %edi
	callq	_KWork
	.loc	1 2431 22 is_stmt 0 discriminator 1 # gsm_encode.c:2431:22
	addq	$11059, %r12            # imm = 0x2B33
	movl	$3, (%rsp)
	movl	$26, %r14d
	movl	$26, %edi
	movl	$5, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$30, %ebx
	xorl	%r15d, %r15d
	jmp	.LBB10_19
.Ltmp1966:
.LBB10_5:                               # %cond.false
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$17, %edi
	callq	_KPushCDep
	movl	$3, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	movq	%r14, -56(%rbp)         # 8-byte Spill
	callq	_KLoad0
	movl	$5, %edi
	callq	_KWork
	movq	-48(%rbp), %rax         # 8-byte Reload
	.loc	1 2424 47 is_stmt 1     # gsm_encode.c:2424:47
.Ltmp1967:
	movw	(%r12,%rax), %bx
	.loc	1 2424 45 is_stmt 0     # gsm_encode.c:2424:45
	negw	%bx
	movl	$1, 16(%rsp)
	movl	$3, 8(%rsp)
	movl	$2, (%rsp)
	movl	$15, %r14d
	movl	$15, %edi
	movl	$5, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$2, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
.Ltmp1968:
.LBB10_6:                               # %cond.end
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	#DEBUG_VALUE: LARp_to_rp:temp <- BX
	movl	$16, %edi
	callq	_KPushCDep
	movl	$14, %edi
	movl	$16, %edx
	movl	$17, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	.loc	1 2425 19 is_stmt 1     # gsm_encode.c:2425:19
	movswl	%bx, %ebx
.Ltmp1969:
	movl	$1, (%rsp)
	movl	$22, %edi
	movl	$5, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$22, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2425 18 is_stmt 0     # gsm_encode.c:2425:18
	cmpl	$11058, %ebx            # imm = 0x2B32
	jg	.LBB10_8
.Ltmp1970:
# BB#7:                                 # %cond.true11
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	.loc	1 2425 35 discriminator 1 # gsm_encode.c:2425:35
	addl	%ebx, %ebx
	movslq	%ebx, %r13
	movl	$2, (%rsp)
	movl	$18, %r15d
	movl	$18, %edi
	movl	$5, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	jmp	.LBB10_12
.LBB10_8:                               # %cond.false14
                                        #   in Loop: Header=BB10_1 Depth=1
.Ltmp1971:
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$2, (%rsp)
	movl	$23, %edi
	movl	$5, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$23, %edi
	callq	_KPushCDep
	.loc	1 2426 7 is_stmt 1      # gsm_encode.c:2426:7
	cmpl	$20069, %ebx            # imm = 0x4E65
	jg	.LBB10_10
# BB#9:                                 # %cond.true18
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$1, %edi
	callq	_KWork
	.loc	1 2426 24 is_stmt 0 discriminator 1 # gsm_encode.c:2426:24
	addl	$11059, %ebx            # imm = 0x2B33
	movslq	%ebx, %r13
	movl	$3, (%rsp)
	movl	$19, %r15d
	movl	$19, %edi
	movl	$5, %esi
	movl	$4, %edx
	movl	$1, %ecx
	movl	$4, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$23, %r12d
	xorl	%r14d, %r14d
	jmp	.LBB10_12
.Ltmp1972:
.LBB10_17:                              # %cond.false57
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movq	%r14, -56(%rbp)         # 8-byte Spill
	movl	$4, %edi
	callq	_KWork
	.loc	1 2432 9 is_stmt 1      # gsm_encode.c:2432:9
.Ltmp1973:
	sarl	$2, %r13d
	leal	26112(%r13), %eax
	movslq	%eax, %r12
.Ltmp1974:
	#DEBUG_VALUE: LARp_to_rp:ltmp <- EAX
	leaq	32768(%r12), %rax
.Ltmp1975:
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movl	$4, (%rsp)
	movl	$28, %r14d
	movl	$28, %edi
	movl	$5, %esi
	movl	$5, %edx
	movl	$1, %ecx
	movl	$5, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	movl	$6, (%rsp)
	movl	$31, %r15d
	movl	$31, %edi
	movl	$5, %esi
	movl	$7, %edx
	movl	$1, %ecx
	movl	$7, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$30, %ebx
	cmpq	$65536, -72(%rbp)       # 8-byte Folded Reload
                                        # imm = 0x10000
	jb	.LBB10_19
# BB#18:                                # %cond.true65
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
.Ltmp1976:
	#DEBUG_VALUE: LARp_to_rp:ltmp <- EAX
	movl	$31, %r15d
	movl	$31, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2432 9 is_stmt 0 discriminator 1 # gsm_encode.c:2432:9
	cmpl	$-26112, %r13d          # imm = 0xFFFFFFFFFFFF9A00
	movq	$-32768, %r12           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
.Ltmp1977:
	cmovgq	%rax, %r12
	movl	$7, (%rsp)
	movl	$27, %r14d
	movl	$27, %edi
	movl	$5, %esi
	movl	$8, %edx
	movl	$1, %ecx
	movl	$8, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.align	16, 0x90
.LBB10_19:                              # %cond.end75
                                        #   in Loop: Header=BB10_1 Depth=1
	movq	-48(%rbp), %r13         # 8-byte Reload
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$16, %edi
	callq	_KPushCDep
	movl	$9, %edi
	movl	$16, %edx
	movl	$29, %ecx
	movl	%r14d, %esi
	movl	%ebx, %r8d
	movl	%r15d, %r9d
	callq	_KPhi4To1
	movl	$1, %edi
	callq	_KWork
	movl	$0, (%rsp)
	movl	$8, %edi
	movl	$5, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	movl	$9, %r9d
	callq	_KTimestamp3
	movl	$8, %edi
	movl	$2, %edx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	callq	_KStore
	movq	-64(%rbp), %rax         # 8-byte Reload
.Ltmp1978:
	#DEBUG_VALUE: LARp_to_rp:LARp <- RAX
	.loc	1 2430 7 is_stmt 1      # gsm_encode.c:2430:7
	movw	%r12w, (%rax,%r13)
	movq	%rax, %r12
	jmp	.LBB10_20
.Ltmp1979:
.LBB10_10:                              # %cond.false21
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$4, %edi
	callq	_KWork
	.loc	1 2427 9                # gsm_encode.c:2427:9
.Ltmp1980:
	sarl	$2, %ebx
	leal	26112(%rbx), %eax
	movslq	%eax, %r13
.Ltmp1981:
	#DEBUG_VALUE: LARp_to_rp:ltmp <- EAX
	leaq	32768(%r13), %rax
.Ltmp1982:
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movl	$6, (%rsp)
	movl	$24, %r14d
	movl	$24, %edi
	movl	$5, %esi
	movl	$7, %edx
	movl	$1, %ecx
	movl	$7, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	movl	$4, (%rsp)
	movl	$21, %r15d
	movl	$21, %edi
	movl	$5, %esi
	movl	$5, %edx
	movl	$1, %ecx
	movl	$5, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	movl	$23, %r12d
	cmpq	$65536, -72(%rbp)       # 8-byte Folded Reload
                                        # imm = 0x10000
	jb	.LBB10_12
# BB#11:                                # %cond.true28
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
.Ltmp1983:
	#DEBUG_VALUE: LARp_to_rp:ltmp <- EAX
	movl	$24, %r14d
	movl	$24, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2427 9 is_stmt 0 discriminator 1 # gsm_encode.c:2427:9
	cmpl	$-26112, %ebx           # imm = 0xFFFFFFFFFFFF9A00
	movq	$-32768, %r13           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
.Ltmp1984:
	cmovgq	%rax, %r13
	movl	$7, (%rsp)
	movl	$20, %r15d
	movl	$20, %edi
	movl	$5, %esi
	movl	$8, %edx
	movl	$1, %ecx
	movl	$8, %r8d
	movl	$14, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	.align	16, 0x90
.LBB10_12:                              # %cond.end38
                                        #   in Loop: Header=BB10_1 Depth=1
	#DEBUG_VALUE: LARp_to_rp:LARp <- [RBP+-64]
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$16, %edi
	callq	_KPushCDep
	movl	$7, %edi
	movl	$16, %edx
	movl	$22, %ecx
	movl	%r15d, %esi
	movl	%r12d, %r8d
	movl	%r14d, %r9d
	callq	_KPhi4To1
	movl	$2, %edi
	callq	_KWork
	.loc	1 2425 15 is_stmt 1 discriminator 3 # gsm_encode.c:2425:15
.Ltmp1985:
	negl	%r13d
	movl	$1, (%rsp)
	movl	$4, %edi
	movl	$5, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$7, %r9d
	callq	_KTimestamp3
	movl	$4, %edi
	movl	$2, %edx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	callq	_KStore
	movq	-64(%rbp), %r12         # 8-byte Reload
.Ltmp1986:
	#DEBUG_VALUE: LARp_to_rp:LARp <- R12
	movq	-48(%rbp), %rax         # 8-byte Reload
.Ltmp1987:
	.loc	1 2425 7 is_stmt 0      # gsm_encode.c:2425:7
	movw	%r13w, (%r12,%rax)
	movq	%rax, %r13
	jmp	.LBB10_20
.Ltmp1988:
.LBB10_21:                              # %for.cond.pre_exit.for.end
	#DEBUG_VALUE: LARp_to_rp:i <- 1
	movl	$1, %esi
	movabsq	$-7817971202171676116, %rdi # imm = 0x9380FC9CEE52DA2C
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$5143973743268743502, %rdi # imm = 0x476310DD9578494E
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	_KExitRegion            # TAILCALL
.Ltmp1989:
	.size	LARp_to_rp, .Ltmp1989-LARp_to_rp
.Lfunc_end10:
	.cfi_endproc

	.align	16, 0x90
	.type	Short_term_analysis_filtering,@function
Short_term_analysis_filtering:          # @Short_term_analysis_filtering
.Lfunc_begin11:
	.loc	1 2455 0 is_stmt 1      # gsm_encode.c:2455:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp1990:
	.cfi_def_cfa_offset 16
.Ltmp1991:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp1992:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$104, %rsp
.Ltmp1993:
	.cfi_offset %rbx, -56
.Ltmp1994:
	.cfi_offset %r12, -48
.Ltmp1995:
	.cfi_offset %r13, -40
.Ltmp1996:
	.cfi_offset %r14, -32
.Ltmp1997:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Short_term_analysis_filtering:S <- RDI
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- RSI
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- EDX
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- RCX
	movq	%rcx, %rbx
.Ltmp1998:
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- RBX
	movl	%edx, -108(%rbp)        # 4-byte Spill
.Ltmp1999:
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	movq	%rsi, -80(%rbp)         # 8-byte Spill
.Ltmp2000:
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	movq	%rdi, %r13
.Ltmp2001:
	#DEBUG_VALUE: Short_term_analysis_filtering:S <- R13
	movabsq	$-6227318519520115000, %r15 # imm = 0xA9941ECCDCCAC6C8
	movabsq	$4885236002826732368, %rdi # imm = 0x43CBD842F06FC350
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$24, %edi
	movl	$4, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KDeqArg
.Ltmp2002:
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	movl	$11, %edi
	callq	_KInduction
	movl	$8, %r12d
	movl	$8, %edi
	movl	$8, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movq	%r15, %rdi
	xorl	%r15d, %r15d
	callq	_KEnterRegion
	addq	$580, %r13              # imm = 0x244
.Ltmp2003:
	movq	%r13, -88(%rbp)         # 8-byte Spill
	xorl	%r14d, %r14d
	jmp	.LBB11_1
.Ltmp2004:
	.align	16, 0x90
.LBB11_10:                              # %for.cond2.pre_exit.for.end
                                        #   in Loop: Header=BB11_1 Depth=1
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$1, %esi
	movabsq	$7804472410524701333, %r15 # imm = 0x6C4F0E4EB8A95295
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$10, %r15d
	movl	$10, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$6, %edi
	movl	$2, %edx
	movq	-104(%rbp), %rbx        # 8-byte Reload
.Ltmp2005:
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- RBX
	movq	%rbx, %rsi
	callq	_KStore
	.loc	1 2483 5 prologue_end   # gsm_encode.c:2483:5
.Ltmp2006:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movw	%ax, (%rbx)
	movl	-92(%rbp), %r14d        # 4-byte Reload
.Ltmp2007:
	.loc	1 2463 20               # gsm_encode.c:2463:20
	incl	%r14d
.Ltmp2008:
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- R14D
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$4114524974576262053, %rdi # imm = 0x3919BAAA29175BA5
	callq	_KExitRegion
	movl	$9, %r12d
.Ltmp2009:
.LBB11_1:                               # %for.cond
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_3 Depth 2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	movl	$7, %edi
	movl	%r12d, %esi
	movl	%r15d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$10, %edi
	movl	$1, %esi
	movl	$1, %edx
	movl	$11, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$7, %edi
	movl	$10, %esi
	callq	_KPhiAddCond
	.loc	1 2463 3 is_stmt 0      # gsm_encode.c:2463:3
	cmpl	-108(%rbp), %r14d       # 4-byte Folded Reload
	jge	.LBB11_11
# BB#2:                                 # %for.body
                                        #   in Loop: Header=BB11_1 Depth=1
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	movl	%r14d, -92(%rbp)        # 4-byte Spill
	movl	$2, %r14d
	movl	$2, %esi
	movabsq	$4114524974576262053, %rdi # imm = 0x3919BAAA29175BA5
	callq	_KEnterRegion
	movl	$10, %edi
	callq	_KPushCDep
	movl	$4, %edi
	callq	_KWork
	.loc	1 2464 5 is_stmt 1      # gsm_encode.c:2464:5
.Ltmp2010:
	leaq	2(%rbx), %rdi
.Ltmp2011:
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- RDI
	movq	%rdi, -104(%rbp)        # 8-byte Spill
	movl	$2, %esi
	movl	$2, %edx
.Ltmp2012:
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	callq	_KLoad0
	.loc	1 2466 16               # gsm_encode.c:2466:16
	movw	2(%rbx), %r15w
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
.Ltmp2013:
	#DEBUG_VALUE: Short_term_analysis_filtering:di <- R15W
	#DEBUG_VALUE: Short_term_analysis_filtering:sav <- R15W
	movq	%r15, -48(%rbp)         # 8-byte Spill
	movl	$12, %edi
	callq	_KInduction
	xorl	%r13d, %r13d
	movl	$9, %edi
	movl	$7, %esi
	xorl	%edx, %edx
	movl	$10, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	movl	$2, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$1, %esi
	movabsq	$7804472410524701333, %rdi # imm = 0x6C4F0E4EB8A95295
	callq	_KEnterRegion
	xorl	%r12d, %r12d
	movl	$2, %ebx
	movw	%r15w, %ax
.Ltmp2014:
	#DEBUG_VALUE: Short_term_analysis_filtering:di <- [RBP+-48]
	#DEBUG_VALUE: Short_term_analysis_filtering:sav <- [RBP+-48]
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB11_3
	.align	16, 0x90
.LBB11_9:                               # %cond.end39
                                        #   in Loop: Header=BB11_3 Depth=2
	movq	-64(%rbp), %r13         # 8-byte Reload
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
.Ltmp2015:
	#DEBUG_VALUE: Short_term_analysis_filtering:sav <- [RBP+-56]
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$14, %r12d
	movl	$14, %edi
	callq	_KPushCDep
	movl	$15, %edi
	movl	$14, %edx
	movl	$23, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	#DEBUG_VALUE: Short_term_analysis_filtering:di <- [RBP+-48]
	movl	$13, %r14d
	movl	$13, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	movl	$15, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-4156502708419299528, %rdi # imm = 0xC65122CF0CB7F738
	callq	_KExitRegion
	addq	$2, %r13
	movl	$16, %ebx
.LBB11_3:                               # %for.cond2
                                        #   Parent Loop BB11_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$10, %edi
	callq	_KPushCDep
	movl	$5, %edi
	movl	$10, %edx
	movl	%ebx, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$6, %edi
	movl	$10, %edx
	movl	%r14d, %esi
	movl	%r12d, %ecx
	callq	_KPhi2To1
	movl	$1, %edi
	callq	_KWork
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$14, %edi
	movl	$10, %esi
	movl	$1, %edx
	movl	$12, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$6, %edi
	movl	$14, %esi
	callq	_KPhiAddCond
	movl	$5, %edi
	movl	$14, %esi
	callq	_KPhiAddCond
	callq	_KPopCDep
	.loc	1 2469 5                # gsm_encode.c:2469:5
.Ltmp2016:
	cmpq	$16, %r13
	movq	%r13, %rbx
	je	.LBB11_10
# BB#4:                                 # %for.body4
                                        #   in Loop: Header=BB11_3 Depth=2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$2, %esi
	movabsq	$-4156502708419299528, %rdi # imm = 0xC65122CF0CB7F738
	callq	_KEnterRegion
	movl	$14, %edi
	callq	_KPushCDep
	movl	$16, %edi
	callq	_KWork
	movq	-88(%rbp), %r13         # 8-byte Reload
	leaq	(%r13,%rbx), %r14
	movl	$3, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movq	-80(%rbp), %r15         # 8-byte Reload
.Ltmp2017:
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- R15
	leaq	(%r15,%rbx), %rdi
	.loc	1 2476 15               # gsm_encode.c:2476:15
.Ltmp2018:
	movswq	(%r13,%rbx), %r12
	movl	$4, %esi
	movl	$2, %edx
	callq	_KLoad0
	movswl	(%r15,%rbx), %r15d
.Ltmp2019:
	movl	%r15d, -68(%rbp)        # 4-byte Spill
.Ltmp2020:
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	movl	$5, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	.loc	1 2473 7                # gsm_encode.c:2473:7
	movq	-56(%rbp), %rax         # 8-byte Reload
	movw	%ax, (%r13,%rbx)
	.loc	1 2475 15               # gsm_encode.c:2475:15
	movq	-48(%rbp), %rax         # 8-byte Reload
	movswq	%ax, %rax
	.loc	1 2476 15               # gsm_encode.c:2476:15
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movswl	%ax, %ebx
	imull	%r15d, %ebx
	shlq	$33, %rbx
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %rbx
	sarq	$48, %rbx
.Ltmp2021:
	#DEBUG_VALUE: Short_term_analysis_filtering:ltmp <- RBX
	leaq	32768(%rbx,%r12), %r13
	addq	%r12, %rbx
.Ltmp2022:
	movl	$5, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$1, (%rsp)
	movl	$19, %r14d
	movl	$19, %edi
	movl	$6, %esi
	movl	$5, %edx
	movl	$14, %ecx
	movl	$5, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	movl	$7, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$3, (%rsp)
	movl	$20, %edi
	movl	$6, %esi
	movl	$7, %edx
	movl	$14, %ecx
	movl	$7, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	cmpq	$65536, %r13            # imm = 0x10000
	jb	.LBB11_6
# BB#5:                                 # %cond.true
                                        #   in Loop: Header=BB11_3 Depth=2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$20, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2476 15 is_stmt 0 discriminator 1 # gsm_encode.c:2476:15
	testq	%rbx, %rbx
	movq	$-32768, %rbx           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %rbx
	movl	$8, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$4, (%rsp)
	movl	$18, %r14d
	movl	$18, %edi
	movl	$6, %esi
	movl	$8, %edx
	movl	$14, %ecx
	movl	$8, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
.LBB11_6:                               # %cond.end
                                        #   in Loop: Header=BB11_3 Depth=2
	movl	-68(%rbp), %r13d        # 4-byte Reload
	movq	-48(%rbp), %r15         # 8-byte Reload
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	movl	$14, %edi
	callq	_KPushCDep
	movl	$17, %edi
	movl	$14, %edx
	movl	$20, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$7, %edi
	callq	_KWork
	.loc	1 2479 15 is_stmt 1     # gsm_encode.c:2479:15
	imull	%r13d, %r12d
	shlq	$33, %r12
	movabsq	$140737488355328, %rax  # imm = 0x800000000000
	addq	%rax, %r12
	sarq	$48, %r12
	leaq	(%r12,%r15), %r13
.Ltmp2023:
	#DEBUG_VALUE: Short_term_analysis_filtering:ltmp <- R13
	leaq	32768(%r12,%r15), %r15
	movl	$5, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$5, (%rsp)
	movl	$22, %r14d
	movl	$22, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$14, %ecx
	movl	$5, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	movl	$7, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$7, (%rsp)
	movl	$23, %edi
	movl	$6, %esi
	movl	$3, %edx
	movl	$14, %ecx
	movl	$7, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	movl	$16, %edi
	movl	$14, %esi
	xorl	%edx, %edx
	movl	$17, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	cmpq	$65536, %r15            # imm = 0x10000
	jb	.LBB11_7
.Ltmp2024:
# BB#8:                                 # %cond.true33
                                        #   in Loop: Header=BB11_3 Depth=2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:ltmp <- R13
	movq	%rbx, -56(%rbp)         # 8-byte Spill
	movl	$23, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2479 15 is_stmt 0 discriminator 1 # gsm_encode.c:2479:15
	testq	%r13, %r13
	movq	$-32768, %rcx           # imm = 0xFFFFFFFFFFFF8000
	movl	$32767, %eax            # imm = 0x7FFF
	cmovgq	%rax, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movl	$8, 16(%rsp)
	movl	$4, 8(%rsp)
	movl	$8, (%rsp)
	movl	$21, %r14d
	movl	$21, %edi
	movl	$6, %esi
	movl	$4, %edx
	movl	$14, %ecx
	movl	$8, %r8d
	movl	$3, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	jmp	.LBB11_9
.Ltmp2025:
	.align	16, 0x90
.LBB11_7:                               #   in Loop: Header=BB11_3 Depth=2
	#DEBUG_VALUE: Short_term_analysis_filtering:rp <- [RBP+-80]
	#DEBUG_VALUE: Short_term_analysis_filtering:k_n <- [RBP+-108]
	#DEBUG_VALUE: Short_term_analysis_filtering:s <- [RBP+-104]
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:i <- 0
	#DEBUG_VALUE: Short_term_analysis_filtering:ltmp <- R13
	#DEBUG_VALUE: Short_term_analysis_filtering:ltmp <- [RBP+-48]
	movq	%r13, -48(%rbp)         # 8-byte Spill
	movq	%rbx, -56(%rbp)         # 8-byte Spill
	jmp	.LBB11_9
.LBB11_11:                              # %for.cond.pre_exit.for.end44
	#DEBUG_VALUE: Short_term_analysis_filtering:j <- 0
	movl	$1, %esi
	movabsq	$-6227318519520115000, %rdi # imm = 0xA9941ECCDCCAC6C8
	callq	_KExitRegion
	xorl	%esi, %esi
	movabsq	$4885236002826732368, %rdi # imm = 0x43CBD842F06FC350
	addq	$104, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	_KExitRegion            # TAILCALL
.Ltmp2026:
	.size	Short_term_analysis_filtering, .Ltmp2026-Short_term_analysis_filtering
.Lfunc_end11:
	.cfi_endproc

	.align	16, 0x90
	.type	Autocorrelation,@function
Autocorrelation:                        # @Autocorrelation
.Lfunc_begin12:
	.loc	1 2589 0 is_stmt 1      # gsm_encode.c:2589:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2027:
	.cfi_def_cfa_offset 16
.Ltmp2028:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2029:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$152, %rsp
.Ltmp2030:
	.cfi_offset %rbx, -56
.Ltmp2031:
	.cfi_offset %r12, -48
.Ltmp2032:
	.cfi_offset %r13, -40
.Ltmp2033:
	.cfi_offset %r14, -32
.Ltmp2034:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: Autocorrelation:s <- RDI
	#DEBUG_VALUE: Autocorrelation:L_ACF <- RSI
.Ltmp2035:
	#DEBUG_VALUE: sp <- RDI
	movq	%rsi, -72(%rbp)         # 8-byte Spill
.Ltmp2036:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	movq	%rdi, %rbx
.Ltmp2037:
	#DEBUG_VALUE: sp <- RBX
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movabsq	$-2034584585142854467, %r14 # imm = 0xE3C3B41979131CBD
	movabsq	$-2847411510867628974, %rdi # imm = 0xD87BF6512D606C52
	xorl	%r13d, %r13d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$205, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp2038:
	#DEBUG_VALUE: Autocorrelation:k <- 0
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	movl	$181, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	jmp	.LBB12_1
.Ltmp2039:
	.align	16, 0x90
.LBB12_8:                               # %for.inc
                                        #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$183, %r14d
	movl	$183, %edi
	callq	_KPushCDep
	movl	$182, %r12d
	movl	$182, %edi
	movl	$183, %edx
	movl	$190, %ecx
	movl	%ebx, %esi
	callq	_KPhi2To1
	movl	$182, %edi
	movl	$182, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$4691267096911977373, %rdi # imm = 0x411ABA91B9EA9B9D
	callq	_KExitRegion
	movq	-48(%rbp), %r13         # 8-byte Reload
	addq	$2, %r13
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp2040:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
.LBB12_1:                               # %for.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$6, %edi
	movl	%r12d, %esi
	movl	%r14d, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$183, %edi
	movl	$181, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$183, %esi
	callq	_KPhiAddCond
	.loc	1 2606 2 prologue_end   # gsm_encode.c:2606:2
.Ltmp2041:
	cmpq	$320, %r13              # imm = 0x140
	je	.LBB12_9
.Ltmp2042:
# BB#2:                                 # %for.body
                                        #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movq	%r15, -56(%rbp)         # 8-byte Spill
	movl	$2, %esi
	movabsq	$4691267096911977373, %rdi # imm = 0x411ABA91B9EA9B9D
	callq	_KEnterRegion
	movl	$183, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	leaq	(%rbx,%r13), %r14
	movl	$1, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2607 10               # gsm_encode.c:2607:10
.Ltmp2043:
	movw	(%rbx,%r13), %r15w
	movl	$2, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2607 10 is_stmt 0 discriminator 1 # gsm_encode.c:2607:10
	movq	%r13, -48(%rbp)         # 8-byte Spill
	movw	(%rbx,%r13), %r13w
.Ltmp2044:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	movl	$187, %edi
	movl	$183, %esi
	movl	$1, %edx
	movl	$1, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$186, %r12d
	xorl	%ebx, %ebx
	movl	$186, %edi
	movl	$183, %esi
	xorl	%edx, %edx
	movl	$2, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2607 10               # gsm_encode.c:2607:10
	cmpw	$0, %r15w
	jns	.LBB12_6
# BB#3:                                 # %cond.true
                                        #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$187, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 2607 10 discriminator 1 # gsm_encode.c:2607:10
	movzwl	%r13w, %r15d
	movl	$1, (%rsp)
	movl	$188, %ebx
	movl	$188, %edi
	movl	$183, %esi
	movl	$2, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	movl	$2, %r9d
	callq	_KTimestamp3
	callq	_KPopCDep
	cmpl	$32768, %r15d           # imm = 0x8000
	jne	.LBB12_5
# BB#4:                                 #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	xorl	%r12d, %r12d
	movw	$32767, %r13w           # imm = 0x7FFF
	jmp	.LBB12_6
.LBB12_5:                               # %cond.false
                                        #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$188, %ebx
	movl	$188, %edi
	callq	_KPushCDep
	movl	$5, %edi
	callq	_KWork
	movl	$3, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2607 10 discriminator 4 # gsm_encode.c:2607:10
	movw	(%r14), %r13w
	negw	%r13w
	movl	$1, 16(%rsp)
	movl	$3, 8(%rsp)
	movl	$2, (%rsp)
	movl	$185, %r12d
	movl	$185, %edi
	movl	$183, %esi
	movl	$3, %edx
	movl	$1, %ecx
	movl	$3, %r8d
	movl	$2, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	.align	16, 0x90
.LBB12_6:                               # %cond.end16
                                        #   in Loop: Header=BB12_1 Depth=1
	movq	-56(%rbp), %r15         # 8-byte Reload
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
.Ltmp2045:
	#DEBUG_VALUE: Autocorrelation:temp <- R13W
	movl	$183, %edi
	callq	_KPushCDep
	movl	$184, %edi
	movl	$183, %edx
	movl	$187, %ecx
	movl	%r12d, %esi
	movl	%ebx, %r8d
	callq	_KPhi3To1
	movl	$1, %edi
	callq	_KWork
	movl	$1, (%rsp)
	movl	$6, %ebx
	movl	$190, %edi
	movl	$6, %esi
	movl	$1, %edx
	movl	$183, %ecx
	movl	$1, %r8d
	movl	$184, %r9d
	callq	_KTimestamp3
	movl	$189, %edi
	movl	$183, %esi
	xorl	%edx, %edx
	movl	$184, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2608 7 is_stmt 1      # gsm_encode.c:2608:7
	movswl	%r15w, %eax
	movswl	%r13w, %ecx
	cmpl	%eax, %ecx
	jle	.LBB12_8
.Ltmp2046:
# BB#7:                                 # %if.then
                                        #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	#DEBUG_VALUE: Autocorrelation:temp <- R13W
	movl	$190, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	movl	$189, %ebx
	movw	%r13w, %r15w
.Ltmp2047:
	#DEBUG_VALUE: Autocorrelation:temp <- R15W
	jmp	.LBB12_8
.Ltmp2048:
.LBB12_9:                               # %for.cond.pre_exit.for.end
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$1, %esi
	movabsq	$-2034584585142854467, %rdi # imm = 0xE3C3B41979131CBD
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$192, %edi
	movl	$6, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$192, %edi
	callq	_KPushCDep
	.loc	1 2613 6                # gsm_encode.c:2613:6
	testw	%r15w, %r15w
	je	.LBB12_10
.Ltmp2049:
# BB#11:                                # %if.else
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$2, %edi
	callq	_KWork
	.loc	1 2615 28               # gsm_encode.c:2615:28
.Ltmp2050:
	movswq	%r15w, %r14
	shlq	$16, %r14
	movl	$5, %edi
	movl	$6, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	movabsq	$-2947441783800512220, %rdi # imm = 0xD7189550586D4124
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$5, %edi
	callq	_KEnqArg
	movl	$4, %r15d
	movl	$4, %edi
	callq	_KLinkReturn
	.loc	1 2615 18 is_stmt 0     # gsm_encode.c:2615:18
	movq	%r14, %rdi
	callq	gsm_norm
                                        # kill: AX<def> AX<kill> EAX<def>
	.loc	1 2615 14               # gsm_encode.c:2615:14
	subl	%eax, %r15d
.Ltmp2051:
	#DEBUG_VALUE: Autocorrelation:scalauto <- R15W
	movl	$191, %r14d
	movl	$191, %edi
	movl	$6, %esi
	movl	$2, %edx
	movl	$4, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	jmp	.LBB12_12
.Ltmp2052:
.LBB12_10:                              # %if.then26
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	#DEBUG_VALUE: Autocorrelation:scalauto <- 0
	callq	_KPopCDep
	xorl	%r14d, %r14d
	xorl	%r15d, %r15d
.Ltmp2053:
.LBB12_12:                              # %if.end31
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	%r15d, -164(%rbp)       # 4-byte Spill
	movl	$10, %edi
	movl	$192, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	.loc	1 2621 6 is_stmt 1      # gsm_encode.c:2621:6
.Ltmp2054:
	movswl	%r15w, %r15d
	movq	%r15, -160(%rbp)        # 8-byte Spill
	xorl	%r14d, %r14d
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$204, %edi
	movl	$10, %esi
	movl	$1, %edx
	callq	_KTimestamp1
.Ltmp2055:
	.loc	1 2621 6 is_stmt 0      # gsm_encode.c:2621:6
	testw	%r15w, %r15w
	jle	.LBB12_29
.Ltmp2056:
# BB#13:                                # %if.then35
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$204, %edi
	callq	_KPushCDep
	movl	$9, %edi
	movl	$10, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	.loc	1 2640 3 is_stmt 1      # gsm_encode.c:2640:3
.Ltmp2057:
	movq	-160(%rbp), %rax        # 8-byte Reload
	leal	-1(%rax), %eax
	cmpl	$3, %eax
	ja	.LBB12_29
.Ltmp2058:
# BB#14:                                # %if.then35
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	jmpq	*.LJTI12_0(,%rax,8)
.Ltmp2059:
.LBB12_15:                              # %sw.bb
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movabsq	$9193840164320280908, %r15 # imm = 0x7F9714EB1C07814C
	movl	$9, %edi
	callq	_KPushCDep
	movl	$12, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$11, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$12, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movabsq	$-5205123055601155386, %r15 # imm = 0xB7C3B028AAB282C6
	xorl	%r13d, %r13d
	movq	%rbx, %r14
.Ltmp2060:
	#DEBUG_VALUE: Autocorrelation:s <- R14
	.align	16, 0x90
.LBB12_16:                              # %for.body40
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- R14
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$11, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	leaq	(%r14,%r13), %r12
	movl	$7, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2641 3 discriminator 2 # gsm_encode.c:2641:3
.Ltmp2061:
	movswq	(%r14,%r13), %rbx
	shlq	$14, %rbx
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$8, %edi
	movl	$11, %esi
	movl	$4, %edx
	movl	$7, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	movl	$8, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	movw	%bx, (%r14,%r13)
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$11, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$12, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp2062:
	.loc	1 2641 3 is_stmt 0      # gsm_encode.c:2641:3
	addq	$2, %r13
	cmpq	$320, %r13              # imm = 0x140
	jne	.LBB12_16
.Ltmp2063:
# BB#17:                                # %for.cond37.pre_exit.if.end101.loopexit
	#DEBUG_VALUE: Autocorrelation:s <- R14
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$1, %esi
	movabsq	$9193840164320280908, %rdi # imm = 0x7F9714EB1C07814C
	jmp	.LBB12_18
.Ltmp2064:
.LBB12_19:                              # %sw.bb50
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movabsq	$-236357596011475169, %r15 # imm = 0xFCB84A04C9C54F1F
	movl	$9, %edi
	callq	_KPushCDep
	movl	$16, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$15, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$16, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movabsq	$-7045409485750967814, %r15 # imm = 0x9E39AD66A0A561FA
	xorl	%r13d, %r13d
	movq	%rbx, %r14
.Ltmp2065:
	#DEBUG_VALUE: Autocorrelation:s <- R14
	.align	16, 0x90
.LBB12_20:                              # %for.body54
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- R14
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$15, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	leaq	(%r14,%r13), %r12
	movl	$13, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2642 3 is_stmt 1 discriminator 2 # gsm_encode.c:2642:3
.Ltmp2066:
	movswq	(%r14,%r13), %rbx
	shlq	$13, %rbx
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$14, %edi
	movl	$15, %esi
	movl	$4, %edx
	movl	$13, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	movl	$14, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	movw	%bx, (%r14,%r13)
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$15, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$16, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp2067:
	.loc	1 2642 3 is_stmt 0      # gsm_encode.c:2642:3
	addq	$2, %r13
	cmpq	$320, %r13              # imm = 0x140
	jne	.LBB12_20
.Ltmp2068:
# BB#21:                                # %for.cond51.pre_exit.if.end101.loopexit1
	#DEBUG_VALUE: Autocorrelation:s <- R14
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$1, %esi
	movabsq	$-236357596011475169, %rdi # imm = 0xFCB84A04C9C54F1F
.Ltmp2069:
.LBB12_18:                              # %if.end101
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	movq	%r14, %rbx
.Ltmp2070:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	xorl	%r14d, %r14d
	jmp	.LBB12_29
.Ltmp2071:
.LBB12_22:                              # %sw.bb67
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movabsq	$-1233694792649456733, %r15 # imm = 0xEEE1091F5AE143A3
	movl	$9, %edi
	callq	_KPushCDep
	movl	$20, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$19, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$20, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movabsq	$-7053968665119524086, %r15 # imm = 0x9E1B44DF62D07B0A
	xorl	%r13d, %r13d
.Ltmp2072:
	.align	16, 0x90
.LBB12_23:                              # %for.body71
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$19, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	movq	%rbx, %r15
.Ltmp2073:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	leaq	(%r15,%r13), %r12
	movl	$17, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2643 3 is_stmt 1 discriminator 2 # gsm_encode.c:2643:3
.Ltmp2074:
	movswq	(%r15,%r13), %rbx
	shlq	$12, %rbx
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$18, %edi
	movl	$19, %esi
	movl	$4, %edx
	movl	$17, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	movl	$18, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	movw	%bx, (%r15,%r13)
	movq	%r15, %rbx
.Ltmp2075:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-7053968665119524086, %rdi # imm = 0x9E1B44DF62D07B0A
	movq	%rdi, %r15
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$19, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$20, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp2076:
	.loc	1 2643 3 is_stmt 0      # gsm_encode.c:2643:3
	addq	$2, %r13
	cmpq	$320, %r13              # imm = 0x140
	jne	.LBB12_23
.Ltmp2077:
# BB#24:                                # %for.cond68.pre_exit.if.end101.loopexit2
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$1, %esi
	movabsq	$-1233694792649456733, %rdi # imm = 0xEEE1091F5AE143A3
	jmp	.LBB12_28
.Ltmp2078:
.LBB12_25:                              # %sw.bb84
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movabsq	$4967673110437176895, %r15 # imm = 0x44F0B85FC3DE263F
	movl	$9, %edi
	callq	_KPushCDep
	movl	$24, %edi
	callq	_KInduction
	callq	_KPopCDep
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$23, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$24, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movabsq	$-67026836205229024, %r15 # imm = 0xFF11DF729591AC20
	xorl	%r13d, %r13d
.Ltmp2079:
	.align	16, 0x90
.LBB12_26:                              # %for.body88
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$23, %edi
	callq	_KPushCDep
	movl	$9, %edi
	callq	_KWork
	movq	%rbx, %r15
.Ltmp2080:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	leaq	(%r15,%r13), %r12
	movl	$21, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2644 3 is_stmt 1 discriminator 2 # gsm_encode.c:2644:3
.Ltmp2081:
	movswq	(%r15,%r13), %rbx
	shlq	$11, %rbx
	addl	$16384, %ebx            # imm = 0x4000
	shrl	$15, %ebx
	movl	$22, %edi
	movl	$23, %esi
	movl	$4, %edx
	movl	$21, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	movl	$22, %edi
	movl	$2, %edx
	movq	%r12, %rsi
	callq	_KStore
	movw	%bx, (%r15,%r13)
	movq	%r15, %rbx
.Ltmp2082:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-67026836205229024, %rdi # imm = 0xFF11DF729591AC20
	movq	%rdi, %r15
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$23, %edi
	movl	$9, %esi
	movl	$1, %edx
	movl	$24, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.Ltmp2083:
	.loc	1 2644 3 is_stmt 0      # gsm_encode.c:2644:3
	addq	$2, %r13
	cmpq	$320, %r13              # imm = 0x140
	jne	.LBB12_26
.Ltmp2084:
# BB#27:                                # %for.cond85.pre_exit.if.end101.loopexit3
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movl	$1, %esi
	movabsq	$4967673110437176895, %rdi # imm = 0x44F0B85FC3DE263F
.Ltmp2085:
.LBB12_28:                              # %if.end101
	callq	_KExitRegion
	movl	$9, %edi
	callq	_KPushCDep
	callq	_KPopCDep
.LBB12_29:                              # %if.end101
.Ltmp2086:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 0
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movabsq	$281620931494164682, %r12 # imm = 0x3E884BEBF0638CA
	movl	$4, %edi
	callq	_KWork
	movl	$25, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2676 2 is_stmt 1      # gsm_encode.c:2676:2
.Ltmp2087:
	movswq	(%rbx), %rax
.Ltmp2088:
	#DEBUG_VALUE: Autocorrelation:k <- 9
	movq	%rax, -48(%rbp)         # 8-byte Spill
.Ltmp2089:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$64, %ebx
	movabsq	$6636923516910264877, %r13 # imm = 0x5C1B16C652DF622D
	xorl	%esi, %esi
	movq	-72(%rbp), %r15         # 8-byte Reload
	jmp	.LBB12_30
	.align	16, 0x90
.LBB12_31:                              # %for.inc104
                                        #   in Loop: Header=BB12_30 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	movl	$2, %esi
	movq	%r13, %rdi
	callq	_KEnterRegion
	movl	$195, %r14d
	movl	$195, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
.Ltmp2090:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R15
	leaq	(%r15,%rbx), %rdi
	movl	$8, %esi
	callq	_KStoreConst
	.loc	1 2674 19               # gsm_encode.c:2674:19
.Ltmp2091:
	movq	$0, (%r15,%rbx)
.Ltmp2092:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r13, %rdi
	callq	_KExitRegion
	addq	$-8, %rbx
	movl	$194, %esi
.Ltmp2093:
.LBB12_30:                              # %for.cond102
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	movl	$193, %edi
	movl	%r14d, %edx
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	movl	$195, %edi
	movl	$193, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$193, %edi
	movl	$195, %esi
	callq	_KPhiAddCond
	movl	$194, %edi
	movl	$193, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2674 2 is_stmt 0      # gsm_encode.c:2674:2
	cmpl	$-8, %ebx
	jne	.LBB12_31
.Ltmp2094:
# BB#32:                                # %for.cond102.pre_exit.for.end107
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	movl	$1, %esi
	movq	%r12, %rdi
	callq	_KExitRegion
	movl	$460, %edi              # imm = 0x1CC
	callq	_KWork
	movl	$26, %esi
	movl	$2, %edx
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp2095:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2676 2 is_stmt 1      # gsm_encode.c:2676:2
	movswq	(%rbx), %r14
	movq	%rbx, %r15
.Ltmp2096:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	imulq	-48(%rbp), %r14         # 8-byte Folded Reload
	movl	$27, %esi
	movl	$8, %edx
	movq	-72(%rbp), %r12         # 8-byte Reload
.Ltmp2097:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R12
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %r14
	movl	$1, (%rsp)
	movl	$28, %edi
	movl	$25, %esi
	movl	$3, %edx
	movl	$26, %ecx
	movl	$3, %r8d
	movl	$27, %r9d
	callq	_KTimestamp3
	movl	$28, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%r14, (%r12)
	.loc	1 2677 2                # gsm_encode.c:2677:2
	leaq	2(%r15), %rbx
.Ltmp2098:
	#DEBUG_VALUE: sp <- RBX
	movq	%rbx, -48(%rbp)         # 8-byte Spill
	movl	$29, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2678 2                # gsm_encode.c:2678:2
	movswq	2(%r15), %r14
	movl	$30, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
.Ltmp2099:
	#DEBUG_VALUE: sp <- [RBP+-48]
	callq	_KLoad0
	movswq	2(%r15), %r13
	imulq	%r14, %r13
	movl	$31, %esi
	movl	$8, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %r13
	movl	$1, (%rsp)
	movl	$32, %edi
	movl	$29, %esi
	movl	$3, %edx
	movl	$30, %ecx
	movl	$3, %r8d
	movl	$31, %r9d
	callq	_KTimestamp3
	movl	$32, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%r13, (%r12)
	movl	$33, %esi
	movl	$2, %edx
	movq	%r15, %r13
.Ltmp2100:
	#DEBUG_VALUE: Autocorrelation:s <- R13
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2678 11 is_stmt 0     # gsm_encode.c:2678:11
	movswq	(%r13), %r15
	imulq	%r14, %r15
	leaq	8(%r12), %rdi
	movq	%rdi, -96(%rbp)         # 8-byte Spill
	movl	$34, %esi
	movl	$8, %edx
	movq	%rdi, %r14
	callq	_KLoad0
	addq	8(%r12), %r15
	movl	$1, (%rsp)
	movl	$35, %edi
	movl	$29, %esi
	movl	$3, %edx
	movl	$33, %ecx
	movl	$3, %r8d
	movl	$34, %r9d
	callq	_KTimestamp3
	movl	$35, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%r15, 8(%r12)
	.loc	1 2679 2 is_stmt 1      # gsm_encode.c:2679:2
	leaq	4(%r13), %r15
.Ltmp2101:
	#DEBUG_VALUE: sp <- R15
	movq	%r15, -56(%rbp)         # 8-byte Spill
	movl	$36, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2680 2                # gsm_encode.c:2680:2
	movswq	4(%r13), %r14
	movl	$37, %esi
	movl	$2, %edx
	movq	%r15, %rdi
.Ltmp2102:
	#DEBUG_VALUE: sp <- [RBP+-56]
	callq	_KLoad0
	movswq	4(%r13), %r15
	imulq	%r14, %r15
	movl	$38, %esi
	movl	$8, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %r15
	movl	$1, (%rsp)
	movl	$39, %edi
	movl	$36, %esi
	movl	$3, %edx
	movl	$37, %ecx
	movl	$3, %r8d
	movl	$38, %r9d
	callq	_KTimestamp3
	movl	$39, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%r15, (%r12)
	movl	$40, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	movq	%r13, %r15
.Ltmp2103:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	.loc	1 2680 11 is_stmt 0     # gsm_encode.c:2680:11
	movswq	2(%r15), %rbx
	imulq	%r14, %rbx
	movl	$41, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r13         # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	8(%r12), %rbx
	movl	$1, (%rsp)
	movl	$42, %edi
	movl	$36, %esi
	movl	$3, %edx
	movl	$40, %ecx
	movl	$3, %r8d
	movl	$41, %r9d
	callq	_KTimestamp3
	movl	$42, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 8(%r12)
	movl	$43, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2680 20               # gsm_encode.c:2680:20
	movswq	(%r15), %rbx
	movq	%r15, %r13
.Ltmp2104:
	#DEBUG_VALUE: Autocorrelation:s <- R13
	imulq	%r14, %rbx
	movq	%r12, %r15
.Ltmp2105:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R15
	leaq	16(%r15), %rdi
	movq	%rdi, -104(%rbp)        # 8-byte Spill
	movl	$44, %esi
	movl	$8, %edx
	movq	%rdi, %r14
	callq	_KLoad0
	addq	16(%r15), %rbx
	movl	$1, (%rsp)
	movl	$45, %edi
	movl	$36, %esi
	movl	$3, %edx
	movl	$43, %ecx
	movl	$3, %r8d
	movl	$44, %r9d
	callq	_KTimestamp3
	movl	$45, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 16(%r15)
	.loc	1 2681 2 is_stmt 1      # gsm_encode.c:2681:2
	leaq	6(%r13), %rbx
.Ltmp2106:
	#DEBUG_VALUE: sp <- RBX
	movq	%rbx, -80(%rbp)         # 8-byte Spill
	movl	$46, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2682 2                # gsm_encode.c:2682:2
	movswq	6(%r13), %r14
	movl	$47, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
.Ltmp2107:
	#DEBUG_VALUE: sp <- [RBP+-80]
	callq	_KLoad0
	movswq	6(%r13), %rbx
	imulq	%r14, %rbx
	movq	%r14, %r12
	movl	$48, %esi
	movl	$8, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	addq	(%r15), %rbx
	movl	$1, (%rsp)
	movl	$49, %edi
	movl	$46, %esi
	movl	$3, %edx
	movl	$47, %ecx
	movl	$3, %r8d
	movl	$48, %r9d
	callq	_KTimestamp3
	movl	$49, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%rbx, (%r15)
	movq	%r15, %r14
.Ltmp2108:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R14
	movl	$50, %esi
	movl	$2, %edx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2682 11 is_stmt 0     # gsm_encode.c:2682:11
	movswq	4(%r13), %rbx
.Ltmp2109:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	imulq	%r12, %rbx
	movq	%r12, %r13
	movl	$51, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r15         # 8-byte Reload
	movq	%r15, %rdi
	callq	_KLoad0
	addq	8(%r14), %rbx
	movl	$1, (%rsp)
	movl	$52, %edi
	movl	$46, %esi
	movl	$3, %edx
	movl	$50, %ecx
	movl	$3, %r8d
	movl	$51, %r9d
	callq	_KTimestamp3
	movl	$52, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%rbx, 8(%r14)
	movl	$53, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	movq	-64(%rbp), %r12         # 8-byte Reload
.Ltmp2110:
	#DEBUG_VALUE: Autocorrelation:s <- R12
	.loc	1 2682 20               # gsm_encode.c:2682:20
	movswq	2(%r12), %rbx
	imulq	%r13, %rbx
	movl	$54, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r15        # 8-byte Reload
	movq	%r15, %rdi
	callq	_KLoad0
	addq	16(%r14), %rbx
	movl	$1, (%rsp)
	movl	$55, %edi
	movl	$46, %esi
	movl	$3, %edx
	movl	$53, %ecx
	movl	$3, %r8d
	movl	$54, %r9d
	callq	_KTimestamp3
	movl	$55, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%rbx, 16(%r14)
	movl	$56, %esi
	movl	$2, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	.loc	1 2682 29               # gsm_encode.c:2682:29
	movswq	(%r12), %rbx
	imulq	%r13, %rbx
	leaq	24(%r14), %r15
	movq	%r15, -112(%rbp)        # 8-byte Spill
	movl	$57, %esi
	movl	$8, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	addq	24(%r14), %rbx
	movq	%r14, %r13
.Ltmp2111:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R13
	movl	$1, (%rsp)
	movl	$58, %edi
	movl	$46, %esi
	movl	$3, %edx
	movl	$56, %ecx
	movl	$3, %r8d
	movl	$57, %r9d
	callq	_KTimestamp3
	movl	$58, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%rbx, 24(%r13)
	.loc	1 2683 2 is_stmt 1      # gsm_encode.c:2683:2
	leaq	8(%r12), %rbx
.Ltmp2112:
	#DEBUG_VALUE: sp <- RBX
	movq	%rbx, -88(%rbp)         # 8-byte Spill
	movl	$59, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2684 2                # gsm_encode.c:2684:2
	movswq	8(%r12), %r14
	movq	%r14, -120(%rbp)        # 8-byte Spill
	movl	$60, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
.Ltmp2113:
	#DEBUG_VALUE: sp <- [RBP+-88]
	callq	_KLoad0
	movswq	8(%r12), %r15
	imulq	%r14, %r15
	movl	$61, %esi
	movl	$8, %edx
	movq	%r13, %rdi
	callq	_KLoad0
	addq	(%r13), %r15
	movl	$1, (%rsp)
	movl	$62, %edi
	movl	$59, %esi
	movl	$3, %edx
	movl	$60, %ecx
	movl	$3, %r8d
	movl	$61, %r9d
	callq	_KTimestamp3
	movl	$62, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r15, (%r13)
	movl	$63, %esi
	movl	$2, %edx
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2684 11 is_stmt 0     # gsm_encode.c:2684:11
	movswq	6(%r12), %rbx
	movq	%r14, %r15
	imulq	%r15, %rbx
	movl	$64, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	8(%r13), %rbx
	movl	$1, (%rsp)
	movl	$65, %edi
	movl	$59, %esi
	movl	$3, %edx
	movl	$63, %ecx
	movl	$3, %r8d
	movl	$64, %r9d
	callq	_KTimestamp3
	movl	$65, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 8(%r13)
	movl	$66, %esi
	movl	$2, %edx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2684 20               # gsm_encode.c:2684:20
	movswq	4(%r12), %rbx
	imulq	%r15, %rbx
	movl	$67, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	16(%r13), %rbx
	movl	$1, (%rsp)
	movl	$68, %edi
	movl	$59, %esi
	movl	$3, %edx
	movl	$66, %ecx
	movl	$3, %r8d
	movl	$67, %r9d
	callq	_KTimestamp3
	movl	$68, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 16(%r13)
	movl	$69, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	movq	%r12, %r14
.Ltmp2114:
	#DEBUG_VALUE: Autocorrelation:s <- R14
	.loc	1 2684 29               # gsm_encode.c:2684:29
	movswq	2(%r14), %r12
	imulq	%r15, %r12
	movl	$70, %esi
	movl	$8, %edx
	movq	-112(%rbp), %rbx        # 8-byte Reload
	movq	%rbx, %rdi
	callq	_KLoad0
	addq	24(%r13), %r12
	movl	$1, (%rsp)
	movl	$71, %edi
	movl	$59, %esi
	movl	$3, %edx
	movl	$69, %ecx
	movl	$3, %r8d
	movl	$70, %r9d
	callq	_KTimestamp3
	movl	$71, %edi
	movl	$8, %edx
	movq	%rbx, %rsi
	callq	_KStore
	movq	%r13, %rbx
.Ltmp2115:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- RBX
	movq	%r12, 24(%rbx)
	movl	$72, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2684 38               # gsm_encode.c:2684:38
	movswq	(%r14), %r15
	imulq	-120(%rbp), %r15        # 8-byte Folded Reload
	leaq	32(%rbx), %rdi
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movl	$73, %esi
	movl	$8, %edx
	movq	%rdi, %r13
	callq	_KLoad0
	addq	32(%rbx), %r15
	movq	%rbx, %r12
.Ltmp2116:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R12
	movl	$1, (%rsp)
	movl	$74, %edi
	movl	$59, %esi
	movl	$3, %edx
	movl	$72, %ecx
	movl	$3, %r8d
	movl	$73, %r9d
	callq	_KTimestamp3
	movl	$74, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r15, 32(%r12)
	movq	%r14, %r13
.Ltmp2117:
	#DEBUG_VALUE: Autocorrelation:s <- R13
	.loc	1 2685 2 is_stmt 1      # gsm_encode.c:2685:2
	leaq	10(%r13), %rbx
.Ltmp2118:
	#DEBUG_VALUE: sp <- RBX
	movq	%rbx, -144(%rbp)        # 8-byte Spill
	movl	$75, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2686 2                # gsm_encode.c:2686:2
	movswq	10(%r13), %r15
	movl	$76, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
.Ltmp2119:
	#DEBUG_VALUE: sp <- [RBP+-144]
	callq	_KLoad0
	movswq	10(%r13), %rbx
	imulq	%r15, %rbx
	movl	$77, %esi
	movl	$8, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %rbx
	movl	$1, (%rsp)
	movl	$78, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$76, %ecx
	movl	$3, %r8d
	movl	$77, %r9d
	callq	_KTimestamp3
	movl	$78, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%rbx, (%r12)
	movl	$79, %esi
	movl	$2, %edx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2686 11 is_stmt 0     # gsm_encode.c:2686:11
	movswq	8(%r13), %rbx
	imulq	%r15, %rbx
	movl	$80, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	8(%r12), %rbx
	movl	$1, (%rsp)
	movl	$81, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$79, %ecx
	movl	$3, %r8d
	movl	$80, %r9d
	callq	_KTimestamp3
	movl	$81, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 8(%r12)
	movl	$82, %esi
	movl	$2, %edx
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2686 20               # gsm_encode.c:2686:20
	movswq	6(%r13), %rbx
	imulq	%r15, %rbx
	movl	$83, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	16(%r12), %rbx
	movl	$1, (%rsp)
	movl	$84, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$82, %ecx
	movl	$3, %r8d
	movl	$83, %r9d
	callq	_KTimestamp3
	movl	$84, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 16(%r12)
	movl	$85, %esi
	movl	$2, %edx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2686 29               # gsm_encode.c:2686:29
	movswq	4(%r13), %rbx
	imulq	%r15, %rbx
	movl	$86, %esi
	movl	$8, %edx
	movq	-112(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	24(%r12), %rbx
	movl	$1, (%rsp)
	movl	$87, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$85, %ecx
	movl	$3, %r8d
	movl	$86, %r9d
	callq	_KTimestamp3
	movl	$87, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 24(%r12)
	movl	$88, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2686 38               # gsm_encode.c:2686:38
	movswq	2(%r13), %rbx
	imulq	%r15, %rbx
	movl	$89, %esi
	movl	$8, %edx
	movq	-120(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	32(%r12), %rbx
	movl	$1, (%rsp)
	movl	$90, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$88, %ecx
	movl	$3, %r8d
	movl	$89, %r9d
	callq	_KTimestamp3
	movl	$90, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 32(%r12)
	movl	$91, %esi
	movl	$2, %edx
	movq	%r13, %rdi
	callq	_KLoad0
	.loc	1 2686 47               # gsm_encode.c:2686:47
	movswq	(%r13), %r14
	imulq	%r15, %r14
	leaq	40(%r12), %r15
	movq	%r15, -128(%rbp)        # 8-byte Spill
	movl	$92, %esi
	movl	$8, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	addq	40(%r12), %r14
	movl	$1, (%rsp)
	movl	$93, %edi
	movl	$75, %esi
	movl	$3, %edx
	movl	$91, %ecx
	movl	$3, %r8d
	movl	$92, %r9d
	callq	_KTimestamp3
	movl	$93, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%r14, 40(%r12)
	.loc	1 2687 2 is_stmt 1      # gsm_encode.c:2687:2
	leaq	12(%r13), %rbx
.Ltmp2120:
	#DEBUG_VALUE: sp <- RBX
	movq	%rbx, -152(%rbp)        # 8-byte Spill
	movl	$94, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2688 2                # gsm_encode.c:2688:2
	movswq	12(%r13), %r14
	movl	$95, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
.Ltmp2121:
	#DEBUG_VALUE: sp <- [RBP+-152]
	callq	_KLoad0
	movswq	12(%r13), %rbx
	movq	%r13, %r15
.Ltmp2122:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	imulq	%r14, %rbx
	movl	$96, %esi
	movl	$8, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %rbx
	movl	$1, (%rsp)
	movl	$97, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$95, %ecx
	movl	$3, %r8d
	movl	$96, %r9d
	callq	_KTimestamp3
	movl	$97, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%rbx, (%r12)
	movl	$98, %esi
	movl	$2, %edx
	movq	-144(%rbp), %rdi        # 8-byte Reload
	callq	_KLoad0
	.loc	1 2688 11 is_stmt 0     # gsm_encode.c:2688:11
	movswq	10(%r15), %rbx
	imulq	%r14, %rbx
	movl	$99, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r13         # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	8(%r12), %rbx
	movl	$1, (%rsp)
	movl	$100, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$98, %ecx
	movl	$3, %r8d
	movl	$99, %r9d
	callq	_KTimestamp3
	movl	$100, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 8(%r12)
	movl	$101, %esi
	movl	$2, %edx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2688 20               # gsm_encode.c:2688:20
	movswq	8(%r15), %rbx
	imulq	%r14, %rbx
	movl	$102, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	16(%r12), %rbx
	movl	$1, (%rsp)
	movl	$103, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$101, %ecx
	movl	$3, %r8d
	movl	$102, %r9d
	callq	_KTimestamp3
	movl	$103, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 16(%r12)
	movl	$104, %esi
	movl	$2, %edx
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2688 29               # gsm_encode.c:2688:29
	movswq	6(%r15), %rbx
	imulq	%r14, %rbx
	movl	$105, %esi
	movl	$8, %edx
	movq	-112(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	24(%r12), %rbx
	movl	$1, (%rsp)
	movl	$106, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$104, %ecx
	movl	$3, %r8d
	movl	$105, %r9d
	callq	_KTimestamp3
	movl	$106, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 24(%r12)
	movl	$107, %esi
	movl	$2, %edx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2688 38               # gsm_encode.c:2688:38
	movswq	4(%r15), %rbx
	imulq	%r14, %rbx
	movl	$108, %esi
	movl	$8, %edx
	movq	-120(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	32(%r12), %rbx
	movl	$1, (%rsp)
	movl	$109, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$107, %ecx
	movl	$3, %r8d
	movl	$108, %r9d
	callq	_KTimestamp3
	movl	$109, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 32(%r12)
	movl	$110, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2688 47               # gsm_encode.c:2688:47
	movswq	2(%r15), %rbx
	imulq	%r14, %rbx
	movl	$111, %esi
	movl	$8, %edx
	movq	-128(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	40(%r12), %rbx
	movl	$1, (%rsp)
	movl	$112, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$110, %ecx
	movl	$3, %r8d
	movl	$111, %r9d
	callq	_KTimestamp3
	movl	$112, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 40(%r12)
	movl	$113, %esi
	movl	$2, %edx
	movq	%r15, %rbx
.Ltmp2123:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2688 56               # gsm_encode.c:2688:56
	movswq	(%rbx), %r13
	movq	%rbx, %r15
.Ltmp2124:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	imulq	%r14, %r13
	leaq	48(%r12), %rdi
	movq	%rdi, -136(%rbp)        # 8-byte Spill
	movl	$114, %esi
	movl	$8, %edx
	movq	%rdi, %r14
	callq	_KLoad0
	addq	48(%r12), %r13
	movl	$1, (%rsp)
	movl	$115, %edi
	movl	$94, %esi
	movl	$3, %edx
	movl	$113, %ecx
	movl	$3, %r8d
	movl	$114, %r9d
	callq	_KTimestamp3
	movl	$115, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%r13, 48(%r12)
	.loc	1 2689 2 is_stmt 1      # gsm_encode.c:2689:2
	leaq	14(%r15), %rbx
.Ltmp2125:
	#DEBUG_VALUE: sp <- RBX
	movl	$116, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2690 2                # gsm_encode.c:2690:2
	movswq	14(%r15), %r14
	movl	$117, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	movswq	14(%r15), %r13
	imulq	%r14, %r13
	movl	$118, %esi
	movl	$8, %edx
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %r13
	movl	$1, (%rsp)
	movl	$119, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$117, %ecx
	movl	$3, %r8d
	movl	$118, %r9d
	callq	_KTimestamp3
	movl	$119, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%r13, (%r12)
	movl	$120, %esi
	movl	$2, %edx
	movq	-152(%rbp), %rdi        # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 11 is_stmt 0     # gsm_encode.c:2690:11
	movswq	12(%r15), %rbx
.Ltmp2126:
	imulq	%r14, %rbx
	movl	$121, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r13         # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	8(%r12), %rbx
	movl	$1, (%rsp)
	movl	$122, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$120, %ecx
	movl	$3, %r8d
	movl	$121, %r9d
	callq	_KTimestamp3
	movl	$122, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 8(%r12)
	movl	$123, %esi
	movl	$2, %edx
	movq	-144(%rbp), %rdi        # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 20               # gsm_encode.c:2690:20
	movswq	10(%r15), %rbx
	imulq	%r14, %rbx
	movl	$124, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	16(%r12), %rbx
	movl	$1, (%rsp)
	movl	$125, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$123, %ecx
	movl	$3, %r8d
	movl	$124, %r9d
	callq	_KTimestamp3
	movl	$125, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 16(%r12)
	movl	$126, %esi
	movl	$2, %edx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 29               # gsm_encode.c:2690:29
	movswq	8(%r15), %rbx
	imulq	%r14, %rbx
	movl	$127, %esi
	movl	$8, %edx
	movq	-112(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	24(%r12), %rbx
	movl	$1, (%rsp)
	movl	$128, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$126, %ecx
	movl	$3, %r8d
	movl	$127, %r9d
	callq	_KTimestamp3
	movl	$128, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 24(%r12)
	movl	$129, %esi
	movl	$2, %edx
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 38               # gsm_encode.c:2690:38
	movswq	6(%r15), %rbx
	imulq	%r14, %rbx
	movl	$130, %esi
	movl	$8, %edx
	movq	-120(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	32(%r12), %rbx
	movl	$1, (%rsp)
	movl	$131, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$129, %ecx
	movl	$3, %r8d
	movl	$130, %r9d
	callq	_KTimestamp3
	movl	$131, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 32(%r12)
	movl	$132, %esi
	movl	$2, %edx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 47               # gsm_encode.c:2690:47
	movswq	4(%r15), %rbx
	imulq	%r14, %rbx
	movl	$133, %esi
	movl	$8, %edx
	movq	-128(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	40(%r12), %rbx
	movl	$1, (%rsp)
	movl	$134, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$132, %ecx
	movl	$3, %r8d
	movl	$133, %r9d
	callq	_KTimestamp3
	movl	$134, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 40(%r12)
	movl	$135, %esi
	movl	$2, %edx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	.loc	1 2690 56               # gsm_encode.c:2690:56
	movswq	2(%r15), %rbx
	imulq	%r14, %rbx
	movl	$136, %esi
	movl	$8, %edx
	movq	-136(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	48(%r12), %rbx
	movl	$1, (%rsp)
	movl	$137, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$135, %ecx
	movl	$3, %r8d
	movl	$136, %r9d
	callq	_KTimestamp3
	movl	$137, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 48(%r12)
	movl	$138, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_KLoad0
	.loc	1 2690 65               # gsm_encode.c:2690:65
	movswq	(%r15), %rbx
.Ltmp2127:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	imulq	%r14, %rbx
	leaq	56(%r12), %r14
	movq	%r14, -144(%rbp)        # 8-byte Spill
	movl	$139, %esi
	movl	$8, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	addq	56(%r12), %rbx
	movl	$1, (%rsp)
	movl	$140, %edi
	movl	$116, %esi
	movl	$3, %edx
	movl	$138, %ecx
	movl	$3, %r8d
	movl	$139, %r9d
	callq	_KTimestamp3
	movl	$140, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 56(%r12)
.Ltmp2128:
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$197, %r14d
	xorl	%r13d, %r13d
	movl	$197, %edi
	movl	$198, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %esi
	movabsq	$-7941104526266206169, %rdi # imm = 0x91CB8781D3A7F827
	callq	_KEnterRegion
	.loc	1 2699 30 is_stmt 1     # gsm_encode.c:2699:30
.Ltmp2129:
	leaq	64(%r12), %rax
	movq	%rax, -152(%rbp)        # 8-byte Spill
.Ltmp2130:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	movabsq	$6647663313069065790, %r12 # imm = 0x5C413E8FF9E0C63E
	xorl	%eax, %eax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	xorl	%ebx, %ebx
	jmp	.LBB12_33
	.align	16, 0x90
.LBB12_34:                              # %for.body333
                                        #   in Loop: Header=BB12_33 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$145, %eax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movl	$145, %edi
	callq	_KPushCDep
	movl	$113, %edi
	callq	_KWork
	movq	-64(%rbp), %rcx         # 8-byte Reload
.Ltmp2131:
	#DEBUG_VALUE: Autocorrelation:s <- RCX
	movq	%r13, %r15
	movq	%r15, -48(%rbp)         # 8-byte Spill
	leaq	(%rcx,%r15), %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
	leaq	16(%rcx,%r15), %rbx
	movq	%rcx, %r14
.Ltmp2132:
	#DEBUG_VALUE: Autocorrelation:s <- R14
	movl	$141, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	.loc	1 2697 3                # gsm_encode.c:2697:3
	movswq	16(%r14,%r15), %r13
	movq	%r13, -56(%rbp)         # 8-byte Spill
	movl	$142, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_KLoad0
	movswq	16(%r14,%r15), %rbx
	imulq	%r13, %rbx
	movl	$143, %esi
	movl	$8, %edx
	movq	-72(%rbp), %r12         # 8-byte Reload
.Ltmp2133:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- R12
	movq	%r12, %rdi
	callq	_KLoad0
	addq	(%r12), %rbx
	movl	$1, 16(%rsp)
	movl	$143, 8(%rsp)
	movl	$3, (%rsp)
	movl	$144, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$142, %r9d
	callq	_KTimestamp4
	movl	$144, %edi
	movl	$8, %edx
	movq	%r12, %rsi
	callq	_KStore
	movq	%rbx, (%r12)
	leaq	14(%r14,%r15), %rdi
	movl	$147, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2698 3                # gsm_encode.c:2698:3
	movswq	14(%r14,%r15), %rbx
	imulq	%r13, %rbx
	movl	$148, %esi
	movl	$8, %edx
	movq	-96(%rbp), %r13         # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	8(%r12), %rbx
	movl	$1, 16(%rsp)
	movl	$148, 8(%rsp)
	movl	$3, (%rsp)
	movl	$149, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$147, %r9d
	callq	_KTimestamp4
	movl	$149, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 8(%r12)
	leaq	12(%r14,%r15), %rdi
	movl	$150, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2698 12 is_stmt 0     # gsm_encode.c:2698:12
	movswq	12(%r14,%r15), %rbx
	movq	-56(%rbp), %r15         # 8-byte Reload
	imulq	%r15, %rbx
	movl	$151, %esi
	movl	$8, %edx
	movq	-104(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	16(%r12), %rbx
	movl	$1, 16(%rsp)
	movl	$151, 8(%rsp)
	movl	$3, (%rsp)
	movl	$152, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$150, %r9d
	callq	_KTimestamp4
	movl	$152, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%rbx, 16(%r12)
	movq	%r14, %rbx
.Ltmp2134:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	-48(%rbp), %rax         # 8-byte Reload
	leaq	10(%rbx,%rax), %rdi
	movl	$153, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2698 21               # gsm_encode.c:2698:21
	movq	-48(%rbp), %rax         # 8-byte Reload
	movswq	10(%rbx,%rax), %r14
	imulq	%r15, %r14
	movq	-48(%rbp), %r15         # 8-byte Reload
	movl	$154, %esi
	movl	$8, %edx
	movq	-112(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	24(%r12), %r14
	movl	$1, 16(%rsp)
	movl	$154, 8(%rsp)
	movl	$3, (%rsp)
	movl	$155, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$153, %r9d
	callq	_KTimestamp4
	movl	$155, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r14, 24(%r12)
	movq	%rbx, %r13
.Ltmp2135:
	#DEBUG_VALUE: Autocorrelation:s <- R13
	leaq	8(%r13,%r15), %rdi
	movl	$156, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2698 30               # gsm_encode.c:2698:30
	movswq	8(%r13,%r15), %r14
	movq	%r13, %rbx
.Ltmp2136:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	-56(%rbp), %r15         # 8-byte Reload
	imulq	%r15, %r14
	movl	$157, %esi
	movl	$8, %edx
	movq	-120(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	32(%r12), %r14
	movl	$1, 16(%rsp)
	movl	$157, 8(%rsp)
	movl	$3, (%rsp)
	movl	$158, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$156, %r9d
	callq	_KTimestamp4
	movl	$158, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r14, 32(%r12)
	movq	%rbx, %r13
.Ltmp2137:
	#DEBUG_VALUE: Autocorrelation:s <- R13
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	6(%r13,%rbx), %rdi
	movl	$159, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2699 3 is_stmt 1      # gsm_encode.c:2699:3
	movswq	6(%r13,%rbx), %r14
	movq	%r13, %rbx
.Ltmp2138:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	imulq	%r15, %r14
	movl	$160, %esi
	movl	$8, %edx
	movq	-128(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	40(%r12), %r14
	movl	$1, 16(%rsp)
	movl	$160, 8(%rsp)
	movl	$3, (%rsp)
	movl	$161, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$159, %r9d
	callq	_KTimestamp4
	movl	$161, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r14, 40(%r12)
	movq	%rbx, %r15
.Ltmp2139:
	#DEBUG_VALUE: Autocorrelation:s <- R15
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	4(%r15,%rbx), %rdi
	movl	$162, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2699 12 is_stmt 0     # gsm_encode.c:2699:12
	movswq	4(%r15,%rbx), %r14
	movq	%r15, %rbx
.Ltmp2140:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	movq	-56(%rbp), %r15         # 8-byte Reload
	imulq	%r15, %r14
	movl	$163, %esi
	movl	$8, %edx
	movq	-136(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	48(%r12), %r14
	movl	$1, 16(%rsp)
	movl	$163, 8(%rsp)
	movl	$3, (%rsp)
	movl	$164, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$162, %r9d
	callq	_KTimestamp4
	movl	$164, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r14, 48(%r12)
	movq	%rbx, %r14
.Ltmp2141:
	#DEBUG_VALUE: Autocorrelation:s <- R14
	movq	-48(%rbp), %rbx         # 8-byte Reload
	leaq	2(%r14,%rbx), %rdi
	movl	$165, %esi
	movl	$2, %edx
	callq	_KLoad0
	.loc	1 2699 21               # gsm_encode.c:2699:21
	movswq	2(%r14,%rbx), %r14
.Ltmp2142:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	imulq	%r15, %r14
	movl	$166, %esi
	movl	$8, %edx
	movq	-144(%rbp), %r13        # 8-byte Reload
	movq	%r13, %rdi
	callq	_KLoad0
	addq	56(%r12), %r14
	movl	$1, 16(%rsp)
	movl	$166, 8(%rsp)
	movl	$3, (%rsp)
	movl	$167, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$165, %r9d
	callq	_KTimestamp4
	movl	$167, %edi
	movl	$8, %edx
	movq	%r13, %rsi
	callq	_KStore
	movq	%r14, 56(%r12)
	movl	$168, %esi
	movl	$2, %edx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_KLoad0
	movq	%rbx, %r13
	.loc	1 2699 30               # gsm_encode.c:2699:30
	movq	-64(%rbp), %rax         # 8-byte Reload
	movswq	(%rax,%r13), %rbx
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	imulq	%r15, %rbx
	movl	$169, %esi
	movl	$8, %edx
	movq	-152(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rdi
	callq	_KLoad0
	addq	64(%r12), %rbx
	movl	$1, 16(%rsp)
	movl	$169, 8(%rsp)
	movl	$3, (%rsp)
	movl	$170, %edi
	movl	$145, %esi
	movl	$3, %edx
	movl	$141, %ecx
	movl	$3, %r8d
	movl	$168, %r9d
	callq	_KTimestamp4
	movl	$170, %edi
	movl	$8, %edx
	movq	%r14, %rsi
	callq	_KStore
	movq	%rbx, 64(%r12)
.Ltmp2143:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	movl	$200, %ebx
	movl	$200, %edi
	movl	$146, %esi
	movl	$1, %edx
	movl	$145, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$199, %r14d
	movl	$199, %edi
	movl	$196, %esi
	xorl	%edx, %edx
	movl	$145, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$6647663313069065790, %rdi # imm = 0x5C413E8FF9E0C63E
	movq	%rdi, %r12
	callq	_KExitRegion
	addq	$2, %r13
.Ltmp2144:
.LBB12_33:                              # %for.cond330
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$146, %edi
	movl	%ebx, %esi
	movq	-80(%rbp), %rbx         # 8-byte Reload
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$196, %edi
	movl	%r14d, %esi
	movl	%ebx, %edx
	callq	_KPhi1To1
	movl	$1, %edi
	callq	_KWork
	movl	$145, %edi
	movl	$146, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$146, %edi
	movl	$145, %esi
	callq	_KPhiAddCond
	movl	$146, %edi
	movl	$146, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$196, %edi
	movl	$145, %esi
	callq	_KPhiAddCond
	movl	$196, %edi
	movl	$196, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	.loc	1 2693 2 is_stmt 1      # gsm_encode.c:2693:2
	cmpl	$304, %r13d             # imm = 0x130
	jne	.LBB12_34
.Ltmp2145:
# BB#35:                                # %for.cond330.pre_exit.for.end391
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movabsq	$3499080329099193248, %rbx # imm = 0x308F3B053883ABA0
	movl	$1, %esi
	movabsq	$-7941104526266206169, %rdi # imm = 0x91CB8781D3A7F827
	callq	_KExitRegion
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	xorl	%esi, %esi
	movl	$64, %r12d
	movabsq	$-1132431510364085464, %r14 # imm = 0xF048CB8A8C4A2328
	xorl	%edx, %edx
	jmp	.LBB12_36
	.align	16, 0x90
.LBB12_37:                              # %for.inc396
                                        #   in Loop: Header=BB12_36 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$174, %edi
	callq	_KPushCDep
	movl	$6, %edi
	callq	_KWork
	movq	-72(%rbp), %rbx         # 8-byte Reload
.Ltmp2146:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- RBX
	leaq	(%rbx,%r12), %r15
	movl	$171, %esi
	movl	$172, %edx
	movl	$8, %ecx
	movq	%r15, %rdi
	callq	_KLoad1
	.loc	1 2703 19               # gsm_encode.c:2703:19
.Ltmp2147:
	movq	(%rbx,%r12), %r13
	addq	%r13, %r13
	movl	$173, %edi
	movl	$174, %esi
	movl	$1, %edx
	movl	$171, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$173, %edi
	movl	$8, %edx
	movq	%r15, %rsi
	callq	_KStore
	movq	%r13, (%rbx,%r12)
.Ltmp2148:
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	movl	$174, %edx
	movl	$172, %esi
	addq	$-8, %r12
.Ltmp2149:
.LBB12_36:                              # %for.cond392
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:L_ACF <- [RBP+-72]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$175, %edi
	callq	_KPhi1To1
	movl	$2, %edi
	callq	_KWork
	movl	$174, %edi
	movl	$175, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$175, %edi
	movl	$174, %esi
	callq	_KPhiAddCond
	movl	$172, %edi
	movl	$175, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2703 2 is_stmt 0      # gsm_encode.c:2703:2
	cmpl	$-8, %r12d
	jne	.LBB12_37
.Ltmp2150:
# BB#38:                                # %for.cond392.pre_exit.for.end400
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$1, %esi
	movabsq	$3499080329099193248, %rdi # imm = 0x308F3B053883ABA0
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$178, %edi
	movl	$10, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 2708 6 is_stmt 1      # gsm_encode.c:2708:6
	movl	-164(%rbp), %eax        # 4-byte Reload
	testw	%ax, %ax
	jle	.LBB12_43
# BB#39:                                # %if.then404
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movabsq	$-6071086425446282571, %rbx # imm = 0xABBF2B0FE2940AB5
	movl	$178, %edi
	callq	_KPushCDep
.Ltmp2151:
	#DEBUG_VALUE: Autocorrelation:k <- 160
	movl	$198, %r13d
	xorl	%r12d, %r12d
	movl	$198, %edi
	movl	$198, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movabsq	$-2403401980257019198, %r15 # imm = 0xDEA566A1FA4F5AC2
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	jmp	.LBB12_40
	.align	16, 0x90
.LBB12_41:                              # %for.inc409
                                        #   in Loop: Header=BB12_40 Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 160
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$179, %edi
	callq	_KPushCDep
	movl	$6, %edi
	callq	_KWork
	movq	-64(%rbp), %rbx         # 8-byte Reload
.Ltmp2152:
	#DEBUG_VALUE: Autocorrelation:s <- RBX
	leaq	(%rbx,%r12), %r14
	movl	$176, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_KLoad0
	.loc	1 2710 22               # gsm_encode.c:2710:22
.Ltmp2153:
	movswl	(%rbx,%r12), %r13d
	movq	-160(%rbp), %rcx        # 8-byte Reload
                                        # kill: CL<def> CL<kill> RCX<kill>
	shll	%cl, %r13d
	movl	$1, (%rsp)
	movl	$177, %edi
	movl	$10, %esi
	movl	$1, %edx
	movl	$179, %ecx
	movl	$1, %r8d
	movl	$176, %r9d
	callq	_KTimestamp3
	movl	$177, %edi
	movl	$2, %edx
	movq	%r14, %rsi
	callq	_KStore
	movw	%r13w, (%rbx,%r12)
.Ltmp2154:
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	movl	$179, %ebx
	movl	$203, %r13d
	movl	$203, %edi
	movl	$202, %esi
	xorl	%edx, %edx
	movl	$179, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	addq	$2, %r12
	movl	$201, %r14d
.Ltmp2155:
.LBB12_40:                              # %for.cond405
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: Autocorrelation:s <- [RBP+-64]
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 160
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$178, %edi
	callq	_KPushCDep
	movl	$202, %edi
	movl	$178, %edx
	movl	%r13d, %esi
	movl	%ebx, %ecx
	callq	_KPhi2To1
	movl	$180, %edi
	movl	$178, %edx
	movl	%r14d, %esi
	movl	%ebx, %ecx
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$179, %edi
	movl	$178, %esi
	movl	$1, %edx
	movl	$180, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$202, %edi
	movl	$179, %esi
	callq	_KPhiAddCond
	movl	$202, %edi
	movl	$202, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$180, %edi
	movl	$179, %esi
	callq	_KPhiAddCond
	movl	$201, %edi
	movl	$178, %esi
	movl	$1, %edx
	movl	$180, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	.loc	1 2710 3 is_stmt 0      # gsm_encode.c:2710:3
	cmpl	$320, %r12d             # imm = 0x140
	jne	.LBB12_41
.Ltmp2156:
# BB#42:                                # %for.cond405.pre_exit.if.end416.loopexit
	#DEBUG_VALUE: Autocorrelation:smax <- 0
	#DEBUG_VALUE: Autocorrelation:k <- 160
	#DEBUG_VALUE: Autocorrelation:i <- 8
	movl	$1, %esi
	movabsq	$-6071086425446282571, %rdi # imm = 0xABBF2B0FE2940AB5
	callq	_KExitRegion
	movl	$178, %edi
	callq	_KPushCDep
	callq	_KPopCDep
.LBB12_43:                              # %if.end416
	#DEBUG_VALUE: Autocorrelation:smax <- 0
.Ltmp2157:
	#DEBUG_VALUE: Autocorrelation:k <- 9
	#DEBUG_VALUE: Autocorrelation:i <- 8
	xorl	%esi, %esi
	movabsq	$-2847411510867628974, %rdi # imm = 0xD87BF6512D606C52
	addq	$152, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	jmp	_KExitRegion            # TAILCALL
.Ltmp2158:
	.size	Autocorrelation, .Ltmp2158-Autocorrelation
.Lfunc_end12:
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI12_0:
	.quad	.LBB12_15
	.quad	.LBB12_19
	.quad	.LBB12_22
	.quad	.LBB12_25

	.text
	.globl	gsm_norm
	.align	16, 0x90
	.type	gsm_norm,@function
gsm_norm:                               # @gsm_norm
.Lfunc_begin13:
	.loc	1 3030 0 is_stmt 1      # gsm_encode.c:3030:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2159:
	.cfi_def_cfa_offset 16
.Ltmp2160:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2161:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
.Ltmp2162:
	.cfi_offset %rbx, -56
.Ltmp2163:
	.cfi_offset %r12, -48
.Ltmp2164:
	.cfi_offset %r13, -40
.Ltmp2165:
	.cfi_offset %r14, -32
.Ltmp2166:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_norm:a <- RDI
	movq	%rdi, %rbx
.Ltmp2167:
	#DEBUG_VALUE: gsm_norm:a <- RBX
	movabsq	$-1163311540381425532, %r14 # imm = 0xEFDB16514873E084
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$24, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$1, %r12d
	movl	$1, %edi
	callq	_KWork
	movl	$1, %edi
	callq	_KDeqArg
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$13, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	.loc	1 3031 7 prologue_end   # gsm_encode.c:3031:7
.Ltmp2168:
	testq	%rbx, %rbx
	js	.LBB13_2
.Ltmp2169:
# BB#1:
	#DEBUG_VALUE: gsm_norm:a <- RBX
	movq	%r14, %r13
	movq	%rbx, %r14
.Ltmp2170:
	#DEBUG_VALUE: gsm_norm:a <- R14
	jmp	.LBB13_5
.Ltmp2171:
.LBB13_2:                               # %if.then
	#DEBUG_VALUE: gsm_norm:a <- RBX
	movl	$13, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	movl	$14, %r15d
	movl	$14, %edi
	movl	$1, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$14, %edi
	callq	_KPushCDep
	.loc	1 3032 9                # gsm_encode.c:3032:9
.Ltmp2172:
	cmpq	$-1073741824, %rbx      # imm = 0xFFFFFFFFC0000000
	jg	.LBB13_4
.Ltmp2173:
# BB#3:                                 # %if.then2
	callq	_KPopCDep
	xorl	%r15d, %r15d
	movl	$14, %ebx
	xorl	%r13d, %r13d
	jmp	.LBB13_15
.LBB13_4:                               # %if.end
.Ltmp2174:
	#DEBUG_VALUE: gsm_norm:a <- RBX
	movq	%r14, %r13
	movl	$1, %edi
	callq	_KWork
	.loc	1 3033 9                # gsm_encode.c:3033:9
	notq	%rbx
.Ltmp2175:
	movq	%rbx, %r14
.Ltmp2176:
	#DEBUG_VALUE: gsm_norm:a <- R14
	movl	$12, %r12d
	movl	$12, %edi
	movl	$1, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
.Ltmp2177:
.LBB13_5:                               # %if.end3
	movl	$13, %edi
	callq	_KPushCDep
	movl	$11, %edi
	movl	$13, %edx
	movl	%r12d, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$4278190080, %r15d      # imm = 0xFF000000
	.loc	1 3036 13               # gsm_encode.c:3036:13
	leaq	16711680(%r15), %rbx
	movl	$20, %edi
	movl	$1, %esi
	movl	$3, %edx
	movl	$11, %ecx
	movl	$2, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$20, %edi
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
	testq	%rbx, %r14
	movq	%r14, %rbx
	je	.LBB13_10
# BB#6:                                 # %cond.true
	movl	$21, %r12d
	movl	$21, %edi
	movl	$1, %esi
	movl	$5, %edx
	movl	$11, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$21, %edi
	callq	_KPushCDep
	movl	$7, %edi
	callq	_KWork
	.loc	1 3037 9                # gsm_encode.c:3037:9
	testq	%r15, %rbx
	movq	%r13, %r14
	je	.LBB13_9
# BB#7:                                 # %cond.true6
	.loc	1 3038 26               # gsm_encode.c:3038:26
	shrq	$24, %rbx
	.loc	1 3038 18 is_stmt 0     # gsm_encode.c:3038:18
	movzbl	%bl, %ebx
	.loc	1 3038 10               # gsm_encode.c:3038:10
	leaq	bitoff(%rbx), %rdi
	movl	$2, %esi
	movl	$3, %edx
	movl	$1, %ecx
	callq	_KLoad1
	movzbl	bitoff(%rbx), %r13d
	.loc	1 3038 5                # gsm_encode.c:3038:5
	decl	%r13d
	movl	$1, (%rsp)
	movl	$16, %ebx
	movl	$16, %edi
	movl	$1, %esi
	movl	$6, %edx
	movl	$11, %ecx
	movl	$5, %r8d
	movl	$2, %r9d
	jmp	.LBB13_8
.LBB13_10:                              # %cond.false13
	movl	$22, %r15d
	movl	$22, %edi
	movl	$1, %esi
	movl	$5, %edx
	movl	$11, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$22, %edi
	callq	_KPushCDep
	.loc	1 3040 9 is_stmt 1      # gsm_encode.c:3040:9
	testb	$-1, %bh
	movq	%r13, %r14
	je	.LBB13_12
# BB#11:                                # %cond.true16
	movl	$7, %edi
	callq	_KWork
	.loc	1 3041 18               # gsm_encode.c:3041:18
	movzbl	%bh, %ebx  # NOREX
	.loc	1 3041 10 is_stmt 0     # gsm_encode.c:3041:10
	leaq	bitoff(%rbx), %rdi
	movl	$6, %esi
	movl	$7, %edx
	movl	$1, %ecx
	callq	_KLoad1
	movzbl	bitoff(%rbx), %r13d
	.loc	1 3041 5                # gsm_encode.c:3041:5
	addl	$15, %r13d
	movl	$1, (%rsp)
	movl	$18, %ebx
	movl	$18, %edi
	movl	$1, %esi
	movl	$6, %edx
	movl	$11, %ecx
	movl	$5, %r8d
	movl	$6, %r9d
	jmp	.LBB13_13
.LBB13_9:                               # %cond.false
	.loc	1 3039 26 is_stmt 1     # gsm_encode.c:3039:26
	shrq	$16, %rbx
	.loc	1 3039 18 is_stmt 0     # gsm_encode.c:3039:18
	movzbl	%bl, %ebx
	.loc	1 3039 10               # gsm_encode.c:3039:10
	leaq	bitoff(%rbx), %rdi
	movl	$4, %esi
	movl	$5, %edx
	movl	$1, %ecx
	callq	_KLoad1
	movzbl	bitoff(%rbx), %r13d
	.loc	1 3039 6                # gsm_encode.c:3039:6
	addl	$7, %r13d
	movl	$1, (%rsp)
	movl	$17, %ebx
	movl	$17, %edi
	movl	$1, %esi
	movl	$6, %edx
	movl	$11, %ecx
	movl	$5, %r8d
	movl	$4, %r9d
.LBB13_8:                               # %cond.end29
	callq	_KTimestamp3
	callq	_KPopCDep
	xorl	%r15d, %r15d
	jmp	.LBB13_14
.LBB13_12:                              # %cond.false22
	movl	$6, %edi
	callq	_KWork
	.loc	1 3042 18 is_stmt 1     # gsm_encode.c:3042:18
	movzbl	%bl, %ebx
	.loc	1 3042 10 is_stmt 0     # gsm_encode.c:3042:10
	leaq	bitoff(%rbx), %rdi
	movl	$8, %esi
	movl	$9, %edx
	movl	$1, %ecx
	callq	_KLoad1
	movzbl	bitoff(%rbx), %r13d
	.loc	1 3042 5                # gsm_encode.c:3042:5
	addl	$23, %r13d
	movl	$1, (%rsp)
	movl	$19, %ebx
	movl	$19, %edi
	movl	$1, %esi
	movl	$6, %edx
	movl	$11, %ecx
	movl	$5, %r8d
	movl	$8, %r9d
.LBB13_13:                              # %cond.end29
	callq	_KTimestamp3
	callq	_KPopCDep
	xorl	%r12d, %r12d
.LBB13_14:                              # %cond.end29
	movl	$13, %edi
	callq	_KPushCDep
	movl	$15, %edi
	movl	$13, %edx
	movl	$20, %ecx
	movl	%ebx, %esi
	movl	%r12d, %r8d
	movl	%r15d, %r9d
	callq	_KPhi4To1
	movl	$23, %r15d
	xorl	%ebx, %ebx
	movl	$23, %edi
	movl	$1, %esi
	movl	$1, %edx
	movl	$15, %ecx
	xorl	%r8d, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
.LBB13_15:                              # %return
	movl	$10, %edi
	movl	$13, %edx
	movl	%r15d, %esi
	movl	%ebx, %ecx
	callq	_KPhi2To1
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$10, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	.loc	1 3043 1 is_stmt 1      # gsm_encode.c:3043:1
	movswl	%r13w, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2178:
.Ltmp2179:
	.size	gsm_norm, .Ltmp2179-gsm_norm
.Lfunc_end13:
	.cfi_endproc

	.globl	gsm_asl
	.align	16, 0x90
	.type	gsm_asl,@function
gsm_asl:                                # @gsm_asl
.Lfunc_begin14:
	.loc	1 3046 0                # gsm_encode.c:3046:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2180:
	.cfi_def_cfa_offset 16
.Ltmp2181:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2182:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
.Ltmp2183:
	.cfi_offset %rbx, -56
.Ltmp2184:
	.cfi_offset %r12, -48
.Ltmp2185:
	.cfi_offset %r13, -40
.Ltmp2186:
	.cfi_offset %r14, -32
.Ltmp2187:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_asl:a <- EDI
	#DEBUG_VALUE: gsm_asl:n <- ESI
	movl	%esi, %ebx
.Ltmp2188:
	#DEBUG_VALUE: gsm_asl:n <- EBX
	movl	%edi, %r15d
.Ltmp2189:
	#DEBUG_VALUE: gsm_asl:a <- R15D
	movabsq	$1795293052235213982, %rdi # imm = 0x18EA2984E634EC9E
	xorl	%r14d, %r14d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$11, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KWork
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	movl	$8, %edi
	movl	$2, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$8, %edi
	callq	_KPushCDep
	.loc	1 3047 7 prologue_end   # gsm_encode.c:3047:7
.Ltmp2190:
	cmpl	$16, %ebx
	jl	.LBB14_2
.Ltmp2191:
# BB#1:                                 # %if.then
	callq	_KPopCDep
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	xorl	%r15d, %r15d
	jmp	.LBB14_8
.LBB14_2:                               # %if.end
.Ltmp2192:
	#DEBUG_VALUE: gsm_asl:a <- R15W
	#DEBUG_VALUE: gsm_asl:n <- EBX
	movl	$1, %edi
	callq	_KWork
	movl	$9, %r14d
	movl	$9, %edi
	movl	$2, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$9, %edi
	callq	_KPushCDep
	.loc	1 3048 7                # gsm_encode.c:3048:7
	cmpl	$-16, %ebx
	jg	.LBB14_4
.Ltmp2193:
# BB#3:                                 # %if.then2
	#DEBUG_VALUE: gsm_asl:a <- R15W
	movl	$2, %edi
	callq	_KWork
	.loc	1 3048 24 is_stmt 0     # gsm_encode.c:3048:24
.Ltmp2194:
	sarw	$15, %r15w
.Ltmp2195:
	movl	$6, %r12d
	movl	$6, %edi
	movl	$1, %esi
	movl	$2, %edx
	movl	$2, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	xorl	%r13d, %r13d
	jmp	.LBB14_8
.Ltmp2196:
.LBB14_4:                               # %if.end6
	#DEBUG_VALUE: gsm_asl:a <- R15W
	#DEBUG_VALUE: gsm_asl:n <- EBX
	movl	$1, %edi
	callq	_KWork
	movl	$10, %r13d
	movl	$3, %r12d
	movl	$10, %edi
	movl	$2, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$10, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 3049 7 is_stmt 1      # gsm_encode.c:3049:7
	testl	%ebx, %ebx
	js	.LBB14_5
.Ltmp2197:
# BB#6:                                 # %if.end11
	#DEBUG_VALUE: gsm_asl:a <- R15W
	#DEBUG_VALUE: gsm_asl:n <- EBX
	.loc	1 3050 10               # gsm_encode.c:3050:10
	movswl	%r15w, %r15d
.Ltmp2198:
	movb	%bl, %cl
	shll	%cl, %r15d
	movl	$7, %r12d
	movl	$7, %edi
	movl	$1, %esi
	movl	$1, %edx
	movl	$2, %ecx
	movl	$4, %r8d
	callq	_KTimestamp2
	jmp	.LBB14_7
.Ltmp2199:
.LBB14_5:                               # %if.then9
	#DEBUG_VALUE: gsm_asl:a <- R15W
	#DEBUG_VALUE: gsm_asl:n <- EBX
	.loc	1 3049 32               # gsm_encode.c:3049:32
	negl	%ebx
.Ltmp2200:
	movabsq	$1120174382790256869, %rdi # imm = 0xF8BA8AA8CB4A8E5
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$4, %edi
	movl	$2, %esi
	movl	$4, %edx
	callq	_KTimestamp1
	movl	$4, %edi
	callq	_KEnqArg
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %edi
	callq	_KEnqArg
	movl	$3, %edi
	callq	_KLinkReturn
	.loc	1 3049 21 is_stmt 0     # gsm_encode.c:3049:21
	movswl	%r15w, %edi
	movl	%ebx, %esi
	callq	gsm_asr
	movw	%ax, %r15w
.Ltmp2201:
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
.Ltmp2202:
.LBB14_7:                               # %return
	callq	_KPopCDep
	movl	$9, %r14d
.LBB14_8:                               # %return
	movabsq	$1795293052235213982, %rbx # imm = 0x18EA2984E634EC9E
	movl	$5, %edi
	movl	$8, %edx
	movl	%r12d, %esi
	movl	%r14d, %ecx
	movl	%r13d, %r8d
	callq	_KPhi3To1
	movl	$5, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%rbx, %rdi
	callq	_KExitRegion
	.loc	1 3051 1 is_stmt 1      # gsm_encode.c:3051:1
	movswl	%r15w, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2203:
.Ltmp2204:
	.size	gsm_asl, .Ltmp2204-gsm_asl
.Lfunc_end14:
	.cfi_endproc

	.globl	gsm_asr
	.align	16, 0x90
	.type	gsm_asr,@function
gsm_asr:                                # @gsm_asr
.Lfunc_begin15:
	.loc	1 3077 0                # gsm_encode.c:3077:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2205:
	.cfi_def_cfa_offset 16
.Ltmp2206:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2207:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
.Ltmp2208:
	.cfi_offset %rbx, -56
.Ltmp2209:
	.cfi_offset %r12, -48
.Ltmp2210:
	.cfi_offset %r13, -40
.Ltmp2211:
	.cfi_offset %r14, -32
.Ltmp2212:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_asr:a <- EDI
	#DEBUG_VALUE: gsm_asr:n <- ESI
	movl	%esi, %r13d
.Ltmp2213:
	#DEBUG_VALUE: gsm_asr:n <- R13D
	movl	%edi, %r12d
.Ltmp2214:
	#DEBUG_VALUE: gsm_asr:a <- R12W
	movabsq	$2080119654507779209, %r14 # imm = 0x1CDE11CE093E9489
	xorl	%r15d, %r15d
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$10, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KWork
	movl	$7, %edi
	movl	$2, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$7, %edi
	callq	_KPushCDep
	.loc	1 3078 7 prologue_end   # gsm_encode.c:3078:7
.Ltmp2215:
	cmpl	$16, %r13d
	jl	.LBB15_2
.Ltmp2216:
# BB#1:                                 # %if.then
	#DEBUG_VALUE: gsm_asr:a <- R12W
	movl	$2, %edi
	callq	_KWork
	.loc	1 3078 23 is_stmt 0     # gsm_encode.c:3078:23
.Ltmp2217:
	sarw	$15, %r12w
.Ltmp2218:
	movl	$4, %r13d
	movl	$4, %edi
	movl	$1, %esi
	movl	$2, %edx
	movl	$2, %ecx
	movl	$3, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	xorl	%ebx, %ebx
	jmp	.LBB15_8
.Ltmp2219:
.LBB15_2:                               # %if.end
	#DEBUG_VALUE: gsm_asr:a <- R12W
	#DEBUG_VALUE: gsm_asr:n <- R13D
	movl	$1, %edi
	callq	_KWork
	movl	$8, %ebx
	movl	$8, %edi
	movl	$2, %esi
	movl	$2, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$8, %edi
	callq	_KPushCDep
	.loc	1 3079 7 is_stmt 1      # gsm_encode.c:3079:7
	cmpl	$-16, %r13d
	jg	.LBB15_4
.Ltmp2220:
# BB#3:                                 # %if.then6
	callq	_KPopCDep
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
	jmp	.LBB15_8
.LBB15_4:                               # %if.end7
.Ltmp2221:
	#DEBUG_VALUE: gsm_asr:a <- R12W
	#DEBUG_VALUE: gsm_asr:n <- R13D
	movl	$1, %edi
	callq	_KWork
	.loc	1 3080 21 discriminator 1 # gsm_encode.c:3080:21
.Ltmp2222:
	movswl	%r12w, %r12d
.Ltmp2223:
	movl	$9, %r15d
	movl	$9, %edi
	movl	$2, %esi
	movl	$3, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$9, %edi
	callq	_KPushCDep
.Ltmp2224:
	.loc	1 3080 7 is_stmt 0      # gsm_encode.c:3080:7
	testl	%r13d, %r13d
	js	.LBB15_5
.Ltmp2225:
# BB#6:                                 # %if.end14
	#DEBUG_VALUE: gsm_asr:n <- R13D
	movl	$1, %edi
	callq	_KWork
	.loc	1 3083 10 is_stmt 1     # gsm_encode.c:3083:10
	movb	%r13b, %cl
	sarl	%cl, %r12d
	movl	$6, %r13d
.Ltmp2226:
	movl	$6, %edi
	movl	$1, %esi
	movl	$1, %edx
	movl	$2, %ecx
	movl	$4, %r8d
	jmp	.LBB15_7
.LBB15_5:                               # %if.then10
.Ltmp2227:
	#DEBUG_VALUE: gsm_asr:n <- R13D
	movl	$2, %edi
	callq	_KWork
	.loc	1 3080 26               # gsm_encode.c:3080:26
.Ltmp2228:
	negl	%r13d
.Ltmp2229:
	.loc	1 3080 21 is_stmt 0     # gsm_encode.c:3080:21
	movb	%r13b, %cl
	shll	%cl, %r12d
	movl	$5, %r13d
	movl	$5, %edi
	movl	$1, %esi
	movl	$1, %edx
	movl	$2, %ecx
	movl	$5, %r8d
.Ltmp2230:
.LBB15_7:                               # %return
	callq	_KTimestamp2
	callq	_KPopCDep
	movl	$8, %ebx
.LBB15_8:                               # %return
	movl	$3, %edi
	movl	$7, %edx
	movl	%r13d, %esi
	movl	%ebx, %ecx
	movl	%r15d, %r8d
	callq	_KPhi3To1
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	.loc	1 3088 1 is_stmt 1      # gsm_encode.c:3088:1
	movswl	%r12w, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2231:
.Ltmp2232:
	.size	gsm_asr, .Ltmp2232-gsm_asr
.Lfunc_end15:
	.cfi_endproc

	.globl	gsm_div
	.align	16, 0x90
	.type	gsm_div,@function
gsm_div:                                # @gsm_div
.Lfunc_begin16:
	.loc	1 3100 0                # gsm_encode.c:3100:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2233:
	.cfi_def_cfa_offset 16
.Ltmp2234:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2235:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
.Ltmp2236:
	.cfi_offset %rbx, -56
.Ltmp2237:
	.cfi_offset %r12, -48
.Ltmp2238:
	.cfi_offset %r13, -40
.Ltmp2239:
	.cfi_offset %r14, -32
.Ltmp2240:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: gsm_div:num <- EDI
	#DEBUG_VALUE: gsm_div:denum <- ESI
.Ltmp2241:
	#DEBUG_VALUE: gsm_div:L_num <- EDI
	#DEBUG_VALUE: gsm_div:L_denum <- ESI
	movl	%esi, %r15d
.Ltmp2242:
	#DEBUG_VALUE: gsm_div:L_denum <- R15D
	#DEBUG_VALUE: gsm_div:denum <- R15D
	movl	%edi, %r12d
.Ltmp2243:
	#DEBUG_VALUE: gsm_div:L_num <- R12W
	#DEBUG_VALUE: gsm_div:num <- R12W
	movabsq	$-1612406552644628961, %rdi # imm = 0xE99F94C8841ACE1F
	xorl	%r14d, %r14d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$19, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KWork
	movl	$2, %edi
	callq	_KDeqArg
	movl	$1, %edi
	callq	_KDeqArg
	movl	$7, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$14, %edi
	movl	$2, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$5, %r13d
	movl	$5, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$7, %edi
	callq	_KPushCDep
	callq	_KPopCDep
.Ltmp2244:
	#DEBUG_VALUE: gsm_div:k <- 15
	#DEBUG_VALUE: gsm_div:div <- 0
	.loc	1 3111 7 prologue_end   # gsm_encode.c:3111:7
	testw	%r12w, %r12w
	movl	$0, %ebx
	je	.LBB16_8
.Ltmp2245:
# BB#1:                                 # %while.cond.preheader1
	#DEBUG_VALUE: gsm_div:num <- R12W
	#DEBUG_VALUE: gsm_div:denum <- R15D
	#DEBUG_VALUE: gsm_div:L_num <- R12W
	#DEBUG_VALUE: gsm_div:L_denum <- R15D
	#DEBUG_VALUE: gsm_div:div <- 0
	#DEBUG_VALUE: gsm_div:k <- 15
	.loc	1 3102 22               # gsm_encode.c:3102:22
	movslq	%r15d, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movabsq	$-686353020139284831, %rdi # imm = 0xF67995908C14D6A1
	.loc	1 3101 22               # gsm_encode.c:3101:22
	movswq	%r12w, %r12
.Ltmp2246:
	movl	$1, %esi
	callq	_KEnterRegion
	xorl	%r15d, %r15d
.Ltmp2247:
	movl	$-16, %ebx
	movl	$0, -44(%rbp)           # 4-byte Folded Spill
	movl	$0, -48(%rbp)           # 4-byte Folded Spill
	xorl	%r14d, %r14d
	jmp	.LBB16_2
	.align	16, 0x90
.LBB16_5:                               # %while.cond.backedge
                                        #   in Loop: Header=BB16_2 Depth=1
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	$8, %r15d
	movl	$8, %edi
	callq	_KPushCDep
	movl	$11, -44(%rbp)          # 4-byte Folded Spill
	movl	$11, %edi
	movl	$8, %edx
	movl	$16, %ecx
	movl	%r13d, %esi
	callq	_KPhi2To1
	movl	$6, %r13d
	movl	$6, %edi
	movl	$8, %edx
	movl	$16, %ecx
	movl	%r14d, %esi
	callq	_KPhi2To1
	movl	$11, %edi
	movl	$11, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	callq	_KPopCDep
	movl	$2, %esi
	movabsq	$-3202087925747415952, %rdi # imm = 0xD38FE5FF36420470
	callq	_KExitRegion
	movl	$12, %r14d
	movl	-52(%rbp), %ebx         # 4-byte Reload
.LBB16_2:                               # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: gsm_div:div <- 0
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	$7, %edi
	callq	_KPushCDep
	movl	$4, %edi
	movl	$7, %edx
	movl	%r13d, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$10, %edi
	movl	$7, %edx
	movl	-44(%rbp), %esi         # 4-byte Reload
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$9, %edi
	movl	$7, %edx
	movl	%r14d, %esi
	movl	%r15d, %ecx
	callq	_KPhi2To1
	movl	$2, %edi
	callq	_KWork
	movl	$8, %edi
	movl	$7, %esi
	movl	$1, %edx
	movl	$9, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$9, %edi
	movl	$8, %esi
	callq	_KPhiAddCond
	movl	$4, %edi
	movl	$4, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$4, %edi
	movl	$8, %esi
	callq	_KPhiAddCond
	movl	$10, %edi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$12, %edi
	movl	$7, %esi
	movl	$1, %edx
	movl	$9, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$10, %edi
	movl	$8, %esi
	callq	_KPhiAddCond
	callq	_KPopCDep
	.loc	1 3115 3                # gsm_encode.c:3115:3
	incl	%ebx
	je	.LBB16_7
# BB#3:                                 # %while.body
                                        #   in Loop: Header=BB16_2 Depth=1
	#DEBUG_VALUE: gsm_div:div <- 0
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	%ebx, -52(%rbp)         # 4-byte Spill
	movl	$2, %esi
	movabsq	$-3202087925747415952, %rdi # imm = 0xD38FE5FF36420470
	callq	_KEnterRegion
	movl	$8, %edi
	callq	_KPushCDep
	movl	$3, %edi
	callq	_KWork
	movl	-48(%rbp), %ebx         # 4-byte Reload
	.loc	1 3116 5                # gsm_encode.c:3116:5
.Ltmp2248:
	addl	%ebx, %ebx
.Ltmp2249:
	#DEBUG_VALUE: gsm_div:div <- BX
	.loc	1 3117 5                # gsm_encode.c:3117:5
	addq	%r12, %r12
.Ltmp2250:
	#DEBUG_VALUE: gsm_div:L_num <- R12
	movl	$2, (%rsp)
	movl	$16, %edi
	movl	$14, %esi
	movl	$1, %edx
	movl	$4, %ecx
	movl	$2, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	movl	$15, %r14d
	movl	$15, %edi
	movl	$4, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	movl	$18, %r13d
	movl	$18, %edi
	movl	$10, %esi
	movl	$1, %edx
	movl	$8, %ecx
	movl	$1, %r8d
	callq	_KTimestamp2
	callq	_KPopCDep
	movq	%r12, %rax
.Ltmp2251:
	#DEBUG_VALUE: gsm_div:L_num <- RAX
	.loc	1 3119 9                # gsm_encode.c:3119:9
                                        # kill: R12<def> RAX<kill>
	subq	-64(%rbp), %r12         # 8-byte Folded Reload
	jge	.LBB16_6
.Ltmp2252:
# BB#4:                                 #   in Loop: Header=BB16_2 Depth=1
	#DEBUG_VALUE: gsm_div:L_num <- RAX
	#DEBUG_VALUE: gsm_div:div <- BX
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	%ebx, -48(%rbp)         # 4-byte Spill
.Ltmp2253:
	#DEBUG_VALUE: gsm_div:div <- [RBP+-48]
	movq	%rax, %r12
.Ltmp2254:
	#DEBUG_VALUE: gsm_div:L_num <- R12
	jmp	.LBB16_5
.Ltmp2255:
	.align	16, 0x90
.LBB16_6:                               # %if.then9
                                        #   in Loop: Header=BB16_2 Depth=1
	#DEBUG_VALUE: gsm_div:div <- BX
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	$16, %edi
	callq	_KPushCDep
	movl	$2, %edi
	callq	_KWork
.Ltmp2256:
	#DEBUG_VALUE: gsm_div:L_num <- R12
	.loc	1 3121 7                # gsm_encode.c:3121:7
	orl	$1, %ebx
.Ltmp2257:
	movl	%ebx, -48(%rbp)         # 4-byte Spill
.Ltmp2258:
	#DEBUG_VALUE: gsm_div:div <- [RBP+-48]
	movl	$3, (%rsp)
	movl	$13, %r14d
	movl	$13, %edi
	movl	$14, %esi
	movl	$2, %edx
	movl	$4, %ecx
	movl	$3, %r8d
	movl	$8, %r9d
	callq	_KTimestamp3
	movl	$3, 16(%rsp)
	movl	$8, 8(%rsp)
	movl	$2, (%rsp)
	movl	$17, %r13d
	movl	$17, %edi
	movl	$14, %esi
	movl	$2, %edx
	movl	$4, %ecx
	movl	$3, %r8d
	movl	$10, %r9d
	callq	_KTimestamp4
	callq	_KPopCDep
	jmp	.LBB16_5
.Ltmp2259:
.LBB16_7:                               # %while.cond.pre_exit.while.end
	#DEBUG_VALUE: gsm_div:div <- 0
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	$1, %esi
	movabsq	$-686353020139284831, %rdi # imm = 0xF67995908C14D6A1
	callq	_KExitRegion
	movl	$7, %edi
	callq	_KPushCDep
	callq	_KPopCDep
	movl	$10, %r14d
	movl	-48(%rbp), %ebx         # 4-byte Reload
.LBB16_8:                               # %return
	#DEBUG_VALUE: gsm_div:div <- 0
	#DEBUG_VALUE: gsm_div:k <- 15
	movl	$3, %edi
	movl	$7, %edx
	movl	%r14d, %esi
	callq	_KPhi1To1
	movl	$3, %edi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$3, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movabsq	$-1612406552644628961, %rdi # imm = 0xE99F94C8841ACE1F
	callq	_KExitRegion
	.loc	1 3126 1                # gsm_encode.c:3126:1
	movswl	%bx, %eax
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2260:
.Ltmp2261:
	.size	gsm_div, .Ltmp2261-gsm_div
.Lfunc_end16:
	.cfi_endproc

	.globl	create
	.align	16, 0x90
	.type	create,@function
create:                                 # @create
.Lfunc_begin17:
	.loc	1 3131 0                # gsm_encode.c:3131:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2262:
	.cfi_def_cfa_offset 16
.Ltmp2263:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2264:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
.Ltmp2265:
	.cfi_offset %rbx, -48
.Ltmp2266:
	.cfi_offset %r12, -40
.Ltmp2267:
	.cfi_offset %r14, -32
.Ltmp2268:
	.cfi_offset %r15, -24
	movabsq	$-2173943935308768587, %r15 # imm = 0xE1D49982464E5AB5
	movabsq	$4510880633524666213, %r14 # imm = 0x3E99DE09596D3F65
	xorl	%ebx, %ebx
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KEnterRegion
	movl	$3, %edi
	movl	$2, %esi
	callq	_KPrepRTable
.Ltmp2269:
	#DEBUG_VALUE: create:i <- 0
	movl	$1, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$2, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movabsq	$2947448862466950197, %r12 # imm = 0x28E7711FC8F8C435
	.align	16, 0x90
.LBB17_1:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: create:i <- 0
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$2, %edi
	callq	_KPushCDep
	movl	$1, %edi
	callq	_KWork
	.loc	1 3139 5 prologue_end   # gsm_encode.c:3139:5
.Ltmp2270:
	leaq	gsmstate(%rbx), %rdi
	movl	$1, %esi
	callq	_KStoreConst
	movb	$0, gsmstate(%rbx)
	.loc	1 3138 3                # gsm_encode.c:3138:3
	incq	%rbx
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$2, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
.Ltmp2271:
	.loc	1 3138 3 is_stmt 0      # gsm_encode.c:3138:3
	cmpq	$656, %rbx              # imm = 0x290
	jne	.LBB17_1
.Ltmp2272:
# BB#2:                                 # %for.cond.pre_exit.for.end
	#DEBUG_VALUE: create:i <- 0
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$gsmstate+630, %edi
	movl	$2, %esi
	callq	_KStoreConst
	.loc	1 3141 3 is_stmt 1      # gsm_encode.c:3141:3
	movw	$40, gsmstate+630(%rip)
	xorl	%esi, %esi
	movq	%r14, %rdi
	callq	_KExitRegion
	movl	$gsmstate, %eax
	.loc	1 3143 3                # gsm_encode.c:3143:3
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2273:
.Ltmp2274:
	.size	create, .Ltmp2274-create
.Lfunc_end17:
	.cfi_endproc

	.globl	encode
	.align	16, 0x90
	.type	encode,@function
encode:                                 # @encode
.Lfunc_begin18:
	.loc	1 3147 0                # gsm_encode.c:3147:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2275:
	.cfi_def_cfa_offset 16
.Ltmp2276:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2277:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
.Ltmp2278:
	.cfi_offset %rbx, -56
.Ltmp2279:
	.cfi_offset %r12, -48
.Ltmp2280:
	.cfi_offset %r13, -40
.Ltmp2281:
	.cfi_offset %r14, -32
.Ltmp2282:
	.cfi_offset %r15, -24
	movabsq	$-1538276430124248517, %rdi # imm = 0xEAA6F1BCA816923B
	movabsq	$-1979131161113280393, %r15 # imm = 0xE488B6B1E1EFC077
	xorl	%r14d, %r14d
	xorl	%esi, %esi
	callq	_KEnterRegion
	movl	$5, %edi
	movl	$2, %esi
	callq	_KPrepRTable
	movabsq	$5675297891167530314, %rdi # imm = 0x4EC2B55CED906D4A
	xorl	%esi, %esi
	callq	_KPrepCall
	.loc	1 3151 7 prologue_end   # gsm_encode.c:3151:7
.Ltmp2283:
	callq	create
	movabsq	$6992073268770812456, %rdi # imm = 0x6108D597A496B228
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$1, %edi
	callq	_KLinkReturn
	movabsq	$2739838778886657165, %rbx # imm = 0x2605DCDA6561148D
	xorl	%esi, %esi
	.loc	1 3152 9                # gsm_encode.c:3152:9
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$10, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movl	$1, %edi
	callq	_KWork
	movl	$1, %edi
	callq	_KDeqArg
.Ltmp2284:
	#DEBUG_VALUE: gsm_option:result <- -1
	#DEBUG_VALUE: gsm_option:opt <- 2
	movl	$8, %edi
	movl	$1, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	xorl	%esi, %esi
	movl	$8, %edx
	callq	_KPhi1To1
	movl	$6, %edi
	movl	$6, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$6, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%rbx, %rdi
	callq	_KExitRegion
	movabsq	$1856907731479656266, %rdi # imm = 0x19C50FBE5385774A
	xorl	%esi, %esi
	callq	_KPrepCall
	callq	_KEnqArgConst
	movl	$2, %edi
	callq	_KLinkReturn
.Ltmp2285:
	#DEBUG_VALUE: gsm_option:r <- RDI
	.loc	1 3153 9                # gsm_encode.c:3153:9
	movl	$gsmstate, %edi
.Ltmp2286:
	movl	$1, %esi
	movl	$f_verbose, %edx
	callq	gsm_option
.Ltmp2287:
	#DEBUG_VALUE: encode:i <- 0
	movl	$3, %edi
	callq	_KInduction
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KEnterRegion
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$3, %esi
	movl	$1, %edx
	callq	_KTimestamp1
	movl	$pcmdata, %ebx
	movabsq	$4136632151115754028, %r12 # imm = 0x396845064DB6EA2C
	movabsq	$-7367797760000123633, %r13 # imm = 0x99C052F93A461D0F
	.align	16, 0x90
.LBB18_1:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: encode:i <- 0
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KEnterRegion
	movl	$4, %edi
	callq	_KPushCDep
	movl	$4, %edi
	callq	_KWork
	xorl	%esi, %esi
	movq	%r13, %rdi
	callq	_KPrepCall
	leaq	gsmdata(%r14), %rdx
	movl	$gsmstate, %edi
	.loc	1 3157 5                # gsm_encode.c:3157:5
.Ltmp2288:
	movq	%rbx, %rsi
	callq	gsm_encode
	callq	_KPopCDep
	movl	$2, %esi
	movq	%r12, %rdi
	callq	_KExitRegion
	movl	$1, %edi
	callq	_KWork
	movl	$4, %edi
	movl	$3, %esi
	movl	$1, %edx
	callq	_KTimestamp1
.Ltmp2289:
	.loc	1 3156 3                # gsm_encode.c:3156:3
	addq	$33, %r14
	addq	$320, %rbx              # imm = 0x140
	cmpq	$660, %r14              # imm = 0x294
	jne	.LBB18_1
.Ltmp2290:
# BB#2:                                 # %for.cond.pre_exit.for.end
	#DEBUG_VALUE: encode:i <- 0
	movl	$1, %esi
	movq	%r15, %rdi
	callq	_KExitRegion
	callq	_KReturnConst
	xorl	%esi, %esi
	movabsq	$-1538276430124248517, %rdi # imm = 0xEAA6F1BCA816923B
	callq	_KExitRegion
	xorl	%eax, %eax
	.loc	1 3160 3                # gsm_encode.c:3160:3
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.Ltmp2291:
.Ltmp2292:
	.size	encode, .Ltmp2292-encode
.Lfunc_end18:
	.cfi_endproc

	.globl	__main
	.align	16, 0x90
	.type	__main,@function
__main:                                 # @__main
.Lfunc_begin19:
	.loc	1 3164 0                # gsm_encode.c:3164:0
	.cfi_startproc
# BB#0:                                 # %entry
	pushq	%rbp
.Ltmp2293:
	.cfi_def_cfa_offset 16
.Ltmp2294:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp2295:
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	pushq	%rax
.Ltmp2296:
	.cfi_offset %rbx, -24
	callq	_KInit
	movabsq	$-3677947425469889523, %rbx # imm = 0xCCF54E4D9A4E040D
	xorl	%esi, %esi
	movq	%rbx, %rdi
	callq	_KEnterRegion
	movl	$2, %edi
	xorl	%esi, %esi
	callq	_KPrepRTable
	movabsq	$-6155923998944191331, %rdi # imm = 0xAA91C3BD0AA11C9D
	xorl	%esi, %esi
	callq	_KPrepCall
	movl	$1, %edi
	callq	_KLinkReturn
	.loc	1 3165 10 prologue_end  # gsm_encode.c:3165:10
.Ltmp2297:
	callq	encode
	movl	$1, %edi
	movl	$1, %esi
	xorl	%edx, %edx
	callq	_KTimestamp1
	movl	$1, %edi
	callq	_KReturn
	xorl	%esi, %esi
	movq	%rbx, %rdi
	callq	_KExitRegion
	callq	_KDeinit
	xorl	%eax, %eax
	.loc	1 3165 3 is_stmt 0      # gsm_encode.c:3165:3
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	retq
.Ltmp2298:
.Ltmp2299:
	.size	__main, .Ltmp2299-__main
.Lfunc_end19:
	.cfi_endproc

	.type	pcmdata,@object         # @pcmdata
	.data
	.globl	pcmdata
	.align	16
pcmdata:
	.short	0                       # 0x0
	.short	0                       # 0x0
	.short	16                      # 0x10
	.short	16                      # 0x10
	.short	16                      # 0x10
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	24                      # 0x18
	.short	40                      # 0x28
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	40                      # 0x28
	.short	40                      # 0x28
	.short	32                      # 0x20
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	40                      # 0x28
	.short	16                      # 0x10
	.short	8                       # 0x8
	.short	0                       # 0x0
	.short	80                      # 0x50
	.short	96                      # 0x60
	.short	88                      # 0x58
	.short	208                     # 0xd0
	.short	224                     # 0xe0
	.short	208                     # 0xd0
	.short	280                     # 0x118
	.short	296                     # 0x128
	.short	280                     # 0x118
	.short	296                     # 0x128
	.short	272                     # 0x110
	.short	256                     # 0x100
	.short	160                     # 0xa0
	.short	88                      # 0x58
	.short	72                      # 0x48
	.short	88                      # 0x58
	.short	96                      # 0x60
	.short	88                      # 0x58
	.short	80                      # 0x50
	.short	72                      # 0x48
	.short	64                      # 0x40
	.short	48                      # 0x30
	.short	32                      # 0x20
	.short	16                      # 0x10
	.short	8                       # 0x8
	.short	65528                   # 0xfff8
	.short	65512                   # 0xffe8
	.short	65504                   # 0xffe0
	.short	65496                   # 0xffd8
	.short	65480                   # 0xffc8
	.short	65472                   # 0xffc0
	.short	65472                   # 0xffc0
	.short	65432                   # 0xff98
	.short	65400                   # 0xff78
	.short	65400                   # 0xff78
	.short	65480                   # 0xffc8
	.short	0                       # 0x0
	.short	16                      # 0x10
	.short	64                      # 0x40
	.short	96                      # 0x60
	.short	104                     # 0x68
	.short	120                     # 0x78
	.short	120                     # 0x78
	.short	112                     # 0x70
	.short	168                     # 0xa8
	.short	200                     # 0xc8
	.short	200                     # 0xc8
	.short	224                     # 0xe0
	.short	240                     # 0xf0
	.short	232                     # 0xe8
	.short	248                     # 0xf8
	.short	248                     # 0xf8
	.short	240                     # 0xf0
	.short	224                     # 0xe0
	.short	200                     # 0xc8
	.short	184                     # 0xb8
	.short	232                     # 0xe8
	.short	256                     # 0x100
	.short	248                     # 0xf8
	.short	232                     # 0xe8
	.short	216                     # 0xd8
	.short	192                     # 0xc0
	.short	168                     # 0xa8
	.short	32                      # 0x20
	.short	65472                   # 0xffc0
	.short	65440                   # 0xffa0
	.short	65440                   # 0xffa0
	.short	65448                   # 0xffa8
	.short	65456                   # 0xffb0
	.short	65488                   # 0xffd0
	.short	65528                   # 0xfff8
	.short	0                       # 0x0
	.short	32                      # 0x20
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	40                      # 0x28
	.short	32                      # 0x20
	.short	65520                   # 0xfff0
	.short	65488                   # 0xffd0
	.short	65480                   # 0xffc8
	.short	65480                   # 0xffc8
	.short	65488                   # 0xffd0
	.short	65496                   # 0xffd8
	.short	65512                   # 0xffe8
	.short	65528                   # 0xfff8
	.short	65528                   # 0xfff8
	.short	8                       # 0x8
	.short	24                      # 0x18
	.short	24                      # 0x18
	.short	120                     # 0x78
	.short	184                     # 0xb8
	.short	192                     # 0xc0
	.short	256                     # 0x100
	.short	304                     # 0x130
	.short	296                     # 0x128
	.short	264                     # 0x108
	.short	216                     # 0xd8
	.short	192                     # 0xc0
	.short	120                     # 0x78
	.short	56                      # 0x38
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	0                       # 0x0
	.short	65504                   # 0xffe0
	.short	65504                   # 0xffe0
	.short	65496                   # 0xffd8
	.short	65480                   # 0xffc8
	.short	65480                   # 0xffc8
	.short	65440                   # 0xffa0
	.short	65416                   # 0xff88
	.short	65432                   # 0xff98
	.short	65408                   # 0xff80
	.short	65392                   # 0xff70
	.short	65408                   # 0xff80
	.short	65400                   # 0xff78
	.short	65400                   # 0xff78
	.short	65424                   # 0xff90
	.short	65408                   # 0xff80
	.short	65400                   # 0xff78
	.short	65400                   # 0xff78
	.short	65360                   # 0xff50
	.short	65328                   # 0xff30
	.short	65360                   # 0xff50
	.short	65336                   # 0xff38
	.short	65328                   # 0xff30
	.short	65344                   # 0xff40
	.short	65368                   # 0xff58
	.short	65392                   # 0xff70
	.short	65408                   # 0xff80
	.short	65360                   # 0xff50
	.short	65336                   # 0xff38
	.short	65344                   # 0xff40
	.short	65304                   # 0xff18
	.short	65280                   # 0xff00
	.short	65288                   # 0xff08
	.short	65344                   # 0xff40
	.short	65384                   # 0xff68
	.short	65408                   # 0xff80
	.short	65416                   # 0xff88
	.short	65416                   # 0xff88
	.short	65416                   # 0xff88
	.short	65416                   # 0xff88
	.short	65464                   # 0xffb8
	.short	65504                   # 0xffe0
	.short	65520                   # 0xfff0
	.short	65488                   # 0xffd0
	.short	65464                   # 0xffb8
	.short	65464                   # 0xffb8
	.short	65424                   # 0xff90
	.short	65392                   # 0xff70
	.short	65392                   # 0xff70
	.short	65360                   # 0xff50
	.short	65344                   # 0xff40
	.short	65344                   # 0xff40
	.short	65368                   # 0xff58
	.short	65392                   # 0xff70
	.short	65408                   # 0xff80
	.short	65480                   # 0xffc8
	.short	0                       # 0x0
	.short	24                      # 0x18
	.short	48                      # 0x30
	.short	72                      # 0x48
	.short	72                      # 0x48
	.short	40                      # 0x28
	.short	8                       # 0x8
	.short	65528                   # 0xfff8
	.short	65496                   # 0xffd8
	.short	65480                   # 0xffc8
	.short	65464                   # 0xffb8
	.short	65432                   # 0xff98
	.short	65400                   # 0xff78
	.short	65392                   # 0xff70
	.short	65520                   # 0xfff0
	.short	88                      # 0x58
	.short	136                     # 0x88
	.short	184                     # 0xb8
	.short	208                     # 0xd0
	.short	216                     # 0xd8
	.short	232                     # 0xe8
	.short	312                     # 0x138
	.short	352                     # 0x160
	.short	344                     # 0x158
	.short	368                     # 0x170
	.short	376                     # 0x178
	.short	352                     # 0x160
	.short	360                     # 0x168
	.short	352                     # 0x160
	.short	320                     # 0x140
	.short	280                     # 0x118
	.short	240                     # 0xf0
	.short	200                     # 0xc8
	.short	152                     # 0x98
	.short	120                     # 0x78
	.short	96                      # 0x60
	.short	24                      # 0x18
	.short	65472                   # 0xffc0
	.short	65424                   # 0xff90
	.short	65352                   # 0xff48
	.short	65280                   # 0xff00
	.short	65256                   # 0xfee8
	.short	65224                   # 0xfec8
	.short	65208                   # 0xfeb8
	.short	65208                   # 0xfeb8
	.short	65184                   # 0xfea0
	.short	65160                   # 0xfe88
	.short	65152                   # 0xfe80
	.short	65208                   # 0xfeb8
	.short	65272                   # 0xfef8
	.short	65336                   # 0xff38
	.short	65440                   # 0xffa0
	.short	65512                   # 0xffe8
	.short	8                       # 0x8
	.short	48                      # 0x30
	.short	88                      # 0x58
	.short	104                     # 0x68
	.short	104                     # 0x68
	.short	112                     # 0x70
	.short	104                     # 0x68
	.short	80                      # 0x50
	.short	64                      # 0x40
	.short	64                      # 0x40
	.short	32                      # 0x20
	.short	0                       # 0x0
	.short	65512                   # 0xffe8
	.short	65520                   # 0xfff0
	.short	65528                   # 0xfff8
	.short	65528                   # 0xfff8
	.short	56                      # 0x38
	.short	104                     # 0x68
	.short	120                     # 0x78
	.short	56                      # 0x38
	.short	8                       # 0x8
	.short	65520                   # 0xfff0
	.short	65504                   # 0xffe0
	.short	65496                   # 0xffd8
	.short	65496                   # 0xffd8
	.short	65504                   # 0xffe0
	.short	65488                   # 0xffd0
	.short	65480                   # 0xffc8
	.short	0                       # 0x0
	.short	48                      # 0x30
	.short	72                      # 0x48
	.short	104                     # 0x68
	.short	128                     # 0x80
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	120                     # 0x78
	.short	152                     # 0x98
	.short	176                     # 0xb0
	.short	184                     # 0xb8
	.short	152                     # 0x98
	.short	112                     # 0x70
	.short	88                      # 0x58
	.short	96                      # 0x60
	.short	120                     # 0x78
	.short	168                     # 0xa8
	.short	184                     # 0xb8
	.short	168                     # 0xa8
	.short	160                     # 0xa0
	.short	128                     # 0x80
	.short	104                     # 0x68
	.short	96                      # 0x60
	.short	88                      # 0x58
	.short	72                      # 0x48
	.short	48                      # 0x30
	.short	56                      # 0x38
	.short	56                      # 0x38
	.short	48                      # 0x30
	.short	80                      # 0x50
	.short	88                      # 0x58
	.short	96                      # 0x60
	.short	48                      # 0x30
	.short	8                       # 0x8
	.short	65528                   # 0xfff8
	.short	65424                   # 0xff90
	.short	65352                   # 0xff48
	.short	65320                   # 0xff28
	.short	65296                   # 0xff10
	.short	65272                   # 0xfef8
	.short	65264                   # 0xfef0
	.short	65240                   # 0xfed8
	.short	65200                   # 0xfeb0
	.short	65200                   # 0xfeb0
	.short	65192                   # 0xfea8
	.short	65208                   # 0xfeb8
	.short	65240                   # 0xfed8
	.short	65272                   # 0xfef8
	.short	65296                   # 0xff10
	.short	65312                   # 0xff20
	.short	65344                   # 0xff40
	.short	65368                   # 0xff58
	.short	65408                   # 0xff80
	.short	65440                   # 0xffa0
	.short	65464                   # 0xffb8
	.short	65480                   # 0xffc8
	.short	65496                   # 0xffd8
	.short	65504                   # 0xffe0
	.short	65520                   # 0xfff0
	.short	72                      # 0x48
	.short	152                     # 0x98
	.short	176                     # 0xb0
	.short	104                     # 0x68
	.short	24                      # 0x18
	.short	65528                   # 0xfff8
	.short	65512                   # 0xffe8
	.short	65520                   # 0xfff0
	.short	65528                   # 0xfff8
	.short	32                      # 0x20
	.short	56                      # 0x38
	.short	56                      # 0x38
	.short	80                      # 0x50
	.short	104                     # 0x68
	.short	112                     # 0x70
	.short	104                     # 0x68
	.short	96                      # 0x60
	.short	96                      # 0x60
	.short	56                      # 0x38
	.short	32                      # 0x20
	.short	24                      # 0x18
	.short	64                      # 0x40
	.short	96                      # 0x60
	.short	104                     # 0x68
	.short	64                      # 0x40
	.short	16                      # 0x10
	.short	0                       # 0x0
	.short	65456                   # 0xffb0
	.short	65400                   # 0xff78
	.short	65392                   # 0xff70
	.short	65424                   # 0xff90
	.short	65448                   # 0xffa8
	.short	65480                   # 0xffc8
	.short	65432                   # 0xff98
	.short	65360                   # 0xff50
	.short	65360                   # 0xff50
	.short	65360                   # 0xff50
	.short	65368                   # 0xff58
	.short	65384                   # 0xff68
	.short	65352                   # 0xff48
	.short	65312                   # 0xff20
	.short	65304                   # 0xff18
	.short	65336                   # 0xff38
	.short	65376                   # 0xff60
	.short	65392                   # 0xff70
	.short	65408                   # 0xff80
	.short	65432                   # 0xff98
	.short	65440                   # 0xffa0
	.short	65464                   # 0xffb8
	.short	65488                   # 0xffd0
	.short	65504                   # 0xffe0
	.short	24                      # 0x18
	.short	72                      # 0x48
	.short	88                      # 0x58
	.short	176                     # 0xb0
	.short	248                     # 0xf8
	.short	264                     # 0x108
	.short	280                     # 0x118
	.short	288                     # 0x120
	.short	280                     # 0x118
	.short	304                     # 0x130
	.short	328                     # 0x148
	.short	320                     # 0x140
	.short	304                     # 0x130
	.short	288                     # 0x120
	.short	264                     # 0x108
	.short	152                     # 0x98
	.short	56                      # 0x38
	.short	24                      # 0x18
	.short	65488                   # 0xffd0
	.short	65424                   # 0xff90
	.short	65408                   # 0xff80
	.short	65368                   # 0xff58
	.short	65336                   # 0xff38
	.short	65328                   # 0xff30
	.short	65352                   # 0xff48
	.short	65384                   # 0xff68
	.short	65400                   # 0xff78
	.short	65416                   # 0xff88
	.short	65464                   # 0xffb8
	.short	65496                   # 0xffd8
	.short	65512                   # 0xffe8
	.short	65496                   # 0xffd8
	.short	65520                   # 0xfff0
	.short	16                      # 0x10
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	24                      # 0x18
	.short	40                      # 0x28
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	56                      # 0x38
	.short	96                      # 0x60
	.short	128                     # 0x80
	.short	128                     # 0x80
	.short	176                     # 0xb0
	.short	216                     # 0xd8
	.short	208                     # 0xd0
	.short	184                     # 0xb8
	.short	168                     # 0xa8
	.short	168                     # 0xa8
	.short	160                     # 0xa0
	.short	144                     # 0x90
	.short	120                     # 0x78
	.short	112                     # 0x70
	.short	104                     # 0x68
	.short	72                      # 0x48
	.short	24                      # 0x18
	.short	8                       # 0x8
	.short	8                       # 0x8
	.short	0                       # 0x0
	.short	0                       # 0x0
	.short	65512                   # 0xffe8
	.short	65456                   # 0xffb0
	.short	65424                   # 0xff90
	.short	65416                   # 0xff88
	.short	65392                   # 0xff70
	.short	65376                   # 0xff60
	.short	65376                   # 0xff60
	.short	65424                   # 0xff90
	.short	65472                   # 0xffc0
	.short	65488                   # 0xffd0
	.short	65496                   # 0xffd8
	.short	65504                   # 0xffe0
	.short	65512                   # 0xffe8
	.short	24                      # 0x18
	.short	80                      # 0x50
	.short	88                      # 0x58
	.short	48                      # 0x30
	.short	8                       # 0x8
	.short	0                       # 0x0
	.short	24                      # 0x18
	.short	56                      # 0x38
	.short	56                      # 0x38
	.short	72                      # 0x48
	.short	80                      # 0x50
	.short	80                      # 0x50
	.short	32                      # 0x20
	.short	0                       # 0x0
	.short	65528                   # 0xfff8
	.short	65456                   # 0xffb0
	.short	65392                   # 0xff70
	.short	65384                   # 0xff68
	.short	65456                   # 0xffb0
	.short	65512                   # 0xffe8
	.short	65528                   # 0xfff8
	.short	65528                   # 0xfff8
	.short	65528                   # 0xfff8
	.short	65520                   # 0xfff0
	.short	48                      # 0x30
	.short	112                     # 0x70
	.short	144                     # 0x90
	.short	152                     # 0x98
	.short	152                     # 0x98
	.short	144                     # 0x90
	.short	160                     # 0xa0
	.short	176                     # 0xb0
	.short	184                     # 0xb8
	.short	192                     # 0xc0
	.short	192                     # 0xc0
	.short	168                     # 0xa8
	.short	152                     # 0x98
	.short	136                     # 0x88
	.short	120                     # 0x78
	.short	80                      # 0x50
	.short	48                      # 0x30
	.short	32                      # 0x20
	.short	65496                   # 0xffd8
	.short	65432                   # 0xff98
	.short	65416                   # 0xff88
	.short	65360                   # 0xff50
	.short	65312                   # 0xff20
	.short	65304                   # 0xff18
	.short	65272                   # 0xfef8
	.short	65248                   # 0xfee0
	.short	65256                   # 0xfee8
	.short	65136                   # 0xfe70
	.short	65032                   # 0xfe08
	.short	65024                   # 0xfe00
	.short	65096                   # 0xfe48
	.short	65176                   # 0xfe98
	.short	65208                   # 0xfeb8
	.short	65256                   # 0xfee8
	.short	65296                   # 0xff10
	.short	65320                   # 0xff28
	.short	65304                   # 0xff18
	.short	65296                   # 0xff10
	.short	65304                   # 0xff18
	.short	65352                   # 0xff48
	.short	65392                   # 0xff70
	.short	65416                   # 0xff88
	.short	65504                   # 0xffe0
	.short	40                      # 0x28
	.short	64                      # 0x40
	.short	88                      # 0x58
	.short	104                     # 0x68
	.short	112                     # 0x70
	.short	120                     # 0x78
	.short	112                     # 0x70
	.short	104                     # 0x68
	.short	104                     # 0x68
	.short	120                     # 0x78
	.short	128                     # 0x80
	.short	128                     # 0x80
	.short	136                     # 0x88
	.short	136                     # 0x88
	.short	128                     # 0x80
	.short	88                      # 0x58
	.short	48                      # 0x30
	.short	32                      # 0x20
	.short	24                      # 0x18
	.short	24                      # 0x18
	.short	24                      # 0x18
	.short	80                      # 0x50
	.short	144                     # 0x90
	.short	160                     # 0xa0
	.short	128                     # 0x80
	.short	96                      # 0x60
	.short	80                      # 0x50
	.short	48                      # 0x30
	.short	24                      # 0x18
	.short	16                      # 0x10
	.short	40                      # 0x28
	.short	56                      # 0x38
	.short	56                      # 0x38
	.short	24                      # 0x18
	.short	65528                   # 0xfff8
	.short	65520                   # 0xfff0
	.short	0                       # 0x0
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	64                      # 0x40
	.short	80                      # 0x50
	.short	80                      # 0x50
	.short	80                      # 0x50
	.short	72                      # 0x48
	.short	72                      # 0x48
	.short	72                      # 0x48
	.short	72                      # 0x48
	.short	72                      # 0x48
	.short	120                     # 0x78
	.short	160                     # 0xa0
	.short	168                     # 0xa8
	.short	192                     # 0xc0
	.short	200                     # 0xc8
	.short	192                     # 0xc0
	.short	208                     # 0xd0
	.short	224                     # 0xe0
	.short	216                     # 0xd8
	.short	232                     # 0xe8
	.short	240                     # 0xf0
	.short	224                     # 0xe0
	.short	256                     # 0x100
	.short	280                     # 0x118
	.short	272                     # 0x110
	.short	256                     # 0x100
	.short	240                     # 0xf0
	.short	216                     # 0xd8
	.short	144                     # 0x90
	.short	72                      # 0x48
	.short	40                      # 0x28
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	32                      # 0x20
	.short	56                      # 0x38
	.short	80                      # 0x50
	.short	80                      # 0x50
	.short	80                      # 0x50
	.short	72                      # 0x48
	.short	64                      # 0x40
	.short	80                      # 0x50
	.short	96                      # 0x60
	.short	96                      # 0x60
	.short	64                      # 0x40
	.short	65472                   # 0xffc0
	.short	65368                   # 0xff58
	.short	65344                   # 0xff40
	.short	65424                   # 0xff90
	.short	65512                   # 0xffe8
	.short	0                       # 0x0
	.short	32                      # 0x20
	.short	48                      # 0x30
	.short	48                      # 0x30
	.short	104                     # 0x68
	.short	152                     # 0x98
	.short	168                     # 0xa8
	.short	272                     # 0x110
	.short	360                     # 0x168
	.short	368                     # 0x170
	.short	328                     # 0x148
	.short	280                     # 0x118
	.short	240                     # 0xf0
	.short	232                     # 0xe8
	.short	224                     # 0xe0
	.short	208                     # 0xd0
	.short	152                     # 0x98
	.short	96                      # 0x60
	.short	64                      # 0x40
	.short	0                       # 0x0
	.short	65496                   # 0xffd8
	.short	65496                   # 0xffd8
	.short	65472                   # 0xffc0
	.short	65456                   # 0xffb0
	.short	65456                   # 0xffb0
	.short	65400                   # 0xff78
	.short	65328                   # 0xff30
	.short	65296                   # 0xff10
	.short	65264                   # 0xfef0
	.short	65256                   # 0xfee8
	.short	65264                   # 0xfef0
	.short	65224                   # 0xfec8
	.short	65232                   # 0xfed0
	.short	65272                   # 0xfef8
	.short	65280                   # 0xff00
	.short	65296                   # 0xff10
	.short	65312                   # 0xff20
	.short	65360                   # 0xff50
	.short	65400                   # 0xff78
	.short	65424                   # 0xff90
	.short	65408                   # 0xff80
	.short	65392                   # 0xff70
	.short	65392                   # 0xff70
	.short	65408                   # 0xff80
	.short	65432                   # 0xff98
	.short	65440                   # 0xffa0
	.short	65464                   # 0xffb8
	.short	65488                   # 0xffd0
	.short	65496                   # 0xffd8
	.short	65520                   # 0xfff0
	.short	0                       # 0x0
	.short	8                       # 0x8
	.short	40                      # 0x28
	.short	72                      # 0x48
	.short	88                      # 0x58
	.short	120                     # 0x78
	.short	112                     # 0x70
	.short	88                      # 0x58
	.short	104                     # 0x68
	.short	152                     # 0x98
	.short	184                     # 0xb8
	.short	216                     # 0xd8
	.short	240                     # 0xf0
	.short	240                     # 0xf0
	.short	232                     # 0xe8
	.short	248                     # 0xf8
	.short	256                     # 0x100
	.short	216                     # 0xd8
	.short	208                     # 0xd0
	.short	200                     # 0xc8
	.short	232                     # 0xe8
	.short	256                     # 0x100
	.short	240                     # 0xf0
	.short	224                     # 0xe0
	.short	200                     # 0xc8
	.short	184                     # 0xb8
	.short	160                     # 0xa0
	.short	120                     # 0x78
	.short	88                      # 0x58
	.short	56                      # 0x38
	.short	32                      # 0x20
	.short	16                      # 0x10
	.short	16                      # 0x10
	.short	24                      # 0x18
	.short	16                      # 0x10
	.short	16                      # 0x10
	.short	16                      # 0x10
	.short	24                      # 0x18
	.short	40                      # 0x28
	.short	8                       # 0x8
	.short	65504                   # 0xffe0
	.short	65480                   # 0xffc8
	.short	65408                   # 0xff80
	.short	65352                   # 0xff48
	.short	65336                   # 0xff38
	.short	65344                   # 0xff40
	.short	65352                   # 0xff48
	.short	65352                   # 0xff48
	.short	65392                   # 0xff70
	.short	65424                   # 0xff90
	.short	65448                   # 0xffa8
	.short	65464                   # 0xffb8
	.short	65472                   # 0xffc0
	.short	65480                   # 0xffc8
	.short	65472                   # 0xffc0
	.short	65472                   # 0xffc0
	.short	65472                   # 0xffc0
	.short	65456                   # 0xffb0
	.short	65440                   # 0xffa0
	.short	65440                   # 0xffa0
	.short	65440                   # 0xffa0
	.short	65448                   # 0xffa8
	.short	65456                   # 0xffb0
	.short	65384                   # 0xff68
	.short	65320                   # 0xff28
	.short	65288                   # 0xff08
	.short	65272                   # 0xfef8
	.short	65272                   # 0xfef8
	.short	65256                   # 0xfee8
	.short	65248                   # 0xfee0
	.short	65240                   # 0xfed8
	.short	65192                   # 0xfea8
	.short	65176                   # 0xfe98
	.short	65192                   # 0xfea8
	.short	65192                   # 0xfea8
	.short	65184                   # 0xfea0
	.short	65184                   # 0xfea0
	.short	65232                   # 0xfed0
	.short	65280                   # 0xff00
	.short	65328                   # 0xff30
	.short	65320                   # 0xff28
	.short	65336                   # 0xff38
	.short	65368                   # 0xff58
	.short	65352                   # 0xff48
	.short	65344                   # 0xff40
	.short	65352                   # 0xff48
	.short	65456                   # 0xffb0
	.short	16                      # 0x10
	.short	56                      # 0x38
	.short	40                      # 0x28
	.short	16                      # 0x10
	.short	8                       # 0x8
	.short	80                      # 0x50
	.short	160                     # 0xa0
	.short	184                     # 0xb8
	.short	160                     # 0xa0
	.short	128                     # 0x80
	.short	112                     # 0x70
	.short	144                     # 0x90
	.short	176                     # 0xb0
	.short	176                     # 0xb0
	.short	184                     # 0xb8
	.short	184                     # 0xb8
	.short	176                     # 0xb0
	.short	192                     # 0xc0
	.short	208                     # 0xd0
	.short	200                     # 0xc8
	.short	160                     # 0xa0
	.short	104                     # 0x68
	.short	56                      # 0x38
	.short	65520                   # 0xfff0
	.short	65456                   # 0xffb0
	.short	65416                   # 0xff88
	.short	65400                   # 0xff78
	.short	65384                   # 0xff68
	.short	65376                   # 0xff60
	.short	65424                   # 0xff90
	.short	65472                   # 0xffc0
	.short	65504                   # 0xffe0
	.short	0                       # 0x0
	.short	32                      # 0x20
	.short	48                      # 0x30
	.short	160                     # 0xa0
	.short	272                     # 0x110
	.short	312                     # 0x138
	.short	320                     # 0x140
	.short	328                     # 0x148
	.short	328                     # 0x148
	.short	272                     # 0x110
	.short	232                     # 0xe8
	.short	192                     # 0xc0
	.short	160                     # 0xa0
	.short	136                     # 0x88
	.short	104                     # 0x68
	.short	8                       # 0x8
	.short	65456                   # 0xffb0
	.short	65416                   # 0xff88
	.short	65368                   # 0xff58
	.short	65328                   # 0xff30
	.short	65312                   # 0xff20
	.short	65272                   # 0xfef8
	.short	65240                   # 0xfed8
	.short	65240                   # 0xfed8
	.short	65280                   # 0xff00
	.short	65312                   # 0xff20
	.short	65336                   # 0xff38
	.short	65360                   # 0xff50
	.short	65384                   # 0xff68
	.short	65416                   # 0xff88
	.short	65440                   # 0xffa0
	.short	65464                   # 0xffb8
	.short	32                      # 0x20
	.short	128                     # 0x80
	.short	160                     # 0xa0
	.short	216                     # 0xd8
	.short	256                     # 0x100
	.short	256                     # 0x100
	.short	312                     # 0x138
	.short	360                     # 0x168
	.short	328                     # 0x148
	.short	296                     # 0x128
	.short	288                     # 0x120
	.short	248                     # 0xf8
	.short	232                     # 0xe8
	.short	224                     # 0xe0
	.short	192                     # 0xc0
	.short	168                     # 0xa8
	.short	176                     # 0xb0
	.short	152                     # 0x98
	.short	112                     # 0x70
	.short	72                      # 0x48
	.short	48                      # 0x30
	.short	65488                   # 0xffd0
	.short	65376                   # 0xff60
	.short	65352                   # 0xff48
	.short	65296                   # 0xff10
	.short	65192                   # 0xfea8
	.short	65192                   # 0xfea8
	.short	65216                   # 0xfec0
	.short	65216                   # 0xfec0
	.short	65256                   # 0xfee8
	.short	65200                   # 0xfeb0
	.short	65112                   # 0xfe58
	.short	65160                   # 0xfe88
	.short	65232                   # 0xfed0
	.short	65208                   # 0xfeb8
	.short	65096                   # 0xfe48
	.short	65112                   # 0xfe58
	.short	65256                   # 0xfee8
	.short	65320                   # 0xff28
	.short	65304                   # 0xff18
	.short	65376                   # 0xff60
	.short	160                     # 0xa0
	.short	416                     # 0x1a0
	.short	392                     # 0x188
	.short	376                     # 0x178
	.short	520                     # 0x208
	.short	520                     # 0x208
	.short	256                     # 0x100
	.short	24                      # 0x18
	.short	65504                   # 0xffe0
	.short	65248                   # 0xfee0
	.short	64872                   # 0xfd68
	.short	64768                   # 0xfd00
	.short	64864                   # 0xfd60
	.short	64880                   # 0xfd70
	.short	64936                   # 0xfda8
	.short	65280                   # 0xff00
	.short	160                     # 0xa0
	.short	368                     # 0x170
	.short	528                     # 0x210
	.short	728                     # 0x2d8
	.short	784                     # 0x310
	.short	536                     # 0x218
	.short	160                     # 0xa0
	.short	65440                   # 0xffa0
	.short	65008                   # 0xfdf0
	.short	64472                   # 0xfbd8
	.short	64264                   # 0xfb08
	.short	63936                   # 0xf9c0
	.short	63536                   # 0xf830
	.short	63704                   # 0xf8d8
	.short	64704                   # 0xfcc0
	.short	56                      # 0x38
	.short	416                     # 0x1a0
	.short	896                     # 0x380
	.short	2584                    # 0xa18
	.short	3920                    # 0xf50
	.short	3504                    # 0xdb0
	.short	3120                    # 0xc30
	.short	3608                    # 0xe18
	.short	3240                    # 0xca8
	.short	1392                    # 0x570
	.short	65432                   # 0xff98
	.short	65080                   # 0xfe38
	.short	64416                   # 0xfba0
	.short	63232                   # 0xf700
	.short	62928                   # 0xf5d0
	.short	63432                   # 0xf7c8
	.short	63912                   # 0xf9a8
	.short	64328                   # 0xfb48
	.short	64432                   # 0xfbb0
	.short	64632                   # 0xfc78
	.short	65280                   # 0xff00
	.short	65176                   # 0xfe98
	.short	64288                   # 0xfb20
	.short	64072                   # 0xfa48
	.short	64192                   # 0xfac0
	.short	63688                   # 0xf8c8
	.short	63200                   # 0xf6e0
	.short	63936                   # 0xf9c0
	.short	65032                   # 0xfe08
	.short	65408                   # 0xff80
	.short	1064                    # 0x428
	.short	2928                    # 0xb70
	.short	3608                    # 0xe18
	.short	3384                    # 0xd38
	.short	3384                    # 0xd38
	.short	3112                    # 0xc28
	.short	464                     # 0x1d0
	.short	62840                   # 0xf578
	.short	61704                   # 0xf108
	.short	64336                   # 0xfb50
	.short	1176                    # 0x498
	.short	1064                    # 0x428
	.short	3304                    # 0xce8
	.short	8592                    # 0x2190
	.short	10736                   # 0x29f0
	.short	8928                    # 0x22e0
	.short	8040                    # 0x1f68
	.short	8272                    # 0x2050
	.short	6160                    # 0x1810
	.short	1808                    # 0x710
	.short	64152                   # 0xfa98
	.short	62520                   # 0xf438
	.short	61032                   # 0xee68
	.short	59728                   # 0xe950
	.short	60360                   # 0xebc8
	.short	62776                   # 0xf538
	.short	65208                   # 0xfeb8
	.short	576                     # 0x240
	.short	1120                    # 0x460
	.short	2512                    # 0x9d0
	.short	2424                    # 0x978
	.short	65528                   # 0xfff8
	.short	63504                   # 0xf810
	.short	61840                   # 0xf190
	.short	59600                   # 0xe8d0
	.short	58000                   # 0xe290
	.short	57184                   # 0xdf60
	.short	57328                   # 0xdff0
	.short	58984                   # 0xe668
	.short	60448                   # 0xec20
	.short	61752                   # 0xf138
	.short	64192                   # 0xfac0
	.short	1264                    # 0x4f0
	.short	2256                    # 0x8d0
	.short	2248                    # 0x8c8
	.short	2840                    # 0xb18
	.short	2552                    # 0x9f8
	.short	560                     # 0x230
	.short	64056                   # 0xfa38
	.short	64104                   # 0xfa68
	.short	64632                   # 0xfc78
	.short	63928                   # 0xf9b8
	.short	63568                   # 0xf850
	.short	65192                   # 0xfea8
	.short	1464                    # 0x5b8
	.short	1680                    # 0x690
	.short	744                     # 0x2e8
	.short	616                     # 0x268
	.short	1176                    # 0x498
	.short	64688                   # 0xfcb0
	.short	61464                   # 0xf018
	.short	60920                   # 0xedf8
	.short	144                     # 0x90
	.short	3912                    # 0xf48
	.short	3184                    # 0xc70
	.short	4728                    # 0x1278
	.short	10168                   # 0x27b8
	.short	11936                   # 0x2ea0
	.short	8696                    # 0x21f8
	.short	6432                    # 0x1920
	.short	6424                    # 0x1918
	.short	5424                    # 0x1530
	.short	1592                    # 0x638
	.short	63576                   # 0xf858
	.short	63264                   # 0xf720
	.short	63992                   # 0xf9f8
	.short	62976                   # 0xf600
	.short	63568                   # 0xf850
	.short	1424                    # 0x590
	.short	3808                    # 0xee0
	.short	4096                    # 0x1000
	.short	4312                    # 0x10d8
	.short	5216                    # 0x1460
	.short	4344                    # 0x10f8
	.short	1280                    # 0x500
	.short	64448                   # 0xfbc0
	.short	63400                   # 0xf7a8
	.short	62032                   # 0xf250
	.short	60416                   # 0xec00
	.short	60208                   # 0xeb30
	.short	61896                   # 0xf1c8
	.short	63776                   # 0xf920
	.short	64656                   # 0xfc90
	.short	400                     # 0x190
	.short	2656                    # 0xa60
	.short	3712                    # 0xe80
	.short	3504                    # 0xdb0
	.short	2776                    # 0xad8
	.short	1680                    # 0x690
	.short	360                     # 0x168
	.short	65312                   # 0xff20
	.short	64464                   # 0xfbd0
	.short	63224                   # 0xf6f8
	.short	63072                   # 0xf660
	.short	63104                   # 0xf680
	.short	62896                   # 0xf5b0
	.short	63424                   # 0xf7c0
	.short	61728                   # 0xf120
	.short	60048                   # 0xea90
	.short	61488                   # 0xf030
	.short	60440                   # 0xec18
	.short	57744                   # 0xe190
	.short	58712                   # 0xe558
	.short	65312                   # 0xff20
	.short	4240                    # 0x1090
	.short	3152                    # 0xc50
	.short	4680                    # 0x1248
	.short	10120                   # 0x2788
	.short	10960                   # 0x2ad0
	.short	5672                    # 0x1628
	.short	2288                    # 0x8f0
	.short	2984                    # 0xba8
	.short	1336                    # 0x538
	.short	61256                   # 0xef48
	.short	58384                   # 0xe410
	.short	60176                   # 0xeb10
	.short	61288                   # 0xef68
	.short	59944                   # 0xea28
	.short	60480                   # 0xec40
	.short	64536                   # 0xfc18
	.short	2216                    # 0x8a8
	.short	2072                    # 0x818
	.short	1912                    # 0x778
	.short	2136                    # 0x858
	.short	760                     # 0x2f8
	.short	63720                   # 0xf8e8
	.short	61936                   # 0xf1f0
	.short	61248                   # 0xef40
	.short	60624                   # 0xecd0
	.short	59736                   # 0xe958
	.short	60016                   # 0xea70
	.short	62048                   # 0xf260
	.short	64240                   # 0xfaf0
	.short	65440                   # 0xffa0
	.short	1184                    # 0x4a0
	.short	3320                    # 0xcf8
	.short	4344                    # 0x10f8
	.short	3744                    # 0xea0
	.short	3400                    # 0xd48
	.short	3048                    # 0xbe8
	.short	1504                    # 0x5e0
	.short	944                     # 0x3b0
	.short	856                     # 0x358
	.short	65304                   # 0xff18
	.short	64320                   # 0xfb40
	.short	63920                   # 0xf9b0
	.short	63936                   # 0xf9c0
	.short	63424                   # 0xf7c0
	.short	61072                   # 0xee90
	.short	60064                   # 0xeaa0
	.short	60928                   # 0xee00
	.short	59528                   # 0xe888
	.short	57856                   # 0xe200
	.short	61184                   # 0xef00
	.short	2376                    # 0x948
	.short	5120                    # 0x1400
	.short	4720                    # 0x1270
	.short	7560                    # 0x1d88
	.short	11480                   # 0x2cd8
	.short	9352                    # 0x2488
	.short	3496                    # 0xda8
	.short	1208                    # 0x4b8
	.short	1352                    # 0x548
	.short	63408                   # 0xf7b0
	.short	58352                   # 0xe3f0
	.short	57960                   # 0xe268
	.short	61432                   # 0xeff8
	.short	62880                   # 0xf5a0
	.short	62240                   # 0xf320
	.short	64616                   # 0xfc68
	.short	3056                    # 0xbf0
	.short	4000                    # 0xfa0
	.short	2640                    # 0xa50
	.short	504                     # 0x1f8
	.short	65120                   # 0xfe60
	.short	64584                   # 0xfc48
	.short	62272                   # 0xf340
	.short	60200                   # 0xeb28
	.short	60760                   # 0xed58
	.short	62400                   # 0xf3c0
	.short	62904                   # 0xf5b8
	.short	63288                   # 0xf738
	.short	248                     # 0xf8
	.short	3184                    # 0xc70
	.short	3728                    # 0xe90
	.short	3560                    # 0xde8
	.short	4496                    # 0x1190
	.short	4784                    # 0x12b0
	.short	4184                    # 0x1058
	.short	2968                    # 0xb98
	.short	1592                    # 0x638
	.short	2152                    # 0x868
	.short	2456                    # 0x998
	.short	688                     # 0x2b0
	.short	65104                   # 0xfe50
	.short	288                     # 0x120
	.short	672                     # 0x2a0
	.short	64656                   # 0xfc90
	.short	63504                   # 0xf810
	.short	63952                   # 0xf9d0
	.short	63512                   # 0xf818
	.short	62096                   # 0xf290
	.short	62016                   # 0xf240
	.short	63184                   # 0xf6d0
	.short	2632                    # 0xa48
	.short	6872                    # 0x1ad8
	.short	6208                    # 0x1840
	.short	7192                    # 0x1c18
	.short	11032                   # 0x2b18
	.short	10736                   # 0x29f0
	.short	5640                    # 0x1608
	.short	2232                    # 0x8b8
	.short	1912                    # 0x778
	.short	296                     # 0x128
	.short	61720                   # 0xf118
	.short	59496                   # 0xe868
	.short	60832                   # 0xeda0
	.short	62224                   # 0xf310
	.short	62024                   # 0xf248
	.short	62808                   # 0xf558
	.short	88                      # 0x58
	.short	2416                    # 0x970
	.short	1672                    # 0x688
	.short	264                     # 0x108
	.short	64776                   # 0xfd08
	.short	63880                   # 0xf988
	.short	62808                   # 0xf558
	.short	61600                   # 0xf0a0
	.short	61616                   # 0xf0b0
	.short	62784                   # 0xf540
	.short	63208                   # 0xf6e8
	.short	64672                   # 0xfca0
	.short	1880                    # 0x758
	.short	3280                    # 0xcd0
	.short	3936                    # 0xf60
	.short	4920                    # 0x1338
	.short	5208                    # 0x1458
	.short	4728                    # 0x1278
	.short	4048                    # 0xfd0
	.short	3240                    # 0xca8
	.short	3408                    # 0xd50
	.short	3344                    # 0xd10
	.short	1944                    # 0x798
	.short	920                     # 0x398
	.short	1064                    # 0x428
	.short	1264                    # 0x4f0
	.short	632                     # 0x278
	.short	65432                   # 0xff98
	.short	376                     # 0x178
	.short	136                     # 0x88
	.short	64264                   # 0xfb08
	.short	63072                   # 0xf660
	.short	61864                   # 0xf1a8
	.short	61208                   # 0xef18
	.short	63976                   # 0xf9e8
	.short	3072                    # 0xc00
	.short	4552                    # 0x11c8
	.short	4704                    # 0x1260
	.short	7008                    # 0x1b60
	.short	8624                    # 0x21b0
	.short	6368                    # 0x18e0
	.short	2824                    # 0xb08
	.short	1224                    # 0x4c8
	.short	120                     # 0x78
	.short	63280                   # 0xf730
	.short	61280                   # 0xef60
	.short	60184                   # 0xeb18
	.short	60432                   # 0xec10
	.short	62096                   # 0xf290
	.short	63488                   # 0xf800
	.short	64352                   # 0xfb60
	.short	65376                   # 0xff60
	.short	128                     # 0x80
	.short	65448                   # 0xffa8
	.short	64264                   # 0xfb08
	.short	61864                   # 0xf1a8
	.short	60688                   # 0xed10
	.short	61424                   # 0xeff0
	.short	61136                   # 0xeed0
	.short	60176                   # 0xeb10
	.short	61416                   # 0xefe8
	.short	63728                   # 0xf8f0
	.short	64992                   # 0xfde0
	.short	664                     # 0x298
	.short	1320                    # 0x528
	.short	1432                    # 0x598
	.short	2344                    # 0x928
	.short	2608                    # 0xa30
	.short	1648                    # 0x670
	.short	2280                    # 0x8e8
	.short	3008                    # 0xbc0
	.short	1688                    # 0x698
	.short	528                     # 0x210
	.short	912                     # 0x390
	.short	1376                    # 0x560
	.short	648                     # 0x288
	.short	63760                   # 0xf910
	.short	62568                   # 0xf468
	.short	62816                   # 0xf560
	.short	62432                   # 0xf3e0
	.short	60944                   # 0xee10
	.short	59568                   # 0xe8b0
	.short	58632                   # 0xe508
	.short	61136                   # 0xeed0
	.short	992                     # 0x3e0
	.short	1592                    # 0x638
	.short	65448                   # 0xffa8
	.short	3000                    # 0xbb8
	.short	8312                    # 0x2078
	.short	8104                    # 0x1fa8
	.short	3824                    # 0xef0
	.short	1608                    # 0x648
	.short	1480                    # 0x5c8
	.short	65304                   # 0xff18
	.short	62856                   # 0xf588
	.short	60960                   # 0xee20
	.short	60808                   # 0xed88
	.short	62880                   # 0xf5a0
	.short	64424                   # 0xfba8
	.short	64448                   # 0xfbc0
	.short	64152                   # 0xfa98
	.short	64032                   # 0xfa20
	.short	63448                   # 0xf7d8
	.short	62160                   # 0xf2d0
	.short	61256                   # 0xef48
	.short	59800                   # 0xe998
	.short	58232                   # 0xe378
	.short	58672                   # 0xe530
	.short	59496                   # 0xe868
	.short	59536                   # 0xe890
	.short	60880                   # 0xedd0
	.short	63384                   # 0xf798
	.short	64448                   # 0xfbc0
	.short	64800                   # 0xfd20
	.short	376                     # 0x178
	.short	1168                    # 0x490
	.short	1184                    # 0x4a0
	.short	1880                    # 0x758
	.short	2136                    # 0x858
	.short	1168                    # 0x490
	.short	1272                    # 0x4f8
	.short	2136                    # 0x858
	.short	1776                    # 0x6f0
	.short	1528                    # 0x5f8
	.short	1104                    # 0x450
	.short	152                     # 0x98
	.short	65120                   # 0xfe60
	.short	64928                   # 0xfda0
	.short	63968                   # 0xf9e0
	.short	62296                   # 0xf358
	.short	60864                   # 0xedc0
	.short	62216                   # 0xf308
	.short	65504                   # 0xffe0
	.short	24                      # 0x18
	.short	64384                   # 0xfb80
	.short	2376                    # 0x948
	.short	7608                    # 0x1db8
	.short	7432                    # 0x1d08
	.short	3976                    # 0xf88
	.short	2888                    # 0xb48
	.short	3152                    # 0xc50
	.short	2496                    # 0x9c0
	.short	65400                   # 0xff78
	.short	61856                   # 0xf1a0
	.short	61224                   # 0xef28
	.short	63160                   # 0xf6b8
	.short	63984                   # 0xf9f0
	.short	63216                   # 0xf6f0
	.short	63112                   # 0xf688
	.short	63968                   # 0xf9e0
	.short	63936                   # 0xf9c0
	.short	62664                   # 0xf4c8
	.short	60376                   # 0xebd8
	.short	59368                   # 0xe7e8
	.short	60384                   # 0xebe0
	.short	59592                   # 0xe8c8
	.short	57600                   # 0xe100
	.short	58648                   # 0xe518
	.short	61624                   # 0xf0b8
	.short	63272                   # 0xf728
	.short	63344                   # 0xf770
	.short	63608                   # 0xf878
	.short	65368                   # 0xff58
	.short	1712                    # 0x6b0
	.short	1072                    # 0x430
	.short	96                      # 0x60
	.short	912                     # 0x390
	.short	2584                    # 0xa18
	.short	2968                    # 0xb98
	.short	1736                    # 0x6c8
	.short	1808                    # 0x710
	.short	3312                    # 0xcf0
	.short	2256                    # 0x8d0
	.short	504                     # 0x1f8
	.short	640                     # 0x280
	.short	568                     # 0x238
	.short	64888                   # 0xfd78
	.short	63592                   # 0xf868
	.short	61848                   # 0xf198
	.short	63088                   # 0xf670
	.short	2352                    # 0x930
	.short	2680                    # 0xa78
	.short	64312                   # 0xfb38
	.short	1264                    # 0x4f0
	.short	7864                    # 0x1eb8
	.short	7832                    # 0x1e98
	.short	3944                    # 0xf68
	.short	3784                    # 0xec8
	.short	5448                    # 0x1548
	.short	5248                    # 0x1480
	.short	3168                    # 0xc60
	.short	176                     # 0xb0
	.short	65272                   # 0xfef8
	.short	2096                    # 0x830
	.short	2104                    # 0x838
	.short	352                     # 0x160
	.short	896                     # 0x380
	.short	2024                    # 0x7e8
	.short	624                     # 0x270
	.short	64416                   # 0xfba0
	.short	63936                   # 0xf9c0
	.short	62544                   # 0xf450
	.short	60936                   # 0xee08
	.short	60680                   # 0xed08
	.short	60944                   # 0xee10
	.short	61216                   # 0xef20
	.short	61888                   # 0xf1c0
	.short	63488                   # 0xf800
	.short	65136                   # 0xfe70
	.short	176                     # 0xb0
	.short	728                     # 0x2d8
	.short	1992                    # 0x7c8
	.short	2544                    # 0x9f0
	.short	2472                    # 0x9a8
	.short	2656                    # 0xa60
	.short	2856                    # 0xb28
	.short	3200                    # 0xc80
	.short	3416                    # 0xd58
	.short	3024                    # 0xbd0
	.short	2632                    # 0xa48
	.short	2304                    # 0x900
	.short	1896                    # 0x768
	.short	976                     # 0x3d0
	.short	224                     # 0xe0
	.short	65528                   # 0xfff8
	.short	64472                   # 0xfbd8
	.short	62952                   # 0xf5e8
	.short	65048                   # 0xfe18
	.short	4072                    # 0xfe8
	.short	4192                    # 0x1060
	.short	1480                    # 0x5c8
	.short	4216                    # 0x1078
	.short	9784                    # 0x2638
	.short	9600                    # 0x2580
	.short	5952                    # 0x1740
	.short	5352                    # 0x14e8
	.short	6608                    # 0x19d0
	.short	6104                    # 0x17d8
	.short	3600                    # 0xe10
	.short	624                     # 0x270
	.short	288                     # 0x120
	.short	2304                    # 0x900
	.short	2160                    # 0x870
	.short	656                     # 0x290
	.short	928                     # 0x3a0
	.short	1536                    # 0x600
	.short	256                     # 0x100
	.short	65064                   # 0xfe28
	.short	65320                   # 0xff28
	.short	63544                   # 0xf838
	.short	61624                   # 0xf0b8
	.short	62008                   # 0xf238
	.short	62768                   # 0xf530
	.short	62528                   # 0xf440
	.short	62528                   # 0xf440
	.short	64056                   # 0xfa38
	.short	408                     # 0x198
	.short	936                     # 0x3a8
	.short	976                     # 0x3d0
	.short	1920                    # 0x780
	.short	2744                    # 0xab8
	.short	2904                    # 0xb58
	.short	2832                    # 0xb10
	.short	2776                    # 0xad8
	.short	2568                    # 0xa08
	.short	2168                    # 0x878
	.short	1992                    # 0x7c8
	.short	1608                    # 0x648
	.short	416                     # 0x1a0
	.short	65352                   # 0xff48
	.short	65112                   # 0xfe58
	.short	64104                   # 0xfa68
	.short	63440                   # 0xf7d0
	.short	63320                   # 0xf758
	.short	62576                   # 0xf470
	.short	62896                   # 0xf5b0
	.short	680                     # 0x2a8
	.short	2648                    # 0xa58
	.short	1096                    # 0x448
	.short	1992                    # 0x7c8
	.short	5896                    # 0x1708
	.short	6512                    # 0x1970
	.short	3784                    # 0xec8
	.short	2624                    # 0xa40
	.short	3280                    # 0xcd0
	.short	3368                    # 0xd28
	.short	2104                    # 0x838
	.short	16                      # 0x10
	.short	64224                   # 0xfae0
	.short	64688                   # 0xfcb0
	.short	65208                   # 0xfeb8
	.short	64744                   # 0xfce8
	.short	64424                   # 0xfba8
	.short	64784                   # 0xfd10
	.short	64456                   # 0xfbc8
	.short	63760                   # 0xf910
	.short	63840                   # 0xf960
	.short	63536                   # 0xf830
	.short	62680                   # 0xf4d8
	.short	62720                   # 0xf500
	.short	63584                   # 0xf860
	.short	63984                   # 0xf9f0
	.short	64344                   # 0xfb58
	.short	65096                   # 0xfe48
	.short	80                      # 0x50
	.short	1048                    # 0x418
	.short	2320                    # 0x910
	.short	2368                    # 0x940
	.short	2096                    # 0x830
	.short	2760                    # 0xac8
	.short	3208                    # 0xc88
	.short	2640                    # 0xa50
	.short	1984                    # 0x7c0
	.short	1792                    # 0x700
	.short	1424                    # 0x590
	.short	616                     # 0x268
	.short	65520                   # 0xfff0
	.short	64424                   # 0xfba8
	.short	63264                   # 0xf720
	.short	63128                   # 0xf698
	.short	62176                   # 0xf2e0
	.short	60264                   # 0xeb68
	.short	60832                   # 0xeda0
	.short	64512                   # 0xfc00
	.short	856                     # 0x358
	.short	65328                   # 0xff30
	.short	920                     # 0x398
	.short	4640                    # 0x1220
	.short	6240                    # 0x1860
	.short	4968                    # 0x1368
	.short	4288                    # 0x10c0
	.short	4848                    # 0x12f0
	.short	4768                    # 0x12a0
	.short	3592                    # 0xe08
	.short	1920                    # 0x780
	.short	16                      # 0x10
	.short	64216                   # 0xfad8
	.short	63888                   # 0xf990
	.short	63456                   # 0xf7e0
	.short	62072                   # 0xf278
	.short	60944                   # 0xee10
	.short	60312                   # 0xeb98
	.short	59296                   # 0xe7a0
	.short	59128                   # 0xe6f8
	.short	59952                   # 0xea30
	.short	59776                   # 0xe980
	.short	58400                   # 0xe420
	.short	58432                   # 0xe440
	.short	60328                   # 0xeba8
	.short	61336                   # 0xef98
	.short	61288                   # 0xef68
	.short	62088                   # 0xf288
	.short	63400                   # 0xf7a8
	.short	64656                   # 0xfc90
	.short	504                     # 0x1f8
	.short	1320                    # 0x528
	.short	1584                    # 0x630
	.short	2280                    # 0x8e8
	.short	3224                    # 0xc98
	.short	3408                    # 0xd50
	.short	2968                    # 0xb98
	.short	2336                    # 0x920
	.short	1656                    # 0x678
	.short	1008                    # 0x3f0
	.short	608                     # 0x260
	.short	65024                   # 0xfe00
	.short	63504                   # 0xf810
	.short	62648                   # 0xf4b8
	.short	61632                   # 0xf0c0
	.short	60264                   # 0xeb68
	.short	61272                   # 0xef58
	.short	64232                   # 0xfae8
	.short	64992                   # 0xfde0
	.short	63104                   # 0xf680
	.short	63760                   # 0xf910
	.short	1760                    # 0x6e0
	.short	3104                    # 0xc20
	.short	1496                    # 0x5d8
	.short	1032                    # 0x408
	.short	1480                    # 0x5c8
	.short	1104                    # 0x450
	.short	720                     # 0x2d0
	.short	296                     # 0x128
	.short	64376                   # 0xfb78
	.short	63080                   # 0xf668
	.short	62512                   # 0xf430
	.short	61776                   # 0xf150
	.short	60816                   # 0xed90
	.short	59504                   # 0xe870
	.short	58440                   # 0xe448
	.short	58080                   # 0xe2e0
	.short	57416                   # 0xe048
	.short	56784                   # 0xddd0
	.short	57096                   # 0xdf08
	.short	57568                   # 0xe0e0
	.short	57496                   # 0xe098
	.short	57944                   # 0xe258
	.short	58656                   # 0xe520
	.short	59048                   # 0xe6a8
	.short	59944                   # 0xea28
	.short	61320                   # 0xef88
	.short	62120                   # 0xf2a8
	.short	62792                   # 0xf548
	.short	64424                   # 0xfba8
	.short	456                     # 0x1c8
	.short	1016                    # 0x3f8
	.short	1864                    # 0x748
	.short	3208                    # 0xc88
	.short	3736                    # 0xe98
	.short	3512                    # 0xdb8
	.short	3480                    # 0xd98
	.short	3408                    # 0xd50
	.short	2920                    # 0xb68
	.short	2416                    # 0x970
	.short	1728                    # 0x6c0
	.short	568                     # 0x238
	.short	65048                   # 0xfe18
	.short	64264                   # 0xfb08
	.short	63520                   # 0xf820
	.short	63360                   # 0xf780
	.short	63856                   # 0xf970
	.short	63920                   # 0xf9b0
	.short	63616                   # 0xf880
	.short	64040                   # 0xfa28
	.short	40                      # 0x28
	.short	1688                    # 0x698
	.short	2376                    # 0x948
	.short	2256                    # 0x8d0
	.short	2528                    # 0x9e0
	.short	3536                    # 0xdd0
	.short	4112                    # 0x1010
	.short	3392                    # 0xd40
	.short	2392                    # 0x958
	.short	1832                    # 0x728
	.short	776                     # 0x308
	.short	64928                   # 0xfda0
	.short	63992                   # 0xf9f8
	.short	62488                   # 0xf418
	.short	60568                   # 0xec98
	.short	59576                   # 0xe8b8
	.short	58904                   # 0xe618
	.short	57856                   # 0xe200
	.short	57040                   # 0xded0
	.short	57160                   # 0xdf48
	.short	57600                   # 0xe100
	.short	57728                   # 0xe180
	.short	57696                   # 0xe160
	.short	58312                   # 0xe3c8
	.short	59544                   # 0xe898
	.short	60888                   # 0xedd8
	.short	62032                   # 0xf250
	.short	62808                   # 0xf558
	.short	64256                   # 0xfb00
	.short	760                     # 0x2f8
	.short	1968                    # 0x7b0
	.short	2944                    # 0xb80
	.short	4360                    # 0x1108
	.short	5400                    # 0x1518
	.short	5728                    # 0x1660
	.short	6000                    # 0x1770
	.short	6256                    # 0x1870
	.short	5880                    # 0x16f8
	.short	4864                    # 0x1300
	.short	3960                    # 0xf78
	.short	4032                    # 0xfc0
	.short	4208                    # 0x1070
	.short	3304                    # 0xce8
	.short	2808                    # 0xaf8
	.short	3032                    # 0xbd8
	.short	3368                    # 0xd28
	.short	4264                    # 0x10a8
	.short	4976                    # 0x1370
	.short	4256                    # 0x10a0
	.short	4160                    # 0x1040
	.short	5400                    # 0x1518
	.short	5952                    # 0x1740
	.short	5456                    # 0x1550
	.short	5016                    # 0x1398
	.short	4320                    # 0x10e0
	.short	2760                    # 0xac8
	.short	1600                    # 0x640
	.short	840                     # 0x348
	.short	64792                   # 0xfd18
	.short	63064                   # 0xf658
	.short	61912                   # 0xf1d8
	.short	60448                   # 0xec20
	.short	59232                   # 0xe760
	.short	58704                   # 0xe550
	.short	58552                   # 0xe4b8
	.short	58392                   # 0xe418
	.short	58424                   # 0xe438
	.short	58632                   # 0xe508
	.short	59192                   # 0xe738
	.short	60184                   # 0xeb18
	.short	61640                   # 0xf0c8
	.short	63000                   # 0xf618
	.short	63880                   # 0xf988
	.short	65224                   # 0xfec8
	.short	1304                    # 0x518
	.short	2520                    # 0x9d8
	.short	4376                    # 0x1118
	.short	6128                    # 0x17f0
	.short	7088                    # 0x1bb0
	.short	7720                    # 0x1e28
	.short	8480                    # 0x2120
	.short	9176                    # 0x23d8
	.short	9784                    # 0x2638
	.short	9240                    # 0x2418
	.short	8320                    # 0x2080
	.short	7472                    # 0x1d30
	.short	7400                    # 0x1ce8
	.short	7576                    # 0x1d98
	.short	7336                    # 0x1ca8
	.short	6872                    # 0x1ad8
	.short	6496                    # 0x1960
	.short	6136                    # 0x17f8
	.short	6720                    # 0x1a40
	.short	7416                    # 0x1cf8
	.short	7480                    # 0x1d38
	.short	7216                    # 0x1c30
	.short	6760                    # 0x1a68
	.short	6240                    # 0x1860
	.short	5248                    # 0x1480
	.short	4128                    # 0x1020
	.short	2920                    # 0xb68
	.short	1000                    # 0x3e8
	.short	64424                   # 0xfba8
	.short	62728                   # 0xf508
	.short	60992                   # 0xee40
	.short	59424                   # 0xe820
	.short	58168                   # 0xe338
	.short	56968                   # 0xde88
	.short	55856                   # 0xda30
	.short	55248                   # 0xd7d0
	.short	55080                   # 0xd728
	.short	55256                   # 0xd7d8
	.short	55704                   # 0xd998
	.short	56336                   # 0xdc10
	.short	57264                   # 0xdfb0
	.short	58480                   # 0xe470
	.short	59720                   # 0xe948
	.short	61336                   # 0xef98
	.short	62960                   # 0xf5f0
	.short	64568                   # 0xfc38
	.short	552                     # 0x228
	.short	1944                    # 0x798
	.short	3480                    # 0xd98
	.short	4896                    # 0x1320
	.short	5984                    # 0x1760
	.short	6768                    # 0x1a70
	.short	7136                    # 0x1be0
	.short	7360                    # 0x1cc0
	.short	7576                    # 0x1d98
	.short	6792                    # 0x1a88
	.short	5720                    # 0x1658
	.short	4768                    # 0x12a0
	.short	4480                    # 0x1180
	.short	4264                    # 0x10a8
	.short	3792                    # 0xed0
	.short	3272                    # 0xcc8
	.short	2776                    # 0xad8
	.short	2336                    # 0x920
	.short	2928                    # 0xb70
	.short	3632                    # 0xe30
	.short	3816                    # 0xee8
	.short	3456                    # 0xd80
	.short	3040                    # 0xbe0
	.short	2752                    # 0xac0
	.short	2488                    # 0x9b8
	.short	2192                    # 0x890
	.short	1680                    # 0x690
	.short	504                     # 0x1f8
	.short	64816                   # 0xfd30
	.short	63984                   # 0xf9f0
	.short	62896                   # 0xf5b0
	.short	61832                   # 0xf188
	.short	60984                   # 0xee38
	.short	59880                   # 0xe9e8
	.short	58856                   # 0xe5e8
	.short	58336                   # 0xe3e0
	.short	58528                   # 0xe4a0
	.short	58888                   # 0xe608
	.short	59192                   # 0xe738
	.short	59480                   # 0xe858
	.short	59776                   # 0xe980
	.short	60448                   # 0xec20
	.short	61488                   # 0xf030
	.short	62544                   # 0xf450
	.short	63608                   # 0xf878
	.short	64616                   # 0xfc68
	.short	65384                   # 0xff68
	.short	968                     # 0x3c8
	.short	2232                    # 0x8b8
	.short	3328                    # 0xd00
	.short	4152                    # 0x1038
	.short	4824                    # 0x12d8
	.short	5264                    # 0x1490
	.short	5704                    # 0x1648
	.short	5816                    # 0x16b8
	.short	5224                    # 0x1468
	.short	4448                    # 0x1160
	.short	4008                    # 0xfa8
	.short	4152                    # 0x1038
	.short	4184                    # 0x1058
	.short	3976                    # 0xf88
	.short	3664                    # 0xe50
	.short	3272                    # 0xcc8
	.short	3264                    # 0xcc0
	.short	4032                    # 0xfc0
	.short	4640                    # 0x1220
	.short	4768                    # 0x12a0
	.short	4344                    # 0x10f8
	.short	3872                    # 0xf20
	.short	3368                    # 0xd28
	.short	3192                    # 0xc78
	.short	3000                    # 0xbb8
	.short	2256                    # 0x8d0
	.short	456                     # 0x1c8
	.short	64312                   # 0xfb38
	.short	63072                   # 0xf660
	.short	62256                   # 0xf330
	.short	61560                   # 0xf078
	.short	60456                   # 0xec28
	.short	59080                   # 0xe6c8
	.short	58048                   # 0xe2c0
	.short	57424                   # 0xe050
	.short	57288                   # 0xdfc8
	.short	57400                   # 0xe038
	.short	57696                   # 0xe160
	.short	58112                   # 0xe300
	.short	58728                   # 0xe568
	.short	59064                   # 0xe6b8
	.short	59808                   # 0xe9a0
	.short	60752                   # 0xed50
	.short	62008                   # 0xf238
	.short	63192                   # 0xf6d8
	.short	64264                   # 0xfb08
	.short	65296                   # 0xff10
	.short	744                     # 0x2e8
	.short	1696                    # 0x6a0
	.short	2752                    # 0xac0
	.short	3528                    # 0xdc8
	.short	4112                    # 0x1010
	.short	4456                    # 0x1168
	.short	4120                    # 0x1018
	.short	3728                    # 0xe90
	.short	3064                    # 0xbf8
	.short	2824                    # 0xb08
	.short	2640                    # 0xa50
	.short	2544                    # 0x9f0
	.short	2400                    # 0x960
	.short	2184                    # 0x888
	.short	2056                    # 0x808
	.short	2504                    # 0x9c8
	.short	2984                    # 0xba8
	.short	3816                    # 0xee8
	.short	4208                    # 0x1070
	.short	4304                    # 0x10d0
	.short	3928                    # 0xf58
	.short	3424                    # 0xd60
	.short	2976                    # 0xba0
	.short	2656                    # 0xa60
	.short	2288                    # 0x8f0
	.short	1544                    # 0x608
	.short	65456                   # 0xffb0
	.short	63800                   # 0xf938
	.short	62304                   # 0xf360
	.short	61488                   # 0xf030
	.short	60960                   # 0xee20
	.short	60272                   # 0xeb70
	.short	59304                   # 0xe7a8
	.short	58384                   # 0xe410
	.short	57664                   # 0xe140
	.short	57288                   # 0xdfc8
	.short	57336                   # 0xdff8
	.short	57840                   # 0xe1f0
	.short	58440                   # 0xe448
	.short	59088                   # 0xe6d0
	.short	59264                   # 0xe780
	.short	59880                   # 0xe9e8
	.short	60656                   # 0xecf0
	.short	62024                   # 0xf248
	.short	63280                   # 0xf730
	.short	64448                   # 0xfbc0
	.short	65408                   # 0xff80
	.short	784                     # 0x310
	.short	1648                    # 0x670
	.short	2712                    # 0xa98
	.short	3464                    # 0xd88
	.short	4056                    # 0xfd8
	.short	4288                    # 0x10c0
	.short	3760                    # 0xeb0
	.short	3144                    # 0xc48
	.short	2232                    # 0x8b8
	.short	2456                    # 0x998
	.short	2752                    # 0xac0
	.short	3176                    # 0xc68
	.short	2936                    # 0xb78
	.short	2504                    # 0x9c8
	.short	2104                    # 0x838
	.short	2296                    # 0x8f8
	.short	2688                    # 0xa80
	.short	3232                    # 0xca0
	.short	3600                    # 0xe10
	.short	3656                    # 0xe48
	.short	3416                    # 0xd58
	.short	2600                    # 0xa28
	.short	1872                    # 0x750
	.short	1264                    # 0x4f0
	.short	552                     # 0x228
	.short	65256                   # 0xfee8
	.short	64128                   # 0xfa80
	.short	62568                   # 0xf468
	.short	61136                   # 0xeed0
	.short	60128                   # 0xeae0
	.short	59576                   # 0xe8b8
	.short	59160                   # 0xe718
	.short	58800                   # 0xe5b0
	.short	58536                   # 0xe4a8
	.short	58384                   # 0xe410
	.short	58496                   # 0xe480
	.short	58696                   # 0xe548
	.short	59192                   # 0xe738
	.short	59824                   # 0xe9b0
	.short	60800                   # 0xed80
	.short	61624                   # 0xf0b8
	.short	62592                   # 0xf480
	.short	63408                   # 0xf7b0
	.short	64368                   # 0xfb70
	.short	65232                   # 0xfed0
	.short	808                     # 0x328
	.short	1824                    # 0x720
	.short	2712                    # 0xa98
	.short	3584                    # 0xe00
	.short	4344                    # 0x10f8
	.short	4832                    # 0x12e0
	.short	4776                    # 0x12a8
	.short	4528                    # 0x11b0
	.short	3928                    # 0xf58
	.short	3896                    # 0xf38
	.short	3720                    # 0xe88
	.short	3848                    # 0xf08
	.short	4032                    # 0xfc0
	.short	4080                    # 0xff0
	.short	4280                    # 0x10b8
	.short	4408                    # 0x1138
	.short	4504                    # 0x1198
	.short	5072                    # 0x13d0
	.short	5688                    # 0x1638
	.short	6120                    # 0x17e8
	.short	5976                    # 0x1758
	.short	5672                    # 0x1628
	.short	5216                    # 0x1460
	.short	4328                    # 0x10e8
	.short	3232                    # 0xca0
	.short	2120                    # 0x848
	.short	640                     # 0x280
	.short	64656                   # 0xfc90
	.short	63232                   # 0xf700
	.short	61688                   # 0xf0f8
	.short	60184                   # 0xeb18
	.short	58936                   # 0xe638
	.short	57784                   # 0xe1b8
	.short	56952                   # 0xde78
	.short	56408                   # 0xdc58
	.short	56248                   # 0xdbb8
	.short	56360                   # 0xdc28
	.short	56752                   # 0xddb0
	.short	57392                   # 0xe030
	.short	58160                   # 0xe330
	.short	59120                   # 0xe6f0
	.short	60448                   # 0xec20
	.short	61968                   # 0xf210
	.short	63424                   # 0xf7c0
	.short	64736                   # 0xfce0
	.short	336                     # 0x150
	.short	1392                    # 0x570
	.short	2288                    # 0x8f0
	.short	3184                    # 0xc70
	.short	3920                    # 0xf50
	.short	4792                    # 0x12b8
	.short	5472                    # 0x1560
	.short	5856                    # 0x16e0
	.short	5680                    # 0x1630
	.short	5352                    # 0x14e8
	.short	4760                    # 0x1298
	.short	4536                    # 0x11b8
	.short	4464                    # 0x1170
	.short	4536                    # 0x11b8
	.short	4544                    # 0x11c0
	.short	4072                    # 0xfe8
	.short	3672                    # 0xe58
	.short	3256                    # 0xcb8
	.short	3152                    # 0xc50
	.short	3432                    # 0xd68
	.short	3736                    # 0xe98
	.short	3632                    # 0xe30
	.short	3112                    # 0xc28
	.short	2576                    # 0xa10
	.short	1752                    # 0x6d8
	.short	736                     # 0x2e0
	.short	65184                   # 0xfea0
	.short	64024                   # 0xfa18
	.short	62696                   # 0xf4e8
	.short	61464                   # 0xf018
	.short	60264                   # 0xeb68
	.short	59112                   # 0xe6e8
	.short	58128                   # 0xe310
	.short	57288                   # 0xdfc8
	.short	56632                   # 0xdd38
	.short	56312                   # 0xdbf8
	.short	56376                   # 0xdc38
	.short	56784                   # 0xddd0
	.short	57456                   # 0xe070
	.short	58256                   # 0xe390
	.short	59232                   # 0xe760
	.short	60296                   # 0xeb88
	.short	61216                   # 0xef20
	.short	62328                   # 0xf378
	.short	63536                   # 0xf830
	.short	64736                   # 0xfce0
	.short	248                     # 0xf8
	.short	1152                    # 0x480
	.short	1896                    # 0x768
	.short	2408                    # 0x968
	.short	2784                    # 0xae0
	.short	3000                    # 0xbb8
	.short	3088                    # 0xc10
	.short	2992                    # 0xbb0
	.short	2680                    # 0xa78
	.short	2272                    # 0x8e0
	.short	1768                    # 0x6e8
	.short	1344                    # 0x540
	.short	2160                    # 0x870
	.short	3040                    # 0xbe0
	.short	3792                    # 0xed0
	.short	3648                    # 0xe40
	.short	3344                    # 0xd10
	.short	3272                    # 0xcc8
	.short	3624                    # 0xe28
	.short	4000                    # 0xfa0
	.short	4016                    # 0xfb0
	.short	3864                    # 0xf18
	.short	3536                    # 0xdd0
	.short	3016                    # 0xbc8
	.short	2280                    # 0x8e8
	.short	1576                    # 0x628
	.short	768                     # 0x300
	.short	65304                   # 0xff18
	.short	64320                   # 0xfb40
	.short	63360                   # 0xf780
	.short	62344                   # 0xf388
	.short	61480                   # 0xf028
	.short	60800                   # 0xed80
	.short	60184                   # 0xeb18
	.short	59752                   # 0xe968
	.short	59584                   # 0xe8c0
	.short	59192                   # 0xe738
	.short	58968                   # 0xe658
	.short	59032                   # 0xe698
	.short	59528                   # 0xe888
	.short	60216                   # 0xeb38
	.short	60832                   # 0xeda0
	.short	61816                   # 0xf178
	.short	62904                   # 0xf5b8
	.short	64040                   # 0xfa28
	.short	65192                   # 0xfea8
	.short	768                     # 0x300
	.short	1736                    # 0x6c8
	.short	2400                    # 0x960
	.short	2928                    # 0xb70
	.short	3296                    # 0xce0
	.short	3440                    # 0xd70
	.short	3408                    # 0xd50
	.short	3168                    # 0xc60
	.short	2192                    # 0x890
	.short	1048                    # 0x418
	.short	40                      # 0x28
	.short	464                     # 0x1d0
	.short	1016                    # 0x3f8
	.short	1448                    # 0x5a8
	.short	1792                    # 0x700
	.short	2056                    # 0x808
	.short	2464                    # 0x9a0
	.short	2840                    # 0xb18
	.short	3272                    # 0xcc8
	.short	3472                    # 0xd90
	.short	3688                    # 0xe68
	.short	3776                    # 0xec0
	.short	3632                    # 0xe30
	.short	3112                    # 0xc28
	.short	2520                    # 0x9d8
	.short	1840                    # 0x730
	.short	776                     # 0x308
	.short	65240                   # 0xfed8
	.short	64192                   # 0xfac0
	.short	62872                   # 0xf598
	.short	61656                   # 0xf0d8
	.short	60640                   # 0xece0
	.short	60072                   # 0xeaa8
	.short	59720                   # 0xe948
	.short	59600                   # 0xe8d0
	.short	59472                   # 0xe850
	.short	59528                   # 0xe888
	.short	59664                   # 0xe910
	.short	60112                   # 0xead0
	.short	60776                   # 0xed68
	.short	61464                   # 0xf018
	.short	62288                   # 0xf350
	.short	63160                   # 0xf6b8
	.short	64224                   # 0xfae0
	.short	65280                   # 0xff00
	.short	728                     # 0x2d8
	.short	1512                    # 0x5e8
	.short	2096                    # 0x830
	.short	2552                    # 0x9f8
	.short	2824                    # 0xb08
	.short	2944                    # 0xb80
	.short	2912                    # 0xb60
	.short	2440                    # 0x988
	.short	1608                    # 0x648
	.short	720                     # 0x2d0
	.short	336                     # 0x150
	.short	488                     # 0x1e8
	.short	624                     # 0x270
	.short	992                     # 0x3e0
	.short	1336                    # 0x538
	.short	1624                    # 0x658
	.short	2328                    # 0x918
	.short	3072                    # 0xc00
	.short	3720                    # 0xe88
	.short	4280                    # 0x10b8
	.short	4768                    # 0x12a0
	.short	5088                    # 0x13e0
	.short	5256                    # 0x1488
	.short	5192                    # 0x1448
	.short	4968                    # 0x1368
	.short	4384                    # 0x1120
	.short	3536                    # 0xdd0
	.short	2624                    # 0xa40
	.short	1544                    # 0x608
	.short	328                     # 0x148
	.short	64640                   # 0xfc80
	.short	63584                   # 0xf860
	.short	62680                   # 0xf4d8
	.short	61888                   # 0xf1c0
	.short	61448                   # 0xf008
	.short	61240                   # 0xef38
	.short	61048                   # 0xee78
	.short	61080                   # 0xee98
	.short	61328                   # 0xef90
	.short	61808                   # 0xf170
	.short	62352                   # 0xf390
	.short	62912                   # 0xf5c0
	.short	63624                   # 0xf888
	.short	64328                   # 0xfb48
	.short	65008                   # 0xfdf0
	.short	120                     # 0x78
	.short	976                     # 0x3d0
	.short	1736                    # 0x6c8
	.short	2296                    # 0x8f8
	.short	2720                    # 0xaa0
	.short	3016                    # 0xbc8
	.short	3144                    # 0xc48
	.short	2864                    # 0xb30
	.short	2424                    # 0x978
	.short	1704                    # 0x6a8
	.short	1328                    # 0x530
	.short	1008                    # 0x3f0
	.short	1080                    # 0x438
	.short	960                     # 0x3c0
	.short	848                     # 0x350
	.short	864                     # 0x360
	.short	1256                    # 0x4e8
	.short	1688                    # 0x698
	.short	2000                    # 0x7d0
	.short	2256                    # 0x8d0
	.short	2456                    # 0x998
	.short	2672                    # 0xa70
	.short	2888                    # 0xb48
	.short	2928                    # 0xb70
	.short	2768                    # 0xad0
	.short	2496                    # 0x9c0
	.short	2192                    # 0x890
	.short	1840                    # 0x730
	.short	1416                    # 0x588
	.short	856                     # 0x358
	.short	320                     # 0x140
	.short	65368                   # 0xff58
	.short	64832                   # 0xfd40
	.short	64360                   # 0xfb68
	.short	63976                   # 0xf9e8
	.short	63528                   # 0xf828
	.short	63184                   # 0xf6d0
	.short	62984                   # 0xf608
	.short	62936                   # 0xf5d8
	.short	62992                   # 0xf610
	.short	63080                   # 0xf668
	.short	63352                   # 0xf778
	.short	63720                   # 0xf8e8
	.short	64072                   # 0xfa48
	.short	64712                   # 0xfcc8
	.short	65360                   # 0xff50
	.short	456                     # 0x1c8
	.short	1064                    # 0x428
	.short	1600                    # 0x640
	.short	2000                    # 0x7d0
	.short	2512                    # 0x9d0
	.short	2880                    # 0xb40
	.short	3064                    # 0xbf8
	.short	3120                    # 0xc30
	.short	3080                    # 0xc08
	.short	2824                    # 0xb08
	.short	2440                    # 0x988
	.short	1984                    # 0x7c0
	.short	1648                    # 0x670
	.short	1544                    # 0x608
	.short	1424                    # 0x590
	.short	1416                    # 0x588
	.short	1456                    # 0x5b0
	.short	1504                    # 0x5e0
	.short	1720                    # 0x6b8
	.short	1864                    # 0x748
	.short	1880                    # 0x758
	.short	1792                    # 0x700
	.short	1704                    # 0x6a8
	.short	1568                    # 0x620
	.short	1496                    # 0x5d8
	.short	1424                    # 0x590
	.short	1320                    # 0x528
	.short	936                     # 0x3a8
	.short	576                     # 0x240
	.short	264                     # 0x108
	.short	65336                   # 0xff38
	.short	64848                   # 0xfd50
	.short	64416                   # 0xfba0
	.short	64056                   # 0xfa38
	.short	63776                   # 0xf920
	.short	63584                   # 0xf860
	.short	63208                   # 0xf6e8
	.short	63040                   # 0xf640
	.short	63016                   # 0xf628
	.short	63104                   # 0xf680
	.short	63264                   # 0xf720
	.short	63488                   # 0xf800
	.short	63712                   # 0xf8e0
	.short	63904                   # 0xf9a0
	.short	64120                   # 0xfa78
	.short	64392                   # 0xfb88
	.short	64800                   # 0xfd20
	.short	65184                   # 0xfea0
	.short	8                       # 0x8
	.short	272                     # 0x110
	.short	512                     # 0x200
	.short	864                     # 0x360
	.short	1248                    # 0x4e0
	.short	1544                    # 0x608
	.short	1848                    # 0x738
	.short	2104                    # 0x838
	.short	2264                    # 0x8d8
	.short	2088                    # 0x828
	.short	1848                    # 0x738
	.short	1536                    # 0x600
	.short	1192                    # 0x4a8
	.short	736                     # 0x2e0
	.short	304                     # 0x130
	.short	65440                   # 0xffa0
	.short	65352                   # 0xff48
	.short	65296                   # 0xff10
	.short	65264                   # 0xfef0
	.short	65328                   # 0xff30
	.short	65488                   # 0xffd0
	.short	144                     # 0x90
	.short	144                     # 0x90
	.short	112                     # 0x70
	.short	96                      # 0x60
	.short	65512                   # 0xffe8
	.short	65360                   # 0xff50
	.short	65208                   # 0xfeb8
	.short	65176                   # 0xfe98
	.short	65160                   # 0xfe88
	.short	65152                   # 0xfe80
	.short	65112                   # 0xfe58
	.short	65104                   # 0xfe50
	.short	65112                   # 0xfe58
	.short	64944                   # 0xfdb0
	.short	64776                   # 0xfd08
	.short	64640                   # 0xfc80
	.short	64248                   # 0xfaf8
	.short	63880                   # 0xf988
	.short	63584                   # 0xf860
	.short	63384                   # 0xf798
	.short	63264                   # 0xf720
	.short	63208                   # 0xf6e8
	.short	63272                   # 0xf728
	.short	63424                   # 0xf7c0
	.short	63656                   # 0xf8a8
	.short	63736                   # 0xf8f8
	.short	63840                   # 0xf960
	.short	64024                   # 0xfa18
	.short	64192                   # 0xfac0
	.short	64344                   # 0xfb58
	.short	64536                   # 0xfc18
	.short	64736                   # 0xfce0
	.short	64928                   # 0xfda0
	.short	65056                   # 0xfe20
	.short	65160                   # 0xfe88
	.short	65272                   # 0xfef8
	.short	65264                   # 0xfef0
	.short	65224                   # 0xfec8
	.short	65192                   # 0xfea8
	.short	64992                   # 0xfde0
	.short	64784                   # 0xfd10
	.short	64624                   # 0xfc70
	.short	64424                   # 0xfba8
	.short	64272                   # 0xfb10
	.short	64184                   # 0xfab8
	.short	64160                   # 0xfaa0
	.short	64208                   # 0xfad0
	.short	64280                   # 0xfb18
	.short	64144                   # 0xfa90
	.short	64024                   # 0xfa18
	.short	64016                   # 0xfa10
	.short	64128                   # 0xfa80
	.short	64272                   # 0xfb10
	.short	64392                   # 0xfb88
	.short	64656                   # 0xfc90
	.short	64952                   # 0xfdb8
	.short	65208                   # 0xfeb8
	.short	65408                   # 0xff80
	.short	88                      # 0x58
	.short	312                     # 0x138
	.short	280                     # 0x118
	.short	200                     # 0xc8
	.short	192                     # 0xc0
	.short	65432                   # 0xff98
	.short	65072                   # 0xfe30
	.short	64824                   # 0xfd38
	.short	64616                   # 0xfc68
	.short	64376                   # 0xfb78
	.short	64184                   # 0xfab8
	.short	64232                   # 0xfae8
	.short	64376                   # 0xfb78
	.short	64464                   # 0xfbd0
	.short	64488                   # 0xfbe8
	.short	64536                   # 0xfc18
	.short	64664                   # 0xfc98
	.short	64808                   # 0xfd28
	.short	64840                   # 0xfd48
	.short	64872                   # 0xfd68
	.short	64872                   # 0xfd68
	.short	64912                   # 0xfd90
	.short	64952                   # 0xfdb8
	.short	64912                   # 0xfd90
	.short	64872                   # 0xfd68
	.short	64888                   # 0xfd78
	.short	64672                   # 0xfca0
	.short	64368                   # 0xfb70
	.short	64208                   # 0xfad0
	.short	63984                   # 0xf9f0
	.short	63600                   # 0xf870
	.short	63304                   # 0xf748
	.short	63304                   # 0xf748
	.short	63344                   # 0xf770
	.short	63304                   # 0xf748
	.short	63264                   # 0xf720
	.short	63400                   # 0xf7a8
	.short	63608                   # 0xf878
	.short	63792                   # 0xf930
	.short	63896                   # 0xf998
	.short	64056                   # 0xfa38
	.short	64528                   # 0xfc10
	.short	64928                   # 0xfda0
	.short	65136                   # 0xfe70
	.short	48                      # 0x30
	.short	584                     # 0x248
	.short	928                     # 0x3a0
	.short	1384                    # 0x568
	.short	1848                    # 0x738
	.short	2160                    # 0x870
	.short	2400                    # 0x960
	.short	2576                    # 0xa10
	.short	2624                    # 0xa40
	.short	2600                    # 0xa28
	.short	2488                    # 0x9b8
	.short	2280                    # 0x8e8
	.short	2024                    # 0x7e8
	.short	1760                    # 0x6e0
	.short	1416                    # 0x588
	.short	1072                    # 0x430
	.short	768                     # 0x300
	.short	608                     # 0x260
	.short	464                     # 0x1d0
	.short	280                     # 0x118
	.short	65456                   # 0xffb0
	.short	65176                   # 0xfe98
	.short	65048                   # 0xfe18
	.short	64928                   # 0xfda0
	.short	64776                   # 0xfd08
	.short	64696                   # 0xfcb8
	.short	64760                   # 0xfcf8
	.short	64864                   # 0xfd60
	.short	64912                   # 0xfd90
	.short	64912                   # 0xfd90
	.short	64984                   # 0xfdd8
	.short	65104                   # 0xfe50
	.short	64928                   # 0xfda0
	.short	64736                   # 0xfce0
	.short	64704                   # 0xfcc0
	.short	64744                   # 0xfce8
	.short	64688                   # 0xfcb0
	.short	64608                   # 0xfc60
	.short	64624                   # 0xfc70
	.short	64696                   # 0xfcb8
	.short	64736                   # 0xfce0
	.short	64832                   # 0xfd40
	.short	64984                   # 0xfdd8
	.short	65128                   # 0xfe68
	.short	65400                   # 0xff78
	.short	104                     # 0x68
	.short	264                     # 0x108
	.short	632                     # 0x278
	.short	928                     # 0x3a0
	.short	1056                    # 0x420
	.short	1424                    # 0x590
	.short	1800                    # 0x708
	.short	1976                    # 0x7b8
	.short	2008                    # 0x7d8
	.short	2056                    # 0x808
	.short	2104                    # 0x838
	.short	2008                    # 0x7d8
	.short	1768                    # 0x6e8
	.short	1536                    # 0x600
	.short	1456                    # 0x5b0
	.short	1304                    # 0x518
	.short	1040                    # 0x410
	.short	672                     # 0x2a0
	.short	408                     # 0x198
	.short	208                     # 0xd0
	.short	200                     # 0xc8
	.short	176                     # 0xb0
	.short	104                     # 0x68
	.short	192                     # 0xc0
	.short	336                     # 0x150
	.short	384                     # 0x180
	.short	544                     # 0x220
	.short	728                     # 0x2d8
	.short	832                     # 0x340
	.short	864                     # 0x360
	.short	896                     # 0x380
	.short	896                     # 0x380
	.short	824                     # 0x338
	.short	712                     # 0x2c8
	.short	696                     # 0x2b8
	.short	640                     # 0x280
	.short	512                     # 0x200
	.short	256                     # 0x100
	.short	152                     # 0x98
	.short	128                     # 0x80
	.short	32                      # 0x20
	.short	65520                   # 0xfff0
	.short	0                       # 0x0
	.short	32                      # 0x20
	.short	152                     # 0x98
	.short	288                     # 0x120
	.short	368                     # 0x170
	.short	560                     # 0x230
	.short	752                     # 0x2f0
	.short	848                     # 0x350
	.short	1152                    # 0x480
	.short	1464                    # 0x5b8
	.short	1616                    # 0x650
	.short	1704                    # 0x6a8
	.short	1848                    # 0x738
	.short	1944                    # 0x798
	.short	1968                    # 0x7b0
	.short	1984                    # 0x7c0
	.short	1944                    # 0x798
	.short	1640                    # 0x668
	.short	1432                    # 0x598
	.short	1328                    # 0x530
	.short	1224                    # 0x4c8
	.short	1040                    # 0x410
	.short	848                     # 0x350
	.short	632                     # 0x278
	.short	472                     # 0x1d8
	.short	328                     # 0x148
	.short	128                     # 0x80
	.short	0                       # 0x0
	.short	65472                   # 0xffc0
	.short	65496                   # 0xffd8
	.short	65448                   # 0xffa8
	.short	65376                   # 0xff60
	.short	65408                   # 0xff80
	.short	24                      # 0x18
	.short	112                     # 0x70
	.short	65504                   # 0xffe0
	.short	65416                   # 0xff88
	.short	65472                   # 0xffc0
	.short	65336                   # 0xff38
	.short	65176                   # 0xfe98
	.short	65104                   # 0xfe50
	.short	65040                   # 0xfe10
	.short	64984                   # 0xfdd8
	.short	64912                   # 0xfd90
	.short	64816                   # 0xfd30
	.short	64952                   # 0xfdb8
	.short	65128                   # 0xfe68
	.short	65136                   # 0xfe70
	.short	65120                   # 0xfe60
	.short	65136                   # 0xfe70
	.short	65232                   # 0xfed0
	.short	65424                   # 0xff90
	.short	65504                   # 0xffe0
	.short	65520                   # 0xfff0
	.short	168                     # 0xa8
	.short	360                     # 0x168
	.short	464                     # 0x1d0
	.short	504                     # 0x1f8
	.short	528                     # 0x210
	.short	632                     # 0x278
	.short	616                     # 0x268
	.short	520                     # 0x208
	.short	544                     # 0x220
	.short	504                     # 0x1f8
	.short	408                     # 0x198
	.short	344                     # 0x158
	.short	256                     # 0x100
	.short	192                     # 0xc0
	.short	160                     # 0xa0
	.short	24                      # 0x18
	.short	65432                   # 0xff98
	.short	65320                   # 0xff28
	.short	65216                   # 0xfec0
	.short	65152                   # 0xfe80
	.short	65120                   # 0xfe60
	.short	64904                   # 0xfd88
	.short	64752                   # 0xfcf0
	.short	64712                   # 0xfcc8
	.short	64624                   # 0xfc70
	.short	64528                   # 0xfc10
	.short	64456                   # 0xfbc8
	.short	64432                   # 0xfbb0
	.short	64488                   # 0xfbe8
	.short	64488                   # 0xfbe8
	.short	64384                   # 0xfb80
	.short	64392                   # 0xfb88
	.short	64320                   # 0xfb40
	.short	64280                   # 0xfb18
	.short	64288                   # 0xfb20
	.short	64184                   # 0xfab8
	.short	64080                   # 0xfa50
	.short	64080                   # 0xfa50
	.short	64184                   # 0xfab8
	.short	64248                   # 0xfaf8
	.short	64280                   # 0xfb18
	.short	64432                   # 0xfbb0
	.short	64648                   # 0xfc88
	.short	64784                   # 0xfd10
	.short	64832                   # 0xfd40
	.short	64920                   # 0xfd98
	.short	65080                   # 0xfe38
	.short	65248                   # 0xfee0
	.short	65272                   # 0xfef8
	.short	65264                   # 0xfef0
	.short	65304                   # 0xff18
	.short	65304                   # 0xff18
	.short	65304                   # 0xff18
	.short	65384                   # 0xff68
	.short	65432                   # 0xff98
	.short	65432                   # 0xff98
	.short	65488                   # 0xffd0
	.short	65528                   # 0xfff8
	.short	72                      # 0x48
	.short	56                      # 0x38
	.short	8                       # 0x8
	.short	8                       # 0x8
	.short	65504                   # 0xffe0
	.short	65456                   # 0xffb0
	.short	65464                   # 0xffb8
	.short	65232                   # 0xfed0
	.short	65048                   # 0xfe18
	.short	65048                   # 0xfe18
	.short	65008                   # 0xfdf0
	.short	65080                   # 0xfe38
	.short	65168                   # 0xfe90
	.short	65168                   # 0xfe90
	.short	64936                   # 0xfda8
	.short	64840                   # 0xfd48
	.short	64880                   # 0xfd70
	.short	64872                   # 0xfd68
	.short	64768                   # 0xfd00
	.short	64696                   # 0xfcb8
	.short	64696                   # 0xfcb8
	.short	64760                   # 0xfcf8
	.short	64768                   # 0xfd00
	.short	64560                   # 0xfc30
	.short	64464                   # 0xfbd0
	.short	64528                   # 0xfc10
	.short	64544                   # 0xfc20
	.short	64480                   # 0xfbe0
	.short	64424                   # 0xfba8
	.short	64560                   # 0xfc30
	.short	64768                   # 0xfd00
	.short	64848                   # 0xfd50
	.short	64912                   # 0xfd90
	.short	65040                   # 0xfe10
	.short	65192                   # 0xfea8
	.short	65344                   # 0xff40
	.short	65440                   # 0xffa0
	.short	65488                   # 0xffd0
	.short	65480                   # 0xffc8
	.short	65480                   # 0xffc8
	.short	65496                   # 0xffd8
	.short	65440                   # 0xffa0
	.short	65432                   # 0xff98
	.short	65464                   # 0xffb8
	.short	80                      # 0x50
	.short	184                     # 0xb8
	.short	176                     # 0xb0
	.short	432                     # 0x1b0
	.short	736                     # 0x2e0
	.short	792                     # 0x318
	.short	816                     # 0x330
	.short	736                     # 0x2e0
	.short	712                     # 0x2c8
	.short	632                     # 0x278
	.short	336                     # 0x150
	.short	80                      # 0x50
	.short	65472                   # 0xffc0
	.short	65416                   # 0xff88
	.short	65304                   # 0xff18
	.short	65168                   # 0xfe90
	.short	65088                   # 0xfe40
	.short	65072                   # 0xfe30
	.short	65000                   # 0xfde8
	.short	64976                   # 0xfdd0
	.short	64880                   # 0xfd70
	.short	64840                   # 0xfd48
	.short	64784                   # 0xfd10
	.short	64664                   # 0xfc98
	.short	64568                   # 0xfc38
	.short	64568                   # 0xfc38
	.short	64632                   # 0xfc78
	.short	64664                   # 0xfc98
	.short	64752                   # 0xfcf0
	.short	64936                   # 0xfda8
	.short	65096                   # 0xfe48
	.short	65224                   # 0xfec8
	.short	65328                   # 0xff30
	.short	65432                   # 0xff98
	.short	0                       # 0x0
	.short	80                      # 0x50
	.short	88                      # 0x58
	.short	168                     # 0xa8
	.short	232                     # 0xe8
	.short	208                     # 0xd0
	.short	312                     # 0x138
	.short	480                     # 0x1e0
	.short	536                     # 0x218
	.short	520                     # 0x208
	.short	560                     # 0x230
	.short	600                     # 0x258
	.short	584                     # 0x248
	.short	688                     # 0x2b0
	.short	792                     # 0x318
	.short	816                     # 0x330
	.short	856                     # 0x358
	.short	896                     # 0x380
	.short	888                     # 0x378
	.short	1032                    # 0x408
	.short	1152                    # 0x480
	.short	1120                    # 0x460
	.short	968                     # 0x3c8
	.short	792                     # 0x318
	.short	688                     # 0x2b0
	.short	488                     # 0x1e8
	.short	184                     # 0xb8
	.short	65496                   # 0xffd8
	.short	65328                   # 0xff30
	.short	65224                   # 0xfec8
	.short	65120                   # 0xfe60
	.short	65120                   # 0xfe60
	.short	65144                   # 0xfe78
	.short	65144                   # 0xfe78
	.short	64960                   # 0xfdc0
	.short	64880                   # 0xfd70
	.short	64848                   # 0xfd50
	.short	64776                   # 0xfd08
	.short	64648                   # 0xfc88
	.short	64552                   # 0xfc28
	.short	64664                   # 0xfc98
	.short	64792                   # 0xfd18
	.short	64864                   # 0xfd60
	.short	64864                   # 0xfd60
	.short	64984                   # 0xfdd8
	.short	65168                   # 0xfe90
	.short	65256                   # 0xfee8
	.short	65296                   # 0xff10
	.short	65368                   # 0xff58
	.short	65424                   # 0xff90
	.short	65464                   # 0xffb8
	.short	65504                   # 0xffe0
	.short	65520                   # 0xfff0
	.short	65520                   # 0xfff0
	.short	208                     # 0xd0
	.short	400                     # 0x190
	.short	456                     # 0x1c8
	.short	384                     # 0x180
	.short	392                     # 0x188
	.short	432                     # 0x1b0
	.short	568                     # 0x238
	.short	664                     # 0x298
	.short	696                     # 0x2b8
	.short	616                     # 0x268
	.short	600                     # 0x258
	.short	600                     # 0x258
	.short	560                     # 0x230
	.short	552                     # 0x228
	.short	560                     # 0x230
	.short	600                     # 0x258
	.short	584                     # 0x248
	.short	504                     # 0x1f8
	.short	336                     # 0x150
	.short	200                     # 0xc8
	.short	88                      # 0x58
	.short	88                      # 0x58
	.short	56                      # 0x38
	.short	0                       # 0x0
	.short	65360                   # 0xff50
	.short	65280                   # 0xff00
	.short	65272                   # 0xfef8
	.short	65152                   # 0xfe80
	.short	64952                   # 0xfdb8
	.short	64880                   # 0xfd70
	.short	64768                   # 0xfd00
	.short	64656                   # 0xfc90
	.short	64576                   # 0xfc40
	.short	64552                   # 0xfc28
	.short	64600                   # 0xfc58
	.short	64664                   # 0xfc98
	.short	64784                   # 0xfd10
	.short	64888                   # 0xfd78
	.short	64992                   # 0xfde0
	.short	65152                   # 0xfe80
	.short	65288                   # 0xff08
	.short	65376                   # 0xff60
	.short	65488                   # 0xffd0
	.short	48                      # 0x30
	.short	104                     # 0x68
	.short	272                     # 0x110
	.short	408                     # 0x198
	.short	448                     # 0x1c0
	.short	520                     # 0x208
	.short	608                     # 0x260
	.short	640                     # 0x280
	.short	800                     # 0x320
	.short	912                     # 0x390
	.short	920                     # 0x398
	.short	1040                    # 0x410
	.short	1160                    # 0x488
	.short	1184                    # 0x4a0
	.short	1096                    # 0x448
	.short	1032                    # 0x408
	.short	992                     # 0x3e0
	.short	968                     # 0x3c8
	.short	920                     # 0x398
	.short	848                     # 0x350
	.short	776                     # 0x308
	.short	712                     # 0x2c8
	.short	632                     # 0x278
	.short	472                     # 0x1d8
	.short	328                     # 0x148
	.short	232                     # 0xe8
	.short	64                      # 0x40
	.short	65440                   # 0xffa0
	.short	65360                   # 0xff50
	.short	64960                   # 0xfdc0
	.short	64648                   # 0xfc88
	.short	64560                   # 0xfc30
	.short	64392                   # 0xfb88
	.short	64168                   # 0xfaa8
	.short	64080                   # 0xfa50
	.short	64048                   # 0xfa30
	.short	64064                   # 0xfa40
	.short	64112                   # 0xfa70
	.short	64184                   # 0xfab8
	.short	64224                   # 0xfae0
	.short	64296                   # 0xfb28
	.short	64344                   # 0xfb58
	.short	64384                   # 0xfb80
	.short	64432                   # 0xfbb0
	.short	64512                   # 0xfc00
	.short	64640                   # 0xfc80
	.short	64752                   # 0xfcf0
	.short	64952                   # 0xfdb8
	.short	65112                   # 0xfe58
	.short	65240                   # 0xfed8
	.short	8                       # 0x8
	.short	256                     # 0x100
	.short	384                     # 0x180
	.short	464                     # 0x1d0
	.short	528                     # 0x210
	.short	584                     # 0x248
	.short	568                     # 0x238
	.short	512                     # 0x200
	.short	464                     # 0x1d0
	.short	720                     # 0x2d0
	.short	928                     # 0x3a0
	.short	984                     # 0x3d8
	.short	960                     # 0x3c0
	.short	984                     # 0x3d8
	.short	1016                    # 0x3f8
	.short	880                     # 0x370
	.short	704                     # 0x2c0
	.short	600                     # 0x258
	.short	440                     # 0x1b8
	.short	288                     # 0x120
	.short	144                     # 0x90
	.short	136                     # 0x88
	.short	168                     # 0xa8
	.short	168                     # 0xa8
	.short	136                     # 0x88
	.short	104                     # 0x68
	.short	96                      # 0x60
	.short	65504                   # 0xffe0
	.short	65280                   # 0xff00
	.short	65104                   # 0xfe50
	.short	64968                   # 0xfdc8
	.short	64752                   # 0xfcf0
	.short	64560                   # 0xfc30
	.short	64432                   # 0xfbb0
	.short	64472                   # 0xfbd8
	.short	64544                   # 0xfc20
	.short	64600                   # 0xfc58
	.short	64560                   # 0xfc30
	.short	64576                   # 0xfc40
	.short	64632                   # 0xfc78
	.short	64704                   # 0xfcc0
	.short	64744                   # 0xfce8
	.short	64784                   # 0xfd10
	.short	64840                   # 0xfd48
	.short	64904                   # 0xfd88
	.short	65000                   # 0xfde8
	.short	65296                   # 0xff10
	.short	32                      # 0x20
	.short	272                     # 0x110
	.short	440                     # 0x1b8
	.short	584                     # 0x248
	.short	704                     # 0x2c0
	.short	856                     # 0x358
	.short	952                     # 0x3b8
	.short	968                     # 0x3c8
	.short	800                     # 0x320
	.short	648                     # 0x288
	.short	640                     # 0x280
	.short	768                     # 0x300
	.short	832                     # 0x340
	.short	800                     # 0x320
	.short	896                     # 0x380
	.short	1016                    # 0x3f8
	.short	1048                    # 0x418
	.short	888                     # 0x378
	.short	736                     # 0x2e0
	.short	648                     # 0x288
	.short	640                     # 0x280
	.short	568                     # 0x238
	.short	464                     # 0x1d0
	.short	360                     # 0x168
	.short	312                     # 0x138
	.short	272                     # 0x110
	.short	320                     # 0x140
	.short	328                     # 0x148
	.short	336                     # 0x150
	.short	168                     # 0xa8
	.short	16                      # 0x10
	.short	65456                   # 0xffb0
	.short	65208                   # 0xfeb8
	.short	64992                   # 0xfde0
	.short	64840                   # 0xfd48
	.short	64744                   # 0xfce8
	.short	64680                   # 0xfca8
	.short	64632                   # 0xfc78
	.short	64584                   # 0xfc48
	.short	64592                   # 0xfc50
	.short	64624                   # 0xfc70
	.short	64680                   # 0xfca8
	.short	64744                   # 0xfce8
	.short	64808                   # 0xfd28
	.short	64976                   # 0xfdd0
	.short	65136                   # 0xfe70
	.short	65240                   # 0xfed8
	.short	64                      # 0x40
	.short	392                     # 0x188
	.short	600                     # 0x258
	.short	960                     # 0x3c0
	.short	1264                    # 0x4f0
	.short	1464                    # 0x5b8
	.short	1592                    # 0x638
	.short	1648                    # 0x670
	.short	1680                    # 0x690
	.short	1800                    # 0x708
	.short	1800                    # 0x708
	.short	1720                    # 0x6b8
	.short	1632                    # 0x660
	.short	1616                    # 0x650
	.short	1584                    # 0x630
	.short	1480                    # 0x5c8
	.short	1400                    # 0x578
	.short	1352                    # 0x548
	.short	1288                    # 0x508
	.short	1136                    # 0x470
	.short	976                     # 0x3d0
	.short	848                     # 0x350
	.short	632                     # 0x278
	.short	416                     # 0x1a0
	.short	248                     # 0xf8
	.short	176                     # 0xb0
	.short	120                     # 0x78
	.short	48                      # 0x30
	.short	65512                   # 0xffe8
	.short	65480                   # 0xffc8
	.short	65464                   # 0xffb8
	.short	65232                   # 0xfed0
	.short	65032                   # 0xfe08
	.short	64920                   # 0xfd98
	.short	64624                   # 0xfc70
	.short	64352                   # 0xfb60
	.short	64168                   # 0xfaa8
	.short	64016                   # 0xfa10
	.short	63928                   # 0xf9b8
	.short	63872                   # 0xf980
	.short	63904                   # 0xf9a0
	.short	64000                   # 0xfa00
	.short	64104                   # 0xfa68
	.short	64400                   # 0xfb90
	.short	64696                   # 0xfcb8
	.short	64920                   # 0xfd98
	.short	65128                   # 0xfe68
	.short	65304                   # 0xff18
	.short	65472                   # 0xffc0
	.short	120                     # 0x78
	.short	248                     # 0xf8
	.short	536                     # 0x218
	.short	800                     # 0x320
	.short	960                     # 0x3c0
	.short	1144                    # 0x478
	.short	1296                    # 0x510
	.short	1392                    # 0x570
	.short	1496                    # 0x5d8
	.short	1504                    # 0x5e0
	.short	1464                    # 0x5b8
	.short	1288                    # 0x508
	.short	1128                    # 0x468
	.short	992                     # 0x3e0
	.short	752                     # 0x2f0
	.short	536                     # 0x218
	.short	360                     # 0x168
	.short	240                     # 0xf0
	.short	96                      # 0x60
	.short	65488                   # 0xffd0
	.short	65368                   # 0xff58
	.short	65216                   # 0xfec0
	.short	65096                   # 0xfe48
	.short	64944                   # 0xfdb0
	.short	64856                   # 0xfd58
	.short	64824                   # 0xfd38
	.short	64728                   # 0xfcd8
	.short	64640                   # 0xfc80
	.short	64592                   # 0xfc50
	.short	64520                   # 0xfc08
	.short	64328                   # 0xfb48
	.short	64152                   # 0xfa98
	.short	63992                   # 0xf9f8
	.short	63736                   # 0xf8f8
	.short	63504                   # 0xf810
	.short	63480                   # 0xf7f8
	.short	63512                   # 0xf818
	.short	63560                   # 0xf848
	.short	63720                   # 0xf8e8
	.short	63968                   # 0xf9e0
	.short	64264                   # 0xfb08
	.short	64568                   # 0xfc38
	.short	64784                   # 0xfd10
	.short	65000                   # 0xfde8
	.short	65296                   # 0xff10
	.short	65488                   # 0xffd0
	.short	72                      # 0x48
	.short	224                     # 0xe0
	.short	352                     # 0x160
	.short	440                     # 0x1b8
	.short	456                     # 0x1c8
	.short	480                     # 0x1e0
	.short	512                     # 0x200
	.short	552                     # 0x228
	.short	576                     # 0x240
	.short	576                     # 0x240
	.short	576                     # 0x240
	.short	608                     # 0x260
	.short	640                     # 0x280
	.short	640                     # 0x280
	.short	752                     # 0x2f0
	.short	880                     # 0x370
	.short	968                     # 0x3c8
	.short	968                     # 0x3c8
	.short	936                     # 0x3a8
	.short	928                     # 0x3a0
	.short	760                     # 0x2f8
	.short	544                     # 0x220
	.short	336                     # 0x150
	.short	152                     # 0x98
	.short	65504                   # 0xffe0
	.short	65312                   # 0xff20
	.short	65184                   # 0xfea0
	.short	65104                   # 0xfe50
	.short	65048                   # 0xfe18
	.short	64824                   # 0xfd38
	.short	64608                   # 0xfc60
	.short	64480                   # 0xfbe0
	.short	64200                   # 0xfac8
	.short	63904                   # 0xf9a0
	.short	63672                   # 0xf8b8
	.short	63536                   # 0xf830
	.short	63624                   # 0xf888
	.short	63672                   # 0xf8b8
	.short	63752                   # 0xf908
	.short	64128                   # 0xfa80
	.short	64504                   # 0xfbf8
	.short	64840                   # 0xfd48
	.short	65224                   # 0xfec8
	.short	64                      # 0x40
	.short	432                     # 0x1b0
	.short	664                     # 0x298
	.short	824                     # 0x338
	.short	960                     # 0x3c0
	.short	1136                    # 0x470
	.short	1312                    # 0x520
	.short	1416                    # 0x588
	.short	1552                    # 0x610
	.short	1672                    # 0x688
	.short	1736                    # 0x6c8
	.short	1648                    # 0x670
	.short	1512                    # 0x5e8
	.short	1400                    # 0x578
	.short	1408                    # 0x580
	.short	1400                    # 0x578
	.short	1320                    # 0x528
	.short	1176                    # 0x498
	.short	1032                    # 0x408
	.short	912                     # 0x390
	.short	1016                    # 0x3f8
	.short	1112                    # 0x458
	.short	1160                    # 0x488
	.short	1128                    # 0x468
	.short	1104                    # 0x450
	.short	1112                    # 0x458
	.short	936                     # 0x3a8
	.short	720                     # 0x2d0
	.short	528                     # 0x210
	.short	344                     # 0x158
	.short	136                     # 0x88
	.short	65448                   # 0xffa8
	.short	65280                   # 0xff00
	.short	65160                   # 0xfe88
	.short	65072                   # 0xfe30
	.short	64904                   # 0xfd88
	.short	64696                   # 0xfcb8
	.short	64552                   # 0xfc28
	.short	64304                   # 0xfb30
	.short	63984                   # 0xf9f0
	.short	63720                   # 0xf8e8
	.short	63632                   # 0xf890
	.short	63632                   # 0xf890
	.short	63680                   # 0xf8c0
	.short	63864                   # 0xf978
	.short	64120                   # 0xfa78
	.short	64488                   # 0xfbe8
	.short	64800                   # 0xfd20
	.short	65064                   # 0xfe28
	.short	65376                   # 0xff60
	.short	216                     # 0xd8
	.short	544                     # 0x220
	.short	760                     # 0x2f8
	.short	888                     # 0x378
	.short	992                     # 0x3e0
	.short	1080                    # 0x438
	.short	1160                    # 0x488
	.short	1176                    # 0x498
	.short	1192                    # 0x4a8
	.short	1152                    # 0x480
	.short	1088                    # 0x440
	.short	960                     # 0x3c0
	.short	728                     # 0x2d8
	.short	488                     # 0x1e8
	.short	320                     # 0x140
	.short	216                     # 0xd8
	.short	104                     # 0x68
	.short	65504                   # 0xffe0
	.short	104                     # 0x68
	.short	304                     # 0x130
	.short	552                     # 0x228
	.short	608                     # 0x260
	.short	632                     # 0x278
	.short	720                     # 0x2d0
	.short	728                     # 0x2d8
	.short	656                     # 0x290
	.short	480                     # 0x1e0
	.short	208                     # 0xd0
	.short	65504                   # 0xffe0
	.short	65272                   # 0xfef8
	.short	65032                   # 0xfe08
	.short	64808                   # 0xfd28
	.short	64648                   # 0xfc88
	.short	64480                   # 0xfbe0
	.short	64352                   # 0xfb60
	.short	64216                   # 0xfad8
	.short	64008                   # 0xfa08
	.short	63864                   # 0xf978
	.short	63720                   # 0xf8e8
	.short	63664                   # 0xf8b0
	.short	63664                   # 0xf8b0
	.short	63696                   # 0xf8d0
	.short	63952                   # 0xf9d0
	.short	64248                   # 0xfaf8
	.short	64536                   # 0xfc18
	.short	64944                   # 0xfdb0
	.short	65336                   # 0xff38
	.short	160                     # 0xa0
	.short	504                     # 0x1f8
	.short	760                     # 0x2f8
	.short	960                     # 0x3c0
	.short	1120                    # 0x460
	.short	1208                    # 0x4b8
	.short	1224                    # 0x4c8
	.short	1224                    # 0x4c8
	.short	1216                    # 0x4c0
	.short	1176                    # 0x498
	.short	1168                    # 0x490
	.short	1144                    # 0x478
	.short	1096                    # 0x448
	.short	1056                    # 0x420
	.short	1016                    # 0x3f8
	.short	808                     # 0x328
	.short	568                     # 0x238
	.short	432                     # 0x1b0
	.short	368                     # 0x170
	.short	296                     # 0x128
	.short	144                     # 0x90
	.short	232                     # 0xe8
	.short	440                     # 0x1b8
	.short	696                     # 0x2b8
	.short	640                     # 0x280
	.short	536                     # 0x218
	.short	536                     # 0x218
	.short	496                     # 0x1f0
	.short	328                     # 0x148
	.short	0                       # 0x0
	.short	65216                   # 0xfec0
	.short	65032                   # 0xfe08
	.short	64880                   # 0xfd70
	.short	64672                   # 0xfca0
	.short	64496                   # 0xfbf0
	.short	64448                   # 0xfbc0
	.short	64416                   # 0xfba0
	.short	64384                   # 0xfb80
	.short	64280                   # 0xfb18
	.short	64296                   # 0xfb28
	.short	64408                   # 0xfb98
	.short	64448                   # 0xfbc0
	.short	64464                   # 0xfbd0
	.short	64520                   # 0xfc08
	.short	64632                   # 0xfc78
	.short	64968                   # 0xfdc8
	.short	65224                   # 0xfec8
	.short	65400                   # 0xff78
	.short	208                     # 0xd0
	.short	568                     # 0x238
	.short	864                     # 0x360
	.short	920                     # 0x398
	.short	864                     # 0x360
	.short	872                     # 0x368
	.short	896                     # 0x380
	.short	792                     # 0x318
	.short	592                     # 0x250
	.short	520                     # 0x208
	.short	544                     # 0x220
	.short	536                     # 0x218
	.short	496                     # 0x1f0
	.short	456                     # 0x1c8
	.short	528                     # 0x210
	.short	624                     # 0x270
	.short	624                     # 0x270
	.short	576                     # 0x240
	.short	656                     # 0x290
	.short	784                     # 0x310
	.short	864                     # 0x360
	.short	832                     # 0x340
	.short	784                     # 0x310
	.short	792                     # 0x318
	.short	800                     # 0x320
	.short	728                     # 0x2d8
	.short	576                     # 0x240
	.short	344                     # 0x158
	.short	160                     # 0xa0
	.short	8                       # 0x8
	.short	65328                   # 0xff30
	.short	65104                   # 0xfe50
	.short	64936                   # 0xfda8
	.short	64808                   # 0xfd28
	.short	64712                   # 0xfcc8
	.short	64608                   # 0xfc60
	.short	64424                   # 0xfba8
	.short	64320                   # 0xfb40
	.short	64272                   # 0xfb10
	.short	64280                   # 0xfb18
	.short	64296                   # 0xfb28
	.short	64328                   # 0xfb48
	.short	64360                   # 0xfb68
	.short	64424                   # 0xfba8
	.short	64504                   # 0xfbf8
	.short	64696                   # 0xfcb8
	.short	64888                   # 0xfd78
	.short	65024                   # 0xfe00
	.short	65160                   # 0xfe88
	.short	65328                   # 0xff30
	.short	65432                   # 0xff98
	.short	65480                   # 0xffc8
	.short	65512                   # 0xffe8
	.short	80                      # 0x50
	.short	176                     # 0xb0
	.short	224                     # 0xe0
	.short	64                      # 0x40
	.short	65384                   # 0xff68
	.short	65240                   # 0xfed8
	.short	65256                   # 0xfee8
	.short	65248                   # 0xfee0
	.short	65168                   # 0xfe90
	.short	65192                   # 0xfea8
	.short	65416                   # 0xff88
	.short	128                     # 0x80
	.short	392                     # 0x188
	.short	520                     # 0x208
	.short	656                     # 0x290
	.short	912                     # 0x390
	.short	1080                    # 0x438
	.short	1104                    # 0x450
	.short	1064                    # 0x428
	.short	1016                    # 0x3f8
	.short	992                     # 0x3e0
	.short	904                     # 0x388
	.short	736                     # 0x2e0
	.short	576                     # 0x240
	.short	400                     # 0x190
	.short	208                     # 0xd0
	.short	0                       # 0x0
	.short	0                       # 0x0
	.short	24                      # 0x18
	.short	255                     # 0xff
	.short	104                     # 0x68
	.short	254                     # 0xfe
	.short	248                     # 0xf8
	.short	253                     # 0xfd
	.size	pcmdata, 6400

	.type	gsmdata,@object         # @gsmdata
	.globl	gsmdata
	.align	16
gsmdata:
	.ascii	"\325\037t!\240P@\311${\372kR\340\266\326\216\271+\256\340\213#R;\023\206\340\024JAD2\323\241\203\241\035\246\200\272\322\226&\373\204\200m\234%\035\233\252\300\273L\225\271S\256\240\266\344F7\033\324\245{\035\"\227\000\272\245m\322\241~\300\271%\322\264\224\236\340>\336\355\326\322\342\300\327]\215Y\254\323\344\203\225Y\300\241H\322f\307,\236\240*\323\356E\034\200\340k4\214K)\313\000\272\366\r&\232\323\244\202\235cz\300g$\272\326|\302\3007 O\020\340\307\200jwc\276kZ\300\2654\3214\234\324\350V\262X_\000\267\257\222\022\220\325\2449#NF\207Q\254\330\333m\313\027P\211{D(\003k\325\25166\331k\250\223:\226\356\377g\2136\332\t\264\231g+\210\344\265\245\332eG\332\036\226\372\354\325\251Ec\032\313\311H\235\203_o\313\b\033\227\311\030\nc\313\246\341\204\365baj\204\334\2667\236\326\253<S\223\301*\252\201\215ke`\250\373.\"Yta\246]s\224\370\344\301F&^\212\206\355\324\246-Wk\276\350X\332=\230\231\276\250\302\333j.Qb\345\200Xv\270\344l\204\312\230\006\013\374\322f|b:[\305\337}uI\036R\307U\367\204\246\332]C&\205\230\330\217\266\305(\353>u\004\322'\272*+\267\003\023E5\033x_\303\272\333\256'\302^\244P\214\212\273O`\303\356AFJ\337\322'\262\255\353_CLj\t*\314\267G*\271\221\266\324[%X\330\375F\225Z\303'[?\373\022\322&\303\251\241\266\242\313\033\320s\344\272\241\351\005\276y#\244\302:K\021\345h\304\301\272\301\314\213\002\322cl\356\031^\341\266L\032\264^\360\302' U\275md\341\307E\251em}BV\330\262\266\354\323a[ba`\241[\326\025)\tl\241>\255e4\303\300\301\"mLW\020\333A\322\341wd\367\323!s\251)X\301\241ZR\2672d\301gBt,\334aae\213\313\004\345`\301\311^\2166\203\322\242\203\251\331\315!\271%\315\346\035`\241\264\252\217\272u\303\001\013;Q\333\354b\3418\315@;\323\322&\224)\322a!kJ\215$\265\273!\022\245\231\245\032\312\241\357]\252\256\323d\341\243k\25659\322fs\266\220\306\3012\321\272\311%e\201\250\322\261\347\030\276\300\374\344\205\265\006\264\2015F\266\310\233"
	.size	gsmdata, 660

	.type	Gsm_Coder.e,@object     # @Gsm_Coder.e
	.local	Gsm_Coder.e
	.comm	Gsm_Coder.e,100,16
	.type	gsm_A,@object           # @gsm_A
	.globl	gsm_A
	.align	16
gsm_A:
	.short	20480                   # 0x5000
	.short	20480                   # 0x5000
	.short	20480                   # 0x5000
	.short	20480                   # 0x5000
	.short	13964                   # 0x368c
	.short	15360                   # 0x3c00
	.short	8534                    # 0x2156
	.short	9036                    # 0x234c
	.size	gsm_A, 16

	.type	gsm_B,@object           # @gsm_B
	.globl	gsm_B
	.align	16
gsm_B:
	.short	0                       # 0x0
	.short	0                       # 0x0
	.short	2048                    # 0x800
	.short	62976                   # 0xf600
	.short	94                      # 0x5e
	.short	63744                   # 0xf900
	.short	65195                   # 0xfeab
	.short	64392                   # 0xfb88
	.size	gsm_B, 16

	.type	gsm_MIC,@object         # @gsm_MIC
	.globl	gsm_MIC
	.align	16
gsm_MIC:
	.short	65504                   # 0xffe0
	.short	65504                   # 0xffe0
	.short	65520                   # 0xfff0
	.short	65520                   # 0xfff0
	.short	65528                   # 0xfff8
	.short	65528                   # 0xfff8
	.short	65532                   # 0xfffc
	.short	65532                   # 0xfffc
	.size	gsm_MIC, 16

	.type	gsm_MAC,@object         # @gsm_MAC
	.globl	gsm_MAC
	.align	16
gsm_MAC:
	.short	31                      # 0x1f
	.short	31                      # 0x1f
	.short	15                      # 0xf
	.short	15                      # 0xf
	.short	7                       # 0x7
	.short	7                       # 0x7
	.short	3                       # 0x3
	.short	3                       # 0x3
	.size	gsm_MAC, 16

	.type	gsm_INVA,@object        # @gsm_INVA
	.globl	gsm_INVA
	.align	16
gsm_INVA:
	.short	13107                   # 0x3333
	.short	13107                   # 0x3333
	.short	13107                   # 0x3333
	.short	13107                   # 0x3333
	.short	19223                   # 0x4b17
	.short	17476                   # 0x4444
	.short	31454                   # 0x7ade
	.short	29708                   # 0x740c
	.size	gsm_INVA, 16

	.type	gsm_DLB,@object         # @gsm_DLB
	.globl	gsm_DLB
	.align	2
gsm_DLB:
	.short	6554                    # 0x199a
	.short	16384                   # 0x4000
	.short	26214                   # 0x6666
	.short	32767                   # 0x7fff
	.size	gsm_DLB, 8

	.type	gsm_QLB,@object         # @gsm_QLB
	.globl	gsm_QLB
	.align	2
gsm_QLB:
	.short	3277                    # 0xccd
	.short	11469                   # 0x2ccd
	.short	21299                   # 0x5333
	.short	32767                   # 0x7fff
	.size	gsm_QLB, 8

	.type	gsm_H,@object           # @gsm_H
	.globl	gsm_H
	.align	16
gsm_H:
	.short	65402                   # 0xff7a
	.short	65162                   # 0xfe8a
	.short	0                       # 0x0
	.short	2054                    # 0x806
	.short	5741                    # 0x166d
	.short	8192                    # 0x2000
	.short	5741                    # 0x166d
	.short	2054                    # 0x806
	.short	0                       # 0x0
	.short	65162                   # 0xfe8a
	.short	65402                   # 0xff7a
	.size	gsm_H, 22

	.type	gsm_NRFAC,@object       # @gsm_NRFAC
	.globl	gsm_NRFAC
	.align	16
gsm_NRFAC:
	.short	29128                   # 0x71c8
	.short	26215                   # 0x6667
	.short	23832                   # 0x5d18
	.short	21846                   # 0x5556
	.short	20165                   # 0x4ec5
	.short	18725                   # 0x4925
	.short	17476                   # 0x4444
	.short	16384                   # 0x4000
	.size	gsm_NRFAC, 16

	.type	gsm_FAC,@object         # @gsm_FAC
	.globl	gsm_FAC
	.align	16
gsm_FAC:
	.short	18431                   # 0x47ff
	.short	20479                   # 0x4fff
	.short	22527                   # 0x57ff
	.short	24575                   # 0x5fff
	.short	26623                   # 0x67ff
	.short	28671                   # 0x6fff
	.short	30719                   # 0x77ff
	.short	32767                   # 0x7fff
	.size	gsm_FAC, 16

	.type	f_fast,@object          # @f_fast
	.bss
	.globl	f_fast
	.align	4
f_fast:
	.long	0                       # 0x0
	.size	f_fast, 4

	.type	f_verbose,@object       # @f_verbose
	.globl	f_verbose
	.align	4
f_verbose:
	.long	0                       # 0x0
	.size	f_verbose, 4

	.type	bitoff,@object          # @bitoff
	.data
	.align	16
bitoff:
	.asciz	"\b
	.size	bitoff, 256

	.type	gsmstate,@object        # @gsmstate
	.comm	gsmstate,656,8
	.type	krem_prefix256a587303be153e_krem_callsiteId_krem_gsm_encode.c_krem_gsm_encode_krem_913_krem_913_krem_,@object # @krem_prefix256a587303be153e_krem_callsiteId_krem_gsm_encode.c_krem_gsm_encode_krem_913_krem_913_krem_
	.bss
	.globl	krem_prefix256a587303be153e_krem_callsiteId_krem_gsm_encode.c_krem_gsm_encode_krem_913_krem_913_krem_
krem_prefix256a587303be153e_krem_callsiteId_krem_gsm_encode.c_krem_gsm_encode_krem_913_krem_913_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix256a587303be153e_krem_callsiteId_krem_gsm_encode.c_krem_gsm_encode_krem_913_krem_913_krem_, 1

	.type	krem_prefix824d4385b7dd3b19_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1179_krem_1179_krem_,@object # @krem_prefix824d4385b7dd3b19_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1179_krem_1179_krem_
	.globl	krem_prefix824d4385b7dd3b19_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1179_krem_1179_krem_
krem_prefix824d4385b7dd3b19_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1179_krem_1179_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix824d4385b7dd3b19_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1179_krem_1179_krem_, 1

	.type	krem_prefix6d6410ad42c9d075_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1180_krem_1180_krem_,@object # @krem_prefix6d6410ad42c9d075_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1180_krem_1180_krem_
	.globl	krem_prefix6d6410ad42c9d075_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1180_krem_1180_krem_
krem_prefix6d6410ad42c9d075_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1180_krem_1180_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6d6410ad42c9d075_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1180_krem_1180_krem_, 1

	.type	krem_prefixfbbdb533238d417f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1181_krem_1181_krem_,@object # @krem_prefixfbbdb533238d417f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1181_krem_1181_krem_
	.globl	krem_prefixfbbdb533238d417f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1181_krem_1181_krem_
krem_prefixfbbdb533238d417f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1181_krem_1181_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfbbdb533238d417f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1181_krem_1181_krem_, 1

	.type	krem_prefix4c20ab6a951d36f0_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1186_krem_1186_krem_,@object # @krem_prefix4c20ab6a951d36f0_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1186_krem_1186_krem_
	.globl	krem_prefix4c20ab6a951d36f0_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1186_krem_1186_krem_
krem_prefix4c20ab6a951d36f0_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1186_krem_1186_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix4c20ab6a951d36f0_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1186_krem_1186_krem_, 1

	.type	krem_prefix19026da6dccaa33e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1194_krem_1194_krem_,@object # @krem_prefix19026da6dccaa33e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1194_krem_1194_krem_
	.globl	krem_prefix19026da6dccaa33e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1194_krem_1194_krem_
krem_prefix19026da6dccaa33e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1194_krem_1194_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix19026da6dccaa33e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Coder_krem_1194_krem_1194_krem_, 1

	.type	krem_prefixcf45fab7d596e582_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2904_krem_2904_krem_,@object # @krem_prefixcf45fab7d596e582_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2904_krem_2904_krem_
	.globl	krem_prefixcf45fab7d596e582_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2904_krem_2904_krem_
krem_prefixcf45fab7d596e582_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2904_krem_2904_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixcf45fab7d596e582_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2904_krem_2904_krem_, 1

	.type	krem_prefix80d391410af59280_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2905_krem_2905_krem_,@object # @krem_prefix80d391410af59280_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2905_krem_2905_krem_
	.globl	krem_prefix80d391410af59280_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2905_krem_2905_krem_
krem_prefix80d391410af59280_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2905_krem_2905_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix80d391410af59280_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2905_krem_2905_krem_, 1

	.type	krem_prefix6b441b3822ead56e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2906_krem_2906_krem_,@object # @krem_prefix6b441b3822ead56e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2906_krem_2906_krem_
	.globl	krem_prefix6b441b3822ead56e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2906_krem_2906_krem_
krem_prefix6b441b3822ead56e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2906_krem_2906_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6b441b3822ead56e_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2906_krem_2906_krem_, 1

	.type	krem_prefixfb0ed9be56001ace_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2907_krem_2907_krem_,@object # @krem_prefixfb0ed9be56001ace_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2907_krem_2907_krem_
	.globl	krem_prefixfb0ed9be56001ace_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2907_krem_2907_krem_
krem_prefixfb0ed9be56001ace_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2907_krem_2907_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfb0ed9be56001ace_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2907_krem_2907_krem_, 1

	.type	krem_prefix72f332b622e4d113_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2553_krem_2553_krem_,@object # @krem_prefix72f332b622e4d113_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2553_krem_2553_krem_
	.globl	krem_prefix72f332b622e4d113_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2553_krem_2553_krem_
krem_prefix72f332b622e4d113_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2553_krem_2553_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix72f332b622e4d113_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2553_krem_2553_krem_, 1

	.type	krem_prefixf3043d7f7da1ced3_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2555_krem_2555_krem_,@object # @krem_prefixf3043d7f7da1ced3_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2555_krem_2555_krem_
	.globl	krem_prefixf3043d7f7da1ced3_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2555_krem_2555_krem_
krem_prefixf3043d7f7da1ced3_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2555_krem_2555_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf3043d7f7da1ced3_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2555_krem_2555_krem_, 1

	.type	krem_prefix986fccb81546a3d5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2556_krem_2556_krem_,@object # @krem_prefix986fccb81546a3d5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2556_krem_2556_krem_
	.globl	krem_prefix986fccb81546a3d5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2556_krem_2556_krem_
krem_prefix986fccb81546a3d5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2556_krem_2556_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix986fccb81546a3d5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2556_krem_2556_krem_, 1

	.type	krem_prefix07b05f23355d8eca_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2557_krem_2557_krem_,@object # @krem_prefix07b05f23355d8eca_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2557_krem_2557_krem_
	.globl	krem_prefix07b05f23355d8eca_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2557_krem_2557_krem_
krem_prefix07b05f23355d8eca_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2557_krem_2557_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix07b05f23355d8eca_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2557_krem_2557_krem_, 1

	.type	krem_prefixf07431fe8f0cff63_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2559_krem_2559_krem_,@object # @krem_prefixf07431fe8f0cff63_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2559_krem_2559_krem_
	.globl	krem_prefixf07431fe8f0cff63_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2559_krem_2559_krem_
krem_prefixf07431fe8f0cff63_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2559_krem_2559_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf07431fe8f0cff63_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2559_krem_2559_krem_, 1

	.type	krem_prefix98e0c2fbb725f65f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2560_krem_2560_krem_,@object # @krem_prefix98e0c2fbb725f65f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2560_krem_2560_krem_
	.globl	krem_prefix98e0c2fbb725f65f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2560_krem_2560_krem_
krem_prefix98e0c2fbb725f65f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2560_krem_2560_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix98e0c2fbb725f65f_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2560_krem_2560_krem_, 1

	.type	krem_prefix2b6f95475193948a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2561_krem_2561_krem_,@object # @krem_prefix2b6f95475193948a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2561_krem_2561_krem_
	.globl	krem_prefix2b6f95475193948a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2561_krem_2561_krem_
krem_prefix2b6f95475193948a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2561_krem_2561_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2b6f95475193948a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2561_krem_2561_krem_, 1

	.type	krem_prefix46850b388418d63d_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2563_krem_2563_krem_,@object # @krem_prefix46850b388418d63d_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2563_krem_2563_krem_
	.globl	krem_prefix46850b388418d63d_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2563_krem_2563_krem_
krem_prefix46850b388418d63d_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2563_krem_2563_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix46850b388418d63d_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2563_krem_2563_krem_, 1

	.type	krem_prefixccd0356e395b99a5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2564_krem_2564_krem_,@object # @krem_prefixccd0356e395b99a5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2564_krem_2564_krem_
	.globl	krem_prefixccd0356e395b99a5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2564_krem_2564_krem_
krem_prefixccd0356e395b99a5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2564_krem_2564_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixccd0356e395b99a5_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2564_krem_2564_krem_, 1

	.type	krem_prefix5e7eee5cc9ddc02a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2565_krem_2565_krem_,@object # @krem_prefix5e7eee5cc9ddc02a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2565_krem_2565_krem_
	.globl	krem_prefix5e7eee5cc9ddc02a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2565_krem_2565_krem_
krem_prefix5e7eee5cc9ddc02a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2565_krem_2565_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix5e7eee5cc9ddc02a_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2565_krem_2565_krem_, 1

	.type	krem_prefixb891c2732977646b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2567_krem_2567_krem_,@object # @krem_prefixb891c2732977646b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2567_krem_2567_krem_
	.globl	krem_prefixb891c2732977646b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2567_krem_2567_krem_
krem_prefixb891c2732977646b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2567_krem_2567_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb891c2732977646b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2567_krem_2567_krem_, 1

	.type	krem_prefix77f8def29af0ea79_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2568_krem_2568_krem_,@object # @krem_prefix77f8def29af0ea79_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2568_krem_2568_krem_
	.globl	krem_prefix77f8def29af0ea79_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2568_krem_2568_krem_
krem_prefix77f8def29af0ea79_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2568_krem_2568_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix77f8def29af0ea79_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2568_krem_2568_krem_, 1

	.type	krem_prefix1f06dee338f8f907_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2569_krem_2569_krem_,@object # @krem_prefix1f06dee338f8f907_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2569_krem_2569_krem_
	.globl	krem_prefix1f06dee338f8f907_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2569_krem_2569_krem_
krem_prefix1f06dee338f8f907_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2569_krem_2569_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix1f06dee338f8f907_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2569_krem_2569_krem_, 1

	.type	krem_prefixa8ec5054803e0900_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2217_krem_2217_krem_,@object # @krem_prefixa8ec5054803e0900_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2217_krem_2217_krem_
	.globl	krem_prefixa8ec5054803e0900_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2217_krem_2217_krem_
krem_prefixa8ec5054803e0900_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2217_krem_2217_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa8ec5054803e0900_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2217_krem_2217_krem_, 1

	.type	krem_prefixb22ad63685fa251b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2219_krem_2219_krem_,@object # @krem_prefixb22ad63685fa251b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2219_krem_2219_krem_
	.globl	krem_prefixb22ad63685fa251b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2219_krem_2219_krem_
krem_prefixb22ad63685fa251b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2219_krem_2219_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb22ad63685fa251b_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2219_krem_2219_krem_, 1

	.type	krem_prefixf7f6d1d3615894d9_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1686_krem_1686_krem_,@object # @krem_prefixf7f6d1d3615894d9_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1686_krem_1686_krem_
	.globl	krem_prefixf7f6d1d3615894d9_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1686_krem_1686_krem_
krem_prefixf7f6d1d3615894d9_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1686_krem_1686_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf7f6d1d3615894d9_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1686_krem_1686_krem_, 1

	.type	krem_prefixe7935c677cf9f6a1_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1687_krem_1687_krem_,@object # @krem_prefixe7935c677cf9f6a1_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1687_krem_1687_krem_
	.globl	krem_prefixe7935c677cf9f6a1_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1687_krem_1687_krem_
krem_prefixe7935c677cf9f6a1_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1687_krem_1687_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe7935c677cf9f6a1_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1687_krem_1687_krem_, 1

	.type	krem_prefix6457916093f74a12_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1689_krem_1689_krem_,@object # @krem_prefix6457916093f74a12_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1689_krem_1689_krem_
	.globl	krem_prefix6457916093f74a12_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1689_krem_1689_krem_
krem_prefix6457916093f74a12_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1689_krem_1689_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6457916093f74a12_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1689_krem_1689_krem_, 1

	.type	krem_prefix442078a4f5f059ba_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1690_krem_1690_krem_,@object # @krem_prefix442078a4f5f059ba_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1690_krem_1690_krem_
	.globl	krem_prefix442078a4f5f059ba_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1690_krem_1690_krem_
krem_prefix442078a4f5f059ba_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1690_krem_1690_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix442078a4f5f059ba_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1690_krem_1690_krem_, 1

	.type	krem_prefix2b343043d3ae1e10_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1692_krem_1692_krem_,@object # @krem_prefix2b343043d3ae1e10_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1692_krem_1692_krem_
	.globl	krem_prefix2b343043d3ae1e10_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1692_krem_1692_krem_
krem_prefix2b343043d3ae1e10_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1692_krem_1692_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2b343043d3ae1e10_krem_callsiteId_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1692_krem_1692_krem_, 1

	.type	krem_prefix26c57695f6ea60fa_krem_callsiteId_krem_gsm_encode.c_krem_APCM_quantization_krem_1509_krem_1509_krem_,@object # @krem_prefix26c57695f6ea60fa_krem_callsiteId_krem_gsm_encode.c_krem_APCM_quantization_krem_1509_krem_1509_krem_
	.globl	krem_prefix26c57695f6ea60fa_krem_callsiteId_krem_gsm_encode.c_krem_APCM_quantization_krem_1509_krem_1509_krem_
krem_prefix26c57695f6ea60fa_krem_callsiteId_krem_gsm_encode.c_krem_APCM_quantization_krem_1509_krem_1509_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix26c57695f6ea60fa_krem_callsiteId_krem_gsm_encode.c_krem_APCM_quantization_krem_1509_krem_1509_krem_, 1

	.type	krem_prefix31250876e320cf8b_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1565_krem_1565_krem_,@object # @krem_prefix31250876e320cf8b_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1565_krem_1565_krem_
	.globl	krem_prefix31250876e320cf8b_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1565_krem_1565_krem_
krem_prefix31250876e320cf8b_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1565_krem_1565_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix31250876e320cf8b_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1565_krem_1565_krem_, 1

	.type	krem_prefix0348b506f558e3bb_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_,@object # @krem_prefix0348b506f558e3bb_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_
	.globl	krem_prefix0348b506f558e3bb_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_
krem_prefix0348b506f558e3bb_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0348b506f558e3bb_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_, 1

	.type	krem_prefix455911aec7bf4f21_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_,@object # @krem_prefix455911aec7bf4f21_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_
	.globl	krem_prefix455911aec7bf4f21_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_
krem_prefix455911aec7bf4f21_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix455911aec7bf4f21_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1566_krem_1566_krem_, 1

	.type	krem_prefix7420a51f3cc5289c_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1577_krem_1577_krem_,@object # @krem_prefix7420a51f3cc5289c_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1577_krem_1577_krem_
	.globl	krem_prefix7420a51f3cc5289c_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1577_krem_1577_krem_
krem_prefix7420a51f3cc5289c_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1577_krem_1577_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix7420a51f3cc5289c_krem_callsiteId_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1577_krem_1577_krem_, 1

	.type	krem_prefix9fad66109ad5da03_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1766_krem_1766_krem_,@object # @krem_prefix9fad66109ad5da03_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1766_krem_1766_krem_
	.globl	krem_prefix9fad66109ad5da03_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1766_krem_1766_krem_
krem_prefix9fad66109ad5da03_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1766_krem_1766_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9fad66109ad5da03_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1766_krem_1766_krem_, 1

	.type	krem_prefixdeb6f03d6c6a765a_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1858_krem_1858_krem_,@object # @krem_prefixdeb6f03d6c6a765a_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1858_krem_1858_krem_
	.globl	krem_prefixdeb6f03d6c6a765a_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1858_krem_1858_krem_
krem_prefixdeb6f03d6c6a765a_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1858_krem_1858_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixdeb6f03d6c6a765a_krem_callsiteId_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1858_krem_1858_krem_, 1

	.type	krem_prefixd7189550586d4124_krem_callsiteId_krem_gsm_encode.c_krem_Autocorrelation_krem_2615_krem_2615_krem_,@object # @krem_prefixd7189550586d4124_krem_callsiteId_krem_gsm_encode.c_krem_Autocorrelation_krem_2615_krem_2615_krem_
	.globl	krem_prefixd7189550586d4124_krem_callsiteId_krem_gsm_encode.c_krem_Autocorrelation_krem_2615_krem_2615_krem_
krem_prefixd7189550586d4124_krem_callsiteId_krem_gsm_encode.c_krem_Autocorrelation_krem_2615_krem_2615_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd7189550586d4124_krem_callsiteId_krem_gsm_encode.c_krem_Autocorrelation_krem_2615_krem_2615_krem_, 1

	.type	krem_prefixd26a6d65a1ed9c1c_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2765_krem_2765_krem_,@object # @krem_prefixd26a6d65a1ed9c1c_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2765_krem_2765_krem_
	.globl	krem_prefixd26a6d65a1ed9c1c_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2765_krem_2765_krem_
krem_prefixd26a6d65a1ed9c1c_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2765_krem_2765_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd26a6d65a1ed9c1c_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2765_krem_2765_krem_, 1

	.type	krem_prefix6f1c9355633eac38_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2793_krem_2793_krem_,@object # @krem_prefix6f1c9355633eac38_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2793_krem_2793_krem_
	.globl	krem_prefix6f1c9355633eac38_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2793_krem_2793_krem_
krem_prefix6f1c9355633eac38_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2793_krem_2793_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6f1c9355633eac38_krem_callsiteId_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2793_krem_2793_krem_, 1

	.type	krem_prefix0f8ba8aa8cb4a8e5_krem_callsiteId_krem_gsm_encode.c_krem_gsm_asl_krem_3049_krem_3049_krem_,@object # @krem_prefix0f8ba8aa8cb4a8e5_krem_callsiteId_krem_gsm_encode.c_krem_gsm_asl_krem_3049_krem_3049_krem_
	.globl	krem_prefix0f8ba8aa8cb4a8e5_krem_callsiteId_krem_gsm_encode.c_krem_gsm_asl_krem_3049_krem_3049_krem_
krem_prefix0f8ba8aa8cb4a8e5_krem_callsiteId_krem_gsm_encode.c_krem_gsm_asl_krem_3049_krem_3049_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0f8ba8aa8cb4a8e5_krem_callsiteId_krem_gsm_encode.c_krem_gsm_asl_krem_3049_krem_3049_krem_, 1

	.type	krem_prefix4ec2b55ced906d4a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3151_krem_3151_krem_,@object # @krem_prefix4ec2b55ced906d4a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3151_krem_3151_krem_
	.globl	krem_prefix4ec2b55ced906d4a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3151_krem_3151_krem_
krem_prefix4ec2b55ced906d4a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3151_krem_3151_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix4ec2b55ced906d4a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3151_krem_3151_krem_, 1

	.type	krem_prefix6108d597a496b228_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3152_krem_3152_krem_,@object # @krem_prefix6108d597a496b228_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3152_krem_3152_krem_
	.globl	krem_prefix6108d597a496b228_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3152_krem_3152_krem_
krem_prefix6108d597a496b228_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3152_krem_3152_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6108d597a496b228_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3152_krem_3152_krem_, 1

	.type	krem_prefix19c50fbe5385774a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3153_krem_3153_krem_,@object # @krem_prefix19c50fbe5385774a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3153_krem_3153_krem_
	.globl	krem_prefix19c50fbe5385774a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3153_krem_3153_krem_
krem_prefix19c50fbe5385774a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3153_krem_3153_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix19c50fbe5385774a_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3153_krem_3153_krem_, 1

	.type	krem_prefix99c052f93a461d0f_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3157_krem_3157_krem_,@object # @krem_prefix99c052f93a461d0f_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3157_krem_3157_krem_
	.globl	krem_prefix99c052f93a461d0f_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3157_krem_3157_krem_
krem_prefix99c052f93a461d0f_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3157_krem_3157_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix99c052f93a461d0f_krem_callsiteId_krem_gsm_encode.c_krem_encode_krem_3157_krem_3157_krem_, 1

	.type	krem_prefixaa91c3bd0aa11c9d_krem_callsiteId_krem_gsm_encode.c_krem_main_krem_3165_krem_3165_krem_,@object # @krem_prefixaa91c3bd0aa11c9d_krem_callsiteId_krem_gsm_encode.c_krem_main_krem_3165_krem_3165_krem_
	.globl	krem_prefixaa91c3bd0aa11c9d_krem_callsiteId_krem_gsm_encode.c_krem_main_krem_3165_krem_3165_krem_
krem_prefixaa91c3bd0aa11c9d_krem_callsiteId_krem_gsm_encode.c_krem_main_krem_3165_krem_3165_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixaa91c3bd0aa11c9d_krem_callsiteId_krem_gsm_encode.c_krem_main_krem_3165_krem_3165_krem_, 1

	.type	krem_prefix0076deb51f01e61e_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_,@object # @krem_prefix0076deb51f01e61e_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_
	.globl	krem_prefix0076deb51f01e61e_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_
krem_prefix0076deb51f01e61e_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0076deb51f01e61e_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_, 1

	.type	krem_prefix00cde7dbce713787_krem_func_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1426_krem_1426_krem_,@object # @krem_prefix00cde7dbce713787_krem_func_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1426_krem_1426_krem_
	.globl	krem_prefix00cde7dbce713787_krem_func_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1426_krem_1426_krem_
krem_prefix00cde7dbce713787_krem_func_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1426_krem_1426_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix00cde7dbce713787_krem_func_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1426_krem_1426_krem_, 1

	.type	krem_prefix019d534a584bc165_krem_func_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1549_krem_1549_krem_,@object # @krem_prefix019d534a584bc165_krem_func_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1549_krem_1549_krem_
	.globl	krem_prefix019d534a584bc165_krem_func_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1549_krem_1549_krem_
krem_prefix019d534a584bc165_krem_func_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1549_krem_1549_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix019d534a584bc165_krem_func_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1549_krem_1549_krem_, 1

	.type	krem_prefix03e884bebf0638ca_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_,@object # @krem_prefix03e884bebf0638ca_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_
	.globl	krem_prefix03e884bebf0638ca_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_
krem_prefix03e884bebf0638ca_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix03e884bebf0638ca_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_, 1

	.type	krem_prefix084798896cfcbc59_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_,@object # @krem_prefix084798896cfcbc59_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_
	.globl	krem_prefix084798896cfcbc59_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_
krem_prefix084798896cfcbc59_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix084798896cfcbc59_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_, 1

	.type	krem_prefix0aece396cd6db165_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_,@object # @krem_prefix0aece396cd6db165_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_
	.globl	krem_prefix0aece396cd6db165_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_
krem_prefix0aece396cd6db165_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0aece396cd6db165_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_, 1

	.type	krem_prefix0ca1d9f1ec45d149_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_,@object # @krem_prefix0ca1d9f1ec45d149_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_
	.globl	krem_prefix0ca1d9f1ec45d149_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_
krem_prefix0ca1d9f1ec45d149_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0ca1d9f1ec45d149_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_, 1

	.type	krem_prefix0cd346e22b45d46f_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_,@object # @krem_prefix0cd346e22b45d46f_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_
	.globl	krem_prefix0cd346e22b45d46f_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_
krem_prefix0cd346e22b45d46f_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0cd346e22b45d46f_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_, 1

	.type	krem_prefix0ebd0a012f795274_krem_func_krem_gsm_encode.c_krem_gsm_encode_krem_909_krem_909_krem_,@object # @krem_prefix0ebd0a012f795274_krem_func_krem_gsm_encode.c_krem_gsm_encode_krem_909_krem_909_krem_
	.globl	krem_prefix0ebd0a012f795274_krem_func_krem_gsm_encode.c_krem_gsm_encode_krem_909_krem_909_krem_
krem_prefix0ebd0a012f795274_krem_func_krem_gsm_encode.c_krem_gsm_encode_krem_909_krem_909_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix0ebd0a012f795274_krem_func_krem_gsm_encode.c_krem_gsm_encode_krem_909_krem_909_krem_, 1

	.type	krem_prefix137ebf1bbe150cde_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_,@object # @krem_prefix137ebf1bbe150cde_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_
	.globl	krem_prefix137ebf1bbe150cde_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_
krem_prefix137ebf1bbe150cde_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix137ebf1bbe150cde_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_, 1

	.type	krem_prefix1655600591882b76_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_,@object # @krem_prefix1655600591882b76_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_
	.globl	krem_prefix1655600591882b76_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_
krem_prefix1655600591882b76_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix1655600591882b76_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_, 1

	.type	krem_prefix18ea2984e634ec9e_krem_func_krem_gsm_encode.c_krem_gsm_asl_krem_3045_krem_3045_krem_,@object # @krem_prefix18ea2984e634ec9e_krem_func_krem_gsm_encode.c_krem_gsm_asl_krem_3045_krem_3045_krem_
	.globl	krem_prefix18ea2984e634ec9e_krem_func_krem_gsm_encode.c_krem_gsm_asl_krem_3045_krem_3045_krem_
krem_prefix18ea2984e634ec9e_krem_func_krem_gsm_encode.c_krem_gsm_asl_krem_3045_krem_3045_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix18ea2984e634ec9e_krem_func_krem_gsm_encode.c_krem_gsm_asl_krem_3045_krem_3045_krem_, 1

	.type	krem_prefix1cd6107943818e89_krem_func_krem_gsm_encode.c_krem_Quantization_and_coding_krem_2854_krem_2854_krem_,@object # @krem_prefix1cd6107943818e89_krem_func_krem_gsm_encode.c_krem_Quantization_and_coding_krem_2854_krem_2854_krem_
	.globl	krem_prefix1cd6107943818e89_krem_func_krem_gsm_encode.c_krem_Quantization_and_coding_krem_2854_krem_2854_krem_
krem_prefix1cd6107943818e89_krem_func_krem_gsm_encode.c_krem_Quantization_and_coding_krem_2854_krem_2854_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix1cd6107943818e89_krem_func_krem_gsm_encode.c_krem_Quantization_and_coding_krem_2854_krem_2854_krem_, 1

	.type	krem_prefix1cde11ce093e9489_krem_func_krem_gsm_encode.c_krem_gsm_asr_krem_3076_krem_3076_krem_,@object # @krem_prefix1cde11ce093e9489_krem_func_krem_gsm_encode.c_krem_gsm_asr_krem_3076_krem_3076_krem_
	.globl	krem_prefix1cde11ce093e9489_krem_func_krem_gsm_encode.c_krem_gsm_asr_krem_3076_krem_3076_krem_
krem_prefix1cde11ce093e9489_krem_func_krem_gsm_encode.c_krem_gsm_asr_krem_3076_krem_3076_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix1cde11ce093e9489_krem_func_krem_gsm_encode.c_krem_gsm_asr_krem_3076_krem_3076_krem_, 1

	.type	krem_prefix222d0c907b239ab2_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_,@object # @krem_prefix222d0c907b239ab2_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_
	.globl	krem_prefix222d0c907b239ab2_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_
krem_prefix222d0c907b239ab2_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix222d0c907b239ab2_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_, 1

	.type	krem_prefix239d7d3087591e0a_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_,@object # @krem_prefix239d7d3087591e0a_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_
	.globl	krem_prefix239d7d3087591e0a_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_
krem_prefix239d7d3087591e0a_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix239d7d3087591e0a_krem_loop_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_, 1

	.type	krem_prefix24bc58cba2c16c02_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_,@object # @krem_prefix24bc58cba2c16c02_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_
	.globl	krem_prefix24bc58cba2c16c02_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_
krem_prefix24bc58cba2c16c02_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix24bc58cba2c16c02_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_, 1

	.type	krem_prefix2605dcda6561148d_krem_func_krem_gsm_encode.c_krem_gsm_option_krem_1107_krem_1107_krem_,@object # @krem_prefix2605dcda6561148d_krem_func_krem_gsm_encode.c_krem_gsm_option_krem_1107_krem_1107_krem_
	.globl	krem_prefix2605dcda6561148d_krem_func_krem_gsm_encode.c_krem_gsm_option_krem_1107_krem_1107_krem_
krem_prefix2605dcda6561148d_krem_func_krem_gsm_encode.c_krem_gsm_option_krem_1107_krem_1107_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2605dcda6561148d_krem_func_krem_gsm_encode.c_krem_gsm_option_krem_1107_krem_1107_krem_, 1

	.type	krem_prefix277cb4af64ceabb2_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_,@object # @krem_prefix277cb4af64ceabb2_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_
	.globl	krem_prefix277cb4af64ceabb2_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_
krem_prefix277cb4af64ceabb2_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix277cb4af64ceabb2_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_, 1

	.type	krem_prefix279177cbfd3e2df3_krem_func_krem_gsm_encode.c_krem_Decoding_of_the_coded_Log_Area_Ratios_krem_2274_krem_2274_krem_,@object # @krem_prefix279177cbfd3e2df3_krem_func_krem_gsm_encode.c_krem_Decoding_of_the_coded_Log_Area_Ratios_krem_2274_krem_2274_krem_
	.globl	krem_prefix279177cbfd3e2df3_krem_func_krem_gsm_encode.c_krem_Decoding_of_the_coded_Log_Area_Ratios_krem_2274_krem_2274_krem_
krem_prefix279177cbfd3e2df3_krem_func_krem_gsm_encode.c_krem_Decoding_of_the_coded_Log_Area_Ratios_krem_2274_krem_2274_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix279177cbfd3e2df3_krem_func_krem_gsm_encode.c_krem_Decoding_of_the_coded_Log_Area_Ratios_krem_2274_krem_2274_krem_, 1

	.type	krem_prefix28e7711fc8f8c435_krem_loop_body_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_,@object # @krem_prefix28e7711fc8f8c435_krem_loop_body_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_
	.globl	krem_prefix28e7711fc8f8c435_krem_loop_body_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_
krem_prefix28e7711fc8f8c435_krem_loop_body_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix28e7711fc8f8c435_krem_loop_body_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_, 1

	.type	krem_prefix29acee5b2a107f1e_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_,@object # @krem_prefix29acee5b2a107f1e_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_
	.globl	krem_prefix29acee5b2a107f1e_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_
krem_prefix29acee5b2a107f1e_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix29acee5b2a107f1e_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_, 1

	.type	krem_prefix2a59b9598a44dba9_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_,@object # @krem_prefix2a59b9598a44dba9_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_
	.globl	krem_prefix2a59b9598a44dba9_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_
krem_prefix2a59b9598a44dba9_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2a59b9598a44dba9_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_, 1

	.type	krem_prefix2e0bee9bb923238d_krem_func_krem_gsm_encode.c_krem_Gsm_Coder_krem_1140_krem_1140_krem_,@object # @krem_prefix2e0bee9bb923238d_krem_func_krem_gsm_encode.c_krem_Gsm_Coder_krem_1140_krem_1140_krem_
	.globl	krem_prefix2e0bee9bb923238d_krem_func_krem_gsm_encode.c_krem_Gsm_Coder_krem_1140_krem_1140_krem_
krem_prefix2e0bee9bb923238d_krem_func_krem_gsm_encode.c_krem_Gsm_Coder_krem_1140_krem_1140_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2e0bee9bb923238d_krem_func_krem_gsm_encode.c_krem_Gsm_Coder_krem_1140_krem_1140_krem_, 1

	.type	krem_prefix2e29bd9c05018a4e_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_,@object # @krem_prefix2e29bd9c05018a4e_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_
	.globl	krem_prefix2e29bd9c05018a4e_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_
krem_prefix2e29bd9c05018a4e_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2e29bd9c05018a4e_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2769_krem_, 1

	.type	krem_prefix2f00edf0d09da1cd_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_,@object # @krem_prefix2f00edf0d09da1cd_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_
	.globl	krem_prefix2f00edf0d09da1cd_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_
krem_prefix2f00edf0d09da1cd_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix2f00edf0d09da1cd_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2192_krem_, 1

	.type	krem_prefix30149901cb0926b5_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_,@object # @krem_prefix30149901cb0926b5_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_
	.globl	krem_prefix30149901cb0926b5_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_
krem_prefix30149901cb0926b5_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix30149901cb0926b5_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_, 1

	.type	krem_prefix308f3b053883aba0_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_,@object # @krem_prefix308f3b053883aba0_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_
	.globl	krem_prefix308f3b053883aba0_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_
krem_prefix308f3b053883aba0_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix308f3b053883aba0_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_, 1

	.type	krem_prefix3919baaa29175ba5_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_,@object # @krem_prefix3919baaa29175ba5_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_
	.globl	krem_prefix3919baaa29175ba5_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_
krem_prefix3919baaa29175ba5_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix3919baaa29175ba5_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_, 1

	.type	krem_prefix396845064db6ea2c_krem_loop_body_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_,@object # @krem_prefix396845064db6ea2c_krem_loop_body_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_
	.globl	krem_prefix396845064db6ea2c_krem_loop_body_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_
krem_prefix396845064db6ea2c_krem_loop_body_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix396845064db6ea2c_krem_loop_body_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_, 1

	.type	krem_prefix3e99de09596d3f65_krem_func_krem_gsm_encode.c_krem_create_krem_3130_krem_3130_krem_,@object # @krem_prefix3e99de09596d3f65_krem_func_krem_gsm_encode.c_krem_create_krem_3130_krem_3130_krem_
	.globl	krem_prefix3e99de09596d3f65_krem_func_krem_gsm_encode.c_krem_create_krem_3130_krem_3130_krem_
krem_prefix3e99de09596d3f65_krem_func_krem_gsm_encode.c_krem_create_krem_3130_krem_3130_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix3e99de09596d3f65_krem_func_krem_gsm_encode.c_krem_create_krem_3130_krem_3130_krem_, 1

	.type	krem_prefix411aba91b9ea9b9d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_,@object # @krem_prefix411aba91b9ea9b9d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_
	.globl	krem_prefix411aba91b9ea9b9d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_
krem_prefix411aba91b9ea9b9d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix411aba91b9ea9b9d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_, 1

	.type	krem_prefix4199a7517ca03d59_krem_loop_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_,@object # @krem_prefix4199a7517ca03d59_krem_loop_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_
	.globl	krem_prefix4199a7517ca03d59_krem_loop_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_
krem_prefix4199a7517ca03d59_krem_loop_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix4199a7517ca03d59_krem_loop_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_, 1

	.type	krem_prefix41b8c5b8d9689080_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_,@object # @krem_prefix41b8c5b8d9689080_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_
	.globl	krem_prefix41b8c5b8d9689080_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_
krem_prefix41b8c5b8d9689080_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix41b8c5b8d9689080_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_, 1

	.type	krem_prefix41f94836e37b9471_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_,@object # @krem_prefix41f94836e37b9471_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_
	.globl	krem_prefix41f94836e37b9471_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_
krem_prefix41f94836e37b9471_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix41f94836e37b9471_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_xmaxc_to_exp_mant_krem_1431_krem_1447_krem_, 1

	.type	krem_prefix43cbd842f06fc350_krem_func_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2439_krem_2439_krem_,@object # @krem_prefix43cbd842f06fc350_krem_func_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2439_krem_2439_krem_
	.globl	krem_prefix43cbd842f06fc350_krem_func_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2439_krem_2439_krem_
krem_prefix43cbd842f06fc350_krem_func_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2439_krem_2439_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix43cbd842f06fc350_krem_func_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2439_krem_2439_krem_, 1

	.type	krem_prefix4448d3dc94bd5065_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_,@object # @krem_prefix4448d3dc94bd5065_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_
	.globl	krem_prefix4448d3dc94bd5065_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_
krem_prefix4448d3dc94bd5065_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix4448d3dc94bd5065_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_, 1

	.type	krem_prefix44f0b85fc3de263f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_,@object # @krem_prefix44f0b85fc3de263f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_
	.globl	krem_prefix44f0b85fc3de263f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_
krem_prefix44f0b85fc3de263f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix44f0b85fc3de263f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_, 1

	.type	krem_prefix476310dd9578494e_krem_func_krem_gsm_encode.c_krem_LARp_to_rp_krem_2399_krem_2399_krem_,@object # @krem_prefix476310dd9578494e_krem_func_krem_gsm_encode.c_krem_LARp_to_rp_krem_2399_krem_2399_krem_
	.globl	krem_prefix476310dd9578494e_krem_func_krem_gsm_encode.c_krem_LARp_to_rp_krem_2399_krem_2399_krem_
krem_prefix476310dd9578494e_krem_func_krem_gsm_encode.c_krem_LARp_to_rp_krem_2399_krem_2399_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix476310dd9578494e_krem_func_krem_gsm_encode.c_krem_LARp_to_rp_krem_2399_krem_2399_krem_, 1

	.type	krem_prefix48515dc00e30b932_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_,@object # @krem_prefix48515dc00e30b932_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_
	.globl	krem_prefix48515dc00e30b932_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_
krem_prefix48515dc00e30b932_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix48515dc00e30b932_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_, 1

	.type	krem_prefix499ef10300538378_krem_func_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2198_krem_2198_krem_,@object # @krem_prefix499ef10300538378_krem_func_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2198_krem_2198_krem_
	.globl	krem_prefix499ef10300538378_krem_func_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2198_krem_2198_krem_
krem_prefix499ef10300538378_krem_func_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2198_krem_2198_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix499ef10300538378_krem_func_krem_gsm_encode.c_krem_Gsm_Long_Term_Predictor_krem_2198_krem_2198_krem_, 1

	.type	krem_prefix4d973765dc66cc1a_krem_func_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2164_krem_2164_krem_,@object # @krem_prefix4d973765dc66cc1a_krem_func_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2164_krem_2164_krem_
	.globl	krem_prefix4d973765dc66cc1a_krem_func_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2164_krem_2164_krem_
krem_prefix4d973765dc66cc1a_krem_func_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2164_krem_2164_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix4d973765dc66cc1a_krem_func_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2164_krem_2164_krem_, 1

	.type	krem_prefix503630950d4bacca_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_,@object # @krem_prefix503630950d4bacca_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_
	.globl	krem_prefix503630950d4bacca_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_
krem_prefix503630950d4bacca_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix503630950d4bacca_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_, 1

	.type	krem_prefix546eefa806d4de0c_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_,@object # @krem_prefix546eefa806d4de0c_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_
	.globl	krem_prefix546eefa806d4de0c_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_
krem_prefix546eefa806d4de0c_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix546eefa806d4de0c_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2191_krem_, 1

	.type	krem_prefix54c3fd374be5c46c_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_,@object # @krem_prefix54c3fd374be5c46c_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_
	.globl	krem_prefix54c3fd374be5c46c_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_
krem_prefix54c3fd374be5c46c_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix54c3fd374be5c46c_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1821_krem_, 1

	.type	krem_prefix5605ca21591ece21_krem_loop_body_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_,@object # @krem_prefix5605ca21591ece21_krem_loop_body_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_
	.globl	krem_prefix5605ca21591ece21_krem_loop_body_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_
krem_prefix5605ca21591ece21_krem_loop_body_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix5605ca21591ece21_krem_loop_body_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_, 1

	.type	krem_prefix56c9eb2c5e84a8c1_krem_loop_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_,@object # @krem_prefix56c9eb2c5e84a8c1_krem_loop_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_
	.globl	krem_prefix56c9eb2c5e84a8c1_krem_loop_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_
krem_prefix56c9eb2c5e84a8c1_krem_loop_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix56c9eb2c5e84a8c1_krem_loop_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_, 1

	.type	krem_prefix58945c233af87cbd_krem_loop_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_,@object # @krem_prefix58945c233af87cbd_krem_loop_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_
	.globl	krem_prefix58945c233af87cbd_krem_loop_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_
krem_prefix58945c233af87cbd_krem_loop_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix58945c233af87cbd_krem_loop_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_, 1

	.type	krem_prefix5c1b16c652df622d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_,@object # @krem_prefix5c1b16c652df622d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_
	.globl	krem_prefix5c1b16c652df622d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_
krem_prefix5c1b16c652df622d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix5c1b16c652df622d_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2674_krem_, 1

	.type	krem_prefix5c413e8ff9e0c63e_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_,@object # @krem_prefix5c413e8ff9e0c63e_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_
	.globl	krem_prefix5c413e8ff9e0c63e_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_
krem_prefix5c413e8ff9e0c63e_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix5c413e8ff9e0c63e_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_, 1

	.type	krem_prefix5cf0e89d87e72de9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_,@object # @krem_prefix5cf0e89d87e72de9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_
	.globl	krem_prefix5cf0e89d87e72de9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_
krem_prefix5cf0e89d87e72de9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix5cf0e89d87e72de9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_, 1

	.type	krem_prefix605edc87ff9023e8_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_,@object # @krem_prefix605edc87ff9023e8_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_
	.globl	krem_prefix605edc87ff9023e8_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_
krem_prefix605edc87ff9023e8_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix605edc87ff9023e8_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_, 1

	.type	krem_prefix65099ff0404e75bf_krem_func_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2816_krem_2816_krem_,@object # @krem_prefix65099ff0404e75bf_krem_func_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2816_krem_2816_krem_
	.globl	krem_prefix65099ff0404e75bf_krem_func_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2816_krem_2816_krem_
krem_prefix65099ff0404e75bf_krem_func_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2816_krem_2816_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix65099ff0404e75bf_krem_func_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2816_krem_2816_krem_, 1

	.type	krem_prefix68df5ccca52719d9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_,@object # @krem_prefix68df5ccca52719d9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_
	.globl	krem_prefix68df5ccca52719d9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_
krem_prefix68df5ccca52719d9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix68df5ccca52719d9_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_, 1

	.type	krem_prefix6c4f0e4eb8a95295_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_,@object # @krem_prefix6c4f0e4eb8a95295_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_
	.globl	krem_prefix6c4f0e4eb8a95295_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_
krem_prefix6c4f0e4eb8a95295_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix6c4f0e4eb8a95295_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_, 1

	.type	krem_prefix715b8d55bd194e5f_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_,@object # @krem_prefix715b8d55bd194e5f_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_
	.globl	krem_prefix715b8d55bd194e5f_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_
krem_prefix715b8d55bd194e5f_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix715b8d55bd194e5f_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_, 1

	.type	krem_prefix754a7d1663557a17_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_,@object # @krem_prefix754a7d1663557a17_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_
	.globl	krem_prefix754a7d1663557a17_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_
krem_prefix754a7d1663557a17_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix754a7d1663557a17_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1535_krem_, 1

	.type	krem_prefix7b1eaa1fa0c8272e_krem_func_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2369_krem_2369_krem_,@object # @krem_prefix7b1eaa1fa0c8272e_krem_func_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2369_krem_2369_krem_
	.globl	krem_prefix7b1eaa1fa0c8272e_krem_func_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2369_krem_2369_krem_
krem_prefix7b1eaa1fa0c8272e_krem_func_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2369_krem_2369_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix7b1eaa1fa0c8272e_krem_func_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2369_krem_2369_krem_, 1

	.type	krem_prefix7ba0625d94357e83_krem_func_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2385_krem_2385_krem_,@object # @krem_prefix7ba0625d94357e83_krem_func_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2385_krem_2385_krem_
	.globl	krem_prefix7ba0625d94357e83_krem_func_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2385_krem_2385_krem_
krem_prefix7ba0625d94357e83_krem_func_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2385_krem_2385_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix7ba0625d94357e83_krem_func_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2385_krem_2385_krem_, 1

	.type	krem_prefix7ed7bcba6b573d5b_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_,@object # @krem_prefix7ed7bcba6b573d5b_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_
	.globl	krem_prefix7ed7bcba6b573d5b_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_
krem_prefix7ed7bcba6b573d5b_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix7ed7bcba6b573d5b_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_, 1

	.type	krem_prefix7f9714eb1c07814c_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_,@object # @krem_prefix7f9714eb1c07814c_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_
	.globl	krem_prefix7f9714eb1c07814c_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_
krem_prefix7f9714eb1c07814c_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix7f9714eb1c07814c_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_, 1

	.type	krem_prefix802d3c8c2e448820_krem_func_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2341_krem_2341_krem_,@object # @krem_prefix802d3c8c2e448820_krem_func_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2341_krem_2341_krem_
	.globl	krem_prefix802d3c8c2e448820_krem_func_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2341_krem_2341_krem_
krem_prefix802d3c8c2e448820_krem_func_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2341_krem_2341_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix802d3c8c2e448820_krem_func_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2341_krem_2341_krem_, 1

	.type	krem_prefix83110ff3f0c7f079_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_,@object # @krem_prefix83110ff3f0c7f079_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_
	.globl	krem_prefix83110ff3f0c7f079_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_
krem_prefix83110ff3f0c7f079_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix83110ff3f0c7f079_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1745_krem_1873_krem_, 1

	.type	krem_prefix84ea20778de86494_krem_func_krem_gsm_encode.c_krem_Weighting_filter_krem_1224_krem_1224_krem_,@object # @krem_prefix84ea20778de86494_krem_func_krem_gsm_encode.c_krem_Weighting_filter_krem_1224_krem_1224_krem_
	.globl	krem_prefix84ea20778de86494_krem_func_krem_gsm_encode.c_krem_Weighting_filter_krem_1224_krem_1224_krem_
krem_prefix84ea20778de86494_krem_func_krem_gsm_encode.c_krem_Weighting_filter_krem_1224_krem_1224_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix84ea20778de86494_krem_func_krem_gsm_encode.c_krem_Weighting_filter_krem_1224_krem_1224_krem_, 1

	.type	krem_prefix855a0f1ad7b3e7d3_krem_func_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1673_krem_1673_krem_,@object # @krem_prefix855a0f1ad7b3e7d3_krem_func_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1673_krem_1673_krem_
	.globl	krem_prefix855a0f1ad7b3e7d3_krem_func_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1673_krem_1673_krem_
krem_prefix855a0f1ad7b3e7d3_krem_func_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1673_krem_1673_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix855a0f1ad7b3e7d3_krem_func_krem_gsm_encode.c_krem_Gsm_RPE_Encoding_krem_1673_krem_1673_krem_, 1

	.type	krem_prefix91cb8781d3a7f827_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_,@object # @krem_prefix91cb8781d3a7f827_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_
	.globl	krem_prefix91cb8781d3a7f827_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_
krem_prefix91cb8781d3a7f827_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix91cb8781d3a7f827_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2699_krem_, 1

	.type	krem_prefix91d4772f0546d2c7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_,@object # @krem_prefix91d4772f0546d2c7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_
	.globl	krem_prefix91d4772f0546d2c7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_
krem_prefix91d4772f0546d2c7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix91d4772f0546d2c7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_, 1

	.type	krem_prefix923ba6b66896da4b_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_,@object # @krem_prefix923ba6b66896da4b_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_
	.globl	krem_prefix923ba6b66896da4b_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_
krem_prefix923ba6b66896da4b_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix923ba6b66896da4b_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_, 1

	.type	krem_prefix9380fc9cee52da2c_krem_loop_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_,@object # @krem_prefix9380fc9cee52da2c_krem_loop_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_
	.globl	krem_prefix9380fc9cee52da2c_krem_loop_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_
krem_prefix9380fc9cee52da2c_krem_loop_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9380fc9cee52da2c_krem_loop_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_, 1

	.type	krem_prefix95b1434a9e1f3d75_krem_func_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2356_krem_2356_krem_,@object # @krem_prefix95b1434a9e1f3d75_krem_func_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2356_krem_2356_krem_
	.globl	krem_prefix95b1434a9e1f3d75_krem_func_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2356_krem_2356_krem_
krem_prefix95b1434a9e1f3d75_krem_func_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2356_krem_2356_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix95b1434a9e1f3d75_krem_func_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2356_krem_2356_krem_, 1

	.type	krem_prefix96ff125ec49318e2_krem_loop_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_,@object # @krem_prefix96ff125ec49318e2_krem_loop_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_
	.globl	krem_prefix96ff125ec49318e2_krem_loop_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_
krem_prefix96ff125ec49318e2_krem_loop_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix96ff125ec49318e2_krem_loop_krem_gsm_encode.c_krem_Coefficients_13_26_krem_2357_krem_2365_krem_, 1

	.type	krem_prefix9b96ea65ed7e5969_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_,@object # @krem_prefix9b96ea65ed7e5969_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_
	.globl	krem_prefix9b96ea65ed7e5969_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_
krem_prefix9b96ea65ed7e5969_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9b96ea65ed7e5969_krem_loop_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_, 1

	.type	krem_prefix9e1b44df62d07b0a_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_,@object # @krem_prefix9e1b44df62d07b0a_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_
	.globl	krem_prefix9e1b44df62d07b0a_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_
krem_prefix9e1b44df62d07b0a_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9e1b44df62d07b0a_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_, 1

	.type	krem_prefix9e39ad66a0a561fa_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_,@object # @krem_prefix9e39ad66a0a561fa_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_
	.globl	krem_prefix9e39ad66a0a561fa_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_
krem_prefix9e39ad66a0a561fa_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9e39ad66a0a561fa_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_, 1

	.type	krem_prefix9ef8e5183c8d311b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_,@object # @krem_prefix9ef8e5183c8d311b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_
	.globl	krem_prefix9ef8e5183c8d311b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_
krem_prefix9ef8e5183c8d311b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_:
	.byte	0                       # 0x0
	.size	krem_prefix9ef8e5183c8d311b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2193_krem_, 1

	.type	krem_prefixa03dd9738c62720b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_,@object # @krem_prefixa03dd9738c62720b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_
	.globl	krem_prefixa03dd9738c62720b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_
krem_prefixa03dd9738c62720b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa03dd9738c62720b_krem_loop_body_krem_gsm_encode.c_krem_Long_term_analysis_filtering_krem_2179_krem_2194_krem_, 1

	.type	krem_prefixa0b8228d50c8e905_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_,@object # @krem_prefixa0b8228d50c8e905_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_
	.globl	krem_prefixa0b8228d50c8e905_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_
krem_prefixa0b8228d50c8e905_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa0b8228d50c8e905_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1497_krem_, 1

	.type	krem_prefixa301d41c668a7dac_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_,@object # @krem_prefixa301d41c668a7dac_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_
	.globl	krem_prefixa301d41c668a7dac_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_
krem_prefixa301d41c668a7dac_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa301d41c668a7dac_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2775_krem_, 1

	.type	krem_prefixa36483a00a510c65_krem_loop_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_,@object # @krem_prefixa36483a00a510c65_krem_loop_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_
	.globl	krem_prefixa36483a00a510c65_krem_loop_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_
krem_prefixa36483a00a510c65_krem_loop_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa36483a00a510c65_krem_loop_krem_gsm_encode.c_krem_Coefficients_27_39_krem_2370_krem_2380_krem_, 1

	.type	krem_prefixa57f488996884f9d_krem_func_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1318_krem_1318_krem_,@object # @krem_prefixa57f488996884f9d_krem_func_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1318_krem_1318_krem_
	.globl	krem_prefixa57f488996884f9d_krem_func_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1318_krem_1318_krem_
krem_prefixa57f488996884f9d_krem_func_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1318_krem_1318_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa57f488996884f9d_krem_func_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1318_krem_1318_krem_, 1

	.type	krem_prefixa8279593d525508d_krem_func_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1583_krem_1583_krem_,@object # @krem_prefixa8279593d525508d_krem_func_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1583_krem_1583_krem_
	.globl	krem_prefixa8279593d525508d_krem_func_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1583_krem_1583_krem_
krem_prefixa8279593d525508d_krem_func_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1583_krem_1583_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa8279593d525508d_krem_func_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1583_krem_1583_krem_, 1

	.type	krem_prefixa9941eccdccac6c8_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_,@object # @krem_prefixa9941eccdccac6c8_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_
	.globl	krem_prefixa9941eccdccac6c8_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_
krem_prefixa9941eccdccac6c8_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixa9941eccdccac6c8_krem_loop_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2443_krem_2483_krem_, 1

	.type	krem_prefixabbf2b0fe2940ab5_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_,@object # @krem_prefixabbf2b0fe2940ab5_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_
	.globl	krem_prefixabbf2b0fe2940ab5_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_
krem_prefixabbf2b0fe2940ab5_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixabbf2b0fe2940ab5_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_, 1

	.type	krem_prefixace24873300ae0b9_krem_func_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2893_krem_2893_krem_,@object # @krem_prefixace24873300ae0b9_krem_func_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2893_krem_2893_krem_
	.globl	krem_prefixace24873300ae0b9_krem_func_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2893_krem_2893_krem_
krem_prefixace24873300ae0b9_krem_func_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2893_krem_2893_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixace24873300ae0b9_krem_func_krem_gsm_encode.c_krem_Gsm_LPC_Analysis_krem_2893_krem_2893_krem_, 1

	.type	krem_prefixada3f497e8d1fa03_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_,@object # @krem_prefixada3f497e8d1fa03_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_
	.globl	krem_prefixada3f497e8d1fa03_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_
krem_prefixada3f497e8d1fa03_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixada3f497e8d1fa03_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_, 1

	.type	krem_prefixb44a9ff256d97d68_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_,@object # @krem_prefixb44a9ff256d97d68_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_
	.globl	krem_prefixb44a9ff256d97d68_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_
krem_prefixb44a9ff256d97d68_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb44a9ff256d97d68_krem_loop_body_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1585_krem_1614_krem_, 1

	.type	krem_prefixb7077fe8b8274ae0_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_,@object # @krem_prefixb7077fe8b8274ae0_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_
	.globl	krem_prefixb7077fe8b8274ae0_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_
krem_prefixb7077fe8b8274ae0_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb7077fe8b8274ae0_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2778_krem_, 1

	.type	krem_prefixb7c3b028aab282c6_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_,@object # @krem_prefixb7c3b028aab282c6_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_
	.globl	krem_prefixb7c3b028aab282c6_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_
krem_prefixb7c3b028aab282c6_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb7c3b028aab282c6_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2641_krem_, 1

	.type	krem_prefixb9d82f145e5f40d0_krem_loop_body_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_,@object # @krem_prefixb9d82f145e5f40d0_krem_loop_body_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_
	.globl	krem_prefixb9d82f145e5f40d0_krem_loop_body_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_
krem_prefixb9d82f145e5f40d0_krem_loop_body_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixb9d82f145e5f40d0_krem_loop_body_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_, 1

	.type	krem_prefixbe8ba2b555c090f7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_,@object # @krem_prefixbe8ba2b555c090f7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_
	.globl	krem_prefixbe8ba2b555c090f7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_
krem_prefixbe8ba2b555c090f7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixbe8ba2b555c090f7_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2749_krem_2809_krem_, 1

	.type	krem_prefixc4126ed110f1309e_krem_loop_body_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_,@object # @krem_prefixc4126ed110f1309e_krem_loop_body_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_
	.globl	krem_prefixc4126ed110f1309e_krem_loop_body_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_
krem_prefixc4126ed110f1309e_krem_loop_body_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc4126ed110f1309e_krem_loop_body_krem_gsm_encode.c_krem_APCM_inverse_quantization_krem_1550_krem_1577_krem_, 1

	.type	krem_prefixc4e1578fe850ea69_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_,@object # @krem_prefixc4e1578fe850ea69_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_
	.globl	krem_prefixc4e1578fe850ea69_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_
krem_prefixc4e1578fe850ea69_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc4e1578fe850ea69_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2809_krem_, 1

	.type	krem_prefixc4f15a759828e44b_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_,@object # @krem_prefixc4f15a759828e44b_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_
	.globl	krem_prefixc4f15a759828e44b_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_
krem_prefixc4f15a759828e44b_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc4f15a759828e44b_krem_loop_body_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1842_krem_, 1

	.type	krem_prefixc65122cf0cb7f738_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_,@object # @krem_prefixc65122cf0cb7f738_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_
	.globl	krem_prefixc65122cf0cb7f738_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_
krem_prefixc65122cf0cb7f738_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc65122cf0cb7f738_krem_loop_body_krem_gsm_encode.c_krem_Short_term_analysis_filtering_krem_2457_krem_2479_krem_, 1

	.type	krem_prefixc7e3d0116e65897e_krem_loop_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_,@object # @krem_prefixc7e3d0116e65897e_krem_loop_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_
	.globl	krem_prefixc7e3d0116e65897e_krem_loop_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_
krem_prefixc7e3d0116e65897e_krem_loop_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc7e3d0116e65897e_krem_loop_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_, 1

	.type	krem_prefixc8ea3c62d23e4605_krem_func_krem_gsm_encode.c_krem_APCM_quantization_krem_1457_krem_1457_krem_,@object # @krem_prefixc8ea3c62d23e4605_krem_func_krem_gsm_encode.c_krem_APCM_quantization_krem_1457_krem_1457_krem_
	.globl	krem_prefixc8ea3c62d23e4605_krem_func_krem_gsm_encode.c_krem_APCM_quantization_krem_1457_krem_1457_krem_
krem_prefixc8ea3c62d23e4605_krem_func_krem_gsm_encode.c_krem_APCM_quantization_krem_1457_krem_1457_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc8ea3c62d23e4605_krem_func_krem_gsm_encode.c_krem_APCM_quantization_krem_1457_krem_1457_krem_, 1

	.type	krem_prefixc9ab4c50b5a336a8_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_,@object # @krem_prefixc9ab4c50b5a336a8_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_
	.globl	krem_prefixc9ab4c50b5a336a8_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_
krem_prefixc9ab4c50b5a336a8_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixc9ab4c50b5a336a8_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1777_krem_, 1

	.type	krem_prefixcbdb54e30baae5f9_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_,@object # @krem_prefixcbdb54e30baae5f9_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_
	.globl	krem_prefixcbdb54e30baae5f9_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_
krem_prefixcbdb54e30baae5f9_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixcbdb54e30baae5f9_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_0_12_krem_2342_krem_2352_krem_, 1

	.type	krem_prefixccb474602b2d7c1d_krem_loop_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_,@object # @krem_prefixccb474602b2d7c1d_krem_loop_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_
	.globl	krem_prefixccb474602b2d7c1d_krem_loop_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_
krem_prefixccb474602b2d7c1d_krem_loop_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixccb474602b2d7c1d_krem_loop_krem_gsm_encode.c_krem_Weighting_filter_krem_1237_krem_1312_krem_, 1

	.type	krem_prefixccf54e4d9a4e040d_krem_func_krem_gsm_encode.c_krem_main_krem_3163_krem_3163_krem_,@object # @krem_prefixccf54e4d9a4e040d_krem_func_krem_gsm_encode.c_krem_main_krem_3163_krem_3163_krem_
	.globl	krem_prefixccf54e4d9a4e040d_krem_func_krem_gsm_encode.c_krem_main_krem_3163_krem_3163_krem_
krem_prefixccf54e4d9a4e040d_krem_func_krem_gsm_encode.c_krem_main_krem_3163_krem_3163_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixccf54e4d9a4e040d_krem_func_krem_gsm_encode.c_krem_main_krem_3163_krem_3163_krem_, 1

	.type	krem_prefixcde5f6dc81f836ab_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_,@object # @krem_prefixcde5f6dc81f836ab_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_
	.globl	krem_prefixcde5f6dc81f836ab_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_
krem_prefixcde5f6dc81f836ab_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixcde5f6dc81f836ab_krem_loop_krem_gsm_encode.c_krem_RPE_grid_positioning_krem_1584_krem_1617_krem_, 1

	.type	krem_prefixd38fe5ff36420470_krem_loop_body_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_,@object # @krem_prefixd38fe5ff36420470_krem_loop_body_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_
	.globl	krem_prefixd38fe5ff36420470_krem_loop_body_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_
krem_prefixd38fe5ff36420470_krem_loop_body_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd38fe5ff36420470_krem_loop_body_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_, 1

	.type	krem_prefixd4d15d967c1a8632_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_,@object # @krem_prefixd4d15d967c1a8632_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_
	.globl	krem_prefixd4d15d967c1a8632_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_
krem_prefixd4d15d967c1a8632_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd4d15d967c1a8632_krem_loop_body_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2761_krem_, 1

	.type	krem_prefixd7862ccb9da43e92_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_,@object # @krem_prefixd7862ccb9da43e92_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_
	.globl	krem_prefixd7862ccb9da43e92_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_
krem_prefixd7862ccb9da43e92_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd7862ccb9da43e92_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2930_krem_2996_krem_, 1

	.type	krem_prefixd87bf6512d606c52_krem_func_krem_gsm_encode.c_krem_Autocorrelation_krem_2582_krem_2582_krem_,@object # @krem_prefixd87bf6512d606c52_krem_func_krem_gsm_encode.c_krem_Autocorrelation_krem_2582_krem_2582_krem_
	.globl	krem_prefixd87bf6512d606c52_krem_func_krem_gsm_encode.c_krem_Autocorrelation_krem_2582_krem_2582_krem_
krem_prefixd87bf6512d606c52_krem_func_krem_gsm_encode.c_krem_Autocorrelation_krem_2582_krem_2582_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd87bf6512d606c52_krem_func_krem_gsm_encode.c_krem_Autocorrelation_krem_2582_krem_2582_krem_, 1

	.type	krem_prefixd98fb080fda731b0_krem_func_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2530_krem_2530_krem_,@object # @krem_prefixd98fb080fda731b0_krem_func_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2530_krem_2530_krem_
	.globl	krem_prefixd98fb080fda731b0_krem_func_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2530_krem_2530_krem_
krem_prefixd98fb080fda731b0_krem_func_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2530_krem_2530_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixd98fb080fda731b0_krem_func_krem_gsm_encode.c_krem_Gsm_Short_Term_Analysis_Filter_krem_2530_krem_2530_krem_, 1

	.type	krem_prefixdb0990e7e6bbe92b_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_,@object # @krem_prefixdb0990e7e6bbe92b_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_
	.globl	krem_prefixdb0990e7e6bbe92b_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_
krem_prefixdb0990e7e6bbe92b_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixdb0990e7e6bbe92b_krem_loop_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1744_krem_1760_krem_, 1

	.type	krem_prefixdc64c2208f63e3b1_krem_loop_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_,@object # @krem_prefixdc64c2208f63e3b1_krem_loop_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_
	.globl	krem_prefixdc64c2208f63e3b1_krem_loop_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_
krem_prefixdc64c2208f63e3b1_krem_loop_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixdc64c2208f63e3b1_krem_loop_krem_gsm_encode.c_krem_RPE_grid_selection_krem_1329_krem_1419_krem_, 1

	.type	krem_prefixdea566a1fa4f5ac2_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_,@object # @krem_prefixdea566a1fa4f5ac2_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_
	.globl	krem_prefixdea566a1fa4f5ac2_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_
krem_prefixdea566a1fa4f5ac2_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixdea566a1fa4f5ac2_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2583_krem_2710_krem_, 1

	.type	krem_prefixe0954ca092aff06c_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_,@object # @krem_prefixe0954ca092aff06c_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_
	.globl	krem_prefixe0954ca092aff06c_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_
krem_prefixe0954ca092aff06c_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe0954ca092aff06c_krem_loop_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2746_krem_2789_krem_, 1

	.type	krem_prefixe1d49982464e5ab5_krem_loop_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_,@object # @krem_prefixe1d49982464e5ab5_krem_loop_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_
	.globl	krem_prefixe1d49982464e5ab5_krem_loop_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_
krem_prefixe1d49982464e5ab5_krem_loop_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe1d49982464e5ab5_krem_loop_krem_gsm_encode.c_krem_create_krem_3132_krem_3139_krem_, 1

	.type	krem_prefixe3c3b41979131cbd_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_,@object # @krem_prefixe3c3b41979131cbd_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_
	.globl	krem_prefixe3c3b41979131cbd_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_
krem_prefixe3c3b41979131cbd_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe3c3b41979131cbd_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2608_krem_, 1

	.type	krem_prefixe488b6b1e1efc077_krem_loop_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_,@object # @krem_prefixe488b6b1e1efc077_krem_loop_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_
	.globl	krem_prefixe488b6b1e1efc077_krem_loop_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_
krem_prefixe488b6b1e1efc077_krem_loop_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe488b6b1e1efc077_krem_loop_krem_gsm_encode.c_krem_encode_krem_3149_krem_3157_krem_, 1

	.type	krem_prefixe6808d10ecf353be_krem_func_krem_gsm_encode.c_krem_gsm_sub_krem_817_krem_817_krem_,@object # @krem_prefixe6808d10ecf353be_krem_func_krem_gsm_encode.c_krem_gsm_sub_krem_817_krem_817_krem_
	.globl	krem_prefixe6808d10ecf353be_krem_func_krem_gsm_encode.c_krem_gsm_sub_krem_817_krem_817_krem_
krem_prefixe6808d10ecf353be_krem_func_krem_gsm_encode.c_krem_gsm_sub_krem_817_krem_817_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe6808d10ecf353be_krem_func_krem_gsm_encode.c_krem_gsm_sub_krem_817_krem_817_krem_, 1

	.type	krem_prefixe91a550696125872_krem_func_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1737_krem_1737_krem_,@object # @krem_prefixe91a550696125872_krem_func_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1737_krem_1737_krem_
	.globl	krem_prefixe91a550696125872_krem_func_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1737_krem_1737_krem_
krem_prefixe91a550696125872_krem_func_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1737_krem_1737_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe91a550696125872_krem_func_krem_gsm_encode.c_krem_Calculation_of_the_LTP_parameters_krem_1737_krem_1737_krem_, 1

	.type	krem_prefixe9581b5100cd4531_krem_func_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2744_krem_2744_krem_,@object # @krem_prefixe9581b5100cd4531_krem_func_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2744_krem_2744_krem_
	.globl	krem_prefixe9581b5100cd4531_krem_func_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2744_krem_2744_krem_
krem_prefixe9581b5100cd4531_krem_func_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2744_krem_2744_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe9581b5100cd4531_krem_func_krem_gsm_encode.c_krem_Reflection_coefficients_krem_2744_krem_2744_krem_, 1

	.type	krem_prefixe99f94c8841ace1f_krem_func_krem_gsm_encode.c_krem_gsm_div_krem_3099_krem_3099_krem_,@object # @krem_prefixe99f94c8841ace1f_krem_func_krem_gsm_encode.c_krem_gsm_div_krem_3099_krem_3099_krem_
	.globl	krem_prefixe99f94c8841ace1f_krem_func_krem_gsm_encode.c_krem_gsm_div_krem_3099_krem_3099_krem_
krem_prefixe99f94c8841ace1f_krem_func_krem_gsm_encode.c_krem_gsm_div_krem_3099_krem_3099_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixe99f94c8841ace1f_krem_func_krem_gsm_encode.c_krem_gsm_div_krem_3099_krem_3099_krem_, 1

	.type	krem_prefixeaa6f1bca816923b_krem_func_krem_gsm_encode.c_krem_encode_krem_3146_krem_3146_krem_,@object # @krem_prefixeaa6f1bca816923b_krem_func_krem_gsm_encode.c_krem_encode_krem_3146_krem_3146_krem_
	.globl	krem_prefixeaa6f1bca816923b_krem_func_krem_gsm_encode.c_krem_encode_krem_3146_krem_3146_krem_
krem_prefixeaa6f1bca816923b_krem_func_krem_gsm_encode.c_krem_encode_krem_3146_krem_3146_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixeaa6f1bca816923b_krem_func_krem_gsm_encode.c_krem_encode_krem_3146_krem_3146_krem_, 1

	.type	krem_prefixed6b94d4be2e1c56_krem_loop_body_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_,@object # @krem_prefixed6b94d4be2e1c56_krem_loop_body_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_
	.globl	krem_prefixed6b94d4be2e1c56_krem_loop_body_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_
krem_prefixed6b94d4be2e1c56_krem_loop_body_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixed6b94d4be2e1c56_krem_loop_body_krem_gsm_encode.c_krem_LARp_to_rp_krem_2400_krem_2432_krem_, 1

	.type	krem_prefixeee1091f5ae143a3_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_,@object # @krem_prefixeee1091f5ae143a3_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_
	.globl	krem_prefixeee1091f5ae143a3_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_
krem_prefixeee1091f5ae143a3_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixeee1091f5ae143a3_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2643_krem_, 1

	.type	krem_prefixefdb16514873e084_krem_func_krem_gsm_encode.c_krem_gsm_norm_krem_3011_krem_3011_krem_,@object # @krem_prefixefdb16514873e084_krem_func_krem_gsm_encode.c_krem_gsm_norm_krem_3011_krem_3011_krem_
	.globl	krem_prefixefdb16514873e084_krem_func_krem_gsm_encode.c_krem_gsm_norm_krem_3011_krem_3011_krem_
krem_prefixefdb16514873e084_krem_func_krem_gsm_encode.c_krem_gsm_norm_krem_3011_krem_3011_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixefdb16514873e084_krem_func_krem_gsm_encode.c_krem_gsm_norm_krem_3011_krem_3011_krem_, 1

	.type	krem_prefixf048cb8a8c4a2328_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_,@object # @krem_prefixf048cb8a8c4a2328_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_
	.globl	krem_prefixf048cb8a8c4a2328_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_
krem_prefixf048cb8a8c4a2328_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf048cb8a8c4a2328_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2703_krem_, 1

	.type	krem_prefixf656530ff27f3694_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_,@object # @krem_prefixf656530ff27f3694_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_
	.globl	krem_prefixf656530ff27f3694_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_
krem_prefixf656530ff27f3694_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf656530ff27f3694_krem_loop_body_krem_gsm_encode.c_krem_APCM_quantization_krem_1466_krem_1481_krem_, 1

	.type	krem_prefixf67995908c14d6a1_krem_loop_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_,@object # @krem_prefixf67995908c14d6a1_krem_loop_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_
	.globl	krem_prefixf67995908c14d6a1_krem_loop_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_
krem_prefixf67995908c14d6a1_krem_loop_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf67995908c14d6a1_krem_loop_krem_gsm_encode.c_krem_gsm_div_krem_3101_krem_3122_krem_, 1

	.type	krem_prefixf8c0c9f668e45730_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_,@object # @krem_prefixf8c0c9f668e45730_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_
	.globl	krem_prefixf8c0c9f668e45730_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_
krem_prefixf8c0c9f668e45730_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixf8c0c9f668e45730_krem_loop_body_krem_gsm_encode.c_krem_Gsm_Coder_krem_1202_krem_1206_krem_, 1

	.type	krem_prefixfc1b535ae84a52bb_krem_loop_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_,@object # @krem_prefixfc1b535ae84a52bb_krem_loop_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_
	.globl	krem_prefixfc1b535ae84a52bb_krem_loop_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_
krem_prefixfc1b535ae84a52bb_krem_loop_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfc1b535ae84a52bb_krem_loop_krem_gsm_encode.c_krem_Transformation_to_Log_Area_Ratios_krem_2817_krem_2848_krem_, 1

	.type	krem_prefixfc3652397523bbf2_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_,@object # @krem_prefixfc3652397523bbf2_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_
	.globl	krem_prefixfc3652397523bbf2_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_
krem_prefixfc3652397523bbf2_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfc3652397523bbf2_krem_loop_body_krem_gsm_encode.c_krem_Coefficients_40_159_krem_2386_krem_2393_krem_, 1

	.type	krem_prefixfc87874128d051f4_krem_func_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2928_krem_2928_krem_,@object # @krem_prefixfc87874128d051f4_krem_func_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2928_krem_2928_krem_
	.globl	krem_prefixfc87874128d051f4_krem_func_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2928_krem_2928_krem_
krem_prefixfc87874128d051f4_krem_func_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2928_krem_2928_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfc87874128d051f4_krem_func_krem_gsm_encode.c_krem_Gsm_Preprocess_krem_2928_krem_2928_krem_, 1

	.type	krem_prefixfcb84a04c9c54f1f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_,@object # @krem_prefixfcb84a04c9c54f1f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_
	.globl	krem_prefixfcb84a04c9c54f1f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_
krem_prefixfcb84a04c9c54f1f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfcb84a04c9c54f1f_krem_loop_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2642_krem_, 1

	.type	krem_prefixfec818770f8e4ac5_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_,@object # @krem_prefixfec818770f8e4ac5_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_
	.globl	krem_prefixfec818770f8e4ac5_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_
krem_prefixfec818770f8e4ac5_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixfec818770f8e4ac5_krem_loop_krem_gsm_encode.c_krem_Gsm_Coder_krem_1164_krem_1210_krem_, 1

	.type	krem_prefixff11df729591ac20_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_,@object # @krem_prefixff11df729591ac20_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_
	.globl	krem_prefixff11df729591ac20_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_
krem_prefixff11df729591ac20_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_:
	.byte	0                       # 0x0
	.size	krem_prefixff11df729591ac20_krem_loop_body_krem_gsm_encode.c_krem_Autocorrelation_krem_2590_krem_2644_krem_, 1

.Ldebug_end1:
	.data
.Ldebug_end2:
	.text
.Ldebug_end3:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.6.1 (tags/RELEASE_361/final)"
.Linfo_string1:
	.asciz	"gsm_encode.c"
.Linfo_string2:
	.asciz	"/home/patmos/github/bachelor_project_HLS/candidates/tacle-bench/sequential/gsm_encode"
.Linfo_string3:
	.asciz	"pcmdata"
.Linfo_string4:
	.asciz	"short"
.Linfo_string5:
	.asciz	"gsm_signal"
.Linfo_string6:
	.asciz	"sizetype"
.Linfo_string7:
	.asciz	"gsmdata"
.Linfo_string8:
	.asciz	"unsigned char"
.Linfo_string9:
	.asciz	"gsm_byte"
.Linfo_string10:
	.asciz	"e"
.Linfo_string11:
	.asciz	"word"
.Linfo_string12:
	.asciz	"gsm_A"
.Linfo_string13:
	.asciz	"gsm_B"
.Linfo_string14:
	.asciz	"gsm_MIC"
.Linfo_string15:
	.asciz	"gsm_MAC"
.Linfo_string16:
	.asciz	"gsm_INVA"
.Linfo_string17:
	.asciz	"gsm_DLB"
.Linfo_string18:
	.asciz	"gsm_QLB"
.Linfo_string19:
	.asciz	"gsm_H"
.Linfo_string20:
	.asciz	"gsm_NRFAC"
.Linfo_string21:
	.asciz	"gsm_FAC"
.Linfo_string22:
	.asciz	"f_fast"
.Linfo_string23:
	.asciz	"int"
.Linfo_string24:
	.asciz	"f_verbose"
.Linfo_string25:
	.asciz	"gsmstate"
.Linfo_string26:
	.asciz	"dp0"
.Linfo_string27:
	.asciz	"z1"
.Linfo_string28:
	.asciz	"L_z2"
.Linfo_string29:
	.asciz	"long int"
.Linfo_string30:
	.asciz	"longword"
.Linfo_string31:
	.asciz	"mp"
.Linfo_string32:
	.asciz	"u"
.Linfo_string33:
	.asciz	"LARpp"
.Linfo_string34:
	.asciz	"j"
.Linfo_string35:
	.asciz	"nrp"
.Linfo_string36:
	.asciz	"v"
.Linfo_string37:
	.asciz	"msr"
.Linfo_string38:
	.asciz	"verbose"
.Linfo_string39:
	.asciz	"char"
.Linfo_string40:
	.asciz	"fast"
.Linfo_string41:
	.asciz	"gsm_state"
.Linfo_string42:
	.asciz	"bitoff"
.Linfo_string43:
	.asciz	"long unsigned int"
.Linfo_string44:
	.asciz	"ulongword"
.Linfo_string45:
	.asciz	"Reflection_coefficients"
.Linfo_string46:
	.asciz	"L_ACF"
.Linfo_string47:
	.asciz	"r"
.Linfo_string48:
	.asciz	"ACF"
.Linfo_string49:
	.asciz	"P"
.Linfo_string50:
	.asciz	"K"
.Linfo_string51:
	.asciz	"temp"
.Linfo_string52:
	.asciz	"i"
.Linfo_string53:
	.asciz	"n"
.Linfo_string54:
	.asciz	"m"
.Linfo_string55:
	.asciz	"ltmp"
.Linfo_string56:
	.asciz	"Transformation_to_Log_Area_Ratios"
.Linfo_string57:
	.asciz	"Quantization_and_coding"
.Linfo_string58:
	.asciz	"LAR"
.Linfo_string59:
	.asciz	"Decoding_of_the_coded_Log_Area_Ratios"
.Linfo_string60:
	.asciz	"LARc"
.Linfo_string61:
	.asciz	"Coefficients_0_12"
.Linfo_string62:
	.asciz	"LARpp_j"
.Linfo_string63:
	.asciz	"Coefficients_13_26"
.Linfo_string64:
	.asciz	"Coefficients_27_39"
.Linfo_string65:
	.asciz	"Coefficients_40_159"
.Linfo_string66:
	.asciz	"Long_term_analysis_filtering"
.Linfo_string67:
	.asciz	"dp"
.Linfo_string68:
	.asciz	"d"
.Linfo_string69:
	.asciz	"k"
.Linfo_string70:
	.asciz	"Weighting_filter"
.Linfo_string71:
	.asciz	"x"
.Linfo_string72:
	.asciz	"L_result"
.Linfo_string73:
	.asciz	"RPE_grid_selection"
.Linfo_string74:
	.asciz	"Mc_out"
.Linfo_string75:
	.asciz	"Mc"
.Linfo_string76:
	.asciz	"EM"
.Linfo_string77:
	.asciz	"L_temp"
.Linfo_string78:
	.asciz	"L_common_0_3"
.Linfo_string79:
	.asciz	"APCM_quantization"
.Linfo_string80:
	.asciz	"xMc"
.Linfo_string81:
	.asciz	"mant_out"
.Linfo_string82:
	.asciz	"exp_out"
.Linfo_string83:
	.asciz	"xmax"
.Linfo_string84:
	.asciz	"exp"
.Linfo_string85:
	.asciz	"itest"
.Linfo_string86:
	.asciz	"xmaxc"
.Linfo_string87:
	.asciz	"mant"
.Linfo_string88:
	.asciz	"temp1"
.Linfo_string89:
	.asciz	"APCM_quantization_xmaxc_to_exp_mant"
.Linfo_string90:
	.asciz	"APCM_inverse_quantization"
.Linfo_string91:
	.asciz	"temp2"
.Linfo_string92:
	.asciz	"temp3"
.Linfo_string93:
	.asciz	"RPE_grid_positioning"
.Linfo_string94:
	.asciz	"xMp"
.Linfo_string95:
	.asciz	"ep"
.Linfo_string96:
	.asciz	"gsm_sub"
.Linfo_string97:
	.asciz	"gsm_encode"
.Linfo_string98:
	.asciz	"gsm_option"
.Linfo_string99:
	.asciz	"Gsm_Coder"
.Linfo_string100:
	.asciz	"Gsm_RPE_Encoding"
.Linfo_string101:
	.asciz	"Gsm_Long_Term_Predictor"
.Linfo_string102:
	.asciz	"Gsm_Short_Term_Analysis_Filter"
.Linfo_string103:
	.asciz	"Gsm_LPC_Analysis"
.Linfo_string104:
	.asciz	"Gsm_Preprocess"
.Linfo_string105:
	.asciz	"gsm_norm"
.Linfo_string106:
	.asciz	"gsm_asl"
.Linfo_string107:
	.asciz	"gsm_asr"
.Linfo_string108:
	.asciz	"gsm_div"
.Linfo_string109:
	.asciz	"create"
.Linfo_string110:
	.asciz	"gsm"
.Linfo_string111:
	.asciz	"encode"
.Linfo_string112:
	.asciz	"main"
.Linfo_string113:
	.asciz	"Autocorrelation"
.Linfo_string114:
	.asciz	"Short_term_analysis_filtering"
.Linfo_string115:
	.asciz	"LARp_to_rp"
.Linfo_string116:
	.asciz	"Calculation_of_the_LTP_parameters"
.Linfo_string117:
	.asciz	"a"
.Linfo_string118:
	.asciz	"b"
.Linfo_string119:
	.asciz	"diff"
.Linfo_string120:
	.asciz	"Nc"
.Linfo_string121:
	.asciz	"bc"
.Linfo_string122:
	.asciz	"xmc"
.Linfo_string123:
	.asciz	"s"
.Linfo_string124:
	.asciz	"source"
.Linfo_string125:
	.asciz	"c"
.Linfo_string126:
	.asciz	"so"
.Linfo_string127:
	.asciz	"S"
.Linfo_string128:
	.asciz	"dpp"
.Linfo_string129:
	.asciz	"opt"
.Linfo_string130:
	.asciz	"val"
.Linfo_string131:
	.asciz	"result"
.Linfo_string132:
	.asciz	"L_s2"
.Linfo_string133:
	.asciz	"SO"
.Linfo_string134:
	.asciz	"utmp"
.Linfo_string135:
	.asciz	"LARp"
.Linfo_string136:
	.asciz	"xM"
.Linfo_string137:
	.asciz	"wt"
.Linfo_string138:
	.asciz	"bc_out"
.Linfo_string139:
	.asciz	"Nc_out"
.Linfo_string140:
	.asciz	"dmax"
.Linfo_string141:
	.asciz	"scal"
.Linfo_string142:
	.asciz	"lambda"
.Linfo_string143:
	.asciz	"L_max"
.Linfo_string144:
	.asciz	"L_power"
.Linfo_string145:
	.asciz	"rp"
.Linfo_string146:
	.asciz	"k_n"
.Linfo_string147:
	.asciz	"di"
.Linfo_string148:
	.asciz	"sav"
.Linfo_string149:
	.asciz	"sp"
.Linfo_string150:
	.asciz	"smax"
.Linfo_string151:
	.asciz	"scalauto"
.Linfo_string152:
	.asciz	"num"
.Linfo_string153:
	.asciz	"denum"
.Linfo_string154:
	.asciz	"L_num"
.Linfo_string155:
	.asciz	"L_denum"
.Linfo_string156:
	.asciz	"div"
.Linfo_string157:
	.asciz	"unsigned int"
	.section	.debug_info,"",@progbits
.L.debug_info_begin0:
	.long	5018                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.Lsection_abbrev        # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x1393 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x16 DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	64                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	366                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	pcmdata
	.byte	3                       # Abbrev [3] 0x40:0xd DW_TAG_array_type
	.long	77                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x45:0x7 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.short	3200                    # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x4d:0xc DW_TAG_typedef
	.long	89                      # DW_AT_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
	.byte	6                       # Abbrev [6] 0x59:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	2                       # DW_AT_byte_size
	.byte	7                       # Abbrev [7] 0x60:0x7 DW_TAG_base_type
	.long	.Linfo_string6          # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x67:0x16 DW_TAG_variable
	.long	.Linfo_string7          # DW_AT_name
	.long	125                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	769                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsmdata
	.byte	3                       # Abbrev [3] 0x7d:0xd DW_TAG_array_type
	.long	138                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x82:0x7 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.short	660                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x8a:0xc DW_TAG_typedef
	.long	150                     # DW_AT_type
	.long	.Linfo_string9          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	6                       # Abbrev [6] 0x96:0x7 DW_TAG_base_type
	.long	.Linfo_string8          # DW_AT_name
	.byte	8                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	8                       # Abbrev [8] 0x9d:0x115 DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string99         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1140                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	9                       # Abbrev [9] 0xb3:0x16 DW_TAG_variable
	.long	.Linfo_string10         # DW_AT_name
	.long	434                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.short	1175                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	Gsm_Coder.e
	.byte	10                      # Abbrev [10] 0xc9:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc6            # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1142                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xd9:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc7            # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1144                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xe9:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc8            # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1156                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xf9:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc9            # DW_AT_location
	.long	.Linfo_string120        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1164                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x109:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc10           # DW_AT_location
	.long	.Linfo_string121        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1165                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x119:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc11           # DW_AT_location
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1166                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x129:0x10 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300|"
	.long	.Linfo_string86         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1167                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x139:0x10 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\310|"
	.long	.Linfo_string80         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1168                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x149:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220}"
	.long	.Linfo_string126        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1177                    # DW_AT_decl_line
	.long	4961                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x159:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200}"
	.long	.Linfo_string128        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1173                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x169:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200}"
	.long	.Linfo_string67         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1172                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x179:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1171                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x186:0x2b DW_TAG_lexical_block
	.quad	.Ltmp100                # DW_AT_low_pc
	.long	.Ltmp105-.Ltmp100       # DW_AT_high_pc
	.byte	13                      # Abbrev [13] 0x193:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1202                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x1a0:0x10 DW_TAG_variable
	.long	.Ldebug_loc12           # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1203                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x1b2:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1b7:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	50                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1be:0xb DW_TAG_typedef
	.long	89                      # DW_AT_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.byte	2                       # Abbrev [2] 0x1c9:0x16 DW_TAG_variable
	.long	.Linfo_string12         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2227                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_A
	.byte	3                       # Abbrev [3] 0x1df:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1e4:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x1eb:0x16 DW_TAG_variable
	.long	.Linfo_string13         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2228                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_B
	.byte	2                       # Abbrev [2] 0x201:0x16 DW_TAG_variable
	.long	.Linfo_string14         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2229                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_MIC
	.byte	2                       # Abbrev [2] 0x217:0x16 DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2230                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_MAC
	.byte	2                       # Abbrev [2] 0x22d:0x16 DW_TAG_variable
	.long	.Linfo_string16         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2235                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_INVA
	.byte	2                       # Abbrev [2] 0x243:0x16 DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.long	601                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2241                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_DLB
	.byte	3                       # Abbrev [3] 0x259:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x25e:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x265:0x16 DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.long	601                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2247                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_QLB
	.byte	2                       # Abbrev [2] 0x27b:0x16 DW_TAG_variable
	.long	.Linfo_string19         # DW_AT_name
	.long	657                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2253                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_H
	.byte	3                       # Abbrev [3] 0x291:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x296:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	11                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	2                       # Abbrev [2] 0x29d:0x16 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2259                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_NRFAC
	.byte	2                       # Abbrev [2] 0x2b3:0x16 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	479                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	2265                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsm_FAC
	.byte	2                       # Abbrev [2] 0x2c9:0x16 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	735                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	3006                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	f_fast
	.byte	6                       # Abbrev [6] 0x2df:0x7 DW_TAG_base_type
	.long	.Linfo_string23         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x2e6:0x16 DW_TAG_variable
	.long	.Linfo_string24         # DW_AT_name
	.long	735                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	3007                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	f_verbose
	.byte	2                       # Abbrev [2] 0x2fc:0x16 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	786                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.short	3009                    # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	gsmstate
	.byte	18                      # Abbrev [18] 0x312:0xa5 DW_TAG_structure_type
	.long	.Linfo_string41         # DW_AT_name
	.short	656                     # DW_AT_byte_size
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x31b:0xc DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	951                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x327:0xd DW_TAG_member
	.long	.Linfo_string27         # DW_AT_name
	.long	446                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.short	560                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x334:0xd DW_TAG_member
	.long	.Linfo_string28         # DW_AT_name
	.long	964                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.short	568                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x341:0xd DW_TAG_member
	.long	.Linfo_string31         # DW_AT_name
	.long	735                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.short	576                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x34e:0xd DW_TAG_member
	.long	.Linfo_string32         # DW_AT_name
	.long	479                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.short	580                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x35b:0xd DW_TAG_member
	.long	.Linfo_string33         # DW_AT_name
	.long	982                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	90                      # DW_AT_decl_line
	.short	596                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x368:0xd DW_TAG_member
	.long	.Linfo_string34         # DW_AT_name
	.long	446                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	91                      # DW_AT_decl_line
	.short	628                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x375:0xd DW_TAG_member
	.long	.Linfo_string35         # DW_AT_name
	.long	446                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.short	630                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x382:0xd DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	1000                    # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.short	632                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x38f:0xd DW_TAG_member
	.long	.Linfo_string37         # DW_AT_name
	.long	446                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.short	650                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x39c:0xd DW_TAG_member
	.long	.Linfo_string38         # DW_AT_name
	.long	1012                    # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	97                      # DW_AT_decl_line
	.short	652                     # DW_AT_data_member_location
	.byte	20                      # Abbrev [20] 0x3a9:0xd DW_TAG_member
	.long	.Linfo_string40         # DW_AT_name
	.long	1012                    # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.short	653                     # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x3b7:0xd DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x3bc:0x7 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.short	280                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3c4:0xb DW_TAG_typedef
	.long	975                     # DW_AT_type
	.long	.Linfo_string30         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.byte	6                       # Abbrev [6] 0x3cf:0x7 DW_TAG_base_type
	.long	.Linfo_string29         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0x3d6:0x12 DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x3db:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	16                      # Abbrev [16] 0x3e1:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x3e8:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x3ed:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	9                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x3f4:0x7 DW_TAG_base_type
	.long	.Linfo_string39         # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	9                       # Abbrev [9] 0x3fb:0x16 DW_TAG_variable
	.long	.Linfo_string42         # DW_AT_name
	.long	1041                    # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.short	887                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	bitoff
	.byte	3                       # Abbrev [3] 0x411:0xd DW_TAG_array_type
	.long	150                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x416:0x7 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.short	256                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x41e:0xb DW_TAG_typedef
	.long	1065                    # DW_AT_type
	.long	.Linfo_string44         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
	.byte	6                       # Abbrev [6] 0x429:0x7 DW_TAG_base_type
	.long	.Linfo_string43         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	21                      # Abbrev [21] 0x430:0x5 DW_TAG_pointer_type
	.long	1012                    # DW_AT_type
	.byte	22                      # Abbrev [22] 0x435:0x4b DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string96         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	817                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	446                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x44f:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string117        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	817                     # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x45f:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string118        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	817                     # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x46f:0x10 DW_TAG_variable
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string119        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	819                     # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x480:0xa6 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string97         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	909                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x496:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc3            # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	909                     # DW_AT_decl_line
	.long	4922                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x4a6:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc4            # DW_AT_location
	.long	.Linfo_string124        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	909                     # DW_AT_decl_line
	.long	4951                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x4b6:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc5            # DW_AT_location
	.long	.Linfo_string125        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	909                     # DW_AT_decl_line
	.long	4956                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x4c6:0xf DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	64
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	479                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x4d5:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\270\177"
	.long	.Linfo_string120        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	601                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x4e5:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\177"
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	601                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x4f5:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\250\177"
	.long	.Linfo_string121        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	601                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x505:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\177"
	.long	.Linfo_string86         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	601                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x515:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260~"
	.long	.Linfo_string122        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	911                     # DW_AT_decl_line
	.long	4939                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x526:0x58 DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string98         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1107                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	735                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x540:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc13           # DW_AT_location
	.long	.Linfo_string47         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1107                    # DW_AT_decl_line
	.long	4922                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x550:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc14           # DW_AT_location
	.long	.Linfo_string129        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1107                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x560:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc15           # DW_AT_location
	.long	.Linfo_string130        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1107                    # DW_AT_decl_line
	.long	4973                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x570:0xd DW_TAG_variable
	.byte	127                     # DW_AT_const_value
	.long	.Linfo_string131        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1109                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x57e:0xd5 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string104        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2928                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x594:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc16           # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2929                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x5a4:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc17           # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2930                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x5b4:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc18           # DW_AT_location
	.long	.Linfo_string126        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2931                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	15                      # Abbrev [15] 0x5c4:0x10 DW_TAG_variable
	.long	.Ldebug_loc19           # DW_AT_location
	.long	.Linfo_string27         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2934                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x5d4:0x10 DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string28         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2935                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x5e4:0x10 DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string31         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2936                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x5f4:0xe DW_TAG_variable
	.ascii	"\240\001"              # DW_AT_const_value
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2949                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x602:0x10 DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string132        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2939                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x612:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\177"
	.long	.Linfo_string133        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2944                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x622:0x10 DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string77         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2941                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x632:0x10 DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string134        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2947                    # DW_AT_decl_line
	.long	1054                    # DW_AT_type
	.byte	15                      # Abbrev [15] 0x642:0x10 DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2946                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x653:0x82 DW_TAG_subprogram
	.long	.Linfo_string45         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2744                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x65c:0xc DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2745                    # DW_AT_decl_line
	.long	1749                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x668:0xc DW_TAG_formal_parameter
	.long	.Linfo_string47         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2746                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x674:0xc DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2752                    # DW_AT_decl_line
	.long	1000                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x680:0xc DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2753                    # DW_AT_decl_line
	.long	1000                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x68c:0xc DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2754                    # DW_AT_decl_line
	.long	1000                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x698:0xc DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2750                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6a4:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2749                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6b0:0xc DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2749                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6bc:0xc DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2749                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6c8:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2751                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x6d5:0x5 DW_TAG_pointer_type
	.long	964                     # DW_AT_type
	.byte	21                      # Abbrev [21] 0x6da:0x5 DW_TAG_pointer_type
	.long	446                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x6df:0x2e DW_TAG_subprogram
	.long	.Linfo_string56         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2816                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x6e8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string47         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2817                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x6f4:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2828                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x700:0xc DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2827                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x70d:0x22 DW_TAG_subprogram
	.long	.Linfo_string57         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2854                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x716:0xc DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2855                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x722:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2859                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x72f:0xfb DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string103        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2893                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x745:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2894                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x755:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2895                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x765:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2896                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x775:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260~"
	.long	.Linfo_string46         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2898                    # DW_AT_decl_line
	.long	4978                    # DW_AT_type
	.byte	26                      # Abbrev [26] 0x785:0x60 DW_TAG_inlined_subroutine
	.long	1619                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2905                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x791:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc29           # DW_AT_location
	.long	1628                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0x79a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc32           # DW_AT_location
	.long	1640                    # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x7a3:0x8 DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	64
	.long	1652                    # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x7ab:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\177"
	.long	1664                    # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x7b4:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200\177"
	.long	1676                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x7bd:0x9 DW_TAG_variable
	.long	.Ldebug_loc30           # DW_AT_location
	.long	1688                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x7c6:0x9 DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	1700                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x7cf:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	1712                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x7d5:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	1724                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x7db:0x9 DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	1736                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x7e5:0x25 DW_TAG_inlined_subroutine
	.long	1759                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges1         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2906                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x7f1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc34           # DW_AT_location
	.long	1768                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x7fa:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	1780                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x800:0x9 DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	1792                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x80a:0x1f DW_TAG_inlined_subroutine
	.long	1805                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges2         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2907                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x816:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc36           # DW_AT_location
	.long	1814                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x81f:0x9 DW_TAG_variable
	.long	.Ldebug_loc37           # DW_AT_location
	.long	1826                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x82a:0x2e DW_TAG_subprogram
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2274                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x833:0xc DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2275                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x83f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2276                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x84b:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2279                    # DW_AT_decl_line
	.long	975                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x858:0x2e DW_TAG_subprogram
	.long	.Linfo_string61         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2341                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x861:0xc DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2343                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x86d:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2346                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x879:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2347                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x886:0x2e DW_TAG_subprogram
	.long	.Linfo_string63         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2356                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x88f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2358                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x89b:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2361                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8a7:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2362                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x8b4:0x2e DW_TAG_subprogram
	.long	.Linfo_string64         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2369                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x8bd:0xc DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2371                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8c9:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2374                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8d5:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2375                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x8e2:0x22 DW_TAG_subprogram
	.long	.Linfo_string65         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2385                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x8eb:0xc DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2386                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0x8f7:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2389                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x904:0x119 DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2530                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x91a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc38           # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2532                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x92a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc39           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2534                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x93a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2535                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x94a:0xf DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	64
	.long	.Linfo_string135        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2541                    # DW_AT_decl_line
	.long	479                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x959:0x10 DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string62         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2538                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	26                      # Abbrev [26] 0x969:0x28 DW_TAG_inlined_subroutine
	.long	2090                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges3         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2553                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x975:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc41           # DW_AT_location
	.long	2099                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0x97e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc44           # DW_AT_location
	.long	2111                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x987:0x9 DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	2123                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x991:0x25 DW_TAG_inlined_subroutine
	.long	2136                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges4         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2555                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x99d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc45           # DW_AT_location
	.long	2145                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x9a6:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	2157                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x9ac:0x9 DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	2169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x9b6:0x25 DW_TAG_inlined_subroutine
	.long	2182                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges5         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2559                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x9c2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc46           # DW_AT_location
	.long	2191                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x9cb:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	2203                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x9d1:0x9 DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	2215                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x9db:0x25 DW_TAG_inlined_subroutine
	.long	2228                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges6         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2563                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0x9e7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc47           # DW_AT_location
	.long	2237                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x9f0:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	2249                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x9f6:0x9 DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	2261                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0xa00:0x1c DW_TAG_inlined_subroutine
	.long	2274                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges7         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2567                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xa0c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc48           # DW_AT_location
	.long	2283                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xa15:0x6 DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	2295                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xa1d:0x3a DW_TAG_subprogram
	.long	.Linfo_string66         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2164                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xa26:0xc DW_TAG_formal_parameter
	.long	.Linfo_string67         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2167                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xa32:0xc DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2168                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa3e:0xc DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2179                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xa4a:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2180                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0xa57:0xb4 DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2198                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0xa6d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc52           # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2200                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xa7d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc53           # DW_AT_location
	.long	.Linfo_string68         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2202                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xa8d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc54           # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2203                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xa9d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc55           # DW_AT_location
	.long	.Linfo_string10         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2205                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xaad:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc56           # DW_AT_location
	.long	.Linfo_string128        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2206                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xabd:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc57           # DW_AT_location
	.long	.Linfo_string120        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2207                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0xacd:0xf DW_TAG_formal_parameter
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	16
	.long	.Linfo_string121        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2208                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	26                      # Abbrev [26] 0xadc:0x2e DW_TAG_inlined_subroutine
	.long	2589                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges8         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	2219                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xae8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc58           # DW_AT_location
	.long	2598                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xaf1:0x9 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\270\177"
	.long	2610                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xafa:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	2622                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xb00:0x9 DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	2634                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xb0b:0x2e DW_TAG_subprogram
	.long	.Linfo_string70         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1224                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xb14:0xc DW_TAG_formal_parameter
	.long	.Linfo_string71         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1226                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb20:0xc DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1238                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb2c:0xc DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1237                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xb39:0x6a DW_TAG_subprogram
	.long	.Linfo_string73         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1318                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xb42:0xc DW_TAG_formal_parameter
	.long	.Linfo_string71         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1319                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xb4e:0xc DW_TAG_formal_parameter
	.long	.Linfo_string74         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1321                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb5a:0xc DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1330                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb66:0xc DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1332                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb72:0xc DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1331                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb7e:0xc DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1330                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb8a:0xc DW_TAG_variable
	.long	.Linfo_string78         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1334                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xb96:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1329                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xba3:0x8e DW_TAG_subprogram
	.long	.Linfo_string79         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1457                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xbac:0xc DW_TAG_formal_parameter
	.long	.Linfo_string80         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1460                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xbb8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string81         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1461                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xbc4:0xc DW_TAG_formal_parameter
	.long	.Linfo_string82         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1462                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xbd0:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1466                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xbdc:0xc DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1468                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xbe8:0xc DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1468                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xbf4:0xc DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1469                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc00:0xc DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1466                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc0c:0xc DW_TAG_variable
	.long	.Linfo_string86         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1468                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc18:0xc DW_TAG_variable
	.long	.Linfo_string87         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1469                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc24:0xc DW_TAG_variable
	.long	.Linfo_string88         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1468                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xc31:0x3a DW_TAG_subprogram
	.long	.Linfo_string89         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1426                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xc3a:0xc DW_TAG_formal_parameter
	.long	.Linfo_string82         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1428                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc46:0xc DW_TAG_formal_parameter
	.long	.Linfo_string81         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1429                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc52:0xc DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1431                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc5e:0xc DW_TAG_variable
	.long	.Linfo_string87         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1431                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xc6b:0x46 DW_TAG_subprogram
	.long	.Linfo_string90         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1549                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xc74:0xc DW_TAG_formal_parameter
	.long	.Linfo_string80         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1550                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc80:0xc DW_TAG_variable
	.long	.Linfo_string91         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1561                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc8c:0xc DW_TAG_variable
	.long	.Linfo_string92         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1561                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xc98:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1560                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0xca4:0xc DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1562                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xcb1:0x2e DW_TAG_subprogram
	.long	.Linfo_string93         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1583                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xcba:0xc DW_TAG_formal_parameter
	.long	.Linfo_string94         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1585                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xcc6:0xc DW_TAG_formal_parameter
	.long	.Linfo_string95         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1586                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	25                      # Abbrev [25] 0xcd2:0xc DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1596                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0xcdf:0x225 DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string100        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1673                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0xcf5:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc60           # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1675                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xd05:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc61           # DW_AT_location
	.long	.Linfo_string10         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1677                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xd15:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc62           # DW_AT_location
	.long	.Linfo_string86         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1678                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xd25:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc63           # DW_AT_location
	.long	.Linfo_string75         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1679                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xd35:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc64           # DW_AT_location
	.long	.Linfo_string80         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1680                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0xd45:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200\177"
	.long	.Linfo_string71         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1682                    # DW_AT_decl_line
	.long	4990                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0xd55:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340~"
	.long	.Linfo_string136        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1683                    # DW_AT_decl_line
	.long	5002                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0xd65:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300~"
	.long	.Linfo_string94         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1683                    # DW_AT_decl_line
	.long	5002                    # DW_AT_type
	.byte	15                      # Abbrev [15] 0xd75:0x10 DW_TAG_variable
	.long	.Ldebug_loc83           # DW_AT_location
	.long	.Linfo_string87         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1684                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xd85:0x10 DW_TAG_variable
	.long	.Ldebug_loc85           # DW_AT_location
	.long	.Linfo_string84         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1684                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0xd95:0x25 DW_TAG_inlined_subroutine
	.long	2827                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges9         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1686                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xda1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc71           # DW_AT_location
	.long	2836                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xdaa:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	2848                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xdb0:0x9 DW_TAG_variable
	.long	.Ldebug_loc65           # DW_AT_location
	.long	2860                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0xdba:0x52 DW_TAG_inlined_subroutine
	.long	2873                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges10        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1687                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xdc6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc72           # DW_AT_location
	.long	2882                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xdcf:0x9 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\370}"
	.long	2894                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xdd8:0x9 DW_TAG_variable
	.long	.Ldebug_loc66           # DW_AT_location
	.long	2906                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xde1:0x9 DW_TAG_variable
	.long	.Ldebug_loc67           # DW_AT_location
	.long	2918                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xdea:0x9 DW_TAG_variable
	.long	.Ldebug_loc68           # DW_AT_location
	.long	2930                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xdf3:0x9 DW_TAG_variable
	.long	.Ldebug_loc69           # DW_AT_location
	.long	2942                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xdfc:0x9 DW_TAG_variable
	.long	.Ldebug_loc70           # DW_AT_location
	.long	2954                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xe05:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	2966                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0xe0c:0x98 DW_TAG_inlined_subroutine
	.long	2979                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges11        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1689                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xe18:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc82           # DW_AT_location
	.long	2988                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0xe21:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc84           # DW_AT_location
	.long	3000                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0xe2a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc86           # DW_AT_location
	.long	3012                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xe33:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	3024                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xe39:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	3036                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe3f:0x9 DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	3048                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe48:0x9 DW_TAG_variable
	.long	.Ldebug_loc74           # DW_AT_location
	.long	3060                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xe51:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	3072                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe57:0x9 DW_TAG_variable
	.long	.Ldebug_loc76           # DW_AT_location
	.long	3084                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe60:0x9 DW_TAG_variable
	.long	.Ldebug_loc79           # DW_AT_location
	.long	3096                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe69:0x9 DW_TAG_variable
	.long	.Ldebug_loc81           # DW_AT_location
	.long	3108                    # DW_AT_abstract_origin
	.byte	26                      # Abbrev [26] 0xe72:0x31 DW_TAG_inlined_subroutine
	.long	3121                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges12        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1509                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xe7e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc78           # DW_AT_location
	.long	3130                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0xe87:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc80           # DW_AT_location
	.long	3142                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe90:0x9 DW_TAG_variable
	.long	.Ldebug_loc75           # DW_AT_location
	.long	3154                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xe99:0x9 DW_TAG_variable
	.long	.Ldebug_loc77           # DW_AT_location
	.long	3166                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0xea4:0x37 DW_TAG_inlined_subroutine
	.long	3179                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges13        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1690                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xeb0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc89           # DW_AT_location
	.long	3188                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xeb9:0x9 DW_TAG_variable
	.long	.Ldebug_loc87           # DW_AT_location
	.long	3200                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xec2:0x9 DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	3212                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xecb:0x6 DW_TAG_variable
	.byte	13                      # DW_AT_const_value
	.long	3224                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xed1:0x9 DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	3236                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0xedb:0x28 DW_TAG_inlined_subroutine
	.long	3249                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges14        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	1692                    # DW_AT_call_line
	.byte	27                      # Abbrev [27] 0xee7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc93           # DW_AT_location
	.long	3258                    # DW_AT_abstract_origin
	.byte	27                      # Abbrev [27] 0xef0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc92           # DW_AT_location
	.long	3270                    # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0xef9:0x9 DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	3282                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0xf04:0x11c DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string116        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1737                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	10                      # Abbrev [10] 0xf1a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc94           # DW_AT_location
	.long	.Linfo_string68         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1738                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xf2a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1739                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xf3a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.Linfo_string138        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1740                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0xf4a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc97           # DW_AT_location
	.long	.Linfo_string139        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1741                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0xf5a:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\200\177"
	.long	.Linfo_string137        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1746                    # DW_AT_decl_line
	.long	4990                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0xf6a:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1744                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0xf77:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string140        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1749                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xf84:0x10 DW_TAG_variable
	.long	.Ldebug_loc98           # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1750                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0xf94:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string141        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1749                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0xfa1:0xd DW_TAG_variable
	.byte	40                      # DW_AT_const_value
	.long	.Linfo_string142        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1744                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0xfae:0xd DW_TAG_variable
	.byte	40                      # DW_AT_const_value
	.long	.Linfo_string120        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1745                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xfbb:0x10 DW_TAG_variable
	.long	.Ldebug_loc99           # DW_AT_location
	.long	.Linfo_string143        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1748                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xfcb:0x10 DW_TAG_variable
	.long	.Ldebug_loc101          # DW_AT_location
	.long	.Linfo_string144        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1748                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0xfdb:0x10 DW_TAG_variable
	.long	.Ldebug_loc102          # DW_AT_location
	.long	.Linfo_string121        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1745                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0xfeb:0x16 DW_TAG_lexical_block
	.long	.Ldebug_ranges15        # DW_AT_ranges
	.byte	15                      # Abbrev [15] 0xff0:0x10 DW_TAG_variable
	.long	.Ldebug_loc100          # DW_AT_location
	.long	.Linfo_string72         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1794                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x1001:0x1e DW_TAG_lexical_block
	.quad	.Ltmp1911               # DW_AT_low_pc
	.long	.Ltmp1914-.Ltmp1911     # DW_AT_high_pc
	.byte	12                      # Abbrev [12] 0x100e:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\360~"
	.long	.Linfo_string77         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	1839                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x1020:0x54 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string115        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2399                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	10                      # Abbrev [10] 0x1036:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc103          # DW_AT_location
	.long	.Linfo_string135        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2400                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x1046:0xd DW_TAG_variable
	.byte	1                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2407                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x1053:0x10 DW_TAG_variable
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2408                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x1063:0x10 DW_TAG_variable
	.long	.Ldebug_loc105          # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2409                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x1074:0xa4 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string114        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2439                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	10                      # Abbrev [10] 0x108a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc106          # DW_AT_location
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2440                    # DW_AT_decl_line
	.long	4934                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x109a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc107          # DW_AT_location
	.long	.Linfo_string145        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2441                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x10aa:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc108          # DW_AT_location
	.long	.Linfo_string146        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2442                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x10ba:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc109          # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2443                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	15                      # Abbrev [15] 0x10ca:0x10 DW_TAG_variable
	.long	.Ldebug_loc110          # DW_AT_location
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2460                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x10da:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2457                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x10e7:0x10 DW_TAG_variable
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string147        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2458                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x10f7:0x10 DW_TAG_variable
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2458                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x1107:0x10 DW_TAG_variable
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2459                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x1118:0x9f DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string113        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2582                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	10                      # Abbrev [10] 0x112e:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc114          # DW_AT_location
	.long	.Linfo_string123        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2583                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	10                      # Abbrev [10] 0x113e:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc115          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2584                    # DW_AT_decl_line
	.long	1749                    # DW_AT_type
	.byte	15                      # Abbrev [15] 0x114e:0x10 DW_TAG_variable
	.long	.Ldebug_loc117          # DW_AT_location
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2590                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x115e:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string150        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2592                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x116b:0x10 DW_TAG_variable
	.long	.Ldebug_loc118          # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2592                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x117b:0x10 DW_TAG_variable
	.long	.Ldebug_loc119          # DW_AT_location
	.long	.Linfo_string151        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2592                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x118b:0xd DW_TAG_variable
	.byte	8                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2590                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x1198:0x1e DW_TAG_lexical_block
	.quad	.Ltmp2087               # DW_AT_low_pc
	.long	.Ltmp2150-.Ltmp2087     # DW_AT_high_pc
	.byte	15                      # Abbrev [15] 0x11a5:0x10 DW_TAG_variable
	.long	.Ldebug_loc116          # DW_AT_location
	.long	.Linfo_string149        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	2664                    # DW_AT_decl_line
	.long	1754                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x11b7:0x2b DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string105        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3011                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	446                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x11d1:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string117        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3011                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x11e2:0x3b DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string106        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3045                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	446                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x11fc:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string117        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3045                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x120c:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc122          # DW_AT_location
	.long	.Linfo_string53         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3045                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x121d:0x3b DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string107        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3076                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	446                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x1237:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc123          # DW_AT_location
	.long	.Linfo_string117        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3076                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x1247:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc124          # DW_AT_location
	.long	.Linfo_string53         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3076                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x1258:0x78 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string108        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3099                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	446                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # Abbrev [10] 0x1272:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc125          # DW_AT_location
	.long	.Linfo_string152        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3099                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	10                      # Abbrev [10] 0x1282:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc126          # DW_AT_location
	.long	.Linfo_string153        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3099                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x1292:0x10 DW_TAG_variable
	.long	.Ldebug_loc127          # DW_AT_location
	.long	.Linfo_string154        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3101                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x12a2:0x10 DW_TAG_variable
	.long	.Ldebug_loc128          # DW_AT_location
	.long	.Linfo_string155        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3102                    # DW_AT_decl_line
	.long	964                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x12b2:0xd DW_TAG_variable
	.byte	15                      # DW_AT_const_value
	.long	.Linfo_string69         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3104                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x12bf:0x10 DW_TAG_variable
	.long	.Ldebug_loc129          # DW_AT_location
	.long	.Linfo_string156        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3103                    # DW_AT_decl_line
	.long	446                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x12d0:0x28 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string109        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3130                    # DW_AT_decl_line
	.long	4922                    # DW_AT_type
                                        # DW_AT_external
	.byte	13                      # Abbrev [13] 0x12ea:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3132                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x12f8:0x28 DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string111        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3146                    # DW_AT_decl_line
	.long	735                     # DW_AT_type
                                        # DW_AT_external
	.byte	35                      # Abbrev [35] 0x1312:0xd DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string52         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3149                    # DW_AT_decl_line
	.long	5014                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1320:0x1a DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
	.long	.Linfo_string112        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	3163                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	735                     # DW_AT_type
                                        # DW_AT_external
	.byte	5                       # Abbrev [5] 0x133a:0xc DW_TAG_typedef
	.long	4934                    # DW_AT_type
	.long	.Linfo_string110        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x1346:0x5 DW_TAG_pointer_type
	.long	786                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x134b:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1350:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	52                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x1357:0x5 DW_TAG_pointer_type
	.long	77                      # DW_AT_type
	.byte	21                      # Abbrev [21] 0x135c:0x5 DW_TAG_pointer_type
	.long	138                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x1361:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1366:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	160                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x136d:0x5 DW_TAG_pointer_type
	.long	735                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x1372:0xc DW_TAG_array_type
	.long	964                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1377:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	9                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x137e:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1383:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	40                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	3                       # Abbrev [3] 0x138a:0xc DW_TAG_array_type
	.long	446                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x138f:0x6 DW_TAG_subrange_type
	.long	96                      # DW_AT_type
	.byte	13                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x1396:0x7 DW_TAG_base_type
	.long	.Linfo_string157        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	0                       # End Of Children Mark
	.section	.debug_abbrev,"",@progbits
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	5                       # DW_FORM_data2
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	15                      # DW_FORM_udata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp205-.Lfunc_begin0
	.quad	.Ltmp207-.Lfunc_begin0
	.quad	.Ltmp208-.Lfunc_begin0
	.quad	.Ltmp209-.Lfunc_begin0
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp213-.Lfunc_begin0
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp216-.Lfunc_begin0
	.quad	.Ltmp217-.Lfunc_begin0
	.quad	.Ltmp219-.Lfunc_begin0
	.quad	.Ltmp221-.Lfunc_begin0
	.quad	.Ltmp222-.Lfunc_begin0
	.quad	.Ltmp223-.Lfunc_begin0
	.quad	.Ltmp224-.Lfunc_begin0
	.quad	.Ltmp225-.Lfunc_begin0
	.quad	.Ltmp226-.Lfunc_begin0
	.quad	.Ltmp231-.Lfunc_begin0
	.quad	.Ltmp232-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.quad	.Ltmp234-.Lfunc_begin0
	.quad	.Ltmp237-.Lfunc_begin0
	.quad	.Ltmp238-.Lfunc_begin0
	.quad	.Ltmp243-.Lfunc_begin0
	.quad	.Ltmp244-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.quad	.Ltmp246-.Lfunc_begin0
	.quad	.Ltmp247-.Lfunc_begin0
	.quad	.Ltmp248-.Lfunc_begin0
	.quad	.Ltmp253-.Lfunc_begin0
	.quad	.Ltmp254-.Lfunc_begin0
	.quad	.Ltmp257-.Lfunc_begin0
	.quad	.Ltmp258-.Lfunc_begin0
	.quad	.Ltmp260-.Lfunc_begin0
	.quad	.Ltmp261-.Lfunc_begin0
	.quad	.Ltmp262-.Lfunc_begin0
	.quad	.Ltmp264-.Lfunc_begin0
	.quad	.Ltmp265-.Lfunc_begin0
	.quad	.Ltmp266-.Lfunc_begin0
	.quad	.Ltmp269-.Lfunc_begin0
	.quad	.Ltmp270-.Lfunc_begin0
	.quad	.Ltmp271-.Lfunc_begin0
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Ltmp275-.Lfunc_begin0
	.quad	.Ltmp277-.Lfunc_begin0
	.quad	.Ltmp280-.Lfunc_begin0
	.quad	.Ltmp281-.Lfunc_begin0
	.quad	.Ltmp282-.Lfunc_begin0
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Ltmp285-.Lfunc_begin0
	.quad	.Ltmp286-.Lfunc_begin0
	.quad	.Ltmp287-.Lfunc_begin0
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp289-.Lfunc_begin0
	.quad	.Ltmp290-.Lfunc_begin0
	.quad	.Ltmp291-.Lfunc_begin0
	.quad	.Ltmp292-.Lfunc_begin0
	.quad	.Ltmp293-.Lfunc_begin0
	.quad	.Ltmp294-.Lfunc_begin0
	.quad	.Ltmp296-.Lfunc_begin0
	.quad	.Ltmp297-.Lfunc_begin0
	.quad	.Ltmp298-.Lfunc_begin0
	.quad	.Ltmp299-.Lfunc_begin0
	.quad	.Ltmp302-.Lfunc_begin0
	.quad	.Ltmp304-.Lfunc_begin0
	.quad	.Ltmp306-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.quad	.Ltmp308-.Lfunc_begin0
	.quad	.Ltmp309-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp311-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.quad	.Ltmp314-.Lfunc_begin0
	.quad	.Ltmp315-.Lfunc_begin0
	.quad	.Ltmp316-.Lfunc_begin0
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp320-.Lfunc_begin0
	.quad	.Ltmp323-.Lfunc_begin0
	.quad	.Ltmp324-.Lfunc_begin0
	.quad	.Ltmp325-.Lfunc_begin0
	.quad	.Ltmp327-.Lfunc_begin0
	.quad	.Ltmp328-.Lfunc_begin0
	.quad	.Ltmp329-.Lfunc_begin0
	.quad	.Ltmp332-.Lfunc_begin0
	.quad	.Ltmp334-.Lfunc_begin0
	.quad	.Ltmp336-.Lfunc_begin0
	.quad	.Ltmp337-.Lfunc_begin0
	.quad	.Ltmp338-.Lfunc_begin0
	.quad	.Ltmp339-.Lfunc_begin0
	.quad	.Ltmp340-.Lfunc_begin0
	.quad	.Ltmp342-.Lfunc_begin0
	.quad	.Ltmp343-.Lfunc_begin0
	.quad	.Ltmp344-.Lfunc_begin0
	.quad	.Ltmp346-.Lfunc_begin0
	.quad	.Ltmp348-.Lfunc_begin0
	.quad	.Ltmp351-.Lfunc_begin0
	.quad	.Ltmp352-.Lfunc_begin0
	.quad	.Ltmp353-.Lfunc_begin0
	.quad	.Ltmp354-.Lfunc_begin0
	.quad	.Ltmp355-.Lfunc_begin0
	.quad	.Ltmp356-.Lfunc_begin0
	.quad	.Ltmp357-.Lfunc_begin0
	.quad	.Ltmp359-.Lfunc_begin0
	.quad	.Ltmp360-.Lfunc_begin0
	.quad	.Ltmp361-.Lfunc_begin0
	.quad	.Ltmp363-.Lfunc_begin0
	.quad	.Ltmp365-.Lfunc_begin0
	.quad	.Ltmp373-.Lfunc_begin0
	.quad	.Ltmp375-.Lfunc_begin0
	.quad	.Ltmp378-.Lfunc_begin0
	.quad	.Ltmp379-.Lfunc_begin0
	.quad	.Ltmp387-.Lfunc_begin0
	.quad	.Ltmp392-.Lfunc_begin0
	.quad	.Ltmp395-.Lfunc_begin0
	.quad	.Ltmp396-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp408-.Lfunc_begin0
	.quad	.Ltmp409-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.quad	.Ltmp413-.Lfunc_begin0
	.quad	.Ltmp415-.Lfunc_begin0
	.quad	.Ltmp418-.Lfunc_begin0
	.quad	.Ltmp419-.Lfunc_begin0
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp422-.Lfunc_begin0
	.quad	.Ltmp423-.Lfunc_begin0
	.quad	.Ltmp424-.Lfunc_begin0
	.quad	.Ltmp425-.Lfunc_begin0
	.quad	.Ltmp428-.Lfunc_begin0
	.quad	.Ltmp430-.Lfunc_begin0
	.quad	.Ltmp433-.Lfunc_begin0
	.quad	.Ltmp437-.Lfunc_begin0
	.quad	.Ltmp440-.Lfunc_begin0
	.quad	.Ltmp441-.Lfunc_begin0
	.quad	.Ltmp443-.Lfunc_begin0
	.quad	.Ltmp445-.Lfunc_begin0
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	.Ltmp450-.Lfunc_begin0
	.quad	.Ltmp454-.Lfunc_begin0
	.quad	.Ltmp456-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp459-.Lfunc_begin0
	.quad	.Ltmp462-.Lfunc_begin0
	.quad	.Ltmp463-.Lfunc_begin0
	.quad	.Ltmp464-.Lfunc_begin0
	.quad	.Ltmp466-.Lfunc_begin0
	.quad	.Ltmp468-.Lfunc_begin0
	.quad	.Ltmp471-.Lfunc_begin0
	.quad	.Ltmp472-.Lfunc_begin0
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.quad	.Ltmp477-.Lfunc_begin0
	.quad	.Ltmp478-.Lfunc_begin0
	.quad	.Ltmp479-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.quad	.Ltmp482-.Lfunc_begin0
	.quad	.Ltmp483-.Lfunc_begin0
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp488-.Lfunc_begin0
	.quad	.Ltmp490-.Lfunc_begin0
	.quad	.Ltmp491-.Lfunc_begin0
	.quad	.Ltmp492-.Lfunc_begin0
	.quad	.Ltmp493-.Lfunc_begin0
	.quad	.Ltmp496-.Lfunc_begin0
	.quad	.Ltmp498-.Lfunc_begin0
	.quad	.Ltmp499-.Lfunc_begin0
	.quad	.Ltmp502-.Lfunc_begin0
	.quad	.Ltmp503-.Lfunc_begin0
	.quad	.Ltmp504-.Lfunc_begin0
	.quad	.Ltmp506-.Lfunc_begin0
	.quad	.Ltmp508-.Lfunc_begin0
	.quad	.Ltmp511-.Lfunc_begin0
	.quad	.Ltmp512-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp517-.Lfunc_begin0
	.quad	.Ltmp518-.Lfunc_begin0
	.quad	.Ltmp519-.Lfunc_begin0
	.quad	.Ltmp521-.Lfunc_begin0
	.quad	.Ltmp522-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	.Ltmp526-.Lfunc_begin0
	.quad	.Ltmp527-.Lfunc_begin0
	.quad	.Ltmp529-.Lfunc_begin0
	.quad	.Ltmp530-.Lfunc_begin0
	.quad	.Ltmp531-.Lfunc_begin0
	.quad	.Ltmp532-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.quad	.Ltmp537-.Lfunc_begin0
	.quad	.Ltmp540-.Lfunc_begin0
	.quad	.Ltmp541-.Lfunc_begin0
	.quad	.Ltmp542-.Lfunc_begin0
	.quad	.Ltmp545-.Lfunc_begin0
	.quad	.Ltmp546-.Lfunc_begin0
	.quad	.Ltmp548-.Lfunc_begin0
	.quad	.Ltmp549-.Lfunc_begin0
	.quad	.Ltmp551-.Lfunc_begin0
	.quad	.Ltmp552-.Lfunc_begin0
	.quad	.Ltmp553-.Lfunc_begin0
	.quad	.Ltmp555-.Lfunc_begin0
	.quad	.Ltmp556-.Lfunc_begin0
	.quad	.Ltmp557-.Lfunc_begin0
	.quad	.Ltmp558-.Lfunc_begin0
	.quad	.Ltmp559-.Lfunc_begin0
	.quad	.Ltmp562-.Lfunc_begin0
	.quad	.Ltmp563-.Lfunc_begin0
	.quad	.Ltmp564-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.quad	.Ltmp568-.Lfunc_begin0
	.quad	.Ltmp569-.Lfunc_begin0
	.quad	.Ltmp571-.Lfunc_begin0
	.quad	.Ltmp572-.Lfunc_begin0
	.quad	.Ltmp573-.Lfunc_begin0
	.quad	.Ltmp574-.Lfunc_begin0
	.quad	.Ltmp576-.Lfunc_begin0
	.quad	.Ltmp577-.Lfunc_begin0
	.quad	.Ltmp579-.Lfunc_begin0
	.quad	.Ltmp582-.Lfunc_begin0
	.quad	.Ltmp583-.Lfunc_begin0
	.quad	.Ltmp584-.Lfunc_begin0
	.quad	.Ltmp586-.Lfunc_begin0
	.quad	.Ltmp587-.Lfunc_begin0
	.quad	.Ltmp588-.Lfunc_begin0
	.quad	.Ltmp589-.Lfunc_begin0
	.quad	.Ltmp592-.Lfunc_begin0
	.quad	.Ltmp593-.Lfunc_begin0
	.quad	.Ltmp594-.Lfunc_begin0
	.quad	.Ltmp596-.Lfunc_begin0
	.quad	.Ltmp597-.Lfunc_begin0
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp599-.Lfunc_begin0
	.quad	.Ltmp600-.Lfunc_begin0
	.quad	.Ltmp603-.Lfunc_begin0
	.quad	.Ltmp604-.Lfunc_begin0
	.quad	.Ltmp605-.Lfunc_begin0
	.quad	.Ltmp606-.Lfunc_begin0
	.quad	.Ltmp609-.Lfunc_begin0
	.quad	.Ltmp610-.Lfunc_begin0
	.quad	.Ltmp612-.Lfunc_begin0
	.quad	.Ltmp613-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.quad	.Ltmp617-.Lfunc_begin0
	.quad	.Ltmp619-.Lfunc_begin0
	.quad	.Ltmp621-.Lfunc_begin0
	.quad	.Ltmp622-.Lfunc_begin0
	.quad	.Ltmp623-.Lfunc_begin0
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp626-.Lfunc_begin0
	.quad	.Ltmp627-.Lfunc_begin0
	.quad	.Ltmp628-.Lfunc_begin0
	.quad	.Ltmp631-.Lfunc_begin0
	.quad	.Ltmp632-.Lfunc_begin0
	.quad	.Ltmp633-.Lfunc_begin0
	.quad	.Ltmp635-.Lfunc_begin0
	.quad	.Ltmp636-.Lfunc_begin0
	.quad	.Ltmp637-.Lfunc_begin0
	.quad	.Ltmp638-.Lfunc_begin0
	.quad	.Ltmp639-.Lfunc_begin0
	.quad	.Ltmp642-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.quad	.Ltmp644-.Lfunc_begin0
	.quad	.Ltmp645-.Lfunc_begin0
	.quad	.Ltmp648-.Lfunc_begin0
	.quad	.Ltmp649-.Lfunc_begin0
	.quad	.Ltmp651-.Lfunc_begin0
	.quad	.Ltmp652-.Lfunc_begin0
	.quad	.Ltmp655-.Lfunc_begin0
	.quad	.Ltmp656-.Lfunc_begin0
	.quad	.Ltmp658-.Lfunc_begin0
	.quad	.Ltmp660-.Lfunc_begin0
	.quad	.Ltmp661-.Lfunc_begin0
	.quad	.Ltmp662-.Lfunc_begin0
	.quad	.Ltmp664-.Lfunc_begin0
	.quad	.Ltmp665-.Lfunc_begin0
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp667-.Lfunc_begin0
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	.Ltmp671-.Lfunc_begin0
	.quad	.Ltmp672-.Lfunc_begin0
	.quad	.Ltmp674-.Lfunc_begin0
	.quad	.Ltmp675-.Lfunc_begin0
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	.Ltmp677-.Lfunc_begin0
	.quad	.Ltmp678-.Lfunc_begin0
	.quad	.Ltmp681-.Lfunc_begin0
	.quad	.Ltmp682-.Lfunc_begin0
	.quad	.Ltmp683-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.quad	.Ltmp687-.Lfunc_begin0
	.quad	.Ltmp688-.Lfunc_begin0
	.quad	.Ltmp690-.Lfunc_begin0
	.quad	.Ltmp691-.Lfunc_begin0
	.quad	.Ltmp694-.Lfunc_begin0
	.quad	.Ltmp695-.Lfunc_begin0
	.quad	.Ltmp697-.Lfunc_begin0
	.quad	.Ltmp699-.Lfunc_begin0
	.quad	.Ltmp700-.Lfunc_begin0
	.quad	.Ltmp701-.Lfunc_begin0
	.quad	.Ltmp703-.Lfunc_begin0
	.quad	.Ltmp704-.Lfunc_begin0
	.quad	.Ltmp705-.Lfunc_begin0
	.quad	.Ltmp706-.Lfunc_begin0
	.quad	.Ltmp709-.Lfunc_begin0
	.quad	.Ltmp710-.Lfunc_begin0
	.quad	.Ltmp711-.Lfunc_begin0
	.quad	.Ltmp713-.Lfunc_begin0
	.quad	.Ltmp714-.Lfunc_begin0
	.quad	.Ltmp715-.Lfunc_begin0
	.quad	.Ltmp716-.Lfunc_begin0
	.quad	.Ltmp717-.Lfunc_begin0
	.quad	.Ltmp720-.Lfunc_begin0
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp722-.Lfunc_begin0
	.quad	.Ltmp723-.Lfunc_begin0
	.quad	.Ltmp726-.Lfunc_begin0
	.quad	.Ltmp727-.Lfunc_begin0
	.quad	.Ltmp729-.Lfunc_begin0
	.quad	.Ltmp730-.Lfunc_begin0
	.quad	.Ltmp733-.Lfunc_begin0
	.quad	.Ltmp735-.Lfunc_begin0
	.quad	.Ltmp736-.Lfunc_begin0
	.quad	.Ltmp738-.Lfunc_begin0
	.quad	.Ltmp739-.Lfunc_begin0
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp742-.Lfunc_begin0
	.quad	.Ltmp743-.Lfunc_begin0
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp745-.Lfunc_begin0
	.quad	.Ltmp747-.Lfunc_begin0
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp749-.Lfunc_begin0
	.quad	.Ltmp751-.Lfunc_begin0
	.quad	.Ltmp752-.Lfunc_begin0
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	.Ltmp754-.Lfunc_begin0
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	.Ltmp757-.Lfunc_begin0
	.quad	.Ltmp758-.Lfunc_begin0
	.quad	.Ltmp759-.Lfunc_begin0
	.quad	.Ltmp760-.Lfunc_begin0
	.quad	.Ltmp763-.Lfunc_begin0
	.quad	.Ltmp764-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Ltmp767-.Lfunc_begin0
	.quad	.Ltmp770-.Lfunc_begin0
	.quad	.Ltmp771-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp789-.Lfunc_begin0
	.quad	.Ltmp791-.Lfunc_begin0
	.quad	.Ltmp792-.Lfunc_begin0
	.quad	.Ltmp793-.Lfunc_begin0
	.quad	.Ltmp794-.Lfunc_begin0
	.quad	.Ltmp795-.Lfunc_begin0
	.quad	.Ltmp796-.Lfunc_begin0
	.quad	.Ltmp797-.Lfunc_begin0
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp800-.Lfunc_begin0
	.quad	.Ltmp801-.Lfunc_begin0
	.quad	.Ltmp802-.Lfunc_begin0
	.quad	.Ltmp803-.Lfunc_begin0
	.quad	.Ltmp804-.Lfunc_begin0
	.quad	.Ltmp805-.Lfunc_begin0
	.quad	.Ltmp808-.Lfunc_begin0
	.quad	.Ltmp809-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.quad	.Ltmp811-.Lfunc_begin0
	.quad	.Ltmp812-.Lfunc_begin0
	.quad	.Ltmp813-.Lfunc_begin0
	.quad	.Ltmp814-.Lfunc_begin0
	.quad	.Ltmp815-.Lfunc_begin0
	.quad	.Ltmp816-.Lfunc_begin0
	.quad	.Ltmp817-.Lfunc_begin0
	.quad	.Ltmp818-.Lfunc_begin0
	.quad	.Ltmp820-.Lfunc_begin0
	.quad	.Ltmp821-.Lfunc_begin0
	.quad	.Ltmp822-.Lfunc_begin0
	.quad	.Ltmp823-.Lfunc_begin0
	.quad	.Ltmp824-.Lfunc_begin0
	.quad	.Ltmp827-.Lfunc_begin0
	.quad	.Ltmp828-.Lfunc_begin0
	.quad	.Ltmp829-.Lfunc_begin0
	.quad	.Ltmp830-.Lfunc_begin0
	.quad	.Ltmp831-.Lfunc_begin0
	.quad	.Ltmp832-.Lfunc_begin0
	.quad	.Ltmp835-.Lfunc_begin0
	.quad	.Ltmp836-.Lfunc_begin0
	.quad	.Ltmp837-.Lfunc_begin0
	.quad	.Ltmp838-.Lfunc_begin0
	.quad	.Ltmp839-.Lfunc_begin0
	.quad	.Ltmp840-.Lfunc_begin0
	.quad	.Ltmp841-.Lfunc_begin0
	.quad	.Ltmp842-.Lfunc_begin0
	.quad	.Ltmp843-.Lfunc_begin0
	.quad	.Ltmp844-.Lfunc_begin0
	.quad	.Ltmp845-.Lfunc_begin0
	.quad	.Ltmp846-.Lfunc_begin0
	.quad	.Ltmp847-.Lfunc_begin0
	.quad	.Ltmp848-.Lfunc_begin0
	.quad	.Ltmp849-.Lfunc_begin0
	.quad	.Ltmp850-.Lfunc_begin0
	.quad	.Ltmp851-.Lfunc_begin0
	.quad	.Ltmp852-.Lfunc_begin0
	.quad	.Ltmp854-.Lfunc_begin0
	.quad	.Ltmp855-.Lfunc_begin0
	.quad	.Ltmp856-.Lfunc_begin0
	.quad	.Ltmp857-.Lfunc_begin0
	.quad	.Ltmp858-.Lfunc_begin0
	.quad	.Ltmp859-.Lfunc_begin0
	.quad	.Ltmp862-.Lfunc_begin0
	.quad	.Ltmp863-.Lfunc_begin0
	.quad	.Ltmp864-.Lfunc_begin0
	.quad	.Ltmp865-.Lfunc_begin0
	.quad	.Ltmp866-.Lfunc_begin0
	.quad	.Ltmp867-.Lfunc_begin0
	.quad	.Ltmp868-.Lfunc_begin0
	.quad	.Ltmp869-.Lfunc_begin0
	.quad	.Ltmp870-.Lfunc_begin0
	.quad	.Ltmp871-.Lfunc_begin0
	.quad	.Ltmp872-.Lfunc_begin0
	.quad	.Ltmp873-.Lfunc_begin0
	.quad	.Ltmp874-.Lfunc_begin0
	.quad	.Ltmp876-.Lfunc_begin0
	.quad	.Ltmp877-.Lfunc_begin0
	.quad	.Ltmp878-.Lfunc_begin0
	.quad	.Ltmp879-.Lfunc_begin0
	.quad	.Ltmp880-.Lfunc_begin0
	.quad	.Ltmp881-.Lfunc_begin0
	.quad	.Ltmp882-.Lfunc_begin0
	.quad	.Ltmp884-.Lfunc_begin0
	.quad	.Ltmp885-.Lfunc_begin0
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp887-.Lfunc_begin0
	.quad	.Ltmp891-.Lfunc_begin0
	.quad	.Ltmp892-.Lfunc_begin0
	.quad	.Ltmp893-.Lfunc_begin0
	.quad	.Ltmp894-.Lfunc_begin0
	.quad	.Ltmp895-.Lfunc_begin0
	.quad	.Ltmp896-.Lfunc_begin0
	.quad	.Ltmp898-.Lfunc_begin0
	.quad	.Ltmp900-.Lfunc_begin0
	.quad	.Ltmp901-.Lfunc_begin0
	.quad	.Ltmp902-.Lfunc_begin0
	.quad	.Ltmp905-.Lfunc_begin0
	.quad	.Ltmp906-.Lfunc_begin0
	.quad	.Ltmp907-.Lfunc_begin0
	.quad	.Ltmp908-.Lfunc_begin0
	.quad	.Ltmp909-.Lfunc_begin0
	.quad	.Ltmp910-.Lfunc_begin0
	.quad	.Ltmp911-.Lfunc_begin0
	.quad	.Ltmp912-.Lfunc_begin0
	.quad	.Ltmp914-.Lfunc_begin0
	.quad	.Ltmp915-.Lfunc_begin0
	.quad	.Ltmp916-.Lfunc_begin0
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp921-.Lfunc_begin0
	.quad	.Ltmp922-.Lfunc_begin0
	.quad	.Ltmp923-.Lfunc_begin0
	.quad	.Ltmp924-.Lfunc_begin0
	.quad	.Ltmp925-.Lfunc_begin0
	.quad	.Ltmp926-.Lfunc_begin0
	.quad	.Ltmp928-.Lfunc_begin0
	.quad	.Ltmp930-.Lfunc_begin0
	.quad	.Ltmp931-.Lfunc_begin0
	.quad	.Ltmp932-.Lfunc_begin0
	.quad	.Ltmp934-.Lfunc_begin0
	.quad	.Ltmp936-.Lfunc_begin0
	.quad	.Ltmp937-.Lfunc_begin0
	.quad	.Ltmp938-.Lfunc_begin0
	.quad	.Ltmp939-.Lfunc_begin0
	.quad	.Ltmp940-.Lfunc_begin0
	.quad	.Ltmp941-.Lfunc_begin0
	.quad	.Ltmp942-.Lfunc_begin0
	.quad	.Ltmp944-.Lfunc_begin0
	.quad	.Ltmp945-.Lfunc_begin0
	.quad	.Ltmp946-.Lfunc_begin0
	.quad	.Ltmp947-.Lfunc_begin0
	.quad	.Ltmp951-.Lfunc_begin0
	.quad	.Ltmp952-.Lfunc_begin0
	.quad	.Ltmp953-.Lfunc_begin0
	.quad	.Ltmp954-.Lfunc_begin0
	.quad	.Ltmp955-.Lfunc_begin0
	.quad	.Ltmp956-.Lfunc_begin0
	.quad	.Ltmp958-.Lfunc_begin0
	.quad	.Ltmp960-.Lfunc_begin0
	.quad	.Ltmp961-.Lfunc_begin0
	.quad	.Ltmp962-.Lfunc_begin0
	.quad	.Ltmp964-.Lfunc_begin0
	.quad	.Ltmp966-.Lfunc_begin0
	.quad	.Ltmp967-.Lfunc_begin0
	.quad	.Ltmp968-.Lfunc_begin0
	.quad	.Ltmp969-.Lfunc_begin0
	.quad	.Ltmp970-.Lfunc_begin0
	.quad	.Ltmp971-.Lfunc_begin0
	.quad	.Ltmp972-.Lfunc_begin0
	.quad	.Ltmp974-.Lfunc_begin0
	.quad	.Ltmp975-.Lfunc_begin0
	.quad	.Ltmp976-.Lfunc_begin0
	.quad	.Ltmp977-.Lfunc_begin0
	.quad	.Ltmp981-.Lfunc_begin0
	.quad	.Ltmp982-.Lfunc_begin0
	.quad	.Ltmp983-.Lfunc_begin0
	.quad	.Ltmp984-.Lfunc_begin0
	.quad	.Ltmp985-.Lfunc_begin0
	.quad	.Ltmp986-.Lfunc_begin0
	.quad	.Ltmp988-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.quad	.Ltmp991-.Lfunc_begin0
	.quad	.Ltmp992-.Lfunc_begin0
	.quad	.Ltmp994-.Lfunc_begin0
	.quad	.Ltmp996-.Lfunc_begin0
	.quad	.Ltmp997-.Lfunc_begin0
	.quad	.Ltmp998-.Lfunc_begin0
	.quad	.Ltmp999-.Lfunc_begin0
	.quad	.Ltmp1000-.Lfunc_begin0
	.quad	.Ltmp1001-.Lfunc_begin0
	.quad	.Ltmp1002-.Lfunc_begin0
	.quad	.Ltmp1004-.Lfunc_begin0
	.quad	.Ltmp1005-.Lfunc_begin0
	.quad	.Ltmp1006-.Lfunc_begin0
	.quad	.Ltmp1007-.Lfunc_begin0
	.quad	.Ltmp1010-.Lfunc_begin0
	.quad	.Ltmp1011-.Lfunc_begin0
	.quad	.Ltmp1012-.Lfunc_begin0
	.quad	.Ltmp1013-.Lfunc_begin0
	.quad	.Ltmp1014-.Lfunc_begin0
	.quad	.Ltmp1015-.Lfunc_begin0
	.quad	.Ltmp1017-.Lfunc_begin0
	.quad	.Ltmp1019-.Lfunc_begin0
	.quad	.Ltmp1020-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp1025-.Lfunc_begin0
	.quad	.Ltmp1026-.Lfunc_begin0
	.quad	.Ltmp1027-.Lfunc_begin0
	.quad	.Ltmp1028-.Lfunc_begin0
	.quad	.Ltmp1029-.Lfunc_begin0
	.quad	.Ltmp1030-.Lfunc_begin0
	.quad	.Ltmp1031-.Lfunc_begin0
	.quad	.Ltmp1033-.Lfunc_begin0
	.quad	.Ltmp1034-.Lfunc_begin0
	.quad	.Ltmp1035-.Lfunc_begin0
	.quad	.Ltmp1036-.Lfunc_begin0
	.quad	.Ltmp1037-.Lfunc_begin0
	.quad	.Ltmp1039-.Lfunc_begin0
	.quad	.Ltmp1040-.Lfunc_begin0
	.quad	.Ltmp1041-.Lfunc_begin0
	.quad	.Ltmp1042-.Lfunc_begin0
	.quad	.Ltmp1043-.Lfunc_begin0
	.quad	.Ltmp1045-.Lfunc_begin0
	.quad	.Ltmp1046-.Lfunc_begin0
	.quad	.Ltmp1047-.Lfunc_begin0
	.quad	.Ltmp1048-.Lfunc_begin0
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp1052-.Lfunc_begin0
	.quad	.Ltmp1053-.Lfunc_begin0
	.quad	.Ltmp1054-.Lfunc_begin0
	.quad	.Ltmp1055-.Lfunc_begin0
	.quad	.Ltmp1056-.Lfunc_begin0
	.quad	.Ltmp1057-.Lfunc_begin0
	.quad	.Ltmp1058-.Lfunc_begin0
	.quad	.Ltmp1060-.Lfunc_begin0
	.quad	.Ltmp1061-.Lfunc_begin0
	.quad	.Ltmp1062-.Lfunc_begin0
	.quad	.Ltmp1063-.Lfunc_begin0
	.quad	.Ltmp1064-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp1067-.Lfunc_begin0
	.quad	.Ltmp1068-.Lfunc_begin0
	.quad	.Ltmp1069-.Lfunc_begin0
	.quad	.Ltmp1070-.Lfunc_begin0
	.quad	.Ltmp1071-.Lfunc_begin0
	.quad	.Ltmp1072-.Lfunc_begin0
	.quad	.Ltmp1073-.Lfunc_begin0
	.quad	.Ltmp1075-.Lfunc_begin0
	.quad	.Ltmp1076-.Lfunc_begin0
	.quad	.Ltmp1077-.Lfunc_begin0
	.quad	.Ltmp1078-.Lfunc_begin0
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1081-.Lfunc_begin0
	.quad	.Ltmp1082-.Lfunc_begin0
	.quad	.Ltmp1083-.Lfunc_begin0
	.quad	.Ltmp1084-.Lfunc_begin0
	.quad	.Ltmp1085-.Lfunc_begin0
	.quad	.Ltmp1087-.Lfunc_begin0
	.quad	.Ltmp1088-.Lfunc_begin0
	.quad	.Ltmp1089-.Lfunc_begin0
	.quad	.Ltmp1090-.Lfunc_begin0
	.quad	.Ltmp1092-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp1094-.Lfunc_begin0
	.quad	.Ltmp1095-.Lfunc_begin0
	.quad	.Ltmp1096-.Lfunc_begin0
	.quad	.Ltmp1097-.Lfunc_begin0
	.quad	.Ltmp1098-.Lfunc_begin0
	.quad	.Ltmp1099-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp1121-.Lfunc_begin0
	.quad	.Ltmp1123-.Lfunc_begin0
	.quad	.Ltmp1124-.Lfunc_begin0
	.quad	.Ltmp1125-.Lfunc_begin0
	.quad	.Ltmp1131-.Lfunc_begin0
	.quad	.Ltmp1132-.Lfunc_begin0
	.quad	.Ltmp1134-.Lfunc_begin0
	.quad	.Ltmp1136-.Lfunc_begin0
	.quad	.Ltmp1137-.Lfunc_begin0
	.quad	.Ltmp1139-.Lfunc_begin0
	.quad	.Ltmp1140-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.quad	.Ltmp1143-.Lfunc_begin0
	.quad	.Ltmp1144-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.quad	.Ltmp1147-.Lfunc_begin0
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1149-.Lfunc_begin0
	.quad	.Ltmp1152-.Lfunc_begin0
	.quad	.Ltmp1153-.Lfunc_begin0
	.quad	.Ltmp1154-.Lfunc_begin0
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1161-.Lfunc_begin0
	.quad	.Ltmp1162-.Lfunc_begin0
	.quad	.Ltmp1164-.Lfunc_begin0
	.quad	.Ltmp1166-.Lfunc_begin0
	.quad	.Ltmp1167-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.quad	.Ltmp1170-.Lfunc_begin0
	.quad	.Ltmp1172-.Lfunc_begin0
	.quad	.Ltmp1173-.Lfunc_begin0
	.quad	.Ltmp1174-.Lfunc_begin0
	.quad	.Ltmp1176-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.quad	.Ltmp1178-.Lfunc_begin0
	.quad	.Ltmp1179-.Lfunc_begin0
	.quad	.Ltmp1182-.Lfunc_begin0
	.quad	.Ltmp1183-.Lfunc_begin0
	.quad	.Ltmp1184-.Lfunc_begin0
	.quad	.Ltmp1185-.Lfunc_begin0
	.quad	.Ltmp1191-.Lfunc_begin0
	.quad	.Ltmp1192-.Lfunc_begin0
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1196-.Lfunc_begin0
	.quad	.Ltmp1197-.Lfunc_begin0
	.quad	.Ltmp1199-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.quad	.Ltmp1202-.Lfunc_begin0
	.quad	.Ltmp1203-.Lfunc_begin0
	.quad	.Ltmp1204-.Lfunc_begin0
	.quad	.Ltmp1206-.Lfunc_begin0
	.quad	.Ltmp1207-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.quad	.Ltmp1209-.Lfunc_begin0
	.quad	.Ltmp1212-.Lfunc_begin0
	.quad	.Ltmp1213-.Lfunc_begin0
	.quad	.Ltmp1214-.Lfunc_begin0
	.quad	.Ltmp1215-.Lfunc_begin0
	.quad	.Ltmp1221-.Lfunc_begin0
	.quad	.Ltmp1222-.Lfunc_begin0
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.quad	.Ltmp1227-.Lfunc_begin0
	.quad	.Ltmp1229-.Lfunc_begin0
	.quad	.Ltmp1230-.Lfunc_begin0
	.quad	.Ltmp1232-.Lfunc_begin0
	.quad	.Ltmp1233-.Lfunc_begin0
	.quad	.Ltmp1234-.Lfunc_begin0
	.quad	.Ltmp1236-.Lfunc_begin0
	.quad	.Ltmp1237-.Lfunc_begin0
	.quad	.Ltmp1238-.Lfunc_begin0
	.quad	.Ltmp1239-.Lfunc_begin0
	.quad	.Ltmp1242-.Lfunc_begin0
	.quad	.Ltmp1243-.Lfunc_begin0
	.quad	.Ltmp1244-.Lfunc_begin0
	.quad	.Ltmp1245-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp1270-.Lfunc_begin0
	.quad	.Ltmp1271-.Lfunc_begin0
	.quad	.Ltmp1272-.Lfunc_begin0
	.quad	.Ltmp1273-.Lfunc_begin0
	.quad	.Ltmp1274-.Lfunc_begin0
	.quad	.Ltmp1275-.Lfunc_begin0
	.quad	.Ltmp1276-.Lfunc_begin0
	.quad	.Ltmp1277-.Lfunc_begin0
	.quad	.Ltmp1278-.Lfunc_begin0
	.quad	.Ltmp1279-.Lfunc_begin0
	.quad	.Ltmp1280-.Lfunc_begin0
	.quad	.Ltmp1281-.Lfunc_begin0
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1283-.Lfunc_begin0
	.quad	.Ltmp1284-.Lfunc_begin0
	.quad	.Ltmp1285-.Lfunc_begin0
	.quad	.Ltmp1286-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.quad	.Ltmp1288-.Lfunc_begin0
	.quad	.Ltmp1289-.Lfunc_begin0
	.quad	.Ltmp1290-.Lfunc_begin0
	.quad	.Ltmp1291-.Lfunc_begin0
	.quad	.Ltmp1292-.Lfunc_begin0
	.quad	.Ltmp1293-.Lfunc_begin0
	.quad	.Ltmp1295-.Lfunc_begin0
	.quad	.Ltmp1296-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.quad	.Ltmp1298-.Lfunc_begin0
	.quad	.Ltmp1300-.Lfunc_begin0
	.quad	.Ltmp1301-.Lfunc_begin0
	.quad	.Ltmp1302-.Lfunc_begin0
	.quad	.Ltmp1303-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp1305-.Lfunc_begin0
	.quad	.Ltmp1306-.Lfunc_begin0
	.quad	.Ltmp1307-.Lfunc_begin0
	.quad	.Ltmp1310-.Lfunc_begin0
	.quad	.Ltmp1311-.Lfunc_begin0
	.quad	.Ltmp1315-.Lfunc_begin0
	.quad	.Ltmp1316-.Lfunc_begin0
	.quad	.Ltmp1320-.Lfunc_begin0
	.quad	.Ltmp1321-.Lfunc_begin0
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1326-.Lfunc_begin0
	.quad	.Ltmp1330-.Lfunc_begin0
	.quad	.Ltmp1331-.Lfunc_begin0
	.quad	.Ltmp1335-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.quad	.Ltmp1340-.Lfunc_begin0
	.quad	.Ltmp1341-.Lfunc_begin0
	.quad	.Ltmp1345-.Lfunc_begin0
	.quad	.Ltmp1346-.Lfunc_begin0
	.quad	.Ltmp1350-.Lfunc_begin0
	.quad	.Ltmp1351-.Lfunc_begin0
	.quad	.Ltmp1355-.Lfunc_begin0
	.quad	.Ltmp1356-.Lfunc_begin0
	.quad	.Ltmp1360-.Lfunc_begin0
	.quad	.Ltmp1361-.Lfunc_begin0
	.quad	.Ltmp1366-.Lfunc_begin0
	.quad	.Ltmp1367-.Lfunc_begin0
	.quad	.Ltmp1373-.Lfunc_begin0
	.quad	.Ltmp1374-.Lfunc_begin0
	.quad	.Ltmp1377-.Lfunc_begin0
	.quad	.Ltmp1378-.Lfunc_begin0
	.quad	.Ltmp1382-.Lfunc_begin0
	.quad	.Ltmp1383-.Lfunc_begin0
	.quad	.Ltmp1387-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.quad	.Ltmp1392-.Lfunc_begin0
	.quad	.Ltmp1393-.Lfunc_begin0
	.quad	.Ltmp1397-.Lfunc_begin0
	.quad	.Ltmp1398-.Lfunc_begin0
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1403-.Lfunc_begin0
	.quad	.Ltmp1407-.Lfunc_begin0
	.quad	.Ltmp1408-.Lfunc_begin0
	.quad	.Ltmp1412-.Lfunc_begin0
	.quad	.Ltmp1413-.Lfunc_begin0
	.quad	.Ltmp1417-.Lfunc_begin0
	.quad	.Ltmp1418-.Lfunc_begin0
	.quad	.Ltmp1422-.Lfunc_begin0
	.quad	.Ltmp1423-.Lfunc_begin0
	.quad	.Ltmp1427-.Lfunc_begin0
	.quad	.Ltmp1428-.Lfunc_begin0
	.quad	.Ltmp1432-.Lfunc_begin0
	.quad	.Ltmp1433-.Lfunc_begin0
	.quad	.Ltmp1437-.Lfunc_begin0
	.quad	.Ltmp1438-.Lfunc_begin0
	.quad	.Ltmp1439-.Lfunc_begin0
	.quad	.Ltmp1444-.Lfunc_begin0
	.quad	.Ltmp1445-.Lfunc_begin0
	.quad	.Ltmp1446-.Lfunc_begin0
	.quad	.Ltmp1449-.Lfunc_begin0
	.quad	.Ltmp1450-.Lfunc_begin0
	.quad	.Ltmp1454-.Lfunc_begin0
	.quad	.Ltmp1455-.Lfunc_begin0
	.quad	.Ltmp1459-.Lfunc_begin0
	.quad	.Ltmp1460-.Lfunc_begin0
	.quad	.Ltmp1464-.Lfunc_begin0
	.quad	.Ltmp1465-.Lfunc_begin0
	.quad	.Ltmp1469-.Lfunc_begin0
	.quad	.Ltmp1470-.Lfunc_begin0
	.quad	.Ltmp1474-.Lfunc_begin0
	.quad	.Ltmp1475-.Lfunc_begin0
	.quad	.Ltmp1479-.Lfunc_begin0
	.quad	.Ltmp1480-.Lfunc_begin0
	.quad	.Ltmp1484-.Lfunc_begin0
	.quad	.Ltmp1485-.Lfunc_begin0
	.quad	.Ltmp1489-.Lfunc_begin0
	.quad	.Ltmp1490-.Lfunc_begin0
	.quad	.Ltmp1494-.Lfunc_begin0
	.quad	.Ltmp1495-.Lfunc_begin0
	.quad	.Ltmp1499-.Lfunc_begin0
	.quad	.Ltmp1500-.Lfunc_begin0
	.quad	.Ltmp1504-.Lfunc_begin0
	.quad	.Ltmp1505-.Lfunc_begin0
	.quad	.Ltmp1510-.Lfunc_begin0
	.quad	.Ltmp1511-.Lfunc_begin0
	.quad	.Ltmp1512-.Lfunc_begin0
	.quad	.Ltmp1517-.Lfunc_begin0
	.quad	.Ltmp1518-.Lfunc_begin0
	.quad	.Ltmp1519-.Lfunc_begin0
	.quad	.Ltmp1524-.Lfunc_begin0
	.quad	.Ltmp1525-.Lfunc_begin0
	.quad	.Ltmp1526-.Lfunc_begin0
	.quad	.Ltmp1534-.Lfunc_begin0
	.quad	.Ltmp1535-.Lfunc_begin0
	.quad	.Ltmp1536-.Lfunc_begin0
	.quad	.Ltmp1537-.Lfunc_begin0
	.quad	.Ltmp1538-.Lfunc_begin0
	.quad	.Ltmp1539-.Lfunc_begin0
	.quad	.Ltmp1542-.Lfunc_begin0
	.quad	.Ltmp1544-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp1551-.Lfunc_begin0
	.quad	.Ltmp1552-.Lfunc_begin0
	.quad	.Ltmp1554-.Lfunc_begin0
	.quad	.Ltmp1556-.Lfunc_begin0
	.quad	.Ltmp1557-.Lfunc_begin0
	.quad	.Ltmp1558-.Lfunc_begin0
	.quad	.Ltmp1560-.Lfunc_begin0
	.quad	.Ltmp1561-.Lfunc_begin0
	.quad	.Ltmp1562-.Lfunc_begin0
	.quad	.Ltmp1563-.Lfunc_begin0
	.quad	.Ltmp1566-.Lfunc_begin0
	.quad	.Ltmp1568-.Lfunc_begin0
	.quad	.Ltmp1571-.Lfunc_begin0
	.quad	.Ltmp1572-.Lfunc_begin0
	.quad	.Ltmp1576-.Lfunc_begin0
	.quad	.Ltmp1578-.Lfunc_begin0
	.quad	.Ltmp1579-.Lfunc_begin0
	.quad	.Ltmp1580-.Lfunc_begin0
	.quad	.Ltmp1583-.Lfunc_begin0
	.quad	.Ltmp1584-.Lfunc_begin0
	.quad	.Ltmp1586-.Lfunc_begin0
	.quad	.Ltmp1587-.Lfunc_begin0
	.quad	.Ltmp1588-.Lfunc_begin0
	.quad	.Ltmp1589-.Lfunc_begin0
	.quad	.Ltmp1593-.Lfunc_begin0
	.quad	.Ltmp1594-.Lfunc_begin0
	.quad	.Ltmp1596-.Lfunc_begin0
	.quad	.Ltmp1597-.Lfunc_begin0
	.quad	.Ltmp1601-.Lfunc_begin0
	.quad	.Ltmp1602-.Lfunc_begin0
	.quad	.Ltmp1603-.Lfunc_begin0
	.quad	.Ltmp1605-.Lfunc_begin0
	.quad	.Ltmp1606-.Lfunc_begin0
	.quad	.Ltmp1607-.Lfunc_begin0
	.quad	.Ltmp1610-.Lfunc_begin0
	.quad	.Ltmp1611-.Lfunc_begin0
	.quad	.Ltmp1613-.Lfunc_begin0
	.quad	.Ltmp1614-.Lfunc_begin0
	.quad	.Ltmp1617-.Lfunc_begin0
	.quad	.Ltmp1618-.Lfunc_begin0
	.quad	.Ltmp1622-.Lfunc_begin0
	.quad	.Ltmp1663-.Lfunc_begin0
	.quad	.Ltmp1664-.Lfunc_begin0
	.quad	.Ltmp1666-.Lfunc_begin0
	.quad	.Ltmp1667-.Lfunc_begin0
	.quad	.Ltmp1669-.Lfunc_begin0
	.quad	.Ltmp1670-.Lfunc_begin0
	.quad	.Ltmp1672-.Lfunc_begin0
	.quad	.Ltmp1673-.Lfunc_begin0
	.quad	.Ltmp1675-.Lfunc_begin0
	.quad	.Ltmp1677-.Lfunc_begin0
	.quad	.Ltmp1679-.Lfunc_begin0
	.quad	.Ltmp1680-.Lfunc_begin0
	.quad	.Ltmp1681-.Lfunc_begin0
	.quad	.Ltmp1682-.Lfunc_begin0
	.quad	.Ltmp1683-.Lfunc_begin0
	.quad	.Ltmp1686-.Lfunc_begin0
	.quad	.Ltmp1688-.Lfunc_begin0
	.quad	.Ltmp1690-.Lfunc_begin0
	.quad	.Ltmp1692-.Lfunc_begin0
	.quad	.Ltmp1693-.Lfunc_begin0
	.quad	.Ltmp1695-.Lfunc_begin0
	.quad	.Ltmp1697-.Lfunc_begin0
	.quad	.Ltmp1698-.Lfunc_begin0
	.quad	.Ltmp1699-.Lfunc_begin0
	.quad	.Ltmp1700-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp1624-.Lfunc_begin0
	.quad	.Ltmp1626-.Lfunc_begin0
	.quad	.Ltmp1628-.Lfunc_begin0
	.quad	.Ltmp1630-.Lfunc_begin0
	.quad	.Ltmp1633-.Lfunc_begin0
	.quad	.Ltmp1635-.Lfunc_begin0
	.quad	.Ltmp1637-.Lfunc_begin0
	.quad	.Ltmp1642-.Lfunc_begin0
	.quad	.Ltmp1645-.Lfunc_begin0
	.quad	.Ltmp1647-.Lfunc_begin0
	.quad	.Ltmp1650-.Lfunc_begin0
	.quad	.Ltmp1651-.Lfunc_begin0
	.quad	.Ltmp1653-.Lfunc_begin0
	.quad	.Ltmp1654-.Lfunc_begin0
	.quad	.Ltmp1658-.Lfunc_begin0
	.quad	.Ltmp1659-.Lfunc_begin0
	.quad	.Ltmp1661-.Lfunc_begin0
	.quad	.Ltmp1662-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp1701-.Lfunc_begin0
	.quad	.Ltmp1704-.Lfunc_begin0
	.quad	.Ltmp1705-.Lfunc_begin0
	.quad	.Ltmp1706-.Lfunc_begin0
	.quad	.Ltmp1707-.Lfunc_begin0
	.quad	.Ltmp1709-.Lfunc_begin0
	.quad	.Ltmp1710-.Lfunc_begin0
	.quad	.Ltmp1712-.Lfunc_begin0
	.quad	.Ltmp1713-.Lfunc_begin0
	.quad	.Ltmp1715-.Lfunc_begin0
	.quad	.Ltmp1716-.Lfunc_begin0
	.quad	.Ltmp1718-.Lfunc_begin0
	.quad	.Ltmp1719-.Lfunc_begin0
	.quad	.Ltmp1722-.Lfunc_begin0
	.quad	.Ltmp1724-.Lfunc_begin0
	.quad	.Ltmp1725-.Lfunc_begin0
	.quad	.Ltmp1726-.Lfunc_begin0
	.quad	.Ltmp1727-.Lfunc_begin0
	.quad	.Ltmp1730-.Lfunc_begin0
	.quad	.Ltmp1731-.Lfunc_begin0
	.quad	.Ltmp1734-.Lfunc_begin0
	.quad	.Ltmp1737-.Lfunc_begin0
	.quad	.Ltmp1738-.Lfunc_begin0
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1742-.Lfunc_begin0
	.quad	.Ltmp1743-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp1747-.Lfunc_begin0
	.quad	.Ltmp1749-.Lfunc_begin0
	.quad	.Ltmp1750-.Lfunc_begin0
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.quad	.Ltmp1760-.Lfunc_begin0
	.quad	.Ltmp1764-.Lfunc_begin0
	.quad	.Ltmp1766-.Lfunc_begin0
	.quad	.Ltmp1770-.Lfunc_begin0
	.quad	.Ltmp1772-.Lfunc_begin0
	.quad	.Ltmp1775-.Lfunc_begin0
	.quad	.Ltmp1776-.Lfunc_begin0
	.quad	.Ltmp1777-.Lfunc_begin0
	.quad	.Ltmp1779-.Lfunc_begin0
	.quad	.Ltmp1780-.Lfunc_begin0
	.quad	.Ltmp1782-.Lfunc_begin0
	.quad	.Ltmp1785-.Lfunc_begin0
	.quad	.Ltmp1786-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.quad	.Ltmp1790-.Lfunc_begin0
	.quad	.Ltmp1791-.Lfunc_begin0
	.quad	.Ltmp1793-.Lfunc_begin0
	.quad	.Ltmp1794-.Lfunc_begin0
	.quad	.Ltmp1796-.Lfunc_begin0
	.quad	.Ltmp1797-.Lfunc_begin0
	.quad	.Ltmp1798-.Lfunc_begin0
	.quad	.Ltmp1799-.Lfunc_begin0
	.quad	.Ltmp1801-.Lfunc_begin0
	.quad	.Ltmp1805-.Lfunc_begin0
	.quad	.Ltmp1808-.Lfunc_begin0
	.quad	.Ltmp1811-.Lfunc_begin0
	.quad	.Ltmp1812-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp1859-.Lfunc_begin0
	.quad	.Ltmp1860-.Lfunc_begin0
	.quad	.Ltmp1863-.Lfunc_begin0
	.quad	.Ltmp1904-.Lfunc_begin0
	.quad	0
	.quad	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp8-.Lfunc_begin0
	.short	.Ltmp2301-.Ltmp2300     # Loc expr size
.Ltmp2300:
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2301:
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp10-.Lfunc_begin0
	.short	.Ltmp2303-.Ltmp2302     # Loc expr size
.Ltmp2302:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2303:
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp7-.Lfunc_begin0
	.short	.Ltmp2305-.Ltmp2304     # Loc expr size
.Ltmp2304:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2305:
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp12-.Lfunc_begin0
	.short	.Ltmp2307-.Ltmp2306     # Loc expr size
.Ltmp2306:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2307:
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp14-.Lfunc_begin0
	.short	.Ltmp2309-.Ltmp2308     # Loc expr size
.Ltmp2308:
	.byte	83                      # DW_OP_reg3
.Ltmp2309:
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin1-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.short	.Ltmp2311-.Ltmp2310     # Loc expr size
.Ltmp2310:
	.byte	85                      # DW_OP_reg5
.Ltmp2311:
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp29-.Lfunc_begin0
	.short	.Ltmp2313-.Ltmp2312     # Loc expr size
.Ltmp2312:
	.byte	83                      # DW_OP_reg3
.Ltmp2313:
	.quad	.Ltmp29-.Lfunc_begin0
	.quad	.Ltmp32-.Lfunc_begin0
	.short	.Ltmp2315-.Ltmp2314     # Loc expr size
.Ltmp2314:
	.byte	85                      # DW_OP_reg5
.Ltmp2315:
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin1-.Lfunc_begin0
	.quad	.Ltmp26-.Lfunc_begin0
	.short	.Ltmp2317-.Ltmp2316     # Loc expr size
.Ltmp2316:
	.byte	84                      # DW_OP_reg4
.Ltmp2317:
	.quad	.Ltmp26-.Lfunc_begin0
	.quad	.Ltmp30-.Lfunc_begin0
	.short	.Ltmp2319-.Ltmp2318     # Loc expr size
.Ltmp2318:
	.byte	95                      # DW_OP_reg15
.Ltmp2319:
	.quad	.Ltmp30-.Lfunc_begin0
	.quad	.Ltmp31-.Lfunc_begin0
	.short	.Ltmp2321-.Ltmp2320     # Loc expr size
.Ltmp2320:
	.byte	84                      # DW_OP_reg4
.Ltmp2321:
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Lfunc_begin1-.Lfunc_begin0
	.quad	.Ltmp25-.Lfunc_begin0
	.short	.Ltmp2323-.Ltmp2322     # Loc expr size
.Ltmp2322:
	.byte	81                      # DW_OP_reg1
.Ltmp2323:
	.quad	.Ltmp25-.Lfunc_begin0
	.quad	.Ltmp33-.Lfunc_begin0
	.short	.Ltmp2325-.Ltmp2324     # Loc expr size
.Ltmp2324:
	.byte	93                      # DW_OP_reg13
.Ltmp2325:
	.quad	.Ltmp33-.Lfunc_begin0
	.quad	.Ltmp34-.Lfunc_begin0
	.short	.Ltmp2327-.Ltmp2326     # Loc expr size
.Ltmp2326:
	.byte	95                      # DW_OP_reg15
.Ltmp2327:
	.quad	.Ltmp34-.Lfunc_begin0
	.quad	.Ltmp35-.Lfunc_begin0
	.short	.Ltmp2329-.Ltmp2328     # Loc expr size
.Ltmp2328:
	.byte	92                      # DW_OP_reg12
.Ltmp2329:
	.quad	.Ltmp35-.Lfunc_begin0
	.quad	.Ltmp36-.Lfunc_begin0
	.short	.Ltmp2331-.Ltmp2330     # Loc expr size
.Ltmp2330:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2331:
	.quad	.Ltmp36-.Lfunc_begin0
	.quad	.Ltmp37-.Lfunc_begin0
	.short	.Ltmp2333-.Ltmp2332     # Loc expr size
.Ltmp2332:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240~"                 # -224
.Ltmp2333:
	.quad	.Ltmp37-.Lfunc_begin0
	.quad	.Ltmp38-.Lfunc_begin0
	.short	.Ltmp2335-.Ltmp2334     # Loc expr size
.Ltmp2334:
	.byte	92                      # DW_OP_reg12
.Ltmp2335:
	.quad	.Ltmp38-.Lfunc_begin0
	.quad	.Ltmp39-.Lfunc_begin0
	.short	.Ltmp2337-.Ltmp2336     # Loc expr size
.Ltmp2336:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240~"                 # -224
.Ltmp2337:
	.quad	.Ltmp39-.Lfunc_begin0
	.quad	.Ltmp40-.Lfunc_begin0
	.short	.Ltmp2339-.Ltmp2338     # Loc expr size
.Ltmp2338:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2339:
	.quad	.Ltmp40-.Lfunc_begin0
	.quad	.Ltmp41-.Lfunc_begin0
	.short	.Ltmp2341-.Ltmp2340     # Loc expr size
.Ltmp2340:
	.byte	92                      # DW_OP_reg12
.Ltmp2341:
	.quad	.Ltmp41-.Lfunc_begin0
	.quad	.Ltmp42-.Lfunc_begin0
	.short	.Ltmp2343-.Ltmp2342     # Loc expr size
.Ltmp2342:
	.byte	95                      # DW_OP_reg15
.Ltmp2343:
	.quad	.Ltmp42-.Lfunc_begin0
	.quad	.Ltmp43-.Lfunc_begin0
	.short	.Ltmp2345-.Ltmp2344     # Loc expr size
.Ltmp2344:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2345:
	.quad	.Ltmp43-.Lfunc_begin0
	.quad	.Ltmp44-.Lfunc_begin0
	.short	.Ltmp2347-.Ltmp2346     # Loc expr size
.Ltmp2346:
	.byte	95                      # DW_OP_reg15
.Ltmp2347:
	.quad	.Ltmp44-.Lfunc_begin0
	.quad	.Ltmp45-.Lfunc_begin0
	.short	.Ltmp2349-.Ltmp2348     # Loc expr size
.Ltmp2348:
	.byte	94                      # DW_OP_reg14
.Ltmp2349:
	.quad	.Ltmp45-.Lfunc_begin0
	.quad	.Ltmp46-.Lfunc_begin0
	.short	.Ltmp2351-.Ltmp2350     # Loc expr size
.Ltmp2350:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2351:
	.quad	.Ltmp46-.Lfunc_begin0
	.quad	.Ltmp47-.Lfunc_begin0
	.short	.Ltmp2353-.Ltmp2352     # Loc expr size
.Ltmp2352:
	.byte	94                      # DW_OP_reg14
.Ltmp2353:
	.quad	.Ltmp47-.Lfunc_begin0
	.quad	.Ltmp48-.Lfunc_begin0
	.short	.Ltmp2355-.Ltmp2354     # Loc expr size
.Ltmp2354:
	.byte	92                      # DW_OP_reg12
.Ltmp2355:
	.quad	.Ltmp48-.Lfunc_begin0
	.quad	.Ltmp49-.Lfunc_begin0
	.short	.Ltmp2357-.Ltmp2356     # Loc expr size
.Ltmp2356:
	.byte	95                      # DW_OP_reg15
.Ltmp2357:
	.quad	.Ltmp49-.Lfunc_begin0
	.quad	.Ltmp50-.Lfunc_begin0
	.short	.Ltmp2359-.Ltmp2358     # Loc expr size
.Ltmp2358:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2359:
	.quad	.Ltmp50-.Lfunc_begin0
	.quad	.Ltmp51-.Lfunc_begin0
	.short	.Ltmp2361-.Ltmp2360     # Loc expr size
.Ltmp2360:
	.byte	95                      # DW_OP_reg15
.Ltmp2361:
	.quad	.Ltmp51-.Lfunc_begin0
	.quad	.Ltmp52-.Lfunc_begin0
	.short	.Ltmp2363-.Ltmp2362     # Loc expr size
.Ltmp2362:
	.byte	94                      # DW_OP_reg14
.Ltmp2363:
	.quad	.Ltmp52-.Lfunc_begin0
	.quad	.Ltmp53-.Lfunc_begin0
	.short	.Ltmp2365-.Ltmp2364     # Loc expr size
.Ltmp2364:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2365:
	.quad	.Ltmp53-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	.Ltmp2367-.Ltmp2366     # Loc expr size
.Ltmp2366:
	.byte	94                      # DW_OP_reg14
.Ltmp2367:
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp55-.Lfunc_begin0
	.short	.Ltmp2369-.Ltmp2368     # Loc expr size
.Ltmp2368:
	.byte	92                      # DW_OP_reg12
.Ltmp2369:
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp56-.Lfunc_begin0
	.short	.Ltmp2371-.Ltmp2370     # Loc expr size
.Ltmp2370:
	.byte	95                      # DW_OP_reg15
.Ltmp2371:
	.quad	.Ltmp56-.Lfunc_begin0
	.quad	.Ltmp57-.Lfunc_begin0
	.short	.Ltmp2373-.Ltmp2372     # Loc expr size
.Ltmp2372:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2373:
	.quad	.Ltmp57-.Lfunc_begin0
	.quad	.Ltmp58-.Lfunc_begin0
	.short	.Ltmp2375-.Ltmp2374     # Loc expr size
.Ltmp2374:
	.byte	95                      # DW_OP_reg15
.Ltmp2375:
	.quad	.Ltmp58-.Lfunc_begin0
	.quad	.Ltmp59-.Lfunc_begin0
	.short	.Ltmp2377-.Ltmp2376     # Loc expr size
.Ltmp2376:
	.byte	94                      # DW_OP_reg14
.Ltmp2377:
	.quad	.Ltmp59-.Lfunc_begin0
	.quad	.Ltmp60-.Lfunc_begin0
	.short	.Ltmp2379-.Ltmp2378     # Loc expr size
.Ltmp2378:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2379:
	.quad	.Ltmp60-.Lfunc_begin0
	.quad	.Ltmp61-.Lfunc_begin0
	.short	.Ltmp2381-.Ltmp2380     # Loc expr size
.Ltmp2380:
	.byte	94                      # DW_OP_reg14
.Ltmp2381:
	.quad	.Ltmp61-.Lfunc_begin0
	.quad	.Ltmp62-.Lfunc_begin0
	.short	.Ltmp2383-.Ltmp2382     # Loc expr size
.Ltmp2382:
	.byte	92                      # DW_OP_reg12
.Ltmp2383:
	.quad	.Ltmp62-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	.Ltmp2385-.Ltmp2384     # Loc expr size
.Ltmp2384:
	.byte	95                      # DW_OP_reg15
.Ltmp2385:
	.quad	.Ltmp63-.Lfunc_begin0
	.quad	.Ltmp64-.Lfunc_begin0
	.short	.Ltmp2387-.Ltmp2386     # Loc expr size
.Ltmp2386:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2387:
	.quad	.Ltmp64-.Lfunc_begin0
	.quad	.Ltmp65-.Lfunc_begin0
	.short	.Ltmp2389-.Ltmp2388     # Loc expr size
.Ltmp2388:
	.byte	95                      # DW_OP_reg15
.Ltmp2389:
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp81-.Lfunc_begin0
	.short	.Ltmp2391-.Ltmp2390     # Loc expr size
.Ltmp2390:
	.byte	85                      # DW_OP_reg5
.Ltmp2391:
	.quad	.Ltmp81-.Lfunc_begin0
	.quad	.Ltmp90-.Lfunc_begin0
	.short	.Ltmp2393-.Ltmp2392     # Loc expr size
.Ltmp2392:
	.byte	83                      # DW_OP_reg3
.Ltmp2393:
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	.Ltmp2395-.Ltmp2394     # Loc expr size
.Ltmp2394:
	.byte	84                      # DW_OP_reg4
.Ltmp2395:
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp84-.Lfunc_begin0
	.short	.Ltmp2397-.Ltmp2396     # Loc expr size
.Ltmp2396:
	.byte	92                      # DW_OP_reg12
.Ltmp2397:
	.quad	.Ltmp84-.Lfunc_begin0
	.quad	.Ltmp86-.Lfunc_begin0
	.short	.Ltmp2399-.Ltmp2398     # Loc expr size
.Ltmp2398:
	.byte	84                      # DW_OP_reg4
.Ltmp2399:
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	.Ltmp2401-.Ltmp2400     # Loc expr size
.Ltmp2400:
	.byte	81                      # DW_OP_reg1
.Ltmp2401:
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp89-.Lfunc_begin0
	.short	.Ltmp2403-.Ltmp2402     # Loc expr size
.Ltmp2402:
	.byte	94                      # DW_OP_reg14
.Ltmp2403:
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp78-.Lfunc_begin0
	.short	.Ltmp2405-.Ltmp2404     # Loc expr size
.Ltmp2404:
	.byte	82                      # DW_OP_reg2
.Ltmp2405:
	.quad	.Ltmp78-.Lfunc_begin0
	.quad	.Ltmp87-.Lfunc_begin0
	.short	.Ltmp2407-.Ltmp2406     # Loc expr size
.Ltmp2406:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360|"                 # -400
.Ltmp2407:
	.quad	.Ltmp87-.Lfunc_begin0
	.quad	.Ltmp91-.Lfunc_begin0
	.short	.Ltmp2409-.Ltmp2408     # Loc expr size
.Ltmp2408:
	.byte	93                      # DW_OP_reg13
.Ltmp2409:
	.quad	.Ltmp93-.Lfunc_begin0
	.quad	.Ltmp97-.Lfunc_begin0
	.short	.Ltmp2411-.Ltmp2410     # Loc expr size
.Ltmp2410:
	.byte	93                      # DW_OP_reg13
.Ltmp2411:
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp77-.Lfunc_begin0
	.short	.Ltmp2413-.Ltmp2412     # Loc expr size
.Ltmp2412:
	.byte	88                      # DW_OP_reg8
.Ltmp2413:
	.quad	.Ltmp77-.Lfunc_begin0
	.quad	.Ltmp85-.Lfunc_begin0
	.short	.Ltmp2415-.Ltmp2414     # Loc expr size
.Ltmp2414:
	.byte	118                     # DW_OP_breg6
	.ascii	"\370|"                 # -392
.Ltmp2415:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp91-.Lfunc_begin0
	.short	.Ltmp2417-.Ltmp2416     # Loc expr size
.Ltmp2416:
	.byte	92                      # DW_OP_reg12
.Ltmp2417:
	.quad	.Ltmp94-.Lfunc_begin0
	.quad	.Ltmp97-.Lfunc_begin0
	.short	.Ltmp2419-.Ltmp2418     # Loc expr size
.Ltmp2418:
	.byte	92                      # DW_OP_reg12
.Ltmp2419:
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.short	.Ltmp2421-.Ltmp2420     # Loc expr size
.Ltmp2420:
	.byte	89                      # DW_OP_reg9
.Ltmp2421:
	.quad	.Ltmp76-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	.Ltmp2423-.Ltmp2422     # Loc expr size
.Ltmp2422:
	.byte	118                     # DW_OP_breg6
	.ascii	"\320|"                 # -432
.Ltmp2423:
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp101-.Lfunc_begin0
	.quad	.Ltmp103-.Lfunc_begin0
	.short	.Ltmp2425-.Ltmp2424     # Loc expr size
.Ltmp2424:
	.byte	92                      # DW_OP_reg12
.Ltmp2425:
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Lfunc_begin3-.Lfunc_begin0
	.quad	.Ltmp118-.Lfunc_begin0
	.short	.Ltmp2427-.Ltmp2426     # Loc expr size
.Ltmp2426:
	.byte	85                      # DW_OP_reg5
.Ltmp2427:
	.quad	.Ltmp118-.Lfunc_begin0
	.quad	.Ltmp123-.Lfunc_begin0
	.short	.Ltmp2429-.Ltmp2428     # Loc expr size
.Ltmp2428:
	.byte	94                      # DW_OP_reg14
.Ltmp2429:
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Lfunc_begin3-.Lfunc_begin0
	.quad	.Ltmp117-.Lfunc_begin0
	.short	.Ltmp2431-.Ltmp2430     # Loc expr size
.Ltmp2430:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2431:
	.quad	.Ltmp117-.Lfunc_begin0
	.quad	.Ltmp121-.Lfunc_begin0
	.short	.Ltmp2433-.Ltmp2432     # Loc expr size
.Ltmp2432:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2433:
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Lfunc_begin3-.Lfunc_begin0
	.quad	.Ltmp116-.Lfunc_begin0
	.short	.Ltmp2435-.Ltmp2434     # Loc expr size
.Ltmp2434:
	.byte	81                      # DW_OP_reg1
.Ltmp2435:
	.quad	.Ltmp116-.Lfunc_begin0
	.quad	.Ltmp125-.Lfunc_begin0
	.short	.Ltmp2437-.Ltmp2436     # Loc expr size
.Ltmp2436:
	.byte	92                      # DW_OP_reg12
.Ltmp2437:
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp138-.Lfunc_begin0
	.short	.Ltmp2439-.Ltmp2438     # Loc expr size
.Ltmp2438:
	.byte	85                      # DW_OP_reg5
.Ltmp2439:
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	.Ltmp2441-.Ltmp2440     # Loc expr size
.Ltmp2440:
	.byte	83                      # DW_OP_reg3
.Ltmp2441:
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp137-.Lfunc_begin0
	.short	.Ltmp2443-.Ltmp2442     # Loc expr size
.Ltmp2442:
	.byte	84                      # DW_OP_reg4
.Ltmp2443:
	.quad	.Ltmp137-.Lfunc_begin0
	.quad	.Ltmp149-.Lfunc_begin0
	.short	.Ltmp2445-.Ltmp2444     # Loc expr size
.Ltmp2444:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240\177"              # -96
.Ltmp2445:
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp151-.Lfunc_begin0
	.short	.Ltmp2447-.Ltmp2446     # Loc expr size
.Ltmp2446:
	.byte	83                      # DW_OP_reg3
.Ltmp2447:
	.quad	.Ltmp151-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2449-.Ltmp2448     # Loc expr size
.Ltmp2448:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240\177"              # -96
.Ltmp2449:
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp136-.Lfunc_begin0
	.short	.Ltmp2451-.Ltmp2450     # Loc expr size
.Ltmp2450:
	.byte	81                      # DW_OP_reg1
.Ltmp2451:
	.quad	.Ltmp136-.Lfunc_begin0
	.quad	.Ltmp145-.Lfunc_begin0
	.short	.Ltmp2453-.Ltmp2452     # Loc expr size
.Ltmp2452:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250\177"              # -88
.Ltmp2453:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp147-.Lfunc_begin0
	.short	.Ltmp2455-.Ltmp2454     # Loc expr size
.Ltmp2454:
	.byte	83                      # DW_OP_reg3
.Ltmp2455:
	.quad	.Ltmp147-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2457-.Ltmp2456     # Loc expr size
.Ltmp2456:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250\177"              # -88
.Ltmp2457:
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp140-.Lfunc_begin0
	.quad	.Ltmp144-.Lfunc_begin0
	.short	.Ltmp2459-.Ltmp2458     # Loc expr size
.Ltmp2458:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp2459:
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2461-.Ltmp2460     # Loc expr size
.Ltmp2460:
	.byte	118                     # DW_OP_breg6
	.ascii	"\260\177"              # -80
.Ltmp2461:
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp141-.Lfunc_begin0
	.quad	.Ltmp172-.Lfunc_begin0
	.short	.Ltmp2463-.Ltmp2462     # Loc expr size
.Ltmp2462:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2463:
	.quad	.Ltmp172-.Lfunc_begin0
	.quad	.Ltmp175-.Lfunc_begin0
	.short	.Ltmp2465-.Ltmp2464     # Loc expr size
.Ltmp2464:
	.byte	92                      # DW_OP_reg12
.Ltmp2465:
	.quad	.Ltmp175-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	.Ltmp2467-.Ltmp2466     # Loc expr size
.Ltmp2466:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2467:
	.quad	.Ltmp177-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	.Ltmp2469-.Ltmp2468     # Loc expr size
.Ltmp2468:
	.byte	92                      # DW_OP_reg12
.Ltmp2469:
	.quad	.Ltmp179-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2471-.Ltmp2470     # Loc expr size
.Ltmp2470:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2471:
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp181-.Lfunc_begin0
	.short	.Ltmp2473-.Ltmp2472     # Loc expr size
.Ltmp2472:
	.byte	118                     # DW_OP_breg6
	.ascii	"\266\177"              # -74
.Ltmp2473:
	.quad	.Ltmp181-.Lfunc_begin0
	.quad	.Ltmp184-.Lfunc_begin0
	.short	.Ltmp2475-.Ltmp2474     # Loc expr size
.Ltmp2474:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2475:
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	.Ltmp186-.Lfunc_begin0
	.short	.Ltmp2477-.Ltmp2476     # Loc expr size
.Ltmp2476:
	.byte	118                     # DW_OP_breg6
	.ascii	"\266\177"              # -74
.Ltmp2477:
	.quad	.Ltmp186-.Lfunc_begin0
	.quad	.Ltmp187-.Lfunc_begin0
	.short	.Ltmp2479-.Ltmp2478     # Loc expr size
.Ltmp2478:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2479:
	.quad	.Ltmp187-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2481-.Ltmp2480     # Loc expr size
.Ltmp2480:
	.byte	118                     # DW_OP_breg6
	.ascii	"\266\177"              # -74
.Ltmp2481:
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Ltmp152-.Lfunc_begin0
	.short	.Ltmp2483-.Ltmp2482     # Loc expr size
.Ltmp2482:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2483:
	.quad	.Ltmp152-.Lfunc_begin0
	.quad	.Ltmp153-.Lfunc_begin0
	.short	.Ltmp2485-.Ltmp2484     # Loc expr size
.Ltmp2484:
	.byte	80                      # DW_OP_reg0
.Ltmp2485:
	.quad	.Ltmp153-.Lfunc_begin0
	.quad	.Ltmp155-.Lfunc_begin0
	.short	.Ltmp2487-.Ltmp2486     # Loc expr size
.Ltmp2486:
	.byte	95                      # DW_OP_reg15
.Ltmp2487:
	.quad	.Ltmp156-.Lfunc_begin0
	.quad	.Ltmp157-.Lfunc_begin0
	.short	.Ltmp2489-.Ltmp2488     # Loc expr size
.Ltmp2488:
	.byte	95                      # DW_OP_reg15
.Ltmp2489:
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp159-.Lfunc_begin0
	.short	.Ltmp2491-.Ltmp2490     # Loc expr size
.Ltmp2490:
	.byte	92                      # DW_OP_reg12
.Ltmp2491:
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	.Ltmp161-.Lfunc_begin0
	.short	.Ltmp2493-.Ltmp2492     # Loc expr size
.Ltmp2492:
	.byte	95                      # DW_OP_reg15
.Ltmp2493:
	.quad	.Ltmp162-.Lfunc_begin0
	.quad	.Ltmp163-.Lfunc_begin0
	.short	.Ltmp2495-.Ltmp2494     # Loc expr size
.Ltmp2494:
	.byte	92                      # DW_OP_reg12
.Ltmp2495:
	.quad	.Ltmp164-.Lfunc_begin0
	.quad	.Ltmp165-.Lfunc_begin0
	.short	.Ltmp2497-.Ltmp2496     # Loc expr size
.Ltmp2496:
	.byte	95                      # DW_OP_reg15
.Ltmp2497:
	.quad	.Ltmp165-.Lfunc_begin0
	.quad	.Ltmp166-.Lfunc_begin0
	.short	.Ltmp2499-.Ltmp2498     # Loc expr size
.Ltmp2498:
	.byte	92                      # DW_OP_reg12
.Ltmp2499:
	.quad	.Ltmp166-.Lfunc_begin0
	.quad	.Ltmp167-.Lfunc_begin0
	.short	.Ltmp2501-.Ltmp2500     # Loc expr size
.Ltmp2500:
	.byte	95                      # DW_OP_reg15
.Ltmp2501:
	.quad	.Ltmp168-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	.Ltmp2503-.Ltmp2502     # Loc expr size
.Ltmp2502:
	.byte	92                      # DW_OP_reg12
.Ltmp2503:
	.quad	.Ltmp170-.Lfunc_begin0
	.quad	.Ltmp171-.Lfunc_begin0
	.short	.Ltmp2505-.Ltmp2504     # Loc expr size
.Ltmp2504:
	.byte	92                      # DW_OP_reg12
.Ltmp2505:
	.quad	.Ltmp172-.Lfunc_begin0
	.quad	.Ltmp175-.Lfunc_begin0
	.short	.Ltmp2507-.Ltmp2506     # Loc expr size
.Ltmp2506:
	.byte	92                      # DW_OP_reg12
.Ltmp2507:
	.quad	.Ltmp175-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	.Ltmp2509-.Ltmp2508     # Loc expr size
.Ltmp2508:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2509:
	.quad	.Ltmp177-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	.Ltmp2511-.Ltmp2510     # Loc expr size
.Ltmp2510:
	.byte	92                      # DW_OP_reg12
.Ltmp2511:
	.quad	.Ltmp179-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	.Ltmp2513-.Ltmp2512     # Loc expr size
.Ltmp2512:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2513:
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp153-.Lfunc_begin0
	.quad	.Ltmp155-.Lfunc_begin0
	.short	.Ltmp2515-.Ltmp2514     # Loc expr size
.Ltmp2514:
	.byte	95                      # DW_OP_reg15
.Ltmp2515:
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	.Ltmp161-.Lfunc_begin0
	.short	.Ltmp2517-.Ltmp2516     # Loc expr size
.Ltmp2516:
	.byte	95                      # DW_OP_reg15
.Ltmp2517:
	.quad	.Ltmp166-.Lfunc_begin0
	.quad	.Ltmp167-.Lfunc_begin0
	.short	.Ltmp2519-.Ltmp2518     # Loc expr size
.Ltmp2518:
	.byte	95                      # DW_OP_reg15
.Ltmp2519:
	.quad	.Ltmp179-.Lfunc_begin0
	.quad	.Ltmp180-.Lfunc_begin0
	.short	.Ltmp2521-.Ltmp2520     # Loc expr size
.Ltmp2520:
	.byte	83                      # DW_OP_reg3
.Ltmp2521:
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp155-.Lfunc_begin0
	.quad	.Ltmp157-.Lfunc_begin0
	.short	.Ltmp2523-.Ltmp2522     # Loc expr size
.Ltmp2522:
	.byte	95                      # DW_OP_reg15
.Ltmp2523:
	.quad	.Ltmp164-.Lfunc_begin0
	.quad	.Ltmp165-.Lfunc_begin0
	.short	.Ltmp2525-.Ltmp2524     # Loc expr size
.Ltmp2524:
	.byte	95                      # DW_OP_reg15
.Ltmp2525:
	.quad	.Ltmp165-.Lfunc_begin0
	.quad	.Ltmp166-.Lfunc_begin0
	.short	.Ltmp2527-.Ltmp2526     # Loc expr size
.Ltmp2526:
	.byte	92                      # DW_OP_reg12
.Ltmp2527:
	.quad	.Ltmp168-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	.Ltmp2529-.Ltmp2528     # Loc expr size
.Ltmp2528:
	.byte	92                      # DW_OP_reg12
.Ltmp2529:
	.quad	.Ltmp170-.Lfunc_begin0
	.quad	.Ltmp171-.Lfunc_begin0
	.short	.Ltmp2531-.Ltmp2530     # Loc expr size
.Ltmp2530:
	.byte	92                      # DW_OP_reg12
.Ltmp2531:
	.quad	.Ltmp173-.Lfunc_begin0
	.quad	.Ltmp176-.Lfunc_begin0
	.short	.Ltmp2533-.Ltmp2532     # Loc expr size
.Ltmp2532:
	.byte	83                      # DW_OP_reg3
.Ltmp2533:
	.quad	.Ltmp177-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	.Ltmp2535-.Ltmp2534     # Loc expr size
.Ltmp2534:
	.byte	83                      # DW_OP_reg3
.Ltmp2535:
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp182-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	.Ltmp2537-.Ltmp2536     # Loc expr size
.Ltmp2536:
	.byte	94                      # DW_OP_reg14
.Ltmp2537:
	.quad	.Ltmp186-.Lfunc_begin0
	.quad	.Ltmp188-.Lfunc_begin0
	.short	.Ltmp2539-.Ltmp2538     # Loc expr size
.Ltmp2538:
	.byte	94                      # DW_OP_reg14
.Ltmp2539:
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Lfunc_begin5-.Lfunc_begin0
	.quad	.Ltmp201-.Lfunc_begin0
	.short	.Ltmp2541-.Ltmp2540     # Loc expr size
.Ltmp2540:
	.byte	85                      # DW_OP_reg5
.Ltmp2541:
	.quad	.Ltmp209-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	.Ltmp2543-.Ltmp2542     # Loc expr size
.Ltmp2542:
	.byte	85                      # DW_OP_reg5
.Ltmp2543:
	.quad	.Ltmp219-.Lfunc_begin0
	.quad	.Ltmp220-.Lfunc_begin0
	.short	.Ltmp2545-.Ltmp2544     # Loc expr size
.Ltmp2544:
	.byte	85                      # DW_OP_reg5
.Ltmp2545:
	.quad	.Ltmp226-.Lfunc_begin0
	.quad	.Ltmp227-.Lfunc_begin0
	.short	.Ltmp2547-.Ltmp2546     # Loc expr size
.Ltmp2546:
	.byte	85                      # DW_OP_reg5
.Ltmp2547:
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp230-.Lfunc_begin0
	.short	.Ltmp2549-.Ltmp2548     # Loc expr size
.Ltmp2548:
	.byte	85                      # DW_OP_reg5
.Ltmp2549:
	.quad	.Ltmp235-.Lfunc_begin0
	.quad	.Ltmp236-.Lfunc_begin0
	.short	.Ltmp2551-.Ltmp2550     # Loc expr size
.Ltmp2550:
	.byte	85                      # DW_OP_reg5
.Ltmp2551:
	.quad	.Ltmp238-.Lfunc_begin0
	.quad	.Ltmp239-.Lfunc_begin0
	.short	.Ltmp2553-.Ltmp2552     # Loc expr size
.Ltmp2552:
	.byte	85                      # DW_OP_reg5
.Ltmp2553:
	.quad	.Ltmp241-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	.Ltmp2555-.Ltmp2554     # Loc expr size
.Ltmp2554:
	.byte	85                      # DW_OP_reg5
.Ltmp2555:
	.quad	.Ltmp248-.Lfunc_begin0
	.quad	.Ltmp249-.Lfunc_begin0
	.short	.Ltmp2557-.Ltmp2556     # Loc expr size
.Ltmp2556:
	.byte	85                      # DW_OP_reg5
.Ltmp2557:
	.quad	.Ltmp251-.Lfunc_begin0
	.quad	.Ltmp252-.Lfunc_begin0
	.short	.Ltmp2559-.Ltmp2558     # Loc expr size
.Ltmp2558:
	.byte	85                      # DW_OP_reg5
.Ltmp2559:
	.quad	.Ltmp255-.Lfunc_begin0
	.quad	.Ltmp256-.Lfunc_begin0
	.short	.Ltmp2561-.Ltmp2560     # Loc expr size
.Ltmp2560:
	.byte	85                      # DW_OP_reg5
.Ltmp2561:
	.quad	.Ltmp258-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	.Ltmp2563-.Ltmp2562     # Loc expr size
.Ltmp2562:
	.byte	85                      # DW_OP_reg5
.Ltmp2563:
	.quad	.Ltmp266-.Lfunc_begin0
	.quad	.Ltmp268-.Lfunc_begin0
	.short	.Ltmp2565-.Ltmp2564     # Loc expr size
.Ltmp2564:
	.byte	85                      # DW_OP_reg5
.Ltmp2565:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Ltmp274-.Lfunc_begin0
	.short	.Ltmp2567-.Ltmp2566     # Loc expr size
.Ltmp2566:
	.byte	85                      # DW_OP_reg5
.Ltmp2567:
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp279-.Lfunc_begin0
	.short	.Ltmp2569-.Ltmp2568     # Loc expr size
.Ltmp2568:
	.byte	85                      # DW_OP_reg5
.Ltmp2569:
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Ltmp284-.Lfunc_begin0
	.short	.Ltmp2571-.Ltmp2570     # Loc expr size
.Ltmp2570:
	.byte	85                      # DW_OP_reg5
.Ltmp2571:
	.quad	.Ltmp294-.Lfunc_begin0
	.quad	.Ltmp295-.Lfunc_begin0
	.short	.Ltmp2573-.Ltmp2572     # Loc expr size
.Ltmp2572:
	.byte	85                      # DW_OP_reg5
.Ltmp2573:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp301-.Lfunc_begin0
	.short	.Ltmp2575-.Ltmp2574     # Loc expr size
.Ltmp2574:
	.byte	85                      # DW_OP_reg5
.Ltmp2575:
	.quad	.Ltmp304-.Lfunc_begin0
	.quad	.Ltmp305-.Lfunc_begin0
	.short	.Ltmp2577-.Ltmp2576     # Loc expr size
.Ltmp2576:
	.byte	85                      # DW_OP_reg5
.Ltmp2577:
	.quad	.Ltmp316-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	.Ltmp2579-.Ltmp2578     # Loc expr size
.Ltmp2578:
	.byte	85                      # DW_OP_reg5
.Ltmp2579:
	.quad	.Ltmp321-.Lfunc_begin0
	.quad	.Ltmp322-.Lfunc_begin0
	.short	.Ltmp2581-.Ltmp2580     # Loc expr size
.Ltmp2580:
	.byte	85                      # DW_OP_reg5
.Ltmp2581:
	.quad	.Ltmp326-.Lfunc_begin0
	.quad	.Ltmp327-.Lfunc_begin0
	.short	.Ltmp2583-.Ltmp2582     # Loc expr size
.Ltmp2582:
	.byte	85                      # DW_OP_reg5
.Ltmp2583:
	.quad	.Ltmp330-.Lfunc_begin0
	.quad	.Ltmp331-.Lfunc_begin0
	.short	.Ltmp2585-.Ltmp2584     # Loc expr size
.Ltmp2584:
	.byte	85                      # DW_OP_reg5
.Ltmp2585:
	.quad	.Ltmp334-.Lfunc_begin0
	.quad	.Ltmp335-.Lfunc_begin0
	.short	.Ltmp2587-.Ltmp2586     # Loc expr size
.Ltmp2586:
	.byte	85                      # DW_OP_reg5
.Ltmp2587:
	.quad	.Ltmp344-.Lfunc_begin0
	.quad	.Ltmp345-.Lfunc_begin0
	.short	.Ltmp2589-.Ltmp2588     # Loc expr size
.Ltmp2588:
	.byte	85                      # DW_OP_reg5
.Ltmp2589:
	.quad	.Ltmp349-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	.Ltmp2591-.Ltmp2590     # Loc expr size
.Ltmp2590:
	.byte	85                      # DW_OP_reg5
.Ltmp2591:
	.quad	.Ltmp361-.Lfunc_begin0
	.quad	.Ltmp362-.Lfunc_begin0
	.short	.Ltmp2593-.Ltmp2592     # Loc expr size
.Ltmp2592:
	.byte	85                      # DW_OP_reg5
.Ltmp2593:
	.quad	.Ltmp366-.Lfunc_begin0
	.quad	.Ltmp369-.Lfunc_begin0
	.short	.Ltmp2595-.Ltmp2594     # Loc expr size
.Ltmp2594:
	.byte	85                      # DW_OP_reg5
.Ltmp2595:
	.quad	.Ltmp370-.Lfunc_begin0
	.quad	.Ltmp371-.Lfunc_begin0
	.short	.Ltmp2597-.Ltmp2596     # Loc expr size
.Ltmp2596:
	.byte	85                      # DW_OP_reg5
.Ltmp2597:
	.quad	.Ltmp376-.Lfunc_begin0
	.quad	.Ltmp377-.Lfunc_begin0
	.short	.Ltmp2599-.Ltmp2598     # Loc expr size
.Ltmp2598:
	.byte	85                      # DW_OP_reg5
.Ltmp2599:
	.quad	.Ltmp379-.Lfunc_begin0
	.quad	.Ltmp380-.Lfunc_begin0
	.short	.Ltmp2601-.Ltmp2600     # Loc expr size
.Ltmp2600:
	.byte	85                      # DW_OP_reg5
.Ltmp2601:
	.quad	.Ltmp381-.Lfunc_begin0
	.quad	.Ltmp382-.Lfunc_begin0
	.short	.Ltmp2603-.Ltmp2602     # Loc expr size
.Ltmp2602:
	.byte	85                      # DW_OP_reg5
.Ltmp2603:
	.quad	.Ltmp383-.Lfunc_begin0
	.quad	.Ltmp384-.Lfunc_begin0
	.short	.Ltmp2605-.Ltmp2604     # Loc expr size
.Ltmp2604:
	.byte	85                      # DW_OP_reg5
.Ltmp2605:
	.quad	.Ltmp393-.Lfunc_begin0
	.quad	.Ltmp394-.Lfunc_begin0
	.short	.Ltmp2607-.Ltmp2606     # Loc expr size
.Ltmp2606:
	.byte	85                      # DW_OP_reg5
.Ltmp2607:
	.quad	.Ltmp396-.Lfunc_begin0
	.quad	.Ltmp397-.Lfunc_begin0
	.short	.Ltmp2609-.Ltmp2608     # Loc expr size
.Ltmp2608:
	.byte	85                      # DW_OP_reg5
.Ltmp2609:
	.quad	.Ltmp398-.Lfunc_begin0
	.quad	.Ltmp399-.Lfunc_begin0
	.short	.Ltmp2611-.Ltmp2610     # Loc expr size
.Ltmp2610:
	.byte	85                      # DW_OP_reg5
.Ltmp2611:
	.quad	.Ltmp400-.Lfunc_begin0
	.quad	.Ltmp401-.Lfunc_begin0
	.short	.Ltmp2613-.Ltmp2612     # Loc expr size
.Ltmp2612:
	.byte	85                      # DW_OP_reg5
.Ltmp2613:
	.quad	.Ltmp403-.Lfunc_begin0
	.quad	.Ltmp404-.Lfunc_begin0
	.short	.Ltmp2615-.Ltmp2614     # Loc expr size
.Ltmp2614:
	.byte	85                      # DW_OP_reg5
.Ltmp2615:
	.quad	.Ltmp406-.Lfunc_begin0
	.quad	.Ltmp407-.Lfunc_begin0
	.short	.Ltmp2617-.Ltmp2616     # Loc expr size
.Ltmp2616:
	.byte	85                      # DW_OP_reg5
.Ltmp2617:
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Ltmp411-.Lfunc_begin0
	.short	.Ltmp2619-.Ltmp2618     # Loc expr size
.Ltmp2618:
	.byte	85                      # DW_OP_reg5
.Ltmp2619:
	.quad	.Ltmp413-.Lfunc_begin0
	.quad	.Ltmp414-.Lfunc_begin0
	.short	.Ltmp2621-.Ltmp2620     # Loc expr size
.Ltmp2620:
	.byte	85                      # DW_OP_reg5
.Ltmp2621:
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp421-.Lfunc_begin0
	.short	.Ltmp2623-.Ltmp2622     # Loc expr size
.Ltmp2622:
	.byte	85                      # DW_OP_reg5
.Ltmp2623:
	.quad	.Ltmp425-.Lfunc_begin0
	.quad	.Ltmp427-.Lfunc_begin0
	.short	.Ltmp2625-.Ltmp2624     # Loc expr size
.Ltmp2624:
	.byte	85                      # DW_OP_reg5
.Ltmp2625:
	.quad	.Ltmp431-.Lfunc_begin0
	.quad	.Ltmp432-.Lfunc_begin0
	.short	.Ltmp2627-.Ltmp2626     # Loc expr size
.Ltmp2626:
	.byte	85                      # DW_OP_reg5
.Ltmp2627:
	.quad	.Ltmp434-.Lfunc_begin0
	.quad	.Ltmp436-.Lfunc_begin0
	.short	.Ltmp2629-.Ltmp2628     # Loc expr size
.Ltmp2628:
	.byte	85                      # DW_OP_reg5
.Ltmp2629:
	.quad	.Ltmp438-.Lfunc_begin0
	.quad	.Ltmp439-.Lfunc_begin0
	.short	.Ltmp2631-.Ltmp2630     # Loc expr size
.Ltmp2630:
	.byte	85                      # DW_OP_reg5
.Ltmp2631:
	.quad	.Ltmp441-.Lfunc_begin0
	.quad	.Ltmp442-.Lfunc_begin0
	.short	.Ltmp2633-.Ltmp2632     # Loc expr size
.Ltmp2632:
	.byte	85                      # DW_OP_reg5
.Ltmp2633:
	.quad	.Ltmp446-.Lfunc_begin0
	.quad	.Ltmp447-.Lfunc_begin0
	.short	.Ltmp2635-.Ltmp2634     # Loc expr size
.Ltmp2634:
	.byte	85                      # DW_OP_reg5
.Ltmp2635:
	.quad	.Ltmp452-.Lfunc_begin0
	.quad	.Ltmp453-.Lfunc_begin0
	.short	.Ltmp2637-.Ltmp2636     # Loc expr size
.Ltmp2636:
	.byte	85                      # DW_OP_reg5
.Ltmp2637:
	.quad	.Ltmp455-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.short	.Ltmp2639-.Ltmp2638     # Loc expr size
.Ltmp2638:
	.byte	85                      # DW_OP_reg5
.Ltmp2639:
	.quad	.Ltmp464-.Lfunc_begin0
	.quad	.Ltmp465-.Lfunc_begin0
	.short	.Ltmp2641-.Ltmp2640     # Loc expr size
.Ltmp2640:
	.byte	85                      # DW_OP_reg5
.Ltmp2641:
	.quad	.Ltmp469-.Lfunc_begin0
	.quad	.Ltmp470-.Lfunc_begin0
	.short	.Ltmp2643-.Ltmp2642     # Loc expr size
.Ltmp2642:
	.byte	85                      # DW_OP_reg5
.Ltmp2643:
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.short	.Ltmp2645-.Ltmp2644     # Loc expr size
.Ltmp2644:
	.byte	85                      # DW_OP_reg5
.Ltmp2645:
	.quad	.Ltmp478-.Lfunc_begin0
	.quad	.Ltmp480-.Lfunc_begin0
	.short	.Ltmp2647-.Ltmp2646     # Loc expr size
.Ltmp2646:
	.byte	85                      # DW_OP_reg5
.Ltmp2647:
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Ltmp486-.Lfunc_begin0
	.short	.Ltmp2649-.Ltmp2648     # Loc expr size
.Ltmp2648:
	.byte	85                      # DW_OP_reg5
.Ltmp2649:
	.quad	.Ltmp488-.Lfunc_begin0
	.quad	.Ltmp489-.Lfunc_begin0
	.short	.Ltmp2651-.Ltmp2650     # Loc expr size
.Ltmp2650:
	.byte	85                      # DW_OP_reg5
.Ltmp2651:
	.quad	.Ltmp493-.Lfunc_begin0
	.quad	.Ltmp494-.Lfunc_begin0
	.short	.Ltmp2653-.Ltmp2652     # Loc expr size
.Ltmp2652:
	.byte	85                      # DW_OP_reg5
.Ltmp2653:
	.quad	.Ltmp504-.Lfunc_begin0
	.quad	.Ltmp505-.Lfunc_begin0
	.short	.Ltmp2655-.Ltmp2654     # Loc expr size
.Ltmp2654:
	.byte	85                      # DW_OP_reg5
.Ltmp2655:
	.quad	.Ltmp509-.Lfunc_begin0
	.quad	.Ltmp510-.Lfunc_begin0
	.short	.Ltmp2657-.Ltmp2656     # Loc expr size
.Ltmp2656:
	.byte	85                      # DW_OP_reg5
.Ltmp2657:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp515-.Lfunc_begin0
	.short	.Ltmp2659-.Ltmp2658     # Loc expr size
.Ltmp2658:
	.byte	85                      # DW_OP_reg5
.Ltmp2659:
	.quad	.Ltmp518-.Lfunc_begin0
	.quad	.Ltmp520-.Lfunc_begin0
	.short	.Ltmp2661-.Ltmp2660     # Loc expr size
.Ltmp2660:
	.byte	85                      # DW_OP_reg5
.Ltmp2661:
	.quad	.Ltmp523-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	.Ltmp2663-.Ltmp2662     # Loc expr size
.Ltmp2662:
	.byte	85                      # DW_OP_reg5
.Ltmp2663:
	.quad	.Ltmp527-.Lfunc_begin0
	.quad	.Ltmp528-.Lfunc_begin0
	.short	.Ltmp2665-.Ltmp2664     # Loc expr size
.Ltmp2664:
	.byte	85                      # DW_OP_reg5
.Ltmp2665:
	.quad	.Ltmp532-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.short	.Ltmp2667-.Ltmp2666     # Loc expr size
.Ltmp2666:
	.byte	85                      # DW_OP_reg5
.Ltmp2667:
	.quad	.Ltmp542-.Lfunc_begin0
	.quad	.Ltmp544-.Lfunc_begin0
	.short	.Ltmp2669-.Ltmp2668     # Loc expr size
.Ltmp2668:
	.byte	85                      # DW_OP_reg5
.Ltmp2669:
	.quad	.Ltmp547-.Lfunc_begin0
	.quad	.Ltmp550-.Lfunc_begin0
	.short	.Ltmp2671-.Ltmp2670     # Loc expr size
.Ltmp2670:
	.byte	85                      # DW_OP_reg5
.Ltmp2671:
	.quad	.Ltmp554-.Lfunc_begin0
	.quad	.Ltmp555-.Lfunc_begin0
	.short	.Ltmp2673-.Ltmp2672     # Loc expr size
.Ltmp2672:
	.byte	85                      # DW_OP_reg5
.Ltmp2673:
	.quad	.Ltmp558-.Lfunc_begin0
	.quad	.Ltmp559-.Lfunc_begin0
	.short	.Ltmp2675-.Ltmp2674     # Loc expr size
.Ltmp2674:
	.byte	85                      # DW_OP_reg5
.Ltmp2675:
	.quad	.Ltmp560-.Lfunc_begin0
	.quad	.Ltmp561-.Lfunc_begin0
	.short	.Ltmp2677-.Ltmp2676     # Loc expr size
.Ltmp2676:
	.byte	85                      # DW_OP_reg5
.Ltmp2677:
	.quad	.Ltmp565-.Lfunc_begin0
	.quad	.Ltmp567-.Lfunc_begin0
	.short	.Ltmp2679-.Ltmp2678     # Loc expr size
.Ltmp2678:
	.byte	85                      # DW_OP_reg5
.Ltmp2679:
	.quad	.Ltmp569-.Lfunc_begin0
	.quad	.Ltmp570-.Lfunc_begin0
	.short	.Ltmp2681-.Ltmp2680     # Loc expr size
.Ltmp2680:
	.byte	85                      # DW_OP_reg5
.Ltmp2681:
	.quad	.Ltmp574-.Lfunc_begin0
	.quad	.Ltmp575-.Lfunc_begin0
	.short	.Ltmp2683-.Ltmp2682     # Loc expr size
.Ltmp2682:
	.byte	85                      # DW_OP_reg5
.Ltmp2683:
	.quad	.Ltmp584-.Lfunc_begin0
	.quad	.Ltmp585-.Lfunc_begin0
	.short	.Ltmp2685-.Ltmp2684     # Loc expr size
.Ltmp2684:
	.byte	85                      # DW_OP_reg5
.Ltmp2685:
	.quad	.Ltmp588-.Lfunc_begin0
	.quad	.Ltmp589-.Lfunc_begin0
	.short	.Ltmp2687-.Ltmp2686     # Loc expr size
.Ltmp2686:
	.byte	85                      # DW_OP_reg5
.Ltmp2687:
	.quad	.Ltmp590-.Lfunc_begin0
	.quad	.Ltmp591-.Lfunc_begin0
	.short	.Ltmp2689-.Ltmp2688     # Loc expr size
.Ltmp2688:
	.byte	85                      # DW_OP_reg5
.Ltmp2689:
	.quad	.Ltmp595-.Lfunc_begin0
	.quad	.Ltmp596-.Lfunc_begin0
	.short	.Ltmp2691-.Ltmp2690     # Loc expr size
.Ltmp2690:
	.byte	85                      # DW_OP_reg5
.Ltmp2691:
	.quad	.Ltmp599-.Lfunc_begin0
	.quad	.Ltmp600-.Lfunc_begin0
	.short	.Ltmp2693-.Ltmp2692     # Loc expr size
.Ltmp2692:
	.byte	85                      # DW_OP_reg5
.Ltmp2693:
	.quad	.Ltmp601-.Lfunc_begin0
	.quad	.Ltmp602-.Lfunc_begin0
	.short	.Ltmp2695-.Ltmp2694     # Loc expr size
.Ltmp2694:
	.byte	85                      # DW_OP_reg5
.Ltmp2695:
	.quad	.Ltmp606-.Lfunc_begin0
	.quad	.Ltmp608-.Lfunc_begin0
	.short	.Ltmp2697-.Ltmp2696     # Loc expr size
.Ltmp2696:
	.byte	85                      # DW_OP_reg5
.Ltmp2697:
	.quad	.Ltmp610-.Lfunc_begin0
	.quad	.Ltmp611-.Lfunc_begin0
	.short	.Ltmp2699-.Ltmp2698     # Loc expr size
.Ltmp2698:
	.byte	85                      # DW_OP_reg5
.Ltmp2699:
	.quad	.Ltmp614-.Lfunc_begin0
	.quad	.Ltmp615-.Lfunc_begin0
	.short	.Ltmp2701-.Ltmp2700     # Loc expr size
.Ltmp2700:
	.byte	85                      # DW_OP_reg5
.Ltmp2701:
	.quad	.Ltmp623-.Lfunc_begin0
	.quad	.Ltmp624-.Lfunc_begin0
	.short	.Ltmp2703-.Ltmp2702     # Loc expr size
.Ltmp2702:
	.byte	85                      # DW_OP_reg5
.Ltmp2703:
	.quad	.Ltmp627-.Lfunc_begin0
	.quad	.Ltmp628-.Lfunc_begin0
	.short	.Ltmp2705-.Ltmp2704     # Loc expr size
.Ltmp2704:
	.byte	85                      # DW_OP_reg5
.Ltmp2705:
	.quad	.Ltmp629-.Lfunc_begin0
	.quad	.Ltmp630-.Lfunc_begin0
	.short	.Ltmp2707-.Ltmp2706     # Loc expr size
.Ltmp2706:
	.byte	85                      # DW_OP_reg5
.Ltmp2707:
	.quad	.Ltmp634-.Lfunc_begin0
	.quad	.Ltmp635-.Lfunc_begin0
	.short	.Ltmp2709-.Ltmp2708     # Loc expr size
.Ltmp2708:
	.byte	85                      # DW_OP_reg5
.Ltmp2709:
	.quad	.Ltmp638-.Lfunc_begin0
	.quad	.Ltmp639-.Lfunc_begin0
	.short	.Ltmp2711-.Ltmp2710     # Loc expr size
.Ltmp2710:
	.byte	85                      # DW_OP_reg5
.Ltmp2711:
	.quad	.Ltmp640-.Lfunc_begin0
	.quad	.Ltmp641-.Lfunc_begin0
	.short	.Ltmp2713-.Ltmp2712     # Loc expr size
.Ltmp2712:
	.byte	85                      # DW_OP_reg5
.Ltmp2713:
	.quad	.Ltmp645-.Lfunc_begin0
	.quad	.Ltmp647-.Lfunc_begin0
	.short	.Ltmp2715-.Ltmp2714     # Loc expr size
.Ltmp2714:
	.byte	85                      # DW_OP_reg5
.Ltmp2715:
	.quad	.Ltmp649-.Lfunc_begin0
	.quad	.Ltmp650-.Lfunc_begin0
	.short	.Ltmp2717-.Ltmp2716     # Loc expr size
.Ltmp2716:
	.byte	85                      # DW_OP_reg5
.Ltmp2717:
	.quad	.Ltmp653-.Lfunc_begin0
	.quad	.Ltmp654-.Lfunc_begin0
	.short	.Ltmp2719-.Ltmp2718     # Loc expr size
.Ltmp2718:
	.byte	85                      # DW_OP_reg5
.Ltmp2719:
	.quad	.Ltmp662-.Lfunc_begin0
	.quad	.Ltmp663-.Lfunc_begin0
	.short	.Ltmp2721-.Ltmp2720     # Loc expr size
.Ltmp2720:
	.byte	85                      # DW_OP_reg5
.Ltmp2721:
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp667-.Lfunc_begin0
	.short	.Ltmp2723-.Ltmp2722     # Loc expr size
.Ltmp2722:
	.byte	85                      # DW_OP_reg5
.Ltmp2723:
	.quad	.Ltmp668-.Lfunc_begin0
	.quad	.Ltmp669-.Lfunc_begin0
	.short	.Ltmp2725-.Ltmp2724     # Loc expr size
.Ltmp2724:
	.byte	85                      # DW_OP_reg5
.Ltmp2725:
	.quad	.Ltmp673-.Lfunc_begin0
	.quad	.Ltmp674-.Lfunc_begin0
	.short	.Ltmp2727-.Ltmp2726     # Loc expr size
.Ltmp2726:
	.byte	85                      # DW_OP_reg5
.Ltmp2727:
	.quad	.Ltmp677-.Lfunc_begin0
	.quad	.Ltmp678-.Lfunc_begin0
	.short	.Ltmp2729-.Ltmp2728     # Loc expr size
.Ltmp2728:
	.byte	85                      # DW_OP_reg5
.Ltmp2729:
	.quad	.Ltmp679-.Lfunc_begin0
	.quad	.Ltmp680-.Lfunc_begin0
	.short	.Ltmp2731-.Ltmp2730     # Loc expr size
.Ltmp2730:
	.byte	85                      # DW_OP_reg5
.Ltmp2731:
	.quad	.Ltmp684-.Lfunc_begin0
	.quad	.Ltmp686-.Lfunc_begin0
	.short	.Ltmp2733-.Ltmp2732     # Loc expr size
.Ltmp2732:
	.byte	85                      # DW_OP_reg5
.Ltmp2733:
	.quad	.Ltmp688-.Lfunc_begin0
	.quad	.Ltmp689-.Lfunc_begin0
	.short	.Ltmp2735-.Ltmp2734     # Loc expr size
.Ltmp2734:
	.byte	85                      # DW_OP_reg5
.Ltmp2735:
	.quad	.Ltmp692-.Lfunc_begin0
	.quad	.Ltmp693-.Lfunc_begin0
	.short	.Ltmp2737-.Ltmp2736     # Loc expr size
.Ltmp2736:
	.byte	85                      # DW_OP_reg5
.Ltmp2737:
	.quad	.Ltmp701-.Lfunc_begin0
	.quad	.Ltmp702-.Lfunc_begin0
	.short	.Ltmp2739-.Ltmp2738     # Loc expr size
.Ltmp2738:
	.byte	85                      # DW_OP_reg5
.Ltmp2739:
	.quad	.Ltmp705-.Lfunc_begin0
	.quad	.Ltmp706-.Lfunc_begin0
	.short	.Ltmp2741-.Ltmp2740     # Loc expr size
.Ltmp2740:
	.byte	85                      # DW_OP_reg5
.Ltmp2741:
	.quad	.Ltmp707-.Lfunc_begin0
	.quad	.Ltmp708-.Lfunc_begin0
	.short	.Ltmp2743-.Ltmp2742     # Loc expr size
.Ltmp2742:
	.byte	85                      # DW_OP_reg5
.Ltmp2743:
	.quad	.Ltmp712-.Lfunc_begin0
	.quad	.Ltmp713-.Lfunc_begin0
	.short	.Ltmp2745-.Ltmp2744     # Loc expr size
.Ltmp2744:
	.byte	85                      # DW_OP_reg5
.Ltmp2745:
	.quad	.Ltmp716-.Lfunc_begin0
	.quad	.Ltmp717-.Lfunc_begin0
	.short	.Ltmp2747-.Ltmp2746     # Loc expr size
.Ltmp2746:
	.byte	85                      # DW_OP_reg5
.Ltmp2747:
	.quad	.Ltmp718-.Lfunc_begin0
	.quad	.Ltmp719-.Lfunc_begin0
	.short	.Ltmp2749-.Ltmp2748     # Loc expr size
.Ltmp2748:
	.byte	85                      # DW_OP_reg5
.Ltmp2749:
	.quad	.Ltmp723-.Lfunc_begin0
	.quad	.Ltmp725-.Lfunc_begin0
	.short	.Ltmp2751-.Ltmp2750     # Loc expr size
.Ltmp2750:
	.byte	85                      # DW_OP_reg5
.Ltmp2751:
	.quad	.Ltmp727-.Lfunc_begin0
	.quad	.Ltmp728-.Lfunc_begin0
	.short	.Ltmp2753-.Ltmp2752     # Loc expr size
.Ltmp2752:
	.byte	85                      # DW_OP_reg5
.Ltmp2753:
	.quad	.Ltmp731-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	.Ltmp2755-.Ltmp2754     # Loc expr size
.Ltmp2754:
	.byte	85                      # DW_OP_reg5
.Ltmp2755:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp741-.Lfunc_begin0
	.short	.Ltmp2757-.Ltmp2756     # Loc expr size
.Ltmp2756:
	.byte	85                      # DW_OP_reg5
.Ltmp2757:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp746-.Lfunc_begin0
	.short	.Ltmp2759-.Ltmp2758     # Loc expr size
.Ltmp2758:
	.byte	85                      # DW_OP_reg5
.Ltmp2759:
	.quad	.Ltmp750-.Lfunc_begin0
	.quad	.Ltmp751-.Lfunc_begin0
	.short	.Ltmp2761-.Ltmp2760     # Loc expr size
.Ltmp2760:
	.byte	85                      # DW_OP_reg5
.Ltmp2761:
	.quad	.Ltmp754-.Lfunc_begin0
	.quad	.Ltmp756-.Lfunc_begin0
	.short	.Ltmp2763-.Ltmp2762     # Loc expr size
.Ltmp2762:
	.byte	85                      # DW_OP_reg5
.Ltmp2763:
	.quad	.Ltmp760-.Lfunc_begin0
	.quad	.Ltmp762-.Lfunc_begin0
	.short	.Ltmp2765-.Ltmp2764     # Loc expr size
.Ltmp2764:
	.byte	85                      # DW_OP_reg5
.Ltmp2765:
	.quad	.Ltmp764-.Lfunc_begin0
	.quad	.Ltmp765-.Lfunc_begin0
	.short	.Ltmp2767-.Ltmp2766     # Loc expr size
.Ltmp2766:
	.byte	85                      # DW_OP_reg5
.Ltmp2767:
	.quad	.Ltmp768-.Lfunc_begin0
	.quad	.Ltmp769-.Lfunc_begin0
	.short	.Ltmp2769-.Ltmp2768     # Loc expr size
.Ltmp2768:
	.byte	85                      # DW_OP_reg5
.Ltmp2769:
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Lfunc_begin5-.Lfunc_begin0
	.quad	.Ltmp200-.Lfunc_begin0
	.short	.Ltmp2771-.Ltmp2770     # Loc expr size
.Ltmp2770:
	.byte	84                      # DW_OP_reg4
.Ltmp2771:
	.quad	.Ltmp200-.Lfunc_begin0
	.quad	.Ltmp203-.Lfunc_begin0
	.short	.Ltmp2773-.Ltmp2772     # Loc expr size
.Ltmp2772:
	.byte	92                      # DW_OP_reg12
.Ltmp2773:
	.quad	.Ltmp203-.Lfunc_begin0
	.quad	.Ltmp204-.Lfunc_begin0
	.short	.Ltmp2775-.Ltmp2774     # Loc expr size
.Ltmp2774:
	.byte	85                      # DW_OP_reg5
.Ltmp2775:
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Lfunc_begin5-.Lfunc_begin0
	.quad	.Ltmp199-.Lfunc_begin0
	.short	.Ltmp2777-.Ltmp2776     # Loc expr size
.Ltmp2776:
	.byte	81                      # DW_OP_reg1
.Ltmp2777:
	.quad	.Ltmp199-.Lfunc_begin0
	.quad	.Ltmp210-.Lfunc_begin0
	.short	.Ltmp2779-.Ltmp2778     # Loc expr size
.Ltmp2778:
	.byte	83                      # DW_OP_reg3
.Ltmp2779:
	.quad	.Ltmp210-.Lfunc_begin0
	.quad	.Ltmp366-.Lfunc_begin0
	.short	.Ltmp2781-.Ltmp2780     # Loc expr size
.Ltmp2780:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2781:
	.quad	.Ltmp366-.Lfunc_begin0
	.quad	.Ltmp367-.Lfunc_begin0
	.short	.Ltmp2783-.Ltmp2782     # Loc expr size
.Ltmp2782:
	.byte	83                      # DW_OP_reg3
.Ltmp2783:
	.quad	.Ltmp367-.Lfunc_begin0
	.quad	.Ltmp372-.Lfunc_begin0
	.short	.Ltmp2785-.Ltmp2784     # Loc expr size
.Ltmp2784:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2785:
	.quad	.Ltmp372-.Lfunc_begin0
	.quad	.Ltmp374-.Lfunc_begin0
	.short	.Ltmp2787-.Ltmp2786     # Loc expr size
.Ltmp2786:
	.byte	83                      # DW_OP_reg3
.Ltmp2787:
	.quad	.Ltmp374-.Lfunc_begin0
	.quad	.Ltmp402-.Lfunc_begin0
	.short	.Ltmp2789-.Ltmp2788     # Loc expr size
.Ltmp2788:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2789:
	.quad	.Ltmp402-.Lfunc_begin0
	.quad	.Ltmp416-.Lfunc_begin0
	.short	.Ltmp2791-.Ltmp2790     # Loc expr size
.Ltmp2790:
	.byte	95                      # DW_OP_reg15
.Ltmp2791:
	.quad	.Ltmp417-.Lfunc_begin0
	.quad	.Ltmp452-.Lfunc_begin0
	.short	.Ltmp2793-.Ltmp2792     # Loc expr size
.Ltmp2792:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2793:
	.quad	.Ltmp452-.Lfunc_begin0
	.quad	.Ltmp460-.Lfunc_begin0
	.short	.Ltmp2795-.Ltmp2794     # Loc expr size
.Ltmp2794:
	.byte	95                      # DW_OP_reg15
.Ltmp2795:
	.quad	.Ltmp460-.Lfunc_begin0
	.quad	.Ltmp495-.Lfunc_begin0
	.short	.Ltmp2797-.Ltmp2796     # Loc expr size
.Ltmp2796:
	.byte	93                      # DW_OP_reg13
.Ltmp2797:
	.quad	.Ltmp495-.Lfunc_begin0
	.quad	.Ltmp500-.Lfunc_begin0
	.short	.Ltmp2799-.Ltmp2798     # Loc expr size
.Ltmp2798:
	.byte	83                      # DW_OP_reg3
.Ltmp2799:
	.quad	.Ltmp500-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.short	.Ltmp2801-.Ltmp2800     # Loc expr size
.Ltmp2800:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2801:
	.quad	.Ltmp534-.Lfunc_begin0
	.quad	.Ltmp538-.Lfunc_begin0
	.short	.Ltmp2803-.Ltmp2802     # Loc expr size
.Ltmp2802:
	.byte	83                      # DW_OP_reg3
.Ltmp2803:
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp576-.Lfunc_begin0
	.short	.Ltmp2805-.Ltmp2804     # Loc expr size
.Ltmp2804:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2805:
	.quad	.Ltmp576-.Lfunc_begin0
	.quad	.Ltmp580-.Lfunc_begin0
	.short	.Ltmp2807-.Ltmp2806     # Loc expr size
.Ltmp2806:
	.byte	83                      # DW_OP_reg3
.Ltmp2807:
	.quad	.Ltmp581-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	.Ltmp2809-.Ltmp2808     # Loc expr size
.Ltmp2808:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2809:
	.quad	.Ltmp616-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.short	.Ltmp2811-.Ltmp2810     # Loc expr size
.Ltmp2810:
	.byte	83                      # DW_OP_reg3
.Ltmp2811:
	.quad	.Ltmp620-.Lfunc_begin0
	.quad	.Ltmp655-.Lfunc_begin0
	.short	.Ltmp2813-.Ltmp2812     # Loc expr size
.Ltmp2812:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2813:
	.quad	.Ltmp655-.Lfunc_begin0
	.quad	.Ltmp659-.Lfunc_begin0
	.short	.Ltmp2815-.Ltmp2814     # Loc expr size
.Ltmp2814:
	.byte	83                      # DW_OP_reg3
.Ltmp2815:
	.quad	.Ltmp659-.Lfunc_begin0
	.quad	.Ltmp694-.Lfunc_begin0
	.short	.Ltmp2817-.Ltmp2816     # Loc expr size
.Ltmp2816:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2817:
	.quad	.Ltmp694-.Lfunc_begin0
	.quad	.Ltmp698-.Lfunc_begin0
	.short	.Ltmp2819-.Ltmp2818     # Loc expr size
.Ltmp2818:
	.byte	83                      # DW_OP_reg3
.Ltmp2819:
	.quad	.Ltmp698-.Lfunc_begin0
	.quad	.Ltmp733-.Lfunc_begin0
	.short	.Ltmp2821-.Ltmp2820     # Loc expr size
.Ltmp2820:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2821:
	.quad	.Ltmp733-.Lfunc_begin0
	.quad	.Ltmp737-.Lfunc_begin0
	.short	.Ltmp2823-.Ltmp2822     # Loc expr size
.Ltmp2822:
	.byte	83                      # DW_OP_reg3
.Ltmp2823:
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp202-.Lfunc_begin0
	.quad	.Ltmp206-.Lfunc_begin0
	.short	.Ltmp2825-.Ltmp2824     # Loc expr size
.Ltmp2824:
	.byte	94                      # DW_OP_reg14
.Ltmp2825:
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp215-.Lfunc_begin0
	.quad	.Ltmp218-.Lfunc_begin0
	.short	.Ltmp2827-.Ltmp2826     # Loc expr size
.Ltmp2826:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2827:
	.quad	.Ltmp263-.Lfunc_begin0
	.quad	.Ltmp266-.Lfunc_begin0
	.short	.Ltmp2829-.Ltmp2828     # Loc expr size
.Ltmp2828:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2829:
	.quad	.Ltmp267-.Lfunc_begin0
	.quad	.Ltmp272-.Lfunc_begin0
	.short	.Ltmp2831-.Ltmp2830     # Loc expr size
.Ltmp2830:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2831:
	.quad	.Ltmp273-.Lfunc_begin0
	.quad	.Ltmp276-.Lfunc_begin0
	.short	.Ltmp2833-.Ltmp2832     # Loc expr size
.Ltmp2832:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2833:
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp283-.Lfunc_begin0
	.short	.Ltmp2835-.Ltmp2834     # Loc expr size
.Ltmp2834:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2835:
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp215-.Lfunc_begin0
	.quad	.Ltmp228-.Lfunc_begin0
	.short	.Ltmp2837-.Ltmp2836     # Loc expr size
.Ltmp2836:
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp2837:
	.quad	.Ltmp228-.Lfunc_begin0
	.quad	.Ltmp240-.Lfunc_begin0
	.short	.Ltmp2839-.Ltmp2838     # Loc expr size
.Ltmp2838:
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
.Ltmp2839:
	.quad	.Ltmp240-.Lfunc_begin0
	.quad	.Ltmp368-.Lfunc_begin0
	.short	.Ltmp2841-.Ltmp2840     # Loc expr size
.Ltmp2840:
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp2841:
	.quad	.Ltmp368-.Lfunc_begin0
	.quad	.Ltmp391-.Lfunc_begin0
	.short	.Ltmp2843-.Ltmp2842     # Loc expr size
.Ltmp2842:
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
.Ltmp2843:
	.quad	.Ltmp391-.Lfunc_begin0
	.quad	.Ltmp393-.Lfunc_begin0
	.short	.Ltmp2845-.Ltmp2844     # Loc expr size
.Ltmp2844:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp2845:
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp254-.Lfunc_begin0
	.quad	.Ltmp255-.Lfunc_begin0
	.short	.Ltmp2847-.Ltmp2846     # Loc expr size
.Ltmp2846:
	.byte	93                      # DW_OP_reg13
.Ltmp2847:
	.quad	.Ltmp385-.Lfunc_begin0
	.quad	.Ltmp386-.Lfunc_begin0
	.short	.Ltmp2849-.Ltmp2848     # Loc expr size
.Ltmp2848:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240~"                 # -224
.Ltmp2849:
	.quad	.Ltmp386-.Lfunc_begin0
	.quad	.Ltmp389-.Lfunc_begin0
	.short	.Ltmp2851-.Ltmp2850     # Loc expr size
.Ltmp2850:
	.byte	83                      # DW_OP_reg3
.Ltmp2851:
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp313-.Lfunc_begin0
	.quad	.Ltmp319-.Lfunc_begin0
	.short	.Ltmp2853-.Ltmp2852     # Loc expr size
.Ltmp2852:
	.byte	95                      # DW_OP_reg15
.Ltmp2853:
	.quad	.Ltmp341-.Lfunc_begin0
	.quad	.Ltmp347-.Lfunc_begin0
	.short	.Ltmp2855-.Ltmp2854     # Loc expr size
.Ltmp2854:
	.byte	93                      # DW_OP_reg13
.Ltmp2855:
	.quad	.Ltmp358-.Lfunc_begin0
	.quad	.Ltmp364-.Lfunc_begin0
	.short	.Ltmp2857-.Ltmp2856     # Loc expr size
.Ltmp2856:
	.byte	95                      # DW_OP_reg15
.Ltmp2857:
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp406-.Lfunc_begin0
	.quad	.Ltmp410-.Lfunc_begin0
	.short	.Ltmp2859-.Ltmp2858     # Loc expr size
.Ltmp2858:
	.byte	95                      # DW_OP_reg15
.Ltmp2859:
	.quad	.Ltmp416-.Lfunc_begin0
	.quad	.Ltmp417-.Lfunc_begin0
	.short	.Ltmp2861-.Ltmp2860     # Loc expr size
.Ltmp2860:
	.byte	95                      # DW_OP_reg15
.Ltmp2861:
	.quad	.Ltmp417-.Lfunc_begin0
	.quad	.Ltmp452-.Lfunc_begin0
	.short	.Ltmp2863-.Ltmp2862     # Loc expr size
.Ltmp2862:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp2863:
	.quad	.Ltmp452-.Lfunc_begin0
	.quad	.Ltmp456-.Lfunc_begin0
	.short	.Ltmp2865-.Ltmp2864     # Loc expr size
.Ltmp2864:
	.byte	95                      # DW_OP_reg15
.Ltmp2865:
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp416-.Lfunc_begin0
	.quad	.Ltmp425-.Lfunc_begin0
	.short	.Ltmp2867-.Ltmp2866     # Loc expr size
.Ltmp2866:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2867:
	.quad	.Ltmp426-.Lfunc_begin0
	.quad	.Ltmp429-.Lfunc_begin0
	.short	.Ltmp2869-.Ltmp2868     # Loc expr size
.Ltmp2868:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2869:
	.quad	.Ltmp431-.Lfunc_begin0
	.quad	.Ltmp434-.Lfunc_begin0
	.short	.Ltmp2871-.Ltmp2870     # Loc expr size
.Ltmp2870:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2871:
	.quad	.Ltmp435-.Lfunc_begin0
	.quad	.Ltmp438-.Lfunc_begin0
	.short	.Ltmp2873-.Ltmp2872     # Loc expr size
.Ltmp2872:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2873:
	.quad	.Ltmp438-.Lfunc_begin0
	.quad	.Ltmp444-.Lfunc_begin0
	.short	.Ltmp2875-.Ltmp2874     # Loc expr size
.Ltmp2874:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2875:
	.quad	.Ltmp446-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	.Ltmp2877-.Ltmp2876     # Loc expr size
.Ltmp2876:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2877:
	.quad	.Ltmp449-.Lfunc_begin0
	.quad	.Ltmp451-.Lfunc_begin0
	.short	.Ltmp2879-.Ltmp2878     # Loc expr size
.Ltmp2878:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp2879:
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp458-.Lfunc_begin0
	.quad	.Ltmp460-.Lfunc_begin0
	.short	.Ltmp2881-.Ltmp2880     # Loc expr size
.Ltmp2880:
	.byte	95                      # DW_OP_reg15
.Ltmp2881:
	.quad	.Ltmp460-.Lfunc_begin0
	.quad	.Ltmp484-.Lfunc_begin0
	.short	.Ltmp2883-.Ltmp2882     # Loc expr size
.Ltmp2882:
	.byte	93                      # DW_OP_reg13
.Ltmp2883:
	.quad	.Ltmp485-.Lfunc_begin0
	.quad	.Ltmp495-.Lfunc_begin0
	.short	.Ltmp2885-.Ltmp2884     # Loc expr size
.Ltmp2884:
	.byte	93                      # DW_OP_reg13
.Ltmp2885:
	.quad	.Ltmp495-.Lfunc_begin0
	.quad	.Ltmp497-.Lfunc_begin0
	.short	.Ltmp2887-.Ltmp2886     # Loc expr size
.Ltmp2886:
	.byte	83                      # DW_OP_reg3
.Ltmp2887:
	.quad	.Ltmp497-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	.Ltmp2889-.Ltmp2888     # Loc expr size
.Ltmp2888:
	.byte	93                      # DW_OP_reg13
.Ltmp2889:
	.quad	.Ltmp524-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	.Ltmp2891-.Ltmp2890     # Loc expr size
.Ltmp2890:
	.byte	83                      # DW_OP_reg3
.Ltmp2891:
	.quad	.Ltmp527-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.short	.Ltmp2893-.Ltmp2892     # Loc expr size
.Ltmp2892:
	.byte	83                      # DW_OP_reg3
.Ltmp2893:
	.quad	.Ltmp535-.Lfunc_begin0
	.quad	.Ltmp543-.Lfunc_begin0
	.short	.Ltmp2895-.Ltmp2894     # Loc expr size
.Ltmp2894:
	.byte	94                      # DW_OP_reg14
.Ltmp2895:
	.quad	.Ltmp543-.Lfunc_begin0
	.quad	.Ltmp547-.Lfunc_begin0
	.short	.Ltmp2897-.Ltmp2896     # Loc expr size
.Ltmp2896:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2897:
	.quad	.Ltmp547-.Lfunc_begin0
	.quad	.Ltmp548-.Lfunc_begin0
	.short	.Ltmp2899-.Ltmp2898     # Loc expr size
.Ltmp2898:
	.byte	94                      # DW_OP_reg14
.Ltmp2899:
	.quad	.Ltmp548-.Lfunc_begin0
	.quad	.Ltmp560-.Lfunc_begin0
	.short	.Ltmp2901-.Ltmp2900     # Loc expr size
.Ltmp2900:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2901:
	.quad	.Ltmp560-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	.Ltmp2903-.Ltmp2902     # Loc expr size
.Ltmp2902:
	.byte	94                      # DW_OP_reg14
.Ltmp2903:
	.quad	.Ltmp566-.Lfunc_begin0
	.quad	.Ltmp577-.Lfunc_begin0
	.short	.Ltmp2905-.Ltmp2904     # Loc expr size
.Ltmp2904:
	.byte	94                      # DW_OP_reg14
.Ltmp2905:
	.quad	.Ltmp577-.Lfunc_begin0
	.quad	.Ltmp578-.Lfunc_begin0
	.short	.Ltmp2907-.Ltmp2906     # Loc expr size
.Ltmp2906:
	.byte	85                      # DW_OP_reg5
.Ltmp2907:
	.quad	.Ltmp578-.Lfunc_begin0
	.quad	.Ltmp601-.Lfunc_begin0
	.short	.Ltmp2909-.Ltmp2908     # Loc expr size
.Ltmp2908:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2909:
	.quad	.Ltmp601-.Lfunc_begin0
	.quad	.Ltmp606-.Lfunc_begin0
	.short	.Ltmp2911-.Ltmp2910     # Loc expr size
.Ltmp2910:
	.byte	83                      # DW_OP_reg3
.Ltmp2911:
	.quad	.Ltmp607-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	.Ltmp2913-.Ltmp2912     # Loc expr size
.Ltmp2912:
	.byte	83                      # DW_OP_reg3
.Ltmp2913:
	.quad	.Ltmp617-.Lfunc_begin0
	.quad	.Ltmp618-.Lfunc_begin0
	.short	.Ltmp2915-.Ltmp2914     # Loc expr size
.Ltmp2914:
	.byte	85                      # DW_OP_reg5
.Ltmp2915:
	.quad	.Ltmp618-.Lfunc_begin0
	.quad	.Ltmp640-.Lfunc_begin0
	.short	.Ltmp2917-.Ltmp2916     # Loc expr size
.Ltmp2916:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2917:
	.quad	.Ltmp640-.Lfunc_begin0
	.quad	.Ltmp645-.Lfunc_begin0
	.short	.Ltmp2919-.Ltmp2918     # Loc expr size
.Ltmp2918:
	.byte	83                      # DW_OP_reg3
.Ltmp2919:
	.quad	.Ltmp646-.Lfunc_begin0
	.quad	.Ltmp655-.Lfunc_begin0
	.short	.Ltmp2921-.Ltmp2920     # Loc expr size
.Ltmp2920:
	.byte	83                      # DW_OP_reg3
.Ltmp2921:
	.quad	.Ltmp656-.Lfunc_begin0
	.quad	.Ltmp657-.Lfunc_begin0
	.short	.Ltmp2923-.Ltmp2922     # Loc expr size
.Ltmp2922:
	.byte	85                      # DW_OP_reg5
.Ltmp2923:
	.quad	.Ltmp657-.Lfunc_begin0
	.quad	.Ltmp679-.Lfunc_begin0
	.short	.Ltmp2925-.Ltmp2924     # Loc expr size
.Ltmp2924:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2925:
	.quad	.Ltmp679-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	.Ltmp2927-.Ltmp2926     # Loc expr size
.Ltmp2926:
	.byte	83                      # DW_OP_reg3
.Ltmp2927:
	.quad	.Ltmp685-.Lfunc_begin0
	.quad	.Ltmp694-.Lfunc_begin0
	.short	.Ltmp2929-.Ltmp2928     # Loc expr size
.Ltmp2928:
	.byte	83                      # DW_OP_reg3
.Ltmp2929:
	.quad	.Ltmp695-.Lfunc_begin0
	.quad	.Ltmp696-.Lfunc_begin0
	.short	.Ltmp2931-.Ltmp2930     # Loc expr size
.Ltmp2930:
	.byte	85                      # DW_OP_reg5
.Ltmp2931:
	.quad	.Ltmp696-.Lfunc_begin0
	.quad	.Ltmp718-.Lfunc_begin0
	.short	.Ltmp2933-.Ltmp2932     # Loc expr size
.Ltmp2932:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp2933:
	.quad	.Ltmp718-.Lfunc_begin0
	.quad	.Ltmp723-.Lfunc_begin0
	.short	.Ltmp2935-.Ltmp2934     # Loc expr size
.Ltmp2934:
	.byte	83                      # DW_OP_reg3
.Ltmp2935:
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp733-.Lfunc_begin0
	.short	.Ltmp2937-.Ltmp2936     # Loc expr size
.Ltmp2936:
	.byte	83                      # DW_OP_reg3
.Ltmp2937:
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp760-.Lfunc_begin0
	.short	.Ltmp2939-.Ltmp2938     # Loc expr size
.Ltmp2938:
	.byte	94                      # DW_OP_reg14
.Ltmp2939:
	.quad	.Ltmp761-.Lfunc_begin0
	.quad	.Ltmp772-.Lfunc_begin0
	.short	.Ltmp2941-.Ltmp2940     # Loc expr size
.Ltmp2940:
	.byte	94                      # DW_OP_reg14
.Ltmp2941:
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp461-.Lfunc_begin0
	.quad	.Ltmp467-.Lfunc_begin0
	.short	.Ltmp2943-.Ltmp2942     # Loc expr size
.Ltmp2942:
	.byte	83                      # DW_OP_reg3
.Ltmp2943:
	.quad	.Ltmp479-.Lfunc_begin0
	.quad	.Ltmp479-.Lfunc_begin0
	.short	.Ltmp2945-.Ltmp2944     # Loc expr size
.Ltmp2944:
	.byte	83                      # DW_OP_reg3
.Ltmp2945:
	.quad	.Ltmp501-.Lfunc_begin0
	.quad	.Ltmp507-.Lfunc_begin0
	.short	.Ltmp2947-.Ltmp2946     # Loc expr size
.Ltmp2946:
	.byte	94                      # DW_OP_reg14
.Ltmp2947:
	.quad	.Ltmp519-.Lfunc_begin0
	.quad	.Ltmp519-.Lfunc_begin0
	.short	.Ltmp2949-.Ltmp2948     # Loc expr size
.Ltmp2948:
	.byte	94                      # DW_OP_reg14
.Ltmp2949:
	.quad	.Ltmp549-.Lfunc_begin0
	.quad	.Ltmp549-.Lfunc_begin0
	.short	.Ltmp2951-.Ltmp2950     # Loc expr size
.Ltmp2950:
	.byte	83                      # DW_OP_reg3
.Ltmp2951:
	.quad	.Ltmp745-.Lfunc_begin0
	.quad	.Ltmp745-.Lfunc_begin0
	.short	.Ltmp2953-.Ltmp2952     # Loc expr size
.Ltmp2952:
	.byte	83                      # DW_OP_reg3
.Ltmp2953:
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	.Ltmp755-.Lfunc_begin0
	.short	.Ltmp2955-.Ltmp2954     # Loc expr size
.Ltmp2954:
	.byte	93                      # DW_OP_reg13
.Ltmp2955:
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp785-.Lfunc_begin0
	.short	.Ltmp2957-.Ltmp2956     # Loc expr size
.Ltmp2956:
	.byte	85                      # DW_OP_reg5
.Ltmp2957:
	.quad	.Ltmp785-.Lfunc_begin0
	.quad	.Ltmp787-.Lfunc_begin0
	.short	.Ltmp2959-.Ltmp2958     # Loc expr size
.Ltmp2958:
	.byte	95                      # DW_OP_reg15
.Ltmp2959:
	.quad	.Ltmp787-.Lfunc_begin0
	.quad	.Ltmp1022-.Lfunc_begin0
	.short	.Ltmp2961-.Ltmp2960     # Loc expr size
.Ltmp2960:
	.byte	118                     # DW_OP_breg6
	.ascii	"\220\177"              # -112
.Ltmp2961:
	.quad	.Ltmp1022-.Lfunc_begin0
	.quad	.Ltmp1023-.Lfunc_begin0
	.short	.Ltmp2963-.Ltmp2962     # Loc expr size
.Ltmp2962:
	.byte	82                      # DW_OP_reg2
.Ltmp2963:
	.quad	.Ltmp1023-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	.Ltmp2965-.Ltmp2964     # Loc expr size
.Ltmp2964:
	.byte	118                     # DW_OP_breg6
	.ascii	"\220\177"              # -112
.Ltmp2965:
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp784-.Lfunc_begin0
	.short	.Ltmp2967-.Ltmp2966     # Loc expr size
.Ltmp2966:
	.byte	84                      # DW_OP_reg4
.Ltmp2967:
	.quad	.Ltmp784-.Lfunc_begin0
	.quad	.Ltmp790-.Lfunc_begin0
	.short	.Ltmp2969-.Ltmp2968     # Loc expr size
.Ltmp2968:
	.byte	93                      # DW_OP_reg13
.Ltmp2969:
	.quad	.Ltmp790-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	.Ltmp2971-.Ltmp2970     # Loc expr size
.Ltmp2970:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2971:
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp783-.Lfunc_begin0
	.short	.Ltmp2973-.Ltmp2972     # Loc expr size
.Ltmp2972:
	.byte	81                      # DW_OP_reg1
.Ltmp2973:
	.quad	.Ltmp783-.Lfunc_begin0
	.quad	.Ltmp1100-.Lfunc_begin0
	.short	.Ltmp2975-.Ltmp2974     # Loc expr size
.Ltmp2974:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210\177"              # -120
.Ltmp2975:
	.quad	.Ltmp1100-.Lfunc_begin0
	.quad	.Ltmp1101-.Lfunc_begin0
	.short	.Ltmp2977-.Ltmp2976     # Loc expr size
.Ltmp2976:
	.byte	83                      # DW_OP_reg3
.Ltmp2977:
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp788-.Lfunc_begin0
	.quad	.Ltmp790-.Lfunc_begin0
	.short	.Ltmp2979-.Ltmp2978     # Loc expr size
.Ltmp2978:
	.byte	93                      # DW_OP_reg13
.Ltmp2979:
	.quad	.Ltmp790-.Lfunc_begin0
	.quad	.Ltmp799-.Lfunc_begin0
	.short	.Ltmp2981-.Ltmp2980     # Loc expr size
.Ltmp2980:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2981:
	.quad	.Ltmp799-.Lfunc_begin0
	.quad	.Ltmp821-.Lfunc_begin0
	.short	.Ltmp2983-.Ltmp2982     # Loc expr size
.Ltmp2982:
	.byte	95                      # DW_OP_reg15
.Ltmp2983:
	.quad	.Ltmp827-.Lfunc_begin0
	.quad	.Ltmp861-.Lfunc_begin0
	.short	.Ltmp2985-.Ltmp2984     # Loc expr size
.Ltmp2984:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250\177"              # -88
.Ltmp2985:
	.quad	.Ltmp861-.Lfunc_begin0
	.quad	.Ltmp875-.Lfunc_begin0
	.short	.Ltmp2987-.Ltmp2986     # Loc expr size
.Ltmp2986:
	.byte	94                      # DW_OP_reg14
.Ltmp2987:
	.quad	.Ltmp890-.Lfunc_begin0
	.quad	.Ltmp903-.Lfunc_begin0
	.short	.Ltmp2989-.Ltmp2988     # Loc expr size
.Ltmp2988:
	.byte	92                      # DW_OP_reg12
.Ltmp2989:
	.quad	.Ltmp920-.Lfunc_begin0
	.quad	.Ltmp933-.Lfunc_begin0
	.short	.Ltmp2991-.Ltmp2990     # Loc expr size
.Ltmp2990:
	.byte	92                      # DW_OP_reg12
.Ltmp2991:
	.quad	.Ltmp950-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	.Ltmp2993-.Ltmp2992     # Loc expr size
.Ltmp2992:
	.byte	92                      # DW_OP_reg12
.Ltmp2993:
	.quad	.Ltmp980-.Lfunc_begin0
	.quad	.Ltmp991-.Lfunc_begin0
	.short	.Ltmp2995-.Ltmp2994     # Loc expr size
.Ltmp2994:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp2995:
	.quad	.Ltmp991-.Lfunc_begin0
	.quad	.Ltmp993-.Lfunc_begin0
	.short	.Ltmp2997-.Ltmp2996     # Loc expr size
.Ltmp2996:
	.byte	83                      # DW_OP_reg3
.Ltmp2997:
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp797-.Lfunc_begin0
	.quad	.Ltmp797-.Lfunc_begin0
	.short	.Ltmp2999-.Ltmp2998     # Loc expr size
.Ltmp2998:
	.byte	94                      # DW_OP_reg14
.Ltmp2999:
	.quad	.Ltmp814-.Lfunc_begin0
	.quad	.Ltmp814-.Lfunc_begin0
	.short	.Ltmp3001-.Ltmp3000     # Loc expr size
.Ltmp3000:
	.byte	94                      # DW_OP_reg14
.Ltmp3001:
	.quad	.Ltmp825-.Lfunc_begin0
	.quad	.Ltmp825-.Lfunc_begin0
	.short	.Ltmp3003-.Ltmp3002     # Loc expr size
.Ltmp3002:
	.byte	94                      # DW_OP_reg14
.Ltmp3003:
	.quad	.Ltmp841-.Lfunc_begin0
	.quad	.Ltmp841-.Lfunc_begin0
	.short	.Ltmp3005-.Ltmp3004     # Loc expr size
.Ltmp3004:
	.byte	95                      # DW_OP_reg15
.Ltmp3005:
	.quad	.Ltmp851-.Lfunc_begin0
	.quad	.Ltmp851-.Lfunc_begin0
	.short	.Ltmp3007-.Ltmp3006     # Loc expr size
.Ltmp3006:
	.byte	83                      # DW_OP_reg3
.Ltmp3007:
	.quad	.Ltmp853-.Lfunc_begin0
	.quad	.Ltmp859-.Lfunc_begin0
	.short	.Ltmp3009-.Ltmp3008     # Loc expr size
.Ltmp3008:
	.byte	83                      # DW_OP_reg3
.Ltmp3009:
	.quad	.Ltmp870-.Lfunc_begin0
	.quad	.Ltmp870-.Lfunc_begin0
	.short	.Ltmp3011-.Ltmp3010     # Loc expr size
.Ltmp3010:
	.byte	83                      # DW_OP_reg3
.Ltmp3011:
	.quad	.Ltmp881-.Lfunc_begin0
	.quad	.Ltmp881-.Lfunc_begin0
	.short	.Ltmp3013-.Ltmp3012     # Loc expr size
.Ltmp3012:
	.byte	83                      # DW_OP_reg3
.Ltmp3013:
	.quad	.Ltmp883-.Lfunc_begin0
	.quad	.Ltmp888-.Lfunc_begin0
	.short	.Ltmp3015-.Ltmp3014     # Loc expr size
.Ltmp3014:
	.byte	83                      # DW_OP_reg3
.Ltmp3015:
	.quad	.Ltmp890-.Lfunc_begin0
	.quad	.Ltmp897-.Lfunc_begin0
	.short	.Ltmp3017-.Ltmp3016     # Loc expr size
.Ltmp3016:
	.byte	93                      # DW_OP_reg13
.Ltmp3017:
	.quad	.Ltmp911-.Lfunc_begin0
	.quad	.Ltmp911-.Lfunc_begin0
	.short	.Ltmp3019-.Ltmp3018     # Loc expr size
.Ltmp3018:
	.byte	83                      # DW_OP_reg3
.Ltmp3019:
	.quad	.Ltmp913-.Lfunc_begin0
	.quad	.Ltmp918-.Lfunc_begin0
	.short	.Ltmp3021-.Ltmp3020     # Loc expr size
.Ltmp3020:
	.byte	83                      # DW_OP_reg3
.Ltmp3021:
	.quad	.Ltmp920-.Lfunc_begin0
	.quad	.Ltmp927-.Lfunc_begin0
	.short	.Ltmp3023-.Ltmp3022     # Loc expr size
.Ltmp3022:
	.byte	93                      # DW_OP_reg13
.Ltmp3023:
	.quad	.Ltmp941-.Lfunc_begin0
	.quad	.Ltmp941-.Lfunc_begin0
	.short	.Ltmp3025-.Ltmp3024     # Loc expr size
.Ltmp3024:
	.byte	83                      # DW_OP_reg3
.Ltmp3025:
	.quad	.Ltmp943-.Lfunc_begin0
	.quad	.Ltmp948-.Lfunc_begin0
	.short	.Ltmp3027-.Ltmp3026     # Loc expr size
.Ltmp3026:
	.byte	83                      # DW_OP_reg3
.Ltmp3027:
	.quad	.Ltmp950-.Lfunc_begin0
	.quad	.Ltmp957-.Lfunc_begin0
	.short	.Ltmp3029-.Ltmp3028     # Loc expr size
.Ltmp3028:
	.byte	93                      # DW_OP_reg13
.Ltmp3029:
	.quad	.Ltmp971-.Lfunc_begin0
	.quad	.Ltmp971-.Lfunc_begin0
	.short	.Ltmp3031-.Ltmp3030     # Loc expr size
.Ltmp3030:
	.byte	83                      # DW_OP_reg3
.Ltmp3031:
	.quad	.Ltmp973-.Lfunc_begin0
	.quad	.Ltmp978-.Lfunc_begin0
	.short	.Ltmp3033-.Ltmp3032     # Loc expr size
.Ltmp3032:
	.byte	83                      # DW_OP_reg3
.Ltmp3033:
	.quad	.Ltmp980-.Lfunc_begin0
	.quad	.Ltmp987-.Lfunc_begin0
	.short	.Ltmp3035-.Ltmp3034     # Loc expr size
.Ltmp3034:
	.byte	92                      # DW_OP_reg12
.Ltmp3035:
	.quad	.Ltmp1001-.Lfunc_begin0
	.quad	.Ltmp1001-.Lfunc_begin0
	.short	.Ltmp3037-.Ltmp3036     # Loc expr size
.Ltmp3036:
	.byte	83                      # DW_OP_reg3
.Ltmp3037:
	.quad	.Ltmp1003-.Lfunc_begin0
	.quad	.Ltmp1008-.Lfunc_begin0
	.short	.Ltmp3039-.Ltmp3038     # Loc expr size
.Ltmp3038:
	.byte	83                      # DW_OP_reg3
.Ltmp3039:
	.quad	.Ltmp1009-.Lfunc_begin0
	.quad	.Ltmp1016-.Lfunc_begin0
	.short	.Ltmp3041-.Ltmp3040     # Loc expr size
.Ltmp3040:
	.byte	92                      # DW_OP_reg12
.Ltmp3041:
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp819-.Lfunc_begin0
	.short	.Ltmp3043-.Ltmp3042     # Loc expr size
.Ltmp3042:
	.byte	92                      # DW_OP_reg12
.Ltmp3043:
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp819-.Lfunc_begin0
	.short	.Ltmp3045-.Ltmp3044     # Loc expr size
.Ltmp3044:
	.byte	92                      # DW_OP_reg12
.Ltmp3045:
	.quad	.Ltmp826-.Lfunc_begin0
	.quad	.Ltmp847-.Lfunc_begin0
	.short	.Ltmp3047-.Ltmp3046     # Loc expr size
.Ltmp3046:
	.byte	93                      # DW_OP_reg13
.Ltmp3047:
	.quad	.Ltmp860-.Lfunc_begin0
	.quad	.Ltmp877-.Lfunc_begin0
	.short	.Ltmp3049-.Ltmp3048     # Loc expr size
.Ltmp3048:
	.byte	93                      # DW_OP_reg13
.Ltmp3049:
	.quad	.Ltmp889-.Lfunc_begin0
	.quad	.Ltmp904-.Lfunc_begin0
	.short	.Ltmp3051-.Ltmp3050     # Loc expr size
.Ltmp3050:
	.byte	94                      # DW_OP_reg14
.Ltmp3051:
	.quad	.Ltmp919-.Lfunc_begin0
	.quad	.Ltmp935-.Lfunc_begin0
	.short	.Ltmp3053-.Ltmp3052     # Loc expr size
.Ltmp3052:
	.byte	94                      # DW_OP_reg14
.Ltmp3053:
	.quad	.Ltmp949-.Lfunc_begin0
	.quad	.Ltmp965-.Lfunc_begin0
	.short	.Ltmp3055-.Ltmp3054     # Loc expr size
.Ltmp3054:
	.byte	94                      # DW_OP_reg14
.Ltmp3055:
	.quad	.Ltmp979-.Lfunc_begin0
	.quad	.Ltmp995-.Lfunc_begin0
	.short	.Ltmp3057-.Ltmp3056     # Loc expr size
.Ltmp3056:
	.byte	94                      # DW_OP_reg14
.Ltmp3057:
	.quad	.Ltmp1009-.Lfunc_begin0
	.quad	.Ltmp1024-.Lfunc_begin0
	.short	.Ltmp3059-.Ltmp3058     # Loc expr size
.Ltmp3058:
	.byte	94                      # DW_OP_reg14
.Ltmp3059:
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	.Ltmp3061-.Ltmp3060     # Loc expr size
.Ltmp3060:
	.byte	92                      # DW_OP_reg12
.Ltmp3061:
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	.Ltmp3063-.Ltmp3062     # Loc expr size
.Ltmp3062:
	.byte	92                      # DW_OP_reg12
.Ltmp3063:
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	.Ltmp3065-.Ltmp3064     # Loc expr size
.Ltmp3064:
	.byte	92                      # DW_OP_reg12
.Ltmp3065:
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	.Ltmp3067-.Ltmp3066     # Loc expr size
.Ltmp3066:
	.byte	92                      # DW_OP_reg12
.Ltmp3067:
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp1032-.Lfunc_begin0
	.quad	.Ltmp1038-.Lfunc_begin0
	.short	.Ltmp3069-.Ltmp3068     # Loc expr size
.Ltmp3068:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3069:
	.quad	.Ltmp1044-.Lfunc_begin0
	.quad	.Ltmp1049-.Lfunc_begin0
	.short	.Ltmp3071-.Ltmp3070     # Loc expr size
.Ltmp3070:
	.byte	95                      # DW_OP_reg15
.Ltmp3071:
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp1059-.Lfunc_begin0
	.quad	.Ltmp1065-.Lfunc_begin0
	.short	.Ltmp3073-.Ltmp3072     # Loc expr size
.Ltmp3072:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3073:
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp1074-.Lfunc_begin0
	.quad	.Ltmp1080-.Lfunc_begin0
	.short	.Ltmp3075-.Ltmp3074     # Loc expr size
.Ltmp3074:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3075:
	.quad	.Ltmp1086-.Lfunc_begin0
	.quad	.Ltmp1091-.Lfunc_begin0
	.short	.Ltmp3077-.Ltmp3076     # Loc expr size
.Ltmp3076:
	.byte	94                      # DW_OP_reg14
.Ltmp3077:
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1117-.Lfunc_begin0
	.short	.Ltmp3079-.Ltmp3078     # Loc expr size
.Ltmp3078:
	.byte	85                      # DW_OP_reg5
.Ltmp3079:
	.quad	.Ltmp1125-.Lfunc_begin0
	.quad	.Ltmp1127-.Lfunc_begin0
	.short	.Ltmp3081-.Ltmp3080     # Loc expr size
.Ltmp3080:
	.byte	85                      # DW_OP_reg5
.Ltmp3081:
	.quad	.Ltmp1129-.Lfunc_begin0
	.quad	.Ltmp1130-.Lfunc_begin0
	.short	.Ltmp3083-.Ltmp3082     # Loc expr size
.Ltmp3082:
	.byte	85                      # DW_OP_reg5
.Ltmp3083:
	.quad	.Ltmp1144-.Lfunc_begin0
	.quad	.Ltmp1145-.Lfunc_begin0
	.short	.Ltmp3085-.Ltmp3084     # Loc expr size
.Ltmp3084:
	.byte	85                      # DW_OP_reg5
.Ltmp3085:
	.quad	.Ltmp1149-.Lfunc_begin0
	.quad	.Ltmp1150-.Lfunc_begin0
	.short	.Ltmp3087-.Ltmp3086     # Loc expr size
.Ltmp3086:
	.byte	85                      # DW_OP_reg5
.Ltmp3087:
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1156-.Lfunc_begin0
	.short	.Ltmp3089-.Ltmp3088     # Loc expr size
.Ltmp3088:
	.byte	85                      # DW_OP_reg5
.Ltmp3089:
	.quad	.Ltmp1157-.Lfunc_begin0
	.quad	.Ltmp1158-.Lfunc_begin0
	.short	.Ltmp3091-.Ltmp3090     # Loc expr size
.Ltmp3090:
	.byte	85                      # DW_OP_reg5
.Ltmp3091:
	.quad	.Ltmp1159-.Lfunc_begin0
	.quad	.Ltmp1160-.Lfunc_begin0
	.short	.Ltmp3093-.Ltmp3092     # Loc expr size
.Ltmp3092:
	.byte	85                      # DW_OP_reg5
.Ltmp3093:
	.quad	.Ltmp1174-.Lfunc_begin0
	.quad	.Ltmp1175-.Lfunc_begin0
	.short	.Ltmp3095-.Ltmp3094     # Loc expr size
.Ltmp3094:
	.byte	85                      # DW_OP_reg5
.Ltmp3095:
	.quad	.Ltmp1179-.Lfunc_begin0
	.quad	.Ltmp1180-.Lfunc_begin0
	.short	.Ltmp3097-.Ltmp3096     # Loc expr size
.Ltmp3096:
	.byte	85                      # DW_OP_reg5
.Ltmp3097:
	.quad	.Ltmp1185-.Lfunc_begin0
	.quad	.Ltmp1186-.Lfunc_begin0
	.short	.Ltmp3099-.Ltmp3098     # Loc expr size
.Ltmp3098:
	.byte	85                      # DW_OP_reg5
.Ltmp3099:
	.quad	.Ltmp1187-.Lfunc_begin0
	.quad	.Ltmp1188-.Lfunc_begin0
	.short	.Ltmp3101-.Ltmp3100     # Loc expr size
.Ltmp3100:
	.byte	85                      # DW_OP_reg5
.Ltmp3101:
	.quad	.Ltmp1189-.Lfunc_begin0
	.quad	.Ltmp1190-.Lfunc_begin0
	.short	.Ltmp3103-.Ltmp3102     # Loc expr size
.Ltmp3102:
	.byte	85                      # DW_OP_reg5
.Ltmp3103:
	.quad	.Ltmp1204-.Lfunc_begin0
	.quad	.Ltmp1205-.Lfunc_begin0
	.short	.Ltmp3105-.Ltmp3104     # Loc expr size
.Ltmp3104:
	.byte	85                      # DW_OP_reg5
.Ltmp3105:
	.quad	.Ltmp1209-.Lfunc_begin0
	.quad	.Ltmp1210-.Lfunc_begin0
	.short	.Ltmp3107-.Ltmp3106     # Loc expr size
.Ltmp3106:
	.byte	85                      # DW_OP_reg5
.Ltmp3107:
	.quad	.Ltmp1215-.Lfunc_begin0
	.quad	.Ltmp1216-.Lfunc_begin0
	.short	.Ltmp3109-.Ltmp3108     # Loc expr size
.Ltmp3108:
	.byte	85                      # DW_OP_reg5
.Ltmp3109:
	.quad	.Ltmp1217-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	.Ltmp3111-.Ltmp3110     # Loc expr size
.Ltmp3110:
	.byte	85                      # DW_OP_reg5
.Ltmp3111:
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1220-.Lfunc_begin0
	.short	.Ltmp3113-.Ltmp3112     # Loc expr size
.Ltmp3112:
	.byte	85                      # DW_OP_reg5
.Ltmp3113:
	.quad	.Ltmp1234-.Lfunc_begin0
	.quad	.Ltmp1235-.Lfunc_begin0
	.short	.Ltmp3115-.Ltmp3114     # Loc expr size
.Ltmp3114:
	.byte	85                      # DW_OP_reg5
.Ltmp3115:
	.quad	.Ltmp1239-.Lfunc_begin0
	.quad	.Ltmp1240-.Lfunc_begin0
	.short	.Ltmp3117-.Ltmp3116     # Loc expr size
.Ltmp3116:
	.byte	85                      # DW_OP_reg5
.Ltmp3117:
	.quad	.Ltmp1245-.Lfunc_begin0
	.quad	.Ltmp1246-.Lfunc_begin0
	.short	.Ltmp3119-.Ltmp3118     # Loc expr size
.Ltmp3118:
	.byte	85                      # DW_OP_reg5
.Ltmp3119:
	.quad	.Ltmp1247-.Lfunc_begin0
	.quad	.Ltmp1248-.Lfunc_begin0
	.short	.Ltmp3121-.Ltmp3120     # Loc expr size
.Ltmp3120:
	.byte	85                      # DW_OP_reg5
.Ltmp3121:
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1116-.Lfunc_begin0
	.short	.Ltmp3123-.Ltmp3122     # Loc expr size
.Ltmp3122:
	.byte	84                      # DW_OP_reg4
.Ltmp3123:
	.quad	.Ltmp1116-.Lfunc_begin0
	.quad	.Ltmp1119-.Lfunc_begin0
	.short	.Ltmp3125-.Ltmp3124     # Loc expr size
.Ltmp3124:
	.byte	83                      # DW_OP_reg3
.Ltmp3125:
	.quad	.Ltmp1119-.Lfunc_begin0
	.quad	.Ltmp1135-.Lfunc_begin0
	.short	.Ltmp3127-.Ltmp3126     # Loc expr size
.Ltmp3126:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp3127:
	.quad	.Ltmp1135-.Lfunc_begin0
	.quad	.Ltmp1138-.Lfunc_begin0
	.short	.Ltmp3129-.Ltmp3128     # Loc expr size
.Ltmp3128:
	.byte	83                      # DW_OP_reg3
.Ltmp3129:
	.quad	.Ltmp1138-.Lfunc_begin0
	.quad	.Ltmp1165-.Lfunc_begin0
	.short	.Ltmp3131-.Ltmp3130     # Loc expr size
.Ltmp3130:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp3131:
	.quad	.Ltmp1165-.Lfunc_begin0
	.quad	.Ltmp1168-.Lfunc_begin0
	.short	.Ltmp3133-.Ltmp3132     # Loc expr size
.Ltmp3132:
	.byte	83                      # DW_OP_reg3
.Ltmp3133:
	.quad	.Ltmp1168-.Lfunc_begin0
	.quad	.Ltmp1195-.Lfunc_begin0
	.short	.Ltmp3135-.Ltmp3134     # Loc expr size
.Ltmp3134:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp3135:
	.quad	.Ltmp1195-.Lfunc_begin0
	.quad	.Ltmp1198-.Lfunc_begin0
	.short	.Ltmp3137-.Ltmp3136     # Loc expr size
.Ltmp3136:
	.byte	83                      # DW_OP_reg3
.Ltmp3137:
	.quad	.Ltmp1198-.Lfunc_begin0
	.quad	.Ltmp1225-.Lfunc_begin0
	.short	.Ltmp3139-.Ltmp3138     # Loc expr size
.Ltmp3138:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp3139:
	.quad	.Ltmp1225-.Lfunc_begin0
	.quad	.Ltmp1228-.Lfunc_begin0
	.short	.Ltmp3141-.Ltmp3140     # Loc expr size
.Ltmp3140:
	.byte	83                      # DW_OP_reg3
.Ltmp3141:
	.quad	.Ltmp1228-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	.Ltmp3143-.Ltmp3142     # Loc expr size
.Ltmp3142:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp3143:
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	.Ltmp3145-.Ltmp3144     # Loc expr size
.Ltmp3144:
	.byte	81                      # DW_OP_reg1
.Ltmp3145:
	.quad	.Ltmp1115-.Lfunc_begin0
	.quad	.Ltmp1120-.Lfunc_begin0
	.short	.Ltmp3147-.Ltmp3146     # Loc expr size
.Ltmp3146:
	.byte	94                      # DW_OP_reg14
.Ltmp3147:
	.quad	.Ltmp1120-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	.Ltmp3149-.Ltmp3148     # Loc expr size
.Ltmp3148:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp3149:
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1114-.Lfunc_begin0
	.short	.Ltmp3151-.Ltmp3150     # Loc expr size
.Ltmp3150:
	.byte	82                      # DW_OP_reg2
.Ltmp3151:
	.quad	.Ltmp1114-.Lfunc_begin0
	.quad	.Ltmp1151-.Lfunc_begin0
	.short	.Ltmp3153-.Ltmp3152     # Loc expr size
.Ltmp3152:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3153:
	.quad	.Ltmp1151-.Lfunc_begin0
	.quad	.Ltmp1153-.Lfunc_begin0
	.short	.Ltmp3155-.Ltmp3154     # Loc expr size
.Ltmp3154:
	.byte	83                      # DW_OP_reg3
.Ltmp3155:
	.quad	.Ltmp1153-.Lfunc_begin0
	.quad	.Ltmp1181-.Lfunc_begin0
	.short	.Ltmp3157-.Ltmp3156     # Loc expr size
.Ltmp3156:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3157:
	.quad	.Ltmp1181-.Lfunc_begin0
	.quad	.Ltmp1183-.Lfunc_begin0
	.short	.Ltmp3159-.Ltmp3158     # Loc expr size
.Ltmp3158:
	.byte	83                      # DW_OP_reg3
.Ltmp3159:
	.quad	.Ltmp1183-.Lfunc_begin0
	.quad	.Ltmp1211-.Lfunc_begin0
	.short	.Ltmp3161-.Ltmp3160     # Loc expr size
.Ltmp3160:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3161:
	.quad	.Ltmp1211-.Lfunc_begin0
	.quad	.Ltmp1213-.Lfunc_begin0
	.short	.Ltmp3163-.Ltmp3162     # Loc expr size
.Ltmp3162:
	.byte	83                      # DW_OP_reg3
.Ltmp3163:
	.quad	.Ltmp1213-.Lfunc_begin0
	.quad	.Ltmp1241-.Lfunc_begin0
	.short	.Ltmp3165-.Ltmp3164     # Loc expr size
.Ltmp3164:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3165:
	.quad	.Ltmp1241-.Lfunc_begin0
	.quad	.Ltmp1243-.Lfunc_begin0
	.short	.Ltmp3167-.Ltmp3166     # Loc expr size
.Ltmp3166:
	.byte	83                      # DW_OP_reg3
.Ltmp3167:
	.quad	.Ltmp1243-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	.Ltmp3169-.Ltmp3168     # Loc expr size
.Ltmp3168:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3169:
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1113-.Lfunc_begin0
	.short	.Ltmp3171-.Ltmp3170     # Loc expr size
.Ltmp3170:
	.byte	88                      # DW_OP_reg8
.Ltmp3171:
	.quad	.Ltmp1113-.Lfunc_begin0
	.quad	.Ltmp1133-.Lfunc_begin0
	.short	.Ltmp3173-.Ltmp3172     # Loc expr size
.Ltmp3172:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3173:
	.quad	.Ltmp1133-.Lfunc_begin0
	.quad	.Ltmp1141-.Lfunc_begin0
	.short	.Ltmp3175-.Ltmp3174     # Loc expr size
.Ltmp3174:
	.byte	95                      # DW_OP_reg15
.Ltmp3175:
	.quad	.Ltmp1141-.Lfunc_begin0
	.quad	.Ltmp1163-.Lfunc_begin0
	.short	.Ltmp3177-.Ltmp3176     # Loc expr size
.Ltmp3176:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3177:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1171-.Lfunc_begin0
	.short	.Ltmp3179-.Ltmp3178     # Loc expr size
.Ltmp3178:
	.byte	95                      # DW_OP_reg15
.Ltmp3179:
	.quad	.Ltmp1171-.Lfunc_begin0
	.quad	.Ltmp1193-.Lfunc_begin0
	.short	.Ltmp3181-.Ltmp3180     # Loc expr size
.Ltmp3180:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3181:
	.quad	.Ltmp1193-.Lfunc_begin0
	.quad	.Ltmp1201-.Lfunc_begin0
	.short	.Ltmp3183-.Ltmp3182     # Loc expr size
.Ltmp3182:
	.byte	95                      # DW_OP_reg15
.Ltmp3183:
	.quad	.Ltmp1201-.Lfunc_begin0
	.quad	.Ltmp1223-.Lfunc_begin0
	.short	.Ltmp3185-.Ltmp3184     # Loc expr size
.Ltmp3184:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3185:
	.quad	.Ltmp1223-.Lfunc_begin0
	.quad	.Ltmp1231-.Lfunc_begin0
	.short	.Ltmp3187-.Ltmp3186     # Loc expr size
.Ltmp3186:
	.byte	95                      # DW_OP_reg15
.Ltmp3187:
	.quad	.Ltmp1231-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	.Ltmp3189-.Ltmp3188     # Loc expr size
.Ltmp3188:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3189:
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp1112-.Lfunc_begin0
	.short	.Ltmp3191-.Ltmp3190     # Loc expr size
.Ltmp3190:
	.byte	89                      # DW_OP_reg9
.Ltmp3191:
	.quad	.Ltmp1112-.Lfunc_begin0
	.quad	.Ltmp1122-.Lfunc_begin0
	.short	.Ltmp3193-.Ltmp3192     # Loc expr size
.Ltmp3192:
	.byte	95                      # DW_OP_reg15
.Ltmp3193:
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp1116-.Lfunc_begin0
	.quad	.Ltmp1120-.Lfunc_begin0
	.short	.Ltmp3195-.Ltmp3194     # Loc expr size
.Ltmp3194:
	.byte	94                      # DW_OP_reg14
.Ltmp3195:
	.quad	.Ltmp1120-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	.Ltmp3197-.Ltmp3196     # Loc expr size
.Ltmp3196:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp3197:
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp1142-.Lfunc_begin0
	.quad	.Ltmp1147-.Lfunc_begin0
	.short	.Ltmp3199-.Ltmp3198     # Loc expr size
.Ltmp3198:
	.byte	94                      # DW_OP_reg14
.Ltmp3199:
	.quad	.Ltmp1172-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	.Ltmp3201-.Ltmp3200     # Loc expr size
.Ltmp3200:
	.byte	83                      # DW_OP_reg3
.Ltmp3201:
	.quad	.Ltmp1202-.Lfunc_begin0
	.quad	.Ltmp1207-.Lfunc_begin0
	.short	.Ltmp3203-.Ltmp3202     # Loc expr size
.Ltmp3202:
	.byte	83                      # DW_OP_reg3
.Ltmp3203:
	.quad	.Ltmp1232-.Lfunc_begin0
	.quad	.Ltmp1237-.Lfunc_begin0
	.short	.Ltmp3205-.Ltmp3204     # Loc expr size
.Ltmp3204:
	.byte	83                      # DW_OP_reg3
.Ltmp3205:
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp1263-.Lfunc_begin0
	.short	.Ltmp3207-.Ltmp3206     # Loc expr size
.Ltmp3206:
	.byte	85                      # DW_OP_reg5
.Ltmp3207:
	.quad	.Ltmp1266-.Lfunc_begin0
	.quad	.Ltmp1267-.Lfunc_begin0
	.short	.Ltmp3209-.Ltmp3208     # Loc expr size
.Ltmp3208:
	.byte	85                      # DW_OP_reg5
.Ltmp3209:
	.quad	.Ltmp1293-.Lfunc_begin0
	.quad	.Ltmp1294-.Lfunc_begin0
	.short	.Ltmp3211-.Ltmp3210     # Loc expr size
.Ltmp3210:
	.byte	85                      # DW_OP_reg5
.Ltmp3211:
	.quad	.Ltmp1298-.Lfunc_begin0
	.quad	.Ltmp1299-.Lfunc_begin0
	.short	.Ltmp3213-.Ltmp3212     # Loc expr size
.Ltmp3212:
	.byte	85                      # DW_OP_reg5
.Ltmp3213:
	.quad	.Ltmp1303-.Lfunc_begin0
	.quad	.Ltmp1304-.Lfunc_begin0
	.short	.Ltmp3215-.Ltmp3214     # Loc expr size
.Ltmp3214:
	.byte	85                      # DW_OP_reg5
.Ltmp3215:
	.quad	.Ltmp1439-.Lfunc_begin0
	.quad	.Ltmp1440-.Lfunc_begin0
	.short	.Ltmp3217-.Ltmp3216     # Loc expr size
.Ltmp3216:
	.byte	85                      # DW_OP_reg5
.Ltmp3217:
	.quad	.Ltmp1442-.Lfunc_begin0
	.quad	.Ltmp1443-.Lfunc_begin0
	.short	.Ltmp3219-.Ltmp3218     # Loc expr size
.Ltmp3218:
	.byte	85                      # DW_OP_reg5
.Ltmp3219:
	.quad	.Ltmp1512-.Lfunc_begin0
	.quad	.Ltmp1513-.Lfunc_begin0
	.short	.Ltmp3221-.Ltmp3220     # Loc expr size
.Ltmp3220:
	.byte	85                      # DW_OP_reg5
.Ltmp3221:
	.quad	.Ltmp1515-.Lfunc_begin0
	.quad	.Ltmp1516-.Lfunc_begin0
	.short	.Ltmp3223-.Ltmp3222     # Loc expr size
.Ltmp3222:
	.byte	85                      # DW_OP_reg5
.Ltmp3223:
	.quad	.Ltmp1526-.Lfunc_begin0
	.quad	.Ltmp1527-.Lfunc_begin0
	.short	.Ltmp3225-.Ltmp3224     # Loc expr size
.Ltmp3224:
	.byte	85                      # DW_OP_reg5
.Ltmp3225:
	.quad	.Ltmp1529-.Lfunc_begin0
	.quad	.Ltmp1530-.Lfunc_begin0
	.short	.Ltmp3227-.Ltmp3226     # Loc expr size
.Ltmp3226:
	.byte	85                      # DW_OP_reg5
.Ltmp3227:
	.quad	.Ltmp1532-.Lfunc_begin0
	.quad	.Ltmp1533-.Lfunc_begin0
	.short	.Ltmp3229-.Ltmp3228     # Loc expr size
.Ltmp3228:
	.byte	85                      # DW_OP_reg5
.Ltmp3229:
	.quad	.Ltmp1539-.Lfunc_begin0
	.quad	.Ltmp1540-.Lfunc_begin0
	.short	.Ltmp3231-.Ltmp3230     # Loc expr size
.Ltmp3230:
	.byte	85                      # DW_OP_reg5
.Ltmp3231:
	.quad	.Ltmp1547-.Lfunc_begin0
	.quad	.Ltmp1548-.Lfunc_begin0
	.short	.Ltmp3233-.Ltmp3232     # Loc expr size
.Ltmp3232:
	.byte	85                      # DW_OP_reg5
.Ltmp3233:
	.quad	.Ltmp1549-.Lfunc_begin0
	.quad	.Ltmp1550-.Lfunc_begin0
	.short	.Ltmp3235-.Ltmp3234     # Loc expr size
.Ltmp3234:
	.byte	85                      # DW_OP_reg5
.Ltmp3235:
	.quad	.Ltmp1552-.Lfunc_begin0
	.quad	.Ltmp1553-.Lfunc_begin0
	.short	.Ltmp3237-.Ltmp3236     # Loc expr size
.Ltmp3236:
	.byte	85                      # DW_OP_reg5
.Ltmp3237:
	.quad	.Ltmp1558-.Lfunc_begin0
	.quad	.Ltmp1559-.Lfunc_begin0
	.short	.Ltmp3239-.Ltmp3238     # Loc expr size
.Ltmp3238:
	.byte	85                      # DW_OP_reg5
.Ltmp3239:
	.quad	.Ltmp1563-.Lfunc_begin0
	.quad	.Ltmp1565-.Lfunc_begin0
	.short	.Ltmp3241-.Ltmp3240     # Loc expr size
.Ltmp3240:
	.byte	85                      # DW_OP_reg5
.Ltmp3241:
	.quad	.Ltmp1569-.Lfunc_begin0
	.quad	.Ltmp1570-.Lfunc_begin0
	.short	.Ltmp3243-.Ltmp3242     # Loc expr size
.Ltmp3242:
	.byte	85                      # DW_OP_reg5
.Ltmp3243:
	.quad	.Ltmp1572-.Lfunc_begin0
	.quad	.Ltmp1573-.Lfunc_begin0
	.short	.Ltmp3245-.Ltmp3244     # Loc expr size
.Ltmp3244:
	.byte	85                      # DW_OP_reg5
.Ltmp3245:
	.quad	.Ltmp1574-.Lfunc_begin0
	.quad	.Ltmp1575-.Lfunc_begin0
	.short	.Ltmp3247-.Ltmp3246     # Loc expr size
.Ltmp3246:
	.byte	85                      # DW_OP_reg5
.Ltmp3247:
	.quad	.Ltmp1579-.Lfunc_begin0
	.quad	.Ltmp1580-.Lfunc_begin0
	.short	.Ltmp3249-.Ltmp3248     # Loc expr size
.Ltmp3248:
	.byte	85                      # DW_OP_reg5
.Ltmp3249:
	.quad	.Ltmp1581-.Lfunc_begin0
	.quad	.Ltmp1582-.Lfunc_begin0
	.short	.Ltmp3251-.Ltmp3250     # Loc expr size
.Ltmp3250:
	.byte	85                      # DW_OP_reg5
.Ltmp3251:
	.quad	.Ltmp1584-.Lfunc_begin0
	.quad	.Ltmp1585-.Lfunc_begin0
	.short	.Ltmp3253-.Ltmp3252     # Loc expr size
.Ltmp3252:
	.byte	85                      # DW_OP_reg5
.Ltmp3253:
	.quad	.Ltmp1589-.Lfunc_begin0
	.quad	.Ltmp1590-.Lfunc_begin0
	.short	.Ltmp3255-.Ltmp3254     # Loc expr size
.Ltmp3254:
	.byte	85                      # DW_OP_reg5
.Ltmp3255:
	.quad	.Ltmp1598-.Lfunc_begin0
	.quad	.Ltmp1599-.Lfunc_begin0
	.short	.Ltmp3257-.Ltmp3256     # Loc expr size
.Ltmp3256:
	.byte	85                      # DW_OP_reg5
.Ltmp3257:
	.quad	.Ltmp1607-.Lfunc_begin0
	.quad	.Ltmp1608-.Lfunc_begin0
	.short	.Ltmp3259-.Ltmp3258     # Loc expr size
.Ltmp3258:
	.byte	85                      # DW_OP_reg5
.Ltmp3259:
	.quad	.Ltmp1614-.Lfunc_begin0
	.quad	.Ltmp1615-.Lfunc_begin0
	.short	.Ltmp3261-.Ltmp3260     # Loc expr size
.Ltmp3260:
	.byte	85                      # DW_OP_reg5
.Ltmp3261:
	.quad	.Ltmp1620-.Lfunc_begin0
	.quad	.Ltmp1621-.Lfunc_begin0
	.short	.Ltmp3263-.Ltmp3262     # Loc expr size
.Ltmp3262:
	.byte	85                      # DW_OP_reg5
.Ltmp3263:
	.quad	.Ltmp1626-.Lfunc_begin0
	.quad	.Ltmp1627-.Lfunc_begin0
	.short	.Ltmp3265-.Ltmp3264     # Loc expr size
.Ltmp3264:
	.byte	85                      # DW_OP_reg5
.Ltmp3265:
	.quad	.Ltmp1631-.Lfunc_begin0
	.quad	.Ltmp1632-.Lfunc_begin0
	.short	.Ltmp3267-.Ltmp3266     # Loc expr size
.Ltmp3266:
	.byte	85                      # DW_OP_reg5
.Ltmp3267:
	.quad	.Ltmp1638-.Lfunc_begin0
	.quad	.Ltmp1640-.Lfunc_begin0
	.short	.Ltmp3269-.Ltmp3268     # Loc expr size
.Ltmp3268:
	.byte	85                      # DW_OP_reg5
.Ltmp3269:
	.quad	.Ltmp1643-.Lfunc_begin0
	.quad	.Ltmp1644-.Lfunc_begin0
	.short	.Ltmp3271-.Ltmp3270     # Loc expr size
.Ltmp3270:
	.byte	85                      # DW_OP_reg5
.Ltmp3271:
	.quad	.Ltmp1648-.Lfunc_begin0
	.quad	.Ltmp1649-.Lfunc_begin0
	.short	.Ltmp3273-.Ltmp3272     # Loc expr size
.Ltmp3272:
	.byte	85                      # DW_OP_reg5
.Ltmp3273:
	.quad	.Ltmp1651-.Lfunc_begin0
	.quad	.Ltmp1652-.Lfunc_begin0
	.short	.Ltmp3275-.Ltmp3274     # Loc expr size
.Ltmp3274:
	.byte	85                      # DW_OP_reg5
.Ltmp3275:
	.quad	.Ltmp1655-.Lfunc_begin0
	.quad	.Ltmp1656-.Lfunc_begin0
	.short	.Ltmp3277-.Ltmp3276     # Loc expr size
.Ltmp3276:
	.byte	85                      # DW_OP_reg5
.Ltmp3277:
	.quad	.Ltmp1675-.Lfunc_begin0
	.quad	.Ltmp1676-.Lfunc_begin0
	.short	.Ltmp3279-.Ltmp3278     # Loc expr size
.Ltmp3278:
	.byte	85                      # DW_OP_reg5
.Ltmp3279:
	.quad	.Ltmp1683-.Lfunc_begin0
	.quad	.Ltmp1684-.Lfunc_begin0
	.short	.Ltmp3281-.Ltmp3280     # Loc expr size
.Ltmp3280:
	.byte	85                      # DW_OP_reg5
.Ltmp3281:
	.quad	.Ltmp1722-.Lfunc_begin0
	.quad	.Ltmp1723-.Lfunc_begin0
	.short	.Ltmp3283-.Ltmp3282     # Loc expr size
.Ltmp3282:
	.byte	85                      # DW_OP_reg5
.Ltmp3283:
	.quad	.Ltmp1728-.Lfunc_begin0
	.quad	.Ltmp1729-.Lfunc_begin0
	.short	.Ltmp3285-.Ltmp3284     # Loc expr size
.Ltmp3284:
	.byte	85                      # DW_OP_reg5
.Ltmp3285:
	.quad	.Ltmp1731-.Lfunc_begin0
	.quad	.Ltmp1732-.Lfunc_begin0
	.short	.Ltmp3287-.Ltmp3286     # Loc expr size
.Ltmp3286:
	.byte	85                      # DW_OP_reg5
.Ltmp3287:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1741-.Lfunc_begin0
	.short	.Ltmp3289-.Ltmp3288     # Loc expr size
.Ltmp3288:
	.byte	85                      # DW_OP_reg5
.Ltmp3289:
	.quad	.Ltmp1744-.Lfunc_begin0
	.quad	.Ltmp1745-.Lfunc_begin0
	.short	.Ltmp3291-.Ltmp3290     # Loc expr size
.Ltmp3290:
	.byte	85                      # DW_OP_reg5
.Ltmp3291:
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1756-.Lfunc_begin0
	.short	.Ltmp3293-.Ltmp3292     # Loc expr size
.Ltmp3292:
	.byte	85                      # DW_OP_reg5
.Ltmp3293:
	.quad	.Ltmp1761-.Lfunc_begin0
	.quad	.Ltmp1762-.Lfunc_begin0
	.short	.Ltmp3295-.Ltmp3294     # Loc expr size
.Ltmp3294:
	.byte	85                      # DW_OP_reg5
.Ltmp3295:
	.quad	.Ltmp1767-.Lfunc_begin0
	.quad	.Ltmp1768-.Lfunc_begin0
	.short	.Ltmp3297-.Ltmp3296     # Loc expr size
.Ltmp3296:
	.byte	85                      # DW_OP_reg5
.Ltmp3297:
	.quad	.Ltmp1773-.Lfunc_begin0
	.quad	.Ltmp1774-.Lfunc_begin0
	.short	.Ltmp3299-.Ltmp3298     # Loc expr size
.Ltmp3298:
	.byte	85                      # DW_OP_reg5
.Ltmp3299:
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Ltmp1784-.Lfunc_begin0
	.short	.Ltmp3301-.Ltmp3300     # Loc expr size
.Ltmp3300:
	.byte	85                      # DW_OP_reg5
.Ltmp3301:
	.quad	.Ltmp1787-.Lfunc_begin0
	.quad	.Ltmp1788-.Lfunc_begin0
	.short	.Ltmp3303-.Ltmp3302     # Loc expr size
.Ltmp3302:
	.byte	85                      # DW_OP_reg5
.Ltmp3303:
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1801-.Lfunc_begin0
	.short	.Ltmp3305-.Ltmp3304     # Loc expr size
.Ltmp3304:
	.byte	85                      # DW_OP_reg5
.Ltmp3305:
	.quad	.Ltmp1802-.Lfunc_begin0
	.quad	.Ltmp1803-.Lfunc_begin0
	.short	.Ltmp3307-.Ltmp3306     # Loc expr size
.Ltmp3306:
	.byte	85                      # DW_OP_reg5
.Ltmp3307:
	.quad	.Ltmp1809-.Lfunc_begin0
	.quad	.Ltmp1810-.Lfunc_begin0
	.short	.Ltmp3309-.Ltmp3308     # Loc expr size
.Ltmp3308:
	.byte	85                      # DW_OP_reg5
.Ltmp3309:
	.quad	.Ltmp1812-.Lfunc_begin0
	.quad	.Ltmp1813-.Lfunc_begin0
	.short	.Ltmp3311-.Ltmp3310     # Loc expr size
.Ltmp3310:
	.byte	85                      # DW_OP_reg5
.Ltmp3311:
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp1262-.Lfunc_begin0
	.short	.Ltmp3313-.Ltmp3312     # Loc expr size
.Ltmp3312:
	.byte	84                      # DW_OP_reg4
.Ltmp3313:
	.quad	.Ltmp1262-.Lfunc_begin0
	.quad	.Ltmp1269-.Lfunc_begin0
	.short	.Ltmp3315-.Ltmp3314     # Loc expr size
.Ltmp3314:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp3315:
	.quad	.Ltmp1269-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	.Ltmp3317-.Ltmp3316     # Loc expr size
.Ltmp3316:
	.byte	93                      # DW_OP_reg13
.Ltmp3317:
	.quad	.Ltmp1287-.Lfunc_begin0
	.quad	.Ltmp1752-.Lfunc_begin0
	.short	.Ltmp3319-.Ltmp3318     # Loc expr size
.Ltmp3318:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp3319:
	.quad	.Ltmp1752-.Lfunc_begin0
	.quad	.Ltmp1753-.Lfunc_begin0
	.short	.Ltmp3321-.Ltmp3320     # Loc expr size
.Ltmp3320:
	.byte	83                      # DW_OP_reg3
.Ltmp3321:
	.quad	.Ltmp1753-.Lfunc_begin0
	.quad	.Ltmp1754-.Lfunc_begin0
	.short	.Ltmp3323-.Ltmp3322     # Loc expr size
.Ltmp3322:
	.byte	118                     # DW_OP_breg6
	.ascii	"\210~"                 # -248
.Ltmp3323:
	.quad	.Ltmp1754-.Lfunc_begin0
	.quad	.Ltmp1759-.Lfunc_begin0
	.short	.Ltmp3325-.Ltmp3324     # Loc expr size
.Ltmp3324:
	.byte	94                      # DW_OP_reg14
.Ltmp3325:
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp1261-.Lfunc_begin0
	.short	.Ltmp3327-.Ltmp3326     # Loc expr size
.Ltmp3326:
	.byte	81                      # DW_OP_reg1
.Ltmp3327:
	.quad	.Ltmp1261-.Lfunc_begin0
	.quad	.Ltmp1698-.Lfunc_begin0
	.short	.Ltmp3329-.Ltmp3328     # Loc expr size
.Ltmp3328:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360}"                 # -272
.Ltmp3329:
	.quad	.Ltmp1698-.Lfunc_begin0
	.quad	.Ltmp1702-.Lfunc_begin0
	.short	.Ltmp3331-.Ltmp3330     # Loc expr size
.Ltmp3330:
	.byte	83                      # DW_OP_reg3
.Ltmp3331:
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp1260-.Lfunc_begin0
	.short	.Ltmp3333-.Ltmp3332     # Loc expr size
.Ltmp3332:
	.byte	82                      # DW_OP_reg2
.Ltmp3333:
	.quad	.Ltmp1260-.Lfunc_begin0
	.quad	.Ltmp1541-.Lfunc_begin0
	.short	.Ltmp3335-.Ltmp3334     # Loc expr size
.Ltmp3334:
	.byte	118                     # DW_OP_breg6
	.ascii	"\370}"                 # -264
.Ltmp3335:
	.quad	.Ltmp1541-.Lfunc_begin0
	.quad	.Ltmp1543-.Lfunc_begin0
	.short	.Ltmp3337-.Ltmp3336     # Loc expr size
.Ltmp3336:
	.byte	83                      # DW_OP_reg3
.Ltmp3337:
	.quad	.Ltmp1543-.Lfunc_begin0
	.quad	.Ltmp1746-.Lfunc_begin0
	.short	.Ltmp3339-.Ltmp3338     # Loc expr size
.Ltmp3338:
	.byte	118                     # DW_OP_breg6
	.ascii	"\370}"                 # -264
.Ltmp3339:
	.quad	.Ltmp1746-.Lfunc_begin0
	.quad	.Ltmp1748-.Lfunc_begin0
	.short	.Ltmp3341-.Ltmp3340     # Loc expr size
.Ltmp3340:
	.byte	83                      # DW_OP_reg3
.Ltmp3341:
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp1259-.Lfunc_begin0
	.short	.Ltmp3343-.Ltmp3342     # Loc expr size
.Ltmp3342:
	.byte	88                      # DW_OP_reg8
.Ltmp3343:
	.quad	.Ltmp1259-.Lfunc_begin0
	.quad	.Ltmp1675-.Lfunc_begin0
	.short	.Ltmp3345-.Ltmp3344     # Loc expr size
.Ltmp3344:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3345:
	.quad	.Ltmp1675-.Lfunc_begin0
	.quad	.Ltmp1683-.Lfunc_begin0
	.short	.Ltmp3347-.Ltmp3346     # Loc expr size
.Ltmp3346:
	.byte	92                      # DW_OP_reg12
.Ltmp3347:
	.quad	.Ltmp1683-.Lfunc_begin0
	.quad	.Ltmp1733-.Lfunc_begin0
	.short	.Ltmp3349-.Ltmp3348     # Loc expr size
.Ltmp3348:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3349:
	.quad	.Ltmp1733-.Lfunc_begin0
	.quad	.Ltmp1735-.Lfunc_begin0
	.short	.Ltmp3351-.Ltmp3350     # Loc expr size
.Ltmp3350:
	.byte	83                      # DW_OP_reg3
.Ltmp3351:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1740-.Lfunc_begin0
	.short	.Ltmp3353-.Ltmp3352     # Loc expr size
.Ltmp3352:
	.byte	83                      # DW_OP_reg3
.Ltmp3353:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3355-.Ltmp3354     # Loc expr size
.Ltmp3354:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3355:
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp1268-.Lfunc_begin0
	.quad	.Ltmp1290-.Lfunc_begin0
	.short	.Ltmp3357-.Ltmp3356     # Loc expr size
.Ltmp3356:
	.byte	16                      # DW_OP_constu
	.ascii	"\200 "                 # 4096
	.byte	159                     # DW_OP_stack_value
.Ltmp3357:
	.quad	.Ltmp1290-.Lfunc_begin0
	.quad	.Ltmp1291-.Lfunc_begin0
	.short	.Ltmp3359-.Ltmp3358     # Loc expr size
.Ltmp3358:
	.byte	93                      # DW_OP_reg13
.Ltmp3359:
	.quad	.Ltmp1293-.Lfunc_begin0
	.quad	.Ltmp1296-.Lfunc_begin0
	.short	.Ltmp3361-.Ltmp3360     # Loc expr size
.Ltmp3360:
	.byte	93                      # DW_OP_reg13
.Ltmp3361:
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp1305-.Lfunc_begin0
	.quad	.Ltmp1309-.Lfunc_begin0
	.short	.Ltmp3363-.Ltmp3362     # Loc expr size
.Ltmp3362:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3363:
	.quad	.Ltmp1309-.Lfunc_begin0
	.quad	.Ltmp1314-.Lfunc_begin0
	.short	.Ltmp3365-.Ltmp3364     # Loc expr size
.Ltmp3364:
	.byte	94                      # DW_OP_reg14
.Ltmp3365:
	.quad	.Ltmp1314-.Lfunc_begin0
	.quad	.Ltmp1319-.Lfunc_begin0
	.short	.Ltmp3367-.Ltmp3366     # Loc expr size
.Ltmp3366:
	.byte	83                      # DW_OP_reg3
.Ltmp3367:
	.quad	.Ltmp1319-.Lfunc_begin0
	.quad	.Ltmp1324-.Lfunc_begin0
	.short	.Ltmp3369-.Ltmp3368     # Loc expr size
.Ltmp3368:
	.byte	94                      # DW_OP_reg14
.Ltmp3369:
	.quad	.Ltmp1324-.Lfunc_begin0
	.quad	.Ltmp1329-.Lfunc_begin0
	.short	.Ltmp3371-.Ltmp3370     # Loc expr size
.Ltmp3370:
	.byte	83                      # DW_OP_reg3
.Ltmp3371:
	.quad	.Ltmp1329-.Lfunc_begin0
	.quad	.Ltmp1334-.Lfunc_begin0
	.short	.Ltmp3373-.Ltmp3372     # Loc expr size
.Ltmp3372:
	.byte	94                      # DW_OP_reg14
.Ltmp3373:
	.quad	.Ltmp1334-.Lfunc_begin0
	.quad	.Ltmp1339-.Lfunc_begin0
	.short	.Ltmp3375-.Ltmp3374     # Loc expr size
.Ltmp3374:
	.byte	83                      # DW_OP_reg3
.Ltmp3375:
	.quad	.Ltmp1339-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	.Ltmp3377-.Ltmp3376     # Loc expr size
.Ltmp3376:
	.byte	94                      # DW_OP_reg14
.Ltmp3377:
	.quad	.Ltmp1344-.Lfunc_begin0
	.quad	.Ltmp1349-.Lfunc_begin0
	.short	.Ltmp3379-.Ltmp3378     # Loc expr size
.Ltmp3378:
	.byte	83                      # DW_OP_reg3
.Ltmp3379:
	.quad	.Ltmp1349-.Lfunc_begin0
	.quad	.Ltmp1354-.Lfunc_begin0
	.short	.Ltmp3381-.Ltmp3380     # Loc expr size
.Ltmp3380:
	.byte	94                      # DW_OP_reg14
.Ltmp3381:
	.quad	.Ltmp1354-.Lfunc_begin0
	.quad	.Ltmp1359-.Lfunc_begin0
	.short	.Ltmp3383-.Ltmp3382     # Loc expr size
.Ltmp3382:
	.byte	83                      # DW_OP_reg3
.Ltmp3383:
	.quad	.Ltmp1359-.Lfunc_begin0
	.quad	.Ltmp1364-.Lfunc_begin0
	.short	.Ltmp3385-.Ltmp3384     # Loc expr size
.Ltmp3384:
	.byte	94                      # DW_OP_reg14
.Ltmp3385:
	.quad	.Ltmp1364-.Lfunc_begin0
	.quad	.Ltmp1370-.Lfunc_begin0
	.short	.Ltmp3387-.Ltmp3386     # Loc expr size
.Ltmp3386:
	.byte	92                      # DW_OP_reg12
.Ltmp3387:
	.quad	.Ltmp1370-.Lfunc_begin0
	.quad	.Ltmp1371-.Lfunc_begin0
	.short	.Ltmp3389-.Ltmp3388     # Loc expr size
.Ltmp3388:
	.byte	93                      # DW_OP_reg13
.Ltmp3389:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1376-.Lfunc_begin0
	.short	.Ltmp3391-.Ltmp3390     # Loc expr size
.Ltmp3390:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3391:
	.quad	.Ltmp1376-.Lfunc_begin0
	.quad	.Ltmp1381-.Lfunc_begin0
	.short	.Ltmp3393-.Ltmp3392     # Loc expr size
.Ltmp3392:
	.byte	94                      # DW_OP_reg14
.Ltmp3393:
	.quad	.Ltmp1381-.Lfunc_begin0
	.quad	.Ltmp1386-.Lfunc_begin0
	.short	.Ltmp3395-.Ltmp3394     # Loc expr size
.Ltmp3394:
	.byte	83                      # DW_OP_reg3
.Ltmp3395:
	.quad	.Ltmp1386-.Lfunc_begin0
	.quad	.Ltmp1391-.Lfunc_begin0
	.short	.Ltmp3397-.Ltmp3396     # Loc expr size
.Ltmp3396:
	.byte	94                      # DW_OP_reg14
.Ltmp3397:
	.quad	.Ltmp1391-.Lfunc_begin0
	.quad	.Ltmp1396-.Lfunc_begin0
	.short	.Ltmp3399-.Ltmp3398     # Loc expr size
.Ltmp3398:
	.byte	83                      # DW_OP_reg3
.Ltmp3399:
	.quad	.Ltmp1396-.Lfunc_begin0
	.quad	.Ltmp1401-.Lfunc_begin0
	.short	.Ltmp3401-.Ltmp3400     # Loc expr size
.Ltmp3400:
	.byte	94                      # DW_OP_reg14
.Ltmp3401:
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1406-.Lfunc_begin0
	.short	.Ltmp3403-.Ltmp3402     # Loc expr size
.Ltmp3402:
	.byte	83                      # DW_OP_reg3
.Ltmp3403:
	.quad	.Ltmp1406-.Lfunc_begin0
	.quad	.Ltmp1411-.Lfunc_begin0
	.short	.Ltmp3405-.Ltmp3404     # Loc expr size
.Ltmp3404:
	.byte	94                      # DW_OP_reg14
.Ltmp3405:
	.quad	.Ltmp1411-.Lfunc_begin0
	.quad	.Ltmp1416-.Lfunc_begin0
	.short	.Ltmp3407-.Ltmp3406     # Loc expr size
.Ltmp3406:
	.byte	83                      # DW_OP_reg3
.Ltmp3407:
	.quad	.Ltmp1416-.Lfunc_begin0
	.quad	.Ltmp1421-.Lfunc_begin0
	.short	.Ltmp3409-.Ltmp3408     # Loc expr size
.Ltmp3408:
	.byte	94                      # DW_OP_reg14
.Ltmp3409:
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1426-.Lfunc_begin0
	.short	.Ltmp3411-.Ltmp3410     # Loc expr size
.Ltmp3410:
	.byte	83                      # DW_OP_reg3
.Ltmp3411:
	.quad	.Ltmp1426-.Lfunc_begin0
	.quad	.Ltmp1431-.Lfunc_begin0
	.short	.Ltmp3413-.Ltmp3412     # Loc expr size
.Ltmp3412:
	.byte	94                      # DW_OP_reg14
.Ltmp3413:
	.quad	.Ltmp1431-.Lfunc_begin0
	.quad	.Ltmp1436-.Lfunc_begin0
	.short	.Ltmp3415-.Ltmp3414     # Loc expr size
.Ltmp3414:
	.byte	83                      # DW_OP_reg3
.Ltmp3415:
	.quad	.Ltmp1436-.Lfunc_begin0
	.quad	.Ltmp1437-.Lfunc_begin0
	.short	.Ltmp3417-.Ltmp3416     # Loc expr size
.Ltmp3416:
	.byte	95                      # DW_OP_reg15
.Ltmp3417:
	.quad	.Ltmp1444-.Lfunc_begin0
	.quad	.Ltmp1448-.Lfunc_begin0
	.short	.Ltmp3419-.Ltmp3418     # Loc expr size
.Ltmp3418:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3419:
	.quad	.Ltmp1448-.Lfunc_begin0
	.quad	.Ltmp1453-.Lfunc_begin0
	.short	.Ltmp3421-.Ltmp3420     # Loc expr size
.Ltmp3420:
	.byte	94                      # DW_OP_reg14
.Ltmp3421:
	.quad	.Ltmp1453-.Lfunc_begin0
	.quad	.Ltmp1458-.Lfunc_begin0
	.short	.Ltmp3423-.Ltmp3422     # Loc expr size
.Ltmp3422:
	.byte	83                      # DW_OP_reg3
.Ltmp3423:
	.quad	.Ltmp1458-.Lfunc_begin0
	.quad	.Ltmp1463-.Lfunc_begin0
	.short	.Ltmp3425-.Ltmp3424     # Loc expr size
.Ltmp3424:
	.byte	94                      # DW_OP_reg14
.Ltmp3425:
	.quad	.Ltmp1463-.Lfunc_begin0
	.quad	.Ltmp1468-.Lfunc_begin0
	.short	.Ltmp3427-.Ltmp3426     # Loc expr size
.Ltmp3426:
	.byte	83                      # DW_OP_reg3
.Ltmp3427:
	.quad	.Ltmp1468-.Lfunc_begin0
	.quad	.Ltmp1473-.Lfunc_begin0
	.short	.Ltmp3429-.Ltmp3428     # Loc expr size
.Ltmp3428:
	.byte	94                      # DW_OP_reg14
.Ltmp3429:
	.quad	.Ltmp1473-.Lfunc_begin0
	.quad	.Ltmp1478-.Lfunc_begin0
	.short	.Ltmp3431-.Ltmp3430     # Loc expr size
.Ltmp3430:
	.byte	83                      # DW_OP_reg3
.Ltmp3431:
	.quad	.Ltmp1478-.Lfunc_begin0
	.quad	.Ltmp1483-.Lfunc_begin0
	.short	.Ltmp3433-.Ltmp3432     # Loc expr size
.Ltmp3432:
	.byte	94                      # DW_OP_reg14
.Ltmp3433:
	.quad	.Ltmp1483-.Lfunc_begin0
	.quad	.Ltmp1488-.Lfunc_begin0
	.short	.Ltmp3435-.Ltmp3434     # Loc expr size
.Ltmp3434:
	.byte	83                      # DW_OP_reg3
.Ltmp3435:
	.quad	.Ltmp1488-.Lfunc_begin0
	.quad	.Ltmp1493-.Lfunc_begin0
	.short	.Ltmp3437-.Ltmp3436     # Loc expr size
.Ltmp3436:
	.byte	94                      # DW_OP_reg14
.Ltmp3437:
	.quad	.Ltmp1493-.Lfunc_begin0
	.quad	.Ltmp1498-.Lfunc_begin0
	.short	.Ltmp3439-.Ltmp3438     # Loc expr size
.Ltmp3438:
	.byte	83                      # DW_OP_reg3
.Ltmp3439:
	.quad	.Ltmp1498-.Lfunc_begin0
	.quad	.Ltmp1503-.Lfunc_begin0
	.short	.Ltmp3441-.Ltmp3440     # Loc expr size
.Ltmp3440:
	.byte	94                      # DW_OP_reg14
.Ltmp3441:
	.quad	.Ltmp1503-.Lfunc_begin0
	.quad	.Ltmp1508-.Lfunc_begin0
	.short	.Ltmp3443-.Ltmp3442     # Loc expr size
.Ltmp3442:
	.byte	83                      # DW_OP_reg3
.Ltmp3443:
	.quad	.Ltmp1508-.Lfunc_begin0
	.quad	.Ltmp1509-.Lfunc_begin0
	.short	.Ltmp3445-.Ltmp3444     # Loc expr size
.Ltmp3444:
	.byte	94                      # DW_OP_reg14
.Ltmp3445:
	.quad	.Ltmp1522-.Lfunc_begin0
	.quad	.Ltmp1523-.Lfunc_begin0
	.short	.Ltmp3447-.Ltmp3446     # Loc expr size
.Ltmp3446:
	.byte	83                      # DW_OP_reg3
.Ltmp3447:
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp1305-.Lfunc_begin0
	.quad	.Ltmp1441-.Lfunc_begin0
	.short	.Ltmp3449-.Ltmp3448     # Loc expr size
.Ltmp3448:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3449:
	.quad	.Ltmp1441-.Lfunc_begin0
	.quad	.Ltmp1442-.Lfunc_begin0
	.short	.Ltmp3451-.Ltmp3450     # Loc expr size
.Ltmp3450:
	.byte	16                      # DW_OP_constu
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
.Ltmp3451:
	.quad	.Ltmp1442-.Lfunc_begin0
	.quad	.Ltmp1514-.Lfunc_begin0
	.short	.Ltmp3453-.Ltmp3452     # Loc expr size
.Ltmp3452:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3453:
	.quad	.Ltmp1514-.Lfunc_begin0
	.quad	.Ltmp1515-.Lfunc_begin0
	.short	.Ltmp3455-.Ltmp3454     # Loc expr size
.Ltmp3454:
	.byte	16                      # DW_OP_constu
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
.Ltmp3455:
	.quad	.Ltmp1515-.Lfunc_begin0
	.quad	.Ltmp1528-.Lfunc_begin0
	.short	.Ltmp3457-.Ltmp3456     # Loc expr size
.Ltmp3456:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3457:
	.quad	.Ltmp1528-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3459-.Ltmp3458     # Loc expr size
.Ltmp3458:
	.byte	16                      # DW_OP_constu
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
.Ltmp3459:
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp1305-.Lfunc_begin0
	.quad	.Ltmp1371-.Lfunc_begin0
	.short	.Ltmp3461-.Ltmp3460     # Loc expr size
.Ltmp3460:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3461:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1437-.Lfunc_begin0
	.short	.Ltmp3463-.Ltmp3462     # Loc expr size
.Ltmp3462:
	.byte	93                      # DW_OP_reg13
.Ltmp3463:
	.quad	.Ltmp1437-.Lfunc_begin0
	.quad	.Ltmp1439-.Lfunc_begin0
	.short	.Ltmp3465-.Ltmp3464     # Loc expr size
.Ltmp3464:
	.byte	95                      # DW_OP_reg15
.Ltmp3465:
	.quad	.Ltmp1509-.Lfunc_begin0
	.quad	.Ltmp1512-.Lfunc_begin0
	.short	.Ltmp3467-.Ltmp3466     # Loc expr size
.Ltmp3466:
	.byte	94                      # DW_OP_reg14
.Ltmp3467:
	.quad	.Ltmp1523-.Lfunc_begin0
	.quad	.Ltmp1526-.Lfunc_begin0
	.short	.Ltmp3469-.Ltmp3468     # Loc expr size
.Ltmp3468:
	.byte	83                      # DW_OP_reg3
.Ltmp3469:
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp1308-.Lfunc_begin0
	.quad	.Ltmp1309-.Lfunc_begin0
	.short	.Ltmp3471-.Ltmp3470     # Loc expr size
.Ltmp3470:
	.byte	94                      # DW_OP_reg14
.Ltmp3471:
	.quad	.Ltmp1312-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	.Ltmp3473-.Ltmp3472     # Loc expr size
.Ltmp3472:
	.byte	83                      # DW_OP_reg3
.Ltmp3473:
	.quad	.Ltmp1317-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	.Ltmp3475-.Ltmp3474     # Loc expr size
.Ltmp3474:
	.byte	94                      # DW_OP_reg14
.Ltmp3475:
	.quad	.Ltmp1322-.Lfunc_begin0
	.quad	.Ltmp1323-.Lfunc_begin0
	.short	.Ltmp3477-.Ltmp3476     # Loc expr size
.Ltmp3476:
	.byte	83                      # DW_OP_reg3
.Ltmp3477:
	.quad	.Ltmp1327-.Lfunc_begin0
	.quad	.Ltmp1328-.Lfunc_begin0
	.short	.Ltmp3479-.Ltmp3478     # Loc expr size
.Ltmp3478:
	.byte	94                      # DW_OP_reg14
.Ltmp3479:
	.quad	.Ltmp1332-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	.Ltmp3481-.Ltmp3480     # Loc expr size
.Ltmp3480:
	.byte	83                      # DW_OP_reg3
.Ltmp3481:
	.quad	.Ltmp1337-.Lfunc_begin0
	.quad	.Ltmp1338-.Lfunc_begin0
	.short	.Ltmp3483-.Ltmp3482     # Loc expr size
.Ltmp3482:
	.byte	94                      # DW_OP_reg14
.Ltmp3483:
	.quad	.Ltmp1342-.Lfunc_begin0
	.quad	.Ltmp1343-.Lfunc_begin0
	.short	.Ltmp3485-.Ltmp3484     # Loc expr size
.Ltmp3484:
	.byte	83                      # DW_OP_reg3
.Ltmp3485:
	.quad	.Ltmp1347-.Lfunc_begin0
	.quad	.Ltmp1348-.Lfunc_begin0
	.short	.Ltmp3487-.Ltmp3486     # Loc expr size
.Ltmp3486:
	.byte	94                      # DW_OP_reg14
.Ltmp3487:
	.quad	.Ltmp1352-.Lfunc_begin0
	.quad	.Ltmp1353-.Lfunc_begin0
	.short	.Ltmp3489-.Ltmp3488     # Loc expr size
.Ltmp3488:
	.byte	83                      # DW_OP_reg3
.Ltmp3489:
	.quad	.Ltmp1357-.Lfunc_begin0
	.quad	.Ltmp1358-.Lfunc_begin0
	.short	.Ltmp3491-.Ltmp3490     # Loc expr size
.Ltmp3490:
	.byte	94                      # DW_OP_reg14
.Ltmp3491:
	.quad	.Ltmp1362-.Lfunc_begin0
	.quad	.Ltmp1363-.Lfunc_begin0
	.short	.Ltmp3493-.Ltmp3492     # Loc expr size
.Ltmp3492:
	.byte	92                      # DW_OP_reg12
.Ltmp3493:
	.quad	.Ltmp1368-.Lfunc_begin0
	.quad	.Ltmp1369-.Lfunc_begin0
	.short	.Ltmp3495-.Ltmp3494     # Loc expr size
.Ltmp3494:
	.byte	93                      # DW_OP_reg13
.Ltmp3495:
	.quad	.Ltmp1375-.Lfunc_begin0
	.quad	.Ltmp1376-.Lfunc_begin0
	.short	.Ltmp3497-.Ltmp3496     # Loc expr size
.Ltmp3496:
	.byte	94                      # DW_OP_reg14
.Ltmp3497:
	.quad	.Ltmp1379-.Lfunc_begin0
	.quad	.Ltmp1380-.Lfunc_begin0
	.short	.Ltmp3499-.Ltmp3498     # Loc expr size
.Ltmp3498:
	.byte	83                      # DW_OP_reg3
.Ltmp3499:
	.quad	.Ltmp1384-.Lfunc_begin0
	.quad	.Ltmp1385-.Lfunc_begin0
	.short	.Ltmp3501-.Ltmp3500     # Loc expr size
.Ltmp3500:
	.byte	94                      # DW_OP_reg14
.Ltmp3501:
	.quad	.Ltmp1389-.Lfunc_begin0
	.quad	.Ltmp1390-.Lfunc_begin0
	.short	.Ltmp3503-.Ltmp3502     # Loc expr size
.Ltmp3502:
	.byte	83                      # DW_OP_reg3
.Ltmp3503:
	.quad	.Ltmp1394-.Lfunc_begin0
	.quad	.Ltmp1395-.Lfunc_begin0
	.short	.Ltmp3505-.Ltmp3504     # Loc expr size
.Ltmp3504:
	.byte	94                      # DW_OP_reg14
.Ltmp3505:
	.quad	.Ltmp1399-.Lfunc_begin0
	.quad	.Ltmp1400-.Lfunc_begin0
	.short	.Ltmp3507-.Ltmp3506     # Loc expr size
.Ltmp3506:
	.byte	83                      # DW_OP_reg3
.Ltmp3507:
	.quad	.Ltmp1404-.Lfunc_begin0
	.quad	.Ltmp1405-.Lfunc_begin0
	.short	.Ltmp3509-.Ltmp3508     # Loc expr size
.Ltmp3508:
	.byte	94                      # DW_OP_reg14
.Ltmp3509:
	.quad	.Ltmp1409-.Lfunc_begin0
	.quad	.Ltmp1410-.Lfunc_begin0
	.short	.Ltmp3511-.Ltmp3510     # Loc expr size
.Ltmp3510:
	.byte	83                      # DW_OP_reg3
.Ltmp3511:
	.quad	.Ltmp1414-.Lfunc_begin0
	.quad	.Ltmp1415-.Lfunc_begin0
	.short	.Ltmp3513-.Ltmp3512     # Loc expr size
.Ltmp3512:
	.byte	94                      # DW_OP_reg14
.Ltmp3513:
	.quad	.Ltmp1419-.Lfunc_begin0
	.quad	.Ltmp1420-.Lfunc_begin0
	.short	.Ltmp3515-.Ltmp3514     # Loc expr size
.Ltmp3514:
	.byte	83                      # DW_OP_reg3
.Ltmp3515:
	.quad	.Ltmp1424-.Lfunc_begin0
	.quad	.Ltmp1425-.Lfunc_begin0
	.short	.Ltmp3517-.Ltmp3516     # Loc expr size
.Ltmp3516:
	.byte	94                      # DW_OP_reg14
.Ltmp3517:
	.quad	.Ltmp1429-.Lfunc_begin0
	.quad	.Ltmp1430-.Lfunc_begin0
	.short	.Ltmp3519-.Ltmp3518     # Loc expr size
.Ltmp3518:
	.byte	83                      # DW_OP_reg3
.Ltmp3519:
	.quad	.Ltmp1434-.Lfunc_begin0
	.quad	.Ltmp1435-.Lfunc_begin0
	.short	.Ltmp3521-.Ltmp3520     # Loc expr size
.Ltmp3520:
	.byte	95                      # DW_OP_reg15
.Ltmp3521:
	.quad	.Ltmp1447-.Lfunc_begin0
	.quad	.Ltmp1448-.Lfunc_begin0
	.short	.Ltmp3523-.Ltmp3522     # Loc expr size
.Ltmp3522:
	.byte	94                      # DW_OP_reg14
.Ltmp3523:
	.quad	.Ltmp1451-.Lfunc_begin0
	.quad	.Ltmp1452-.Lfunc_begin0
	.short	.Ltmp3525-.Ltmp3524     # Loc expr size
.Ltmp3524:
	.byte	83                      # DW_OP_reg3
.Ltmp3525:
	.quad	.Ltmp1456-.Lfunc_begin0
	.quad	.Ltmp1457-.Lfunc_begin0
	.short	.Ltmp3527-.Ltmp3526     # Loc expr size
.Ltmp3526:
	.byte	94                      # DW_OP_reg14
.Ltmp3527:
	.quad	.Ltmp1461-.Lfunc_begin0
	.quad	.Ltmp1462-.Lfunc_begin0
	.short	.Ltmp3529-.Ltmp3528     # Loc expr size
.Ltmp3528:
	.byte	83                      # DW_OP_reg3
.Ltmp3529:
	.quad	.Ltmp1466-.Lfunc_begin0
	.quad	.Ltmp1467-.Lfunc_begin0
	.short	.Ltmp3531-.Ltmp3530     # Loc expr size
.Ltmp3530:
	.byte	94                      # DW_OP_reg14
.Ltmp3531:
	.quad	.Ltmp1471-.Lfunc_begin0
	.quad	.Ltmp1472-.Lfunc_begin0
	.short	.Ltmp3533-.Ltmp3532     # Loc expr size
.Ltmp3532:
	.byte	83                      # DW_OP_reg3
.Ltmp3533:
	.quad	.Ltmp1476-.Lfunc_begin0
	.quad	.Ltmp1477-.Lfunc_begin0
	.short	.Ltmp3535-.Ltmp3534     # Loc expr size
.Ltmp3534:
	.byte	94                      # DW_OP_reg14
.Ltmp3535:
	.quad	.Ltmp1481-.Lfunc_begin0
	.quad	.Ltmp1482-.Lfunc_begin0
	.short	.Ltmp3537-.Ltmp3536     # Loc expr size
.Ltmp3536:
	.byte	83                      # DW_OP_reg3
.Ltmp3537:
	.quad	.Ltmp1486-.Lfunc_begin0
	.quad	.Ltmp1487-.Lfunc_begin0
	.short	.Ltmp3539-.Ltmp3538     # Loc expr size
.Ltmp3538:
	.byte	94                      # DW_OP_reg14
.Ltmp3539:
	.quad	.Ltmp1491-.Lfunc_begin0
	.quad	.Ltmp1492-.Lfunc_begin0
	.short	.Ltmp3541-.Ltmp3540     # Loc expr size
.Ltmp3540:
	.byte	83                      # DW_OP_reg3
.Ltmp3541:
	.quad	.Ltmp1496-.Lfunc_begin0
	.quad	.Ltmp1497-.Lfunc_begin0
	.short	.Ltmp3543-.Ltmp3542     # Loc expr size
.Ltmp3542:
	.byte	94                      # DW_OP_reg14
.Ltmp3543:
	.quad	.Ltmp1501-.Lfunc_begin0
	.quad	.Ltmp1502-.Lfunc_begin0
	.short	.Ltmp3545-.Ltmp3544     # Loc expr size
.Ltmp3544:
	.byte	83                      # DW_OP_reg3
.Ltmp3545:
	.quad	.Ltmp1506-.Lfunc_begin0
	.quad	.Ltmp1507-.Lfunc_begin0
	.short	.Ltmp3547-.Ltmp3546     # Loc expr size
.Ltmp3546:
	.byte	94                      # DW_OP_reg14
.Ltmp3547:
	.quad	.Ltmp1520-.Lfunc_begin0
	.quad	.Ltmp1521-.Lfunc_begin0
	.short	.Ltmp3549-.Ltmp3548     # Loc expr size
.Ltmp3548:
	.byte	83                      # DW_OP_reg3
.Ltmp3549:
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp1364-.Lfunc_begin0
	.quad	.Ltmp1439-.Lfunc_begin0
	.short	.Ltmp3551-.Ltmp3550     # Loc expr size
.Ltmp3550:
	.byte	92                      # DW_OP_reg12
.Ltmp3551:
	.quad	.Ltmp1442-.Lfunc_begin0
	.quad	.Ltmp1512-.Lfunc_begin0
	.short	.Ltmp3553-.Ltmp3552     # Loc expr size
.Ltmp3552:
	.byte	92                      # DW_OP_reg12
.Ltmp3553:
	.quad	.Ltmp1515-.Lfunc_begin0
	.quad	.Ltmp1526-.Lfunc_begin0
	.short	.Ltmp3555-.Ltmp3554     # Loc expr size
.Ltmp3554:
	.byte	92                      # DW_OP_reg12
.Ltmp3555:
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp1365-.Lfunc_begin0
	.quad	.Ltmp1372-.Lfunc_begin0
	.short	.Ltmp3557-.Ltmp3556     # Loc expr size
.Ltmp3556:
	.byte	85                      # DW_OP_reg5
.Ltmp3557:
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp1365-.Lfunc_begin0
	.quad	.Ltmp1372-.Lfunc_begin0
	.short	.Ltmp3559-.Ltmp3558     # Loc expr size
.Ltmp3558:
	.byte	85                      # DW_OP_reg5
.Ltmp3559:
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp1555-.Lfunc_begin0
	.quad	.Ltmp1563-.Lfunc_begin0
	.short	.Ltmp3561-.Ltmp3560     # Loc expr size
.Ltmp3560:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3561:
	.quad	.Ltmp1564-.Lfunc_begin0
	.quad	.Ltmp1567-.Lfunc_begin0
	.short	.Ltmp3563-.Ltmp3562     # Loc expr size
.Ltmp3562:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3563:
	.quad	.Ltmp1569-.Lfunc_begin0
	.quad	.Ltmp1572-.Lfunc_begin0
	.short	.Ltmp3565-.Ltmp3564     # Loc expr size
.Ltmp3564:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3565:
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp1576-.Lfunc_begin0
	.quad	.Ltmp1591-.Lfunc_begin0
	.short	.Ltmp3567-.Ltmp3566     # Loc expr size
.Ltmp3566:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3567:
	.quad	.Ltmp1591-.Lfunc_begin0
	.quad	.Ltmp1592-.Lfunc_begin0
	.short	.Ltmp3569-.Ltmp3568     # Loc expr size
.Ltmp3568:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240~"                 # -224
.Ltmp3569:
	.quad	.Ltmp1592-.Lfunc_begin0
	.quad	.Ltmp1594-.Lfunc_begin0
	.short	.Ltmp3571-.Ltmp3570     # Loc expr size
.Ltmp3570:
	.byte	124                     # DW_OP_breg12
	.byte	0                       # 0
.Ltmp3571:
	.quad	.Ltmp1594-.Lfunc_begin0
	.quad	.Ltmp1595-.Lfunc_begin0
	.short	.Ltmp3573-.Ltmp3572     # Loc expr size
.Ltmp3572:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3573:
	.quad	.Ltmp1595-.Lfunc_begin0
	.quad	.Ltmp1598-.Lfunc_begin0
	.short	.Ltmp3575-.Ltmp3574     # Loc expr size
.Ltmp3574:
	.byte	118                     # DW_OP_breg6
	.ascii	"\240~"                 # -224
.Ltmp3575:
	.quad	.Ltmp1598-.Lfunc_begin0
	.quad	.Ltmp1600-.Lfunc_begin0
	.short	.Ltmp3577-.Ltmp3576     # Loc expr size
.Ltmp3576:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3577:
	.quad	.Ltmp1600-.Lfunc_begin0
	.quad	.Ltmp1604-.Lfunc_begin0
	.short	.Ltmp3579-.Ltmp3578     # Loc expr size
.Ltmp3578:
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
.Ltmp3579:
	.quad	.Ltmp1607-.Lfunc_begin0
	.quad	.Ltmp1609-.Lfunc_begin0
	.short	.Ltmp3581-.Ltmp3580     # Loc expr size
.Ltmp3580:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3581:
	.quad	.Ltmp1609-.Lfunc_begin0
	.quad	.Ltmp1612-.Lfunc_begin0
	.short	.Ltmp3583-.Ltmp3582     # Loc expr size
.Ltmp3582:
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
.Ltmp3583:
	.quad	.Ltmp1614-.Lfunc_begin0
	.quad	.Ltmp1616-.Lfunc_begin0
	.short	.Ltmp3585-.Ltmp3584     # Loc expr size
.Ltmp3584:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3585:
	.quad	.Ltmp1616-.Lfunc_begin0
	.quad	.Ltmp1619-.Lfunc_begin0
	.short	.Ltmp3587-.Ltmp3586     # Loc expr size
.Ltmp3586:
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
.Ltmp3587:
	.quad	.Ltmp1620-.Lfunc_begin0
	.quad	.Ltmp1657-.Lfunc_begin0
	.short	.Ltmp3589-.Ltmp3588     # Loc expr size
.Ltmp3588:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3589:
	.quad	.Ltmp1657-.Lfunc_begin0
	.quad	.Ltmp1671-.Lfunc_begin0
	.short	.Ltmp3591-.Ltmp3590     # Loc expr size
.Ltmp3590:
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
.Ltmp3591:
	.quad	.Ltmp1675-.Lfunc_begin0
	.quad	.Ltmp1691-.Lfunc_begin0
	.short	.Ltmp3593-.Ltmp3592     # Loc expr size
.Ltmp3592:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3593:
	.quad	.Ltmp1691-.Lfunc_begin0
	.quad	.Ltmp1694-.Lfunc_begin0
	.short	.Ltmp3595-.Ltmp3594     # Loc expr size
.Ltmp3594:
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
.Ltmp3595:
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp1623-.Lfunc_begin0
	.quad	.Ltmp1629-.Lfunc_begin0
	.short	.Ltmp3597-.Ltmp3596     # Loc expr size
.Ltmp3596:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3597:
	.quad	.Ltmp1629-.Lfunc_begin0
	.quad	.Ltmp1631-.Lfunc_begin0
	.short	.Ltmp3599-.Ltmp3598     # Loc expr size
.Ltmp3598:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3599:
	.quad	.Ltmp1631-.Lfunc_begin0
	.quad	.Ltmp1647-.Lfunc_begin0
	.short	.Ltmp3601-.Ltmp3600     # Loc expr size
.Ltmp3600:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3601:
	.quad	.Ltmp1647-.Lfunc_begin0
	.quad	.Ltmp1648-.Lfunc_begin0
	.short	.Ltmp3603-.Ltmp3602     # Loc expr size
.Ltmp3602:
	.byte	118                     # DW_OP_breg6
	.ascii	"\260~"                 # -208
.Ltmp3603:
	.quad	.Ltmp1648-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3605-.Ltmp3604     # Loc expr size
.Ltmp3604:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3605:
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp1625-.Lfunc_begin0
	.quad	.Ltmp1636-.Lfunc_begin0
	.short	.Ltmp3607-.Ltmp3606     # Loc expr size
.Ltmp3606:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3607:
	.quad	.Ltmp1636-.Lfunc_begin0
	.quad	.Ltmp1638-.Lfunc_begin0
	.short	.Ltmp3609-.Ltmp3608     # Loc expr size
.Ltmp3608:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3609:
	.quad	.Ltmp1639-.Lfunc_begin0
	.quad	.Ltmp1641-.Lfunc_begin0
	.short	.Ltmp3611-.Ltmp3610     # Loc expr size
.Ltmp3610:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3611:
	.quad	.Ltmp1641-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3613-.Ltmp3612     # Loc expr size
.Ltmp3612:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250~"                 # -216
.Ltmp3613:
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp1646-.Lfunc_begin0
	.quad	.Ltmp1648-.Lfunc_begin0
	.short	.Ltmp3615-.Ltmp3614     # Loc expr size
.Ltmp3614:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3615:
	.quad	.Ltmp1654-.Lfunc_begin0
	.quad	.Ltmp1655-.Lfunc_begin0
	.short	.Ltmp3617-.Ltmp3616     # Loc expr size
.Ltmp3616:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3617:
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp1657-.Lfunc_begin0
	.quad	.Ltmp1671-.Lfunc_begin0
	.short	.Ltmp3619-.Ltmp3618     # Loc expr size
.Ltmp3618:
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
.Ltmp3619:
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp1660-.Lfunc_begin0
	.quad	.Ltmp1668-.Lfunc_begin0
	.short	.Ltmp3621-.Ltmp3620     # Loc expr size
.Ltmp3620:
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
.Ltmp3621:
	.quad	.Ltmp1685-.Lfunc_begin0
	.quad	.Ltmp1687-.Lfunc_begin0
	.short	.Ltmp3623-.Ltmp3622     # Loc expr size
.Ltmp3622:
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
.Ltmp3623:
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp1660-.Lfunc_begin0
	.quad	.Ltmp1668-.Lfunc_begin0
	.short	.Ltmp3625-.Ltmp3624     # Loc expr size
.Ltmp3624:
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
.Ltmp3625:
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Ltmp1665-.Lfunc_begin0
	.quad	.Ltmp1674-.Lfunc_begin0
	.short	.Ltmp3627-.Ltmp3626     # Loc expr size
.Ltmp3626:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3627:
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp1678-.Lfunc_begin0
	.quad	.Ltmp1683-.Lfunc_begin0
	.short	.Ltmp3629-.Ltmp3628     # Loc expr size
.Ltmp3628:
	.byte	92                      # DW_OP_reg12
.Ltmp3629:
	.quad	.Ltmp1683-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3631-.Ltmp3630     # Loc expr size
.Ltmp3630:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3631:
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp1689-.Lfunc_begin0
	.quad	.Ltmp1708-.Lfunc_begin0
	.short	.Ltmp3633-.Ltmp3632     # Loc expr size
.Ltmp3632:
	.byte	126                     # DW_OP_breg14
	.byte	0                       # 0
.Ltmp3633:
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Ltmp1689-.Lfunc_begin0
	.quad	.Ltmp1708-.Lfunc_begin0
	.short	.Ltmp3635-.Ltmp3634     # Loc expr size
.Ltmp3634:
	.byte	126                     # DW_OP_breg14
	.byte	0                       # 0
.Ltmp3635:
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Ltmp1696-.Lfunc_begin0
	.quad	.Ltmp1703-.Lfunc_begin0
	.short	.Ltmp3637-.Ltmp3636     # Loc expr size
.Ltmp3636:
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
.Ltmp3637:
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp1696-.Lfunc_begin0
	.quad	.Ltmp1703-.Lfunc_begin0
	.short	.Ltmp3639-.Ltmp3638     # Loc expr size
.Ltmp3638:
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
.Ltmp3639:
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp1711-.Lfunc_begin0
	.quad	.Ltmp1714-.Lfunc_begin0
	.short	.Ltmp3641-.Ltmp3640     # Loc expr size
.Ltmp3640:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3641:
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp1717-.Lfunc_begin0
	.quad	.Ltmp1721-.Lfunc_begin0
	.short	.Ltmp3643-.Ltmp3642     # Loc expr size
.Ltmp3642:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3643:
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp1722-.Lfunc_begin0
	.quad	.Ltmp1739-.Lfunc_begin0
	.short	.Ltmp3645-.Ltmp3644     # Loc expr size
.Ltmp3644:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3645:
	.quad	.Ltmp1739-.Lfunc_begin0
	.quad	.Ltmp1740-.Lfunc_begin0
	.short	.Ltmp3647-.Ltmp3646     # Loc expr size
.Ltmp3646:
	.byte	83                      # DW_OP_reg3
.Ltmp3647:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3649-.Ltmp3648     # Loc expr size
.Ltmp3648:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3649:
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp1736-.Lfunc_begin0
	.quad	.Ltmp1737-.Lfunc_begin0
	.short	.Ltmp3651-.Ltmp3650     # Loc expr size
.Ltmp3650:
	.byte	83                      # DW_OP_reg3
.Ltmp3651:
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp1747-.Lfunc_begin0
	.quad	.Ltmp1781-.Lfunc_begin0
	.short	.Ltmp3653-.Ltmp3652     # Loc expr size
.Ltmp3652:
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
.Ltmp3653:
	.quad	.Ltmp1781-.Lfunc_begin0
	.quad	.Ltmp1783-.Lfunc_begin0
	.short	.Ltmp3655-.Ltmp3654     # Loc expr size
.Ltmp3654:
	.byte	17                      # DW_OP_consts
	.byte	12                      # 12
	.byte	159                     # DW_OP_stack_value
.Ltmp3655:
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	.Ltmp3657-.Ltmp3656     # Loc expr size
.Ltmp3656:
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
.Ltmp3657:
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp1757-.Lfunc_begin0
	.quad	.Ltmp1759-.Lfunc_begin0
	.short	.Ltmp3659-.Ltmp3658     # Loc expr size
.Ltmp3658:
	.byte	94                      # DW_OP_reg14
.Ltmp3659:
	.quad	.Ltmp1761-.Lfunc_begin0
	.quad	.Ltmp1761-.Lfunc_begin0
	.short	.Ltmp3661-.Ltmp3660     # Loc expr size
.Ltmp3660:
	.byte	94                      # DW_OP_reg14
.Ltmp3661:
	.quad	.Ltmp1763-.Lfunc_begin0
	.quad	.Ltmp1765-.Lfunc_begin0
	.short	.Ltmp3663-.Ltmp3662     # Loc expr size
.Ltmp3662:
	.byte	94                      # DW_OP_reg14
.Ltmp3663:
	.quad	.Ltmp1769-.Lfunc_begin0
	.quad	.Ltmp1771-.Lfunc_begin0
	.short	.Ltmp3665-.Ltmp3664     # Loc expr size
.Ltmp3664:
	.byte	94                      # DW_OP_reg14
.Ltmp3665:
	.quad	.Ltmp1778-.Lfunc_begin0
	.quad	.Ltmp1781-.Lfunc_begin0
	.short	.Ltmp3667-.Ltmp3666     # Loc expr size
.Ltmp3666:
	.byte	83                      # DW_OP_reg3
.Ltmp3667:
	.quad	.Ltmp1804-.Lfunc_begin0
	.quad	.Ltmp1807-.Lfunc_begin0
	.short	.Ltmp3669-.Ltmp3668     # Loc expr size
.Ltmp3668:
	.byte	92                      # DW_OP_reg12
.Ltmp3669:
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp1776-.Lfunc_begin0
	.quad	.Ltmp1792-.Lfunc_begin0
	.short	.Ltmp3671-.Ltmp3670     # Loc expr size
.Ltmp3670:
	.byte	118                     # DW_OP_breg6
	.ascii	"\200~"                 # -256
.Ltmp3671:
	.quad	.Ltmp1792-.Lfunc_begin0
	.quad	.Ltmp1795-.Lfunc_begin0
	.short	.Ltmp3673-.Ltmp3672     # Loc expr size
.Ltmp3672:
	.byte	92                      # DW_OP_reg12
.Ltmp3673:
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp1827-.Lfunc_begin0
	.short	.Ltmp3675-.Ltmp3674     # Loc expr size
.Ltmp3674:
	.byte	85                      # DW_OP_reg5
.Ltmp3675:
	.quad	.Ltmp1827-.Lfunc_begin0
	.quad	.Ltmp1829-.Lfunc_begin0
	.short	.Ltmp3677-.Ltmp3676     # Loc expr size
.Ltmp3676:
	.byte	94                      # DW_OP_reg14
.Ltmp3677:
	.quad	.Ltmp1829-.Lfunc_begin0
	.quad	.Ltmp1830-.Lfunc_begin0
	.short	.Ltmp3679-.Ltmp3678     # Loc expr size
.Ltmp3678:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"                 # -152
.Ltmp3679:
	.quad	.Ltmp1830-.Lfunc_begin0
	.quad	.Ltmp1834-.Lfunc_begin0
	.short	.Ltmp3681-.Ltmp3680     # Loc expr size
.Ltmp3680:
	.byte	94                      # DW_OP_reg14
.Ltmp3681:
	.quad	.Ltmp1835-.Lfunc_begin0
	.quad	.Ltmp1835-.Lfunc_begin0
	.short	.Ltmp3683-.Ltmp3682     # Loc expr size
.Ltmp3682:
	.byte	94                      # DW_OP_reg14
.Ltmp3683:
	.quad	.Ltmp1835-.Lfunc_begin0
	.quad	.Ltmp1841-.Lfunc_begin0
	.short	.Ltmp3685-.Ltmp3684     # Loc expr size
.Ltmp3684:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"                 # -152
.Ltmp3685:
	.quad	.Ltmp1841-.Lfunc_begin0
	.quad	.Ltmp1844-.Lfunc_begin0
	.short	.Ltmp3687-.Ltmp3686     # Loc expr size
.Ltmp3686:
	.byte	94                      # DW_OP_reg14
.Ltmp3687:
	.quad	.Ltmp1844-.Lfunc_begin0
	.quad	.Ltmp1847-.Lfunc_begin0
	.short	.Ltmp3689-.Ltmp3688     # Loc expr size
.Ltmp3688:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"                 # -152
.Ltmp3689:
	.quad	.Ltmp1847-.Lfunc_begin0
	.quad	.Ltmp1848-.Lfunc_begin0
	.short	.Ltmp3691-.Ltmp3690     # Loc expr size
.Ltmp3690:
	.byte	94                      # DW_OP_reg14
.Ltmp3691:
	.quad	.Ltmp1848-.Lfunc_begin0
	.quad	.Ltmp1854-.Lfunc_begin0
	.short	.Ltmp3693-.Ltmp3692     # Loc expr size
.Ltmp3692:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"                 # -152
.Ltmp3693:
	.quad	.Ltmp1854-.Lfunc_begin0
	.quad	.Ltmp1857-.Lfunc_begin0
	.short	.Ltmp3695-.Ltmp3694     # Loc expr size
.Ltmp3694:
	.byte	94                      # DW_OP_reg14
.Ltmp3695:
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp1826-.Lfunc_begin0
	.short	.Ltmp3697-.Ltmp3696     # Loc expr size
.Ltmp3696:
	.byte	84                      # DW_OP_reg4
.Ltmp3697:
	.quad	.Ltmp1826-.Lfunc_begin0
	.quad	.Ltmp1909-.Lfunc_begin0
	.short	.Ltmp3699-.Ltmp3698     # Loc expr size
.Ltmp3698:
	.byte	92                      # DW_OP_reg12
.Ltmp3699:
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp1825-.Lfunc_begin0
	.short	.Ltmp3701-.Ltmp3700     # Loc expr size
.Ltmp3700:
	.byte	81                      # DW_OP_reg1
.Ltmp3701:
	.quad	.Ltmp1825-.Lfunc_begin0
	.quad	.Ltmp1934-.Lfunc_begin0
	.short	.Ltmp3703-.Ltmp3702     # Loc expr size
.Ltmp3702:
	.byte	118                     # DW_OP_breg6
	.ascii	"\310~"                 # -184
.Ltmp3703:
	.quad	.Ltmp1934-.Lfunc_begin0
	.quad	.Ltmp1935-.Lfunc_begin0
	.short	.Ltmp3705-.Ltmp3704     # Loc expr size
.Ltmp3704:
	.byte	83                      # DW_OP_reg3
.Ltmp3705:
	.quad	.Ltmp1935-.Lfunc_begin0
	.quad	.Ltmp1936-.Lfunc_begin0
	.short	.Ltmp3707-.Ltmp3706     # Loc expr size
.Ltmp3706:
	.byte	118                     # DW_OP_breg6
	.ascii	"\310~"                 # -184
.Ltmp3707:
	.quad	.Ltmp1936-.Lfunc_begin0
	.quad	.Ltmp1938-.Lfunc_begin0
	.short	.Ltmp3709-.Ltmp3708     # Loc expr size
.Ltmp3708:
	.byte	83                      # DW_OP_reg3
.Ltmp3709:
	.quad	.Ltmp1938-.Lfunc_begin0
	.quad	.Ltmp1939-.Lfunc_begin0
	.short	.Ltmp3711-.Ltmp3710     # Loc expr size
.Ltmp3710:
	.byte	118                     # DW_OP_breg6
	.ascii	"\310~"                 # -184
.Ltmp3711:
	.quad	.Ltmp1939-.Lfunc_begin0
	.quad	.Ltmp1941-.Lfunc_begin0
	.short	.Ltmp3713-.Ltmp3712     # Loc expr size
.Ltmp3712:
	.byte	83                      # DW_OP_reg3
.Ltmp3713:
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp1824-.Lfunc_begin0
	.short	.Ltmp3715-.Ltmp3714     # Loc expr size
.Ltmp3714:
	.byte	82                      # DW_OP_reg2
.Ltmp3715:
	.quad	.Ltmp1824-.Lfunc_begin0
	.quad	.Ltmp1907-.Lfunc_begin0
	.short	.Ltmp3717-.Ltmp3716     # Loc expr size
.Ltmp3716:
	.byte	118                     # DW_OP_breg6
	.ascii	"\320~"                 # -176
.Ltmp3717:
	.quad	.Ltmp1907-.Lfunc_begin0
	.quad	.Ltmp1910-.Lfunc_begin0
	.short	.Ltmp3719-.Ltmp3718     # Loc expr size
.Ltmp3718:
	.byte	83                      # DW_OP_reg3
.Ltmp3719:
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp1834-.Lfunc_begin0
	.quad	.Ltmp1836-.Lfunc_begin0
	.short	.Ltmp3721-.Ltmp3720     # Loc expr size
.Ltmp3720:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3721:
	.quad	.Ltmp1837-.Lfunc_begin0
	.quad	.Ltmp1838-.Lfunc_begin0
	.short	.Ltmp3723-.Ltmp3722     # Loc expr size
.Ltmp3722:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3723:
	.quad	.Ltmp1839-.Lfunc_begin0
	.quad	.Ltmp1841-.Lfunc_begin0
	.short	.Ltmp3725-.Ltmp3724     # Loc expr size
.Ltmp3724:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3725:
	.quad	.Ltmp1842-.Lfunc_begin0
	.quad	.Ltmp1846-.Lfunc_begin0
	.short	.Ltmp3727-.Ltmp3726     # Loc expr size
.Ltmp3726:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3727:
	.quad	.Ltmp1846-.Lfunc_begin0
	.quad	.Ltmp1847-.Lfunc_begin0
	.short	.Ltmp3729-.Ltmp3728     # Loc expr size
.Ltmp3728:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3729:
	.quad	.Ltmp1847-.Lfunc_begin0
	.quad	.Ltmp1924-.Lfunc_begin0
	.short	.Ltmp3731-.Ltmp3730     # Loc expr size
.Ltmp3730:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3731:
	.quad	.Ltmp1924-.Lfunc_begin0
	.quad	.Ltmp1926-.Lfunc_begin0
	.short	.Ltmp3733-.Ltmp3732     # Loc expr size
.Ltmp3732:
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3733:
	.quad	.Ltmp1935-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	.Ltmp3735-.Ltmp3734     # Loc expr size
.Ltmp3734:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3735:
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp1858-.Lfunc_begin0
	.quad	.Ltmp1903-.Lfunc_begin0
	.short	.Ltmp3737-.Ltmp3736     # Loc expr size
.Ltmp3736:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3737:
	.quad	.Ltmp1903-.Lfunc_begin0
	.quad	.Ltmp1905-.Lfunc_begin0
	.short	.Ltmp3739-.Ltmp3738     # Loc expr size
.Ltmp3738:
	.byte	95                      # DW_OP_reg15
.Ltmp3739:
	.quad	.Ltmp1905-.Lfunc_begin0
	.quad	.Ltmp1906-.Lfunc_begin0
	.short	.Ltmp3741-.Ltmp3740     # Loc expr size
.Ltmp3740:
	.byte	82                      # DW_OP_reg2
.Ltmp3741:
	.quad	.Ltmp1906-.Lfunc_begin0
	.quad	.Ltmp1916-.Lfunc_begin0
	.short	.Ltmp3743-.Ltmp3742     # Loc expr size
.Ltmp3742:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3743:
	.quad	.Ltmp1916-.Lfunc_begin0
	.quad	.Ltmp1917-.Lfunc_begin0
	.short	.Ltmp3745-.Ltmp3744     # Loc expr size
.Ltmp3744:
	.byte	83                      # DW_OP_reg3
.Ltmp3745:
	.quad	.Ltmp1918-.Lfunc_begin0
	.quad	.Ltmp1921-.Lfunc_begin0
	.short	.Ltmp3747-.Ltmp3746     # Loc expr size
.Ltmp3746:
	.byte	80                      # DW_OP_reg0
.Ltmp3747:
	.quad	.Ltmp1921-.Lfunc_begin0
	.quad	.Ltmp1925-.Lfunc_begin0
	.short	.Ltmp3749-.Ltmp3748     # Loc expr size
.Ltmp3748:
	.byte	83                      # DW_OP_reg3
.Ltmp3749:
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp1864-.Lfunc_begin0
	.quad	.Ltmp1865-.Lfunc_begin0
	.short	.Ltmp3751-.Ltmp3750     # Loc expr size
.Ltmp3750:
	.byte	94                      # DW_OP_reg14
.Ltmp3751:
	.quad	.Ltmp1865-.Lfunc_begin0
	.quad	.Ltmp1866-.Lfunc_begin0
	.short	.Ltmp3753-.Ltmp3752     # Loc expr size
.Ltmp3752:
	.byte	83                      # DW_OP_reg3
.Ltmp3753:
	.quad	.Ltmp1866-.Lfunc_begin0
	.quad	.Ltmp1867-.Lfunc_begin0
	.short	.Ltmp3755-.Ltmp3754     # Loc expr size
.Ltmp3754:
	.byte	94                      # DW_OP_reg14
.Ltmp3755:
	.quad	.Ltmp1867-.Lfunc_begin0
	.quad	.Ltmp1868-.Lfunc_begin0
	.short	.Ltmp3757-.Ltmp3756     # Loc expr size
.Ltmp3756:
	.byte	83                      # DW_OP_reg3
.Ltmp3757:
	.quad	.Ltmp1868-.Lfunc_begin0
	.quad	.Ltmp1869-.Lfunc_begin0
	.short	.Ltmp3759-.Ltmp3758     # Loc expr size
.Ltmp3758:
	.byte	94                      # DW_OP_reg14
.Ltmp3759:
	.quad	.Ltmp1869-.Lfunc_begin0
	.quad	.Ltmp1870-.Lfunc_begin0
	.short	.Ltmp3761-.Ltmp3760     # Loc expr size
.Ltmp3760:
	.byte	83                      # DW_OP_reg3
.Ltmp3761:
	.quad	.Ltmp1870-.Lfunc_begin0
	.quad	.Ltmp1871-.Lfunc_begin0
	.short	.Ltmp3763-.Ltmp3762     # Loc expr size
.Ltmp3762:
	.byte	94                      # DW_OP_reg14
.Ltmp3763:
	.quad	.Ltmp1871-.Lfunc_begin0
	.quad	.Ltmp1872-.Lfunc_begin0
	.short	.Ltmp3765-.Ltmp3764     # Loc expr size
.Ltmp3764:
	.byte	83                      # DW_OP_reg3
.Ltmp3765:
	.quad	.Ltmp1872-.Lfunc_begin0
	.quad	.Ltmp1873-.Lfunc_begin0
	.short	.Ltmp3767-.Ltmp3766     # Loc expr size
.Ltmp3766:
	.byte	94                      # DW_OP_reg14
.Ltmp3767:
	.quad	.Ltmp1873-.Lfunc_begin0
	.quad	.Ltmp1874-.Lfunc_begin0
	.short	.Ltmp3769-.Ltmp3768     # Loc expr size
.Ltmp3768:
	.byte	83                      # DW_OP_reg3
.Ltmp3769:
	.quad	.Ltmp1874-.Lfunc_begin0
	.quad	.Ltmp1875-.Lfunc_begin0
	.short	.Ltmp3771-.Ltmp3770     # Loc expr size
.Ltmp3770:
	.byte	94                      # DW_OP_reg14
.Ltmp3771:
	.quad	.Ltmp1875-.Lfunc_begin0
	.quad	.Ltmp1876-.Lfunc_begin0
	.short	.Ltmp3773-.Ltmp3772     # Loc expr size
.Ltmp3772:
	.byte	83                      # DW_OP_reg3
.Ltmp3773:
	.quad	.Ltmp1876-.Lfunc_begin0
	.quad	.Ltmp1877-.Lfunc_begin0
	.short	.Ltmp3775-.Ltmp3774     # Loc expr size
.Ltmp3774:
	.byte	94                      # DW_OP_reg14
.Ltmp3775:
	.quad	.Ltmp1877-.Lfunc_begin0
	.quad	.Ltmp1878-.Lfunc_begin0
	.short	.Ltmp3777-.Ltmp3776     # Loc expr size
.Ltmp3776:
	.byte	83                      # DW_OP_reg3
.Ltmp3777:
	.quad	.Ltmp1878-.Lfunc_begin0
	.quad	.Ltmp1879-.Lfunc_begin0
	.short	.Ltmp3779-.Ltmp3778     # Loc expr size
.Ltmp3778:
	.byte	94                      # DW_OP_reg14
.Ltmp3779:
	.quad	.Ltmp1879-.Lfunc_begin0
	.quad	.Ltmp1880-.Lfunc_begin0
	.short	.Ltmp3781-.Ltmp3780     # Loc expr size
.Ltmp3780:
	.byte	83                      # DW_OP_reg3
.Ltmp3781:
	.quad	.Ltmp1880-.Lfunc_begin0
	.quad	.Ltmp1881-.Lfunc_begin0
	.short	.Ltmp3783-.Ltmp3782     # Loc expr size
.Ltmp3782:
	.byte	94                      # DW_OP_reg14
.Ltmp3783:
	.quad	.Ltmp1881-.Lfunc_begin0
	.quad	.Ltmp1882-.Lfunc_begin0
	.short	.Ltmp3785-.Ltmp3784     # Loc expr size
.Ltmp3784:
	.byte	83                      # DW_OP_reg3
.Ltmp3785:
	.quad	.Ltmp1882-.Lfunc_begin0
	.quad	.Ltmp1883-.Lfunc_begin0
	.short	.Ltmp3787-.Ltmp3786     # Loc expr size
.Ltmp3786:
	.byte	94                      # DW_OP_reg14
.Ltmp3787:
	.quad	.Ltmp1883-.Lfunc_begin0
	.quad	.Ltmp1884-.Lfunc_begin0
	.short	.Ltmp3789-.Ltmp3788     # Loc expr size
.Ltmp3788:
	.byte	83                      # DW_OP_reg3
.Ltmp3789:
	.quad	.Ltmp1884-.Lfunc_begin0
	.quad	.Ltmp1885-.Lfunc_begin0
	.short	.Ltmp3791-.Ltmp3790     # Loc expr size
.Ltmp3790:
	.byte	94                      # DW_OP_reg14
.Ltmp3791:
	.quad	.Ltmp1885-.Lfunc_begin0
	.quad	.Ltmp1886-.Lfunc_begin0
	.short	.Ltmp3793-.Ltmp3792     # Loc expr size
.Ltmp3792:
	.byte	83                      # DW_OP_reg3
.Ltmp3793:
	.quad	.Ltmp1886-.Lfunc_begin0
	.quad	.Ltmp1887-.Lfunc_begin0
	.short	.Ltmp3795-.Ltmp3794     # Loc expr size
.Ltmp3794:
	.byte	94                      # DW_OP_reg14
.Ltmp3795:
	.quad	.Ltmp1887-.Lfunc_begin0
	.quad	.Ltmp1888-.Lfunc_begin0
	.short	.Ltmp3797-.Ltmp3796     # Loc expr size
.Ltmp3796:
	.byte	83                      # DW_OP_reg3
.Ltmp3797:
	.quad	.Ltmp1888-.Lfunc_begin0
	.quad	.Ltmp1889-.Lfunc_begin0
	.short	.Ltmp3799-.Ltmp3798     # Loc expr size
.Ltmp3798:
	.byte	94                      # DW_OP_reg14
.Ltmp3799:
	.quad	.Ltmp1889-.Lfunc_begin0
	.quad	.Ltmp1890-.Lfunc_begin0
	.short	.Ltmp3801-.Ltmp3800     # Loc expr size
.Ltmp3800:
	.byte	83                      # DW_OP_reg3
.Ltmp3801:
	.quad	.Ltmp1890-.Lfunc_begin0
	.quad	.Ltmp1891-.Lfunc_begin0
	.short	.Ltmp3803-.Ltmp3802     # Loc expr size
.Ltmp3802:
	.byte	94                      # DW_OP_reg14
.Ltmp3803:
	.quad	.Ltmp1891-.Lfunc_begin0
	.quad	.Ltmp1892-.Lfunc_begin0
	.short	.Ltmp3805-.Ltmp3804     # Loc expr size
.Ltmp3804:
	.byte	83                      # DW_OP_reg3
.Ltmp3805:
	.quad	.Ltmp1892-.Lfunc_begin0
	.quad	.Ltmp1893-.Lfunc_begin0
	.short	.Ltmp3807-.Ltmp3806     # Loc expr size
.Ltmp3806:
	.byte	94                      # DW_OP_reg14
.Ltmp3807:
	.quad	.Ltmp1893-.Lfunc_begin0
	.quad	.Ltmp1894-.Lfunc_begin0
	.short	.Ltmp3809-.Ltmp3808     # Loc expr size
.Ltmp3808:
	.byte	83                      # DW_OP_reg3
.Ltmp3809:
	.quad	.Ltmp1894-.Lfunc_begin0
	.quad	.Ltmp1895-.Lfunc_begin0
	.short	.Ltmp3811-.Ltmp3810     # Loc expr size
.Ltmp3810:
	.byte	94                      # DW_OP_reg14
.Ltmp3811:
	.quad	.Ltmp1895-.Lfunc_begin0
	.quad	.Ltmp1896-.Lfunc_begin0
	.short	.Ltmp3813-.Ltmp3812     # Loc expr size
.Ltmp3812:
	.byte	83                      # DW_OP_reg3
.Ltmp3813:
	.quad	.Ltmp1896-.Lfunc_begin0
	.quad	.Ltmp1897-.Lfunc_begin0
	.short	.Ltmp3815-.Ltmp3814     # Loc expr size
.Ltmp3814:
	.byte	94                      # DW_OP_reg14
.Ltmp3815:
	.quad	.Ltmp1897-.Lfunc_begin0
	.quad	.Ltmp1898-.Lfunc_begin0
	.short	.Ltmp3817-.Ltmp3816     # Loc expr size
.Ltmp3816:
	.byte	83                      # DW_OP_reg3
.Ltmp3817:
	.quad	.Ltmp1898-.Lfunc_begin0
	.quad	.Ltmp1899-.Lfunc_begin0
	.short	.Ltmp3819-.Ltmp3818     # Loc expr size
.Ltmp3818:
	.byte	94                      # DW_OP_reg14
.Ltmp3819:
	.quad	.Ltmp1899-.Lfunc_begin0
	.quad	.Ltmp1900-.Lfunc_begin0
	.short	.Ltmp3821-.Ltmp3820     # Loc expr size
.Ltmp3820:
	.byte	83                      # DW_OP_reg3
.Ltmp3821:
	.quad	.Ltmp1900-.Lfunc_begin0
	.quad	.Ltmp1901-.Lfunc_begin0
	.short	.Ltmp3823-.Ltmp3822     # Loc expr size
.Ltmp3822:
	.byte	94                      # DW_OP_reg14
.Ltmp3823:
	.quad	.Ltmp1901-.Lfunc_begin0
	.quad	.Ltmp1902-.Lfunc_begin0
	.short	.Ltmp3825-.Ltmp3824     # Loc expr size
.Ltmp3824:
	.byte	83                      # DW_OP_reg3
.Ltmp3825:
	.quad	.Ltmp1902-.Lfunc_begin0
	.quad	.Ltmp1903-.Lfunc_begin0
	.short	.Ltmp3827-.Ltmp3826     # Loc expr size
.Ltmp3826:
	.byte	94                      # DW_OP_reg14
.Ltmp3827:
	.quad	.Ltmp1903-.Lfunc_begin0
	.quad	.Ltmp1904-.Lfunc_begin0
	.short	.Ltmp3829-.Ltmp3828     # Loc expr size
.Ltmp3828:
	.byte	95                      # DW_OP_reg15
.Ltmp3829:
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp1908-.Lfunc_begin0
	.quad	.Ltmp1913-.Lfunc_begin0
	.short	.Ltmp3831-.Ltmp3830     # Loc expr size
.Ltmp3830:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3831:
	.quad	.Ltmp1913-.Lfunc_begin0
	.quad	.Ltmp1914-.Lfunc_begin0
	.short	.Ltmp3833-.Ltmp3832     # Loc expr size
.Ltmp3832:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360~"                 # -144
.Ltmp3833:
	.quad	.Ltmp1914-.Lfunc_begin0
	.quad	.Ltmp1920-.Lfunc_begin0
	.short	.Ltmp3835-.Ltmp3834     # Loc expr size
.Ltmp3834:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3835:
	.quad	.Ltmp1920-.Lfunc_begin0
	.quad	.Ltmp1927-.Lfunc_begin0
	.short	.Ltmp3837-.Ltmp3836     # Loc expr size
.Ltmp3836:
	.byte	94                      # DW_OP_reg14
.Ltmp3837:
	.quad	.Ltmp1935-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	.Ltmp3839-.Ltmp3838     # Loc expr size
.Ltmp3838:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3839:
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp1927-.Lfunc_begin0
	.quad	.Ltmp1929-.Lfunc_begin0
	.short	.Ltmp3841-.Ltmp3840     # Loc expr size
.Ltmp3840:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3841:
	.quad	.Ltmp1929-.Lfunc_begin0
	.quad	.Ltmp1930-.Lfunc_begin0
	.short	.Ltmp3843-.Ltmp3842     # Loc expr size
.Ltmp3842:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3843:
	.quad	.Ltmp1930-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	.Ltmp3845-.Ltmp3844     # Loc expr size
.Ltmp3844:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3845:
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin10-.Lfunc_begin0
	.quad	.Ltmp1952-.Lfunc_begin0
	.short	.Ltmp3847-.Ltmp3846     # Loc expr size
.Ltmp3846:
	.byte	85                      # DW_OP_reg5
.Ltmp3847:
	.quad	.Ltmp1952-.Lfunc_begin0
	.quad	.Ltmp1961-.Lfunc_begin0
	.short	.Ltmp3849-.Ltmp3848     # Loc expr size
.Ltmp3848:
	.byte	92                      # DW_OP_reg12
.Ltmp3849:
	.quad	.Ltmp1961-.Lfunc_begin0
	.quad	.Ltmp1962-.Lfunc_begin0
	.short	.Ltmp3851-.Ltmp3850     # Loc expr size
.Ltmp3850:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3851:
	.quad	.Ltmp1962-.Lfunc_begin0
	.quad	.Ltmp1964-.Lfunc_begin0
	.short	.Ltmp3853-.Ltmp3852     # Loc expr size
.Ltmp3852:
	.byte	92                      # DW_OP_reg12
.Ltmp3853:
	.quad	.Ltmp1964-.Lfunc_begin0
	.quad	.Ltmp1966-.Lfunc_begin0
	.short	.Ltmp3855-.Ltmp3854     # Loc expr size
.Ltmp3854:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3855:
	.quad	.Ltmp1966-.Lfunc_begin0
	.quad	.Ltmp1970-.Lfunc_begin0
	.short	.Ltmp3857-.Ltmp3856     # Loc expr size
.Ltmp3856:
	.byte	92                      # DW_OP_reg12
.Ltmp3857:
	.quad	.Ltmp1970-.Lfunc_begin0
	.quad	.Ltmp1971-.Lfunc_begin0
	.short	.Ltmp3859-.Ltmp3858     # Loc expr size
.Ltmp3858:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3859:
	.quad	.Ltmp1971-.Lfunc_begin0
	.quad	.Ltmp1971-.Lfunc_begin0
	.short	.Ltmp3861-.Ltmp3860     # Loc expr size
.Ltmp3860:
	.byte	92                      # DW_OP_reg12
.Ltmp3861:
	.quad	.Ltmp1971-.Lfunc_begin0
	.quad	.Ltmp1978-.Lfunc_begin0
	.short	.Ltmp3863-.Ltmp3862     # Loc expr size
.Ltmp3862:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3863:
	.quad	.Ltmp1978-.Lfunc_begin0
	.quad	.Ltmp1979-.Lfunc_begin0
	.short	.Ltmp3865-.Ltmp3864     # Loc expr size
.Ltmp3864:
	.byte	80                      # DW_OP_reg0
.Ltmp3865:
	.quad	.Ltmp1979-.Lfunc_begin0
	.quad	.Ltmp1986-.Lfunc_begin0
	.short	.Ltmp3867-.Ltmp3866     # Loc expr size
.Ltmp3866:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3867:
	.quad	.Ltmp1986-.Lfunc_begin0
	.quad	.Ltmp1988-.Lfunc_begin0
	.short	.Ltmp3869-.Ltmp3868     # Loc expr size
.Ltmp3868:
	.byte	92                      # DW_OP_reg12
.Ltmp3869:
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp1968-.Lfunc_begin0
	.quad	.Ltmp1969-.Lfunc_begin0
	.short	.Ltmp3871-.Ltmp3870     # Loc expr size
.Ltmp3870:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3871:
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp1974-.Lfunc_begin0
	.quad	.Ltmp1975-.Lfunc_begin0
	.short	.Ltmp3873-.Ltmp3872     # Loc expr size
.Ltmp3872:
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3873:
	.quad	.Ltmp1976-.Lfunc_begin0
	.quad	.Ltmp1977-.Lfunc_begin0
	.short	.Ltmp3875-.Ltmp3874     # Loc expr size
.Ltmp3874:
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3875:
	.quad	.Ltmp1981-.Lfunc_begin0
	.quad	.Ltmp1982-.Lfunc_begin0
	.short	.Ltmp3877-.Ltmp3876     # Loc expr size
.Ltmp3876:
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3877:
	.quad	.Ltmp1983-.Lfunc_begin0
	.quad	.Ltmp1984-.Lfunc_begin0
	.short	.Ltmp3879-.Ltmp3878     # Loc expr size
.Ltmp3878:
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3879:
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp2001-.Lfunc_begin0
	.short	.Ltmp3881-.Ltmp3880     # Loc expr size
.Ltmp3880:
	.byte	85                      # DW_OP_reg5
.Ltmp3881:
	.quad	.Ltmp2001-.Lfunc_begin0
	.quad	.Ltmp2003-.Lfunc_begin0
	.short	.Ltmp3883-.Ltmp3882     # Loc expr size
.Ltmp3882:
	.byte	93                      # DW_OP_reg13
.Ltmp3883:
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp2000-.Lfunc_begin0
	.short	.Ltmp3885-.Ltmp3884     # Loc expr size
.Ltmp3884:
	.byte	84                      # DW_OP_reg4
.Ltmp3885:
	.quad	.Ltmp2000-.Lfunc_begin0
	.quad	.Ltmp2017-.Lfunc_begin0
	.short	.Ltmp3887-.Ltmp3886     # Loc expr size
.Ltmp3886:
	.byte	118                     # DW_OP_breg6
	.ascii	"\260\177"              # -80
.Ltmp3887:
	.quad	.Ltmp2017-.Lfunc_begin0
	.quad	.Ltmp2019-.Lfunc_begin0
	.short	.Ltmp3889-.Ltmp3888     # Loc expr size
.Ltmp3888:
	.byte	95                      # DW_OP_reg15
.Ltmp3889:
	.quad	.Ltmp2020-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3891-.Ltmp3890     # Loc expr size
.Ltmp3890:
	.byte	118                     # DW_OP_breg6
	.ascii	"\260\177"              # -80
.Ltmp3891:
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp1999-.Lfunc_begin0
	.short	.Ltmp3893-.Ltmp3892     # Loc expr size
.Ltmp3892:
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3893:
	.quad	.Ltmp1999-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3895-.Ltmp3894     # Loc expr size
.Ltmp3894:
	.byte	118                     # DW_OP_breg6
	.ascii	"\224\177"              # -108
.Ltmp3895:
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp1998-.Lfunc_begin0
	.short	.Ltmp3897-.Ltmp3896     # Loc expr size
.Ltmp3896:
	.byte	82                      # DW_OP_reg2
.Ltmp3897:
	.quad	.Ltmp1998-.Lfunc_begin0
	.quad	.Ltmp2004-.Lfunc_begin0
	.short	.Ltmp3899-.Ltmp3898     # Loc expr size
.Ltmp3898:
	.byte	83                      # DW_OP_reg3
.Ltmp3899:
	.quad	.Ltmp2004-.Lfunc_begin0
	.quad	.Ltmp2005-.Lfunc_begin0
	.short	.Ltmp3901-.Ltmp3900     # Loc expr size
.Ltmp3900:
	.byte	118                     # DW_OP_breg6
	.ascii	"\230\177"              # -104
.Ltmp3901:
	.quad	.Ltmp2005-.Lfunc_begin0
	.quad	.Ltmp2009-.Lfunc_begin0
	.short	.Ltmp3903-.Ltmp3902     # Loc expr size
.Ltmp3902:
	.byte	83                      # DW_OP_reg3
.Ltmp3903:
	.quad	.Ltmp2011-.Lfunc_begin0
	.quad	.Ltmp2012-.Lfunc_begin0
	.short	.Ltmp3905-.Ltmp3904     # Loc expr size
.Ltmp3904:
	.byte	85                      # DW_OP_reg5
.Ltmp3905:
	.quad	.Ltmp2012-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3907-.Ltmp3906     # Loc expr size
.Ltmp3906:
	.byte	118                     # DW_OP_breg6
	.ascii	"\230\177"              # -104
.Ltmp3907:
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp2002-.Lfunc_begin0
	.quad	.Ltmp2008-.Lfunc_begin0
	.short	.Ltmp3909-.Ltmp3908     # Loc expr size
.Ltmp3908:
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3909:
	.quad	.Ltmp2008-.Lfunc_begin0
	.quad	.Ltmp2009-.Lfunc_begin0
	.short	.Ltmp3911-.Ltmp3910     # Loc expr size
.Ltmp3910:
	.byte	94                      # super-register DW_OP_reg14
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp3911:
	.quad	.Ltmp2009-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3913-.Ltmp3912     # Loc expr size
.Ltmp3912:
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp3913:
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp2013-.Lfunc_begin0
	.quad	.Ltmp2014-.Lfunc_begin0
	.short	.Ltmp3915-.Ltmp3914     # Loc expr size
.Ltmp3914:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3915:
	.quad	.Ltmp2014-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3917-.Ltmp3916     # Loc expr size
.Ltmp3916:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp3917:
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp2013-.Lfunc_begin0
	.quad	.Ltmp2014-.Lfunc_begin0
	.short	.Ltmp3919-.Ltmp3918     # Loc expr size
.Ltmp3918:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp3919:
	.quad	.Ltmp2014-.Lfunc_begin0
	.quad	.Ltmp2015-.Lfunc_begin0
	.short	.Ltmp3921-.Ltmp3920     # Loc expr size
.Ltmp3920:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp3921:
	.quad	.Ltmp2015-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3923-.Ltmp3922     # Loc expr size
.Ltmp3922:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp3923:
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp2021-.Lfunc_begin0
	.quad	.Ltmp2022-.Lfunc_begin0
	.short	.Ltmp3925-.Ltmp3924     # Loc expr size
.Ltmp3924:
	.byte	83                      # DW_OP_reg3
.Ltmp3925:
	.quad	.Ltmp2023-.Lfunc_begin0
	.quad	.Ltmp2025-.Lfunc_begin0
	.short	.Ltmp3927-.Ltmp3926     # Loc expr size
.Ltmp3926:
	.byte	93                      # DW_OP_reg13
.Ltmp3927:
	.quad	.Ltmp2025-.Lfunc_begin0
	.quad	.Lfunc_end11-.Lfunc_begin0
	.short	.Ltmp3929-.Ltmp3928     # Loc expr size
.Ltmp3928:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp3929:
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp2037-.Lfunc_begin0
	.short	.Ltmp3931-.Ltmp3930     # Loc expr size
.Ltmp3930:
	.byte	85                      # DW_OP_reg5
.Ltmp3931:
	.quad	.Ltmp2037-.Lfunc_begin0
	.quad	.Ltmp2039-.Lfunc_begin0
	.short	.Ltmp3933-.Ltmp3932     # Loc expr size
.Ltmp3932:
	.byte	83                      # DW_OP_reg3
.Ltmp3933:
	.quad	.Ltmp2039-.Lfunc_begin0
	.quad	.Ltmp2040-.Lfunc_begin0
	.short	.Ltmp3935-.Ltmp3934     # Loc expr size
.Ltmp3934:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3935:
	.quad	.Ltmp2040-.Lfunc_begin0
	.quad	.Ltmp2044-.Lfunc_begin0
	.short	.Ltmp3937-.Ltmp3936     # Loc expr size
.Ltmp3936:
	.byte	83                      # DW_OP_reg3
.Ltmp3937:
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2048-.Lfunc_begin0
	.short	.Ltmp3939-.Ltmp3938     # Loc expr size
.Ltmp3938:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3939:
	.quad	.Ltmp2048-.Lfunc_begin0
	.quad	.Ltmp2060-.Lfunc_begin0
	.short	.Ltmp3941-.Ltmp3940     # Loc expr size
.Ltmp3940:
	.byte	83                      # DW_OP_reg3
.Ltmp3941:
	.quad	.Ltmp2060-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	.Ltmp3943-.Ltmp3942     # Loc expr size
.Ltmp3942:
	.byte	94                      # DW_OP_reg14
.Ltmp3943:
	.quad	.Ltmp2064-.Lfunc_begin0
	.quad	.Ltmp2065-.Lfunc_begin0
	.short	.Ltmp3945-.Ltmp3944     # Loc expr size
.Ltmp3944:
	.byte	83                      # DW_OP_reg3
.Ltmp3945:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2069-.Lfunc_begin0
	.short	.Ltmp3947-.Ltmp3946     # Loc expr size
.Ltmp3946:
	.byte	94                      # DW_OP_reg14
.Ltmp3947:
	.quad	.Ltmp2070-.Lfunc_begin0
	.quad	.Ltmp2073-.Lfunc_begin0
	.short	.Ltmp3949-.Ltmp3948     # Loc expr size
.Ltmp3948:
	.byte	83                      # DW_OP_reg3
.Ltmp3949:
	.quad	.Ltmp2073-.Lfunc_begin0
	.quad	.Ltmp2075-.Lfunc_begin0
	.short	.Ltmp3951-.Ltmp3950     # Loc expr size
.Ltmp3950:
	.byte	95                      # DW_OP_reg15
.Ltmp3951:
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2080-.Lfunc_begin0
	.short	.Ltmp3953-.Ltmp3952     # Loc expr size
.Ltmp3952:
	.byte	83                      # DW_OP_reg3
.Ltmp3953:
	.quad	.Ltmp2080-.Lfunc_begin0
	.quad	.Ltmp2082-.Lfunc_begin0
	.short	.Ltmp3955-.Ltmp3954     # Loc expr size
.Ltmp3954:
	.byte	95                      # DW_OP_reg15
.Ltmp3955:
	.quad	.Ltmp2082-.Lfunc_begin0
	.quad	.Ltmp2085-.Lfunc_begin0
	.short	.Ltmp3957-.Ltmp3956     # Loc expr size
.Ltmp3956:
	.byte	83                      # DW_OP_reg3
.Ltmp3957:
	.quad	.Ltmp2086-.Lfunc_begin0
	.quad	.Ltmp2089-.Lfunc_begin0
	.short	.Ltmp3959-.Ltmp3958     # Loc expr size
.Ltmp3958:
	.byte	83                      # DW_OP_reg3
.Ltmp3959:
	.quad	.Ltmp2089-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	.Ltmp3961-.Ltmp3960     # Loc expr size
.Ltmp3960:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3961:
	.quad	.Ltmp2095-.Lfunc_begin0
	.quad	.Ltmp2096-.Lfunc_begin0
	.short	.Ltmp3963-.Ltmp3962     # Loc expr size
.Ltmp3962:
	.byte	83                      # DW_OP_reg3
.Ltmp3963:
	.quad	.Ltmp2096-.Lfunc_begin0
	.quad	.Ltmp2100-.Lfunc_begin0
	.short	.Ltmp3965-.Ltmp3964     # Loc expr size
.Ltmp3964:
	.byte	95                      # DW_OP_reg15
.Ltmp3965:
	.quad	.Ltmp2100-.Lfunc_begin0
	.quad	.Ltmp2103-.Lfunc_begin0
	.short	.Ltmp3967-.Ltmp3966     # Loc expr size
.Ltmp3966:
	.byte	93                      # DW_OP_reg13
.Ltmp3967:
	.quad	.Ltmp2103-.Lfunc_begin0
	.quad	.Ltmp2104-.Lfunc_begin0
	.short	.Ltmp3969-.Ltmp3968     # Loc expr size
.Ltmp3968:
	.byte	95                      # DW_OP_reg15
.Ltmp3969:
	.quad	.Ltmp2104-.Lfunc_begin0
	.quad	.Ltmp2109-.Lfunc_begin0
	.short	.Ltmp3971-.Ltmp3970     # Loc expr size
.Ltmp3970:
	.byte	93                      # DW_OP_reg13
.Ltmp3971:
	.quad	.Ltmp2109-.Lfunc_begin0
	.quad	.Ltmp2110-.Lfunc_begin0
	.short	.Ltmp3973-.Ltmp3972     # Loc expr size
.Ltmp3972:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3973:
	.quad	.Ltmp2110-.Lfunc_begin0
	.quad	.Ltmp2114-.Lfunc_begin0
	.short	.Ltmp3975-.Ltmp3974     # Loc expr size
.Ltmp3974:
	.byte	92                      # DW_OP_reg12
.Ltmp3975:
	.quad	.Ltmp2114-.Lfunc_begin0
	.quad	.Ltmp2117-.Lfunc_begin0
	.short	.Ltmp3977-.Ltmp3976     # Loc expr size
.Ltmp3976:
	.byte	94                      # DW_OP_reg14
.Ltmp3977:
	.quad	.Ltmp2117-.Lfunc_begin0
	.quad	.Ltmp2122-.Lfunc_begin0
	.short	.Ltmp3979-.Ltmp3978     # Loc expr size
.Ltmp3978:
	.byte	93                      # DW_OP_reg13
.Ltmp3979:
	.quad	.Ltmp2122-.Lfunc_begin0
	.quad	.Ltmp2123-.Lfunc_begin0
	.short	.Ltmp3981-.Ltmp3980     # Loc expr size
.Ltmp3980:
	.byte	95                      # DW_OP_reg15
.Ltmp3981:
	.quad	.Ltmp2123-.Lfunc_begin0
	.quad	.Ltmp2124-.Lfunc_begin0
	.short	.Ltmp3983-.Ltmp3982     # Loc expr size
.Ltmp3982:
	.byte	83                      # DW_OP_reg3
.Ltmp3983:
	.quad	.Ltmp2124-.Lfunc_begin0
	.quad	.Ltmp2127-.Lfunc_begin0
	.short	.Ltmp3985-.Ltmp3984     # Loc expr size
.Ltmp3984:
	.byte	95                      # DW_OP_reg15
.Ltmp3985:
	.quad	.Ltmp2127-.Lfunc_begin0
	.quad	.Ltmp2131-.Lfunc_begin0
	.short	.Ltmp3987-.Ltmp3986     # Loc expr size
.Ltmp3986:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp3987:
	.quad	.Ltmp2131-.Lfunc_begin0
	.quad	.Ltmp2132-.Lfunc_begin0
	.short	.Ltmp3989-.Ltmp3988     # Loc expr size
.Ltmp3988:
	.byte	82                      # DW_OP_reg2
.Ltmp3989:
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	.Ltmp2134-.Lfunc_begin0
	.short	.Ltmp3991-.Ltmp3990     # Loc expr size
.Ltmp3990:
	.byte	94                      # DW_OP_reg14
.Ltmp3991:
	.quad	.Ltmp2134-.Lfunc_begin0
	.quad	.Ltmp2135-.Lfunc_begin0
	.short	.Ltmp3993-.Ltmp3992     # Loc expr size
.Ltmp3992:
	.byte	83                      # DW_OP_reg3
.Ltmp3993:
	.quad	.Ltmp2135-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	.Ltmp3995-.Ltmp3994     # Loc expr size
.Ltmp3994:
	.byte	93                      # DW_OP_reg13
.Ltmp3995:
	.quad	.Ltmp2136-.Lfunc_begin0
	.quad	.Ltmp2137-.Lfunc_begin0
	.short	.Ltmp3997-.Ltmp3996     # Loc expr size
.Ltmp3996:
	.byte	83                      # DW_OP_reg3
.Ltmp3997:
	.quad	.Ltmp2137-.Lfunc_begin0
	.quad	.Ltmp2138-.Lfunc_begin0
	.short	.Ltmp3999-.Ltmp3998     # Loc expr size
.Ltmp3998:
	.byte	93                      # DW_OP_reg13
.Ltmp3999:
	.quad	.Ltmp2138-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.short	.Ltmp4001-.Ltmp4000     # Loc expr size
.Ltmp4000:
	.byte	83                      # DW_OP_reg3
.Ltmp4001:
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2140-.Lfunc_begin0
	.short	.Ltmp4003-.Ltmp4002     # Loc expr size
.Ltmp4002:
	.byte	95                      # DW_OP_reg15
.Ltmp4003:
	.quad	.Ltmp2140-.Lfunc_begin0
	.quad	.Ltmp2141-.Lfunc_begin0
	.short	.Ltmp4005-.Ltmp4004     # Loc expr size
.Ltmp4004:
	.byte	83                      # DW_OP_reg3
.Ltmp4005:
	.quad	.Ltmp2141-.Lfunc_begin0
	.quad	.Ltmp2142-.Lfunc_begin0
	.short	.Ltmp4007-.Ltmp4006     # Loc expr size
.Ltmp4006:
	.byte	94                      # DW_OP_reg14
.Ltmp4007:
	.quad	.Ltmp2142-.Lfunc_begin0
	.quad	.Ltmp2152-.Lfunc_begin0
	.short	.Ltmp4009-.Ltmp4008     # Loc expr size
.Ltmp4008:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp4009:
	.quad	.Ltmp2152-.Lfunc_begin0
	.quad	.Ltmp2154-.Lfunc_begin0
	.short	.Ltmp4011-.Ltmp4010     # Loc expr size
.Ltmp4010:
	.byte	83                      # DW_OP_reg3
.Ltmp4011:
	.quad	.Ltmp2154-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	.Ltmp4013-.Ltmp4012     # Loc expr size
.Ltmp4012:
	.byte	118                     # DW_OP_breg6
	.byte	64                      # -64
.Ltmp4013:
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp2036-.Lfunc_begin0
	.short	.Ltmp4015-.Ltmp4014     # Loc expr size
.Ltmp4014:
	.byte	84                      # DW_OP_reg4
.Ltmp4015:
	.quad	.Ltmp2036-.Lfunc_begin0
	.quad	.Ltmp2090-.Lfunc_begin0
	.short	.Ltmp4017-.Ltmp4016     # Loc expr size
.Ltmp4016:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp4017:
	.quad	.Ltmp2090-.Lfunc_begin0
	.quad	.Ltmp2092-.Lfunc_begin0
	.short	.Ltmp4019-.Ltmp4018     # Loc expr size
.Ltmp4018:
	.byte	95                      # DW_OP_reg15
.Ltmp4019:
	.quad	.Ltmp2092-.Lfunc_begin0
	.quad	.Ltmp2097-.Lfunc_begin0
	.short	.Ltmp4021-.Ltmp4020     # Loc expr size
.Ltmp4020:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp4021:
	.quad	.Ltmp2097-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	.Ltmp4023-.Ltmp4022     # Loc expr size
.Ltmp4022:
	.byte	92                      # DW_OP_reg12
.Ltmp4023:
	.quad	.Ltmp2105-.Lfunc_begin0
	.quad	.Ltmp2108-.Lfunc_begin0
	.short	.Ltmp4025-.Ltmp4024     # Loc expr size
.Ltmp4024:
	.byte	95                      # DW_OP_reg15
.Ltmp4025:
	.quad	.Ltmp2108-.Lfunc_begin0
	.quad	.Ltmp2111-.Lfunc_begin0
	.short	.Ltmp4027-.Ltmp4026     # Loc expr size
.Ltmp4026:
	.byte	94                      # DW_OP_reg14
.Ltmp4027:
	.quad	.Ltmp2111-.Lfunc_begin0
	.quad	.Ltmp2115-.Lfunc_begin0
	.short	.Ltmp4029-.Ltmp4028     # Loc expr size
.Ltmp4028:
	.byte	93                      # DW_OP_reg13
.Ltmp4029:
	.quad	.Ltmp2115-.Lfunc_begin0
	.quad	.Ltmp2116-.Lfunc_begin0
	.short	.Ltmp4031-.Ltmp4030     # Loc expr size
.Ltmp4030:
	.byte	83                      # DW_OP_reg3
.Ltmp4031:
	.quad	.Ltmp2116-.Lfunc_begin0
	.quad	.Ltmp2130-.Lfunc_begin0
	.short	.Ltmp4033-.Ltmp4032     # Loc expr size
.Ltmp4032:
	.byte	92                      # DW_OP_reg12
.Ltmp4033:
	.quad	.Ltmp2130-.Lfunc_begin0
	.quad	.Ltmp2133-.Lfunc_begin0
	.short	.Ltmp4035-.Ltmp4034     # Loc expr size
.Ltmp4034:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp4035:
	.quad	.Ltmp2133-.Lfunc_begin0
	.quad	.Ltmp2143-.Lfunc_begin0
	.short	.Ltmp4037-.Ltmp4036     # Loc expr size
.Ltmp4036:
	.byte	92                      # DW_OP_reg12
.Ltmp4037:
	.quad	.Ltmp2143-.Lfunc_begin0
	.quad	.Ltmp2146-.Lfunc_begin0
	.short	.Ltmp4039-.Ltmp4038     # Loc expr size
.Ltmp4038:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp4039:
	.quad	.Ltmp2146-.Lfunc_begin0
	.quad	.Ltmp2148-.Lfunc_begin0
	.short	.Ltmp4041-.Ltmp4040     # Loc expr size
.Ltmp4040:
	.byte	83                      # DW_OP_reg3
.Ltmp4041:
	.quad	.Ltmp2148-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	.Ltmp4043-.Ltmp4042     # Loc expr size
.Ltmp4042:
	.byte	118                     # DW_OP_breg6
	.ascii	"\270\177"              # -72
.Ltmp4043:
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp2035-.Lfunc_begin0
	.quad	.Ltmp2037-.Lfunc_begin0
	.short	.Ltmp4045-.Ltmp4044     # Loc expr size
.Ltmp4044:
	.byte	85                      # DW_OP_reg5
.Ltmp4045:
	.quad	.Ltmp2037-.Lfunc_begin0
	.quad	.Ltmp2039-.Lfunc_begin0
	.short	.Ltmp4047-.Ltmp4046     # Loc expr size
.Ltmp4046:
	.byte	83                      # DW_OP_reg3
.Ltmp4047:
	.quad	.Ltmp2098-.Lfunc_begin0
	.quad	.Ltmp2099-.Lfunc_begin0
	.short	.Ltmp4049-.Ltmp4048     # Loc expr size
.Ltmp4048:
	.byte	83                      # DW_OP_reg3
.Ltmp4049:
	.quad	.Ltmp2099-.Lfunc_begin0
	.quad	.Ltmp2101-.Lfunc_begin0
	.short	.Ltmp4051-.Ltmp4050     # Loc expr size
.Ltmp4050:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp4051:
	.quad	.Ltmp2101-.Lfunc_begin0
	.quad	.Ltmp2102-.Lfunc_begin0
	.short	.Ltmp4053-.Ltmp4052     # Loc expr size
.Ltmp4052:
	.byte	95                      # DW_OP_reg15
.Ltmp4053:
	.quad	.Ltmp2102-.Lfunc_begin0
	.quad	.Ltmp2106-.Lfunc_begin0
	.short	.Ltmp4055-.Ltmp4054     # Loc expr size
.Ltmp4054:
	.byte	118                     # DW_OP_breg6
	.byte	72                      # -56
.Ltmp4055:
	.quad	.Ltmp2106-.Lfunc_begin0
	.quad	.Ltmp2107-.Lfunc_begin0
	.short	.Ltmp4057-.Ltmp4056     # Loc expr size
.Ltmp4056:
	.byte	83                      # DW_OP_reg3
.Ltmp4057:
	.quad	.Ltmp2107-.Lfunc_begin0
	.quad	.Ltmp2112-.Lfunc_begin0
	.short	.Ltmp4059-.Ltmp4058     # Loc expr size
.Ltmp4058:
	.byte	118                     # DW_OP_breg6
	.ascii	"\260\177"              # -80
.Ltmp4059:
	.quad	.Ltmp2112-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.short	.Ltmp4061-.Ltmp4060     # Loc expr size
.Ltmp4060:
	.byte	83                      # DW_OP_reg3
.Ltmp4061:
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Ltmp2118-.Lfunc_begin0
	.short	.Ltmp4063-.Ltmp4062     # Loc expr size
.Ltmp4062:
	.byte	118                     # DW_OP_breg6
	.ascii	"\250\177"              # -88
.Ltmp4063:
	.quad	.Ltmp2118-.Lfunc_begin0
	.quad	.Ltmp2119-.Lfunc_begin0
	.short	.Ltmp4065-.Ltmp4064     # Loc expr size
.Ltmp4064:
	.byte	83                      # DW_OP_reg3
.Ltmp4065:
	.quad	.Ltmp2119-.Lfunc_begin0
	.quad	.Ltmp2120-.Lfunc_begin0
	.short	.Ltmp4067-.Ltmp4066     # Loc expr size
.Ltmp4066:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360~"                 # -144
.Ltmp4067:
	.quad	.Ltmp2120-.Lfunc_begin0
	.quad	.Ltmp2121-.Lfunc_begin0
	.short	.Ltmp4069-.Ltmp4068     # Loc expr size
.Ltmp4068:
	.byte	83                      # DW_OP_reg3
.Ltmp4069:
	.quad	.Ltmp2121-.Lfunc_begin0
	.quad	.Ltmp2125-.Lfunc_begin0
	.short	.Ltmp4071-.Ltmp4070     # Loc expr size
.Ltmp4070:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"                 # -152
.Ltmp4071:
	.quad	.Ltmp2125-.Lfunc_begin0
	.quad	.Ltmp2126-.Lfunc_begin0
	.short	.Ltmp4073-.Ltmp4072     # Loc expr size
.Ltmp4072:
	.byte	83                      # DW_OP_reg3
.Ltmp4073:
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp2038-.Lfunc_begin0
	.quad	.Ltmp2088-.Lfunc_begin0
	.short	.Ltmp4075-.Ltmp4074     # Loc expr size
.Ltmp4074:
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp4075:
	.quad	.Ltmp2088-.Lfunc_begin0
	.quad	.Ltmp2151-.Lfunc_begin0
	.short	.Ltmp4077-.Ltmp4076     # Loc expr size
.Ltmp4076:
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
.Ltmp4077:
	.quad	.Ltmp2151-.Lfunc_begin0
	.quad	.Ltmp2157-.Lfunc_begin0
	.short	.Ltmp4079-.Ltmp4078     # Loc expr size
.Ltmp4078:
	.byte	17                      # DW_OP_consts
	.ascii	"\240\001"              # 160
	.byte	159                     # DW_OP_stack_value
.Ltmp4079:
	.quad	.Ltmp2157-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	.Ltmp4081-.Ltmp4080     # Loc expr size
.Ltmp4080:
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
.Ltmp4081:
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp2045-.Lfunc_begin0
	.quad	.Ltmp2047-.Lfunc_begin0
	.short	.Ltmp4083-.Ltmp4082     # Loc expr size
.Ltmp4082:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4083:
	.quad	.Ltmp2047-.Lfunc_begin0
	.quad	.Ltmp2048-.Lfunc_begin0
	.short	.Ltmp4085-.Ltmp4084     # Loc expr size
.Ltmp4084:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4085:
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp2051-.Lfunc_begin0
	.quad	.Ltmp2052-.Lfunc_begin0
	.short	.Ltmp4087-.Ltmp4086     # Loc expr size
.Ltmp4086:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4087:
	.quad	.Ltmp2052-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	.Ltmp4089-.Ltmp4088     # Loc expr size
.Ltmp4088:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp4089:
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin13-.Lfunc_begin0
	.quad	.Ltmp2167-.Lfunc_begin0
	.short	.Ltmp4091-.Ltmp4090     # Loc expr size
.Ltmp4090:
	.byte	85                      # DW_OP_reg5
.Ltmp4091:
	.quad	.Ltmp2167-.Lfunc_begin0
	.quad	.Ltmp2170-.Lfunc_begin0
	.short	.Ltmp4093-.Ltmp4092     # Loc expr size
.Ltmp4092:
	.byte	83                      # DW_OP_reg3
.Ltmp4093:
	.quad	.Ltmp2170-.Lfunc_begin0
	.quad	.Ltmp2171-.Lfunc_begin0
	.short	.Ltmp4095-.Ltmp4094     # Loc expr size
.Ltmp4094:
	.byte	94                      # DW_OP_reg14
.Ltmp4095:
	.quad	.Ltmp2171-.Lfunc_begin0
	.quad	.Ltmp2173-.Lfunc_begin0
	.short	.Ltmp4097-.Ltmp4096     # Loc expr size
.Ltmp4096:
	.byte	83                      # DW_OP_reg3
.Ltmp4097:
	.quad	.Ltmp2174-.Lfunc_begin0
	.quad	.Ltmp2175-.Lfunc_begin0
	.short	.Ltmp4099-.Ltmp4098     # Loc expr size
.Ltmp4098:
	.byte	83                      # DW_OP_reg3
.Ltmp4099:
	.quad	.Ltmp2176-.Lfunc_begin0
	.quad	.Ltmp2177-.Lfunc_begin0
	.short	.Ltmp4101-.Ltmp4100     # Loc expr size
.Ltmp4100:
	.byte	94                      # DW_OP_reg14
.Ltmp4101:
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp2189-.Lfunc_begin0
	.short	.Ltmp4103-.Ltmp4102     # Loc expr size
.Ltmp4102:
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4103:
	.quad	.Ltmp2189-.Lfunc_begin0
	.quad	.Ltmp2191-.Lfunc_begin0
	.short	.Ltmp4105-.Ltmp4104     # Loc expr size
.Ltmp4104:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4105:
	.quad	.Ltmp2192-.Lfunc_begin0
	.quad	.Ltmp2195-.Lfunc_begin0
	.short	.Ltmp4107-.Ltmp4106     # Loc expr size
.Ltmp4106:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4107:
	.quad	.Ltmp2196-.Lfunc_begin0
	.quad	.Ltmp2198-.Lfunc_begin0
	.short	.Ltmp4109-.Ltmp4108     # Loc expr size
.Ltmp4108:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4109:
	.quad	.Ltmp2199-.Lfunc_begin0
	.quad	.Ltmp2201-.Lfunc_begin0
	.short	.Ltmp4111-.Ltmp4110     # Loc expr size
.Ltmp4110:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4111:
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	.Ltmp4113-.Ltmp4112     # Loc expr size
.Ltmp4112:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4113:
	.quad	.Ltmp2188-.Lfunc_begin0
	.quad	.Ltmp2191-.Lfunc_begin0
	.short	.Ltmp4115-.Ltmp4114     # Loc expr size
.Ltmp4114:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4115:
	.quad	.Ltmp2192-.Lfunc_begin0
	.quad	.Ltmp2193-.Lfunc_begin0
	.short	.Ltmp4117-.Ltmp4116     # Loc expr size
.Ltmp4116:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4117:
	.quad	.Ltmp2196-.Lfunc_begin0
	.quad	.Ltmp2200-.Lfunc_begin0
	.short	.Ltmp4119-.Ltmp4118     # Loc expr size
.Ltmp4118:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4119:
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Lfunc_begin15-.Lfunc_begin0
	.quad	.Ltmp2214-.Lfunc_begin0
	.short	.Ltmp4121-.Ltmp4120     # Loc expr size
.Ltmp4120:
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4121:
	.quad	.Ltmp2214-.Lfunc_begin0
	.quad	.Ltmp2218-.Lfunc_begin0
	.short	.Ltmp4123-.Ltmp4122     # Loc expr size
.Ltmp4122:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4123:
	.quad	.Ltmp2219-.Lfunc_begin0
	.quad	.Ltmp2220-.Lfunc_begin0
	.short	.Ltmp4125-.Ltmp4124     # Loc expr size
.Ltmp4124:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4125:
	.quad	.Ltmp2221-.Lfunc_begin0
	.quad	.Ltmp2223-.Lfunc_begin0
	.short	.Ltmp4127-.Ltmp4126     # Loc expr size
.Ltmp4126:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4127:
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin15-.Lfunc_begin0
	.quad	.Ltmp2213-.Lfunc_begin0
	.short	.Ltmp4129-.Ltmp4128     # Loc expr size
.Ltmp4128:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4129:
	.quad	.Ltmp2213-.Lfunc_begin0
	.quad	.Ltmp2216-.Lfunc_begin0
	.short	.Ltmp4131-.Ltmp4130     # Loc expr size
.Ltmp4130:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4131:
	.quad	.Ltmp2219-.Lfunc_begin0
	.quad	.Ltmp2220-.Lfunc_begin0
	.short	.Ltmp4133-.Ltmp4132     # Loc expr size
.Ltmp4132:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4133:
	.quad	.Ltmp2221-.Lfunc_begin0
	.quad	.Ltmp2226-.Lfunc_begin0
	.short	.Ltmp4135-.Ltmp4134     # Loc expr size
.Ltmp4134:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4135:
	.quad	.Ltmp2227-.Lfunc_begin0
	.quad	.Ltmp2229-.Lfunc_begin0
	.short	.Ltmp4137-.Ltmp4136     # Loc expr size
.Ltmp4136:
	.byte	93                      # super-register DW_OP_reg13
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4137:
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Lfunc_begin16-.Lfunc_begin0
	.quad	.Ltmp2243-.Lfunc_begin0
	.short	.Ltmp4139-.Ltmp4138     # Loc expr size
.Ltmp4138:
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4139:
	.quad	.Ltmp2243-.Lfunc_begin0
	.quad	.Ltmp2246-.Lfunc_begin0
	.short	.Ltmp4141-.Ltmp4140     # Loc expr size
.Ltmp4140:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4141:
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Lfunc_begin16-.Lfunc_begin0
	.quad	.Ltmp2242-.Lfunc_begin0
	.short	.Ltmp4143-.Ltmp4142     # Loc expr size
.Ltmp4142:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4143:
	.quad	.Ltmp2242-.Lfunc_begin0
	.quad	.Ltmp2247-.Lfunc_begin0
	.short	.Ltmp4145-.Ltmp4144     # Loc expr size
.Ltmp4144:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4145:
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp2241-.Lfunc_begin0
	.quad	.Ltmp2243-.Lfunc_begin0
	.short	.Ltmp4147-.Ltmp4146     # Loc expr size
.Ltmp4146:
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4147:
	.quad	.Ltmp2243-.Lfunc_begin0
	.quad	.Ltmp2246-.Lfunc_begin0
	.short	.Ltmp4149-.Ltmp4148     # Loc expr size
.Ltmp4148:
	.byte	92                      # super-register DW_OP_reg12
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4149:
	.quad	.Ltmp2250-.Lfunc_begin0
	.quad	.Ltmp2251-.Lfunc_begin0
	.short	.Ltmp4151-.Ltmp4150     # Loc expr size
.Ltmp4150:
	.byte	92                      # DW_OP_reg12
.Ltmp4151:
	.quad	.Ltmp2251-.Lfunc_begin0
	.quad	.Ltmp2254-.Lfunc_begin0
	.short	.Ltmp4153-.Ltmp4152     # Loc expr size
.Ltmp4152:
	.byte	80                      # DW_OP_reg0
.Ltmp4153:
	.quad	.Ltmp2254-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	.Ltmp4155-.Ltmp4154     # Loc expr size
.Ltmp4154:
	.byte	92                      # DW_OP_reg12
.Ltmp4155:
	.quad	.Ltmp2256-.Lfunc_begin0
	.quad	.Ltmp2259-.Lfunc_begin0
	.short	.Ltmp4157-.Ltmp4156     # Loc expr size
.Ltmp4156:
	.byte	92                      # DW_OP_reg12
.Ltmp4157:
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp2241-.Lfunc_begin0
	.quad	.Ltmp2242-.Lfunc_begin0
	.short	.Ltmp4159-.Ltmp4158     # Loc expr size
.Ltmp4158:
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4159:
	.quad	.Ltmp2242-.Lfunc_begin0
	.quad	.Ltmp2247-.Lfunc_begin0
	.short	.Ltmp4161-.Ltmp4160     # Loc expr size
.Ltmp4160:
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
.Ltmp4161:
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp2244-.Lfunc_begin0
	.quad	.Ltmp2249-.Lfunc_begin0
	.short	.Ltmp4163-.Ltmp4162     # Loc expr size
.Ltmp4162:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp4163:
	.quad	.Ltmp2249-.Lfunc_begin0
	.quad	.Ltmp2253-.Lfunc_begin0
	.short	.Ltmp4165-.Ltmp4164     # Loc expr size
.Ltmp4164:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4165:
	.quad	.Ltmp2253-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	.Ltmp4167-.Ltmp4166     # Loc expr size
.Ltmp4166:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp4167:
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2257-.Lfunc_begin0
	.short	.Ltmp4169-.Ltmp4168     # Loc expr size
.Ltmp4168:
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	2                       # 2
.Ltmp4169:
	.quad	.Ltmp2258-.Lfunc_begin0
	.quad	.Ltmp2259-.Lfunc_begin0
	.short	.Ltmp4171-.Ltmp4170     # Loc expr size
.Ltmp4170:
	.byte	118                     # DW_OP_breg6
	.byte	80                      # -48
.Ltmp4171:
	.quad	.Ltmp2259-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	.Ltmp4173-.Ltmp4172     # Loc expr size
.Ltmp4172:
	.byte	16                      # DW_OP_constu
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
.Ltmp4173:
	.quad	0
	.quad	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0 # Length of Public Names Info
.LpubNames_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
	.long	5022                    # Compilation Unit Length
	.long	3179                    # DIE offset
	.asciz	"APCM_inverse_quantization" # External Name
	.long	2136                    # DIE offset
	.asciz	"Coefficients_0_12"     # External Name
	.long	613                     # DIE offset
	.asciz	"gsm_QLB"               # External Name
	.long	1406                    # DIE offset
	.asciz	"Gsm_Preprocess"        # External Name
	.long	1077                    # DIE offset
	.asciz	"gsm_sub"               # External Name
	.long	4128                    # DIE offset
	.asciz	"LARp_to_rp"            # External Name
	.long	713                     # DIE offset
	.asciz	"f_fast"                # External Name
	.long	1152                    # DIE offset
	.asciz	"gsm_encode"            # External Name
	.long	3295                    # DIE offset
	.asciz	"Gsm_RPE_Encoding"      # External Name
	.long	535                     # DIE offset
	.asciz	"gsm_MAC"               # External Name
	.long	2182                    # DIE offset
	.asciz	"Coefficients_13_26"    # External Name
	.long	513                     # DIE offset
	.asciz	"gsm_MIC"               # External Name
	.long	4535                    # DIE offset
	.asciz	"gsm_norm"              # External Name
	.long	3844                    # DIE offset
	.asciz	"Calculation_of_the_LTP_parameters" # External Name
	.long	457                     # DIE offset
	.asciz	"gsm_A"                 # External Name
	.long	491                     # DIE offset
	.asciz	"gsm_B"                 # External Name
	.long	764                     # DIE offset
	.asciz	"gsmstate"              # External Name
	.long	1839                    # DIE offset
	.asciz	"Gsm_LPC_Analysis"      # External Name
	.long	2589                    # DIE offset
	.asciz	"Long_term_analysis_filtering" # External Name
	.long	635                     # DIE offset
	.asciz	"gsm_H"                 # External Name
	.long	669                     # DIE offset
	.asciz	"gsm_NRFAC"             # External Name
	.long	2873                    # DIE offset
	.asciz	"RPE_grid_selection"    # External Name
	.long	4212                    # DIE offset
	.asciz	"Short_term_analysis_filtering" # External Name
	.long	579                     # DIE offset
	.asciz	"gsm_DLB"               # External Name
	.long	2090                    # DIE offset
	.asciz	"Decoding_of_the_coded_Log_Area_Ratios" # External Name
	.long	1019                    # DIE offset
	.asciz	"bitoff"                # External Name
	.long	1619                    # DIE offset
	.asciz	"Reflection_coefficients" # External Name
	.long	1318                    # DIE offset
	.asciz	"gsm_option"            # External Name
	.long	103                     # DIE offset
	.asciz	"gsmdata"               # External Name
	.long	2228                    # DIE offset
	.asciz	"Coefficients_27_39"    # External Name
	.long	4578                    # DIE offset
	.asciz	"gsm_asl"               # External Name
	.long	4696                    # DIE offset
	.asciz	"gsm_div"               # External Name
	.long	4637                    # DIE offset
	.asciz	"gsm_asr"               # External Name
	.long	691                     # DIE offset
	.asciz	"gsm_FAC"               # External Name
	.long	2274                    # DIE offset
	.asciz	"Coefficients_40_159"   # External Name
	.long	742                     # DIE offset
	.asciz	"f_verbose"             # External Name
	.long	3249                    # DIE offset
	.asciz	"RPE_grid_positioning"  # External Name
	.long	1759                    # DIE offset
	.asciz	"Transformation_to_Log_Area_Ratios" # External Name
	.long	3121                    # DIE offset
	.asciz	"APCM_quantization_xmaxc_to_exp_mant" # External Name
	.long	179                     # DIE offset
	.asciz	"e"                     # External Name
	.long	4896                    # DIE offset
	.asciz	"main"                  # External Name
	.long	2979                    # DIE offset
	.asciz	"APCM_quantization"     # External Name
	.long	2827                    # DIE offset
	.asciz	"Weighting_filter"      # External Name
	.long	1805                    # DIE offset
	.asciz	"Quantization_and_coding" # External Name
	.long	4856                    # DIE offset
	.asciz	"encode"                # External Name
	.long	157                     # DIE offset
	.asciz	"Gsm_Coder"             # External Name
	.long	557                     # DIE offset
	.asciz	"gsm_INVA"              # External Name
	.long	2308                    # DIE offset
	.asciz	"Gsm_Short_Term_Analysis_Filter" # External Name
	.long	4816                    # DIE offset
	.asciz	"create"                # External Name
	.long	2647                    # DIE offset
	.asciz	"Gsm_Long_Term_Predictor" # External Name
	.long	42                      # DIE offset
	.asciz	"pcmdata"               # External Name
	.long	4376                    # DIE offset
	.asciz	"Autocorrelation"       # External Name
	.long	0                       # End Mark
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0 # Length of Public Types Info
.LpubTypes_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
	.long	5022                    # Compilation Unit Length
	.long	1054                    # DIE offset
	.asciz	"ulongword"             # External Name
	.long	77                      # DIE offset
	.asciz	"gsm_signal"            # External Name
	.long	4922                    # DIE offset
	.asciz	"gsm"                   # External Name
	.long	786                     # DIE offset
	.asciz	"gsm_state"             # External Name
	.long	5014                    # DIE offset
	.asciz	"unsigned int"          # External Name
	.long	735                     # DIE offset
	.asciz	"int"                   # External Name
	.long	964                     # DIE offset
	.asciz	"longword"              # External Name
	.long	89                      # DIE offset
	.asciz	"short"                 # External Name
	.long	1065                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	138                     # DIE offset
	.asciz	"gsm_byte"              # External Name
	.long	975                     # DIE offset
	.asciz	"long int"              # External Name
	.long	150                     # DIE offset
	.asciz	"unsigned char"         # External Name
	.long	446                     # DIE offset
	.asciz	"word"                  # External Name
	.long	1012                    # DIE offset
	.asciz	"char"                  # External Name
	.long	0                       # End Mark
.LpubTypes_end0:

	.ident	"clang version 3.6.1 (tags/RELEASE_361/final)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
