

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Sun Mar 05 20:50:45 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul
* Solution:       solution_default
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      3.96|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   15|   15|   16|   16|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    6|    6|         2|          -|          -|     3|    no    |
        |- Loop 2  |    3|    3|         1|          -|          -|     3|    no    |
        |- Loop 3  |    3|    3|         1|          -|          -|     3|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	4  / (exitcond2)
3 --> 
	2  / true
4 --> 
	4  / (!exitcond1)
	5  / (exitcond1)
5 --> 
	5  / (!exitcond)
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_6 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([3 x i32]* %a) nounwind, !map !7

ST_1: StgValue_7 (3)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind

ST_1: StgValue_8 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecInterface([3 x i32]* %a, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_9 (5)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecMemCore([3 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_10 (6)  [1/1] 1.57ns  loc: matrixmul.cpp:59
:4  br label %1


 <State 2>: 2.39ns
ST_2: tmp_2 (8)  [1/1] 0.00ns
:0  %tmp_2 = phi i32 [ undef, %0 ], [ %tmp_2_1, %_ifconv ]

ST_2: tmp_1 (9)  [1/1] 0.00ns
:1  %tmp_1 = phi i32 [ undef, %0 ], [ %tmp_2_7, %_ifconv ]

ST_2: tmp_2_8 (10)  [1/1] 0.00ns
:2  %tmp_2_8 = phi i32 [ undef, %0 ], [ %tmp_2_9, %_ifconv ]

ST_2: i (11)  [1/1] 0.00ns
:3  %i = phi i2 [ 0, %0 ], [ %i_3, %_ifconv ]

ST_2: i_cast (12)  [1/1] 0.00ns  loc: matrixmul.cpp:59
:4  %i_cast = zext i2 %i to i32

ST_2: exitcond2 (13)  [1/1] 1.54ns  loc: matrixmul.cpp:59
:5  %exitcond2 = icmp eq i2 %i, -1

ST_2: empty (14)  [1/1] 0.00ns
:6  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_2: i_3 (15)  [1/1] 0.75ns  loc: matrixmul.cpp:59
:7  %i_3 = add i2 %i, 1

ST_2: StgValue_19 (16)  [1/1] 0.00ns  loc: matrixmul.cpp:59
:8  br i1 %exitcond2, label %.preheader3.preheader, label %_ifconv

ST_2: a_addr (18)  [1/1] 0.00ns  loc: matrixmul.cpp:60
_ifconv:0  %a_addr = getelementptr [3 x i32]* %a, i32 0, i32 %i_cast

ST_2: tmp_2_17 (19)  [2/2] 2.39ns  loc: matrixmul.cpp:60
_ifconv:1  %tmp_2_17 = load i32* %a_addr, align 4

ST_2: StgValue_22 (29)  [1/1] 1.57ns  loc: matrixmul.cpp:63
.preheader3.preheader:0  br label %.preheader3


 <State 3>: 3.76ns
ST_3: tmp_2_17 (19)  [1/2] 2.39ns  loc: matrixmul.cpp:60
_ifconv:1  %tmp_2_17 = load i32* %a_addr, align 4

ST_3: sel_tmp (20)  [1/1] 1.54ns  loc: matrixmul.cpp:59
_ifconv:2  %sel_tmp = icmp eq i2 %i, 1

ST_3: tmp_2_5 (21)  [1/1] 0.00ns  loc: matrixmul.cpp:59 (grouped into LUT with out node tmp_2_1)
_ifconv:3  %tmp_2_5 = select i1 %sel_tmp, i32 %tmp_2, i32 %tmp_2_17

ST_3: sel_tmp3 (22)  [1/1] 1.54ns  loc: matrixmul.cpp:59
_ifconv:4  %sel_tmp3 = icmp eq i2 %i, 0

ST_3: tmp_2_1 (23)  [1/1] 1.37ns  loc: matrixmul.cpp:59 (out node of the LUT)
_ifconv:5  %tmp_2_1 = select i1 %sel_tmp3, i32 %tmp_2, i32 %tmp_2_5

ST_3: tmp_2_6 (24)  [1/1] 0.00ns  loc: matrixmul.cpp:59 (grouped into LUT with out node tmp_2_7)
_ifconv:6  %tmp_2_6 = select i1 %sel_tmp, i32 %tmp_2_17, i32 %tmp_1

ST_3: tmp_2_7 (25)  [1/1] 1.37ns  loc: matrixmul.cpp:59 (out node of the LUT)
_ifconv:7  %tmp_2_7 = select i1 %sel_tmp3, i32 %tmp_1, i32 %tmp_2_6

ST_3: tmp_2_9 (26)  [1/1] 1.37ns  loc: matrixmul.cpp:59
_ifconv:8  %tmp_2_9 = select i1 %sel_tmp3, i32 %tmp_2_17, i32 %tmp_2_8

ST_3: StgValue_31 (27)  [1/1] 0.00ns  loc: matrixmul.cpp:59
_ifconv:9  br label %1


 <State 4>: 2.94ns
ST_4: tmp_2_2 (31)  [1/1] 0.00ns
.preheader3:0  %tmp_2_2 = phi i32 [ %tmp_2_3, %_ifconv13 ], [ %tmp_2, %.preheader3.preheader ]

ST_4: tmp_1_2 (32)  [1/1] 0.00ns
.preheader3:1  %tmp_1_2 = phi i32 [ %tmp_2_11, %_ifconv13 ], [ %tmp_1, %.preheader3.preheader ]

ST_4: tmp_2_15 (33)  [1/1] 0.00ns
.preheader3:2  %tmp_2_15 = phi i32 [ %tmp_2_16, %_ifconv13 ], [ %tmp_2_8, %.preheader3.preheader ]

ST_4: i_1 (34)  [1/1] 0.00ns
.preheader3:3  %i_1 = phi i2 [ %i_4, %_ifconv13 ], [ 0, %.preheader3.preheader ]

ST_4: exitcond1 (35)  [1/1] 1.54ns  loc: matrixmul.cpp:63
.preheader3:4  %exitcond1 = icmp eq i2 %i_1, -1

ST_4: empty_2 (36)  [1/1] 0.00ns
.preheader3:5  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_4: i_4 (37)  [1/1] 0.75ns  loc: matrixmul.cpp:63
.preheader3:6  %i_4 = add i2 %i_1, 1

ST_4: StgValue_39 (38)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader3:7  br i1 %exitcond1, label %.preheader.preheader, label %_ifconv13

ST_4: tmp (40)  [1/1] 1.57ns  loc: matrixmul.cpp:63
_ifconv13:0  %tmp = call i32 @_ssdm_op_Mux.ap_auto.3i32.i2(i32 %tmp_2_15, i32 %tmp_1_2, i32 %tmp_2_2, i2 %i_1) nounwind

ST_4: tmp_2_18 (41)  [1/1] 0.00ns  loc: matrixmul.cpp:64
_ifconv13:1  %tmp_2_18 = shl i32 %tmp, 1

ST_4: sel_tmp1 (42)  [1/1] 1.54ns  loc: matrixmul.cpp:63
_ifconv13:2  %sel_tmp1 = icmp eq i2 %i_1, 1

ST_4: tmp_2_4 (43)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node tmp_2_3)
_ifconv13:3  %tmp_2_4 = select i1 %sel_tmp1, i32 %tmp_2_2, i32 %tmp_2_18

ST_4: sel_tmp4 (44)  [1/1] 1.54ns  loc: matrixmul.cpp:63
_ifconv13:4  %sel_tmp4 = icmp eq i2 %i_1, 0

ST_4: tmp_2_3 (45)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
_ifconv13:5  %tmp_2_3 = select i1 %sel_tmp4, i32 %tmp_2_2, i32 %tmp_2_4

ST_4: tmp_2_10 (46)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node tmp_2_11)
_ifconv13:6  %tmp_2_10 = select i1 %sel_tmp1, i32 %tmp_2_18, i32 %tmp_1_2

ST_4: tmp_2_11 (47)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
_ifconv13:7  %tmp_2_11 = select i1 %sel_tmp4, i32 %tmp_1_2, i32 %tmp_2_10

ST_4: tmp_2_16 (48)  [1/1] 1.37ns  loc: matrixmul.cpp:63
_ifconv13:8  %tmp_2_16 = select i1 %sel_tmp4, i32 %tmp_2_18, i32 %tmp_2_15

ST_4: StgValue_49 (49)  [1/1] 0.00ns  loc: matrixmul.cpp:63
_ifconv13:9  br label %.preheader3

ST_4: StgValue_50 (51)  [1/1] 1.57ns  loc: matrixmul.cpp:67
.preheader.preheader:0  br label %.preheader


 <State 5>: 3.96ns
ST_5: i_2 (53)  [1/1] 0.00ns
.preheader:0  %i_2 = phi i2 [ %i_5, %2 ], [ 0, %.preheader.preheader ]

ST_5: i_2_cast (54)  [1/1] 0.00ns  loc: matrixmul.cpp:67
.preheader:1  %i_2_cast = zext i2 %i_2 to i32

ST_5: exitcond (55)  [1/1] 1.54ns  loc: matrixmul.cpp:67
.preheader:2  %exitcond = icmp eq i2 %i_2, -1

ST_5: empty_3 (56)  [1/1] 0.00ns
.preheader:3  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_5: i_5 (57)  [1/1] 0.75ns  loc: matrixmul.cpp:67
.preheader:4  %i_5 = add i2 %i_2, 1

ST_5: StgValue_56 (58)  [1/1] 0.00ns  loc: matrixmul.cpp:67
.preheader:5  br i1 %exitcond, label %3, label %2

ST_5: tmp_1_4 (60)  [1/1] 1.57ns  loc: matrixmul.cpp:63
:0  %tmp_1_4 = call i32 @_ssdm_op_Mux.ap_auto.3i32.i2(i32 %tmp_2_15, i32 %tmp_1_2, i32 %tmp_2_2, i2 %i_2) nounwind

ST_5: a_addr_1 (61)  [1/1] 0.00ns  loc: matrixmul.cpp:68
:1  %a_addr_1 = getelementptr [3 x i32]* %a, i32 0, i32 %i_2_cast

ST_5: StgValue_59 (62)  [1/1] 2.39ns  loc: matrixmul.cpp:68
:2  store i32 %tmp_1_4, i32* %a_addr_1, align 4

ST_5: StgValue_60 (63)  [1/1] 0.00ns  loc: matrixmul.cpp:67
:3  br label %.preheader

ST_5: StgValue_61 (65)  [1/1] 0.00ns  loc: matrixmul.cpp:71
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('tmp[2]') with incoming values : ('tmp[2]', matrixmul.cpp:59) [8]  (1.57 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matrixmul.cpp:59) [11]  (0 ns)
	'getelementptr' operation ('a_addr', matrixmul.cpp:60) [18]  (0 ns)
	'load' operation ('tmp[2]', matrixmul.cpp:60) on array 'a' [19]  (2.39 ns)

 <State 3>: 3.76ns
The critical path consists of the following:
	'load' operation ('tmp[2]', matrixmul.cpp:60) on array 'a' [19]  (2.39 ns)
	'select' operation ('tmp[2]', matrixmul.cpp:59) [24]  (0 ns)
	'select' operation ('tmp[2]', matrixmul.cpp:59) [25]  (1.37 ns)

 <State 4>: 2.94ns
The critical path consists of the following:
	'phi' operation ('tmp[2]') with incoming values : ('tmp[2]', matrixmul.cpp:59) ('tmp[2]', matrixmul.cpp:63) [31]  (0 ns)
	'mux' operation ('tmp', matrixmul.cpp:63) [40]  (1.57 ns)
	'shl' operation ('tmp[2]', matrixmul.cpp:64) [41]  (0 ns)
	'select' operation ('tmp[2]', matrixmul.cpp:63) [46]  (0 ns)
	'select' operation ('tmp[2]', matrixmul.cpp:63) [47]  (1.37 ns)

 <State 5>: 3.96ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matrixmul.cpp:67) [53]  (0 ns)
	'mux' operation ('tmp_1_4', matrixmul.cpp:63) [60]  (1.57 ns)
	'store' operation (matrixmul.cpp:68) of variable 'tmp_1_4', matrixmul.cpp:63 on array 'a' [62]  (2.39 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
