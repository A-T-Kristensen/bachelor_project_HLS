// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_mux_32_bkb.h"

namespace ap_rtl {

struct matrixmul : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > a_Addr_A;
    sc_out< sc_logic > a_EN_A;
    sc_out< sc_lv<4> > a_WEN_A;
    sc_out< sc_lv<32> > a_Din_A;
    sc_in< sc_lv<32> > a_Dout_A;
    sc_out< sc_logic > a_Clk_A;
    sc_out< sc_logic > a_Rst_A;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_mux_32_bkb<1,1,32,32,32,2,32>* matrixmul_mux_32_bkb_U0;
    matrixmul_mux_32_bkb<1,1,32,32,32,2,32>* matrixmul_mux_32_bkb_U1;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > i_3_fu_172_p2;
    sc_signal< sc_lv<2> > i_3_reg_345;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond2_fu_166_p2;
    sc_signal< sc_lv<32> > tmp_2_1_fu_198_p3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_2_7_fu_214_p3;
    sc_signal< sc_lv<32> > tmp_2_9_fu_222_p3;
    sc_signal< sc_lv<2> > i_4_fu_236_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_2_3_fu_280_p3;
    sc_signal< sc_lv<1> > exitcond1_fu_230_p2;
    sc_signal< sc_lv<32> > tmp_2_11_fu_296_p3;
    sc_signal< sc_lv<32> > tmp_2_16_fu_304_p3;
    sc_signal< sc_lv<2> > i_5_fu_323_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp_2_reg_58;
    sc_signal< sc_lv<32> > tmp_1_reg_70;
    sc_signal< sc_lv<32> > tmp_2_8_reg_82;
    sc_signal< sc_lv<2> > i_reg_94;
    sc_signal< sc_lv<32> > tmp_2_2_reg_106;
    sc_signal< sc_lv<32> > tmp_1_2_reg_117;
    sc_signal< sc_lv<32> > tmp_2_15_reg_128;
    sc_signal< sc_lv<2> > i_1_reg_139;
    sc_signal< sc_lv<2> > i_2_reg_150;
    sc_signal< sc_lv<1> > exitcond_fu_317_p2;
    sc_signal< sc_lv<32> > i_cast_fu_161_p1;
    sc_signal< sc_lv<32> > i_2_cast_fu_312_p1;
    sc_signal< sc_lv<32> > a_Addr_A_orig;
    sc_signal< sc_lv<32> > tmp_1_4_fu_329_p5;
    sc_signal< sc_lv<1> > sel_tmp_fu_178_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_192_p2;
    sc_signal< sc_lv<32> > tmp_2_5_fu_184_p3;
    sc_signal< sc_lv<32> > tmp_2_6_fu_206_p3;
    sc_signal< sc_lv<32> > tmp_fu_242_p5;
    sc_signal< sc_lv<1> > sel_tmp1_fu_260_p2;
    sc_signal< sc_lv<32> > tmp_2_18_fu_254_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_274_p2;
    sc_signal< sc_lv<32> > tmp_2_4_fu_266_p3;
    sc_signal< sc_lv<32> > tmp_2_10_fu_288_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_Addr_A();
    void thread_a_Addr_A_orig();
    void thread_a_Clk_A();
    void thread_a_Din_A();
    void thread_a_EN_A();
    void thread_a_Rst_A();
    void thread_a_WEN_A();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_230_p2();
    void thread_exitcond2_fu_166_p2();
    void thread_exitcond_fu_317_p2();
    void thread_i_2_cast_fu_312_p1();
    void thread_i_3_fu_172_p2();
    void thread_i_4_fu_236_p2();
    void thread_i_5_fu_323_p2();
    void thread_i_cast_fu_161_p1();
    void thread_sel_tmp1_fu_260_p2();
    void thread_sel_tmp3_fu_192_p2();
    void thread_sel_tmp4_fu_274_p2();
    void thread_sel_tmp_fu_178_p2();
    void thread_tmp_2_10_fu_288_p3();
    void thread_tmp_2_11_fu_296_p3();
    void thread_tmp_2_16_fu_304_p3();
    void thread_tmp_2_18_fu_254_p2();
    void thread_tmp_2_1_fu_198_p3();
    void thread_tmp_2_3_fu_280_p3();
    void thread_tmp_2_4_fu_266_p3();
    void thread_tmp_2_5_fu_184_p3();
    void thread_tmp_2_6_fu_206_p3();
    void thread_tmp_2_7_fu_214_p3();
    void thread_tmp_2_9_fu_222_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
