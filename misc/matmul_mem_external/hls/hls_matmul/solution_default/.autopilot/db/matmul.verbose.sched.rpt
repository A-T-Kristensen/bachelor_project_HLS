

================================================================
== Vivado HLS Report for 'matmul'
================================================================
* Date:           Sat Feb 18 19:40:04 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul
* Solution:       solution_default
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.35|        0.63|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1304|  1304|  1305|  1305|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+------+------+----------+-----------+-----------+------+----------+
        |           |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+------+------+----------+-----------+-----------+------+----------+
        |- CL0_CL1  |  1302|  1302|       127|          7|          1|   169|    yes   |
        +-----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 7, depth = 127


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 129
* Pipeline: 1
  Pipeline-0: II = 7, D = 127, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	129  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	2  / true
129 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_130 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([169 x float]* %a) nounwind, !map !7

ST_1: StgValue_131 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([169 x float]* %b) nounwind, !map !13

ST_1: StgValue_132 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([169 x float]* %c) nounwind, !map !17

ST_1: StgValue_133 (7)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @matmul_str) nounwind

ST_1: StgValue_134 (8)  [1/1] 0.00ns  loc: matmul.c:6
:4  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_135 (9)  [1/1] 1.57ns  loc: matmul.c:9
:5  br label %1


 <State 2>: 3.25ns
ST_2: indvar_flatten (11)  [1/1] 0.00ns
:0  %indvar_flatten = phi i8 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_2: i (12)  [1/1] 0.00ns  loc: matmul.c:9
:1  %i = phi i4 [ 0, %0 ], [ %i_cast2_mid2_v, %.reset ]

ST_2: j (13)  [1/1] 0.00ns
:2  %j = phi i4 [ 0, %0 ], [ %j_1, %.reset ]

ST_2: exitcond_flatten (14)  [1/1] 2.00ns
:3  %exitcond_flatten = icmp eq i8 %indvar_flatten, -87

ST_2: indvar_flatten_next (15)  [1/1] 1.72ns
:4  %indvar_flatten_next = add i8 %indvar_flatten, 1

ST_2: StgValue_141 (16)  [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset

ST_2: i_1 (18)  [1/1] 0.80ns  loc: matmul.c:9
.reset:0  %i_1 = add i4 1, %i

ST_2: exitcond (21)  [1/1] 1.88ns  loc: matmul.c:11
.reset:3  %exitcond = icmp eq i4 %j, -3

ST_2: j_mid2 (22)  [1/1] 1.37ns  loc: matmul.c:11
.reset:4  %j_mid2 = select i1 %exitcond, i4 0, i4 %j

ST_2: i_cast2_mid2_v (23)  [1/1] 1.37ns  loc: matmul.c:9
.reset:5  %i_cast2_mid2_v = select i1 %exitcond, i4 %i_1, i4 %i


 <State 3>: 4.32ns
ST_3: i_cast2_mid2_cast (24)  [1/1] 0.00ns  loc: matmul.c:17
.reset:6  %i_cast2_mid2_cast = zext i4 %i_cast2_mid2_v to i9

ST_3: tmp (25)  [1/1] 2.60ns  loc: matmul.c:17
.reset:7  %tmp = mul i9 13, %i_cast2_mid2_cast

ST_3: tmp_38 (26)  [1/1] 0.00ns  loc: matmul.c:17
.reset:8  %tmp_38 = trunc i9 %tmp to i8

ST_3: tmp_13 (29)  [1/1] 1.72ns  loc: matmul.c:17
.reset:11  %tmp_13 = add i8 1, %tmp_38

ST_3: j_cast1 (65)  [1/1] 0.00ns  loc: matmul.c:11
.reset:47  %j_cast1 = zext i4 %j_mid2 to i32

ST_3: j_cast1_cast4_cast (68)  [1/1] 0.00ns  loc: matmul.c:17
.reset:50  %j_cast1_cast4_cast = zext i4 %j_mid2 to i6

ST_3: j_cast1_cast (69)  [1/1] 0.00ns  loc: matmul.c:17
.reset:51  %j_cast1_cast = zext i4 %j_mid2 to i5

ST_3: b_addr (70)  [1/1] 0.00ns  loc: matmul.c:17
.reset:52  %b_addr = getelementptr [169 x float]* %b, i32 0, i32 %j_cast1

ST_3: tmp_25 (71)  [1/1] 1.72ns  loc: matmul.c:17
.reset:53  %tmp_25 = add i5 13, %j_cast1_cast

ST_3: tmp_26 (74)  [1/1] 1.72ns  loc: matmul.c:17
.reset:56  %tmp_26 = add i6 26, %j_cast1_cast4_cast

ST_3: b_load (115)  [2/2] 2.71ns  loc: matmul.c:17
.reset:97  %b_load = load float* %b_addr, align 4


 <State 4>: 2.71ns
ST_4: tmp_cast (27)  [1/1] 0.00ns  loc: matmul.c:17
.reset:9  %tmp_cast = zext i9 %tmp to i32

ST_4: a_addr (28)  [1/1] 0.00ns  loc: matmul.c:17
.reset:10  %a_addr = getelementptr [169 x float]* %a, i32 0, i32 %tmp_cast

ST_4: tmp_13_cast (30)  [1/1] 0.00ns  loc: matmul.c:17
.reset:12  %tmp_13_cast = zext i8 %tmp_13 to i32

ST_4: a_addr_1 (31)  [1/1] 0.00ns  loc: matmul.c:17
.reset:13  %a_addr_1 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_13_cast

ST_4: tmp_14 (32)  [1/1] 1.72ns  loc: matmul.c:17
.reset:14  %tmp_14 = add i8 2, %tmp_38

ST_4: tmp_15 (35)  [1/1] 1.72ns  loc: matmul.c:17
.reset:17  %tmp_15 = add i8 3, %tmp_38

ST_4: j_cast1_cast4 (67)  [1/1] 0.00ns  loc: matmul.c:17
.reset:49  %j_cast1_cast4 = zext i4 %j_mid2 to i7

ST_4: tmp_25_cast (72)  [1/1] 0.00ns  loc: matmul.c:17
.reset:54  %tmp_25_cast = zext i5 %tmp_25 to i32

ST_4: b_addr_1 (73)  [1/1] 0.00ns  loc: matmul.c:17
.reset:55  %b_addr_1 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_25_cast

ST_4: tmp_26_cast (75)  [1/1] 0.00ns  loc: matmul.c:17
.reset:57  %tmp_26_cast = zext i6 %tmp_26 to i32

ST_4: b_addr_2 (76)  [1/1] 0.00ns  loc: matmul.c:17
.reset:58  %b_addr_2 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_26_cast

ST_4: tmp_27 (77)  [1/1] 1.72ns  loc: matmul.c:17
.reset:59  %tmp_27 = add i6 -25, %j_cast1_cast4_cast

ST_4: tmp_28 (80)  [1/1] 1.72ns  loc: matmul.c:17
.reset:62  %tmp_28 = add i7 52, %j_cast1_cast4

ST_4: a_load (114)  [2/2] 2.71ns  loc: matmul.c:17
.reset:96  %a_load = load float* %a_addr, align 4

ST_4: b_load (115)  [1/2] 2.71ns  loc: matmul.c:17
.reset:97  %b_load = load float* %b_addr, align 4

ST_4: a_load_1 (118)  [2/2] 2.71ns  loc: matmul.c:17
.reset:100  %a_load_1 = load float* %a_addr_1, align 4

ST_4: b_load_1 (119)  [2/2] 2.71ns  loc: matmul.c:17
.reset:101  %b_load_1 = load float* %b_addr_1, align 4

ST_4: b_load_2 (123)  [2/2] 2.71ns  loc: matmul.c:17
.reset:105  %b_load_2 = load float* %b_addr_2, align 4


 <State 5>: 2.71ns
ST_5: tmp_14_cast (33)  [1/1] 0.00ns  loc: matmul.c:17
.reset:15  %tmp_14_cast = zext i8 %tmp_14 to i32

ST_5: a_addr_2 (34)  [1/1] 0.00ns  loc: matmul.c:17
.reset:16  %a_addr_2 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_14_cast

ST_5: tmp_15_cast (36)  [1/1] 0.00ns  loc: matmul.c:17
.reset:18  %tmp_15_cast = zext i8 %tmp_15 to i32

ST_5: a_addr_3 (37)  [1/1] 0.00ns  loc: matmul.c:17
.reset:19  %a_addr_3 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_15_cast

ST_5: tmp_16 (38)  [1/1] 1.72ns  loc: matmul.c:17
.reset:20  %tmp_16 = add i8 4, %tmp_38

ST_5: tmp_17 (41)  [1/1] 1.72ns  loc: matmul.c:17
.reset:23  %tmp_17 = add i8 5, %tmp_38

ST_5: tmp_27_cast (78)  [1/1] 0.00ns  loc: matmul.c:17
.reset:60  %tmp_27_cast = zext i6 %tmp_27 to i32

ST_5: b_addr_3 (79)  [1/1] 0.00ns  loc: matmul.c:17
.reset:61  %b_addr_3 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_27_cast

ST_5: tmp_28_cast (81)  [1/1] 0.00ns  loc: matmul.c:17
.reset:63  %tmp_28_cast = zext i7 %tmp_28 to i32

ST_5: b_addr_4 (82)  [1/1] 0.00ns  loc: matmul.c:17
.reset:64  %b_addr_4 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_28_cast

ST_5: tmp_29 (83)  [1/1] 1.72ns  loc: matmul.c:17
.reset:65  %tmp_29 = add i7 -63, %j_cast1_cast4

ST_5: tmp_30 (86)  [1/1] 1.72ns  loc: matmul.c:17
.reset:68  %tmp_30 = add i7 -50, %j_cast1_cast4

ST_5: a_load (114)  [1/2] 2.71ns  loc: matmul.c:17
.reset:96  %a_load = load float* %a_addr, align 4

ST_5: a_load_1 (118)  [1/2] 2.71ns  loc: matmul.c:17
.reset:100  %a_load_1 = load float* %a_addr_1, align 4

ST_5: b_load_1 (119)  [1/2] 2.71ns  loc: matmul.c:17
.reset:101  %b_load_1 = load float* %b_addr_1, align 4

ST_5: a_load_2 (122)  [2/2] 2.71ns  loc: matmul.c:17
.reset:104  %a_load_2 = load float* %a_addr_2, align 4

ST_5: b_load_2 (123)  [1/2] 2.71ns  loc: matmul.c:17
.reset:105  %b_load_2 = load float* %b_addr_2, align 4

ST_5: a_load_3 (126)  [2/2] 2.71ns  loc: matmul.c:17
.reset:108  %a_load_3 = load float* %a_addr_3, align 4

ST_5: b_load_3 (127)  [2/2] 2.71ns  loc: matmul.c:17
.reset:109  %b_load_3 = load float* %b_addr_3, align 4

ST_5: b_load_4 (131)  [2/2] 2.71ns  loc: matmul.c:17
.reset:113  %b_load_4 = load float* %b_addr_4, align 4


 <State 6>: 4.35ns
ST_6: tmp_16_cast (39)  [1/1] 0.00ns  loc: matmul.c:17
.reset:21  %tmp_16_cast = zext i8 %tmp_16 to i32

ST_6: a_addr_4 (40)  [1/1] 0.00ns  loc: matmul.c:17
.reset:22  %a_addr_4 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_16_cast

ST_6: tmp_17_cast (42)  [1/1] 0.00ns  loc: matmul.c:17
.reset:24  %tmp_17_cast = zext i8 %tmp_17 to i32

ST_6: a_addr_5 (43)  [1/1] 0.00ns  loc: matmul.c:17
.reset:25  %a_addr_5 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_17_cast

ST_6: tmp_18 (44)  [1/1] 1.72ns  loc: matmul.c:17
.reset:26  %tmp_18 = add i8 6, %tmp_38

ST_6: tmp_19 (47)  [1/1] 1.72ns  loc: matmul.c:17
.reset:29  %tmp_19 = add i8 7, %tmp_38

ST_6: tmp_29_cast (84)  [1/1] 0.00ns  loc: matmul.c:17
.reset:66  %tmp_29_cast = zext i7 %tmp_29 to i32

ST_6: b_addr_5 (85)  [1/1] 0.00ns  loc: matmul.c:17
.reset:67  %b_addr_5 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_29_cast

ST_6: tmp_30_cast (87)  [1/1] 0.00ns  loc: matmul.c:17
.reset:69  %tmp_30_cast = zext i7 %tmp_30 to i32

ST_6: b_addr_6 (88)  [1/1] 0.00ns  loc: matmul.c:17
.reset:70  %b_addr_6 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_30_cast

ST_6: tmp_31 (89)  [1/1] 1.72ns  loc: matmul.c:17
.reset:71  %tmp_31 = add i7 -37, %j_cast1_cast4

ST_6: tmp_32 (92)  [1/1] 1.72ns  loc: matmul.c:17
.reset:74  %tmp_32 = add i6 -24, %j_cast1_cast4_cast

ST_6: tmp1 (116)  [5/5] 4.35ns  loc: matmul.c:17
.reset:98  %tmp1 = fmul float %a_load, %b_load

ST_6: tmp_1 (120)  [5/5] 4.35ns  loc: matmul.c:17
.reset:102  %tmp_1 = fmul float %a_load_1, %b_load_1

ST_6: a_load_2 (122)  [1/2] 2.71ns  loc: matmul.c:17
.reset:104  %a_load_2 = load float* %a_addr_2, align 4

ST_6: a_load_3 (126)  [1/2] 2.71ns  loc: matmul.c:17
.reset:108  %a_load_3 = load float* %a_addr_3, align 4

ST_6: b_load_3 (127)  [1/2] 2.71ns  loc: matmul.c:17
.reset:109  %b_load_3 = load float* %b_addr_3, align 4

ST_6: a_load_4 (130)  [2/2] 2.71ns  loc: matmul.c:17
.reset:112  %a_load_4 = load float* %a_addr_4, align 4

ST_6: b_load_4 (131)  [1/2] 2.71ns  loc: matmul.c:17
.reset:113  %b_load_4 = load float* %b_addr_4, align 4

ST_6: a_load_5 (134)  [2/2] 2.71ns  loc: matmul.c:17
.reset:116  %a_load_5 = load float* %a_addr_5, align 4

ST_6: b_load_5 (135)  [2/2] 2.71ns  loc: matmul.c:17
.reset:117  %b_load_5 = load float* %b_addr_5, align 4

ST_6: b_load_6 (139)  [2/2] 2.71ns  loc: matmul.c:17
.reset:121  %b_load_6 = load float* %b_addr_6, align 4


 <State 7>: 4.35ns
ST_7: tmp_18_cast (45)  [1/1] 0.00ns  loc: matmul.c:17
.reset:27  %tmp_18_cast = zext i8 %tmp_18 to i32

ST_7: a_addr_6 (46)  [1/1] 0.00ns  loc: matmul.c:17
.reset:28  %a_addr_6 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_18_cast

ST_7: tmp_19_cast (48)  [1/1] 0.00ns  loc: matmul.c:17
.reset:30  %tmp_19_cast = zext i8 %tmp_19 to i32

ST_7: a_addr_7 (49)  [1/1] 0.00ns  loc: matmul.c:17
.reset:31  %a_addr_7 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_19_cast

ST_7: tmp_20 (50)  [1/1] 1.72ns  loc: matmul.c:17
.reset:32  %tmp_20 = add i8 8, %tmp_38

ST_7: tmp_21 (53)  [1/1] 1.72ns  loc: matmul.c:17
.reset:35  %tmp_21 = add i8 9, %tmp_38

ST_7: j_cast1_cast5 (66)  [1/1] 0.00ns  loc: matmul.c:17
.reset:48  %j_cast1_cast5 = zext i4 %j_mid2 to i8

ST_7: tmp_31_cast (90)  [1/1] 0.00ns  loc: matmul.c:17
.reset:72  %tmp_31_cast = zext i7 %tmp_31 to i32

ST_7: b_addr_7 (91)  [1/1] 0.00ns  loc: matmul.c:17
.reset:73  %b_addr_7 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_31_cast

ST_7: tmp_32_cast7 (93)  [1/1] 0.00ns  loc: matmul.c:17
.reset:75  %tmp_32_cast7 = sext i6 %tmp_32 to i7

ST_7: tmp_32_cast (94)  [1/1] 0.00ns  loc: matmul.c:17
.reset:76  %tmp_32_cast = zext i7 %tmp_32_cast7 to i32

ST_7: b_addr_8 (95)  [1/1] 0.00ns  loc: matmul.c:17
.reset:77  %b_addr_8 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_32_cast

ST_7: tmp_33 (96)  [1/1] 1.72ns  loc: matmul.c:17
.reset:78  %tmp_33 = add i8 117, %j_cast1_cast5

ST_7: tmp_34 (99)  [1/1] 1.72ns  loc: matmul.c:17
.reset:81  %tmp_34 = add i8 -126, %j_cast1_cast5

ST_7: tmp1 (116)  [4/5] 4.35ns  loc: matmul.c:17
.reset:98  %tmp1 = fmul float %a_load, %b_load

ST_7: tmp_1 (120)  [4/5] 4.35ns  loc: matmul.c:17
.reset:102  %tmp_1 = fmul float %a_load_1, %b_load_1

ST_7: tmp_2 (124)  [5/5] 4.35ns  loc: matmul.c:17
.reset:106  %tmp_2 = fmul float %a_load_2, %b_load_2

ST_7: tmp_3 (128)  [5/5] 4.35ns  loc: matmul.c:17
.reset:110  %tmp_3 = fmul float %a_load_3, %b_load_3

ST_7: a_load_4 (130)  [1/2] 2.71ns  loc: matmul.c:17
.reset:112  %a_load_4 = load float* %a_addr_4, align 4

ST_7: a_load_5 (134)  [1/2] 2.71ns  loc: matmul.c:17
.reset:116  %a_load_5 = load float* %a_addr_5, align 4

ST_7: b_load_5 (135)  [1/2] 2.71ns  loc: matmul.c:17
.reset:117  %b_load_5 = load float* %b_addr_5, align 4

ST_7: a_load_6 (138)  [2/2] 2.71ns  loc: matmul.c:17
.reset:120  %a_load_6 = load float* %a_addr_6, align 4

ST_7: b_load_6 (139)  [1/2] 2.71ns  loc: matmul.c:17
.reset:121  %b_load_6 = load float* %b_addr_6, align 4

ST_7: a_load_7 (142)  [2/2] 2.71ns  loc: matmul.c:17
.reset:124  %a_load_7 = load float* %a_addr_7, align 4

ST_7: b_load_7 (143)  [2/2] 2.71ns  loc: matmul.c:17
.reset:125  %b_load_7 = load float* %b_addr_7, align 4

ST_7: b_load_8 (147)  [2/2] 2.71ns  loc: matmul.c:17
.reset:129  %b_load_8 = load float* %b_addr_8, align 4

ST_7: j_1 (168)  [1/1] 0.80ns  loc: matmul.c:11
.reset:150  %j_1 = add i4 1, %j_mid2


 <State 8>: 4.35ns
ST_8: tmp_20_cast (51)  [1/1] 0.00ns  loc: matmul.c:17
.reset:33  %tmp_20_cast = zext i8 %tmp_20 to i32

ST_8: a_addr_8 (52)  [1/1] 0.00ns  loc: matmul.c:17
.reset:34  %a_addr_8 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_20_cast

ST_8: tmp_21_cast (54)  [1/1] 0.00ns  loc: matmul.c:17
.reset:36  %tmp_21_cast = zext i8 %tmp_21 to i32

ST_8: a_addr_9 (55)  [1/1] 0.00ns  loc: matmul.c:17
.reset:37  %a_addr_9 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_21_cast

ST_8: tmp_22 (56)  [1/1] 1.72ns  loc: matmul.c:17
.reset:38  %tmp_22 = add i8 10, %tmp_38

ST_8: tmp_23 (59)  [1/1] 1.72ns  loc: matmul.c:17
.reset:41  %tmp_23 = add i8 11, %tmp_38

ST_8: tmp_33_cast (97)  [1/1] 0.00ns  loc: matmul.c:17
.reset:79  %tmp_33_cast = zext i8 %tmp_33 to i32

ST_8: b_addr_9 (98)  [1/1] 0.00ns  loc: matmul.c:17
.reset:80  %b_addr_9 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_33_cast

ST_8: tmp_34_cast (100)  [1/1] 0.00ns  loc: matmul.c:17
.reset:82  %tmp_34_cast = zext i8 %tmp_34 to i32

ST_8: b_addr_10 (101)  [1/1] 0.00ns  loc: matmul.c:17
.reset:83  %b_addr_10 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_34_cast

ST_8: tmp_35 (102)  [1/1] 1.72ns  loc: matmul.c:17
.reset:84  %tmp_35 = add i8 -113, %j_cast1_cast5

ST_8: tmp_36 (105)  [1/1] 1.72ns  loc: matmul.c:17
.reset:87  %tmp_36 = add i8 -100, %j_cast1_cast5

ST_8: tmp1 (116)  [3/5] 4.35ns  loc: matmul.c:17
.reset:98  %tmp1 = fmul float %a_load, %b_load

ST_8: tmp_1 (120)  [3/5] 4.35ns  loc: matmul.c:17
.reset:102  %tmp_1 = fmul float %a_load_1, %b_load_1

ST_8: tmp_2 (124)  [4/5] 4.35ns  loc: matmul.c:17
.reset:106  %tmp_2 = fmul float %a_load_2, %b_load_2

ST_8: tmp_3 (128)  [4/5] 4.35ns  loc: matmul.c:17
.reset:110  %tmp_3 = fmul float %a_load_3, %b_load_3

ST_8: tmp_4 (132)  [5/5] 4.35ns  loc: matmul.c:17
.reset:114  %tmp_4 = fmul float %a_load_4, %b_load_4

ST_8: tmp_5 (136)  [5/5] 4.35ns  loc: matmul.c:17
.reset:118  %tmp_5 = fmul float %a_load_5, %b_load_5

ST_8: a_load_6 (138)  [1/2] 2.71ns  loc: matmul.c:17
.reset:120  %a_load_6 = load float* %a_addr_6, align 4

ST_8: a_load_7 (142)  [1/2] 2.71ns  loc: matmul.c:17
.reset:124  %a_load_7 = load float* %a_addr_7, align 4

ST_8: b_load_7 (143)  [1/2] 2.71ns  loc: matmul.c:17
.reset:125  %b_load_7 = load float* %b_addr_7, align 4

ST_8: a_load_8 (146)  [2/2] 2.71ns  loc: matmul.c:17
.reset:128  %a_load_8 = load float* %a_addr_8, align 4

ST_8: b_load_8 (147)  [1/2] 2.71ns  loc: matmul.c:17
.reset:129  %b_load_8 = load float* %b_addr_8, align 4

ST_8: a_load_9 (150)  [2/2] 2.71ns  loc: matmul.c:17
.reset:132  %a_load_9 = load float* %a_addr_9, align 4

ST_8: b_load_9 (151)  [2/2] 2.71ns  loc: matmul.c:17
.reset:133  %b_load_9 = load float* %b_addr_9, align 4

ST_8: b_load_10 (155)  [2/2] 2.71ns  loc: matmul.c:17
.reset:137  %b_load_10 = load float* %b_addr_10, align 4


 <State 9>: 4.35ns
ST_9: tmp_22_cast (57)  [1/1] 0.00ns  loc: matmul.c:17
.reset:39  %tmp_22_cast = zext i8 %tmp_22 to i32

ST_9: a_addr_10 (58)  [1/1] 0.00ns  loc: matmul.c:17
.reset:40  %a_addr_10 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_22_cast

ST_9: tmp_23_cast (60)  [1/1] 0.00ns  loc: matmul.c:17
.reset:42  %tmp_23_cast = zext i8 %tmp_23 to i32

ST_9: a_addr_11 (61)  [1/1] 0.00ns  loc: matmul.c:17
.reset:43  %a_addr_11 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_23_cast

ST_9: tmp_24 (62)  [1/1] 1.72ns  loc: matmul.c:17
.reset:44  %tmp_24 = add i8 12, %tmp_38

ST_9: tmp_35_cast (103)  [1/1] 0.00ns  loc: matmul.c:17
.reset:85  %tmp_35_cast = zext i8 %tmp_35 to i32

ST_9: b_addr_11 (104)  [1/1] 0.00ns  loc: matmul.c:17
.reset:86  %b_addr_11 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_35_cast

ST_9: tmp_36_cast (106)  [1/1] 0.00ns  loc: matmul.c:17
.reset:88  %tmp_36_cast = zext i8 %tmp_36 to i32

ST_9: b_addr_12 (107)  [1/1] 0.00ns  loc: matmul.c:17
.reset:89  %b_addr_12 = getelementptr [169 x float]* %b, i32 0, i32 %tmp_36_cast

ST_9: tmp_37 (108)  [1/1] 1.72ns  loc: matmul.c:19
.reset:90  %tmp_37 = add i8 %tmp_38, %j_cast1_cast5

ST_9: tmp1 (116)  [2/5] 4.35ns  loc: matmul.c:17
.reset:98  %tmp1 = fmul float %a_load, %b_load

ST_9: tmp_1 (120)  [2/5] 4.35ns  loc: matmul.c:17
.reset:102  %tmp_1 = fmul float %a_load_1, %b_load_1

ST_9: tmp_2 (124)  [3/5] 4.35ns  loc: matmul.c:17
.reset:106  %tmp_2 = fmul float %a_load_2, %b_load_2

ST_9: tmp_3 (128)  [3/5] 4.35ns  loc: matmul.c:17
.reset:110  %tmp_3 = fmul float %a_load_3, %b_load_3

ST_9: tmp_4 (132)  [4/5] 4.35ns  loc: matmul.c:17
.reset:114  %tmp_4 = fmul float %a_load_4, %b_load_4

ST_9: tmp_5 (136)  [4/5] 4.35ns  loc: matmul.c:17
.reset:118  %tmp_5 = fmul float %a_load_5, %b_load_5

ST_9: tmp_6 (140)  [5/5] 4.35ns  loc: matmul.c:17
.reset:122  %tmp_6 = fmul float %a_load_6, %b_load_6

ST_9: tmp_7 (144)  [5/5] 4.35ns  loc: matmul.c:17
.reset:126  %tmp_7 = fmul float %a_load_7, %b_load_7

ST_9: a_load_8 (146)  [1/2] 2.71ns  loc: matmul.c:17
.reset:128  %a_load_8 = load float* %a_addr_8, align 4

ST_9: a_load_9 (150)  [1/2] 2.71ns  loc: matmul.c:17
.reset:132  %a_load_9 = load float* %a_addr_9, align 4

ST_9: b_load_9 (151)  [1/2] 2.71ns  loc: matmul.c:17
.reset:133  %b_load_9 = load float* %b_addr_9, align 4

ST_9: a_load_10 (154)  [2/2] 2.71ns  loc: matmul.c:17
.reset:136  %a_load_10 = load float* %a_addr_10, align 4

ST_9: b_load_10 (155)  [1/2] 2.71ns  loc: matmul.c:17
.reset:137  %b_load_10 = load float* %b_addr_10, align 4

ST_9: a_load_11 (158)  [2/2] 2.71ns  loc: matmul.c:17
.reset:140  %a_load_11 = load float* %a_addr_11, align 4

ST_9: b_load_11 (159)  [2/2] 2.71ns  loc: matmul.c:17
.reset:141  %b_load_11 = load float* %b_addr_11, align 4

ST_9: b_load_12 (163)  [2/2] 2.71ns  loc: matmul.c:17
.reset:145  %b_load_12 = load float* %b_addr_12, align 4


 <State 10>: 4.35ns
ST_10: tmp_24_cast (63)  [1/1] 0.00ns  loc: matmul.c:17
.reset:45  %tmp_24_cast = zext i8 %tmp_24 to i32

ST_10: a_addr_12 (64)  [1/1] 0.00ns  loc: matmul.c:17
.reset:46  %a_addr_12 = getelementptr [169 x float]* %a, i32 0, i32 %tmp_24_cast

ST_10: tmp1 (116)  [1/5] 4.35ns  loc: matmul.c:17
.reset:98  %tmp1 = fmul float %a_load, %b_load

ST_10: tmp_1 (120)  [1/5] 4.35ns  loc: matmul.c:17
.reset:102  %tmp_1 = fmul float %a_load_1, %b_load_1

ST_10: tmp_2 (124)  [2/5] 4.35ns  loc: matmul.c:17
.reset:106  %tmp_2 = fmul float %a_load_2, %b_load_2

ST_10: tmp_3 (128)  [2/5] 4.35ns  loc: matmul.c:17
.reset:110  %tmp_3 = fmul float %a_load_3, %b_load_3

ST_10: tmp_4 (132)  [3/5] 4.35ns  loc: matmul.c:17
.reset:114  %tmp_4 = fmul float %a_load_4, %b_load_4

ST_10: tmp_5 (136)  [3/5] 4.35ns  loc: matmul.c:17
.reset:118  %tmp_5 = fmul float %a_load_5, %b_load_5

ST_10: tmp_6 (140)  [4/5] 4.35ns  loc: matmul.c:17
.reset:122  %tmp_6 = fmul float %a_load_6, %b_load_6

ST_10: tmp_7 (144)  [4/5] 4.35ns  loc: matmul.c:17
.reset:126  %tmp_7 = fmul float %a_load_7, %b_load_7

ST_10: tmp_8 (148)  [5/5] 4.35ns  loc: matmul.c:17
.reset:130  %tmp_8 = fmul float %a_load_8, %b_load_8

ST_10: tmp_9 (152)  [5/5] 4.35ns  loc: matmul.c:17
.reset:134  %tmp_9 = fmul float %a_load_9, %b_load_9

ST_10: a_load_10 (154)  [1/2] 2.71ns  loc: matmul.c:17
.reset:136  %a_load_10 = load float* %a_addr_10, align 4

ST_10: a_load_11 (158)  [1/2] 2.71ns  loc: matmul.c:17
.reset:140  %a_load_11 = load float* %a_addr_11, align 4

ST_10: b_load_11 (159)  [1/2] 2.71ns  loc: matmul.c:17
.reset:141  %b_load_11 = load float* %b_addr_11, align 4

ST_10: a_load_12 (162)  [2/2] 2.71ns  loc: matmul.c:17
.reset:144  %a_load_12 = load float* %a_addr_12, align 4

ST_10: b_load_12 (163)  [1/2] 2.71ns  loc: matmul.c:17
.reset:145  %b_load_12 = load float* %b_addr_12, align 4


 <State 11>: 4.35ns
ST_11: sum_mult_1 (117)  [9/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_11: tmp_2 (124)  [1/5] 4.35ns  loc: matmul.c:17
.reset:106  %tmp_2 = fmul float %a_load_2, %b_load_2

ST_11: tmp_3 (128)  [1/5] 4.35ns  loc: matmul.c:17
.reset:110  %tmp_3 = fmul float %a_load_3, %b_load_3

ST_11: tmp_4 (132)  [2/5] 4.35ns  loc: matmul.c:17
.reset:114  %tmp_4 = fmul float %a_load_4, %b_load_4

ST_11: tmp_5 (136)  [2/5] 4.35ns  loc: matmul.c:17
.reset:118  %tmp_5 = fmul float %a_load_5, %b_load_5

ST_11: tmp_6 (140)  [3/5] 4.35ns  loc: matmul.c:17
.reset:122  %tmp_6 = fmul float %a_load_6, %b_load_6

ST_11: tmp_7 (144)  [3/5] 4.35ns  loc: matmul.c:17
.reset:126  %tmp_7 = fmul float %a_load_7, %b_load_7

ST_11: tmp_8 (148)  [4/5] 4.35ns  loc: matmul.c:17
.reset:130  %tmp_8 = fmul float %a_load_8, %b_load_8

ST_11: tmp_9 (152)  [4/5] 4.35ns  loc: matmul.c:17
.reset:134  %tmp_9 = fmul float %a_load_9, %b_load_9

ST_11: tmp_s (156)  [5/5] 4.35ns  loc: matmul.c:17
.reset:138  %tmp_s = fmul float %a_load_10, %b_load_10

ST_11: tmp_10 (160)  [5/5] 4.35ns  loc: matmul.c:17
.reset:142  %tmp_10 = fmul float %a_load_11, %b_load_11

ST_11: a_load_12 (162)  [1/2] 2.71ns  loc: matmul.c:17
.reset:144  %a_load_12 = load float* %a_addr_12, align 4


 <State 12>: 4.35ns
ST_12: sum_mult_1 (117)  [8/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_12: tmp_4 (132)  [1/5] 4.35ns  loc: matmul.c:17
.reset:114  %tmp_4 = fmul float %a_load_4, %b_load_4

ST_12: tmp_5 (136)  [1/5] 4.35ns  loc: matmul.c:17
.reset:118  %tmp_5 = fmul float %a_load_5, %b_load_5

ST_12: tmp_6 (140)  [2/5] 4.35ns  loc: matmul.c:17
.reset:122  %tmp_6 = fmul float %a_load_6, %b_load_6

ST_12: tmp_7 (144)  [2/5] 4.35ns  loc: matmul.c:17
.reset:126  %tmp_7 = fmul float %a_load_7, %b_load_7

ST_12: tmp_8 (148)  [3/5] 4.35ns  loc: matmul.c:17
.reset:130  %tmp_8 = fmul float %a_load_8, %b_load_8

ST_12: tmp_9 (152)  [3/5] 4.35ns  loc: matmul.c:17
.reset:134  %tmp_9 = fmul float %a_load_9, %b_load_9

ST_12: tmp_s (156)  [4/5] 4.35ns  loc: matmul.c:17
.reset:138  %tmp_s = fmul float %a_load_10, %b_load_10

ST_12: tmp_10 (160)  [4/5] 4.35ns  loc: matmul.c:17
.reset:142  %tmp_10 = fmul float %a_load_11, %b_load_11

ST_12: tmp_11 (164)  [5/5] 4.35ns  loc: matmul.c:17
.reset:146  %tmp_11 = fmul float %a_load_12, %b_load_12


 <State 13>: 4.35ns
ST_13: sum_mult_1 (117)  [7/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_13: tmp_6 (140)  [1/5] 4.35ns  loc: matmul.c:17
.reset:122  %tmp_6 = fmul float %a_load_6, %b_load_6

ST_13: tmp_7 (144)  [1/5] 4.35ns  loc: matmul.c:17
.reset:126  %tmp_7 = fmul float %a_load_7, %b_load_7

ST_13: tmp_8 (148)  [2/5] 4.35ns  loc: matmul.c:17
.reset:130  %tmp_8 = fmul float %a_load_8, %b_load_8

ST_13: tmp_9 (152)  [2/5] 4.35ns  loc: matmul.c:17
.reset:134  %tmp_9 = fmul float %a_load_9, %b_load_9

ST_13: tmp_s (156)  [3/5] 4.35ns  loc: matmul.c:17
.reset:138  %tmp_s = fmul float %a_load_10, %b_load_10

ST_13: tmp_10 (160)  [3/5] 4.35ns  loc: matmul.c:17
.reset:142  %tmp_10 = fmul float %a_load_11, %b_load_11

ST_13: tmp_11 (164)  [4/5] 4.35ns  loc: matmul.c:17
.reset:146  %tmp_11 = fmul float %a_load_12, %b_load_12


 <State 14>: 4.35ns
ST_14: sum_mult_1 (117)  [6/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_14: tmp_8 (148)  [1/5] 4.35ns  loc: matmul.c:17
.reset:130  %tmp_8 = fmul float %a_load_8, %b_load_8

ST_14: tmp_9 (152)  [1/5] 4.35ns  loc: matmul.c:17
.reset:134  %tmp_9 = fmul float %a_load_9, %b_load_9

ST_14: tmp_s (156)  [2/5] 4.35ns  loc: matmul.c:17
.reset:138  %tmp_s = fmul float %a_load_10, %b_load_10

ST_14: tmp_10 (160)  [2/5] 4.35ns  loc: matmul.c:17
.reset:142  %tmp_10 = fmul float %a_load_11, %b_load_11

ST_14: tmp_11 (164)  [3/5] 4.35ns  loc: matmul.c:17
.reset:146  %tmp_11 = fmul float %a_load_12, %b_load_12


 <State 15>: 4.35ns
ST_15: sum_mult_1 (117)  [5/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_15: tmp_s (156)  [1/5] 4.35ns  loc: matmul.c:17
.reset:138  %tmp_s = fmul float %a_load_10, %b_load_10

ST_15: tmp_10 (160)  [1/5] 4.35ns  loc: matmul.c:17
.reset:142  %tmp_10 = fmul float %a_load_11, %b_load_11

ST_15: tmp_11 (164)  [2/5] 4.35ns  loc: matmul.c:17
.reset:146  %tmp_11 = fmul float %a_load_12, %b_load_12


 <State 16>: 4.35ns
ST_16: sum_mult_1 (117)  [4/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00

ST_16: tmp_11 (164)  [1/5] 4.35ns  loc: matmul.c:17
.reset:146  %tmp_11 = fmul float %a_load_12, %b_load_12


 <State 17>: 4.35ns
ST_17: sum_mult_1 (117)  [3/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00


 <State 18>: 4.35ns
ST_18: sum_mult_1 (117)  [2/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00


 <State 19>: 4.35ns
ST_19: sum_mult_1 (117)  [1/9] 4.35ns  loc: matmul.c:17
.reset:99  %sum_mult_1 = fadd float %tmp1, 0.000000e+00


 <State 20>: 4.35ns
ST_20: sum_mult_1_1 (121)  [9/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 21>: 4.35ns
ST_21: sum_mult_1_1 (121)  [8/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 22>: 4.35ns
ST_22: sum_mult_1_1 (121)  [7/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 23>: 4.35ns
ST_23: sum_mult_1_1 (121)  [6/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 24>: 4.35ns
ST_24: sum_mult_1_1 (121)  [5/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 25>: 4.35ns
ST_25: sum_mult_1_1 (121)  [4/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 26>: 4.35ns
ST_26: sum_mult_1_1 (121)  [3/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 27>: 4.35ns
ST_27: sum_mult_1_1 (121)  [2/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 28>: 4.35ns
ST_28: sum_mult_1_1 (121)  [1/9] 4.35ns  loc: matmul.c:17
.reset:103  %sum_mult_1_1 = fadd float %sum_mult_1, %tmp_1


 <State 29>: 4.35ns
ST_29: sum_mult_1_2 (125)  [9/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 30>: 4.35ns
ST_30: sum_mult_1_2 (125)  [8/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 31>: 4.35ns
ST_31: sum_mult_1_2 (125)  [7/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 32>: 4.35ns
ST_32: sum_mult_1_2 (125)  [6/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 33>: 4.35ns
ST_33: sum_mult_1_2 (125)  [5/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 34>: 4.35ns
ST_34: sum_mult_1_2 (125)  [4/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 35>: 4.35ns
ST_35: sum_mult_1_2 (125)  [3/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 36>: 4.35ns
ST_36: sum_mult_1_2 (125)  [2/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 37>: 4.35ns
ST_37: sum_mult_1_2 (125)  [1/9] 4.35ns  loc: matmul.c:17
.reset:107  %sum_mult_1_2 = fadd float %sum_mult_1_1, %tmp_2


 <State 38>: 4.35ns
ST_38: sum_mult_1_3 (129)  [9/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 39>: 4.35ns
ST_39: sum_mult_1_3 (129)  [8/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 40>: 4.35ns
ST_40: sum_mult_1_3 (129)  [7/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 41>: 4.35ns
ST_41: sum_mult_1_3 (129)  [6/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 42>: 4.35ns
ST_42: sum_mult_1_3 (129)  [5/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 43>: 4.35ns
ST_43: sum_mult_1_3 (129)  [4/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 44>: 4.35ns
ST_44: sum_mult_1_3 (129)  [3/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 45>: 4.35ns
ST_45: sum_mult_1_3 (129)  [2/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 46>: 4.35ns
ST_46: sum_mult_1_3 (129)  [1/9] 4.35ns  loc: matmul.c:17
.reset:111  %sum_mult_1_3 = fadd float %sum_mult_1_2, %tmp_3


 <State 47>: 4.35ns
ST_47: sum_mult_1_4 (133)  [9/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 48>: 4.35ns
ST_48: sum_mult_1_4 (133)  [8/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 49>: 4.35ns
ST_49: sum_mult_1_4 (133)  [7/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 50>: 4.35ns
ST_50: sum_mult_1_4 (133)  [6/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 51>: 4.35ns
ST_51: sum_mult_1_4 (133)  [5/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 52>: 4.35ns
ST_52: sum_mult_1_4 (133)  [4/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 53>: 4.35ns
ST_53: sum_mult_1_4 (133)  [3/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 54>: 4.35ns
ST_54: sum_mult_1_4 (133)  [2/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 55>: 4.35ns
ST_55: sum_mult_1_4 (133)  [1/9] 4.35ns  loc: matmul.c:17
.reset:115  %sum_mult_1_4 = fadd float %sum_mult_1_3, %tmp_4


 <State 56>: 4.35ns
ST_56: sum_mult_1_5 (137)  [9/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 57>: 4.35ns
ST_57: sum_mult_1_5 (137)  [8/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 58>: 4.35ns
ST_58: sum_mult_1_5 (137)  [7/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 59>: 4.35ns
ST_59: sum_mult_1_5 (137)  [6/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 60>: 4.35ns
ST_60: sum_mult_1_5 (137)  [5/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 61>: 4.35ns
ST_61: sum_mult_1_5 (137)  [4/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 62>: 4.35ns
ST_62: sum_mult_1_5 (137)  [3/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 63>: 4.35ns
ST_63: sum_mult_1_5 (137)  [2/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 64>: 4.35ns
ST_64: sum_mult_1_5 (137)  [1/9] 4.35ns  loc: matmul.c:17
.reset:119  %sum_mult_1_5 = fadd float %sum_mult_1_4, %tmp_5


 <State 65>: 4.35ns
ST_65: sum_mult_1_6 (141)  [9/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 66>: 4.35ns
ST_66: sum_mult_1_6 (141)  [8/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 67>: 4.35ns
ST_67: sum_mult_1_6 (141)  [7/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 68>: 4.35ns
ST_68: sum_mult_1_6 (141)  [6/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 69>: 4.35ns
ST_69: sum_mult_1_6 (141)  [5/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 70>: 4.35ns
ST_70: sum_mult_1_6 (141)  [4/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 71>: 4.35ns
ST_71: sum_mult_1_6 (141)  [3/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 72>: 4.35ns
ST_72: sum_mult_1_6 (141)  [2/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 73>: 4.35ns
ST_73: sum_mult_1_6 (141)  [1/9] 4.35ns  loc: matmul.c:17
.reset:123  %sum_mult_1_6 = fadd float %sum_mult_1_5, %tmp_6


 <State 74>: 4.35ns
ST_74: sum_mult_1_7 (145)  [9/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 75>: 4.35ns
ST_75: sum_mult_1_7 (145)  [8/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 76>: 4.35ns
ST_76: sum_mult_1_7 (145)  [7/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 77>: 4.35ns
ST_77: sum_mult_1_7 (145)  [6/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 78>: 4.35ns
ST_78: sum_mult_1_7 (145)  [5/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 79>: 4.35ns
ST_79: sum_mult_1_7 (145)  [4/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 80>: 4.35ns
ST_80: sum_mult_1_7 (145)  [3/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 81>: 4.35ns
ST_81: sum_mult_1_7 (145)  [2/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 82>: 4.35ns
ST_82: sum_mult_1_7 (145)  [1/9] 4.35ns  loc: matmul.c:17
.reset:127  %sum_mult_1_7 = fadd float %sum_mult_1_6, %tmp_7


 <State 83>: 4.35ns
ST_83: sum_mult_1_8 (149)  [9/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 84>: 4.35ns
ST_84: sum_mult_1_8 (149)  [8/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 85>: 4.35ns
ST_85: sum_mult_1_8 (149)  [7/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 86>: 4.35ns
ST_86: sum_mult_1_8 (149)  [6/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 87>: 4.35ns
ST_87: sum_mult_1_8 (149)  [5/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 88>: 4.35ns
ST_88: sum_mult_1_8 (149)  [4/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 89>: 4.35ns
ST_89: sum_mult_1_8 (149)  [3/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 90>: 4.35ns
ST_90: sum_mult_1_8 (149)  [2/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 91>: 4.35ns
ST_91: sum_mult_1_8 (149)  [1/9] 4.35ns  loc: matmul.c:17
.reset:131  %sum_mult_1_8 = fadd float %sum_mult_1_7, %tmp_8


 <State 92>: 4.35ns
ST_92: sum_mult_1_9 (153)  [9/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 93>: 4.35ns
ST_93: sum_mult_1_9 (153)  [8/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 94>: 4.35ns
ST_94: sum_mult_1_9 (153)  [7/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 95>: 4.35ns
ST_95: sum_mult_1_9 (153)  [6/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 96>: 4.35ns
ST_96: sum_mult_1_9 (153)  [5/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 97>: 4.35ns
ST_97: sum_mult_1_9 (153)  [4/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 98>: 4.35ns
ST_98: sum_mult_1_9 (153)  [3/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 99>: 4.35ns
ST_99: sum_mult_1_9 (153)  [2/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 100>: 4.35ns
ST_100: sum_mult_1_9 (153)  [1/9] 4.35ns  loc: matmul.c:17
.reset:135  %sum_mult_1_9 = fadd float %sum_mult_1_8, %tmp_9


 <State 101>: 4.35ns
ST_101: sum_mult_1_s (157)  [9/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 102>: 4.35ns
ST_102: sum_mult_1_s (157)  [8/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 103>: 4.35ns
ST_103: sum_mult_1_s (157)  [7/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 104>: 4.35ns
ST_104: sum_mult_1_s (157)  [6/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 105>: 4.35ns
ST_105: sum_mult_1_s (157)  [5/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 106>: 4.35ns
ST_106: sum_mult_1_s (157)  [4/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 107>: 4.35ns
ST_107: sum_mult_1_s (157)  [3/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 108>: 4.35ns
ST_108: sum_mult_1_s (157)  [2/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 109>: 4.35ns
ST_109: sum_mult_1_s (157)  [1/9] 4.35ns  loc: matmul.c:17
.reset:139  %sum_mult_1_s = fadd float %sum_mult_1_9, %tmp_s


 <State 110>: 4.35ns
ST_110: sum_mult_1_10 (161)  [9/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 111>: 4.35ns
ST_111: sum_mult_1_10 (161)  [8/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 112>: 4.35ns
ST_112: sum_mult_1_10 (161)  [7/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 113>: 4.35ns
ST_113: sum_mult_1_10 (161)  [6/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 114>: 4.35ns
ST_114: sum_mult_1_10 (161)  [5/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 115>: 4.35ns
ST_115: sum_mult_1_10 (161)  [4/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 116>: 4.35ns
ST_116: sum_mult_1_10 (161)  [3/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 117>: 4.35ns
ST_117: sum_mult_1_10 (161)  [2/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 118>: 4.35ns
ST_118: sum_mult_1_10 (161)  [1/9] 4.35ns  loc: matmul.c:17
.reset:143  %sum_mult_1_10 = fadd float %sum_mult_1_s, %tmp_10


 <State 119>: 4.35ns
ST_119: sum_mult_1_11 (165)  [9/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 120>: 4.35ns
ST_120: sum_mult_1_11 (165)  [8/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 121>: 4.35ns
ST_121: sum_mult_1_11 (165)  [7/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 122>: 4.35ns
ST_122: sum_mult_1_11 (165)  [6/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 123>: 4.35ns
ST_123: sum_mult_1_11 (165)  [5/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 124>: 4.35ns
ST_124: sum_mult_1_11 (165)  [4/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 125>: 4.35ns
ST_125: sum_mult_1_11 (165)  [3/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 126>: 4.35ns
ST_126: sum_mult_1_11 (165)  [2/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 127>: 4.35ns
ST_127: sum_mult_1_11 (165)  [1/9] 4.35ns  loc: matmul.c:17
.reset:147  %sum_mult_1_11 = fadd float %sum_mult_1_10, %tmp_11


 <State 128>: 2.71ns
ST_128: StgValue_466 (19)  [1/1] 0.00ns
.reset:1  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @CL0_CL1_str)

ST_128: empty (20)  [1/1] 0.00ns
.reset:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 169, i64 169, i64 169) nounwind

ST_128: tmp_37_cast (109)  [1/1] 0.00ns  loc: matmul.c:19
.reset:91  %tmp_37_cast = zext i8 %tmp_37 to i32

ST_128: c_addr (110)  [1/1] 0.00ns  loc: matmul.c:19
.reset:92  %c_addr = getelementptr [169 x float]* %c, i32 0, i32 %tmp_37_cast

ST_128: StgValue_470 (111)  [1/1] 0.00ns  loc: matmul.c:12
.reset:93  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind

ST_128: tmp_12 (112)  [1/1] 0.00ns  loc: matmul.c:12
.reset:94  %tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str3) nounwind

ST_128: StgValue_472 (113)  [1/1] 0.00ns  loc: matmul.c:13
.reset:95  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_128: StgValue_473 (166)  [1/1] 2.71ns  loc: matmul.c:19
.reset:148  store float %sum_mult_1_11, float* %c_addr, align 4

ST_128: empty_2 (167)  [1/1] 0.00ns  loc: matmul.c:20
.reset:149  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str3, i32 %tmp_12) nounwind

ST_128: StgValue_475 (169)  [1/1] 0.00ns
.reset:151  br label %1


 <State 129>: 0.00ns
ST_129: StgValue_476 (171)  [1/1] 0.00ns  loc: matmul.c:22
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [11]  (1.57 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.c:11) [13]  (0 ns)
	'icmp' operation ('exitcond', matmul.c:11) [21]  (1.88 ns)
	'select' operation ('j_mid2', matmul.c:11) [22]  (1.37 ns)

 <State 3>: 4.32ns
The critical path consists of the following:
	'mul' operation ('tmp', matmul.c:17) [25]  (2.6 ns)
	'add' operation ('tmp_13', matmul.c:17) [29]  (1.72 ns)

 <State 4>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr', matmul.c:17) [28]  (0 ns)
	'load' operation ('a_load', matmul.c:17) on array 'a' [114]  (2.71 ns)

 <State 5>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr_2', matmul.c:17) [34]  (0 ns)
	'load' operation ('a_load_2', matmul.c:17) on array 'a' [122]  (2.71 ns)

 <State 6>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp1', matmul.c:17) [116]  (4.35 ns)

 <State 7>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp1', matmul.c:17) [116]  (4.35 ns)

 <State 8>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp1', matmul.c:17) [116]  (4.35 ns)

 <State 9>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp1', matmul.c:17) [116]  (4.35 ns)

 <State 10>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp1', matmul.c:17) [116]  (4.35 ns)

 <State 11>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_2', matmul.c:17) [124]  (4.35 ns)

 <State 12>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_4', matmul.c:17) [132]  (4.35 ns)

 <State 13>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_6', matmul.c:17) [140]  (4.35 ns)

 <State 14>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', matmul.c:17) [148]  (4.35 ns)

 <State 15>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', matmul.c:17) [156]  (4.35 ns)

 <State 16>: 4.35ns
The critical path consists of the following:
	'fmul' operation ('tmp_11', matmul.c:17) [164]  (4.35 ns)

 <State 17>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1', matmul.c:17) [117]  (4.35 ns)

 <State 18>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1', matmul.c:17) [117]  (4.35 ns)

 <State 19>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1', matmul.c:17) [117]  (4.35 ns)

 <State 20>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 21>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 22>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 23>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 24>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 25>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 26>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 27>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 28>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_1', matmul.c:17) [121]  (4.35 ns)

 <State 29>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 30>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 31>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 32>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 33>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 34>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 35>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 36>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 37>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_2', matmul.c:17) [125]  (4.35 ns)

 <State 38>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 39>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 40>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 41>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 42>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 43>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 44>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 45>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 46>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_3', matmul.c:17) [129]  (4.35 ns)

 <State 47>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 48>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 49>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 50>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 51>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 52>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 53>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 54>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 55>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_4', matmul.c:17) [133]  (4.35 ns)

 <State 56>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 57>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 58>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 59>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 60>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 61>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 62>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 63>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 64>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_5', matmul.c:17) [137]  (4.35 ns)

 <State 65>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 66>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 67>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 68>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 69>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 70>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 71>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 72>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 73>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_6', matmul.c:17) [141]  (4.35 ns)

 <State 74>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 75>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 76>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 77>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 78>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 79>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 80>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 81>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 82>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_7', matmul.c:17) [145]  (4.35 ns)

 <State 83>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 84>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 85>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 86>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 87>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 88>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 89>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 90>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 91>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_8', matmul.c:17) [149]  (4.35 ns)

 <State 92>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 93>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 94>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 95>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 96>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 97>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 98>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 99>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 100>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_9', matmul.c:17) [153]  (4.35 ns)

 <State 101>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 102>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 103>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 104>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 105>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 106>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 107>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 108>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 109>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_s', matmul.c:17) [157]  (4.35 ns)

 <State 110>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 111>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 112>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 113>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 114>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 115>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 116>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 117>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 118>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_10', matmul.c:17) [161]  (4.35 ns)

 <State 119>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 120>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 121>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 122>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 123>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 124>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 125>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 126>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 127>: 4.35ns
The critical path consists of the following:
	'fadd' operation ('sum_mult_1_11', matmul.c:17) [165]  (4.35 ns)

 <State 128>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('c_addr', matmul.c:19) [110]  (0 ns)
	'store' operation (matmul.c:19) of variable 'sum_mult_1_11', matmul.c:17 on array 'c' [166]  (2.71 ns)

 <State 129>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
