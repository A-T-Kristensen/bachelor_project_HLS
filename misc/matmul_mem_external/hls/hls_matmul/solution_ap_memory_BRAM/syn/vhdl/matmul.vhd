-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    a_0_ce0 : OUT STD_LOGIC;
    a_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    a_1_ce0 : OUT STD_LOGIC;
    a_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    b_0_ce0 : OUT STD_LOGIC;
    b_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    b_1_ce0 : OUT STD_LOGIC;
    b_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    c_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_we0 : OUT STD_LOGIC;
    c_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.516400,HLS_SYN_LAT=1304,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=11,HLS_SYN_FF=2824,HLS_SYN_LUT=2525}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_343 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_354 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_388_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_next_reg_670 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_406_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter5_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter6_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter7_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter8_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter9_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter10_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter11_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter12_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter13_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter14_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter15_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter16_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter17_j_mid2_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_cast2_mid2_v_fu_414_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter1_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter2_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter3_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter4_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter5_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter6_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter7_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter8_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter9_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter10_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter11_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter12_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter13_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter14_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter15_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter16_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter17_i_cast2_mid2_v_reg_685 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_436_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_694 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal tmp_21_fu_453_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_reg_705 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_467_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_28_reg_720 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal tmp_14_fu_477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_735 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_cast1_cast5_fu_486_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_cast1_cast5_reg_745 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_fu_494_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_reg_755 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_0_load_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal tmp_15_fu_504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_780 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_519_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_790 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_529_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_reg_800 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_0_load_reg_810 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_1_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_1_reg_825 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal tmp_16_fu_538_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_835 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_845 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_cast1_cast6_fu_552_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_cast1_cast6_reg_850 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_31_fu_560_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_31_reg_861 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_0_load_1_reg_871 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_2_reg_876 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_1_reg_881 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_2_reg_886 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal tmp_17_fu_570_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_896 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_579_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_reg_906 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_589_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_32_reg_916 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_0_load_2_reg_926 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_3_reg_931 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_2_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal tmp_18_fu_598_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_951 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_607_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_reg_961 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_617_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_33_reg_971 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_0_load_3_reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_4_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_3_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_4_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_622_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_reg_1001 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_19_fu_631_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_1011 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_0_load_4_reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal b_0_load_5_reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_4_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_5_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_5_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_6_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_7_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_5_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_6_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_8_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_2_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_2_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_3_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_3_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_3_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_s_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_10_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_5_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_11_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_mult_1_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_mult_1_1_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal sum_mult_1_2_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal sum_mult_1_3_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal sum_mult_1_4_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal sum_mult_1_5_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal sum_mult_1_6_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal grp_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_mult_1_7_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal sum_mult_1_8_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal sum_mult_1_9_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal sum_mult_1_s_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal sum_mult_1_10_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal grp_fu_658_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_reg_1201 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal sum_mult_1_11_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_336_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_phi_fu_347_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_phi_fu_358_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_cast1_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_473_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_cast_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_cast_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_cast_fu_500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_cast_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_cast_fu_524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_cast_fu_534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_cast_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_cast_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_cast_fu_566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_cast_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_cast_fu_584_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_cast_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_cast_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_cast_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_cast_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_cast_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_cast_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_cast_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_cast_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_370_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_374_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_374_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_394_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_425_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_432_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_cast2_mid2_cast_fu_422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_442_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl1_cast_fu_449_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_cast1_cast_fu_464_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_509_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_658_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_658_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_658_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state129 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_658_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_658_p20 : STD_LOGIC_VECTOR (7 downto 0);

    component matmul_fadd_32ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_fmul_32ns_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_mac_muladddEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    matmul_fadd_32ns_bkb_U0 : component matmul_fadd_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_365_p0,
        din1 => grp_fu_365_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_365_p2);

    matmul_fadd_32ns_bkb_U1 : component matmul_fadd_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_370_p0,
        din1 => grp_fu_370_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_370_p2);

    matmul_fmul_32ns_cud_U2 : component matmul_fmul_32ns_cud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_374_p0,
        din1 => grp_fu_374_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_374_p2);

    matmul_fmul_32ns_cud_U3 : component matmul_fmul_32ns_cud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_378_p0,
        din1 => grp_fu_378_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_378_p2);

    matmul_mac_muladddEe_U4 : component matmul_mac_muladddEe
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        din2_WIDTH => 4,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_658_p0,
        din1 => grp_fu_658_p1,
        din2 => grp_fu_658_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_658_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_382_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not((exitcond_flatten_reg_666 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_343 <= i_cast2_mid2_v_reg_685;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_343 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_332 <= indvar_flatten_next_reg_670;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_332 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_354 <= j_1_reg_1001;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_354 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_0_load_1_reg_871 <= a_0_q0;
                a_1_load_1_reg_881 <= a_1_q0;
                b_0_load_2_reg_876 <= b_0_q0;
                b_1_load_2_reg_886 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_0_load_2_reg_926 <= a_0_q0;
                a_1_load_2_reg_936 <= a_1_q0;
                b_0_load_3_reg_931 <= b_0_q0;
                b_1_load_3_reg_941 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_0_load_3_reg_981 <= a_0_q0;
                a_1_load_3_reg_991 <= a_1_q0;
                b_0_load_4_reg_986 <= b_0_q0;
                b_1_load_4_reg_996 <= b_1_q0;
                j_1_reg_1001 <= j_1_fu_622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_0_load_4_reg_1026 <= a_0_q0;
                a_1_load_4_reg_1036 <= a_1_q0;
                b_0_load_5_reg_1031 <= b_0_q0;
                b_1_load_5_reg_1041 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                a_0_load_5_reg_1056 <= a_0_q0;
                a_1_load_5_reg_1071 <= a_1_q0;
                b_0_load_6_reg_1061 <= b_0_q0;
                tmp1_reg_1051 <= grp_fu_374_p2;
                tmp_7_reg_1066 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                a_0_load_6_reg_1081 <= a_0_q0;
                tmp_1_reg_1076 <= grp_fu_374_p2;
                tmp_8_reg_1086 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_0_load_reg_810 <= a_0_q0;
                a_1_load_reg_820 <= a_1_q0;
                b_0_load_1_reg_815 <= b_0_q0;
                b_1_load_1_reg_825 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter10_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter9_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter10_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter9_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter11_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter10_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter11_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter10_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter12_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter11_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter12_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter11_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter13_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter12_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter13_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter12_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter14_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter13_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter14_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter13_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter15_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter14_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter15_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter14_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter16_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter15_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter16_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter15_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter17_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter16_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter17_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter16_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 <= exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter1_i_cast2_mid2_v_reg_685 <= i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_675 <= j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter2_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter1_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter3_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter2_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter3_tmp_6_reg_1131 <= tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter4_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter3_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter4_tmp_6_reg_1131 <= ap_pipeline_reg_pp0_iter3_tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter5_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter4_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter5_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter4_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter5_tmp_6_reg_1131 <= ap_pipeline_reg_pp0_iter4_tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter6_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter5_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter6_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter5_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter6_tmp_6_reg_1131 <= ap_pipeline_reg_pp0_iter5_tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter7_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter6_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter7_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter6_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter7_tmp_6_reg_1131 <= ap_pipeline_reg_pp0_iter6_tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter8_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter7_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter8_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter7_j_mid2_reg_675;
                ap_pipeline_reg_pp0_iter8_tmp_6_reg_1131 <= ap_pipeline_reg_pp0_iter7_tmp_6_reg_1131;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_666 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_666;
                ap_pipeline_reg_pp0_iter9_i_cast2_mid2_v_reg_685 <= ap_pipeline_reg_pp0_iter8_i_cast2_mid2_v_reg_685;
                ap_pipeline_reg_pp0_iter9_j_mid2_reg_675 <= ap_pipeline_reg_pp0_iter8_j_mid2_reg_675;
                exitcond_flatten_reg_666 <= exitcond_flatten_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                ap_pipeline_reg_pp0_iter10_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter9_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter11_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter10_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter12_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter11_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter13_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter12_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter14_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter13_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter2_tmp_10_reg_1116 <= tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter2_tmp_4_reg_1111 <= tmp_4_reg_1111;
                ap_pipeline_reg_pp0_iter3_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter2_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter3_tmp_4_reg_1111 <= ap_pipeline_reg_pp0_iter2_tmp_4_reg_1111;
                ap_pipeline_reg_pp0_iter4_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter3_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter4_tmp_4_reg_1111 <= ap_pipeline_reg_pp0_iter3_tmp_4_reg_1111;
                ap_pipeline_reg_pp0_iter5_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter4_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter5_tmp_4_reg_1111 <= ap_pipeline_reg_pp0_iter4_tmp_4_reg_1111;
                ap_pipeline_reg_pp0_iter6_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter5_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter7_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter6_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter8_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter7_tmp_10_reg_1116;
                ap_pipeline_reg_pp0_iter9_tmp_10_reg_1116 <= ap_pipeline_reg_pp0_iter8_tmp_10_reg_1116;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                ap_pipeline_reg_pp0_iter10_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter9_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter11_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter10_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter12_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter11_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter13_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter12_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter14_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter13_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter15_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter14_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter2_tmp_11_reg_1126 <= tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter2_tmp_5_reg_1121 <= tmp_5_reg_1121;
                ap_pipeline_reg_pp0_iter3_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter2_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter3_tmp_5_reg_1121 <= ap_pipeline_reg_pp0_iter2_tmp_5_reg_1121;
                ap_pipeline_reg_pp0_iter4_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter3_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter4_tmp_5_reg_1121 <= ap_pipeline_reg_pp0_iter3_tmp_5_reg_1121;
                ap_pipeline_reg_pp0_iter5_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter4_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter5_tmp_5_reg_1121 <= ap_pipeline_reg_pp0_iter4_tmp_5_reg_1121;
                ap_pipeline_reg_pp0_iter6_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter5_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter6_tmp_5_reg_1121 <= ap_pipeline_reg_pp0_iter5_tmp_5_reg_1121;
                ap_pipeline_reg_pp0_iter7_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter6_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter8_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter7_tmp_11_reg_1126;
                ap_pipeline_reg_pp0_iter9_tmp_11_reg_1126 <= ap_pipeline_reg_pp0_iter8_tmp_11_reg_1126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter10_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter9_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter2_tmp_7_reg_1066 <= tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter3_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter2_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter4_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter3_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter5_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter4_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter6_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter5_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter7_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter6_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter8_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter7_tmp_7_reg_1066;
                ap_pipeline_reg_pp0_iter9_tmp_7_reg_1066 <= ap_pipeline_reg_pp0_iter8_tmp_7_reg_1066;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter10_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter9_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter11_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter10_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter2_tmp_1_reg_1076 <= tmp_1_reg_1076;
                ap_pipeline_reg_pp0_iter2_tmp_8_reg_1086 <= tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter3_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter2_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter4_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter3_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter5_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter4_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter6_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter5_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter7_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter6_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter8_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter7_tmp_8_reg_1086;
                ap_pipeline_reg_pp0_iter9_tmp_8_reg_1086 <= ap_pipeline_reg_pp0_iter8_tmp_8_reg_1086;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter10_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter9_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter11_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter10_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter12_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter11_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter2_tmp_2_reg_1091 <= tmp_2_reg_1091;
                ap_pipeline_reg_pp0_iter2_tmp_9_reg_1096 <= tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter3_tmp_2_reg_1091 <= ap_pipeline_reg_pp0_iter2_tmp_2_reg_1091;
                ap_pipeline_reg_pp0_iter3_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter2_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter4_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter3_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter5_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter4_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter6_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter5_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter7_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter6_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter8_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter7_tmp_9_reg_1096;
                ap_pipeline_reg_pp0_iter9_tmp_9_reg_1096 <= ap_pipeline_reg_pp0_iter8_tmp_9_reg_1096;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                ap_pipeline_reg_pp0_iter10_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter9_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter11_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter10_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter12_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter11_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter13_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter12_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter2_tmp_3_reg_1101 <= tmp_3_reg_1101;
                ap_pipeline_reg_pp0_iter2_tmp_s_reg_1106 <= tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter3_tmp_3_reg_1101 <= ap_pipeline_reg_pp0_iter2_tmp_3_reg_1101;
                ap_pipeline_reg_pp0_iter3_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter2_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter4_tmp_3_reg_1101 <= ap_pipeline_reg_pp0_iter3_tmp_3_reg_1101;
                ap_pipeline_reg_pp0_iter4_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter3_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter5_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter4_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter6_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter5_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter7_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter6_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter8_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter7_tmp_s_reg_1106;
                ap_pipeline_reg_pp0_iter9_tmp_s_reg_1106 <= ap_pipeline_reg_pp0_iter8_tmp_s_reg_1106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                b_0_load_reg_765 <= b_0_q0;
                b_1_load_reg_770 <= b_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_382_p2 = ap_const_lv1_0))) then
                i_cast2_mid2_v_reg_685 <= i_cast2_mid2_v_fu_414_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_670 <= indvar_flatten_next_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                    j_cast1_cast5_reg_745(3 downto 0) <= j_cast1_cast5_fu_486_p1(3 downto 0);
                tmp_14_reg_735 <= tmp_14_fu_477_p2;
                tmp_29_reg_755 <= tmp_29_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                    j_cast1_cast6_reg_850(3 downto 0) <= j_cast1_cast6_fu_552_p1(3 downto 0);
                tmp_16_reg_835 <= tmp_16_fu_538_p2;
                    tmp_24_reg_845(7 downto 1) <= tmp_24_fu_547_p2(7 downto 1);
                tmp_31_reg_861 <= tmp_31_fu_560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_382_p2 = ap_const_lv1_0))) then
                j_mid2_reg_675 <= j_mid2_fu_406_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16) and (ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_10_reg_1191 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter17))) then
                sum_mult_1_11_reg_1206 <= grp_fu_370_p2;
                tmp_34_reg_1201 <= grp_fu_658_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_1_reg_1141 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_2_reg_1146 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_3_reg_1151 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_4_reg_1156 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8) and (ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_5_reg_1161 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_6_reg_1166 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter11) and (ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_7_reg_1171 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_8_reg_1176 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter14) and (ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_9_reg_1181 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_reg_1136 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15) and (ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                sum_mult_1_s_reg_1186 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_10_reg_1116 <= grp_fu_378_p2;
                tmp_4_reg_1111 <= grp_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_11_reg_1126 <= grp_fu_378_p2;
                tmp_5_reg_1121 <= grp_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_13_reg_694 <= tmp_13_fu_436_p2;
                    tmp_21_reg_705(7 downto 1) <= tmp_21_fu_453_p2(7 downto 1);
                tmp_28_reg_720 <= tmp_28_fu_467_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_15_reg_780 <= tmp_15_fu_504_p2;
                    tmp_23_reg_790(7 downto 1) <= tmp_23_fu_519_p2(7 downto 1);
                tmp_30_reg_800 <= tmp_30_fu_529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_17_reg_896 <= tmp_17_fu_570_p2;
                    tmp_25_reg_906(7 downto 1) <= tmp_25_fu_579_p2(7 downto 1);
                tmp_32_reg_916 <= tmp_32_fu_589_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_18_reg_951 <= tmp_18_fu_598_p2;
                    tmp_26_reg_961(7 downto 1) <= tmp_26_fu_607_p2(7 downto 1);
                tmp_33_reg_971 <= tmp_33_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_19_reg_1011 <= tmp_19_fu_631_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_2_reg_1091 <= grp_fu_374_p2;
                tmp_9_reg_1096 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0))) then
                tmp_3_reg_1101 <= grp_fu_374_p2;
                tmp_s_reg_1106 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                tmp_6_reg_1131 <= grp_fu_374_p2;
            end if;
        end if;
    end process;
    tmp_21_reg_705(0) <= '0';
    j_cast1_cast5_reg_745(5 downto 4) <= "00";
    tmp_23_reg_790(0) <= '0';
    tmp_24_reg_845(0) <= '1';
    j_cast1_cast6_reg_850(6 downto 4) <= "000";
    tmp_25_reg_906(0) <= '0';
    tmp_26_reg_961(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_382_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter17)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_382_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_382_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state129;
                else
                    ap_NS_fsm <= ap_ST_fsm_state129;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    a_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, tmp_13_cast_fu_473_p1, tmp_14_cast_fu_500_p1, tmp_15_cast_fu_534_p1, tmp_16_cast_fu_566_p1, tmp_17_cast_fu_594_p1, tmp_18_cast_fu_627_p1, tmp_19_cast_fu_644_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_0_address0 <= tmp_19_cast_fu_644_p1(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_0_address0 <= tmp_18_cast_fu_627_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            a_0_address0 <= tmp_17_cast_fu_594_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            a_0_address0 <= tmp_16_cast_fu_566_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            a_0_address0 <= tmp_15_cast_fu_534_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            a_0_address0 <= tmp_14_cast_fu_500_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            a_0_address0 <= tmp_13_cast_fu_473_p1(7 - 1 downto 0);
        else 
            a_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    a_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            a_0_ce0 <= ap_const_logic_1;
        else 
            a_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, tmp_22_cast_fu_482_p1, tmp_23_cast_fu_514_p1, tmp_24_cast_fu_543_p1, tmp_25_cast_fu_575_p1, tmp_26_cast_fu_603_p1, tmp_27_cast_fu_636_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_1_address0 <= tmp_27_cast_fu_636_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            a_1_address0 <= tmp_26_cast_fu_603_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            a_1_address0 <= tmp_25_cast_fu_575_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            a_1_address0 <= tmp_24_cast_fu_543_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            a_1_address0 <= tmp_23_cast_fu_514_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            a_1_address0 <= tmp_22_cast_fu_482_p1(7 - 1 downto 0);
        else 
            a_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    a_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            a_1_ce0 <= ap_const_logic_1;
        else 
            a_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state129 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_CS_fsm_state129)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state129))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state129)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state129))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, j_cast1_fu_459_p1, tmp_29_cast_fu_489_p1, tmp_30_cast_fu_524_p1, tmp_31_cast_fu_555_p1, tmp_32_cast_fu_584_p1, tmp_33_cast_fu_612_p1, tmp_34_cast_fu_640_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            b_0_address0 <= tmp_34_cast_fu_640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            b_0_address0 <= tmp_33_cast_fu_612_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            b_0_address0 <= tmp_32_cast_fu_584_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            b_0_address0 <= tmp_31_cast_fu_555_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            b_0_address0 <= tmp_30_cast_fu_524_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            b_0_address0 <= tmp_29_cast_fu_489_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            b_0_address0 <= j_cast1_fu_459_p1(7 - 1 downto 0);
        else 
            b_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    b_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_0_ce0 <= ap_const_logic_1;
        else 
            b_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, j_cast1_fu_459_p1, tmp_29_cast_fu_489_p1, tmp_30_cast_fu_524_p1, tmp_31_cast_fu_555_p1, tmp_32_cast_fu_584_p1, tmp_33_cast_fu_612_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_address0 <= tmp_33_cast_fu_612_p1(7 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_address0 <= tmp_32_cast_fu_584_p1(7 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_address0 <= tmp_31_cast_fu_555_p1(7 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_address0 <= tmp_30_cast_fu_524_p1(7 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_address0 <= tmp_29_cast_fu_489_p1(7 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_address0 <= j_cast1_fu_459_p1(7 - 1 downto 0);
            else 
                b_1_address0 <= "XXXXXXX";
            end if;
        else 
            b_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    b_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_1_ce0 <= ap_const_logic_1;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c_address0 <= tmp_35_cast_fu_654_p1(8 - 1 downto 0);

    c_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18))) then 
            c_ce0 <= ap_const_logic_1;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c_d0 <= sum_mult_1_11_reg_1206;

    c_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_666, ap_enable_reg_pp0_iter18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter18)))) then 
            c_we0 <= ap_const_logic_1;
        else 
            c_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_382_p2 <= "1" when (indvar_flatten_phi_fu_336_p4 = ap_const_lv8_A9) else "0";
    exitcond_fu_400_p2 <= "1" when (j_phi_fu_358_p4 = ap_const_lv4_D) else "0";

    grp_fu_365_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, tmp1_reg_1051, ap_enable_reg_pp0_iter2, sum_mult_1_reg_1136, sum_mult_1_1_reg_1141, ap_enable_reg_pp0_iter3, sum_mult_1_2_reg_1146, ap_enable_reg_pp0_iter5, sum_mult_1_3_reg_1151, ap_enable_reg_pp0_iter6, sum_mult_1_4_reg_1156, ap_enable_reg_pp0_iter7, sum_mult_1_5_reg_1161, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_365_p0 <= sum_mult_1_5_reg_1161;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_365_p0 <= sum_mult_1_4_reg_1156;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_365_p0 <= sum_mult_1_3_reg_1151;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_365_p0 <= sum_mult_1_2_reg_1146;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_365_p0 <= sum_mult_1_1_reg_1141;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_365_p0 <= sum_mult_1_reg_1136;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_365_p0 <= tmp1_reg_1051;
        else 
            grp_fu_365_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_365_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter2_tmp_1_reg_1076, ap_pipeline_reg_pp0_iter3_tmp_2_reg_1091, ap_pipeline_reg_pp0_iter4_tmp_3_reg_1101, ap_pipeline_reg_pp0_iter5_tmp_4_reg_1111, ap_pipeline_reg_pp0_iter6_tmp_5_reg_1121, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter8_tmp_6_reg_1131, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter8_tmp_6_reg_1131;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter6_tmp_5_reg_1121;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter5_tmp_4_reg_1111;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter4_tmp_3_reg_1101;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter3_tmp_2_reg_1091;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_365_p1 <= ap_pipeline_reg_pp0_iter2_tmp_1_reg_1076;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_365_p1 <= ap_const_lv32_0;
        else 
            grp_fu_365_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_370_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, sum_mult_1_6_reg_1166, ap_enable_reg_pp0_iter10, sum_mult_1_7_reg_1171, ap_enable_reg_pp0_iter11, sum_mult_1_8_reg_1176, ap_enable_reg_pp0_iter12, sum_mult_1_9_reg_1181, ap_enable_reg_pp0_iter14, sum_mult_1_s_reg_1186, ap_enable_reg_pp0_iter15, sum_mult_1_10_reg_1191, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_370_p0 <= sum_mult_1_10_reg_1191;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_370_p0 <= sum_mult_1_s_reg_1186;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter14))) then 
            grp_fu_370_p0 <= sum_mult_1_9_reg_1181;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            grp_fu_370_p0 <= sum_mult_1_8_reg_1176;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter11))) then 
            grp_fu_370_p0 <= sum_mult_1_7_reg_1171;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_370_p0 <= sum_mult_1_6_reg_1166;
        else 
            grp_fu_370_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_370_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_pipeline_reg_pp0_iter10_tmp_7_reg_1066, ap_pipeline_reg_pp0_iter11_tmp_8_reg_1086, ap_pipeline_reg_pp0_iter12_tmp_9_reg_1096, ap_pipeline_reg_pp0_iter13_tmp_s_reg_1106, ap_pipeline_reg_pp0_iter14_tmp_10_reg_1116, ap_pipeline_reg_pp0_iter15_tmp_11_reg_1126, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter16))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter15_tmp_11_reg_1126;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter15))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter14_tmp_10_reg_1116;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter14))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter13_tmp_s_reg_1106;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter12_tmp_9_reg_1096;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter11))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter11_tmp_8_reg_1086;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_370_p1 <= ap_pipeline_reg_pp0_iter10_tmp_7_reg_1066;
        else 
            grp_fu_370_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_374_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, a_0_load_reg_810, ap_CS_fsm_pp0_stage4, a_0_load_1_reg_871, ap_CS_fsm_pp0_stage5, a_0_load_2_reg_926, ap_CS_fsm_pp0_stage6, a_0_load_3_reg_981, a_0_load_4_reg_1026, ap_enable_reg_pp0_iter1, a_0_load_5_reg_1056, a_0_load_6_reg_1081)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p0 <= a_0_load_6_reg_1081;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p0 <= a_0_load_5_reg_1056;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p0 <= a_0_load_4_reg_1026;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p0 <= a_0_load_3_reg_981;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_374_p0 <= a_0_load_2_reg_926;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_374_p0 <= a_0_load_1_reg_871;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_374_p0 <= a_0_load_reg_810;
        else 
            grp_fu_374_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_374_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, b_0_load_reg_765, ap_CS_fsm_pp0_stage3, b_0_load_1_reg_815, ap_CS_fsm_pp0_stage4, b_0_load_2_reg_876, ap_CS_fsm_pp0_stage5, b_0_load_3_reg_931, ap_CS_fsm_pp0_stage6, b_0_load_4_reg_986, ap_enable_reg_pp0_iter1, b_0_load_5_reg_1031, b_0_load_6_reg_1061)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p1 <= b_0_load_6_reg_1061;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p1 <= b_0_load_5_reg_1031;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p1 <= b_0_load_4_reg_986;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_374_p1 <= b_0_load_3_reg_931;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_374_p1 <= b_0_load_2_reg_876;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_374_p1 <= b_0_load_1_reg_815;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_374_p1 <= b_0_load_reg_765;
        else 
            grp_fu_374_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, a_1_load_reg_820, ap_CS_fsm_pp0_stage4, a_1_load_1_reg_881, ap_CS_fsm_pp0_stage5, a_1_load_2_reg_936, ap_CS_fsm_pp0_stage6, a_1_load_3_reg_991, ap_enable_reg_pp0_iter1, a_1_load_4_reg_1036, a_1_load_5_reg_1071)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p0 <= a_1_load_5_reg_1071;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p0 <= a_1_load_4_reg_1036;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p0 <= a_1_load_3_reg_991;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_378_p0 <= a_1_load_2_reg_936;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_378_p0 <= a_1_load_1_reg_881;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_378_p0 <= a_1_load_reg_820;
        else 
            grp_fu_378_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, b_1_load_reg_770, b_1_load_1_reg_825, ap_CS_fsm_pp0_stage4, b_1_load_2_reg_886, ap_CS_fsm_pp0_stage5, b_1_load_3_reg_941, ap_CS_fsm_pp0_stage6, b_1_load_4_reg_996, ap_enable_reg_pp0_iter1, b_1_load_5_reg_1041)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p1 <= b_1_load_5_reg_1041;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p1 <= b_1_load_4_reg_996;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_378_p1 <= b_1_load_3_reg_941;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_378_p1 <= b_1_load_2_reg_886;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_378_p1 <= b_1_load_1_reg_825;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_378_p1 <= b_1_load_reg_770;
        else 
            grp_fu_378_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_658_p0 <= grp_fu_658_p00(4 - 1 downto 0);
    grp_fu_658_p00 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter17_i_cast2_mid2_v_reg_685),8));
    grp_fu_658_p1 <= ap_const_lv8_D(5 - 1 downto 0);
    grp_fu_658_p2 <= grp_fu_658_p20(4 - 1 downto 0);
    grp_fu_658_p20 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter17_j_mid2_reg_675),8));
    i_1_fu_394_p2 <= std_logic_vector(unsigned(i_phi_fu_347_p4) + unsigned(ap_const_lv4_1));
    i_cast2_mid2_cast_fu_422_p1 <= std_logic_vector(resize(unsigned(i_cast2_mid2_v_reg_685),8));
    i_cast2_mid2_v_fu_414_p3 <= 
        i_1_fu_394_p2 when (exitcond_fu_400_p2(0) = '1') else 
        i_phi_fu_347_p4;

    i_phi_fu_347_p4_assign_proc : process(i_reg_343, exitcond_flatten_reg_666, ap_CS_fsm_pp0_stage0, i_cast2_mid2_v_reg_685, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_347_p4 <= i_cast2_mid2_v_reg_685;
        else 
            i_phi_fu_347_p4 <= i_reg_343;
        end if; 
    end process;

    indvar_flatten_next_fu_388_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_336_p4) + unsigned(ap_const_lv8_1));

    indvar_flatten_phi_fu_336_p4_assign_proc : process(indvar_flatten_reg_332, exitcond_flatten_reg_666, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_670, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_336_p4 <= indvar_flatten_next_reg_670;
        else 
            indvar_flatten_phi_fu_336_p4 <= indvar_flatten_reg_332;
        end if; 
    end process;

    j_1_fu_622_p2 <= std_logic_vector(unsigned(j_mid2_reg_675) + unsigned(ap_const_lv4_1));
    j_cast1_cast5_fu_486_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_675),6));
    j_cast1_cast6_fu_552_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_675),7));
    j_cast1_cast_fu_464_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_675),5));
    j_cast1_fu_459_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_675),32));
    j_mid2_fu_406_p3 <= 
        ap_const_lv4_0 when (exitcond_fu_400_p2(0) = '1') else 
        j_phi_fu_358_p4;

    j_phi_fu_358_p4_assign_proc : process(j_reg_354, exitcond_flatten_reg_666, ap_CS_fsm_pp0_stage0, j_1_reg_1001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_666 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_358_p4 <= j_1_reg_1001;
        else 
            j_phi_fu_358_p4 <= j_reg_354;
        end if; 
    end process;

    p_shl1_cast_fu_449_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_442_p3),8));
    p_shl2_cast_fu_432_p1 <= std_logic_vector(resize(unsigned(tmp_fu_425_p3),8));
        tmp_13_cast_fu_473_p1 <= std_logic_vector(resize(signed(tmp_13_reg_694),32));

    tmp_13_fu_436_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_432_p1) - unsigned(i_cast2_mid2_cast_fu_422_p1));
        tmp_14_cast_fu_500_p1 <= std_logic_vector(resize(signed(tmp_14_reg_735),32));

    tmp_14_fu_477_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_1));
        tmp_15_cast_fu_534_p1 <= std_logic_vector(resize(signed(tmp_15_reg_780),32));

    tmp_15_fu_504_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_2));
        tmp_16_cast_fu_566_p1 <= std_logic_vector(resize(signed(tmp_16_reg_835),32));

    tmp_16_fu_538_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_3));
        tmp_17_cast_fu_594_p1 <= std_logic_vector(resize(signed(tmp_17_reg_896),32));

    tmp_17_fu_570_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_4));
        tmp_18_cast_fu_627_p1 <= std_logic_vector(resize(signed(tmp_18_reg_951),32));

    tmp_18_fu_598_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_5));
        tmp_19_cast_fu_644_p1 <= std_logic_vector(resize(signed(tmp_19_reg_1011),32));

    tmp_19_fu_631_p2 <= std_logic_vector(unsigned(tmp_13_reg_694) + unsigned(ap_const_lv8_6));
    tmp_20_fu_442_p3 <= (i_cast2_mid2_v_reg_685 & ap_const_lv1_0);
    tmp_21_fu_453_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_432_p1) - unsigned(p_shl1_cast_fu_449_p1));
        tmp_22_cast_fu_482_p1 <= std_logic_vector(resize(signed(tmp_21_reg_705),32));

    tmp_22_fu_509_p2 <= (tmp_21_reg_705 or ap_const_lv8_1);
    tmp_23_cast_fu_514_p1 <= std_logic_vector(resize(unsigned(tmp_22_fu_509_p2),32));
    tmp_23_fu_519_p2 <= std_logic_vector(unsigned(tmp_21_reg_705) + unsigned(ap_const_lv8_2));
        tmp_24_cast_fu_543_p1 <= std_logic_vector(resize(signed(tmp_23_reg_790),32));

    tmp_24_fu_547_p2 <= std_logic_vector(unsigned(tmp_21_reg_705) + unsigned(ap_const_lv8_3));
        tmp_25_cast_fu_575_p1 <= std_logic_vector(resize(signed(tmp_24_reg_845),32));

    tmp_25_fu_579_p2 <= std_logic_vector(unsigned(tmp_21_reg_705) + unsigned(ap_const_lv8_4));
        tmp_26_cast_fu_603_p1 <= std_logic_vector(resize(signed(tmp_25_reg_906),32));

    tmp_26_fu_607_p2 <= std_logic_vector(unsigned(tmp_21_reg_705) + unsigned(ap_const_lv8_5));
        tmp_27_cast_fu_636_p1 <= std_logic_vector(resize(signed(tmp_26_reg_961),32));

    tmp_28_fu_467_p2 <= std_logic_vector(unsigned(j_cast1_cast_fu_464_p1) + unsigned(ap_const_lv5_D));
    tmp_29_cast_fu_489_p1 <= std_logic_vector(resize(unsigned(tmp_28_reg_720),32));
    tmp_29_fu_494_p2 <= std_logic_vector(unsigned(j_cast1_cast5_fu_486_p1) + unsigned(ap_const_lv6_1A));
    tmp_30_cast_fu_524_p1 <= std_logic_vector(resize(unsigned(tmp_29_reg_755),32));
    tmp_30_fu_529_p2 <= std_logic_vector(unsigned(j_cast1_cast5_reg_745) + unsigned(ap_const_lv6_27));
    tmp_31_cast_fu_555_p1 <= std_logic_vector(resize(unsigned(tmp_30_reg_800),32));
    tmp_31_fu_560_p2 <= std_logic_vector(unsigned(j_cast1_cast6_fu_552_p1) + unsigned(ap_const_lv7_34));
    tmp_32_cast_fu_584_p1 <= std_logic_vector(resize(unsigned(tmp_31_reg_861),32));
    tmp_32_fu_589_p2 <= std_logic_vector(unsigned(j_cast1_cast6_reg_850) + unsigned(ap_const_lv7_41));
    tmp_33_cast_fu_612_p1 <= std_logic_vector(resize(unsigned(tmp_32_reg_916),32));
    tmp_33_fu_617_p2 <= std_logic_vector(unsigned(j_cast1_cast6_reg_850) + unsigned(ap_const_lv7_4E));
    tmp_34_cast_fu_640_p1 <= std_logic_vector(resize(unsigned(tmp_33_reg_971),32));
    tmp_35_cast_fu_654_p1 <= std_logic_vector(resize(unsigned(tmp_34_reg_1201),32));
    tmp_fu_425_p3 <= (i_cast2_mid2_v_reg_685 & ap_const_lv3_0);
end behav;
