// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1491,HLS_SYN_LUT=2654}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        a_2_Addr_A,
        a_2_EN_A,
        a_2_WEN_A,
        a_2_Din_A,
        a_2_Dout_A,
        a_2_Clk_A,
        a_2_Rst_A
);

parameter    ap_ST_fsm_state1 = 6'b1;
parameter    ap_ST_fsm_pp0_stage0 = 6'b10;
parameter    ap_ST_fsm_pp0_stage1 = 6'b100;
parameter    ap_ST_fsm_pp0_stage2 = 6'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 6'b10000;
parameter    ap_ST_fsm_state29 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv61_1 = 61'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv32_5 = 32'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] a_2_Addr_A;
output   a_2_EN_A;
output  [3:0] a_2_WEN_A;
output  [31:0] a_2_Din_A;
input  [31:0] a_2_Dout_A;
output   a_2_Clk_A;
output   a_2_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg a_2_EN_A;
reg[3:0] a_2_WEN_A;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_252;
reg   [2:0] i_reg_263;
reg   [2:0] j_reg_274;
reg   [31:0] reg_294;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1235;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage3;
reg   [0:0] tmp_5_reg_1313;
wire   [0:0] exitcond_flatten_fu_298_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235;
reg   [0:0] ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235;
reg   [0:0] ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235;
reg   [0:0] ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235;
wire   [4:0] indvar_flatten_next_fu_304_p2;
reg   [4:0] indvar_flatten_next_reg_1239;
wire   [2:0] j_mid2_fu_322_p3;
reg   [2:0] j_mid2_reg_1244;
wire   [0:0] tmp_mid2_fu_342_p3;
reg   [0:0] tmp_mid2_reg_1254;
wire   [2:0] i2_mid2_v_fu_350_p3;
reg   [2:0] i2_mid2_v_reg_1274;
wire   [4:0] tmp_7_fu_358_p3;
reg   [4:0] tmp_7_reg_1279;
wire   [1:0] tmp_fu_376_p1;
reg   [1:0] tmp_reg_1297;
wire   [0:0] tmp_5_fu_406_p2;
wire   [0:0] sel_tmp_fu_425_p2;
reg   [0:0] sel_tmp_reg_1326;
wire   [0:0] sel_tmp2_fu_438_p2;
reg   [0:0] sel_tmp2_reg_1336;
wire   [0:0] sel_tmp4_fu_451_p2;
reg   [0:0] sel_tmp4_reg_1349;
wire   [31:0] tmp_2_fu_540_p6;
reg   [31:0] tmp_2_reg_1365;
wire   [31:0] a_row_load_fu_602_p3;
wire   [31:0] tmp_3_fu_709_p6;
reg   [31:0] tmp_3_reg_1385;
wire   [31:0] a_row_load_1_fu_779_p3;
wire   [5:0] tmp_20_fu_804_p2;
reg   [5:0] tmp_20_reg_1405;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405;
reg   [5:0] ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405;
reg   [5:0] ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405;
reg   [5:0] ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405;
reg   [5:0] ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405;
wire   [31:0] tmp_4_fu_901_p6;
reg   [31:0] tmp_4_reg_1410;
wire   [2:0] j_1_fu_914_p2;
reg   [2:0] j_1_reg_1415;
wire   [31:0] a_row_load_3_fu_962_p3;
reg   [31:0] a_row_load_3_reg_1420;
wire   [31:0] a_row_load_2_fu_969_p3;
wire   [31:0] tmp_6_fu_1068_p6;
reg   [31:0] tmp_6_reg_1430;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] tmp_s_reg_1435;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] tmp_11_1_reg_1440;
reg   [31:0] ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1440;
reg   [31:0] tmp_11_2_reg_1445;
reg   [31:0] ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1445;
reg   [31:0] ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1445;
reg   [31:0] tmp_11_3_reg_1450;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1450;
reg   [31:0] ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1450;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1450;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] tmp_9_reg_1455;
reg   [31:0] tmp_12_1_reg_1460;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] tmp_12_2_reg_1465;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_12_3_reg_1470;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter4;
reg   [4:0] indvar_flatten_phi_fu_256_p4;
reg   [2:0] i_phi_fu_267_p4;
reg   [2:0] j_phi_fu_278_p4;
wire   [63:0] tmp_10_fu_366_p1;
wire   [63:0] tmp_8_fu_371_p1;
wire   [63:0] tmp_12_fu_397_p3;
wire   [63:0] tmp_17_cast_fu_420_p1;
wire   [63:0] tmp_14_fu_593_p3;
wire   [63:0] tmp_18_fu_610_p3;
wire   [63:0] tmp_16_fu_770_p3;
wire   [63:0] tmp_19_cast_fu_799_p1;
wire   [63:0] tmp_20_cast_fu_1111_p1;
reg   [31:0] a_row_load_s_fu_88;
reg   [31:0] a_row_load_9_fu_92;
reg   [31:0] a_row_load_8_fu_96;
reg   [31:0] a_row_load_7_fu_100;
reg   [31:0] b_copy_0_3_11_fu_104;
wire   [31:0] b_copy_0_3_18_fu_533_p3;
reg   [31:0] b_copy_0_3_8_fu_108;
wire   [31:0] b_copy_0_3_17_fu_526_p3;
reg   [31:0] b_copy_0_3_12_fu_112;
wire   [31:0] b_copy_0_3_16_fu_519_p3;
reg   [31:0] b_copy_0_3_1_fu_116;
wire   [31:0] b_copy_0_3_3_fu_512_p3;
reg   [31:0] b_copy_1_3_11_fu_120;
wire   [31:0] b_copy_1_3_18_fu_702_p3;
reg   [31:0] b_copy_1_3_8_fu_124;
wire   [31:0] b_copy_1_3_17_fu_695_p3;
reg   [31:0] b_copy_1_3_12_fu_128;
wire   [31:0] b_copy_1_3_16_fu_688_p3;
reg   [31:0] b_copy_1_3_1_fu_132;
wire   [31:0] b_copy_1_3_3_fu_681_p3;
reg   [31:0] b_copy_2_3_11_fu_136;
wire   [31:0] b_copy_2_3_18_fu_894_p3;
reg   [31:0] b_copy_2_3_8_fu_140;
wire   [31:0] b_copy_2_3_17_fu_887_p3;
reg   [31:0] b_copy_2_3_12_fu_144;
wire   [31:0] b_copy_2_3_16_fu_880_p3;
reg   [31:0] b_copy_2_3_1_fu_148;
wire   [31:0] b_copy_2_3_3_fu_873_p3;
reg   [31:0] b_copy_3_3_11_fu_152;
wire   [31:0] b_copy_3_3_18_fu_1061_p3;
reg   [31:0] b_copy_3_3_8_fu_156;
wire   [31:0] b_copy_3_3_17_fu_1054_p3;
reg   [31:0] b_copy_3_3_12_fu_160;
wire   [31:0] b_copy_3_3_16_fu_1047_p3;
reg   [31:0] b_copy_3_3_1_fu_164;
wire   [31:0] b_copy_3_3_3_fu_1040_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [31:0] a_2_Addr_A_orig;
reg   [31:0] grp_fu_285_p0;
reg   [31:0] grp_fu_285_p1;
reg   [31:0] grp_fu_290_p0;
reg   [31:0] grp_fu_290_p1;
wire   [0:0] exitcond_fu_316_p2;
wire   [2:0] i_1_fu_310_p2;
wire   [0:0] tmp_mid1_fu_330_p2;
wire   [0:0] tmp1_fu_336_p2;
wire   [4:0] tmp_11_fu_392_p2;
wire   [3:0] tmp_8_cast_fu_411_p1;
wire   [3:0] tmp_17_fu_414_p2;
wire   [31:0] b_copy_0_3_fu_430_p3;
wire   [31:0] b_copy_0_3_4_fu_443_p3;
wire   [31:0] b_copy_0_3_5_fu_464_p3;
wire   [31:0] b_copy_0_3_6_fu_472_p3;
wire   [31:0] b_copy_0_3_9_fu_488_p3;
wire   [31:0] b_copy_0_3_2_fu_456_p3;
wire   [31:0] b_copy_0_3_7_fu_480_p3;
wire   [31:0] b_copy_0_3_14_fu_496_p3;
wire   [31:0] b_copy_0_3_15_fu_504_p3;
wire   [31:0] tmp_2_fu_540_p1;
wire   [31:0] tmp_2_fu_540_p2;
wire   [31:0] tmp_2_fu_540_p3;
wire   [31:0] tmp_2_fu_540_p4;
wire   [4:0] tmp_13_fu_588_p2;
wire   [31:0] b_copy_1_3_fu_618_p3;
wire   [31:0] b_copy_1_3_4_fu_625_p3;
wire   [31:0] b_copy_1_3_5_fu_639_p3;
wire   [31:0] b_copy_1_3_6_fu_646_p3;
wire   [31:0] b_copy_1_3_9_fu_660_p3;
wire   [31:0] b_copy_1_3_2_fu_632_p3;
wire   [31:0] b_copy_1_3_7_fu_653_p3;
wire   [31:0] b_copy_1_3_14_fu_667_p3;
wire   [31:0] b_copy_1_3_15_fu_674_p3;
wire   [31:0] tmp_3_fu_709_p1;
wire   [31:0] tmp_3_fu_709_p2;
wire   [31:0] tmp_3_fu_709_p3;
wire   [31:0] tmp_3_fu_709_p4;
wire   [4:0] tmp_15_fu_765_p2;
wire   [4:0] tmp_8_cast5_fu_790_p1;
wire   [4:0] tmp_19_fu_793_p2;
wire   [5:0] tmp_10_cast_fu_762_p1;
wire   [5:0] tmp_8_cast6_fu_787_p1;
wire   [31:0] b_copy_2_3_fu_810_p3;
wire   [31:0] b_copy_2_3_4_fu_817_p3;
wire   [31:0] b_copy_2_3_5_fu_831_p3;
wire   [31:0] b_copy_2_3_6_fu_838_p3;
wire   [31:0] b_copy_2_3_9_fu_852_p3;
wire   [31:0] b_copy_2_3_2_fu_824_p3;
wire   [31:0] b_copy_2_3_7_fu_845_p3;
wire   [31:0] b_copy_2_3_14_fu_859_p3;
wire   [31:0] b_copy_2_3_15_fu_866_p3;
wire   [31:0] tmp_4_fu_901_p1;
wire   [31:0] tmp_4_fu_901_p2;
wire   [31:0] tmp_4_fu_901_p3;
wire   [31:0] tmp_4_fu_901_p4;
wire   [31:0] b_copy_3_3_fu_977_p3;
wire   [31:0] b_copy_3_3_4_fu_984_p3;
wire   [31:0] b_copy_3_3_5_fu_998_p3;
wire   [31:0] b_copy_3_3_6_fu_1005_p3;
wire   [31:0] b_copy_3_3_9_fu_1019_p3;
wire   [31:0] b_copy_3_3_2_fu_991_p3;
wire   [31:0] b_copy_3_3_7_fu_1012_p3;
wire   [31:0] b_copy_3_3_14_fu_1026_p3;
wire   [31:0] b_copy_3_3_15_fu_1033_p3;
wire   [31:0] tmp_6_fu_1068_p1;
wire   [31:0] tmp_6_fu_1068_p2;
wire   [31:0] tmp_6_fu_1068_p3;
wire   [31:0] tmp_6_fu_1068_p4;
wire   [0:0] ap_CS_fsm_state29;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

matmul_hw_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(1'b1),
    .dout(grp_fu_285_p2)
);

matmul_hw_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .din1(grp_fu_290_p1),
    .ce(1'b1),
    .dout(grp_fu_290_p2)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U3(
    .din1(tmp_2_fu_540_p1),
    .din2(tmp_2_fu_540_p2),
    .din3(tmp_2_fu_540_p3),
    .din4(tmp_2_fu_540_p4),
    .din5(tmp_reg_1297),
    .dout(tmp_2_fu_540_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U4(
    .din1(tmp_3_fu_709_p1),
    .din2(tmp_3_fu_709_p2),
    .din3(tmp_3_fu_709_p3),
    .din4(tmp_3_fu_709_p4),
    .din5(tmp_reg_1297),
    .dout(tmp_3_fu_709_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U5(
    .din1(tmp_4_fu_901_p1),
    .din2(tmp_4_fu_901_p2),
    .din3(tmp_4_fu_901_p3),
    .din4(tmp_4_fu_901_p4),
    .din5(tmp_reg_1297),
    .dout(tmp_4_fu_901_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U6(
    .din1(tmp_6_fu_1068_p1),
    .din2(tmp_6_fu_1068_p2),
    .din3(tmp_6_fu_1068_p3),
    .din4(tmp_6_fu_1068_p4),
    .din5(tmp_reg_1297),
    .dout(tmp_6_fu_1068_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_298_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & ~(exitcond_flatten_reg_1235 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_263 <= i2_mid2_v_reg_1274;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_263 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_252 <= indvar_flatten_next_reg_1239;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_252 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_274 <= j_1_reg_1415;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_274 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_row_load_3_reg_1420 <= a_row_load_3_fu_962_p3;
        tmp_6_reg_1430 <= tmp_6_fu_1068_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_load_7_fu_100 <= a_row_load_3_fu_962_p3;
        a_row_load_8_fu_96 <= a_row_load_2_fu_969_p3;
        b_copy_3_3_11_fu_152 <= b_copy_3_3_18_fu_1061_p3;
        b_copy_3_3_12_fu_160 <= b_copy_3_3_16_fu_1047_p3;
        b_copy_3_3_1_fu_164 <= b_copy_3_3_3_fu_1040_p3;
        b_copy_3_3_8_fu_156 <= b_copy_3_3_17_fu_1054_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_load_9_fu_92 <= a_row_load_1_fu_779_p3;
        b_copy_2_3_11_fu_136 <= b_copy_2_3_18_fu_894_p3;
        b_copy_2_3_12_fu_144 <= b_copy_2_3_16_fu_880_p3;
        b_copy_2_3_1_fu_148 <= b_copy_2_3_3_fu_873_p3;
        b_copy_2_3_8_fu_140 <= b_copy_2_3_17_fu_887_p3;
        j_1_reg_1415 <= j_1_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_row_load_s_fu_88 <= a_row_load_fu_602_p3;
        b_copy_1_3_11_fu_120 <= b_copy_1_3_18_fu_702_p3;
        b_copy_1_3_12_fu_128 <= b_copy_1_3_16_fu_688_p3;
        b_copy_1_3_1_fu_132 <= b_copy_1_3_3_fu_681_p3;
        b_copy_1_3_8_fu_124 <= b_copy_1_3_17_fu_695_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235 <= exitcond_flatten_reg_1235;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235;
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235;
        ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1450 <= tmp_11_3_reg_1450;
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235;
        ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1450 <= ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1450;
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235;
        ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1450 <= ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1450;
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235;
        exitcond_flatten_reg_1235 <= exitcond_flatten_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
        ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405 <= tmp_20_reg_1405;
        ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1445 <= tmp_11_2_reg_1445;
        ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405;
        ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1445 <= ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1445;
        ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405;
        ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405;
        ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
        ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1440 <= tmp_11_1_reg_1440;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0))) begin
        b_copy_0_3_11_fu_104 <= b_copy_0_3_18_fu_533_p3;
        b_copy_0_3_12_fu_112 <= b_copy_0_3_16_fu_519_p3;
        b_copy_0_3_1_fu_116 <= b_copy_0_3_3_fu_512_p3;
        b_copy_0_3_8_fu_108 <= b_copy_0_3_17_fu_526_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_298_p2))) begin
        i2_mid2_v_reg_1274 <= i2_mid2_v_fu_350_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1239 <= indvar_flatten_next_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_298_p2))) begin
        j_mid2_reg_1244 <= j_mid2_fu_322_p3;
        tmp_7_reg_1279[4 : 2] <= tmp_7_fu_358_p3[4 : 2];
        tmp_mid2_reg_1254 <= tmp_mid2_fu_342_p3;
        tmp_reg_1297 <= tmp_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_5_reg_1313)))) begin
        reg_294 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1235 == 1'b0))) begin
        sel_tmp2_reg_1336 <= sel_tmp2_fu_438_p2;
        sel_tmp4_reg_1349 <= sel_tmp4_fu_451_p2;
        sel_tmp_reg_1326 <= sel_tmp_fu_425_p2;
        tmp_2_reg_1365 <= tmp_2_fu_540_p6;
        tmp_5_reg_1313 <= tmp_5_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) begin
        tmp_11_1_reg_1440 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) begin
        tmp_11_2_reg_1445 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        tmp_11_3_reg_1450 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235))) begin
        tmp_12_1_reg_1460 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235))) begin
        tmp_12_2_reg_1465 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235))) begin
        tmp_12_3_reg_1470 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_20_reg_1405 <= tmp_20_fu_804_p2;
        tmp_4_reg_1410 <= tmp_4_fu_901_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_3_reg_1385 <= tmp_3_fu_709_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235))) begin
        tmp_9_reg_1455 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) begin
        tmp_s_reg_1435 <= grp_fu_290_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_16_fu_770_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_14_fu_593_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_12_fu_397_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_10_fu_366_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_19_cast_fu_799_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_18_fu_610_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_17_cast_fu_420_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_8_fu_371_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter6))) begin
        a_2_EN_A = 1'b1;
    end else begin
        a_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235))) begin
        a_2_WEN_A = ap_const_lv4_F;
    end else begin
        a_2_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_285_p0 = tmp_12_2_reg_1465;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        grp_fu_285_p0 = tmp_12_1_reg_1460;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_285_p0 = tmp_9_reg_1455;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_285_p0 = tmp_s_reg_1435;
    end else begin
        grp_fu_285_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_285_p1 = ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1450;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        grp_fu_285_p1 = ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1445;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_285_p1 = ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1440;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_285_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_290_p0 = a_row_load_3_reg_1420;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_290_p0 = a_row_load_2_fu_969_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_290_p0 = a_row_load_1_fu_779_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_290_p0 = a_row_load_fu_602_p3;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_290_p1 = tmp_6_reg_1430;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_290_p1 = tmp_4_reg_1410;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_290_p1 = tmp_3_reg_1385;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_290_p1 = tmp_2_reg_1365;
    end else begin
        grp_fu_290_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_267_p4 = i2_mid2_v_reg_1274;
    end else begin
        i_phi_fu_267_p4 = i_reg_263;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_256_p4 = indvar_flatten_next_reg_1239;
    end else begin
        indvar_flatten_phi_fu_256_p4 = indvar_flatten_reg_252;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1235 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_278_p4 = j_1_reg_1415;
    end else begin
        j_phi_fu_278_p4 = j_reg_274;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_298_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter6) & ~(1'b1 == ap_enable_reg_pp0_iter5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign a_2_Addr_A = a_2_Addr_A_orig << ap_const_lv32_2;

assign a_2_Addr_A_orig = tmp_20_cast_fu_1111_p1;

assign a_2_Clk_A = ap_clk;

assign a_2_Din_A = tmp_12_3_reg_1470;

assign a_2_Rst_A = ap_rst;

assign a_row_load_1_fu_779_p3 = ((tmp_5_reg_1313[0:0] === 1'b1) ? reg_294 : a_row_load_9_fu_92);

assign a_row_load_2_fu_969_p3 = ((tmp_5_reg_1313[0:0] === 1'b1) ? reg_294 : a_row_load_8_fu_96);

assign a_row_load_3_fu_962_p3 = ((tmp_5_reg_1313[0:0] === 1'b1) ? a_0_Dout_A : a_row_load_7_fu_100);

assign a_row_load_fu_602_p3 = ((tmp_5_reg_1313[0:0] === 1'b1) ? reg_294 : a_row_load_s_fu_88);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_5];

assign b_copy_0_3_14_fu_496_p3 = ((sel_tmp4_fu_451_p2[0:0] === 1'b1) ? b_copy_0_3_8_fu_108 : b_copy_0_3_9_fu_488_p3);

assign b_copy_0_3_15_fu_504_p3 = ((sel_tmp4_fu_451_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_11_fu_104);

assign b_copy_0_3_16_fu_519_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_7_fu_480_p3 : b_copy_0_3_12_fu_112);

assign b_copy_0_3_17_fu_526_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_14_fu_496_p3 : b_copy_0_3_8_fu_108);

assign b_copy_0_3_18_fu_533_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_15_fu_504_p3 : b_copy_0_3_11_fu_104);

assign b_copy_0_3_2_fu_456_p3 = ((sel_tmp4_fu_451_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_4_fu_443_p3);

assign b_copy_0_3_3_fu_512_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_2_fu_456_p3 : b_copy_0_3_1_fu_116);

assign b_copy_0_3_4_fu_443_p3 = ((sel_tmp2_fu_438_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_fu_430_p3);

assign b_copy_0_3_5_fu_464_p3 = ((sel_tmp_fu_425_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_12_fu_112);

assign b_copy_0_3_6_fu_472_p3 = ((sel_tmp2_fu_438_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_5_fu_464_p3);

assign b_copy_0_3_7_fu_480_p3 = ((sel_tmp4_fu_451_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_6_fu_472_p3);

assign b_copy_0_3_9_fu_488_p3 = ((sel_tmp2_fu_438_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_8_fu_108);

assign b_copy_0_3_fu_430_p3 = ((sel_tmp_fu_425_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : a_1_Dout_A);

assign b_copy_1_3_14_fu_667_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_1_3_8_fu_124 : b_copy_1_3_9_fu_660_p3);

assign b_copy_1_3_15_fu_674_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_11_fu_120);

assign b_copy_1_3_16_fu_688_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_7_fu_653_p3 : b_copy_1_3_12_fu_128);

assign b_copy_1_3_17_fu_695_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_14_fu_667_p3 : b_copy_1_3_8_fu_124);

assign b_copy_1_3_18_fu_702_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_15_fu_674_p3 : b_copy_1_3_11_fu_120);

assign b_copy_1_3_2_fu_632_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_4_fu_625_p3);

assign b_copy_1_3_3_fu_681_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_2_fu_632_p3 : b_copy_1_3_1_fu_132);

assign b_copy_1_3_4_fu_625_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_fu_618_p3);

assign b_copy_1_3_5_fu_639_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_12_fu_128);

assign b_copy_1_3_6_fu_646_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_5_fu_639_p3);

assign b_copy_1_3_7_fu_653_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_6_fu_646_p3);

assign b_copy_1_3_9_fu_660_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_8_fu_124);

assign b_copy_1_3_fu_618_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : a_1_Dout_A);

assign b_copy_2_3_14_fu_859_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_2_3_8_fu_140 : b_copy_2_3_9_fu_852_p3);

assign b_copy_2_3_15_fu_866_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_11_fu_136);

assign b_copy_2_3_16_fu_880_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_7_fu_845_p3 : b_copy_2_3_12_fu_144);

assign b_copy_2_3_17_fu_887_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_14_fu_859_p3 : b_copy_2_3_8_fu_140);

assign b_copy_2_3_18_fu_894_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_15_fu_866_p3 : b_copy_2_3_11_fu_136);

assign b_copy_2_3_2_fu_824_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_4_fu_817_p3);

assign b_copy_2_3_3_fu_873_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_2_fu_824_p3 : b_copy_2_3_1_fu_148);

assign b_copy_2_3_4_fu_817_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_fu_810_p3);

assign b_copy_2_3_5_fu_831_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_12_fu_144);

assign b_copy_2_3_6_fu_838_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_5_fu_831_p3);

assign b_copy_2_3_7_fu_845_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_6_fu_838_p3);

assign b_copy_2_3_9_fu_852_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_8_fu_140);

assign b_copy_2_3_fu_810_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : a_1_Dout_A);

assign b_copy_3_3_14_fu_1026_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_3_3_8_fu_156 : b_copy_3_3_9_fu_1019_p3);

assign b_copy_3_3_15_fu_1033_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_11_fu_152);

assign b_copy_3_3_16_fu_1047_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_7_fu_1012_p3 : b_copy_3_3_12_fu_160);

assign b_copy_3_3_17_fu_1054_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_14_fu_1026_p3 : b_copy_3_3_8_fu_156);

assign b_copy_3_3_18_fu_1061_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_15_fu_1033_p3 : b_copy_3_3_11_fu_152);

assign b_copy_3_3_2_fu_991_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_4_fu_984_p3);

assign b_copy_3_3_3_fu_1040_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_2_fu_991_p3 : b_copy_3_3_1_fu_164);

assign b_copy_3_3_4_fu_984_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_fu_977_p3);

assign b_copy_3_3_5_fu_998_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_12_fu_160);

assign b_copy_3_3_6_fu_1005_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_5_fu_998_p3);

assign b_copy_3_3_7_fu_1012_p3 = ((sel_tmp4_reg_1349[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_6_fu_1005_p3);

assign b_copy_3_3_9_fu_1019_p3 = ((sel_tmp2_reg_1336[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_8_fu_156);

assign b_copy_3_3_fu_977_p3 = ((sel_tmp_reg_1326[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : a_1_Dout_A);

assign exitcond_flatten_fu_298_p2 = ((indvar_flatten_phi_fu_256_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_316_p2 = ((j_phi_fu_278_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i2_mid2_v_fu_350_p3 = ((exitcond_fu_316_p2[0:0] === 1'b1) ? i_1_fu_310_p2 : i_phi_fu_267_p4);

assign i_1_fu_310_p2 = (ap_const_lv3_1 + i_phi_fu_267_p4);

assign indvar_flatten_next_fu_304_p2 = (indvar_flatten_phi_fu_256_p4 + ap_const_lv5_1);

assign j_1_fu_914_p2 = (ap_const_lv3_1 + j_mid2_reg_1244);

assign j_mid2_fu_322_p3 = ((exitcond_fu_316_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_278_p4);

assign sel_tmp2_fu_438_p2 = ((tmp_reg_1297 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_451_p2 = ((tmp_reg_1297 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_425_p2 = ((tmp_reg_1297 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_336_p2 = ((i_phi_fu_267_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_10_cast_fu_762_p1 = tmp_7_reg_1279;

assign tmp_10_fu_366_p1 = tmp_7_fu_358_p3;

assign tmp_11_fu_392_p2 = (tmp_7_reg_1279 | ap_const_lv5_1);

assign tmp_12_fu_397_p3 = {{ap_const_lv59_0}, {tmp_11_fu_392_p2}};

assign tmp_13_fu_588_p2 = (tmp_7_reg_1279 | ap_const_lv5_2);

assign tmp_14_fu_593_p3 = {{ap_const_lv59_0}, {tmp_13_fu_588_p2}};

assign tmp_15_fu_765_p2 = (tmp_7_reg_1279 | ap_const_lv5_3);

assign tmp_16_fu_770_p3 = {{ap_const_lv59_0}, {tmp_15_fu_765_p2}};

assign tmp_17_cast_fu_420_p1 = tmp_17_fu_414_p2;

assign tmp_17_fu_414_p2 = (ap_const_lv4_4 + tmp_8_cast_fu_411_p1);

assign tmp_18_fu_610_p3 = {{ap_const_lv61_1}, {j_mid2_reg_1244}};

assign tmp_19_cast_fu_799_p1 = tmp_19_fu_793_p2;

assign tmp_19_fu_793_p2 = (ap_const_lv5_C + tmp_8_cast5_fu_790_p1);

assign tmp_20_cast_fu_1111_p1 = ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405;

assign tmp_20_fu_804_p2 = (tmp_10_cast_fu_762_p1 + tmp_8_cast6_fu_787_p1);

assign tmp_2_fu_540_p1 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_15_fu_504_p3 : b_copy_0_3_11_fu_104);

assign tmp_2_fu_540_p2 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_14_fu_496_p3 : b_copy_0_3_8_fu_108);

assign tmp_2_fu_540_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_7_fu_480_p3 : b_copy_0_3_12_fu_112);

assign tmp_2_fu_540_p4 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_0_3_2_fu_456_p3 : b_copy_0_3_1_fu_116);

assign tmp_3_fu_709_p1 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_15_fu_674_p3 : b_copy_1_3_11_fu_120);

assign tmp_3_fu_709_p2 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_14_fu_667_p3 : b_copy_1_3_8_fu_124);

assign tmp_3_fu_709_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_7_fu_653_p3 : b_copy_1_3_12_fu_128);

assign tmp_3_fu_709_p4 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_1_3_2_fu_632_p3 : b_copy_1_3_1_fu_132);

assign tmp_4_fu_901_p1 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_15_fu_866_p3 : b_copy_2_3_11_fu_136);

assign tmp_4_fu_901_p2 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_14_fu_859_p3 : b_copy_2_3_8_fu_140);

assign tmp_4_fu_901_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_7_fu_845_p3 : b_copy_2_3_12_fu_144);

assign tmp_4_fu_901_p4 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_2_3_2_fu_824_p3 : b_copy_2_3_1_fu_148);

assign tmp_5_fu_406_p2 = ((j_mid2_reg_1244 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_1068_p1 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_15_fu_1033_p3 : b_copy_3_3_11_fu_152);

assign tmp_6_fu_1068_p2 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_14_fu_1026_p3 : b_copy_3_3_8_fu_156);

assign tmp_6_fu_1068_p3 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_7_fu_1012_p3 : b_copy_3_3_12_fu_160);

assign tmp_6_fu_1068_p4 = ((tmp_mid2_reg_1254[0:0] === 1'b1) ? b_copy_3_3_2_fu_991_p3 : b_copy_3_3_1_fu_164);

assign tmp_7_fu_358_p3 = {{i2_mid2_v_fu_350_p3}, {ap_const_lv2_0}};

assign tmp_8_cast5_fu_790_p1 = j_mid2_reg_1244;

assign tmp_8_cast6_fu_787_p1 = j_mid2_reg_1244;

assign tmp_8_cast_fu_411_p1 = j_mid2_reg_1244;

assign tmp_8_fu_371_p1 = j_mid2_fu_322_p3;

assign tmp_fu_376_p1 = j_mid2_fu_322_p3[1:0];

assign tmp_mid1_fu_330_p2 = ((i_1_fu_310_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_342_p3 = ((exitcond_fu_316_p2[0:0] === 1'b1) ? tmp_mid1_fu_330_p2 : tmp1_fu_336_p2);

always @ (posedge ap_clk) begin
    tmp_7_reg_1279[1:0] <= 2'b00;
end

endmodule //matmul_hw
