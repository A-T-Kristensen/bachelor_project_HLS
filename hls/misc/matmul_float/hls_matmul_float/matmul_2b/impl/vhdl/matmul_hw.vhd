-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=119,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1517,HLS_SYN_LUT=2624}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv61_2 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_254 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_265 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_276 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal tmp_5_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_301 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_313_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1266 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1271 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1276 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_mid2_v_fu_351_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal i2_mid2_v_reg_1296 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1296 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_i2_mid2_v_reg_1296 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_i2_mid2_v_reg_1296 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_359_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1302 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_fu_372_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1314 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1314 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_1314 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_1314 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_1314 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_388_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1329 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1376 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_538_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_fu_574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal tmp_6_fu_722_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_897_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1437 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_910_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1442 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_load_3_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_reg_1447 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1457 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_9_fu_1064_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1462 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_1467 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_1472 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1472 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_1477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_3_reg_1477 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1482 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_reg_1487 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_258_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_269_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_280_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_379_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_409_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_618_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_775_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_cast_fu_1137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_s_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_708_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_701_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_694_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_890_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_869_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_1057_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_1050_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_1043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_1036_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_288_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_fu_319_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_404_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_copy_0_3_fu_428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_441_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_470_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_454_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_538_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast_fu_582_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_585_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_613_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_copy_1_3_fu_631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_673_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_645_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_680_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_722_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_722_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_722_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_770_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_cast5_fu_792_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_795_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_2_3_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_834_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_848_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_841_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_855_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_897_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_897_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_973_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_980_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_994_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_1001_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_1015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_1008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_1022_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_1029_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1064_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1114_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1114_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1120_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_cast6_fu_1128_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_fu_1131_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component matmul_hw_fadd_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_mux_42_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_urem_4neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    matmul_hw_fadd_32bkb_U1 : component matmul_hw_fadd_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_288_p0,
        din1 => grp_fu_288_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_288_p2);

    matmul_hw_fmul_32cud_U2 : component matmul_hw_fmul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_293_p0,
        din1 => grp_fu_293_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_293_p2);

    matmul_hw_mux_42_dEe_U3 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_3_fu_538_p1,
        din2 => tmp_3_fu_538_p2,
        din3 => tmp_3_fu_538_p3,
        din4 => tmp_3_fu_538_p4,
        din5 => tmp_reg_1329,
        dout => tmp_3_fu_538_p6);

    matmul_hw_mux_42_dEe_U4 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_6_fu_722_p1,
        din2 => tmp_6_fu_722_p2,
        din3 => tmp_6_fu_722_p3,
        din4 => tmp_6_fu_722_p4,
        din5 => tmp_reg_1329,
        dout => tmp_6_fu_722_p6);

    matmul_hw_mux_42_dEe_U5 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_897_p1,
        din2 => tmp_7_fu_897_p2,
        din3 => tmp_7_fu_897_p3,
        din4 => tmp_7_fu_897_p4,
        din5 => tmp_reg_1329,
        dout => tmp_7_fu_897_p6);

    matmul_hw_mux_42_dEe_U6 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1064_p1,
        din2 => tmp_9_fu_1064_p2,
        din3 => tmp_9_fu_1064_p3,
        din4 => tmp_9_fu_1064_p4,
        din5 => tmp_reg_1329,
        dout => tmp_9_fu_1064_p6);

    matmul_hw_urem_4neOg_U7 : component matmul_hw_urem_4neOg
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        dout_WIDTH => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1114_p0,
        din1 => ap_const_lv4_6,
        ce => ap_const_logic_1,
        dout => grp_fu_1114_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_307_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((exitcond_flatten_reg_1262 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_265 <= i2_mid2_v_reg_1296;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_265 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_254 <= indvar_flatten_next_reg_1266;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_254 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_276 <= j_1_reg_1442;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_276 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_3_reg_1447 <= a_row_load_3_fu_958_p3;
                tmp_9_reg_1462 <= tmp_9_fu_1064_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_7_fu_106 <= a_row_load_3_fu_958_p3;
                a_row_load_8_fu_102 <= a_row_load_2_fu_965_p3;
                b_copy_3_3_11_fu_158 <= b_copy_3_3_18_fu_1057_p3;
                b_copy_3_3_12_fu_166 <= b_copy_3_3_16_fu_1043_p3;
                b_copy_3_3_1_fu_170 <= b_copy_3_3_3_fu_1036_p3;
                b_copy_3_3_8_fu_162 <= b_copy_3_3_17_fu_1050_p3;
                tmp_s_reg_1457 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_row_load_9_fu_98 <= a_row_load_1_fu_784_p3;
                b_copy_2_3_11_fu_142 <= b_copy_2_3_18_fu_890_p3;
                b_copy_2_3_12_fu_150 <= b_copy_2_3_16_fu_876_p3;
                b_copy_2_3_1_fu_154 <= b_copy_2_3_3_fu_869_p3;
                b_copy_2_3_8_fu_146 <= b_copy_2_3_17_fu_883_p3;
                j_1_reg_1442 <= j_1_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_load_s_fu_94 <= a_row_load_fu_574_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262 <= exitcond_flatten_reg_1262;
                ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1296 <= i2_mid2_v_reg_1296;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1262 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262;
                ap_pipeline_reg_pp0_iter2_i2_mid2_v_reg_1296 <= ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1296;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1262 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1262;
                ap_pipeline_reg_pp0_iter3_i2_mid2_v_reg_1296 <= ap_pipeline_reg_pp0_iter2_i2_mid2_v_reg_1296;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1262 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1262;
                exitcond_flatten_reg_1262 <= exitcond_flatten_fu_307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1314 <= j_mid2_reg_1314;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_1314 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1314;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_1314 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_1314;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_1314 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_1314;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1472 <= tmp_11_2_reg_1472;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_3_reg_1477 <= tmp_11_3_reg_1477;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                b_copy_0_3_11_fu_110 <= b_copy_0_3_18_fu_531_p3;
                b_copy_0_3_12_fu_118 <= b_copy_0_3_16_fu_517_p3;
                b_copy_0_3_1_fu_122 <= b_copy_0_3_3_fu_510_p3;
                b_copy_0_3_8_fu_114 <= b_copy_0_3_17_fu_524_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                b_copy_1_3_11_fu_126 <= b_copy_1_3_18_fu_715_p3;
                b_copy_1_3_12_fu_134 <= b_copy_1_3_16_fu_701_p3;
                b_copy_1_3_1_fu_138 <= b_copy_1_3_3_fu_694_p3;
                b_copy_1_3_8_fu_130 <= b_copy_1_3_17_fu_708_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_307_p2))) then
                exitcond_reg_1271 <= exitcond_fu_325_p2;
                    tmp_1_reg_1302(4 downto 2) <= tmp_1_fu_359_p3(4 downto 2);
                tmp_mid2_reg_1276 <= tmp_mid2_fu_343_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_307_p2))) then
                i2_mid2_v_reg_1296 <= i2_mid2_v_fu_351_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1266 <= indvar_flatten_next_fu_313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1262 = ap_const_lv1_0))) then
                j_mid2_reg_1314 <= j_mid2_fu_372_p3;
                tmp_reg_1329 <= tmp_fu_388_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_5_reg_1345))))) then
                reg_297 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1262)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1262)))) then
                reg_301 <= grp_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                sel_tmp2_reg_1363 <= sel_tmp2_fu_436_p2;
                sel_tmp4_reg_1376 <= sel_tmp4_fu_449_p2;
                sel_tmp_reg_1353 <= sel_tmp_fu_423_p2;
                tmp_3_reg_1392 <= tmp_3_fu_538_p6;
                tmp_5_reg_1345 <= tmp_5_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262))) then
                tmp_11_1_reg_1467 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262))) then
                tmp_11_2_reg_1472 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262))) then
                tmp_11_3_reg_1477 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1262))) then
                tmp_12_1_reg_1487 <= grp_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1262))) then
                tmp_4_reg_1482 <= grp_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_6_reg_1417 <= tmp_6_fu_722_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_7_reg_1437 <= tmp_7_fu_897_p6;
            end if;
        end if;
    end process;
    tmp_1_reg_1302(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, exitcond_flatten_fu_307_p2, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_307_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter3))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, tmp_10_fu_367_p1, tmp_18_fu_379_p3, tmp_12_fu_409_p3, tmp_20_cast_fu_591_p1, tmp_14_fu_618_p3, tmp_16_fu_775_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_16_fu_775_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_14_fu_618_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_20_cast_fu_591_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_12_fu_409_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_18_fu_379_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_10_fu_367_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage4, tmp_8_fu_627_p1, tmp_21_cast_fu_801_p1, tmp_22_cast_fu_1137_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            a_1_Addr_A_orig <= tmp_22_cast_fu_1137_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            a_1_Addr_A_orig <= tmp_21_cast_fu_801_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            a_1_Addr_A_orig <= tmp_8_fu_627_p1(32 - 1 downto 0);
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= reg_301;

    a_1_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;

    a_1_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter4, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1262)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1262)))) then 
            a_1_WEN_A <= ap_const_lv4_F;
        else 
            a_1_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_load_1_fu_784_p3 <= 
        reg_297 when (tmp_5_reg_1345(0) = '1') else 
        a_row_load_9_fu_98;
    a_row_load_2_fu_965_p3 <= 
        reg_297 when (tmp_5_reg_1345(0) = '1') else 
        a_row_load_8_fu_102;
    a_row_load_3_fu_958_p3 <= 
        a_0_Dout_A when (tmp_5_reg_1345(0) = '1') else 
        a_row_load_7_fu_106;
    a_row_load_fu_574_p3 <= 
        reg_297 when (tmp_5_reg_1345(0) = '1') else 
        a_row_load_s_fu_94;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state30 <= ap_CS_fsm(7 downto 7);

    ap_done_assign_proc : process(ap_CS_fsm_state30)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state30)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_copy_0_3_14_fu_494_p3 <= 
        b_copy_0_3_8_fu_114 when (sel_tmp4_fu_449_p2(0) = '1') else 
        b_copy_0_3_9_fu_486_p3;
    b_copy_0_3_15_fu_502_p3 <= 
        a_0_Dout_A when (sel_tmp4_fu_449_p2(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_16_fu_517_p3 <= 
        b_copy_0_3_7_fu_478_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_17_fu_524_p3 <= 
        b_copy_0_3_14_fu_494_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_18_fu_531_p3 <= 
        b_copy_0_3_15_fu_502_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_2_fu_454_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp4_fu_449_p2(0) = '1') else 
        b_copy_0_3_4_fu_441_p3;
    b_copy_0_3_3_fu_510_p3 <= 
        b_copy_0_3_2_fu_454_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_1_fu_122;
    b_copy_0_3_4_fu_441_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp2_fu_436_p2(0) = '1') else 
        b_copy_0_3_fu_428_p3;
    b_copy_0_3_5_fu_462_p3 <= 
        a_0_Dout_A when (sel_tmp_fu_423_p2(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_6_fu_470_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp2_fu_436_p2(0) = '1') else 
        b_copy_0_3_5_fu_462_p3;
    b_copy_0_3_7_fu_478_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp4_fu_449_p2(0) = '1') else 
        b_copy_0_3_6_fu_470_p3;
    b_copy_0_3_9_fu_486_p3 <= 
        a_0_Dout_A when (sel_tmp2_fu_436_p2(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_fu_428_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp_fu_423_p2(0) = '1') else 
        a_0_Dout_A;
    b_copy_1_3_14_fu_680_p3 <= 
        b_copy_1_3_8_fu_130 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_1_3_9_fu_673_p3;
    b_copy_1_3_15_fu_687_p3 <= 
        a_0_Dout_A when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_16_fu_701_p3 <= 
        b_copy_1_3_7_fu_666_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_17_fu_708_p3 <= 
        b_copy_1_3_14_fu_680_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_18_fu_715_p3 <= 
        b_copy_1_3_15_fu_687_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_2_fu_645_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_1_3_4_fu_638_p3;
    b_copy_1_3_3_fu_694_p3 <= 
        b_copy_1_3_2_fu_645_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_1_fu_138;
    b_copy_1_3_4_fu_638_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_1_3_fu_631_p3;
    b_copy_1_3_5_fu_652_p3 <= 
        a_0_Dout_A when (sel_tmp_reg_1353(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_6_fu_659_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_1_3_5_fu_652_p3;
    b_copy_1_3_7_fu_666_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_1_3_6_fu_659_p3;
    b_copy_1_3_9_fu_673_p3 <= 
        a_0_Dout_A when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_fu_631_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp_reg_1353(0) = '1') else 
        a_0_Dout_A;
    b_copy_2_3_14_fu_855_p3 <= 
        b_copy_2_3_8_fu_146 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_2_3_9_fu_848_p3;
    b_copy_2_3_15_fu_862_p3 <= 
        a_1_Dout_A when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_16_fu_876_p3 <= 
        b_copy_2_3_7_fu_841_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_17_fu_883_p3 <= 
        b_copy_2_3_14_fu_855_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_18_fu_890_p3 <= 
        b_copy_2_3_15_fu_862_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_2_fu_820_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_2_3_4_fu_813_p3;
    b_copy_2_3_3_fu_869_p3 <= 
        b_copy_2_3_2_fu_820_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_1_fu_154;
    b_copy_2_3_4_fu_813_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_2_3_fu_806_p3;
    b_copy_2_3_5_fu_827_p3 <= 
        a_1_Dout_A when (sel_tmp_reg_1353(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_6_fu_834_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_2_3_5_fu_827_p3;
    b_copy_2_3_7_fu_841_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_2_3_6_fu_834_p3;
    b_copy_2_3_9_fu_848_p3 <= 
        a_1_Dout_A when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_fu_806_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp_reg_1353(0) = '1') else 
        a_1_Dout_A;
    b_copy_3_3_14_fu_1022_p3 <= 
        b_copy_3_3_8_fu_162 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_3_3_9_fu_1015_p3;
    b_copy_3_3_15_fu_1029_p3 <= 
        a_1_Dout_A when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_16_fu_1043_p3 <= 
        b_copy_3_3_7_fu_1008_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_17_fu_1050_p3 <= 
        b_copy_3_3_14_fu_1022_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_18_fu_1057_p3 <= 
        b_copy_3_3_15_fu_1029_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_2_fu_987_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_3_3_4_fu_980_p3;
    b_copy_3_3_3_fu_1036_p3 <= 
        b_copy_3_3_2_fu_987_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_1_fu_170;
    b_copy_3_3_4_fu_980_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_3_3_fu_973_p3;
    b_copy_3_3_5_fu_994_p3 <= 
        a_1_Dout_A when (sel_tmp_reg_1353(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_6_fu_1001_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_3_3_5_fu_994_p3;
    b_copy_3_3_7_fu_1008_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp4_reg_1376(0) = '1') else 
        b_copy_3_3_6_fu_1001_p3;
    b_copy_3_3_9_fu_1015_p3 <= 
        a_1_Dout_A when (sel_tmp2_reg_1363(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_fu_973_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp_reg_1353(0) = '1') else 
        a_1_Dout_A;
    exitcond_flatten_fu_307_p2 <= "1" when (indvar_flatten_phi_fu_258_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_325_p2 <= "1" when (j_phi_fu_280_p4 = ap_const_lv3_4) else "0";
    grp_fu_1114_p0 <= (ap_const_lv1_1 & ap_pipeline_reg_pp0_iter3_i2_mid2_v_reg_1296);

    grp_fu_288_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, reg_301, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, tmp_s_reg_1457, ap_enable_reg_pp0_iter1, tmp_4_reg_1482, tmp_12_1_reg_1487, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_288_p0 <= reg_301;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_288_p0 <= tmp_12_1_reg_1487;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_288_p0 <= tmp_4_reg_1482;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_288_p0 <= tmp_s_reg_1457;
        else 
            grp_fu_288_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_288_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_11_1_reg_1467, ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1472, ap_pipeline_reg_pp0_iter2_tmp_11_3_reg_1477, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_288_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_3_reg_1477;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_288_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1472;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_288_p1 <= tmp_11_1_reg_1467;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_288_p1 <= ap_const_lv32_0;
        else 
            grp_fu_288_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_293_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage0, a_row_load_fu_574_p3, a_row_load_1_fu_784_p3, a_row_load_3_reg_1447, a_row_load_2_fu_965_p3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_293_p0 <= a_row_load_3_reg_1447;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_293_p0 <= a_row_load_2_fu_965_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_293_p0 <= a_row_load_1_fu_784_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_293_p0 <= a_row_load_fu_574_p3;
        else 
            grp_fu_293_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_293_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage0, tmp_3_reg_1392, tmp_6_reg_1417, tmp_7_reg_1437, ap_enable_reg_pp0_iter1, tmp_9_reg_1462)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_293_p1 <= tmp_9_reg_1462;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_293_p1 <= tmp_7_reg_1437;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_293_p1 <= tmp_6_reg_1417;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_293_p1 <= tmp_3_reg_1392;
        else 
            grp_fu_293_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i2_mid2_v_fu_351_p3 <= 
        i_1_fu_319_p2 when (exitcond_fu_325_p2(0) = '1') else 
        i_phi_fu_269_p4;
    i_1_fu_319_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_269_p4));

    i_phi_fu_269_p4_assign_proc : process(i_reg_265, exitcond_flatten_reg_1262, ap_CS_fsm_pp0_stage0, i2_mid2_v_reg_1296, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_269_p4 <= i2_mid2_v_reg_1296;
        else 
            i_phi_fu_269_p4 <= i_reg_265;
        end if; 
    end process;

    indvar_flatten_next_fu_313_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_258_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_258_p4_assign_proc : process(indvar_flatten_reg_254, exitcond_flatten_reg_1262, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1266, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_258_p4 <= indvar_flatten_next_reg_1266;
        else 
            indvar_flatten_phi_fu_258_p4 <= indvar_flatten_reg_254;
        end if; 
    end process;

    j_1_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_1314));
    j_mid2_fu_372_p3 <= 
        ap_const_lv3_0 when (exitcond_reg_1271(0) = '1') else 
        j_reg_276;

    j_phi_fu_280_p4_assign_proc : process(j_reg_276, exitcond_flatten_reg_1262, ap_CS_fsm_pp0_stage0, j_1_reg_1442, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1262 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_280_p4 <= j_1_reg_1442;
        else 
            j_phi_fu_280_p4 <= j_reg_276;
        end if; 
    end process;

    sel_tmp2_fu_436_p2 <= "1" when (tmp_reg_1329 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_449_p2 <= "1" when (tmp_reg_1329 = ap_const_lv2_0) else "0";
    sel_tmp_fu_423_p2 <= "1" when (tmp_reg_1329 = ap_const_lv2_2) else "0";
    tmp1_fu_337_p2 <= "1" when (i_phi_fu_269_p4 = ap_const_lv3_0) else "0";
    tmp_10_fu_367_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_359_p3),64));
    tmp_11_fu_404_p2 <= (tmp_1_reg_1302 or ap_const_lv5_1);
    tmp_12_fu_409_p3 <= (ap_const_lv59_0 & tmp_11_fu_404_p2);
    tmp_13_fu_613_p2 <= (tmp_1_reg_1302 or ap_const_lv5_2);
    tmp_14_fu_618_p3 <= (ap_const_lv59_0 & tmp_13_fu_613_p2);
    tmp_15_fu_770_p2 <= (tmp_1_reg_1302 or ap_const_lv5_3);
    tmp_16_fu_775_p3 <= (ap_const_lv59_0 & tmp_15_fu_770_p2);
    tmp_17_fu_1120_p3 <= (grp_fu_1114_p2 & ap_const_lv2_0);
    tmp_18_fu_379_p3 <= (ap_const_lv61_2 & j_mid2_fu_372_p3);
    tmp_19_fu_585_p2 <= std_logic_vector(signed(ap_const_lv5_14) + signed(tmp_8_cast_fu_582_p1));
    tmp_1_fu_359_p3 <= (i2_mid2_v_fu_351_p3 & ap_const_lv2_0);
    tmp_20_cast_fu_591_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_585_p2),64));
    tmp_20_fu_795_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_8_cast5_fu_792_p1));
    tmp_21_cast_fu_801_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_795_p2),64));
    tmp_21_fu_1131_p2 <= std_logic_vector(unsigned(tmp_17_fu_1120_p3) + unsigned(tmp_8_cast6_fu_1128_p1));
    tmp_22_cast_fu_1137_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_1131_p2),64));
    tmp_3_fu_538_p1 <= 
        b_copy_0_3_15_fu_502_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_11_fu_110;
    tmp_3_fu_538_p2 <= 
        b_copy_0_3_14_fu_494_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_8_fu_114;
    tmp_3_fu_538_p3 <= 
        b_copy_0_3_7_fu_478_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_12_fu_118;
    tmp_3_fu_538_p4 <= 
        b_copy_0_3_2_fu_454_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_0_3_1_fu_122;
    tmp_5_fu_418_p2 <= "1" when (j_mid2_reg_1314 = ap_const_lv3_0) else "0";
    tmp_6_fu_722_p1 <= 
        b_copy_1_3_15_fu_687_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_11_fu_126;
    tmp_6_fu_722_p2 <= 
        b_copy_1_3_14_fu_680_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_8_fu_130;
    tmp_6_fu_722_p3 <= 
        b_copy_1_3_7_fu_666_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_12_fu_134;
    tmp_6_fu_722_p4 <= 
        b_copy_1_3_2_fu_645_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_1_3_1_fu_138;
    tmp_7_fu_897_p1 <= 
        b_copy_2_3_15_fu_862_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_11_fu_142;
    tmp_7_fu_897_p2 <= 
        b_copy_2_3_14_fu_855_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_8_fu_146;
    tmp_7_fu_897_p3 <= 
        b_copy_2_3_7_fu_841_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_12_fu_150;
    tmp_7_fu_897_p4 <= 
        b_copy_2_3_2_fu_820_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_2_3_1_fu_154;
    tmp_8_cast5_fu_792_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1314),4));
    tmp_8_cast6_fu_1128_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_j_mid2_reg_1314),6));
    tmp_8_cast_fu_582_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1314),5));
    tmp_8_fu_627_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1314),64));
    tmp_9_fu_1064_p1 <= 
        b_copy_3_3_15_fu_1029_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_11_fu_158;
    tmp_9_fu_1064_p2 <= 
        b_copy_3_3_14_fu_1022_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_8_fu_162;
    tmp_9_fu_1064_p3 <= 
        b_copy_3_3_7_fu_1008_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_12_fu_166;
    tmp_9_fu_1064_p4 <= 
        b_copy_3_3_2_fu_987_p3 when (tmp_mid2_reg_1276(0) = '1') else 
        b_copy_3_3_1_fu_170;
    tmp_fu_388_p1 <= j_mid2_fu_372_p3(2 - 1 downto 0);
    tmp_mid1_fu_331_p2 <= "1" when (i_1_fu_319_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_343_p3 <= 
        tmp_mid1_fu_331_p2 when (exitcond_fu_325_p2(0) = '1') else 
        tmp1_fu_337_p2;
end behav;
