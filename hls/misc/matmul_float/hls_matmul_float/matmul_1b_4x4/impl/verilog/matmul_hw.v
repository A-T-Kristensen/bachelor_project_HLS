// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.526000,HLS_SYN_LAT=281,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1405,HLS_SYN_LUT=2570}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A
);

parameter    ap_ST_fsm_state1 = 19'b1;
parameter    ap_ST_fsm_pp0_stage0 = 19'b10;
parameter    ap_ST_fsm_pp0_stage1 = 19'b100;
parameter    ap_ST_fsm_pp0_stage2 = 19'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 19'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 19'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 19'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 19'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 19'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 19'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 19'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 19'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 19'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 19'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 19'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 19'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 19'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage16 = 19'b100000000000000000;
parameter    ap_ST_fsm_state27 = 19'b1000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv61_2 = 61'b10;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv61_3 = 61'b11;
parameter    ap_const_lv6_1C = 6'b11100;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv32_12 = 32'b10010;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_246;
reg   [2:0] i_reg_257;
reg   [2:0] j_reg_268;
reg   [31:0] reg_292;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1254;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage10;
reg   [0:0] tmp_5_reg_1332;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] reg_296;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] reg_302;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage16;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254;
wire   [0:0] exitcond_flatten_fu_307_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [4:0] indvar_flatten_next_fu_313_p2;
reg   [4:0] indvar_flatten_next_reg_1258;
wire   [0:0] exitcond_fu_325_p2;
reg   [0:0] exitcond_reg_1263;
wire   [0:0] tmp_mid2_fu_343_p3;
reg   [0:0] tmp_mid2_reg_1268;
wire   [2:0] tmp_2_mid2_v_v_v_fu_351_p3;
reg   [2:0] tmp_2_mid2_v_v_v_reg_1288;
reg   [2:0] ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1288;
wire   [4:0] tmp_3_fu_359_p3;
reg   [4:0] tmp_3_reg_1294;
wire   [2:0] j_mid2_fu_372_p3;
reg   [2:0] j_mid2_reg_1306;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1306;
wire   [1:0] tmp_fu_388_p1;
reg   [1:0] tmp_reg_1321;
wire   [0:0] tmp_5_fu_404_p2;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] sel_tmp_fu_423_p2;
reg   [0:0] sel_tmp_reg_1345;
wire   [0:0] sel_tmp2_fu_436_p2;
reg   [0:0] sel_tmp2_reg_1355;
wire   [0:0] sel_tmp4_fu_449_p2;
reg   [0:0] sel_tmp4_reg_1368;
wire   [31:0] tmp_6_fu_538_p6;
reg   [31:0] tmp_6_reg_1384;
wire   [31:0] a_row_load_fu_574_p3;
wire   [0:0] ap_CS_fsm_pp0_stage4;
reg   [31:0] b_copy_2_3_19_reg_1404;
wire   [31:0] tmp_9_fu_914_p6;
reg   [31:0] tmp_9_reg_1412;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [31:0] tmp_10_fu_927_p6;
reg   [31:0] tmp_10_reg_1417;
wire   [31:0] tmp_11_fu_940_p6;
reg   [31:0] tmp_11_reg_1422;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [31:0] a_row_load_1_fu_1044_p3;
wire   [31:0] a_row_load_3_fu_1077_p3;
reg   [31:0] a_row_load_3_reg_1447;
wire   [31:0] a_row_load_2_fu_1084_p3;
reg   [31:0] tmp_11_2_reg_1457;
wire   [0:0] ap_CS_fsm_pp0_stage14;
reg   [31:0] tmp_11_3_reg_1462;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [2:0] j_1_fu_1102_p2;
reg   [2:0] j_1_reg_1467;
reg   [4:0] indvar_flatten_phi_fu_250_p4;
reg   [2:0] i_phi_fu_261_p4;
reg   [2:0] j_phi_fu_272_p4;
wire   [63:0] tmp_2_fu_367_p1;
wire   [63:0] tmp_17_fu_379_p3;
wire   [63:0] tmp_20_cast_fu_418_p1;
wire   [63:0] tmp_19_fu_582_p3;
wire   [63:0] tmp_22_cast_fu_604_p1;
wire   [63:0] tmp_12_fu_1018_p3;
wire   [63:0] tmp_14_fu_1035_p3;
wire   [63:0] tmp_16_fu_1062_p3;
wire   [63:0] tmp_23_cast_fu_1129_p1;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg   [31:0] a_row_load_s_fu_90;
reg   [31:0] a_row_load_9_fu_94;
reg   [31:0] a_row_load_8_fu_98;
reg   [31:0] a_row_load_7_fu_102;
reg   [31:0] b_copy_0_3_11_fu_106;
wire   [31:0] b_copy_0_3_18_fu_531_p3;
reg   [31:0] b_copy_0_3_8_fu_110;
wire   [31:0] b_copy_0_3_17_fu_524_p3;
reg   [31:0] b_copy_0_3_12_fu_114;
wire   [31:0] b_copy_0_3_16_fu_517_p3;
reg   [31:0] b_copy_0_3_1_fu_118;
wire   [31:0] b_copy_0_3_3_fu_510_p3;
reg   [31:0] b_copy_1_3_11_fu_122;
wire   [31:0] b_copy_1_3_18_fu_907_p3;
reg   [31:0] b_copy_1_3_8_fu_126;
wire   [31:0] b_copy_1_3_17_fu_900_p3;
reg   [31:0] b_copy_1_3_12_fu_130;
wire   [31:0] b_copy_1_3_16_fu_893_p3;
reg   [31:0] b_copy_1_3_1_fu_134;
wire   [31:0] b_copy_1_3_3_fu_886_p3;
reg   [31:0] b_copy_2_3_11_fu_138;
wire   [31:0] b_copy_2_3_18_fu_879_p3;
reg   [31:0] b_copy_2_3_8_fu_142;
wire   [31:0] b_copy_2_3_17_fu_872_p3;
reg   [31:0] b_copy_2_3_12_fu_146;
wire   [31:0] b_copy_2_3_16_fu_865_p3;
reg   [31:0] b_copy_2_3_1_fu_150;
wire   [31:0] b_copy_2_3_3_fu_858_p3;
reg   [31:0] b_copy_3_3_11_fu_154;
wire   [31:0] b_copy_3_3_18_fu_851_p3;
reg   [31:0] b_copy_3_3_8_fu_158;
wire   [31:0] b_copy_3_3_17_fu_844_p3;
reg   [31:0] b_copy_3_3_12_fu_162;
wire   [31:0] b_copy_3_3_16_fu_837_p3;
reg   [31:0] b_copy_3_3_1_fu_166;
wire   [31:0] b_copy_3_3_3_fu_830_p3;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] grp_fu_280_p0;
reg   [31:0] grp_fu_280_p1;
reg   [31:0] grp_fu_287_p0;
reg   [31:0] grp_fu_287_p1;
wire   [2:0] i_1_fu_319_p2;
wire   [0:0] tmp_mid1_fu_331_p2;
wire   [0:0] tmp1_fu_337_p2;
wire   [4:0] tmp_8_cast_fu_409_p1;
wire   [4:0] tmp_18_fu_412_p2;
wire   [31:0] b_copy_0_3_fu_428_p3;
wire   [31:0] b_copy_0_3_4_fu_441_p3;
wire   [31:0] b_copy_0_3_5_fu_462_p3;
wire   [31:0] b_copy_0_3_6_fu_470_p3;
wire   [31:0] b_copy_0_3_9_fu_486_p3;
wire   [31:0] b_copy_0_3_2_fu_454_p3;
wire   [31:0] b_copy_0_3_7_fu_478_p3;
wire   [31:0] b_copy_0_3_14_fu_494_p3;
wire   [31:0] b_copy_0_3_15_fu_502_p3;
wire   [31:0] tmp_6_fu_538_p1;
wire   [31:0] tmp_6_fu_538_p2;
wire   [31:0] tmp_6_fu_538_p3;
wire   [31:0] tmp_6_fu_538_p4;
wire   [5:0] tmp_8_cast5_fu_595_p1;
wire   [5:0] tmp_20_fu_598_p2;
wire   [31:0] b_copy_1_3_fu_645_p3;
wire   [31:0] b_copy_1_3_4_fu_652_p3;
wire   [31:0] b_copy_1_3_5_fu_666_p3;
wire   [31:0] b_copy_1_3_6_fu_673_p3;
wire   [31:0] b_copy_1_3_9_fu_687_p3;
wire   [31:0] b_copy_2_3_fu_708_p3;
wire   [31:0] b_copy_2_3_4_fu_714_p3;
wire   [31:0] b_copy_2_3_5_fu_728_p3;
wire   [31:0] b_copy_2_3_6_fu_734_p3;
wire   [31:0] b_copy_2_3_9_fu_748_p3;
wire   [31:0] b_copy_3_3_fu_767_p3;
wire   [31:0] b_copy_3_3_4_fu_774_p3;
wire   [31:0] b_copy_3_3_5_fu_788_p3;
wire   [31:0] b_copy_3_3_6_fu_795_p3;
wire   [31:0] b_copy_3_3_9_fu_809_p3;
wire   [31:0] b_copy_3_3_2_fu_781_p3;
wire   [31:0] b_copy_3_3_7_fu_802_p3;
wire   [31:0] b_copy_3_3_14_fu_816_p3;
wire   [31:0] b_copy_3_3_15_fu_823_p3;
wire   [31:0] b_copy_2_3_2_fu_721_p3;
wire   [31:0] b_copy_2_3_7_fu_741_p3;
wire   [31:0] b_copy_2_3_14_fu_754_p3;
wire   [31:0] b_copy_2_3_15_fu_761_p3;
wire   [31:0] b_copy_1_3_2_fu_659_p3;
wire   [31:0] b_copy_1_3_7_fu_680_p3;
wire   [31:0] b_copy_1_3_14_fu_694_p3;
wire   [31:0] b_copy_1_3_15_fu_701_p3;
wire   [31:0] tmp_9_fu_914_p1;
wire   [31:0] tmp_9_fu_914_p2;
wire   [31:0] tmp_9_fu_914_p3;
wire   [31:0] tmp_9_fu_914_p4;
wire   [31:0] tmp_10_fu_927_p1;
wire   [31:0] tmp_10_fu_927_p2;
wire   [31:0] tmp_10_fu_927_p3;
wire   [31:0] tmp_10_fu_927_p4;
wire   [31:0] tmp_11_fu_940_p1;
wire   [31:0] tmp_11_fu_940_p2;
wire   [31:0] tmp_11_fu_940_p3;
wire   [31:0] tmp_11_fu_940_p4;
wire   [4:0] tmp_8_fu_1013_p2;
wire   [4:0] tmp_13_fu_1030_p2;
wire   [4:0] tmp_15_fu_1057_p2;
wire   [5:0] tmp_1_fu_1107_p4;
wire   [6:0] tmp_2_cast_fu_1116_p1;
wire   [6:0] tmp_8_cast6_fu_1120_p1;
wire   [6:0] tmp_21_fu_1123_p2;
wire   [0:0] ap_CS_fsm_state27;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_280_p0),
    .din1(grp_fu_280_p1),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

matmul_hw_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_287_p0),
    .din1(grp_fu_287_p1),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U3(
    .din1(tmp_6_fu_538_p1),
    .din2(tmp_6_fu_538_p2),
    .din3(tmp_6_fu_538_p3),
    .din4(tmp_6_fu_538_p4),
    .din5(tmp_reg_1321),
    .dout(tmp_6_fu_538_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U4(
    .din1(tmp_9_fu_914_p1),
    .din2(tmp_9_fu_914_p2),
    .din3(tmp_9_fu_914_p3),
    .din4(tmp_9_fu_914_p4),
    .din5(tmp_reg_1321),
    .dout(tmp_9_fu_914_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U5(
    .din1(tmp_10_fu_927_p1),
    .din2(tmp_10_fu_927_p2),
    .din3(tmp_10_fu_927_p3),
    .din4(tmp_10_fu_927_p4),
    .din5(tmp_reg_1321),
    .dout(tmp_10_fu_927_p6)
);

matmul_hw_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_dEe_U6(
    .din1(tmp_11_fu_940_p1),
    .din2(tmp_11_fu_940_p2),
    .din3(tmp_11_fu_940_p3),
    .din4(tmp_11_fu_940_p4),
    .din5(tmp_reg_1321),
    .dout(tmp_11_fu_940_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_307_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & ~(exitcond_flatten_reg_1254 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_257 <= tmp_2_mid2_v_v_v_reg_1288;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_257 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_246 <= indvar_flatten_next_reg_1258;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_246 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_268 <= j_1_reg_1467;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_268 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_load_3_reg_1447 <= a_row_load_3_fu_1077_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_load_7_fu_102 <= a_row_load_3_fu_1077_p3;
        a_row_load_8_fu_98 <= a_row_load_2_fu_1084_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_row_load_9_fu_94 <= a_row_load_1_fu_1044_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_load_s_fu_90 <= a_row_load_fu_574_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 <= exitcond_flatten_reg_1254;
        ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1288 <= tmp_2_mid2_v_v_v_reg_1288;
        exitcond_flatten_reg_1254 <= exitcond_flatten_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1306 <= j_mid2_reg_1306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_copy_0_3_11_fu_106 <= b_copy_0_3_18_fu_531_p3;
        b_copy_0_3_12_fu_114 <= b_copy_0_3_16_fu_517_p3;
        b_copy_0_3_1_fu_118 <= b_copy_0_3_3_fu_510_p3;
        b_copy_0_3_8_fu_110 <= b_copy_0_3_17_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_1_3_11_fu_122 <= b_copy_1_3_18_fu_907_p3;
        b_copy_1_3_12_fu_130 <= b_copy_1_3_16_fu_893_p3;
        b_copy_1_3_1_fu_134 <= b_copy_1_3_3_fu_886_p3;
        b_copy_1_3_8_fu_126 <= b_copy_1_3_17_fu_900_p3;
        b_copy_2_3_11_fu_138 <= b_copy_2_3_18_fu_879_p3;
        b_copy_2_3_12_fu_146 <= b_copy_2_3_16_fu_865_p3;
        b_copy_2_3_1_fu_150 <= b_copy_2_3_3_fu_858_p3;
        b_copy_2_3_8_fu_142 <= b_copy_2_3_17_fu_872_p3;
        b_copy_3_3_11_fu_154 <= b_copy_3_3_18_fu_851_p3;
        b_copy_3_3_12_fu_162 <= b_copy_3_3_16_fu_837_p3;
        b_copy_3_3_1_fu_166 <= b_copy_3_3_3_fu_830_p3;
        b_copy_3_3_8_fu_158 <= b_copy_3_3_17_fu_844_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_copy_2_3_19_reg_1404 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_307_p2))) begin
        exitcond_reg_1263 <= exitcond_fu_325_p2;
        tmp_3_reg_1294[4 : 2] <= tmp_3_fu_359_p3[4 : 2];
        tmp_mid2_reg_1268 <= tmp_mid2_fu_343_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1258 <= indvar_flatten_next_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        j_1_reg_1467 <= j_1_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1254 == 1'b0))) begin
        j_mid2_reg_1306 <= j_mid2_fu_372_p3;
        tmp_reg_1321 <= tmp_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~(1'b0 == tmp_5_reg_1332)))) begin
        reg_292 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_296 <= grp_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254)))) begin
        reg_302 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sel_tmp2_reg_1355 <= sel_tmp2_fu_436_p2;
        sel_tmp4_reg_1368 <= sel_tmp4_fu_449_p2;
        sel_tmp_reg_1345 <= sel_tmp_fu_423_p2;
        tmp_5_reg_1332 <= tmp_5_fu_404_p2;
        tmp_6_reg_1384 <= tmp_6_fu_538_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_10_reg_1417 <= tmp_10_fu_927_p6;
        tmp_11_reg_1422 <= tmp_11_fu_940_p6;
        tmp_9_reg_1412 <= tmp_9_fu_914_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_11_2_reg_1457 <= grp_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_11_3_reg_1462 <= grp_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_307_p2))) begin
        tmp_2_mid2_v_v_v_reg_1288 <= tmp_2_mid2_v_v_v_fu_351_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_Addr_A_orig = tmp_23_cast_fu_1129_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_Addr_A_orig = tmp_16_fu_1062_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_Addr_A_orig = tmp_14_fu_1035_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        a_Addr_A_orig = tmp_12_fu_1018_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_Addr_A_orig = tmp_22_cast_fu_604_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_Addr_A_orig = tmp_19_fu_582_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_Addr_A_orig = tmp_20_cast_fu_418_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_Addr_A_orig = tmp_17_fu_379_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_Addr_A_orig = tmp_2_fu_367_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_280_p0 = grp_fu_280_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_280_p0 = reg_302;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_280_p0 = reg_296;
    end else begin
        grp_fu_280_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_280_p1 = tmp_11_3_reg_1462;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_280_p1 = tmp_11_2_reg_1457;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_280_p1 = grp_fu_287_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_280_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_280_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_287_p0 = a_row_load_3_reg_1447;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_287_p0 = a_row_load_2_fu_1084_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_287_p0 = a_row_load_1_fu_1044_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_287_p0 = a_row_load_fu_574_p3;
        end else begin
            grp_fu_287_p0 = 'bx;
        end
    end else begin
        grp_fu_287_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_287_p1 = tmp_11_reg_1422;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_287_p1 = tmp_10_reg_1417;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_287_p1 = tmp_9_reg_1412;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_287_p1 = tmp_6_reg_1384;
        end else begin
            grp_fu_287_p1 = 'bx;
        end
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_261_p4 = tmp_2_mid2_v_v_v_reg_1288;
    end else begin
        i_phi_fu_261_p4 = i_reg_257;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_250_p4 = indvar_flatten_next_reg_1258;
    end else begin
        indvar_flatten_phi_fu_250_p4 = indvar_flatten_reg_246;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_272_p4 = j_1_reg_1467;
    end else begin
        j_phi_fu_272_p4 = j_reg_268;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_307_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage16;
        end
        ap_ST_fsm_pp0_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = grp_fu_280_p2;

assign a_Rst_A = ap_rst;

assign a_row_load_1_fu_1044_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? a_Dout_A : a_row_load_9_fu_94);

assign a_row_load_2_fu_1084_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_292 : a_row_load_8_fu_98);

assign a_row_load_3_fu_1077_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? a_Dout_A : a_row_load_7_fu_102);

assign a_row_load_fu_574_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_292 : a_row_load_s_fu_90);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_12];

assign b_copy_0_3_14_fu_494_p3 = ((sel_tmp4_fu_449_p2[0:0] === 1'b1) ? b_copy_0_3_8_fu_110 : b_copy_0_3_9_fu_486_p3);

assign b_copy_0_3_15_fu_502_p3 = ((sel_tmp4_fu_449_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_11_fu_106);

assign b_copy_0_3_16_fu_517_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_7_fu_478_p3 : b_copy_0_3_12_fu_114);

assign b_copy_0_3_17_fu_524_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_14_fu_494_p3 : b_copy_0_3_8_fu_110);

assign b_copy_0_3_18_fu_531_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_15_fu_502_p3 : b_copy_0_3_11_fu_106);

assign b_copy_0_3_2_fu_454_p3 = ((sel_tmp4_fu_449_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : b_copy_0_3_4_fu_441_p3);

assign b_copy_0_3_3_fu_510_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_2_fu_454_p3 : b_copy_0_3_1_fu_118);

assign b_copy_0_3_4_fu_441_p3 = ((sel_tmp2_fu_436_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : b_copy_0_3_fu_428_p3);

assign b_copy_0_3_5_fu_462_p3 = ((sel_tmp_fu_423_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_12_fu_114);

assign b_copy_0_3_6_fu_470_p3 = ((sel_tmp2_fu_436_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_114 : b_copy_0_3_5_fu_462_p3);

assign b_copy_0_3_7_fu_478_p3 = ((sel_tmp4_fu_449_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_114 : b_copy_0_3_6_fu_470_p3);

assign b_copy_0_3_9_fu_486_p3 = ((sel_tmp2_fu_436_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_8_fu_110);

assign b_copy_0_3_fu_428_p3 = ((sel_tmp_fu_423_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : a_Dout_A);

assign b_copy_1_3_14_fu_694_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_8_fu_126 : b_copy_1_3_9_fu_687_p3);

assign b_copy_1_3_15_fu_701_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? reg_292 : b_copy_1_3_11_fu_122);

assign b_copy_1_3_16_fu_893_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_7_fu_680_p3 : b_copy_1_3_12_fu_130);

assign b_copy_1_3_17_fu_900_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_14_fu_694_p3 : b_copy_1_3_8_fu_126);

assign b_copy_1_3_18_fu_907_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_15_fu_701_p3 : b_copy_1_3_11_fu_122);

assign b_copy_1_3_2_fu_659_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : b_copy_1_3_4_fu_652_p3);

assign b_copy_1_3_3_fu_886_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_2_fu_659_p3 : b_copy_1_3_1_fu_134);

assign b_copy_1_3_4_fu_652_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : b_copy_1_3_fu_645_p3);

assign b_copy_1_3_5_fu_666_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? reg_292 : b_copy_1_3_12_fu_130);

assign b_copy_1_3_6_fu_673_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_1_3_12_fu_130 : b_copy_1_3_5_fu_666_p3);

assign b_copy_1_3_7_fu_680_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_12_fu_130 : b_copy_1_3_6_fu_673_p3);

assign b_copy_1_3_9_fu_687_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? reg_292 : b_copy_1_3_8_fu_126);

assign b_copy_1_3_fu_645_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : reg_292);

assign b_copy_2_3_14_fu_754_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_8_fu_142 : b_copy_2_3_9_fu_748_p3);

assign b_copy_2_3_15_fu_761_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_19_reg_1404 : b_copy_2_3_11_fu_138);

assign b_copy_2_3_16_fu_865_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_7_fu_741_p3 : b_copy_2_3_12_fu_146);

assign b_copy_2_3_17_fu_872_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_14_fu_754_p3 : b_copy_2_3_8_fu_142);

assign b_copy_2_3_18_fu_879_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_15_fu_761_p3 : b_copy_2_3_11_fu_138);

assign b_copy_2_3_2_fu_721_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_4_fu_714_p3);

assign b_copy_2_3_3_fu_858_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_2_fu_721_p3 : b_copy_2_3_1_fu_150);

assign b_copy_2_3_4_fu_714_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_fu_708_p3);

assign b_copy_2_3_5_fu_728_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_2_3_19_reg_1404 : b_copy_2_3_12_fu_146);

assign b_copy_2_3_6_fu_734_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_2_3_12_fu_146 : b_copy_2_3_5_fu_728_p3);

assign b_copy_2_3_7_fu_741_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_12_fu_146 : b_copy_2_3_6_fu_734_p3);

assign b_copy_2_3_9_fu_748_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_2_3_19_reg_1404 : b_copy_2_3_8_fu_142);

assign b_copy_2_3_fu_708_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_19_reg_1404);

assign b_copy_3_3_14_fu_816_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_8_fu_158 : b_copy_3_3_9_fu_809_p3);

assign b_copy_3_3_15_fu_823_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_11_fu_154);

assign b_copy_3_3_16_fu_837_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_7_fu_802_p3 : b_copy_3_3_12_fu_162);

assign b_copy_3_3_17_fu_844_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_14_fu_816_p3 : b_copy_3_3_8_fu_158);

assign b_copy_3_3_18_fu_851_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_15_fu_823_p3 : b_copy_3_3_11_fu_154);

assign b_copy_3_3_2_fu_781_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : b_copy_3_3_4_fu_774_p3);

assign b_copy_3_3_3_fu_830_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_2_fu_781_p3 : b_copy_3_3_1_fu_166);

assign b_copy_3_3_4_fu_774_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : b_copy_3_3_fu_767_p3);

assign b_copy_3_3_5_fu_788_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_12_fu_162);

assign b_copy_3_3_6_fu_795_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_3_3_12_fu_162 : b_copy_3_3_5_fu_788_p3);

assign b_copy_3_3_7_fu_802_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_12_fu_162 : b_copy_3_3_6_fu_795_p3);

assign b_copy_3_3_9_fu_809_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_8_fu_158);

assign b_copy_3_3_fu_767_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : a_Dout_A);

assign exitcond_flatten_fu_307_p2 = ((indvar_flatten_phi_fu_250_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_325_p2 = ((j_phi_fu_272_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i_1_fu_319_p2 = (ap_const_lv3_1 + i_phi_fu_261_p4);

assign indvar_flatten_next_fu_313_p2 = (indvar_flatten_phi_fu_250_p4 + ap_const_lv5_1);

assign j_1_fu_1102_p2 = (ap_const_lv3_1 + j_mid2_reg_1306);

assign j_mid2_fu_372_p3 = ((exitcond_reg_1263[0:0] === 1'b1) ? ap_const_lv3_0 : j_reg_268);

assign sel_tmp2_fu_436_p2 = ((tmp_reg_1321 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_449_p2 = ((tmp_reg_1321 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_423_p2 = ((tmp_reg_1321 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_337_p2 = ((i_phi_fu_261_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_10_fu_927_p1 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_15_fu_761_p3 : b_copy_2_3_11_fu_138);

assign tmp_10_fu_927_p2 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_14_fu_754_p3 : b_copy_2_3_8_fu_142);

assign tmp_10_fu_927_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_7_fu_741_p3 : b_copy_2_3_12_fu_146);

assign tmp_10_fu_927_p4 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_2_3_2_fu_721_p3 : b_copy_2_3_1_fu_150);

assign tmp_11_fu_940_p1 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_15_fu_823_p3 : b_copy_3_3_11_fu_154);

assign tmp_11_fu_940_p2 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_14_fu_816_p3 : b_copy_3_3_8_fu_158);

assign tmp_11_fu_940_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_7_fu_802_p3 : b_copy_3_3_12_fu_162);

assign tmp_11_fu_940_p4 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_3_3_2_fu_781_p3 : b_copy_3_3_1_fu_166);

assign tmp_12_fu_1018_p3 = {{ap_const_lv59_0}, {tmp_8_fu_1013_p2}};

assign tmp_13_fu_1030_p2 = (tmp_3_reg_1294 | ap_const_lv5_2);

assign tmp_14_fu_1035_p3 = {{ap_const_lv59_0}, {tmp_13_fu_1030_p2}};

assign tmp_15_fu_1057_p2 = (tmp_3_reg_1294 | ap_const_lv5_3);

assign tmp_16_fu_1062_p3 = {{ap_const_lv59_0}, {tmp_15_fu_1057_p2}};

assign tmp_17_fu_379_p3 = {{ap_const_lv61_2}, {j_mid2_fu_372_p3}};

assign tmp_18_fu_412_p2 = ($signed(ap_const_lv5_14) + $signed(tmp_8_cast_fu_409_p1));

assign tmp_19_fu_582_p3 = {{ap_const_lv61_3}, {j_mid2_reg_1306}};

assign tmp_1_fu_1107_p4 = {{{{1'b1}, {ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1288}}}, {ap_const_lv2_0}};

assign tmp_20_cast_fu_418_p1 = tmp_18_fu_412_p2;

assign tmp_20_fu_598_p2 = (ap_const_lv6_1C + tmp_8_cast5_fu_595_p1);

assign tmp_21_fu_1123_p2 = (tmp_2_cast_fu_1116_p1 + tmp_8_cast6_fu_1120_p1);

assign tmp_22_cast_fu_604_p1 = tmp_20_fu_598_p2;

assign tmp_23_cast_fu_1129_p1 = tmp_21_fu_1123_p2;

assign tmp_2_cast_fu_1116_p1 = tmp_1_fu_1107_p4;

assign tmp_2_fu_367_p1 = tmp_3_fu_359_p3;

assign tmp_2_mid2_v_v_v_fu_351_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? i_1_fu_319_p2 : i_phi_fu_261_p4);

assign tmp_3_fu_359_p3 = {{tmp_2_mid2_v_v_v_fu_351_p3}, {ap_const_lv2_0}};

assign tmp_5_fu_404_p2 = ((j_mid2_reg_1306 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_538_p1 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_15_fu_502_p3 : b_copy_0_3_11_fu_106);

assign tmp_6_fu_538_p2 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_14_fu_494_p3 : b_copy_0_3_8_fu_110);

assign tmp_6_fu_538_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_7_fu_478_p3 : b_copy_0_3_12_fu_114);

assign tmp_6_fu_538_p4 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_0_3_2_fu_454_p3 : b_copy_0_3_1_fu_118);

assign tmp_8_cast5_fu_595_p1 = j_mid2_reg_1306;

assign tmp_8_cast6_fu_1120_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_1306;

assign tmp_8_cast_fu_409_p1 = j_mid2_reg_1306;

assign tmp_8_fu_1013_p2 = (tmp_3_reg_1294 | ap_const_lv5_1);

assign tmp_9_fu_914_p1 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_15_fu_701_p3 : b_copy_1_3_11_fu_122);

assign tmp_9_fu_914_p2 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_14_fu_694_p3 : b_copy_1_3_8_fu_126);

assign tmp_9_fu_914_p3 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_7_fu_680_p3 : b_copy_1_3_12_fu_130);

assign tmp_9_fu_914_p4 = ((tmp_mid2_reg_1268[0:0] === 1'b1) ? b_copy_1_3_2_fu_659_p3 : b_copy_1_3_1_fu_134);

assign tmp_fu_388_p1 = j_mid2_fu_372_p3[1:0];

assign tmp_mid1_fu_331_p2 = ((i_1_fu_319_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_343_p3 = ((exitcond_fu_325_p2[0:0] === 1'b1) ? tmp_mid1_fu_331_p2 : tmp1_fu_337_p2);

always @ (posedge ap_clk) begin
    tmp_3_reg_1294[1:0] <= 2'b00;
end

endmodule //matmul_hw
