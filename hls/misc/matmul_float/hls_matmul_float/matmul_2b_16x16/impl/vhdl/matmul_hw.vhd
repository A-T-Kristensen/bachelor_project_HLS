-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.205600,HLS_SYN_LAT=6209,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=2930,HLS_SYN_LUT=2403}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv59_8 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv9_110 : STD_LOGIC_VECTOR (8 downto 0) := "100010000";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv59_9 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv9_130 : STD_LOGIC_VECTOR (8 downto 0) := "100110000";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv59_A : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_150 : STD_LOGIC_VECTOR (8 downto 0) := "101010000";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv59_B : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_170 : STD_LOGIC_VECTOR (8 downto 0) := "101110000";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_842 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_853 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_864 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal tmp_5_reg_1866 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal grp_fu_880_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_903 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal exitcond_flatten_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal indvar_flatten_next_fu_936_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_1773 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_fu_954_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_1778 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_mid2_v_fu_982_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_mid2_v_reg_1800 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_1807 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1004_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_reg_1837 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal tmp_5_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_cast_fu_1035_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast_reg_1886 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_1057_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_1903 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_fu_1078_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast6_fu_1091_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_cast6_reg_1937 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_copy_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal a_row_load_1_fu_1138_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_1196_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_2027 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_fu_1248_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_2057 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_4_fu_1288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_5_fu_1326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_4_reg_2112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal a_row_load_6_fu_1379_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_5_reg_2147 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_1423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_1453_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_6_reg_2187 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_1483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_10_fu_1513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_7_reg_2232 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_11_fu_1543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_8_reg_2257 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2257 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_12_fu_1573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_9_reg_2282 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2282 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_13_fu_1603_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_s_reg_2307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_s_reg_2307 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_1616_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_2327 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_row_load_15_fu_1635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_15_reg_2332 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_14_fu_1642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1663_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_reg_2342 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_54_reg_2342 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_54_reg_2342 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_10_reg_2347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2347 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_15_load_reg_2357 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_11_reg_2362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2362 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_12_reg_2367 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2367 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_13_reg_2372 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2372 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2372 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_14_reg_2377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2377 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_ce0 : STD_LOGIC;
    signal b_copy_0_we0 : STD_LOGIC;
    signal b_copy_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_1_ce0 : STD_LOGIC;
    signal b_copy_1_we0 : STD_LOGIC;
    signal b_copy_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_2_ce0 : STD_LOGIC;
    signal b_copy_2_we0 : STD_LOGIC;
    signal b_copy_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_3_ce0 : STD_LOGIC;
    signal b_copy_3_we0 : STD_LOGIC;
    signal b_copy_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_4_ce0 : STD_LOGIC;
    signal b_copy_4_we0 : STD_LOGIC;
    signal b_copy_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_5_ce0 : STD_LOGIC;
    signal b_copy_5_we0 : STD_LOGIC;
    signal b_copy_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_6_ce0 : STD_LOGIC;
    signal b_copy_6_we0 : STD_LOGIC;
    signal b_copy_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_7_ce0 : STD_LOGIC;
    signal b_copy_7_we0 : STD_LOGIC;
    signal b_copy_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_8_ce0 : STD_LOGIC;
    signal b_copy_8_we0 : STD_LOGIC;
    signal b_copy_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_9_ce0 : STD_LOGIC;
    signal b_copy_9_we0 : STD_LOGIC;
    signal b_copy_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_10_ce0 : STD_LOGIC;
    signal b_copy_10_we0 : STD_LOGIC;
    signal b_copy_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_11_ce0 : STD_LOGIC;
    signal b_copy_11_we0 : STD_LOGIC;
    signal b_copy_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_12_ce0 : STD_LOGIC;
    signal b_copy_12_we0 : STD_LOGIC;
    signal b_copy_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_13_ce0 : STD_LOGIC;
    signal b_copy_13_we0 : STD_LOGIC;
    signal b_copy_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_14_ce0 : STD_LOGIC;
    signal b_copy_14_we0 : STD_LOGIC;
    signal b_copy_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_15_ce0 : STD_LOGIC;
    signal b_copy_15_we0 : STD_LOGIC;
    signal indvar_flatten_phi_fu_846_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_857_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_868_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_39_fu_995_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_cast_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_cast_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_1049_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1069_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_cast_fu_1100_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1105_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1113_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1129_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_cast_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_1171_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1187_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_cast_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1223_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1239_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_cast_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1279_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_1301_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1317_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_cast_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1397_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1414_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1444_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1474_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1504_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1534_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_1564_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1594_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_cast_fu_1669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_015_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_29_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_28_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_27_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_26_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_25_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_24_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_23_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_22_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_21_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_20_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_19_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_18_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_17_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_16_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_s_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_875_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_880_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_942_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_cast5_fu_1016_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_47_fu_1019_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_1038_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_1064_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_fu_1094_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_10_fu_1124_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_1151_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_42_fu_1161_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_1182_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast7_fu_1209_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_1212_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1234_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_fu_1261_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_1274_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_1339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_1352_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1373_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_1392_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_1409_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_fu_1439_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_1469_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_fu_1499_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_1529_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_fu_1559_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_fu_1589_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1373_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1627_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_cast_fu_1660_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);

    component matmul_hw_fadd_32dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_urem_6nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component matmul_hw_b_copy_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    b_copy_0_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_0_address0,
        ce0 => b_copy_0_ce0,
        we0 => b_copy_0_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_0_q0);

    b_copy_1_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_1_address0,
        ce0 => b_copy_1_ce0,
        we0 => b_copy_1_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_1_q0);

    b_copy_2_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_2_address0,
        ce0 => b_copy_2_ce0,
        we0 => b_copy_2_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_2_q0);

    b_copy_3_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_3_address0,
        ce0 => b_copy_3_ce0,
        we0 => b_copy_3_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_3_q0);

    b_copy_4_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_4_address0,
        ce0 => b_copy_4_ce0,
        we0 => b_copy_4_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_4_q0);

    b_copy_5_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_5_address0,
        ce0 => b_copy_5_ce0,
        we0 => b_copy_5_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_5_q0);

    b_copy_6_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_6_address0,
        ce0 => b_copy_6_ce0,
        we0 => b_copy_6_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_6_q0);

    b_copy_7_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_7_address0,
        ce0 => b_copy_7_ce0,
        we0 => b_copy_7_we0,
        d0 => a_0_Dout_A,
        q0 => b_copy_7_q0);

    b_copy_8_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_8_address0,
        ce0 => b_copy_8_ce0,
        we0 => b_copy_8_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_8_q0);

    b_copy_9_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_9_address0,
        ce0 => b_copy_9_ce0,
        we0 => b_copy_9_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_9_q0);

    b_copy_10_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_10_address0,
        ce0 => b_copy_10_ce0,
        we0 => b_copy_10_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_10_q0);

    b_copy_11_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_11_address0,
        ce0 => b_copy_11_ce0,
        we0 => b_copy_11_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_11_q0);

    b_copy_12_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_12_address0,
        ce0 => b_copy_12_ce0,
        we0 => b_copy_12_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_12_q0);

    b_copy_13_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_13_address0,
        ce0 => b_copy_13_ce0,
        we0 => b_copy_13_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_13_q0);

    b_copy_14_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_14_address0,
        ce0 => b_copy_14_ce0,
        we0 => b_copy_14_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_14_q0);

    b_copy_15_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_15_address0,
        ce0 => b_copy_15_ce0,
        we0 => b_copy_15_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_15_q0);

    matmul_hw_fadd_32dEe_U1 : component matmul_hw_fadd_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_875_p0,
        din1 => grp_fu_875_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_875_p2);

    matmul_hw_fmul_32eOg_U2 : component matmul_hw_fmul_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_880_p0,
        din1 => grp_fu_880_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_880_p2);

    matmul_hw_urem_6nfYi_U3 : component matmul_hw_urem_6nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1373_p0,
        din1 => ap_const_lv6_18,
        ce => ap_const_logic_1,
        dout => grp_fu_1373_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_930_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and not((exitcond_flatten_reg_1769 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_853_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_853 <= i2_mid2_v_reg_1800;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_853 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_842_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_842 <= indvar_flatten_next_reg_1773;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_842 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_864_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_864 <= j_1_reg_2327;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_864 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_load_015_fu_138 <= a_row_load_fu_1078_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_15_reg_2332 <= a_row_load_15_fu_1635_p3;
                tmp_54_reg_2342 <= tmp_54_fu_1663_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_16_fu_194 <= a_row_load_14_fu_1642_p3;
                a_row_load_s_fu_198 <= a_row_load_15_fu_1635_p3;
                b_copy_15_load_reg_2357 <= b_copy_15_q0;
                tmp_11_10_reg_2347 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then
                a_row_load_17_fu_190 <= a_row_load_13_fu_1603_p3;
                j_1_reg_2327 <= j_1_fu_1616_p2;
                tmp_11_s_reg_2307 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then
                a_row_load_18_fu_186 <= a_row_load_12_fu_1573_p3;
                tmp_11_9_reg_2282 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then
                a_row_load_19_fu_182 <= a_row_load_11_fu_1543_p3;
                tmp_11_8_reg_2257 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then
                a_row_load_20_fu_178 <= a_row_load_10_fu_1513_p3;
                tmp_11_7_reg_2232 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then
                a_row_load_21_fu_174 <= a_row_load_9_fu_1483_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then
                a_row_load_22_fu_170 <= a_row_load_8_fu_1453_p3;
                tmp_11_6_reg_2187 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then
                a_row_load_23_fu_166 <= a_row_load_7_fu_1423_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                a_row_load_24_fu_162 <= a_row_load_6_fu_1379_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                a_row_load_25_fu_158 <= a_row_load_5_fu_1326_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                a_row_load_26_fu_154 <= a_row_load_4_fu_1288_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                a_row_load_27_fu_150 <= a_row_load_3_fu_1248_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                a_row_load_28_fu_146 <= a_row_load_2_fu_1196_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_row_load_29_fu_142 <= a_row_load_1_fu_1138_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769 <= exitcond_flatten_reg_1769;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769;
                ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2347 <= tmp_11_10_reg_2347;
                ap_pipeline_reg_pp0_iter2_tmp_54_reg_2342 <= tmp_54_reg_2342;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769;
                ap_pipeline_reg_pp0_iter3_tmp_54_reg_2342 <= ap_pipeline_reg_pp0_iter2_tmp_54_reg_2342;
                exitcond_flatten_reg_1769 <= exitcond_flatten_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2257 <= tmp_11_8_reg_2257;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2282 <= tmp_11_9_reg_2282;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_s_reg_2307 <= tmp_11_s_reg_2307;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2362 <= tmp_11_11_reg_2362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2367 <= tmp_11_12_reg_2367;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2372 <= tmp_11_13_reg_2372;
                ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2372 <= ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2372;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2377 <= tmp_11_14_reg_2377;
                ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2377 <= ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2377;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2))) then
                i2_mid2_v_reg_1800 <= i2_mid2_v_fu_982_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1773 <= indvar_flatten_next_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2))) then
                j_mid2_reg_1778 <= j_mid2_fu_954_p3;
                tmp_mid2_reg_1796 <= tmp_mid2_fu_974_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_5_reg_1866))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1866)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)))) then
                reg_899 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then
                reg_903 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769)))) then
                reg_909 <= grp_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769)))) then
                reg_914 <= grp_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769)))) then
                reg_919 <= grp_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1769)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769)))) then
                reg_924 <= grp_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_11_11_reg_2362 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769))) then
                tmp_11_12_reg_2367 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_11_13_reg_2372 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1769))) then
                tmp_11_14_reg_2377 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                tmp_11_1_reg_2027 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_11_2_reg_2057 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                tmp_11_4_reg_2112 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16))) then
                tmp_11_5_reg_2147 <= grp_fu_880_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                    tmp_1_reg_1837(8 downto 4) <= tmp_1_fu_1004_p3(8 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1769 = ap_const_lv1_0))) then
                tmp_5_reg_1866 <= tmp_5_fu_1030_p2;
                    tmp_7_reg_1903(4 downto 0) <= tmp_7_fu_1057_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1796)))) then
                    tmp_8_cast6_reg_1937(4 downto 0) <= tmp_8_cast6_fu_1091_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1796)))) then
                    tmp_8_cast_reg_1886(4 downto 0) <= tmp_8_cast_fu_1035_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2) and not((ap_const_lv1_0 = tmp_mid2_fu_974_p3)))) then
                    tmp_8_reg_1807(4 downto 0) <= tmp_8_fu_990_p1(4 downto 0);
            end if;
        end if;
    end process;
    tmp_8_reg_1807(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_1_reg_1837(3 downto 0) <= "0000";
    tmp_8_cast_reg_1886(8 downto 5) <= "0000";
    tmp_7_reg_1903(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_8_cast6_reg_1937(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten_fu_930_p2, ap_CS_fsm_pp0_stage15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_930_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
            when ap_ST_fsm_pp0_stage17 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
            when ap_ST_fsm_pp0_stage18 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
            when ap_ST_fsm_pp0_stage19 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
            when ap_ST_fsm_pp0_stage20 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
            when ap_ST_fsm_pp0_stage21 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
            when ap_ST_fsm_pp0_stage22 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
            when ap_ST_fsm_pp0_stage23 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage15, tmp_39_fu_995_p3, tmp_4_fu_1011_p1, tmp_41_cast_fu_1044_p1, tmp_9_fu_1069_p3, tmp_41_fu_1105_p3, tmp_11_fu_1129_p3, tmp_43_cast_fu_1166_p1, tmp_13_fu_1187_p3, tmp_43_fu_1223_p3, tmp_15_fu_1239_p3, tmp_45_cast_fu_1266_p1, tmp_17_fu_1279_p3, tmp_45_fu_1301_p3, tmp_19_fu_1317_p3, tmp_47_cast_fu_1344_p1, tmp_21_fu_1357_p3, tmp_23_fu_1397_p3, tmp_25_fu_1414_p3, tmp_27_fu_1444_p3, tmp_29_fu_1474_p3, tmp_31_fu_1504_p3, tmp_33_fu_1534_p3, tmp_35_fu_1564_p3, tmp_37_fu_1594_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                a_0_Addr_A_orig <= tmp_37_fu_1594_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                a_0_Addr_A_orig <= tmp_35_fu_1564_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                a_0_Addr_A_orig <= tmp_33_fu_1534_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) then 
                a_0_Addr_A_orig <= tmp_31_fu_1504_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                a_0_Addr_A_orig <= tmp_29_fu_1474_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) then 
                a_0_Addr_A_orig <= tmp_27_fu_1444_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                a_0_Addr_A_orig <= tmp_25_fu_1414_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                a_0_Addr_A_orig <= tmp_23_fu_1397_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_0_Addr_A_orig <= tmp_21_fu_1357_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_0_Addr_A_orig <= tmp_47_cast_fu_1344_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_0_Addr_A_orig <= tmp_19_fu_1317_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_0_Addr_A_orig <= tmp_45_fu_1301_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_0_Addr_A_orig <= tmp_17_fu_1279_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_0_Addr_A_orig <= tmp_45_cast_fu_1266_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_0_Addr_A_orig <= tmp_15_fu_1239_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_0_Addr_A_orig <= tmp_43_fu_1223_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_13_fu_1187_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_43_cast_fu_1166_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_11_fu_1129_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_41_fu_1105_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_9_fu_1069_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_41_cast_fu_1044_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_4_fu_1011_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_39_fu_995_p3(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, tmp_8_fu_990_p1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage15, tmp_48_cast_fu_1025_p1, tmp_48_fu_1049_p3, tmp_50_cast_fu_1100_p1, tmp_50_fu_1113_p3, tmp_52_cast_fu_1156_p1, tmp_52_fu_1171_p3, tmp_54_cast_fu_1218_p1, tmp_55_cast_fu_1669_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            a_1_Addr_A_orig <= tmp_55_cast_fu_1669_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            a_1_Addr_A_orig <= tmp_54_cast_fu_1218_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            a_1_Addr_A_orig <= tmp_52_fu_1171_p3(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            a_1_Addr_A_orig <= tmp_52_cast_fu_1156_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            a_1_Addr_A_orig <= tmp_50_fu_1113_p3(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            a_1_Addr_A_orig <= tmp_50_cast_fu_1100_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            a_1_Addr_A_orig <= tmp_48_fu_1049_p3(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            a_1_Addr_A_orig <= tmp_48_cast_fu_1025_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            a_1_Addr_A_orig <= tmp_8_fu_990_p1(32 - 1 downto 0);
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= reg_924;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;

    a_1_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then 
            a_1_WEN_A <= ap_const_lv4_F;
        else 
            a_1_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_load_10_fu_1513_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_20_fu_178;
    a_row_load_11_fu_1543_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_19_fu_182;
    a_row_load_12_fu_1573_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_18_fu_186;
    a_row_load_13_fu_1603_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_17_fu_190;
    a_row_load_14_fu_1642_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_16_fu_194;
    a_row_load_15_fu_1635_p3 <= 
        a_0_Dout_A when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_s_fu_198;
    a_row_load_1_fu_1138_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_29_fu_142;
    a_row_load_2_fu_1196_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_28_fu_146;
    a_row_load_3_fu_1248_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_27_fu_150;
    a_row_load_4_fu_1288_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_26_fu_154;
    a_row_load_5_fu_1326_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_25_fu_158;
    a_row_load_6_fu_1379_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_24_fu_162;
    a_row_load_7_fu_1423_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_23_fu_166;
    a_row_load_8_fu_1453_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_22_fu_170;
    a_row_load_9_fu_1483_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_21_fu_174;
    a_row_load_fu_1078_p3 <= 
        reg_899 when (tmp_5_reg_1866(0) = '1') else 
        a_row_load_015_fu_138;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state90 <= ap_CS_fsm(25 downto 25);

    ap_done_assign_proc : process(ap_CS_fsm_state90)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state90)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_8_reg_1807, ap_CS_fsm_pp0_stage1, tmp_7_fu_1057_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_0_address0 <= tmp_7_fu_1057_p1(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_0_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_0_address0 <= "XXXX";
            end if;
        else 
            b_copy_0_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_copy_0_ce0 <= ap_const_logic_1;
        else 
            b_copy_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_0_we0 <= ap_const_logic_1;
        else 
            b_copy_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage3, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                b_copy_10_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_10_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_10_address0 <= "XXXX";
            end if;
        else 
            b_copy_10_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            b_copy_10_ce0 <= ap_const_logic_1;
        else 
            b_copy_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage3, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_10_we0 <= ap_const_logic_1;
        else 
            b_copy_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage20, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) then 
                b_copy_11_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_11_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_11_address0 <= "XXXX";
            end if;
        else 
            b_copy_11_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage20)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)))) then 
            b_copy_11_ce0 <= ap_const_logic_1;
        else 
            b_copy_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage4, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_11_we0 <= ap_const_logic_1;
        else 
            b_copy_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage21, tmp_8_reg_1807, tmp_7_reg_1903, ap_CS_fsm_pp0_stage5)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                b_copy_12_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_12_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_12_address0 <= "XXXX";
            end if;
        else 
            b_copy_12_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            b_copy_12_ce0 <= ap_const_logic_1;
        else 
            b_copy_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1796)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            b_copy_12_we0 <= ap_const_logic_1;
        else 
            b_copy_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage22, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                b_copy_13_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_13_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_13_address0 <= "XXXX";
            end if;
        else 
            b_copy_13_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage22)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)))) then 
            b_copy_13_ce0 <= ap_const_logic_1;
        else 
            b_copy_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage6, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_13_we0 <= ap_const_logic_1;
        else 
            b_copy_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage7, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                b_copy_14_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_14_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_14_address0 <= "XXXX";
            end if;
        else 
            b_copy_14_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            b_copy_14_ce0 <= ap_const_logic_1;
        else 
            b_copy_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage7, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_14_we0 <= ap_const_logic_1;
        else 
            b_copy_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage23, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                b_copy_15_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_15_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_15_address0 <= "XXXX";
            end if;
        else 
            b_copy_15_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage23)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)))) then 
            b_copy_15_ce0 <= ap_const_logic_1;
        else 
            b_copy_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage8, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_15_we0 <= ap_const_logic_1;
        else 
            b_copy_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_1_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_1_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_1_address0 <= "XXXX";
            end if;
        else 
            b_copy_1_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            b_copy_1_ce0 <= ap_const_logic_1;
        else 
            b_copy_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage3, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_1_we0 <= ap_const_logic_1;
        else 
            b_copy_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, tmp_8_reg_1807, tmp_7_reg_1903, ap_CS_fsm_pp0_stage5)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_2_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_2_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_2_address0 <= "XXXX";
            end if;
        else 
            b_copy_2_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            b_copy_2_ce0 <= ap_const_logic_1;
        else 
            b_copy_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1796)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            b_copy_2_we0 <= ap_const_logic_1;
        else 
            b_copy_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage7, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_3_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_3_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_3_address0 <= "XXXX";
            end if;
        else 
            b_copy_3_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            b_copy_3_ce0 <= ap_const_logic_1;
        else 
            b_copy_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage7, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_3_we0 <= ap_const_logic_1;
        else 
            b_copy_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_copy_4_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_copy_4_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_4_address0 <= "XXXX";
            end if;
        else 
            b_copy_4_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            b_copy_4_ce0 <= ap_const_logic_1;
        else 
            b_copy_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage9, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_4_we0 <= ap_const_logic_1;
        else 
            b_copy_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage11, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_copy_5_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_copy_5_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_5_address0 <= "XXXX";
            end if;
        else 
            b_copy_5_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage11)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            b_copy_5_ce0 <= ap_const_logic_1;
        else 
            b_copy_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage11, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_5_we0 <= ap_const_logic_1;
        else 
            b_copy_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage13, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_copy_6_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_copy_6_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_6_address0 <= "XXXX";
            end if;
        else 
            b_copy_6_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            b_copy_6_ce0 <= ap_const_logic_1;
        else 
            b_copy_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, ap_CS_fsm_pp0_stage13, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_6_we0 <= ap_const_logic_1;
        else 
            b_copy_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, tmp_8_reg_1807, tmp_7_reg_1903, ap_CS_fsm_pp0_stage15)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                b_copy_7_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_copy_7_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_7_address0 <= "XXXX";
            end if;
        else 
            b_copy_7_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then 
            b_copy_7_ce0 <= ap_const_logic_1;
        else 
            b_copy_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1796)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then 
            b_copy_7_we0 <= ap_const_logic_1;
        else 
            b_copy_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, tmp_8_reg_1807, ap_CS_fsm_pp0_stage1, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                b_copy_8_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_8_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_8_address0 <= "XXXX";
            end if;
        else 
            b_copy_8_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_copy_8_ce0 <= ap_const_logic_1;
        else 
            b_copy_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_8_we0 <= ap_const_logic_1;
        else 
            b_copy_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage18, tmp_8_reg_1807, tmp_7_reg_1903)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) then 
                b_copy_9_address0 <= tmp_7_reg_1903(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_9_address0 <= tmp_8_reg_1807(4 - 1 downto 0);
            else 
                b_copy_9_address0 <= "XXXX";
            end if;
        else 
            b_copy_9_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)))) then 
            b_copy_9_ce0 <= ap_const_logic_1;
        else 
            b_copy_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1769, tmp_mid2_reg_1796)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1769 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1796))))) then 
            b_copy_9_we0 <= ap_const_logic_1;
        else 
            b_copy_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_930_p2 <= "1" when (indvar_flatten_phi_fu_846_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_948_p2 <= "1" when (j_phi_fu_868_p4 = ap_const_lv5_10) else "0";
    grp_fu_1373_p0 <= (ap_const_lv1_1 & i2_mid2_v_reg_1800);

    grp_fu_875_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, reg_903, reg_909, ap_enable_reg_pp0_iter1, reg_914, ap_CS_fsm_pp0_stage7, reg_919, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage13, reg_924, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) then 
            grp_fu_875_p0 <= reg_924;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            grp_fu_875_p0 <= reg_919;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_875_p0 <= reg_914;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_875_p0 <= reg_909;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_875_p0 <= reg_903;
        else 
            grp_fu_875_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_875_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, reg_903, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage13, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, tmp_11_1_reg_2027, tmp_11_2_reg_2057, tmp_11_4_reg_2112, tmp_11_5_reg_2147, tmp_11_6_reg_2187, tmp_11_7_reg_2232, ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2257, ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2282, ap_pipeline_reg_pp0_iter1_tmp_11_s_reg_2307, ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2347, ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2362, ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2367, ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2372, ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2377)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2377;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2372;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2367;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2362;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2347;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_s_reg_2307;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2282;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_875_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2257;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_875_p1 <= tmp_11_7_reg_2232;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_875_p1 <= tmp_11_6_reg_2187;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_875_p1 <= tmp_11_5_reg_2147;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_875_p1 <= tmp_11_4_reg_2112;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_875_p1 <= reg_903;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_875_p1 <= tmp_11_2_reg_2057;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_875_p1 <= tmp_11_1_reg_2027;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_875_p1 <= ap_const_lv32_0;
        else 
            grp_fu_875_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_880_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage11, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, a_row_load_fu_1078_p3, ap_CS_fsm_pp0_stage5, a_row_load_1_fu_1138_p3, a_row_load_2_fu_1196_p3, a_row_load_3_fu_1248_p3, a_row_load_4_fu_1288_p3, a_row_load_5_fu_1326_p3, ap_CS_fsm_pp0_stage15, a_row_load_6_fu_1379_p3, a_row_load_7_fu_1423_p3, a_row_load_8_fu_1453_p3, a_row_load_9_fu_1483_p3, a_row_load_10_fu_1513_p3, a_row_load_11_fu_1543_p3, a_row_load_12_fu_1573_p3, a_row_load_13_fu_1603_p3, a_row_load_15_reg_2332, a_row_load_14_fu_1642_p3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_880_p0 <= a_row_load_15_reg_2332;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_880_p0 <= a_row_load_14_fu_1642_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_880_p0 <= a_row_load_13_fu_1603_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_880_p0 <= a_row_load_12_fu_1573_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then 
            grp_fu_880_p0 <= a_row_load_11_fu_1543_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_880_p0 <= a_row_load_10_fu_1513_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_880_p0 <= a_row_load_9_fu_1483_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_880_p0 <= a_row_load_8_fu_1453_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_880_p0 <= a_row_load_7_fu_1423_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_880_p0 <= a_row_load_6_fu_1379_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_880_p0 <= a_row_load_5_fu_1326_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_880_p0 <= a_row_load_4_fu_1288_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_880_p0 <= a_row_load_3_fu_1248_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_880_p0 <= a_row_load_2_fu_1196_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_880_p0 <= a_row_load_1_fu_1138_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_880_p0 <= a_row_load_fu_1078_p3;
        else 
            grp_fu_880_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_880_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage11, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, b_copy_0_q0, ap_CS_fsm_pp0_stage5, b_copy_1_q0, b_copy_2_q0, b_copy_3_q0, b_copy_4_q0, b_copy_5_q0, ap_CS_fsm_pp0_stage15, b_copy_6_q0, b_copy_7_q0, b_copy_8_q0, b_copy_9_q0, b_copy_10_q0, b_copy_11_q0, b_copy_12_q0, b_copy_13_q0, b_copy_14_q0, b_copy_15_load_reg_2357)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_880_p1 <= b_copy_15_load_reg_2357;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_880_p1 <= b_copy_14_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_880_p1 <= b_copy_13_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then 
            grp_fu_880_p1 <= b_copy_12_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then 
            grp_fu_880_p1 <= b_copy_11_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_880_p1 <= b_copy_10_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_880_p1 <= b_copy_9_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_880_p1 <= b_copy_8_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_880_p1 <= b_copy_7_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_880_p1 <= b_copy_6_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_880_p1 <= b_copy_5_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_880_p1 <= b_copy_4_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_880_p1 <= b_copy_3_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_880_p1 <= b_copy_2_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_880_p1 <= b_copy_1_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_880_p1 <= b_copy_0_q0;
        else 
            grp_fu_880_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i2_mid2_v_fu_982_p3 <= 
        i_1_fu_942_p2 when (exitcond_fu_948_p2(0) = '1') else 
        i_phi_fu_857_p4;
    i_1_fu_942_p2 <= std_logic_vector(unsigned(i_phi_fu_857_p4) + unsigned(ap_const_lv5_1));

    i_phi_fu_857_p4_assign_proc : process(i_reg_853, exitcond_flatten_reg_1769, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, i2_mid2_v_reg_1800)
    begin
        if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_857_p4 <= i2_mid2_v_reg_1800;
        else 
            i_phi_fu_857_p4 <= i_reg_853;
        end if; 
    end process;

    indvar_flatten_next_fu_936_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_846_p4) + unsigned(ap_const_lv9_1));

    indvar_flatten_phi_fu_846_p4_assign_proc : process(indvar_flatten_reg_842, exitcond_flatten_reg_1769, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1773)
    begin
        if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_846_p4 <= indvar_flatten_next_reg_1773;
        else 
            indvar_flatten_phi_fu_846_p4 <= indvar_flatten_reg_842;
        end if; 
    end process;

    j_1_fu_1616_p2 <= std_logic_vector(unsigned(j_mid2_reg_1778) + unsigned(ap_const_lv5_1));
    j_mid2_fu_954_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_948_p2(0) = '1') else 
        j_phi_fu_868_p4;

    j_phi_fu_868_p4_assign_proc : process(j_reg_864, exitcond_flatten_reg_1769, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j_1_reg_2327)
    begin
        if (((exitcond_flatten_reg_1769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_868_p4 <= j_1_reg_2327;
        else 
            j_phi_fu_868_p4 <= j_reg_864;
        end if; 
    end process;

    tmp1_fu_968_p2 <= "1" when (i_phi_fu_857_p4 = ap_const_lv5_0) else "0";
    tmp_10_fu_1124_p2 <= (tmp_1_reg_1837 or ap_const_lv9_2);
    tmp_11_fu_1129_p3 <= (ap_const_lv55_0 & tmp_10_fu_1124_p2);
    tmp_12_fu_1182_p2 <= (tmp_1_reg_1837 or ap_const_lv9_3);
    tmp_13_fu_1187_p3 <= (ap_const_lv55_0 & tmp_12_fu_1182_p2);
    tmp_14_fu_1234_p2 <= (tmp_1_reg_1837 or ap_const_lv9_4);
    tmp_15_fu_1239_p3 <= (ap_const_lv55_0 & tmp_14_fu_1234_p2);
    tmp_16_fu_1274_p2 <= (tmp_1_reg_1837 or ap_const_lv9_5);
    tmp_17_fu_1279_p3 <= (ap_const_lv55_0 & tmp_16_fu_1274_p2);
    tmp_18_fu_1312_p2 <= (tmp_1_reg_1837 or ap_const_lv9_6);
    tmp_19_fu_1317_p3 <= (ap_const_lv55_0 & tmp_18_fu_1312_p2);
    tmp_1_fu_1004_p3 <= (i2_mid2_v_reg_1800 & ap_const_lv4_0);
    tmp_20_fu_1352_p2 <= (tmp_1_reg_1837 or ap_const_lv9_7);
    tmp_21_fu_1357_p3 <= (ap_const_lv55_0 & tmp_20_fu_1352_p2);
    tmp_22_fu_1392_p2 <= (tmp_1_reg_1837 or ap_const_lv9_8);
    tmp_23_fu_1397_p3 <= (ap_const_lv55_0 & tmp_22_fu_1392_p2);
    tmp_24_fu_1409_p2 <= (tmp_1_reg_1837 or ap_const_lv9_9);
    tmp_25_fu_1414_p3 <= (ap_const_lv55_0 & tmp_24_fu_1409_p2);
    tmp_26_fu_1439_p2 <= (tmp_1_reg_1837 or ap_const_lv9_A);
    tmp_27_fu_1444_p3 <= (ap_const_lv55_0 & tmp_26_fu_1439_p2);
    tmp_28_fu_1469_p2 <= (tmp_1_reg_1837 or ap_const_lv9_B);
    tmp_29_fu_1474_p3 <= (ap_const_lv55_0 & tmp_28_fu_1469_p2);
    tmp_30_fu_1499_p2 <= (tmp_1_reg_1837 or ap_const_lv9_C);
    tmp_31_fu_1504_p3 <= (ap_const_lv55_0 & tmp_30_fu_1499_p2);
    tmp_32_fu_1529_p2 <= (tmp_1_reg_1837 or ap_const_lv9_D);
    tmp_33_fu_1534_p3 <= (ap_const_lv55_0 & tmp_32_fu_1529_p2);
    tmp_34_fu_1559_p2 <= (tmp_1_reg_1837 or ap_const_lv9_E);
    tmp_35_fu_1564_p3 <= (ap_const_lv55_0 & tmp_34_fu_1559_p2);
    tmp_36_fu_1589_p2 <= (tmp_1_reg_1837 or ap_const_lv9_F);
    tmp_37_fu_1594_p3 <= (ap_const_lv55_0 & tmp_36_fu_1589_p2);
    tmp_38_fu_1627_p3 <= (grp_fu_1373_p2 & ap_const_lv4_0);
    tmp_39_fu_995_p3 <= (ap_const_lv59_8 & j_mid2_fu_954_p3);
    tmp_40_fu_1038_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_1035_p1) + unsigned(ap_const_lv9_110));
    tmp_41_cast_fu_1044_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_1038_p2),64));
    tmp_41_fu_1105_p3 <= (ap_const_lv59_9 & j_mid2_reg_1778);
    tmp_42_fu_1161_p2 <= std_logic_vector(unsigned(tmp_8_cast_reg_1886) + unsigned(ap_const_lv9_130));
    tmp_43_cast_fu_1166_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_1161_p2),64));
    tmp_43_fu_1223_p3 <= (ap_const_lv59_A & j_mid2_reg_1778);
    tmp_44_fu_1261_p2 <= std_logic_vector(unsigned(tmp_8_cast_reg_1886) + unsigned(ap_const_lv9_150));
    tmp_45_cast_fu_1266_p1 <= std_logic_vector(resize(unsigned(tmp_44_fu_1261_p2),64));
    tmp_45_fu_1301_p3 <= (ap_const_lv59_B & j_mid2_reg_1778);
    tmp_46_fu_1339_p2 <= std_logic_vector(unsigned(tmp_8_cast_reg_1886) + unsigned(ap_const_lv9_170));
    tmp_47_cast_fu_1344_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_1339_p2),64));
    tmp_47_fu_1019_p2 <= std_logic_vector(unsigned(tmp_8_cast5_fu_1016_p1) + unsigned(ap_const_lv6_10));
    tmp_48_cast_fu_1025_p1 <= std_logic_vector(resize(unsigned(tmp_47_fu_1019_p2),64));
    tmp_48_fu_1049_p3 <= (ap_const_lv59_1 & j_mid2_reg_1778);
    tmp_49_fu_1094_p2 <= std_logic_vector(unsigned(tmp_8_cast6_fu_1091_p1) + unsigned(ap_const_lv7_30));
    tmp_4_fu_1011_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_1004_p3),64));
    tmp_50_cast_fu_1100_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_1094_p2),64));
    tmp_50_fu_1113_p3 <= (ap_const_lv59_2 & j_mid2_reg_1778);
    tmp_51_fu_1151_p2 <= std_logic_vector(unsigned(tmp_8_cast6_reg_1937) + unsigned(ap_const_lv7_50));
    tmp_52_cast_fu_1156_p1 <= std_logic_vector(resize(unsigned(tmp_51_fu_1151_p2),64));
    tmp_52_fu_1171_p3 <= (ap_const_lv59_3 & j_mid2_reg_1778);
    tmp_53_fu_1212_p2 <= std_logic_vector(unsigned(tmp_8_cast7_fu_1209_p1) + unsigned(ap_const_lv8_70));
    tmp_54_cast_fu_1218_p1 <= std_logic_vector(resize(unsigned(tmp_53_fu_1212_p2),64));
    tmp_54_fu_1663_p2 <= std_logic_vector(unsigned(tmp_38_fu_1627_p3) + unsigned(tmp_7_cast_fu_1660_p1));
    tmp_55_cast_fu_1669_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter3_tmp_54_reg_2342),64));
    tmp_5_fu_1030_p2 <= "1" when (j_mid2_reg_1778 = ap_const_lv5_0) else "0";
    tmp_6_fu_1064_p2 <= (tmp_1_reg_1837 or ap_const_lv9_1);
    tmp_7_cast_fu_1660_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),10));
    tmp_7_fu_1057_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),64));
    tmp_8_cast5_fu_1016_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),6));
    tmp_8_cast6_fu_1091_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),7));
    tmp_8_cast7_fu_1209_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),8));
    tmp_8_cast_fu_1035_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1778),9));
    tmp_8_fu_990_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_954_p3),64));
    tmp_9_fu_1069_p3 <= (ap_const_lv55_0 & tmp_6_fu_1064_p2);
    tmp_mid1_fu_962_p2 <= "1" when (i_1_fu_942_p2 = ap_const_lv5_0) else "0";
    tmp_mid2_fu_974_p3 <= 
        tmp_mid1_fu_962_p2 when (exitcond_fu_948_p2(0) = '1') else 
        tmp1_fu_968_p2;
end behav;
