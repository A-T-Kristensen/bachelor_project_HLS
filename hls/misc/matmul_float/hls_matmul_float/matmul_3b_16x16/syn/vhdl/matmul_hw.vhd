-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.205600,HLS_SYN_LAT=4169,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=2892,HLS_SYN_LUT=2539}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv59_4 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv59_5 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv8_B0 : STD_LOGIC_VECTOR (7 downto 0) := "10110000";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv59_6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv59_7 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_838 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_849 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_860 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal tmp_5_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal grp_fu_871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_936_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_1752 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_fu_954_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_1757 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_mid2_v_fu_982_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_mid2_v_reg_1780 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_990_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_reg_1785 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_1810 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_1875 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_fu_1084_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast6_cast_fu_1097_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_cast6_cast_reg_1909 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_copy_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_1128_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_1166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1179_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_42_reg_1964 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_copy_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_fu_1206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_876_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_4_fu_1244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast6_fu_1257_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_cast6_reg_2024 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_1_reg_2035 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_5_fu_1288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_2065 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_6_fu_1326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_2095 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_1366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_4_reg_2125 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_4_reg_2125 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_1404_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_5_reg_2155 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_5_reg_2155 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_6_reg_2185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_6_reg_2185 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_10_fu_1482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_7_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_7_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_11_fu_1520_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_8_reg_2245 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2245 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_8_reg_2245 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_12_fu_1561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1591_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_52_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_52_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_52_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_52_reg_2275 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_9_reg_2280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_9_reg_2280 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_1597_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_2295 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_row_load_15_fu_1611_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_15_reg_2300 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_14_fu_1618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_14_reg_2305 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_13_fu_1625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_s_reg_2315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_s_reg_2315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_s_reg_2315 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_10_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_10_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_11_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_11_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_11_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_12_reg_2355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_12_reg_2355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_12_reg_2355 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_13_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_13_reg_2360 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_14_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_14_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_ce0 : STD_LOGIC;
    signal b_copy_0_we0 : STD_LOGIC;
    signal b_copy_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_1_ce0 : STD_LOGIC;
    signal b_copy_1_we0 : STD_LOGIC;
    signal b_copy_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_2_ce0 : STD_LOGIC;
    signal b_copy_2_we0 : STD_LOGIC;
    signal b_copy_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_3_ce0 : STD_LOGIC;
    signal b_copy_3_we0 : STD_LOGIC;
    signal b_copy_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_4_ce0 : STD_LOGIC;
    signal b_copy_4_we0 : STD_LOGIC;
    signal b_copy_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_5_ce0 : STD_LOGIC;
    signal b_copy_5_we0 : STD_LOGIC;
    signal b_copy_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_6_ce0 : STD_LOGIC;
    signal b_copy_6_we0 : STD_LOGIC;
    signal b_copy_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_7_ce0 : STD_LOGIC;
    signal b_copy_7_we0 : STD_LOGIC;
    signal b_copy_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_8_ce0 : STD_LOGIC;
    signal b_copy_8_we0 : STD_LOGIC;
    signal b_copy_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_9_ce0 : STD_LOGIC;
    signal b_copy_9_we0 : STD_LOGIC;
    signal b_copy_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_10_ce0 : STD_LOGIC;
    signal b_copy_10_we0 : STD_LOGIC;
    signal b_copy_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_11_ce0 : STD_LOGIC;
    signal b_copy_11_we0 : STD_LOGIC;
    signal b_copy_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_12_ce0 : STD_LOGIC;
    signal b_copy_12_we0 : STD_LOGIC;
    signal b_copy_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_13_ce0 : STD_LOGIC;
    signal b_copy_13_we0 : STD_LOGIC;
    signal b_copy_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_14_ce0 : STD_LOGIC;
    signal b_copy_14_we0 : STD_LOGIC;
    signal b_copy_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_15_ce0 : STD_LOGIC;
    signal b_copy_15_we0 : STD_LOGIC;
    signal indvar_flatten_phi_fu_842_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_853_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_864_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1013_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_cast_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1041_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1055_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1075_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_cast_fu_1106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1119_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1141_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1157_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_cast_fu_1184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1197_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1219_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1235_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_cast_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1279_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_1301_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1317_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_cast_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1379_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_cast_fu_1422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1435_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_1457_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1473_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_cast_fu_1498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_1511_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1533_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1552_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_1583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_cast_fu_1648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_015_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_29_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_28_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_27_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_26_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_25_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_24_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_23_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_22_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_21_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_20_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_19_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_18_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_17_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_16_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_s_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_871_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_876_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_942_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1008_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast_fu_1022_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1025_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_1036_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_1070_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_1100_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_1114_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_1152_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1192_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_1230_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_44_fu_1260_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_1274_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_1312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_1339_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_1352_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_1390_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_48_fu_1417_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1430_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_fu_1468_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_cast8_fu_1495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_1506_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_36_fu_1547_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast7_fu_1574_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_1577_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_cast_fu_1544_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_cast_fu_1588_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component matmul_hw_fadd_32g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_b_copy_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    b_copy_0_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_0_address0,
        ce0 => b_copy_0_ce0,
        we0 => b_copy_0_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_0_q0);

    b_copy_1_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_1_address0,
        ce0 => b_copy_1_ce0,
        we0 => b_copy_1_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_1_q0);

    b_copy_2_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_2_address0,
        ce0 => b_copy_2_ce0,
        we0 => b_copy_2_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_2_q0);

    b_copy_3_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_3_address0,
        ce0 => b_copy_3_ce0,
        we0 => b_copy_3_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_3_q0);

    b_copy_4_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_4_address0,
        ce0 => b_copy_4_ce0,
        we0 => b_copy_4_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_4_q0);

    b_copy_5_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_5_address0,
        ce0 => b_copy_5_ce0,
        we0 => b_copy_5_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_5_q0);

    b_copy_6_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_6_address0,
        ce0 => b_copy_6_ce0,
        we0 => b_copy_6_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_6_q0);

    b_copy_7_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_7_address0,
        ce0 => b_copy_7_ce0,
        we0 => b_copy_7_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_7_q0);

    b_copy_8_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_8_address0,
        ce0 => b_copy_8_ce0,
        we0 => b_copy_8_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_8_q0);

    b_copy_9_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_9_address0,
        ce0 => b_copy_9_ce0,
        we0 => b_copy_9_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_9_q0);

    b_copy_10_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_10_address0,
        ce0 => b_copy_10_ce0,
        we0 => b_copy_10_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_10_q0);

    b_copy_11_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_11_address0,
        ce0 => b_copy_11_ce0,
        we0 => b_copy_11_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_11_q0);

    b_copy_12_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_12_address0,
        ce0 => b_copy_12_ce0,
        we0 => b_copy_12_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_12_q0);

    b_copy_13_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_13_address0,
        ce0 => b_copy_13_ce0,
        we0 => b_copy_13_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_13_q0);

    b_copy_14_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_14_address0,
        ce0 => b_copy_14_ce0,
        we0 => b_copy_14_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_14_q0);

    b_copy_15_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_15_address0,
        ce0 => b_copy_15_ce0,
        we0 => b_copy_15_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_15_q0);

    matmul_hw_fadd_32g8j_U1 : component matmul_hw_fadd_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_871_p0,
        din1 => grp_fu_871_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_871_p2);

    matmul_hw_fmul_32hbi_U2 : component matmul_hw_fmul_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_876_p0,
        din1 => grp_fu_876_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_876_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_930_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((exitcond_flatten_reg_1748 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_849_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_849 <= i2_mid2_v_reg_1780;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_849 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_838_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_838 <= indvar_flatten_next_reg_1752;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_838 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_860_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_860 <= j_1_reg_2295;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_860 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_load_015_fu_130 <= a_row_load_fu_1084_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_14_reg_2305 <= a_row_load_14_fu_1618_p3;
                a_row_load_15_reg_2300 <= a_row_load_15_fu_1611_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_16_fu_186 <= a_row_load_14_fu_1618_p3;
                a_row_load_17_fu_182 <= a_row_load_13_fu_1625_p3;
                a_row_load_s_fu_190 <= a_row_load_15_fu_1611_p3;
                tmp_11_s_reg_2315 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                a_row_load_18_fu_178 <= a_row_load_12_fu_1561_p3;
                j_1_reg_2295 <= j_1_fu_1597_p2;
                tmp_11_9_reg_2280 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                a_row_load_19_fu_174 <= a_row_load_11_fu_1520_p3;
                tmp_11_8_reg_2245 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                a_row_load_20_fu_170 <= a_row_load_10_fu_1482_p3;
                tmp_11_7_reg_2215 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                a_row_load_21_fu_166 <= a_row_load_9_fu_1444_p3;
                tmp_11_6_reg_2185 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                a_row_load_22_fu_162 <= a_row_load_8_fu_1404_p3;
                tmp_11_5_reg_2155 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                a_row_load_23_fu_158 <= a_row_load_7_fu_1366_p3;
                tmp_11_4_reg_2125 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                a_row_load_24_fu_154 <= a_row_load_6_fu_1326_p3;
                tmp_11_3_reg_2095 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                a_row_load_25_fu_150 <= a_row_load_5_fu_1288_p3;
                tmp_11_2_reg_2065 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                a_row_load_26_fu_146 <= a_row_load_4_fu_1244_p3;
                tmp_11_1_reg_2035 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_row_load_27_fu_142 <= a_row_load_3_fu_1206_p3;
                tmp_s_reg_1999 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_row_load_28_fu_138 <= a_row_load_2_fu_1166_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_row_load_29_fu_134 <= a_row_load_1_fu_1128_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748 <= exitcond_flatten_reg_1748;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748;
                ap_pipeline_reg_pp0_iter2_tmp_11_s_reg_2315 <= tmp_11_s_reg_2315;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748;
                ap_pipeline_reg_pp0_iter3_tmp_11_s_reg_2315 <= ap_pipeline_reg_pp0_iter2_tmp_11_s_reg_2315;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748;
                exitcond_flatten_reg_1748 <= exitcond_flatten_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_4_reg_2125 <= tmp_11_4_reg_2125;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_5_reg_2155 <= tmp_11_5_reg_2155;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_6_reg_2185 <= tmp_11_6_reg_2185;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_7_reg_2215 <= tmp_11_7_reg_2215;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2245 <= tmp_11_8_reg_2245;
                ap_pipeline_reg_pp0_iter2_tmp_11_8_reg_2245 <= ap_pipeline_reg_pp0_iter1_tmp_11_8_reg_2245;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2280 <= tmp_11_9_reg_2280;
                ap_pipeline_reg_pp0_iter1_tmp_52_reg_2275 <= tmp_52_reg_2275;
                ap_pipeline_reg_pp0_iter2_tmp_11_9_reg_2280 <= ap_pipeline_reg_pp0_iter1_tmp_11_9_reg_2280;
                ap_pipeline_reg_pp0_iter2_tmp_52_reg_2275 <= ap_pipeline_reg_pp0_iter1_tmp_52_reg_2275;
                ap_pipeline_reg_pp0_iter3_tmp_52_reg_2275 <= ap_pipeline_reg_pp0_iter2_tmp_52_reg_2275;
                ap_pipeline_reg_pp0_iter4_tmp_52_reg_2275 <= ap_pipeline_reg_pp0_iter3_tmp_52_reg_2275;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2330 <= tmp_11_10_reg_2330;
                ap_pipeline_reg_pp0_iter3_tmp_11_10_reg_2330 <= ap_pipeline_reg_pp0_iter2_tmp_11_10_reg_2330;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2345 <= tmp_11_11_reg_2345;
                ap_pipeline_reg_pp0_iter3_tmp_11_11_reg_2345 <= ap_pipeline_reg_pp0_iter2_tmp_11_11_reg_2345;
                ap_pipeline_reg_pp0_iter4_tmp_11_11_reg_2345 <= ap_pipeline_reg_pp0_iter3_tmp_11_11_reg_2345;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2355 <= tmp_11_12_reg_2355;
                ap_pipeline_reg_pp0_iter3_tmp_11_12_reg_2355 <= ap_pipeline_reg_pp0_iter2_tmp_11_12_reg_2355;
                ap_pipeline_reg_pp0_iter4_tmp_11_12_reg_2355 <= ap_pipeline_reg_pp0_iter3_tmp_11_12_reg_2355;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2360 <= tmp_11_13_reg_2360;
                ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2360 <= ap_pipeline_reg_pp0_iter2_tmp_11_13_reg_2360;
                ap_pipeline_reg_pp0_iter4_tmp_11_13_reg_2360 <= ap_pipeline_reg_pp0_iter3_tmp_11_13_reg_2360;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2365 <= tmp_11_14_reg_2365;
                ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2365 <= ap_pipeline_reg_pp0_iter2_tmp_11_14_reg_2365;
                ap_pipeline_reg_pp0_iter4_tmp_11_14_reg_2365 <= ap_pipeline_reg_pp0_iter3_tmp_11_14_reg_2365;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2))) then
                i2_mid2_v_reg_1780 <= i2_mid2_v_fu_982_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1752 <= indvar_flatten_next_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2))) then
                j_mid2_reg_1757 <= j_mid2_fu_954_p3;
                    tmp_3_reg_1785(8 downto 4) <= tmp_3_fu_990_p3(8 downto 4);
                tmp_mid2_reg_1776 <= tmp_mid2_fu_974_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_5_reg_1850))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then
                reg_896 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1850)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then
                reg_900 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748)))) then
                reg_904 <= grp_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748)))) then
                reg_909 <= grp_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748)))) then
                reg_914 <= grp_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748)))) then
                reg_919 <= grp_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748)))) then
                reg_924 <= grp_fu_871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748))) then
                tmp_11_10_reg_2330 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748))) then
                tmp_11_11_reg_2345 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748))) then
                tmp_11_12_reg_2355 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748))) then
                tmp_11_13_reg_2360 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1748))) then
                tmp_11_14_reg_2365 <= grp_fu_876_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_mid2_reg_1776)))) then
                tmp_42_reg_1964 <= tmp_42_fu_1179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                tmp_52_reg_2275 <= tmp_52_fu_1591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_5_reg_1850 <= tmp_5_fu_1050_p2;
                    tmp_7_reg_1875(4 downto 0) <= tmp_7_fu_1063_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1776)))) then
                    tmp_8_cast6_cast_reg_1909(4 downto 0) <= tmp_8_cast6_cast_fu_1097_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1776)))) then
                    tmp_8_cast6_reg_2024(4 downto 0) <= tmp_8_cast6_fu_1257_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_930_p2) and not((ap_const_lv1_0 = tmp_mid2_fu_974_p3)))) then
                    tmp_8_reg_1810(4 downto 0) <= tmp_8_fu_1003_p1(4 downto 0);
            end if;
        end if;
    end process;
    tmp_3_reg_1785(3 downto 0) <= "0000";
    tmp_8_reg_1810(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_7_reg_1875(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_8_cast6_cast_reg_1909(6 downto 5) <= "00";
    tmp_8_cast6_reg_2024(7 downto 5) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, exitcond_flatten_fu_930_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_930_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_4_fu_998_p1, tmp_9_fu_1013_p3, tmp_11_fu_1041_p3, tmp_13_fu_1075_p3, tmp_15_fu_1119_p3, tmp_17_fu_1157_p3, tmp_19_fu_1197_p3, tmp_21_fu_1235_p3, tmp_23_fu_1279_p3, tmp_25_fu_1317_p3, tmp_27_fu_1357_p3, tmp_29_fu_1395_p3, tmp_31_fu_1435_p3, tmp_33_fu_1473_p3, tmp_35_fu_1511_p3, tmp_37_fu_1552_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_0_Addr_A_orig <= tmp_37_fu_1552_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_0_Addr_A_orig <= tmp_35_fu_1511_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_0_Addr_A_orig <= tmp_33_fu_1473_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_0_Addr_A_orig <= tmp_31_fu_1435_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_0_Addr_A_orig <= tmp_29_fu_1395_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_0_Addr_A_orig <= tmp_27_fu_1357_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_0_Addr_A_orig <= tmp_25_fu_1317_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_0_Addr_A_orig <= tmp_23_fu_1279_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_21_fu_1235_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_19_fu_1197_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_17_fu_1157_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_15_fu_1119_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_13_fu_1075_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_11_fu_1041_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_9_fu_1013_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_4_fu_998_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_8_fu_1003_p1, tmp_38_cast_fu_1031_p1, tmp_39_fu_1055_p3, tmp_40_cast_fu_1106_p1, tmp_41_fu_1141_p3, tmp_42_cast_fu_1184_p1, tmp_43_fu_1219_p3, tmp_44_cast_fu_1266_p1, tmp_45_fu_1301_p3, tmp_46_cast_fu_1344_p1, tmp_47_fu_1379_p3, tmp_48_cast_fu_1422_p1, tmp_49_fu_1457_p3, tmp_50_cast_fu_1498_p1, tmp_50_fu_1533_p3, tmp_52_cast_fu_1583_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_1_Addr_A_orig <= tmp_52_cast_fu_1583_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_1_Addr_A_orig <= tmp_50_fu_1533_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_1_Addr_A_orig <= tmp_50_cast_fu_1498_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_1_Addr_A_orig <= tmp_49_fu_1457_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_1_Addr_A_orig <= tmp_48_cast_fu_1422_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_1_Addr_A_orig <= tmp_47_fu_1379_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_1_Addr_A_orig <= tmp_46_cast_fu_1344_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_1_Addr_A_orig <= tmp_45_fu_1301_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_44_cast_fu_1266_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_43_fu_1219_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_42_cast_fu_1184_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_41_fu_1141_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_40_cast_fu_1106_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_39_fu_1055_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_38_cast_fu_1031_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_8_fu_1003_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_2_Addr_A_orig <= tmp_53_cast_fu_1648_p1(32 - 1 downto 0);
    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= reg_924;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;

    a_2_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter5, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1748)))) then 
            a_2_WEN_A <= ap_const_lv4_F;
        else 
            a_2_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_load_10_fu_1482_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_20_fu_170;
    a_row_load_11_fu_1520_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_19_fu_174;
    a_row_load_12_fu_1561_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_18_fu_178;
    a_row_load_13_fu_1625_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_17_fu_182;
    a_row_load_14_fu_1618_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_16_fu_186;
    a_row_load_15_fu_1611_p3 <= 
        a_0_Dout_A when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_s_fu_190;
    a_row_load_1_fu_1128_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_29_fu_134;
    a_row_load_2_fu_1166_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_28_fu_138;
    a_row_load_3_fu_1206_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_27_fu_142;
    a_row_load_4_fu_1244_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_26_fu_146;
    a_row_load_5_fu_1288_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_25_fu_150;
    a_row_load_6_fu_1326_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_24_fu_154;
    a_row_load_7_fu_1366_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_23_fu_158;
    a_row_load_8_fu_1404_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_22_fu_162;
    a_row_load_9_fu_1444_p3 <= 
        reg_900 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_21_fu_166;
    a_row_load_fu_1084_p3 <= 
        reg_896 when (tmp_5_reg_1850(0) = '1') else 
        a_row_load_015_fu_130;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state90 <= ap_CS_fsm(17 downto 17);

    ap_done_assign_proc : process(ap_CS_fsm_state90)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state90)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_8_reg_1810, tmp_7_fu_1063_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_0_address0 <= tmp_7_fu_1063_p1(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_0_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_0_address0 <= "XXXX";
            end if;
        else 
            b_copy_0_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)))) then 
            b_copy_0_ce0 <= ap_const_logic_1;
        else 
            b_copy_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_0_we0 <= ap_const_logic_1;
        else 
            b_copy_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_copy_10_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_copy_10_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_10_address0 <= "XXXX";
            end if;
        else 
            b_copy_10_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            b_copy_10_ce0 <= ap_const_logic_1;
        else 
            b_copy_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage11, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_10_we0 <= ap_const_logic_1;
        else 
            b_copy_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_copy_11_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_copy_11_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_11_address0 <= "XXXX";
            end if;
        else 
            b_copy_11_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            b_copy_11_ce0 <= ap_const_logic_1;
        else 
            b_copy_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage12, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_11_we0 <= ap_const_logic_1;
        else 
            b_copy_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_copy_12_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_copy_12_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_12_address0 <= "XXXX";
            end if;
        else 
            b_copy_12_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then 
            b_copy_12_ce0 <= ap_const_logic_1;
        else 
            b_copy_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage13, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_12_we0 <= ap_const_logic_1;
        else 
            b_copy_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_copy_13_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_copy_13_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_13_address0 <= "XXXX";
            end if;
        else 
            b_copy_13_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then 
            b_copy_13_ce0 <= ap_const_logic_1;
        else 
            b_copy_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage14, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_13_we0 <= ap_const_logic_1;
        else 
            b_copy_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            b_copy_14_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            b_copy_14_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
        else 
            b_copy_14_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            b_copy_14_ce0 <= ap_const_logic_1;
        else 
            b_copy_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage15, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_14_we0 <= ap_const_logic_1;
        else 
            b_copy_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_15_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_copy_15_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_15_address0 <= "XXXX";
            end if;
        else 
            b_copy_15_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            b_copy_15_ce0 <= ap_const_logic_1;
        else 
            b_copy_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_15_we0 <= ap_const_logic_1;
        else 
            b_copy_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_1_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_1_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_1_address0 <= "XXXX";
            end if;
        else 
            b_copy_1_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)))) then 
            b_copy_1_ce0 <= ap_const_logic_1;
        else 
            b_copy_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage2, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_1_we0 <= ap_const_logic_1;
        else 
            b_copy_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_2_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_2_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_2_address0 <= "XXXX";
            end if;
        else 
            b_copy_2_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            b_copy_2_ce0 <= ap_const_logic_1;
        else 
            b_copy_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage3, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_2_we0 <= ap_const_logic_1;
        else 
            b_copy_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_3_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_3_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_3_address0 <= "XXXX";
            end if;
        else 
            b_copy_3_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            b_copy_3_ce0 <= ap_const_logic_1;
        else 
            b_copy_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage4, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_3_we0 <= ap_const_logic_1;
        else 
            b_copy_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_4_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_4_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_4_address0 <= "XXXX";
            end if;
        else 
            b_copy_4_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_copy_4_ce0 <= ap_const_logic_1;
        else 
            b_copy_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage5, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_4_we0 <= ap_const_logic_1;
        else 
            b_copy_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_5_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_5_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_5_address0 <= "XXXX";
            end if;
        else 
            b_copy_5_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_copy_5_ce0 <= ap_const_logic_1;
        else 
            b_copy_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage6, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_5_we0 <= ap_const_logic_1;
        else 
            b_copy_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_6_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_6_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_6_address0 <= "XXXX";
            end if;
        else 
            b_copy_6_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            b_copy_6_ce0 <= ap_const_logic_1;
        else 
            b_copy_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage7, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_6_we0 <= ap_const_logic_1;
        else 
            b_copy_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_copy_7_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_7_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_7_address0 <= "XXXX";
            end if;
        else 
            b_copy_7_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            b_copy_7_ce0 <= ap_const_logic_1;
        else 
            b_copy_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage8, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_7_we0 <= ap_const_logic_1;
        else 
            b_copy_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_copy_8_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_copy_8_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_8_address0 <= "XXXX";
            end if;
        else 
            b_copy_8_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            b_copy_8_ce0 <= ap_const_logic_1;
        else 
            b_copy_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage9, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_8_we0 <= ap_const_logic_1;
        else 
            b_copy_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, tmp_8_reg_1810, tmp_7_reg_1875)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_copy_9_address0 <= tmp_7_reg_1875(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_copy_9_address0 <= tmp_8_reg_1810(4 - 1 downto 0);
            else 
                b_copy_9_address0 <= "XXXX";
            end if;
        else 
            b_copy_9_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            b_copy_9_ce0 <= ap_const_logic_1;
        else 
            b_copy_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage10, tmp_mid2_reg_1776)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and not((ap_const_lv1_0 = tmp_mid2_reg_1776))))) then 
            b_copy_9_we0 <= ap_const_logic_1;
        else 
            b_copy_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_930_p2 <= "1" when (indvar_flatten_phi_fu_842_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_948_p2 <= "1" when (j_phi_fu_864_p4 = ap_const_lv5_10) else "0";

    grp_fu_871_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, reg_904, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_909, ap_enable_reg_pp0_iter2, reg_914, ap_enable_reg_pp0_iter3, reg_919, ap_enable_reg_pp0_iter4, reg_924, ap_enable_reg_pp0_iter5, tmp_s_reg_1999)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5)))) then 
            grp_fu_871_p0 <= reg_924;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) then 
            grp_fu_871_p0 <= reg_919;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) then 
            grp_fu_871_p0 <= reg_914;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            grp_fu_871_p0 <= reg_909;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_871_p0 <= reg_904;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_871_p0 <= tmp_s_reg_1999;
        else 
            grp_fu_871_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_871_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, tmp_11_1_reg_2035, tmp_11_2_reg_2065, tmp_11_3_reg_2095, ap_pipeline_reg_pp0_iter1_tmp_11_4_reg_2125, ap_pipeline_reg_pp0_iter1_tmp_11_5_reg_2155, ap_pipeline_reg_pp0_iter1_tmp_11_6_reg_2185, ap_pipeline_reg_pp0_iter1_tmp_11_7_reg_2215, ap_pipeline_reg_pp0_iter2_tmp_11_8_reg_2245, ap_pipeline_reg_pp0_iter2_tmp_11_9_reg_2280, ap_pipeline_reg_pp0_iter3_tmp_11_s_reg_2315, ap_pipeline_reg_pp0_iter3_tmp_11_10_reg_2330, ap_pipeline_reg_pp0_iter4_tmp_11_11_reg_2345, ap_pipeline_reg_pp0_iter4_tmp_11_12_reg_2355, ap_pipeline_reg_pp0_iter4_tmp_11_13_reg_2360, ap_pipeline_reg_pp0_iter4_tmp_11_14_reg_2365)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter4_tmp_11_14_reg_2365;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter4_tmp_11_13_reg_2360;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter4_tmp_11_12_reg_2355;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter4_tmp_11_11_reg_2345;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter3_tmp_11_10_reg_2330;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter3_tmp_11_s_reg_2315;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_9_reg_2280;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_8_reg_2245;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_7_reg_2215;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_6_reg_2185;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_5_reg_2155;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_871_p1 <= ap_pipeline_reg_pp0_iter1_tmp_11_4_reg_2125;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_871_p1 <= tmp_11_3_reg_2095;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_871_p1 <= tmp_11_2_reg_2065;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_871_p1 <= tmp_11_1_reg_2035;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_871_p1 <= ap_const_lv32_0;
        else 
            grp_fu_871_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_876_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, a_row_load_fu_1084_p3, a_row_load_1_fu_1128_p3, a_row_load_2_fu_1166_p3, a_row_load_3_fu_1206_p3, a_row_load_4_fu_1244_p3, a_row_load_5_fu_1288_p3, a_row_load_6_fu_1326_p3, a_row_load_7_fu_1366_p3, a_row_load_8_fu_1404_p3, a_row_load_9_fu_1444_p3, a_row_load_10_fu_1482_p3, a_row_load_11_fu_1520_p3, a_row_load_12_fu_1561_p3, a_row_load_15_reg_2300, a_row_load_14_reg_2305, a_row_load_13_fu_1625_p3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p0 <= a_row_load_15_reg_2300;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p0 <= a_row_load_14_reg_2305;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p0 <= a_row_load_13_fu_1625_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_876_p0 <= a_row_load_12_fu_1561_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_876_p0 <= a_row_load_11_fu_1520_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_876_p0 <= a_row_load_10_fu_1482_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_876_p0 <= a_row_load_9_fu_1444_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_876_p0 <= a_row_load_8_fu_1404_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_876_p0 <= a_row_load_7_fu_1366_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_876_p0 <= a_row_load_6_fu_1326_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_876_p0 <= a_row_load_5_fu_1288_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_876_p0 <= a_row_load_4_fu_1244_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_876_p0 <= a_row_load_3_fu_1206_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_876_p0 <= a_row_load_2_fu_1166_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_876_p0 <= a_row_load_1_fu_1128_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_876_p0 <= a_row_load_fu_1084_p3;
        else 
            grp_fu_876_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_876_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, b_copy_0_q0, b_copy_1_q0, b_copy_2_q0, b_copy_3_q0, b_copy_4_q0, b_copy_5_q0, b_copy_6_q0, b_copy_7_q0, b_copy_8_q0, b_copy_9_q0, b_copy_10_q0, b_copy_11_q0, b_copy_12_q0, b_copy_13_q0, b_copy_14_q0, b_copy_15_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p1 <= b_copy_15_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p1 <= b_copy_14_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_876_p1 <= b_copy_13_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_876_p1 <= b_copy_12_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_876_p1 <= b_copy_11_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_876_p1 <= b_copy_10_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_876_p1 <= b_copy_9_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_876_p1 <= b_copy_8_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_876_p1 <= b_copy_7_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_876_p1 <= b_copy_6_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_876_p1 <= b_copy_5_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_876_p1 <= b_copy_4_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_876_p1 <= b_copy_3_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_876_p1 <= b_copy_2_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_876_p1 <= b_copy_1_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_876_p1 <= b_copy_0_q0;
        else 
            grp_fu_876_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i2_mid2_v_fu_982_p3 <= 
        i_1_fu_942_p2 when (exitcond_fu_948_p2(0) = '1') else 
        i_phi_fu_853_p4;
    i_1_fu_942_p2 <= std_logic_vector(unsigned(i_phi_fu_853_p4) + unsigned(ap_const_lv5_1));

    i_phi_fu_853_p4_assign_proc : process(i_reg_849, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i2_mid2_v_reg_1780)
    begin
        if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_853_p4 <= i2_mid2_v_reg_1780;
        else 
            i_phi_fu_853_p4 <= i_reg_849;
        end if; 
    end process;

    indvar_flatten_next_fu_936_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_842_p4) + unsigned(ap_const_lv9_1));

    indvar_flatten_phi_fu_842_p4_assign_proc : process(indvar_flatten_reg_838, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten_next_reg_1752)
    begin
        if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_842_p4 <= indvar_flatten_next_reg_1752;
        else 
            indvar_flatten_phi_fu_842_p4 <= indvar_flatten_reg_838;
        end if; 
    end process;

    j_1_fu_1597_p2 <= std_logic_vector(unsigned(j_mid2_reg_1757) + unsigned(ap_const_lv5_1));
    j_mid2_fu_954_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_948_p2(0) = '1') else 
        j_phi_fu_864_p4;

    j_phi_fu_864_p4_assign_proc : process(j_reg_860, exitcond_flatten_reg_1748, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_1_reg_2295)
    begin
        if (((exitcond_flatten_reg_1748 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_864_p4 <= j_1_reg_2295;
        else 
            j_phi_fu_864_p4 <= j_reg_860;
        end if; 
    end process;

    tmp1_fu_968_p2 <= "1" when (i_phi_fu_853_p4 = ap_const_lv5_0) else "0";
    tmp_10_fu_1036_p2 <= (tmp_3_reg_1785 or ap_const_lv9_2);
    tmp_11_fu_1041_p3 <= (ap_const_lv55_0 & tmp_10_fu_1036_p2);
    tmp_12_fu_1070_p2 <= (tmp_3_reg_1785 or ap_const_lv9_3);
    tmp_13_fu_1075_p3 <= (ap_const_lv55_0 & tmp_12_fu_1070_p2);
    tmp_14_fu_1114_p2 <= (tmp_3_reg_1785 or ap_const_lv9_4);
    tmp_15_fu_1119_p3 <= (ap_const_lv55_0 & tmp_14_fu_1114_p2);
    tmp_16_fu_1152_p2 <= (tmp_3_reg_1785 or ap_const_lv9_5);
    tmp_17_fu_1157_p3 <= (ap_const_lv55_0 & tmp_16_fu_1152_p2);
    tmp_18_fu_1192_p2 <= (tmp_3_reg_1785 or ap_const_lv9_6);
    tmp_19_fu_1197_p3 <= (ap_const_lv55_0 & tmp_18_fu_1192_p2);
    tmp_20_fu_1230_p2 <= (tmp_3_reg_1785 or ap_const_lv9_7);
    tmp_21_fu_1235_p3 <= (ap_const_lv55_0 & tmp_20_fu_1230_p2);
    tmp_22_fu_1274_p2 <= (tmp_3_reg_1785 or ap_const_lv9_8);
    tmp_23_fu_1279_p3 <= (ap_const_lv55_0 & tmp_22_fu_1274_p2);
    tmp_24_fu_1312_p2 <= (tmp_3_reg_1785 or ap_const_lv9_9);
    tmp_25_fu_1317_p3 <= (ap_const_lv55_0 & tmp_24_fu_1312_p2);
    tmp_26_fu_1352_p2 <= (tmp_3_reg_1785 or ap_const_lv9_A);
    tmp_27_fu_1357_p3 <= (ap_const_lv55_0 & tmp_26_fu_1352_p2);
    tmp_28_fu_1390_p2 <= (tmp_3_reg_1785 or ap_const_lv9_B);
    tmp_29_fu_1395_p3 <= (ap_const_lv55_0 & tmp_28_fu_1390_p2);
    tmp_30_fu_1430_p2 <= (tmp_3_reg_1785 or ap_const_lv9_C);
    tmp_31_fu_1435_p3 <= (ap_const_lv55_0 & tmp_30_fu_1430_p2);
    tmp_32_fu_1468_p2 <= (tmp_3_reg_1785 or ap_const_lv9_D);
    tmp_33_fu_1473_p3 <= (ap_const_lv55_0 & tmp_32_fu_1468_p2);
    tmp_34_fu_1506_p2 <= (tmp_3_reg_1785 or ap_const_lv9_E);
    tmp_35_fu_1511_p3 <= (ap_const_lv55_0 & tmp_34_fu_1506_p2);
    tmp_36_fu_1547_p2 <= (tmp_3_reg_1785 or ap_const_lv9_F);
    tmp_37_fu_1552_p3 <= (ap_const_lv55_0 & tmp_36_fu_1547_p2);
    tmp_38_cast_fu_1031_p1 <= std_logic_vector(resize(unsigned(tmp_38_fu_1025_p2),64));
    tmp_38_fu_1025_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_1022_p1) + unsigned(ap_const_lv6_10));
    tmp_39_fu_1055_p3 <= (ap_const_lv59_1 & j_mid2_reg_1757);
    tmp_3_fu_990_p3 <= (i2_mid2_v_fu_982_p3 & ap_const_lv4_0);
    tmp_40_cast_fu_1106_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_1100_p2),64));
    tmp_40_fu_1100_p2 <= std_logic_vector(unsigned(tmp_8_cast6_cast_fu_1097_p1) + unsigned(ap_const_lv7_30));
    tmp_41_fu_1141_p3 <= (ap_const_lv59_2 & j_mid2_reg_1757);
    tmp_42_cast_fu_1184_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_1179_p2),64));
    tmp_42_fu_1179_p2 <= std_logic_vector(unsigned(tmp_8_cast6_cast_reg_1909) + unsigned(ap_const_lv7_50));
    tmp_43_fu_1219_p3 <= (ap_const_lv59_3 & j_mid2_reg_1757);
    tmp_44_cast_fu_1266_p1 <= std_logic_vector(resize(unsigned(tmp_44_fu_1260_p2),64));
    tmp_44_fu_1260_p2 <= std_logic_vector(unsigned(tmp_8_cast6_fu_1257_p1) + unsigned(ap_const_lv8_70));
    tmp_45_fu_1301_p3 <= (ap_const_lv59_4 & j_mid2_reg_1757);
    tmp_46_cast_fu_1344_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_1339_p2),64));
    tmp_46_fu_1339_p2 <= std_logic_vector(unsigned(tmp_8_cast6_reg_2024) + unsigned(ap_const_lv8_90));
    tmp_47_fu_1379_p3 <= (ap_const_lv59_5 & j_mid2_reg_1757);
    tmp_48_cast_fu_1422_p1 <= std_logic_vector(resize(unsigned(tmp_48_fu_1417_p2),64));
    tmp_48_fu_1417_p2 <= std_logic_vector(unsigned(tmp_8_cast6_reg_2024) + unsigned(ap_const_lv8_B0));
    tmp_49_fu_1457_p3 <= (ap_const_lv59_6 & j_mid2_reg_1757);
    tmp_4_cast_fu_1544_p1 <= std_logic_vector(resize(unsigned(tmp_3_reg_1785),10));
    tmp_4_fu_998_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_990_p3),64));
        tmp_50_cast8_fu_1495_p1 <= std_logic_vector(resize(signed(tmp_42_reg_1964),8));

    tmp_50_cast_fu_1498_p1 <= std_logic_vector(resize(unsigned(tmp_50_cast8_fu_1495_p1),64));
    tmp_50_fu_1533_p3 <= (ap_const_lv59_7 & j_mid2_reg_1757);
    tmp_51_fu_1577_p2 <= std_logic_vector(unsigned(tmp_8_cast7_fu_1574_p1) + unsigned(ap_const_lv9_F0));
    tmp_52_cast_fu_1583_p1 <= std_logic_vector(resize(unsigned(tmp_51_fu_1577_p2),64));
    tmp_52_fu_1591_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_1544_p1) + unsigned(tmp_7_cast_fu_1588_p1));
    tmp_53_cast_fu_1648_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_tmp_52_reg_2275),64));
    tmp_5_fu_1050_p2 <= "1" when (j_mid2_reg_1757 = ap_const_lv5_0) else "0";
    tmp_6_fu_1008_p2 <= (tmp_3_reg_1785 or ap_const_lv9_1);
    tmp_7_cast_fu_1588_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),10));
    tmp_7_fu_1063_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),64));
    tmp_8_cast6_cast_fu_1097_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),7));
    tmp_8_cast6_fu_1257_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),8));
    tmp_8_cast7_fu_1574_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),9));
    tmp_8_cast_fu_1022_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1757),6));
    tmp_8_fu_1003_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_954_p3),64));
    tmp_9_fu_1013_p3 <= (ap_const_lv55_0 & tmp_6_fu_1008_p2);
    tmp_mid1_fu_962_p2 <= "1" when (i_1_fu_942_p2 = ap_const_lv5_0) else "0";
    tmp_mid2_fu_974_p3 <= 
        tmp_mid1_fu_962_p2 when (exitcond_fu_948_p2(0) = '1') else 
        tmp1_fu_968_p2;
end behav;
