// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.526000,HLS_SYN_LAT=16649,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=2419,HLS_SYN_LUT=2331}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A
);

parameter    ap_ST_fsm_state1 = 67'b1;
parameter    ap_ST_fsm_pp0_stage0 = 67'b10;
parameter    ap_ST_fsm_pp0_stage1 = 67'b100;
parameter    ap_ST_fsm_pp0_stage2 = 67'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 67'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 67'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 67'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 67'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 67'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 67'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 67'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 67'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 67'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 67'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 67'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 67'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 67'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage16 = 67'b100000000000000000;
parameter    ap_ST_fsm_pp0_stage17 = 67'b1000000000000000000;
parameter    ap_ST_fsm_pp0_stage18 = 67'b10000000000000000000;
parameter    ap_ST_fsm_pp0_stage19 = 67'b100000000000000000000;
parameter    ap_ST_fsm_pp0_stage20 = 67'b1000000000000000000000;
parameter    ap_ST_fsm_pp0_stage21 = 67'b10000000000000000000000;
parameter    ap_ST_fsm_pp0_stage22 = 67'b100000000000000000000000;
parameter    ap_ST_fsm_pp0_stage23 = 67'b1000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage24 = 67'b10000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage25 = 67'b100000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage26 = 67'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage27 = 67'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage28 = 67'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage29 = 67'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage30 = 67'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage31 = 67'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage32 = 67'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage33 = 67'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage34 = 67'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage35 = 67'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage36 = 67'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage37 = 67'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage38 = 67'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage39 = 67'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage40 = 67'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage41 = 67'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage42 = 67'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage43 = 67'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage44 = 67'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage45 = 67'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage46 = 67'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage47 = 67'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage48 = 67'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage49 = 67'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage50 = 67'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage51 = 67'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage52 = 67'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage53 = 67'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage54 = 67'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage55 = 67'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage56 = 67'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage57 = 67'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage58 = 67'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage59 = 67'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage60 = 67'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage61 = 67'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage62 = 67'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage63 = 67'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage64 = 67'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 67'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv59_8 = 59'b1000;
parameter    ap_const_lv9_110 = 9'b100010000;
parameter    ap_const_lv59_9 = 59'b1001;
parameter    ap_const_lv9_130 = 9'b100110000;
parameter    ap_const_lv59_A = 59'b1010;
parameter    ap_const_lv9_150 = 9'b101010000;
parameter    ap_const_lv55_0 = 55'b0000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_2 = 9'b10;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv9_4 = 9'b100;
parameter    ap_const_lv9_5 = 9'b101;
parameter    ap_const_lv59_B = 59'b1011;
parameter    ap_const_lv9_6 = 9'b110;
parameter    ap_const_lv9_170 = 9'b101110000;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv59_C = 59'b1100;
parameter    ap_const_lv9_8 = 9'b1000;
parameter    ap_const_lv8_90 = 8'b10010000;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv59_D = 59'b1101;
parameter    ap_const_lv9_A = 9'b1010;
parameter    ap_const_lv8_B0 = 8'b10110000;
parameter    ap_const_lv9_B = 9'b1011;
parameter    ap_const_lv59_E = 59'b1110;
parameter    ap_const_lv9_C = 9'b1100;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv9_D = 9'b1101;
parameter    ap_const_lv59_F = 59'b1111;
parameter    ap_const_lv9_E = 9'b1110;
parameter    ap_const_lv10_1F0 = 10'b111110000;
parameter    ap_const_lv9_F = 9'b1111;
parameter    ap_const_lv32_42 = 32'b1000010;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;

(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_834;
reg   [4:0] i_reg_845;
reg   [4:0] j_reg_856;
reg   [31:0] reg_895;
wire   [0:0] ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1781;
wire   [0:0] ap_CS_fsm_pp0_stage10;
reg   [0:0] tmp_5_reg_1869;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [0:0] ap_CS_fsm_pp0_stage13;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [0:0] ap_CS_fsm_pp0_stage17;
wire   [0:0] ap_CS_fsm_pp0_stage19;
wire   [0:0] ap_CS_fsm_pp0_stage21;
wire   [0:0] ap_CS_fsm_pp0_stage23;
wire   [0:0] ap_CS_fsm_pp0_stage25;
wire   [0:0] ap_CS_fsm_pp0_stage27;
wire   [0:0] ap_CS_fsm_pp0_stage29;
wire   [0:0] ap_CS_fsm_pp0_stage31;
wire   [31:0] grp_fu_874_p2;
reg   [31:0] reg_899;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage16;
wire   [31:0] grp_fu_867_p2;
reg   [31:0] reg_905;
wire   [0:0] ap_CS_fsm_pp0_stage20;
wire   [0:0] ap_CS_fsm_pp0_stage24;
wire   [0:0] ap_CS_fsm_pp0_stage28;
wire   [0:0] ap_CS_fsm_pp0_stage32;
wire   [0:0] ap_CS_fsm_pp0_stage36;
wire   [0:0] ap_CS_fsm_pp0_stage40;
wire   [0:0] ap_CS_fsm_pp0_stage44;
wire   [0:0] ap_CS_fsm_pp0_stage48;
wire   [0:0] ap_CS_fsm_pp0_stage52;
wire   [0:0] ap_CS_fsm_pp0_stage56;
wire   [0:0] ap_CS_fsm_pp0_stage60;
wire   [0:0] ap_CS_fsm_pp0_stage64;
wire   [0:0] ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1781;
reg   [31:0] reg_910;
wire   [0:0] ap_CS_fsm_pp0_stage14;
reg   [31:0] reg_915;
reg   [31:0] reg_920;
wire   [0:0] ap_CS_fsm_pp0_stage33;
reg   [31:0] reg_925;
wire   [0:0] ap_CS_fsm_pp0_stage37;
wire   [0:0] exitcond_flatten_fu_930_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [8:0] indvar_flatten_next_fu_936_p2;
reg   [8:0] indvar_flatten_next_reg_1785;
wire   [4:0] j_mid2_fu_954_p3;
reg   [4:0] j_mid2_reg_1790;
reg   [4:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1790;
wire   [0:0] tmp_mid2_fu_974_p3;
reg   [0:0] tmp_mid2_reg_1810;
wire   [4:0] tmp_2_mid2_v_v_v_fu_982_p3;
reg   [4:0] tmp_2_mid2_v_v_v_reg_1814;
reg   [4:0] ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1814;
wire   [8:0] tmp_3_fu_999_p3;
reg   [8:0] tmp_3_reg_1826;
wire   [0:0] ap_CS_fsm_pp0_stage1;
wire   [63:0] tmp_8_fu_1011_p1;
reg   [63:0] tmp_8_reg_1850;
wire   [0:0] tmp_5_fu_1015_p2;
wire   [8:0] tmp_8_cast_fu_1020_p1;
reg   [8:0] tmp_8_cast_reg_1889;
wire   [63:0] tmp_7_fu_1034_p1;
reg   [63:0] tmp_7_reg_1901;
wire   [31:0] a_row_load_fu_1041_p3;
wire   [31:0] b_copy_0_q0;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [31:0] a_row_load_1_fu_1121_p3;
wire   [31:0] b_copy_1_q0;
wire   [31:0] a_row_load_2_fu_1165_p3;
wire   [31:0] b_copy_2_q0;
wire   [31:0] a_row_load_3_fu_1195_p3;
wire   [31:0] b_copy_3_q0;
wire   [31:0] a_row_load_4_fu_1211_p3;
wire   [31:0] b_copy_4_q0;
wire   [31:0] a_row_load_5_fu_1249_p3;
wire   [31:0] b_copy_5_q0;
wire   [31:0] a_row_load_6_fu_1289_p3;
wire   [31:0] b_copy_6_q0;
wire   [0:0] ap_CS_fsm_pp0_stage18;
wire   [31:0] a_row_load_7_fu_1327_p3;
wire   [31:0] b_copy_7_q0;
wire   [7:0] tmp_8_cast_cast_fu_1340_p1;
reg   [7:0] tmp_8_cast_cast_reg_2115;
wire   [31:0] a_row_load_8_fu_1375_p3;
wire   [31:0] b_copy_8_q0;
wire   [0:0] ap_CS_fsm_pp0_stage22;
wire   [31:0] a_row_load_9_fu_1413_p3;
wire   [31:0] b_copy_9_q0;
reg   [31:0] tmp_11_8_reg_2175;
wire   [31:0] a_row_load_10_fu_1457_p3;
wire   [31:0] b_copy_10_q0;
wire   [0:0] ap_CS_fsm_pp0_stage26;
wire   [31:0] a_row_load_11_fu_1495_p3;
wire   [31:0] b_copy_11_q0;
reg   [31:0] tmp_11_s_reg_2230;
wire   [31:0] a_row_load_12_fu_1543_p3;
wire   [31:0] b_copy_12_q0;
wire   [0:0] ap_CS_fsm_pp0_stage30;
wire   [31:0] a_row_load_13_fu_1581_p3;
wire   [31:0] b_copy_13_q0;
reg   [31:0] tmp_11_11_reg_2285;
wire   [31:0] a_row_load_14_fu_1625_p3;
wire   [31:0] b_copy_14_q0;
wire   [31:0] a_row_load_15_fu_1641_p3;
reg   [31:0] a_row_load_15_reg_2310;
wire   [31:0] b_copy_15_q0;
wire   [0:0] ap_CS_fsm_pp0_stage34;
reg   [31:0] tmp_11_13_reg_2325;
wire   [0:0] ap_CS_fsm_pp0_stage35;
wire   [4:0] j_1_fu_1653_p2;
reg   [4:0] j_1_reg_2330;
reg   [3:0] b_copy_0_address0;
reg    b_copy_0_ce0;
reg    b_copy_0_we0;
reg   [3:0] b_copy_1_address0;
reg    b_copy_1_ce0;
reg    b_copy_1_we0;
reg   [3:0] b_copy_2_address0;
reg    b_copy_2_ce0;
reg    b_copy_2_we0;
reg   [3:0] b_copy_3_address0;
reg    b_copy_3_ce0;
reg    b_copy_3_we0;
reg   [3:0] b_copy_4_address0;
reg    b_copy_4_ce0;
reg    b_copy_4_we0;
reg   [3:0] b_copy_5_address0;
reg    b_copy_5_ce0;
reg    b_copy_5_we0;
reg   [3:0] b_copy_6_address0;
reg    b_copy_6_ce0;
reg    b_copy_6_we0;
reg   [3:0] b_copy_7_address0;
reg    b_copy_7_ce0;
reg    b_copy_7_we0;
reg   [3:0] b_copy_8_address0;
reg    b_copy_8_ce0;
reg    b_copy_8_we0;
reg   [3:0] b_copy_9_address0;
reg    b_copy_9_ce0;
reg    b_copy_9_we0;
reg   [3:0] b_copy_10_address0;
reg    b_copy_10_ce0;
reg    b_copy_10_we0;
reg   [3:0] b_copy_11_address0;
reg    b_copy_11_ce0;
reg    b_copy_11_we0;
reg   [3:0] b_copy_12_address0;
reg    b_copy_12_ce0;
reg    b_copy_12_we0;
reg   [3:0] b_copy_13_address0;
reg    b_copy_13_ce0;
reg    b_copy_13_we0;
reg   [3:0] b_copy_14_address0;
reg    b_copy_14_ce0;
reg    b_copy_14_we0;
reg   [3:0] b_copy_15_address0;
reg    b_copy_15_ce0;
reg    b_copy_15_we0;
reg   [8:0] indvar_flatten_phi_fu_838_p4;
reg   [4:0] i_phi_fu_849_p4;
reg   [4:0] j_phi_fu_860_p4;
wire   [63:0] tmp_39_fu_990_p3;
wire   [63:0] tmp_9_fu_1006_p1;
wire   [63:0] tmp_41_cast_fu_1029_p1;
wire   [63:0] tmp_41_fu_1054_p3;
wire   [63:0] tmp_43_cast_fu_1067_p1;
wire   [63:0] tmp_43_fu_1072_p3;
wire   [63:0] tmp_45_cast_fu_1085_p1;
wire   [0:0] ap_CS_fsm_pp0_stage7;
wire   [63:0] tmp_10_fu_1095_p3;
wire   [63:0] tmp_12_fu_1112_p3;
wire   [63:0] tmp_14_fu_1139_p3;
wire   [63:0] tmp_16_fu_1156_p3;
wire   [63:0] tmp_18_fu_1186_p3;
wire   [63:0] tmp_45_fu_1224_p3;
wire   [63:0] tmp_20_fu_1240_p3;
wire   [63:0] tmp_47_cast_fu_1267_p1;
wire   [63:0] tmp_22_fu_1280_p3;
wire   [63:0] tmp_47_fu_1302_p3;
wire   [63:0] tmp_24_fu_1318_p3;
wire   [63:0] tmp_49_cast_fu_1353_p1;
wire   [63:0] tmp_26_fu_1366_p3;
wire   [63:0] tmp_49_fu_1388_p3;
wire   [63:0] tmp_28_fu_1404_p3;
wire   [63:0] tmp_51_cast_fu_1435_p1;
wire   [63:0] tmp_30_fu_1448_p3;
wire   [63:0] tmp_51_fu_1470_p3;
wire   [63:0] tmp_32_fu_1486_p3;
wire   [63:0] tmp_53_cast_fu_1521_p1;
wire   [63:0] tmp_34_fu_1534_p3;
wire   [63:0] tmp_53_fu_1556_p3;
wire   [63:0] tmp_36_fu_1572_p3;
wire   [63:0] tmp_55_cast_fu_1603_p1;
wire   [63:0] tmp_38_fu_1616_p3;
wire   [63:0] tmp_56_cast_fu_1680_p1;
reg   [31:0] a_row_load_015_fu_134;
reg   [31:0] a_row_load_29_fu_138;
reg   [31:0] a_row_load_28_fu_142;
reg   [31:0] a_row_load_27_fu_146;
reg   [31:0] a_row_load_26_fu_150;
reg   [31:0] a_row_load_25_fu_154;
reg   [31:0] a_row_load_24_fu_158;
reg   [31:0] a_row_load_23_fu_162;
reg   [31:0] a_row_load_22_fu_166;
reg   [31:0] a_row_load_21_fu_170;
reg   [31:0] a_row_load_20_fu_174;
reg   [31:0] a_row_load_19_fu_178;
reg   [31:0] a_row_load_18_fu_182;
reg   [31:0] a_row_load_17_fu_186;
reg   [31:0] a_row_load_16_fu_190;
reg   [31:0] a_row_load_s_fu_194;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] grp_fu_867_p0;
reg   [31:0] grp_fu_867_p1;
reg   [31:0] grp_fu_874_p0;
reg   [31:0] grp_fu_874_p1;
wire   [0:0] exitcond_fu_948_p2;
wire   [4:0] i_1_fu_942_p2;
wire   [0:0] tmp_mid1_fu_962_p2;
wire   [0:0] tmp1_fu_968_p2;
wire   [8:0] tmp_40_fu_1023_p2;
wire   [8:0] tmp_42_fu_1062_p2;
wire   [8:0] tmp_44_fu_1080_p2;
wire   [8:0] tmp_2_fu_1090_p2;
wire   [8:0] tmp_11_fu_1107_p2;
wire   [8:0] tmp_13_fu_1134_p2;
wire   [8:0] tmp_15_fu_1151_p2;
wire   [8:0] tmp_17_fu_1181_p2;
wire   [8:0] tmp_19_fu_1235_p2;
wire   [8:0] tmp_46_fu_1262_p2;
wire   [8:0] tmp_21_fu_1275_p2;
wire   [8:0] tmp_23_fu_1313_p2;
wire   [7:0] tmp_48_fu_1343_p2;
wire  signed [8:0] tmp_49_cast8_fu_1349_p1;
wire   [8:0] tmp_25_fu_1361_p2;
wire   [8:0] tmp_27_fu_1399_p2;
wire   [7:0] tmp_50_fu_1426_p2;
wire  signed [8:0] tmp_51_cast7_fu_1431_p1;
wire   [8:0] tmp_29_fu_1443_p2;
wire   [8:0] tmp_31_fu_1481_p2;
wire   [6:0] tmp_8_cast_cast9_fu_1508_p1;
wire   [6:0] tmp_52_fu_1511_p2;
wire  signed [8:0] tmp_53_cast6_fu_1517_p1;
wire   [8:0] tmp_33_fu_1529_p2;
wire   [8:0] tmp_35_fu_1567_p2;
wire   [9:0] tmp_8_cast5_fu_1594_p1;
wire   [9:0] tmp_54_fu_1597_p2;
wire   [8:0] tmp_37_fu_1611_p2;
wire   [9:0] tmp_1_fu_1658_p4;
wire   [10:0] tmp_2_cast_fu_1667_p1;
wire   [10:0] tmp_7_cast_fu_1671_p1;
wire   [10:0] tmp_55_fu_1674_p2;
wire   [0:0] ap_CS_fsm_state75;
reg   [66:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 67'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_0_address0),
    .ce0(b_copy_0_ce0),
    .we0(b_copy_0_we0),
    .d0(a_Dout_A),
    .q0(b_copy_0_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_1_address0),
    .ce0(b_copy_1_ce0),
    .we0(b_copy_1_we0),
    .d0(a_Dout_A),
    .q0(b_copy_1_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_2_address0),
    .ce0(b_copy_2_ce0),
    .we0(b_copy_2_we0),
    .d0(a_Dout_A),
    .q0(b_copy_2_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_3_address0),
    .ce0(b_copy_3_ce0),
    .we0(b_copy_3_we0),
    .d0(a_Dout_A),
    .q0(b_copy_3_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_4_address0),
    .ce0(b_copy_4_ce0),
    .we0(b_copy_4_we0),
    .d0(a_Dout_A),
    .q0(b_copy_4_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_5_address0),
    .ce0(b_copy_5_ce0),
    .we0(b_copy_5_we0),
    .d0(a_Dout_A),
    .q0(b_copy_5_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_6_address0),
    .ce0(b_copy_6_ce0),
    .we0(b_copy_6_we0),
    .d0(a_Dout_A),
    .q0(b_copy_6_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_7_address0),
    .ce0(b_copy_7_ce0),
    .we0(b_copy_7_we0),
    .d0(a_Dout_A),
    .q0(b_copy_7_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_8_address0),
    .ce0(b_copy_8_ce0),
    .we0(b_copy_8_we0),
    .d0(a_Dout_A),
    .q0(b_copy_8_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_9_address0),
    .ce0(b_copy_9_ce0),
    .we0(b_copy_9_we0),
    .d0(a_Dout_A),
    .q0(b_copy_9_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_10_address0),
    .ce0(b_copy_10_ce0),
    .we0(b_copy_10_we0),
    .d0(a_Dout_A),
    .q0(b_copy_10_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_11_address0),
    .ce0(b_copy_11_ce0),
    .we0(b_copy_11_we0),
    .d0(a_Dout_A),
    .q0(b_copy_11_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_12_address0),
    .ce0(b_copy_12_ce0),
    .we0(b_copy_12_we0),
    .d0(a_Dout_A),
    .q0(b_copy_12_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_13_address0),
    .ce0(b_copy_13_ce0),
    .we0(b_copy_13_we0),
    .d0(a_Dout_A),
    .q0(b_copy_13_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_14_address0),
    .ce0(b_copy_14_ce0),
    .we0(b_copy_14_we0),
    .d0(a_Dout_A),
    .q0(b_copy_14_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_15_address0),
    .ce0(b_copy_15_ce0),
    .we0(b_copy_15_we0),
    .d0(a_Dout_A),
    .q0(b_copy_15_q0)
);

matmul_hw_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_867_p0),
    .din1(grp_fu_867_p1),
    .ce(1'b1),
    .dout(grp_fu_867_p2)
);

matmul_hw_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_874_p0),
    .din1(grp_fu_874_p1),
    .ce(1'b1),
    .dout(grp_fu_874_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_930_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage64))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage64) & ~(exitcond_flatten_reg_1781 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_845 <= tmp_2_mid2_v_v_v_reg_1814;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_845 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_834 <= indvar_flatten_next_reg_1785;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_834 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_856 <= j_1_reg_2330;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_856 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_load_015_fu_134 <= a_row_load_fu_1041_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
        a_row_load_15_reg_2310 <= a_row_load_15_fu_1641_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage32))) begin
        a_row_load_16_fu_190 <= a_row_load_14_fu_1625_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        a_row_load_17_fu_186 <= a_row_load_13_fu_1581_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        a_row_load_18_fu_182 <= a_row_load_12_fu_1543_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        a_row_load_19_fu_178 <= a_row_load_11_fu_1495_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        a_row_load_20_fu_174 <= a_row_load_10_fu_1457_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        a_row_load_21_fu_170 <= a_row_load_9_fu_1413_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        a_row_load_22_fu_166 <= a_row_load_8_fu_1375_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        a_row_load_23_fu_162 <= a_row_load_7_fu_1327_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        a_row_load_24_fu_158 <= a_row_load_6_fu_1289_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        a_row_load_25_fu_154 <= a_row_load_5_fu_1249_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        a_row_load_26_fu_150 <= a_row_load_4_fu_1211_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        a_row_load_27_fu_146 <= a_row_load_3_fu_1195_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_load_28_fu_142 <= a_row_load_2_fu_1165_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_row_load_29_fu_138 <= a_row_load_1_fu_1121_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
        a_row_load_s_fu_194 <= a_row_load_15_fu_1641_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1781 <= exitcond_flatten_reg_1781;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1790 <= j_mid2_reg_1790;
        ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1814 <= tmp_2_mid2_v_v_v_reg_1814;
        exitcond_flatten_reg_1781 <= exitcond_flatten_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1785 <= indvar_flatten_next_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage64))) begin
        j_1_reg_2330 <= j_1_fu_1653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_930_p2))) begin
        j_mid2_reg_1790 <= j_mid2_fu_954_p3;
        tmp_mid2_reg_1810 <= tmp_mid2_fu_974_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~(1'b0 == tmp_5_reg_1869)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_5_reg_1869) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        reg_895 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage29)))) begin
        reg_899 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage52)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage56)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage60)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage64)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1781)))) begin
        reg_905 <= grp_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        reg_910 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage25)))) begin
        reg_915 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage33)))) begin
        reg_920 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage37)))) begin
        reg_925 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        tmp_11_11_reg_2285 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage35))) begin
        tmp_11_13_reg_2325 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp_11_8_reg_2175 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        tmp_11_s_reg_2230 <= grp_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_930_p2))) begin
        tmp_2_mid2_v_v_v_reg_1814 <= tmp_2_mid2_v_v_v_fu_982_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_3_reg_1826[8 : 4] <= tmp_3_fu_999_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1781 == 1'b0))) begin
        tmp_5_reg_1869 <= tmp_5_fu_1015_p2;
        tmp_7_reg_1901[4 : 0] <= tmp_7_fu_1034_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        tmp_8_cast_cast_reg_2115[4 : 0] <= tmp_8_cast_cast_fu_1340_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        tmp_8_cast_reg_1889[4 : 0] <= tmp_8_cast_fu_1020_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        tmp_8_reg_1850[4 : 0] <= tmp_8_fu_1011_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_Addr_A_orig = tmp_56_cast_fu_1680_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage32))) begin
        a_Addr_A_orig = tmp_38_fu_1616_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        a_Addr_A_orig = tmp_55_cast_fu_1603_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        a_Addr_A_orig = tmp_36_fu_1572_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        a_Addr_A_orig = tmp_53_fu_1556_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        a_Addr_A_orig = tmp_34_fu_1534_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        a_Addr_A_orig = tmp_53_cast_fu_1521_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        a_Addr_A_orig = tmp_32_fu_1486_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        a_Addr_A_orig = tmp_51_fu_1470_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        a_Addr_A_orig = tmp_30_fu_1448_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        a_Addr_A_orig = tmp_51_cast_fu_1435_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        a_Addr_A_orig = tmp_28_fu_1404_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        a_Addr_A_orig = tmp_49_fu_1388_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        a_Addr_A_orig = tmp_26_fu_1366_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        a_Addr_A_orig = tmp_49_cast_fu_1353_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        a_Addr_A_orig = tmp_24_fu_1318_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        a_Addr_A_orig = tmp_47_fu_1302_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        a_Addr_A_orig = tmp_22_fu_1280_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        a_Addr_A_orig = tmp_47_cast_fu_1267_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        a_Addr_A_orig = tmp_20_fu_1240_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        a_Addr_A_orig = tmp_45_fu_1224_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        a_Addr_A_orig = tmp_18_fu_1186_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_Addr_A_orig = tmp_16_fu_1156_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_Addr_A_orig = tmp_14_fu_1139_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_Addr_A_orig = tmp_12_fu_1112_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        a_Addr_A_orig = tmp_10_fu_1095_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_Addr_A_orig = tmp_45_cast_fu_1085_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_Addr_A_orig = tmp_43_fu_1072_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_Addr_A_orig = tmp_43_cast_fu_1067_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_Addr_A_orig = tmp_41_fu_1054_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_Addr_A_orig = tmp_41_cast_fu_1029_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_Addr_A_orig = tmp_9_fu_1006_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_Addr_A_orig = tmp_39_fu_990_p3;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1781) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_0_address0 = tmp_7_fu_1034_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_0_address0 = tmp_8_fu_1011_p1;
        end else begin
            b_copy_0_address0 = 'bx;
        end
    end else begin
        b_copy_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_copy_0_ce0 = 1'b1;
    end else begin
        b_copy_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_0_we0 = 1'b1;
    end else begin
        b_copy_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage23)) begin
            b_copy_10_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            b_copy_10_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_10_address0 = 'bx;
        end
    end else begin
        b_copy_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)))) begin
        b_copy_10_ce0 = 1'b1;
    end else begin
        b_copy_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        b_copy_10_we0 = 1'b1;
    end else begin
        b_copy_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage25)) begin
            b_copy_11_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage24)) begin
            b_copy_11_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_11_address0 = 'bx;
        end
    end else begin
        b_copy_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)))) begin
        b_copy_11_ce0 = 1'b1;
    end else begin
        b_copy_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage24) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_11_we0 = 1'b1;
    end else begin
        b_copy_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage27)) begin
            b_copy_12_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage26)) begin
            b_copy_12_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_12_address0 = 'bx;
        end
    end else begin
        b_copy_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        b_copy_12_ce0 = 1'b1;
    end else begin
        b_copy_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        b_copy_12_we0 = 1'b1;
    end else begin
        b_copy_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage29)) begin
            b_copy_13_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage28)) begin
            b_copy_13_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_13_address0 = 'bx;
        end
    end else begin
        b_copy_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)))) begin
        b_copy_13_ce0 = 1'b1;
    end else begin
        b_copy_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage28) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_13_we0 = 1'b1;
    end else begin
        b_copy_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage31)) begin
            b_copy_14_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage30)) begin
            b_copy_14_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_14_address0 = 'bx;
        end
    end else begin
        b_copy_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)))) begin
        b_copy_14_ce0 = 1'b1;
    end else begin
        b_copy_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        b_copy_14_we0 = 1'b1;
    end else begin
        b_copy_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage33)) begin
            b_copy_15_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage32)) begin
            b_copy_15_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_15_address0 = 'bx;
        end
    end else begin
        b_copy_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage33)))) begin
        b_copy_15_ce0 = 1'b1;
    end else begin
        b_copy_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage32) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_15_we0 = 1'b1;
    end else begin
        b_copy_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_1_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_1_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_1_address0 = 'bx;
        end
    end else begin
        b_copy_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        b_copy_1_ce0 = 1'b1;
    end else begin
        b_copy_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_1_we0 = 1'b1;
    end else begin
        b_copy_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_copy_2_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_2_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_2_address0 = 'bx;
        end
    end else begin
        b_copy_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        b_copy_2_ce0 = 1'b1;
    end else begin
        b_copy_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_copy_2_we0 = 1'b1;
    end else begin
        b_copy_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_copy_3_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_3_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_3_address0 = 'bx;
        end
    end else begin
        b_copy_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_3_ce0 = 1'b1;
    end else begin
        b_copy_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_3_we0 = 1'b1;
    end else begin
        b_copy_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_copy_4_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_4_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_4_address0 = 'bx;
        end
    end else begin
        b_copy_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_4_ce0 = 1'b1;
    end else begin
        b_copy_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_4_we0 = 1'b1;
    end else begin
        b_copy_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_copy_5_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_5_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_5_address0 = 'bx;
        end
    end else begin
        b_copy_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        b_copy_5_ce0 = 1'b1;
    end else begin
        b_copy_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_copy_5_we0 = 1'b1;
    end else begin
        b_copy_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_copy_6_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_copy_6_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_6_address0 = 'bx;
        end
    end else begin
        b_copy_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        b_copy_6_ce0 = 1'b1;
    end else begin
        b_copy_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_6_we0 = 1'b1;
    end else begin
        b_copy_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage17)) begin
            b_copy_7_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            b_copy_7_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_7_address0 = 'bx;
        end
    end else begin
        b_copy_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)))) begin
        b_copy_7_ce0 = 1'b1;
    end else begin
        b_copy_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_7_we0 = 1'b1;
    end else begin
        b_copy_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage19)) begin
            b_copy_8_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            b_copy_8_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_8_address0 = 'bx;
        end
    end else begin
        b_copy_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        b_copy_8_ce0 = 1'b1;
    end else begin
        b_copy_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1810) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        b_copy_8_we0 = 1'b1;
    end else begin
        b_copy_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage21)) begin
            b_copy_9_address0 = tmp_7_reg_1901;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            b_copy_9_address0 = tmp_8_reg_1850;
        end else begin
            b_copy_9_address0 = 'bx;
        end
    end else begin
        b_copy_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)))) begin
        b_copy_9_ce0 = 1'b1;
    end else begin
        b_copy_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20) & ~(1'b0 == tmp_mid2_reg_1810))) begin
        b_copy_9_we0 = 1'b1;
    end else begin
        b_copy_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage36)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage40)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage44)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage48)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage52)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage56)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage60)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage64)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_867_p0 = grp_fu_867_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_867_p0 = reg_905;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_867_p0 = reg_899;
    end else begin
        grp_fu_867_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage64))) begin
        grp_fu_867_p1 = tmp_11_13_reg_2325;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage56))) begin
        grp_fu_867_p1 = tmp_11_11_reg_2285;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage48))) begin
        grp_fu_867_p1 = tmp_11_s_reg_2230;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage40))) begin
        grp_fu_867_p1 = tmp_11_8_reg_2175;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_867_p1 = reg_925;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage60)))) begin
        grp_fu_867_p1 = reg_920;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage52)))) begin
        grp_fu_867_p1 = reg_899;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage44)))) begin
        grp_fu_867_p1 = reg_915;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage36)))) begin
        grp_fu_867_p1 = reg_910;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_867_p1 = grp_fu_874_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_867_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_867_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage34)) begin
            grp_fu_874_p0 = a_row_load_15_reg_2310;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage32)) begin
            grp_fu_874_p0 = a_row_load_14_fu_1625_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage30)) begin
            grp_fu_874_p0 = a_row_load_13_fu_1581_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage28)) begin
            grp_fu_874_p0 = a_row_load_12_fu_1543_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage26)) begin
            grp_fu_874_p0 = a_row_load_11_fu_1495_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage24)) begin
            grp_fu_874_p0 = a_row_load_10_fu_1457_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            grp_fu_874_p0 = a_row_load_9_fu_1413_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            grp_fu_874_p0 = a_row_load_8_fu_1375_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            grp_fu_874_p0 = a_row_load_7_fu_1327_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            grp_fu_874_p0 = a_row_load_6_fu_1289_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            grp_fu_874_p0 = a_row_load_5_fu_1249_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            grp_fu_874_p0 = a_row_load_4_fu_1211_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_874_p0 = a_row_load_3_fu_1195_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_874_p0 = a_row_load_2_fu_1165_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_874_p0 = a_row_load_1_fu_1121_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_874_p0 = a_row_load_fu_1041_p3;
        end else begin
            grp_fu_874_p0 = 'bx;
        end
    end else begin
        grp_fu_874_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage34)) begin
            grp_fu_874_p1 = b_copy_15_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage32)) begin
            grp_fu_874_p1 = b_copy_14_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage30)) begin
            grp_fu_874_p1 = b_copy_13_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage28)) begin
            grp_fu_874_p1 = b_copy_12_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage26)) begin
            grp_fu_874_p1 = b_copy_11_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage24)) begin
            grp_fu_874_p1 = b_copy_10_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            grp_fu_874_p1 = b_copy_9_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            grp_fu_874_p1 = b_copy_8_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            grp_fu_874_p1 = b_copy_7_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            grp_fu_874_p1 = b_copy_6_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            grp_fu_874_p1 = b_copy_5_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            grp_fu_874_p1 = b_copy_4_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_874_p1 = b_copy_3_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_874_p1 = b_copy_2_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_874_p1 = b_copy_1_q0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_874_p1 = b_copy_0_q0;
        end else begin
            grp_fu_874_p1 = 'bx;
        end
    end else begin
        grp_fu_874_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_849_p4 = tmp_2_mid2_v_v_v_reg_1814;
    end else begin
        i_phi_fu_849_p4 = i_reg_845;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_838_p4 = indvar_flatten_next_reg_1785;
    end else begin
        indvar_flatten_phi_fu_838_p4 = indvar_flatten_reg_834;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1781 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_860_p4 = j_1_reg_2330;
    end else begin
        j_phi_fu_860_p4 = j_reg_856;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_930_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage16;
        end
        ap_ST_fsm_pp0_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage17;
        end
        ap_ST_fsm_pp0_stage17 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage18;
        end
        ap_ST_fsm_pp0_stage18 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage19;
        end
        ap_ST_fsm_pp0_stage19 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage20;
        end
        ap_ST_fsm_pp0_stage20 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage21;
        end
        ap_ST_fsm_pp0_stage21 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage22;
        end
        ap_ST_fsm_pp0_stage22 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage23;
        end
        ap_ST_fsm_pp0_stage23 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage24;
        end
        ap_ST_fsm_pp0_stage24 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage25;
        end
        ap_ST_fsm_pp0_stage25 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage26;
        end
        ap_ST_fsm_pp0_stage26 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage27;
        end
        ap_ST_fsm_pp0_stage27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage28;
        end
        ap_ST_fsm_pp0_stage28 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage29;
        end
        ap_ST_fsm_pp0_stage29 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage30;
        end
        ap_ST_fsm_pp0_stage30 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage31;
        end
        ap_ST_fsm_pp0_stage31 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage32;
        end
        ap_ST_fsm_pp0_stage32 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage33;
        end
        ap_ST_fsm_pp0_stage33 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage34;
        end
        ap_ST_fsm_pp0_stage34 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage35;
        end
        ap_ST_fsm_pp0_stage35 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage36;
        end
        ap_ST_fsm_pp0_stage36 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage37;
        end
        ap_ST_fsm_pp0_stage37 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage38;
        end
        ap_ST_fsm_pp0_stage38 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage39;
        end
        ap_ST_fsm_pp0_stage39 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage40;
        end
        ap_ST_fsm_pp0_stage40 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage41;
        end
        ap_ST_fsm_pp0_stage41 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage42;
        end
        ap_ST_fsm_pp0_stage42 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage43;
        end
        ap_ST_fsm_pp0_stage43 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage44;
        end
        ap_ST_fsm_pp0_stage44 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage45;
        end
        ap_ST_fsm_pp0_stage45 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage46;
        end
        ap_ST_fsm_pp0_stage46 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage47;
        end
        ap_ST_fsm_pp0_stage47 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage48;
        end
        ap_ST_fsm_pp0_stage48 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage49;
        end
        ap_ST_fsm_pp0_stage49 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage50;
        end
        ap_ST_fsm_pp0_stage50 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage51;
        end
        ap_ST_fsm_pp0_stage51 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage52;
        end
        ap_ST_fsm_pp0_stage52 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage53;
        end
        ap_ST_fsm_pp0_stage53 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage54;
        end
        ap_ST_fsm_pp0_stage54 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage55;
        end
        ap_ST_fsm_pp0_stage55 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage56;
        end
        ap_ST_fsm_pp0_stage56 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage57;
        end
        ap_ST_fsm_pp0_stage57 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage58;
        end
        ap_ST_fsm_pp0_stage58 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage59;
        end
        ap_ST_fsm_pp0_stage59 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage60;
        end
        ap_ST_fsm_pp0_stage60 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage61;
        end
        ap_ST_fsm_pp0_stage61 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage62;
        end
        ap_ST_fsm_pp0_stage62 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage63;
        end
        ap_ST_fsm_pp0_stage63 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage64;
        end
        ap_ST_fsm_pp0_stage64 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = grp_fu_867_p2;

assign a_Rst_A = ap_rst;

assign a_row_load_10_fu_1457_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_20_fu_174);

assign a_row_load_11_fu_1495_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_19_fu_178);

assign a_row_load_12_fu_1543_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_18_fu_182);

assign a_row_load_13_fu_1581_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_17_fu_186);

assign a_row_load_14_fu_1625_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_16_fu_190);

assign a_row_load_15_fu_1641_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? a_Dout_A : a_row_load_s_fu_194);

assign a_row_load_1_fu_1121_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? a_Dout_A : a_row_load_29_fu_138);

assign a_row_load_2_fu_1165_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_28_fu_142);

assign a_row_load_3_fu_1195_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_27_fu_146);

assign a_row_load_4_fu_1211_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_26_fu_150);

assign a_row_load_5_fu_1249_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_25_fu_154);

assign a_row_load_6_fu_1289_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_24_fu_158);

assign a_row_load_7_fu_1327_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_23_fu_162);

assign a_row_load_8_fu_1375_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_22_fu_166);

assign a_row_load_9_fu_1413_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_21_fu_170);

assign a_row_load_fu_1041_p3 = ((tmp_5_reg_1869[0:0] === 1'b1) ? reg_895 : a_row_load_015_fu_134);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[ap_const_lv32_2D];

assign ap_CS_fsm_pp0_stage48 = ap_CS_fsm[ap_const_lv32_31];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage52 = ap_CS_fsm[ap_const_lv32_35];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[ap_const_lv32_39];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage60 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_pp0_stage64 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state75 = ap_CS_fsm[ap_const_lv32_42];

assign exitcond_flatten_fu_930_p2 = ((indvar_flatten_phi_fu_838_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_948_p2 = ((j_phi_fu_860_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign i_1_fu_942_p2 = (i_phi_fu_849_p4 + ap_const_lv5_1);

assign indvar_flatten_next_fu_936_p2 = (indvar_flatten_phi_fu_838_p4 + ap_const_lv9_1);

assign j_1_fu_1653_p2 = (j_mid2_reg_1790 + ap_const_lv5_1);

assign j_mid2_fu_954_p3 = ((exitcond_fu_948_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_phi_fu_860_p4);

assign tmp1_fu_968_p2 = ((i_phi_fu_849_p4 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_10_fu_1095_p3 = {{ap_const_lv55_0}, {tmp_2_fu_1090_p2}};

assign tmp_11_fu_1107_p2 = (tmp_3_reg_1826 | ap_const_lv9_2);

assign tmp_12_fu_1112_p3 = {{ap_const_lv55_0}, {tmp_11_fu_1107_p2}};

assign tmp_13_fu_1134_p2 = (tmp_3_reg_1826 | ap_const_lv9_3);

assign tmp_14_fu_1139_p3 = {{ap_const_lv55_0}, {tmp_13_fu_1134_p2}};

assign tmp_15_fu_1151_p2 = (tmp_3_reg_1826 | ap_const_lv9_4);

assign tmp_16_fu_1156_p3 = {{ap_const_lv55_0}, {tmp_15_fu_1151_p2}};

assign tmp_17_fu_1181_p2 = (tmp_3_reg_1826 | ap_const_lv9_5);

assign tmp_18_fu_1186_p3 = {{ap_const_lv55_0}, {tmp_17_fu_1181_p2}};

assign tmp_19_fu_1235_p2 = (tmp_3_reg_1826 | ap_const_lv9_6);

assign tmp_1_fu_1658_p4 = {{{{1'b1}, {ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1814}}}, {ap_const_lv4_0}};

assign tmp_20_fu_1240_p3 = {{ap_const_lv55_0}, {tmp_19_fu_1235_p2}};

assign tmp_21_fu_1275_p2 = (tmp_3_reg_1826 | ap_const_lv9_7);

assign tmp_22_fu_1280_p3 = {{ap_const_lv55_0}, {tmp_21_fu_1275_p2}};

assign tmp_23_fu_1313_p2 = (tmp_3_reg_1826 | ap_const_lv9_8);

assign tmp_24_fu_1318_p3 = {{ap_const_lv55_0}, {tmp_23_fu_1313_p2}};

assign tmp_25_fu_1361_p2 = (tmp_3_reg_1826 | ap_const_lv9_9);

assign tmp_26_fu_1366_p3 = {{ap_const_lv55_0}, {tmp_25_fu_1361_p2}};

assign tmp_27_fu_1399_p2 = (tmp_3_reg_1826 | ap_const_lv9_A);

assign tmp_28_fu_1404_p3 = {{ap_const_lv55_0}, {tmp_27_fu_1399_p2}};

assign tmp_29_fu_1443_p2 = (tmp_3_reg_1826 | ap_const_lv9_B);

assign tmp_2_cast_fu_1667_p1 = tmp_1_fu_1658_p4;

assign tmp_2_fu_1090_p2 = (tmp_3_reg_1826 | ap_const_lv9_1);

assign tmp_2_mid2_v_v_v_fu_982_p3 = ((exitcond_fu_948_p2[0:0] === 1'b1) ? i_1_fu_942_p2 : i_phi_fu_849_p4);

assign tmp_30_fu_1448_p3 = {{ap_const_lv55_0}, {tmp_29_fu_1443_p2}};

assign tmp_31_fu_1481_p2 = (tmp_3_reg_1826 | ap_const_lv9_C);

assign tmp_32_fu_1486_p3 = {{ap_const_lv55_0}, {tmp_31_fu_1481_p2}};

assign tmp_33_fu_1529_p2 = (tmp_3_reg_1826 | ap_const_lv9_D);

assign tmp_34_fu_1534_p3 = {{ap_const_lv55_0}, {tmp_33_fu_1529_p2}};

assign tmp_35_fu_1567_p2 = (tmp_3_reg_1826 | ap_const_lv9_E);

assign tmp_36_fu_1572_p3 = {{ap_const_lv55_0}, {tmp_35_fu_1567_p2}};

assign tmp_37_fu_1611_p2 = (tmp_3_reg_1826 | ap_const_lv9_F);

assign tmp_38_fu_1616_p3 = {{ap_const_lv55_0}, {tmp_37_fu_1611_p2}};

assign tmp_39_fu_990_p3 = {{ap_const_lv59_8}, {j_mid2_fu_954_p3}};

assign tmp_3_fu_999_p3 = {{tmp_2_mid2_v_v_v_reg_1814}, {ap_const_lv4_0}};

assign tmp_40_fu_1023_p2 = ($signed(tmp_8_cast_fu_1020_p1) + $signed(ap_const_lv9_110));

assign tmp_41_cast_fu_1029_p1 = tmp_40_fu_1023_p2;

assign tmp_41_fu_1054_p3 = {{ap_const_lv59_9}, {j_mid2_reg_1790}};

assign tmp_42_fu_1062_p2 = ($signed(tmp_8_cast_reg_1889) + $signed(ap_const_lv9_130));

assign tmp_43_cast_fu_1067_p1 = tmp_42_fu_1062_p2;

assign tmp_43_fu_1072_p3 = {{ap_const_lv59_A}, {j_mid2_reg_1790}};

assign tmp_44_fu_1080_p2 = ($signed(tmp_8_cast_reg_1889) + $signed(ap_const_lv9_150));

assign tmp_45_cast_fu_1085_p1 = tmp_44_fu_1080_p2;

assign tmp_45_fu_1224_p3 = {{ap_const_lv59_B}, {j_mid2_reg_1790}};

assign tmp_46_fu_1262_p2 = ($signed(tmp_8_cast_reg_1889) + $signed(ap_const_lv9_170));

assign tmp_47_cast_fu_1267_p1 = tmp_46_fu_1262_p2;

assign tmp_47_fu_1302_p3 = {{ap_const_lv59_C}, {j_mid2_reg_1790}};

assign tmp_48_fu_1343_p2 = ($signed(tmp_8_cast_cast_fu_1340_p1) + $signed(ap_const_lv8_90));

assign tmp_49_cast8_fu_1349_p1 = $signed(tmp_48_fu_1343_p2);

assign tmp_49_cast_fu_1353_p1 = $unsigned(tmp_49_cast8_fu_1349_p1);

assign tmp_49_fu_1388_p3 = {{ap_const_lv59_D}, {j_mid2_reg_1790}};

assign tmp_50_fu_1426_p2 = ($signed(tmp_8_cast_cast_reg_2115) + $signed(ap_const_lv8_B0));

assign tmp_51_cast7_fu_1431_p1 = $signed(tmp_50_fu_1426_p2);

assign tmp_51_cast_fu_1435_p1 = $unsigned(tmp_51_cast7_fu_1431_p1);

assign tmp_51_fu_1470_p3 = {{ap_const_lv59_E}, {j_mid2_reg_1790}};

assign tmp_52_fu_1511_p2 = ($signed(tmp_8_cast_cast9_fu_1508_p1) + $signed(ap_const_lv7_50));

assign tmp_53_cast6_fu_1517_p1 = $signed(tmp_52_fu_1511_p2);

assign tmp_53_cast_fu_1521_p1 = $unsigned(tmp_53_cast6_fu_1517_p1);

assign tmp_53_fu_1556_p3 = {{ap_const_lv59_F}, {j_mid2_reg_1790}};

assign tmp_54_fu_1597_p2 = (tmp_8_cast5_fu_1594_p1 + ap_const_lv10_1F0);

assign tmp_55_cast_fu_1603_p1 = tmp_54_fu_1597_p2;

assign tmp_55_fu_1674_p2 = (tmp_2_cast_fu_1667_p1 + tmp_7_cast_fu_1671_p1);

assign tmp_56_cast_fu_1680_p1 = tmp_55_fu_1674_p2;

assign tmp_5_fu_1015_p2 = ((j_mid2_reg_1790 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_7_cast_fu_1671_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_1790;

assign tmp_7_fu_1034_p1 = j_mid2_reg_1790;

assign tmp_8_cast5_fu_1594_p1 = j_mid2_reg_1790;

assign tmp_8_cast_cast9_fu_1508_p1 = j_mid2_reg_1790;

assign tmp_8_cast_cast_fu_1340_p1 = j_mid2_reg_1790;

assign tmp_8_cast_fu_1020_p1 = j_mid2_reg_1790;

assign tmp_8_fu_1011_p1 = j_mid2_reg_1790;

assign tmp_9_fu_1006_p1 = tmp_3_fu_999_p3;

assign tmp_mid1_fu_962_p2 = ((i_1_fu_942_p2 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_974_p3 = ((exitcond_fu_948_p2[0:0] === 1'b1) ? tmp_mid1_fu_962_p2 : tmp1_fu_968_p2);

always @ (posedge ap_clk) begin
    tmp_3_reg_1826[3:0] <= 4'b0000;
    tmp_8_reg_1850[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_8_cast_reg_1889[8:5] <= 4'b0000;
    tmp_7_reg_1901[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_8_cast_cast_reg_2115[7:5] <= 3'b000;
end

endmodule //matmul_hw
