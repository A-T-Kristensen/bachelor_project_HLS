

================================================================
== Vivado HLS Report for 'matmul_hw'
================================================================
* Date:           Mon Apr 24 21:00:20 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul_int
* Solution:       matmul_1b_4x4
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.02|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  258|  258|  259|  259|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- L_col   |  256|  256|        16|         16|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 16, depth = 16


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 1
  Pipeline-0: II = 16, D = 16, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	18  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	2  / true
18 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_0_2 (2)  [1/1] 0.00ns
:0  %a_row_0_2 = alloca i32

ST_1: a_row_1_2 (3)  [1/1] 0.00ns
:1  %a_row_1_2 = alloca i32

ST_1: a_row_2_2 (4)  [1/1] 0.00ns
:2  %a_row_2_2 = alloca i32

ST_1: a_row_3_2 (5)  [1/1] 0.00ns
:3  %a_row_3_2 = alloca i32

ST_1: b_copy_0_3_11 (6)  [1/1] 0.00ns
:4  %b_copy_0_3_11 = alloca i32

ST_1: b_copy_0_3_8 (7)  [1/1] 0.00ns
:5  %b_copy_0_3_8 = alloca i32

ST_1: b_copy_0_3_12 (8)  [1/1] 0.00ns
:6  %b_copy_0_3_12 = alloca i32

ST_1: b_copy_0_3_1 (9)  [1/1] 0.00ns
:7  %b_copy_0_3_1 = alloca i32

ST_1: b_copy_1_3_11 (10)  [1/1] 0.00ns
:8  %b_copy_1_3_11 = alloca i32

ST_1: b_copy_1_3_8 (11)  [1/1] 0.00ns
:9  %b_copy_1_3_8 = alloca i32

ST_1: b_copy_1_3_12 (12)  [1/1] 0.00ns
:10  %b_copy_1_3_12 = alloca i32

ST_1: b_copy_1_3_1 (13)  [1/1] 0.00ns
:11  %b_copy_1_3_1 = alloca i32

ST_1: b_copy_2_3_11 (14)  [1/1] 0.00ns
:12  %b_copy_2_3_11 = alloca i32

ST_1: b_copy_2_3_8 (15)  [1/1] 0.00ns
:13  %b_copy_2_3_8 = alloca i32

ST_1: b_copy_2_3_12 (16)  [1/1] 0.00ns
:14  %b_copy_2_3_12 = alloca i32

ST_1: b_copy_2_3_1 (17)  [1/1] 0.00ns
:15  %b_copy_2_3_1 = alloca i32

ST_1: b_copy_3_3_11 (18)  [1/1] 0.00ns
:16  %b_copy_3_3_11 = alloca i32

ST_1: b_copy_3_3_8 (19)  [1/1] 0.00ns
:17  %b_copy_3_3_8 = alloca i32

ST_1: b_copy_3_3_12 (20)  [1/1] 0.00ns
:18  %b_copy_3_3_12 = alloca i32

ST_1: b_copy_3_3_1 (21)  [1/1] 0.00ns
:19  %b_copy_3_3_1 = alloca i32

ST_1: StgValue_39 (22)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([48 x i32]* %a) nounwind, !map !7

ST_1: StgValue_40 (23)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matmul_hw_str) nounwind

ST_1: StgValue_41 (24)  [1/1] 0.00ns  loc: matmul.cpp:6
:22  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_42 (25)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface([48 x i32]* %a, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_43 (26)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecMemCore([48 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_44 (27)  [1/1] 1.57ns  loc: matmul.cpp:19
:25  br label %.preheader7


 <State 2>: 6.02ns
ST_2: indvar_flatten (29)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i5 [ 0, %0 ], [ %indvar_flatten_next, %.preheader7.preheader ]

ST_2: i (30)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7:1  %i = phi i3 [ 0, %0 ], [ %tmp_2_mid2_v_v_v, %.preheader7.preheader ]

ST_2: j (31)  [1/1] 0.00ns
.preheader7:2  %j = phi i3 [ 0, %0 ], [ %j_1, %.preheader7.preheader ]

ST_2: exitcond_flatten (32)  [1/1] 2.37ns
.preheader7:3  %exitcond_flatten = icmp eq i5 %indvar_flatten, -16

ST_2: indvar_flatten_next (33)  [1/1] 1.67ns
.preheader7:4  %indvar_flatten_next = add i5 %indvar_flatten, 1

ST_2: StgValue_50 (34)  [1/1] 0.00ns
.preheader7:5  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (56)  [1/1] 0.75ns  loc: matmul.cpp:19
.preheader7.preheader:20  %i_1 = add i3 1, %i

ST_2: exitcond (59)  [1/1] 1.94ns  loc: matmul.cpp:20
.preheader7.preheader:23  %exitcond = icmp eq i3 %j, -4

ST_2: tmp_mid1 (61)  [1/1] 1.94ns  loc: matmul.cpp:31
.preheader7.preheader:25  %tmp_mid1 = icmp eq i3 %i_1, 0

ST_2: tmp1 (62)  [1/1] 1.94ns  loc: matmul.cpp:31
.preheader7.preheader:26  %tmp1 = icmp eq i3 %i, 0

ST_2: tmp_mid2 (63)  [1/1] 1.37ns  loc: matmul.cpp:31
.preheader7.preheader:27  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp1

ST_2: tmp_2_mid2_v_v_v (64)  [1/1] 1.37ns  loc: matmul.cpp:41
.preheader7.preheader:28  %tmp_2_mid2_v_v_v = select i1 %exitcond, i3 %i_1, i3 %i

ST_2: tmp_3 (67)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:31  %tmp_3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_2_mid2_v_v_v, i2 0)

ST_2: tmp_2 (68)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:32  %tmp_2 = zext i5 %tmp_3 to i64

ST_2: a_addr (69)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:33  %a_addr = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_2

ST_2: a_row_0 (83)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:47  %a_row_0 = load i32* %a_addr, align 4


 <State 3>: 2.71ns
ST_3: tmp_8 (70)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:34  %tmp_8 = or i5 %tmp_3, 1

ST_3: tmp_11 (71)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:35  %tmp_11 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_8)

ST_3: a_addr_1 (72)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:36  %a_addr_1 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_11

ST_3: a_row_0 (83)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:47  %a_row_0 = load i32* %a_addr, align 4

ST_3: a_row_1 (84)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:48  %a_row_1 = load i32* %a_addr_1, align 4


 <State 4>: 2.71ns
ST_4: tmp_12 (73)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:37  %tmp_12 = or i5 %tmp_3, 2

ST_4: tmp_13 (74)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:38  %tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_12)

ST_4: a_addr_2 (75)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:39  %a_addr_2 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_13

ST_4: a_row_1 (84)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:48  %a_row_1 = load i32* %a_addr_1, align 4

ST_4: a_row_2 (85)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:49  %a_row_2 = load i32* %a_addr_2, align 4


 <State 5>: 2.71ns
ST_5: tmp_14 (76)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:40  %tmp_14 = or i5 %tmp_3, 3

ST_5: tmp_15 (77)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:41  %tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_14)

ST_5: a_addr_3 (78)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:42  %a_addr_3 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_15

ST_5: a_row_2 (85)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:49  %a_row_2 = load i32* %a_addr_2, align 4

ST_5: a_row_3 (86)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:50  %a_row_3 = load i32* %a_addr_3, align 4


 <State 6>: 4.08ns
ST_6: j_mid2 (60)  [1/1] 1.37ns  loc: matmul.cpp:20
.preheader7.preheader:24  %j_mid2 = select i1 %exitcond, i3 0, i3 %j

ST_6: a_row_3 (86)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:50  %a_row_3 = load i32* %a_addr_3, align 4

ST_6: tmp_16 (94)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:58  %tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 2, i3 %j_mid2)

ST_6: a_addr_4 (95)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:59  %a_addr_4 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_16

ST_6: b_copy_0_3_19 (107)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:71  %b_copy_0_3_19 = load i32* %a_addr_4, align 4

ST_6: tmp (108)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:72  %tmp = trunc i3 %j_mid2 to i2


 <State 7>: 7.02ns
ST_7: a_row_0_2_load (36)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_0_2_load = load i32* %a_row_0_2

ST_7: a_row_1_2_load (37)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_1_2_load = load i32* %a_row_1_2

ST_7: a_row_2_2_load (38)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_2_2_load = load i32* %a_row_2_2

ST_7: a_row_3_2_load (39)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_3_2_load = load i32* %a_row_3_2

ST_7: b_copy_0_3_11_load (40)  [1/1] 0.00ns
.preheader7.preheader:4  %b_copy_0_3_11_load = load i32* %b_copy_0_3_11

ST_7: b_copy_0_3_8_load (41)  [1/1] 0.00ns
.preheader7.preheader:5  %b_copy_0_3_8_load = load i32* %b_copy_0_3_8

ST_7: b_copy_0_3_12_load (42)  [1/1] 0.00ns
.preheader7.preheader:6  %b_copy_0_3_12_load = load i32* %b_copy_0_3_12

ST_7: b_copy_0_3_1_load (43)  [1/1] 0.00ns
.preheader7.preheader:7  %b_copy_0_3_1_load = load i32* %b_copy_0_3_1

ST_7: tmp_5 (82)  [1/1] 1.94ns  loc: matmul.cpp:25
.preheader7.preheader:46  %tmp_5 = icmp eq i3 %j_mid2, 0

ST_7: a_row_3_1 (87)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:51  %a_row_3_1 = select i1 %tmp_5, i32 %a_row_3, i32 %a_row_3_2_load

ST_7: a_row_2_1 (88)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:52  %a_row_2_1 = select i1 %tmp_5, i32 %a_row_2, i32 %a_row_2_2_load

ST_7: a_row_1_1 (89)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:53  %a_row_1_1 = select i1 %tmp_5, i32 %a_row_1, i32 %a_row_1_2_load

ST_7: a_row_0_1 (90)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:54  %a_row_0_1 = select i1 %tmp_5, i32 %a_row_0, i32 %a_row_0_2_load

ST_7: tmp_8_cast (93)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:57  %tmp_8_cast = zext i3 %j_mid2 to i5

ST_7: tmp_17 (96)  [1/1] 1.67ns  loc: matmul.cpp:33
.preheader7.preheader:60  %tmp_17 = add i5 -12, %tmp_8_cast

ST_7: tmp_19_cast (97)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:61  %tmp_19_cast = zext i5 %tmp_17 to i64

ST_7: a_addr_5 (98)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:62  %a_addr_5 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_19_cast

ST_7: b_copy_0_3_19 (107)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:71  %b_copy_0_3_19 = load i32* %a_addr_4, align 4

ST_7: sel_tmp (109)  [1/1] 1.54ns  loc: matmul.cpp:20
.preheader7.preheader:73  %sel_tmp = icmp eq i2 %tmp, -2

ST_7: b_copy_0_3 (110)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_4)
.preheader7.preheader:74  %b_copy_0_3 = select i1 %sel_tmp, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3_19

ST_7: sel_tmp2 (111)  [1/1] 1.54ns  loc: matmul.cpp:20
.preheader7.preheader:75  %sel_tmp2 = icmp eq i2 %tmp, 1

ST_7: b_copy_0_3_4 (112)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:76  %b_copy_0_3_4 = select i1 %sel_tmp2, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3

ST_7: sel_tmp4 (113)  [1/1] 1.54ns  loc: matmul.cpp:20
.preheader7.preheader:77  %sel_tmp4 = icmp eq i2 %tmp, 0

ST_7: b_copy_0_3_2 (114)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_3)
.preheader7.preheader:78  %b_copy_0_3_2 = select i1 %sel_tmp4, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3_4

ST_7: b_copy_0_3_5 (115)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_6)
.preheader7.preheader:79  %b_copy_0_3_5 = select i1 %sel_tmp, i32 %b_copy_0_3_19, i32 %b_copy_0_3_12_load

ST_7: b_copy_0_3_6 (116)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:80  %b_copy_0_3_6 = select i1 %sel_tmp2, i32 %b_copy_0_3_12_load, i32 %b_copy_0_3_5

ST_7: b_copy_0_3_7 (117)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_16)
.preheader7.preheader:81  %b_copy_0_3_7 = select i1 %sel_tmp4, i32 %b_copy_0_3_12_load, i32 %b_copy_0_3_6

ST_7: b_copy_0_3_9 (118)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_14)
.preheader7.preheader:82  %b_copy_0_3_9 = select i1 %sel_tmp2, i32 %b_copy_0_3_19, i32 %b_copy_0_3_8_load

ST_7: b_copy_0_3_14 (119)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:83  %b_copy_0_3_14 = select i1 %sel_tmp4, i32 %b_copy_0_3_8_load, i32 %b_copy_0_3_9

ST_7: b_copy_0_3_15 (120)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_0_3_18)
.preheader7.preheader:84  %b_copy_0_3_15 = select i1 %sel_tmp4, i32 %b_copy_0_3_19, i32 %b_copy_0_3_11_load

ST_7: b_copy_1_3_19 (121)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:85  %b_copy_1_3_19 = load i32* %a_addr_5, align 4

ST_7: b_copy_0_3_3 (163)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:127  %b_copy_0_3_3 = select i1 %tmp_mid2, i32 %b_copy_0_3_2, i32 %b_copy_0_3_1_load

ST_7: b_copy_0_3_16 (164)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:128  %b_copy_0_3_16 = select i1 %tmp_mid2, i32 %b_copy_0_3_7, i32 %b_copy_0_3_12_load

ST_7: b_copy_0_3_17 (165)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:129  %b_copy_0_3_17 = select i1 %tmp_mid2, i32 %b_copy_0_3_14, i32 %b_copy_0_3_8_load

ST_7: b_copy_0_3_18 (166)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:130  %b_copy_0_3_18 = select i1 %tmp_mid2, i32 %b_copy_0_3_15, i32 %b_copy_0_3_11_load

ST_7: tmp_6 (167)  [1/1] 1.57ns  loc: matmul.cpp:31
.preheader7.preheader:131  %tmp_6 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_0_3_18, i32 %b_copy_0_3_17, i32 %b_copy_0_3_16, i32 %b_copy_0_3_3, i2 %tmp) nounwind

ST_7: StgValue_118 (193)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:157  store i32 %b_copy_0_3_3, i32* %b_copy_0_3_1

ST_7: StgValue_119 (194)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:158  store i32 %b_copy_0_3_16, i32* %b_copy_0_3_12

ST_7: StgValue_120 (195)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:159  store i32 %b_copy_0_3_17, i32* %b_copy_0_3_8

ST_7: StgValue_121 (196)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:160  store i32 %b_copy_0_3_18, i32* %b_copy_0_3_11

ST_7: StgValue_122 (197)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:161  store i32 %a_row_3_1, i32* %a_row_3_2

ST_7: StgValue_123 (198)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:162  store i32 %a_row_2_1, i32* %a_row_2_2

ST_7: StgValue_124 (199)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:163  store i32 %a_row_1_1, i32* %a_row_1_2

ST_7: StgValue_125 (200)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:164  store i32 %a_row_0_1, i32* %a_row_0_2


 <State 8>: 7.02ns
ST_8: b_copy_1_3_11_load (44)  [1/1] 0.00ns
.preheader7.preheader:8  %b_copy_1_3_11_load = load i32* %b_copy_1_3_11

ST_8: b_copy_1_3_8_load (45)  [1/1] 0.00ns
.preheader7.preheader:9  %b_copy_1_3_8_load = load i32* %b_copy_1_3_8

ST_8: b_copy_1_3_12_load (46)  [1/1] 0.00ns
.preheader7.preheader:10  %b_copy_1_3_12_load = load i32* %b_copy_1_3_12

ST_8: b_copy_1_3_1_load (47)  [1/1] 0.00ns
.preheader7.preheader:11  %b_copy_1_3_1_load = load i32* %b_copy_1_3_1

ST_8: tmp_18 (99)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:63  %tmp_18 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 3, i3 %j_mid2)

ST_8: a_addr_6 (100)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:64  %a_addr_6 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_18

ST_8: b_copy_1_3_19 (121)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:85  %b_copy_1_3_19 = load i32* %a_addr_5, align 4

ST_8: b_copy_1_3 (122)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_4)
.preheader7.preheader:86  %b_copy_1_3 = select i1 %sel_tmp, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3_19

ST_8: b_copy_1_3_4 (123)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:87  %b_copy_1_3_4 = select i1 %sel_tmp2, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3

ST_8: b_copy_1_3_2 (124)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_3)
.preheader7.preheader:88  %b_copy_1_3_2 = select i1 %sel_tmp4, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3_4

ST_8: b_copy_1_3_5 (125)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_6)
.preheader7.preheader:89  %b_copy_1_3_5 = select i1 %sel_tmp, i32 %b_copy_1_3_19, i32 %b_copy_1_3_12_load

ST_8: b_copy_1_3_6 (126)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:90  %b_copy_1_3_6 = select i1 %sel_tmp2, i32 %b_copy_1_3_12_load, i32 %b_copy_1_3_5

ST_8: b_copy_1_3_7 (127)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_16)
.preheader7.preheader:91  %b_copy_1_3_7 = select i1 %sel_tmp4, i32 %b_copy_1_3_12_load, i32 %b_copy_1_3_6

ST_8: b_copy_1_3_9 (128)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_14)
.preheader7.preheader:92  %b_copy_1_3_9 = select i1 %sel_tmp2, i32 %b_copy_1_3_19, i32 %b_copy_1_3_8_load

ST_8: b_copy_1_3_14 (129)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:93  %b_copy_1_3_14 = select i1 %sel_tmp4, i32 %b_copy_1_3_8_load, i32 %b_copy_1_3_9

ST_8: b_copy_1_3_15 (130)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_1_3_18)
.preheader7.preheader:94  %b_copy_1_3_15 = select i1 %sel_tmp4, i32 %b_copy_1_3_19, i32 %b_copy_1_3_11_load

ST_8: b_copy_2_3_19 (131)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:95  %b_copy_2_3_19 = load i32* %a_addr_6, align 4

ST_8: b_copy_1_3_3 (159)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:123  %b_copy_1_3_3 = select i1 %tmp_mid2, i32 %b_copy_1_3_2, i32 %b_copy_1_3_1_load

ST_8: b_copy_1_3_16 (160)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:124  %b_copy_1_3_16 = select i1 %tmp_mid2, i32 %b_copy_1_3_7, i32 %b_copy_1_3_12_load

ST_8: b_copy_1_3_17 (161)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:125  %b_copy_1_3_17 = select i1 %tmp_mid2, i32 %b_copy_1_3_14, i32 %b_copy_1_3_8_load

ST_8: b_copy_1_3_18 (162)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:126  %b_copy_1_3_18 = select i1 %tmp_mid2, i32 %b_copy_1_3_15, i32 %b_copy_1_3_11_load

ST_8: tmp_s (168)  [6/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_8: tmp_7 (169)  [1/1] 1.57ns  loc: matmul.cpp:31
.preheader7.preheader:133  %tmp_7 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_1_3_18, i32 %b_copy_1_3_17, i32 %b_copy_1_3_16, i32 %b_copy_1_3_3, i2 %tmp) nounwind

ST_8: StgValue_149 (189)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:153  store i32 %b_copy_1_3_3, i32* %b_copy_1_3_1

ST_8: StgValue_150 (190)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:154  store i32 %b_copy_1_3_16, i32* %b_copy_1_3_12

ST_8: StgValue_151 (191)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:155  store i32 %b_copy_1_3_17, i32* %b_copy_1_3_8

ST_8: StgValue_152 (192)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:156  store i32 %b_copy_1_3_18, i32* %b_copy_1_3_11


 <State 9>: 7.02ns
ST_9: b_copy_2_3_11_load (48)  [1/1] 0.00ns
.preheader7.preheader:12  %b_copy_2_3_11_load = load i32* %b_copy_2_3_11

ST_9: b_copy_2_3_8_load (49)  [1/1] 0.00ns
.preheader7.preheader:13  %b_copy_2_3_8_load = load i32* %b_copy_2_3_8

ST_9: b_copy_2_3_12_load (50)  [1/1] 0.00ns
.preheader7.preheader:14  %b_copy_2_3_12_load = load i32* %b_copy_2_3_12

ST_9: b_copy_2_3_1_load (51)  [1/1] 0.00ns
.preheader7.preheader:15  %b_copy_2_3_1_load = load i32* %b_copy_2_3_1

ST_9: tmp_8_cast5 (92)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:56  %tmp_8_cast5 = zext i3 %j_mid2 to i6

ST_9: tmp_19 (101)  [1/1] 1.67ns  loc: matmul.cpp:33
.preheader7.preheader:65  %tmp_19 = add i6 28, %tmp_8_cast5

ST_9: tmp_21_cast (102)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:66  %tmp_21_cast = zext i6 %tmp_19 to i64

ST_9: a_addr_7 (103)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:67  %a_addr_7 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_21_cast

ST_9: b_copy_2_3_19 (131)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:95  %b_copy_2_3_19 = load i32* %a_addr_6, align 4

ST_9: b_copy_2_3 (132)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_4)
.preheader7.preheader:96  %b_copy_2_3 = select i1 %sel_tmp, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3_19

ST_9: b_copy_2_3_4 (133)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:97  %b_copy_2_3_4 = select i1 %sel_tmp2, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3

ST_9: b_copy_2_3_2 (134)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_3)
.preheader7.preheader:98  %b_copy_2_3_2 = select i1 %sel_tmp4, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3_4

ST_9: b_copy_2_3_5 (135)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_6)
.preheader7.preheader:99  %b_copy_2_3_5 = select i1 %sel_tmp, i32 %b_copy_2_3_19, i32 %b_copy_2_3_12_load

ST_9: b_copy_2_3_6 (136)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:100  %b_copy_2_3_6 = select i1 %sel_tmp2, i32 %b_copy_2_3_12_load, i32 %b_copy_2_3_5

ST_9: b_copy_2_3_7 (137)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_16)
.preheader7.preheader:101  %b_copy_2_3_7 = select i1 %sel_tmp4, i32 %b_copy_2_3_12_load, i32 %b_copy_2_3_6

ST_9: b_copy_2_3_9 (138)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_14)
.preheader7.preheader:102  %b_copy_2_3_9 = select i1 %sel_tmp2, i32 %b_copy_2_3_19, i32 %b_copy_2_3_8_load

ST_9: b_copy_2_3_14 (139)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:103  %b_copy_2_3_14 = select i1 %sel_tmp4, i32 %b_copy_2_3_8_load, i32 %b_copy_2_3_9

ST_9: b_copy_2_3_15 (140)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_2_3_18)
.preheader7.preheader:104  %b_copy_2_3_15 = select i1 %sel_tmp4, i32 %b_copy_2_3_19, i32 %b_copy_2_3_11_load

ST_9: b_copy_3_3_19 (141)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:105  %b_copy_3_3_19 = load i32* %a_addr_7, align 4

ST_9: b_copy_2_3_3 (155)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:119  %b_copy_2_3_3 = select i1 %tmp_mid2, i32 %b_copy_2_3_2, i32 %b_copy_2_3_1_load

ST_9: b_copy_2_3_16 (156)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:120  %b_copy_2_3_16 = select i1 %tmp_mid2, i32 %b_copy_2_3_7, i32 %b_copy_2_3_12_load

ST_9: b_copy_2_3_17 (157)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:121  %b_copy_2_3_17 = select i1 %tmp_mid2, i32 %b_copy_2_3_14, i32 %b_copy_2_3_8_load

ST_9: b_copy_2_3_18 (158)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:122  %b_copy_2_3_18 = select i1 %tmp_mid2, i32 %b_copy_2_3_15, i32 %b_copy_2_3_11_load

ST_9: tmp_s (168)  [5/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_9: tmp_11_1 (170)  [6/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_9: tmp_9 (171)  [1/1] 1.57ns  loc: matmul.cpp:31
.preheader7.preheader:135  %tmp_9 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_2_3_18, i32 %b_copy_2_3_17, i32 %b_copy_2_3_16, i32 %b_copy_2_3_3, i2 %tmp) nounwind

ST_9: StgValue_179 (185)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:149  store i32 %b_copy_2_3_3, i32* %b_copy_2_3_1

ST_9: StgValue_180 (186)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:150  store i32 %b_copy_2_3_16, i32* %b_copy_2_3_12

ST_9: StgValue_181 (187)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:151  store i32 %b_copy_2_3_17, i32* %b_copy_2_3_8

ST_9: StgValue_182 (188)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:152  store i32 %b_copy_2_3_18, i32* %b_copy_2_3_11


 <State 10>: 7.02ns
ST_10: b_copy_3_3_11_load (52)  [1/1] 0.00ns
.preheader7.preheader:16  %b_copy_3_3_11_load = load i32* %b_copy_3_3_11

ST_10: b_copy_3_3_8_load (53)  [1/1] 0.00ns
.preheader7.preheader:17  %b_copy_3_3_8_load = load i32* %b_copy_3_3_8

ST_10: b_copy_3_3_12_load (54)  [1/1] 0.00ns
.preheader7.preheader:18  %b_copy_3_3_12_load = load i32* %b_copy_3_3_12

ST_10: b_copy_3_3_1_load (55)  [1/1] 0.00ns
.preheader7.preheader:19  %b_copy_3_3_1_load = load i32* %b_copy_3_3_1

ST_10: b_copy_3_3_19 (141)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader7.preheader:105  %b_copy_3_3_19 = load i32* %a_addr_7, align 4

ST_10: b_copy_3_3 (142)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_4)
.preheader7.preheader:106  %b_copy_3_3 = select i1 %sel_tmp, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3_19

ST_10: b_copy_3_3_4 (143)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:107  %b_copy_3_3_4 = select i1 %sel_tmp2, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3

ST_10: b_copy_3_3_2 (144)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_3)
.preheader7.preheader:108  %b_copy_3_3_2 = select i1 %sel_tmp4, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3_4

ST_10: b_copy_3_3_5 (145)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_6)
.preheader7.preheader:109  %b_copy_3_3_5 = select i1 %sel_tmp, i32 %b_copy_3_3_19, i32 %b_copy_3_3_12_load

ST_10: b_copy_3_3_6 (146)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:110  %b_copy_3_3_6 = select i1 %sel_tmp2, i32 %b_copy_3_3_12_load, i32 %b_copy_3_3_5

ST_10: b_copy_3_3_7 (147)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_16)
.preheader7.preheader:111  %b_copy_3_3_7 = select i1 %sel_tmp4, i32 %b_copy_3_3_12_load, i32 %b_copy_3_3_6

ST_10: b_copy_3_3_9 (148)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_14)
.preheader7.preheader:112  %b_copy_3_3_9 = select i1 %sel_tmp2, i32 %b_copy_3_3_19, i32 %b_copy_3_3_8_load

ST_10: b_copy_3_3_14 (149)  [1/1] 1.37ns  loc: matmul.cpp:20 (out node of the LUT)
.preheader7.preheader:113  %b_copy_3_3_14 = select i1 %sel_tmp4, i32 %b_copy_3_3_8_load, i32 %b_copy_3_3_9

ST_10: b_copy_3_3_15 (150)  [1/1] 0.00ns  loc: matmul.cpp:20 (grouped into LUT with out node b_copy_3_3_18)
.preheader7.preheader:114  %b_copy_3_3_15 = select i1 %sel_tmp4, i32 %b_copy_3_3_19, i32 %b_copy_3_3_11_load

ST_10: b_copy_3_3_3 (151)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:115  %b_copy_3_3_3 = select i1 %tmp_mid2, i32 %b_copy_3_3_2, i32 %b_copy_3_3_1_load

ST_10: b_copy_3_3_16 (152)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:116  %b_copy_3_3_16 = select i1 %tmp_mid2, i32 %b_copy_3_3_7, i32 %b_copy_3_3_12_load

ST_10: b_copy_3_3_17 (153)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:117  %b_copy_3_3_17 = select i1 %tmp_mid2, i32 %b_copy_3_3_14, i32 %b_copy_3_3_8_load

ST_10: b_copy_3_3_18 (154)  [1/1] 1.37ns  loc: matmul.cpp:31 (out node of the LUT)
.preheader7.preheader:118  %b_copy_3_3_18 = select i1 %tmp_mid2, i32 %b_copy_3_3_15, i32 %b_copy_3_3_11_load

ST_10: tmp_s (168)  [4/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_10: tmp_11_1 (170)  [5/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_10: tmp_11_2 (172)  [6/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_10: tmp_10 (173)  [1/1] 1.57ns  loc: matmul.cpp:31
.preheader7.preheader:137  %tmp_10 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_3_3_18, i32 %b_copy_3_3_17, i32 %b_copy_3_3_16, i32 %b_copy_3_3_3, i2 %tmp) nounwind

ST_10: StgValue_205 (181)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:145  store i32 %b_copy_3_3_3, i32* %b_copy_3_3_1

ST_10: StgValue_206 (182)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:146  store i32 %b_copy_3_3_16, i32* %b_copy_3_3_12

ST_10: StgValue_207 (183)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:147  store i32 %b_copy_3_3_17, i32* %b_copy_3_3_8

ST_10: StgValue_208 (184)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:148  store i32 %b_copy_3_3_18, i32* %b_copy_3_3_11


 <State 11>: 6.68ns
ST_11: tmp_s (168)  [3/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_11: tmp_11_1 (170)  [4/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_11: tmp_11_2 (172)  [5/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_11: tmp_11_3 (174)  [6/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1


 <State 12>: 6.68ns
ST_12: tmp_s (168)  [2/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_12: tmp_11_1 (170)  [3/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_12: tmp_11_2 (172)  [4/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_12: tmp_11_3 (174)  [5/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1


 <State 13>: 6.68ns
ST_13: tmp_s (168)  [1/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:132  %tmp_s = mul nsw i32 %tmp_6, %a_row_0_1

ST_13: tmp_11_1 (170)  [2/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_13: tmp_11_2 (172)  [3/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_13: tmp_11_3 (174)  [4/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1


 <State 14>: 6.68ns
ST_14: tmp_11_1 (170)  [1/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:134  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_1

ST_14: tmp_11_2 (172)  [2/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_14: tmp_11_3 (174)  [3/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1


 <State 15>: 6.68ns
ST_15: tmp_11_2 (172)  [1/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:136  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_1

ST_15: tmp_11_3 (174)  [2/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1

ST_15: tmp2 (175)  [1/1] 2.39ns  loc: matmul.cpp:38
.preheader7.preheader:139  %tmp2 = add i32 %tmp_11_1, %tmp_s


 <State 16>: 6.68ns
ST_16: tmp_11_3 (174)  [1/6] 6.68ns  loc: matmul.cpp:38
.preheader7.preheader:138  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_1


 <State 17>: 6.55ns
ST_17: StgValue_228 (57)  [1/1] 0.00ns
.preheader7.preheader:21  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_17: empty (58)  [1/1] 0.00ns
.preheader7.preheader:22  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_17: tmp_1 (65)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:29  %tmp_1 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i3.i2(i1 true, i3 %tmp_2_mid2_v_v_v, i2 0)

ST_17: tmp_2_cast (66)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:30  %tmp_2_cast = zext i6 %tmp_1 to i7

ST_17: StgValue_232 (79)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:43  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_17: tmp_4 (80)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:44  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_17: StgValue_234 (81)  [1/1] 0.00ns  loc: matmul.cpp:21
.preheader7.preheader:45  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_17: tmp_8_cast6 (91)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader7.preheader:55  %tmp_8_cast6 = zext i3 %j_mid2 to i7

ST_17: tmp_20 (104)  [1/1] 1.67ns  loc: matmul.cpp:41
.preheader7.preheader:68  %tmp_20 = add i7 %tmp_2_cast, %tmp_8_cast6

ST_17: tmp_22_cast (105)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:69  %tmp_22_cast = zext i7 %tmp_20 to i64

ST_17: a_addr_8 (106)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:70  %a_addr_8 = getelementptr [48 x i32]* %a, i64 0, i64 %tmp_22_cast

ST_17: tmp3 (176)  [1/1] 1.92ns  loc: matmul.cpp:38
.preheader7.preheader:140  %tmp3 = add i32 %tmp_11_3, %tmp_11_2

ST_17: tmp_12_3 (177)  [1/1] 1.92ns  loc: matmul.cpp:38
.preheader7.preheader:141  %tmp_12_3 = add nsw i32 %tmp2, %tmp3

ST_17: StgValue_241 (178)  [1/1] 2.71ns  loc: matmul.cpp:41
.preheader7.preheader:142  store i32 %tmp_12_3, i32* %a_addr_8, align 4

ST_17: empty_3 (179)  [1/1] 0.00ns  loc: matmul.cpp:42
.preheader7.preheader:143  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_4) nounwind

ST_17: j_1 (180)  [1/1] 0.75ns  loc: matmul.cpp:20
.preheader7.preheader:144  %j_1 = add i3 1, %j_mid2

ST_17: StgValue_244 (201)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:165  br label %.preheader7


 <State 18>: 0.00ns
ST_18: StgValue_245 (203)  [1/1] 0.00ns  loc: matmul.cpp:44
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [29]  (1.57 ns)

 <State 2>: 6.02ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.cpp:20) [31]  (0 ns)
	'icmp' operation ('exitcond', matmul.cpp:20) [59]  (1.94 ns)
	'select' operation ('tmp_2_mid2_v_v_v', matmul.cpp:41) [64]  (1.37 ns)
	'getelementptr' operation ('a_addr', matmul.cpp:27) [69]  (0 ns)
	'load' operation ('a_row[0]', matmul.cpp:27) on array 'a' [83]  (2.71 ns)

 <State 3>: 2.71ns
The critical path consists of the following:
	'or' operation ('tmp_8', matmul.cpp:41) [70]  (0 ns)
	'getelementptr' operation ('a_addr_1', matmul.cpp:27) [72]  (0 ns)
	'load' operation ('a_row[1]', matmul.cpp:27) on array 'a' [84]  (2.71 ns)

 <State 4>: 2.71ns
The critical path consists of the following:
	'or' operation ('tmp_12', matmul.cpp:41) [73]  (0 ns)
	'getelementptr' operation ('a_addr_2', matmul.cpp:27) [75]  (0 ns)
	'load' operation ('a_row[2]', matmul.cpp:27) on array 'a' [85]  (2.71 ns)

 <State 5>: 2.71ns
The critical path consists of the following:
	'or' operation ('tmp_14', matmul.cpp:41) [76]  (0 ns)
	'getelementptr' operation ('a_addr_3', matmul.cpp:27) [78]  (0 ns)
	'load' operation ('a_row[3]', matmul.cpp:27) on array 'a' [86]  (2.71 ns)

 <State 6>: 4.08ns
The critical path consists of the following:
	'select' operation ('j_mid2', matmul.cpp:20) [60]  (1.37 ns)
	'getelementptr' operation ('a_addr_4', matmul.cpp:33) [95]  (0 ns)
	'load' operation ('b_copy[0][3]', matmul.cpp:33) on array 'a' [107]  (2.71 ns)

 <State 7>: 7.02ns
The critical path consists of the following:
	'load' operation ('b_copy[0][3]', matmul.cpp:33) on array 'a' [107]  (2.71 ns)
	'select' operation ('b_copy[0][3]', matmul.cpp:20) [118]  (0 ns)
	'select' operation ('b_copy[0][3]', matmul.cpp:20) [119]  (1.37 ns)
	'select' operation ('b_copy[0][3]', matmul.cpp:31) [165]  (1.37 ns)
	'mux' operation ('tmp_6', matmul.cpp:31) [167]  (1.57 ns)

 <State 8>: 7.02ns
The critical path consists of the following:
	'load' operation ('b_copy[1][3]', matmul.cpp:33) on array 'a' [121]  (2.71 ns)
	'select' operation ('b_copy[1][3]', matmul.cpp:20) [122]  (0 ns)
	'select' operation ('b_copy[1][3]', matmul.cpp:20) [123]  (1.37 ns)
	'select' operation ('b_copy[1][3]', matmul.cpp:20) [124]  (0 ns)
	'select' operation ('b_copy[1][3]', matmul.cpp:31) [159]  (1.37 ns)
	'mux' operation ('tmp_7', matmul.cpp:31) [169]  (1.57 ns)

 <State 9>: 7.02ns
The critical path consists of the following:
	'load' operation ('b_copy[2][3]', matmul.cpp:33) on array 'a' [131]  (2.71 ns)
	'select' operation ('b_copy[2][3]', matmul.cpp:20) [132]  (0 ns)
	'select' operation ('b_copy[2][3]', matmul.cpp:20) [133]  (1.37 ns)
	'select' operation ('b_copy[2][3]', matmul.cpp:20) [134]  (0 ns)
	'select' operation ('b_copy[2][3]', matmul.cpp:31) [155]  (1.37 ns)
	'mux' operation ('tmp_9', matmul.cpp:31) [171]  (1.57 ns)

 <State 10>: 7.02ns
The critical path consists of the following:
	'load' operation ('b_copy[3][3]', matmul.cpp:33) on array 'a' [141]  (2.71 ns)
	'select' operation ('b_copy[3][3]', matmul.cpp:20) [142]  (0 ns)
	'select' operation ('b_copy[3][3]', matmul.cpp:20) [143]  (1.37 ns)
	'select' operation ('b_copy[3][3]', matmul.cpp:20) [144]  (0 ns)
	'select' operation ('b_copy[3][3]', matmul.cpp:31) [151]  (1.37 ns)
	'mux' operation ('tmp_10', matmul.cpp:31) [173]  (1.57 ns)

 <State 11>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.cpp:38) [168]  (6.68 ns)

 <State 12>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.cpp:38) [168]  (6.68 ns)

 <State 13>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.cpp:38) [168]  (6.68 ns)

 <State 14>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_1', matmul.cpp:38) [170]  (6.68 ns)

 <State 15>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_2', matmul.cpp:38) [172]  (6.68 ns)

 <State 16>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_3', matmul.cpp:38) [174]  (6.68 ns)

 <State 17>: 6.55ns
The critical path consists of the following:
	'add' operation ('tmp3', matmul.cpp:38) [176]  (1.92 ns)
	'add' operation ('tmp_12_3', matmul.cpp:38) [177]  (1.92 ns)
	'store' operation (matmul.cpp:41) of variable 'tmp_12_3', matmul.cpp:38 on array 'a' [178]  (2.71 ns)

 <State 18>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
