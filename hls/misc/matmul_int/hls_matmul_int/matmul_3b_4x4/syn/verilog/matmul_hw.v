// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=73,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1049,HLS_SYN_LUT=2143}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        a_2_Addr_A,
        a_2_EN_A,
        a_2_WEN_A,
        a_2_Din_A,
        a_2_Dout_A,
        a_2_Clk_A,
        a_2_Rst_A
);

parameter    ap_ST_fsm_state1 = 6'b1;
parameter    ap_ST_fsm_pp0_stage0 = 6'b10;
parameter    ap_ST_fsm_pp0_stage1 = 6'b100;
parameter    ap_ST_fsm_pp0_stage2 = 6'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 6'b10000;
parameter    ap_ST_fsm_state14 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv61_1 = 61'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv32_5 = 32'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] a_2_Addr_A;
output   a_2_EN_A;
output  [3:0] a_2_WEN_A;
output  [31:0] a_2_Din_A;
input  [31:0] a_2_Dout_A;
output   a_2_Clk_A;
output   a_2_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg a_2_EN_A;
reg[3:0] a_2_WEN_A;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_250;
reg   [2:0] i_reg_261;
reg   [2:0] j_reg_272;
reg   [31:0] reg_283;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1254;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage3;
reg   [0:0] tmp_5_reg_1332;
wire   [0:0] exitcond_flatten_fu_287_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254;
wire   [4:0] indvar_flatten_next_fu_293_p2;
reg   [4:0] indvar_flatten_next_reg_1258;
wire   [2:0] j_mid2_fu_311_p3;
reg   [2:0] j_mid2_reg_1263;
wire   [0:0] tmp_mid2_fu_331_p3;
reg   [0:0] tmp_mid2_reg_1273;
wire   [2:0] i2_mid2_v_fu_339_p3;
reg   [2:0] i2_mid2_v_reg_1293;
wire   [4:0] tmp_7_fu_347_p3;
reg   [4:0] tmp_7_reg_1298;
wire   [1:0] tmp_fu_365_p1;
reg   [1:0] tmp_reg_1316;
wire   [0:0] tmp_5_fu_395_p2;
wire   [0:0] sel_tmp_fu_414_p2;
reg   [0:0] sel_tmp_reg_1345;
wire   [0:0] sel_tmp2_fu_427_p2;
reg   [0:0] sel_tmp2_reg_1355;
wire   [0:0] sel_tmp4_fu_440_p2;
reg   [0:0] sel_tmp4_reg_1368;
wire  signed [31:0] tmp_2_fu_529_p6;
reg  signed [31:0] tmp_2_reg_1384;
wire  signed [31:0] a_row_0_1_fu_591_p3;
wire  signed [31:0] tmp_3_fu_702_p6;
reg  signed [31:0] tmp_3_reg_1404;
wire  signed [31:0] a_row_1_1_fu_772_p3;
wire   [5:0] tmp_19_fu_796_p2;
reg   [5:0] tmp_19_reg_1424;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_19_reg_1424;
wire  signed [31:0] tmp_4_fu_898_p6;
reg  signed [31:0] tmp_4_reg_1429;
wire   [2:0] j_1_fu_911_p2;
reg   [2:0] j_1_reg_1434;
wire  signed [31:0] a_row_3_1_fu_959_p3;
reg  signed [31:0] a_row_3_1_reg_1439;
wire  signed [31:0] a_row_2_1_fu_966_p3;
wire  signed [31:0] tmp_6_fu_1069_p6;
reg  signed [31:0] tmp_6_reg_1449;
wire   [31:0] grp_fu_697_p2;
reg   [31:0] tmp_s_reg_1454;
wire   [31:0] grp_fu_893_p2;
reg   [31:0] tmp_11_1_reg_1459;
wire   [31:0] grp_fu_1064_p2;
reg   [31:0] tmp_11_2_reg_1464;
wire   [31:0] tmp7_fu_1116_p2;
reg   [31:0] tmp7_reg_1469;
wire   [31:0] grp_fu_1112_p2;
reg   [31:0] tmp_11_3_reg_1474;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] indvar_flatten_phi_fu_254_p4;
reg   [2:0] i_phi_fu_265_p4;
reg   [2:0] j_phi_fu_276_p4;
wire   [63:0] tmp_9_fu_355_p1;
wire   [63:0] tmp_8_fu_360_p1;
wire   [63:0] tmp_11_fu_386_p3;
wire   [63:0] tmp_16_cast_fu_409_p1;
wire   [63:0] tmp_13_fu_582_p3;
wire   [63:0] tmp_17_fu_598_p3;
wire   [63:0] tmp_15_fu_763_p3;
wire   [63:0] tmp_18_cast_fu_791_p1;
wire   [63:0] tmp_19_cast_fu_1120_p1;
reg   [31:0] a_row_0_2_fu_86;
reg   [31:0] a_row_1_2_fu_90;
reg   [31:0] a_row_2_2_fu_94;
reg   [31:0] a_row_3_2_fu_98;
reg   [31:0] b_copy_0_3_11_fu_102;
wire   [31:0] b_copy_0_3_18_fu_522_p3;
reg   [31:0] b_copy_0_3_8_fu_106;
wire   [31:0] b_copy_0_3_17_fu_515_p3;
reg   [31:0] b_copy_0_3_12_fu_110;
wire   [31:0] b_copy_0_3_16_fu_508_p3;
reg   [31:0] b_copy_0_3_1_fu_114;
wire   [31:0] b_copy_0_3_3_fu_501_p3;
reg   [31:0] b_copy_1_3_11_fu_118;
wire   [31:0] b_copy_1_3_18_fu_690_p3;
reg   [31:0] b_copy_1_3_8_fu_122;
wire   [31:0] b_copy_1_3_17_fu_683_p3;
reg   [31:0] b_copy_1_3_12_fu_126;
wire   [31:0] b_copy_1_3_16_fu_676_p3;
reg   [31:0] b_copy_1_3_1_fu_130;
wire   [31:0] b_copy_1_3_3_fu_669_p3;
reg   [31:0] b_copy_2_3_11_fu_134;
wire   [31:0] b_copy_2_3_18_fu_886_p3;
reg   [31:0] b_copy_2_3_8_fu_138;
wire   [31:0] b_copy_2_3_17_fu_879_p3;
reg   [31:0] b_copy_2_3_12_fu_142;
wire   [31:0] b_copy_2_3_16_fu_872_p3;
reg   [31:0] b_copy_2_3_1_fu_146;
wire   [31:0] b_copy_2_3_3_fu_865_p3;
reg   [31:0] b_copy_3_3_11_fu_150;
wire   [31:0] b_copy_3_3_18_fu_1057_p3;
reg   [31:0] b_copy_3_3_8_fu_154;
wire   [31:0] b_copy_3_3_17_fu_1050_p3;
reg   [31:0] b_copy_3_3_12_fu_158;
wire   [31:0] b_copy_3_3_16_fu_1043_p3;
reg   [31:0] b_copy_3_3_1_fu_162;
wire   [31:0] b_copy_3_3_3_fu_1036_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [31:0] a_2_Addr_A_orig;
wire   [0:0] exitcond_fu_305_p2;
wire   [2:0] i_1_fu_299_p2;
wire   [0:0] tmp_mid1_fu_319_p2;
wire   [0:0] tmp1_fu_325_p2;
wire   [4:0] tmp_10_fu_381_p2;
wire   [3:0] tmp_8_cast_fu_400_p1;
wire   [3:0] tmp_16_fu_403_p2;
wire   [31:0] b_copy_0_3_fu_419_p3;
wire   [31:0] b_copy_0_3_4_fu_432_p3;
wire   [31:0] b_copy_0_3_5_fu_453_p3;
wire   [31:0] b_copy_0_3_6_fu_461_p3;
wire   [31:0] b_copy_0_3_9_fu_477_p3;
wire   [31:0] b_copy_0_3_2_fu_445_p3;
wire   [31:0] b_copy_0_3_7_fu_469_p3;
wire   [31:0] b_copy_0_3_14_fu_485_p3;
wire   [31:0] b_copy_0_3_15_fu_493_p3;
wire   [31:0] tmp_2_fu_529_p1;
wire   [31:0] tmp_2_fu_529_p2;
wire   [31:0] tmp_2_fu_529_p3;
wire   [31:0] tmp_2_fu_529_p4;
wire   [4:0] tmp_12_fu_577_p2;
wire   [31:0] b_copy_1_3_fu_606_p3;
wire   [31:0] b_copy_1_3_4_fu_613_p3;
wire   [31:0] b_copy_1_3_5_fu_627_p3;
wire   [31:0] b_copy_1_3_6_fu_634_p3;
wire   [31:0] b_copy_1_3_9_fu_648_p3;
wire   [31:0] b_copy_1_3_2_fu_620_p3;
wire   [31:0] b_copy_1_3_7_fu_641_p3;
wire   [31:0] b_copy_1_3_14_fu_655_p3;
wire   [31:0] b_copy_1_3_15_fu_662_p3;
wire  signed [31:0] grp_fu_697_p1;
wire   [31:0] tmp_3_fu_702_p1;
wire   [31:0] tmp_3_fu_702_p2;
wire   [31:0] tmp_3_fu_702_p3;
wire   [31:0] tmp_3_fu_702_p4;
wire   [4:0] tmp_14_fu_758_p2;
wire   [4:0] tmp_8_cast5_fu_782_p1;
wire   [4:0] tmp_18_fu_785_p2;
wire   [5:0] tmp_9_cast_fu_755_p1;
wire   [5:0] tmp_8_cast6_fu_779_p1;
wire   [31:0] b_copy_2_3_fu_802_p3;
wire   [31:0] b_copy_2_3_4_fu_809_p3;
wire   [31:0] b_copy_2_3_5_fu_823_p3;
wire   [31:0] b_copy_2_3_6_fu_830_p3;
wire   [31:0] b_copy_2_3_9_fu_844_p3;
wire   [31:0] b_copy_2_3_2_fu_816_p3;
wire   [31:0] b_copy_2_3_7_fu_837_p3;
wire   [31:0] b_copy_2_3_14_fu_851_p3;
wire   [31:0] b_copy_2_3_15_fu_858_p3;
wire  signed [31:0] grp_fu_893_p1;
wire   [31:0] tmp_4_fu_898_p1;
wire   [31:0] tmp_4_fu_898_p2;
wire   [31:0] tmp_4_fu_898_p3;
wire   [31:0] tmp_4_fu_898_p4;
wire   [31:0] b_copy_3_3_fu_973_p3;
wire   [31:0] b_copy_3_3_4_fu_980_p3;
wire   [31:0] b_copy_3_3_5_fu_994_p3;
wire   [31:0] b_copy_3_3_6_fu_1001_p3;
wire   [31:0] b_copy_3_3_9_fu_1015_p3;
wire   [31:0] b_copy_3_3_2_fu_987_p3;
wire   [31:0] b_copy_3_3_7_fu_1008_p3;
wire   [31:0] b_copy_3_3_14_fu_1022_p3;
wire   [31:0] b_copy_3_3_15_fu_1029_p3;
wire  signed [31:0] grp_fu_1064_p1;
wire   [31:0] tmp_6_fu_1069_p1;
wire   [31:0] tmp_6_fu_1069_p2;
wire   [31:0] tmp_6_fu_1069_p3;
wire   [31:0] tmp_6_fu_1069_p4;
wire   [31:0] tmp8_fu_1124_p2;
wire   [0:0] ap_CS_fsm_state14;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matmul_hw_mux_42_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_g8j_U1(
    .din1(tmp_2_fu_529_p1),
    .din2(tmp_2_fu_529_p2),
    .din3(tmp_2_fu_529_p3),
    .din4(tmp_2_fu_529_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_2_fu_529_p6)
);

matmul_hw_mul_32shbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32shbi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_reg_1384),
    .din1(grp_fu_697_p1),
    .ce(1'b1),
    .dout(grp_fu_697_p2)
);

matmul_hw_mux_42_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_g8j_U3(
    .din1(tmp_3_fu_702_p1),
    .din2(tmp_3_fu_702_p2),
    .din3(tmp_3_fu_702_p3),
    .din4(tmp_3_fu_702_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_3_fu_702_p6)
);

matmul_hw_mul_32shbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32shbi_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1404),
    .din1(grp_fu_893_p1),
    .ce(1'b1),
    .dout(grp_fu_893_p2)
);

matmul_hw_mux_42_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_g8j_U5(
    .din1(tmp_4_fu_898_p1),
    .din2(tmp_4_fu_898_p2),
    .din3(tmp_4_fu_898_p3),
    .din4(tmp_4_fu_898_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_4_fu_898_p6)
);

matmul_hw_mul_32shbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32shbi_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1429),
    .din1(grp_fu_1064_p1),
    .ce(1'b1),
    .dout(grp_fu_1064_p2)
);

matmul_hw_mux_42_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_g8j_U7(
    .din1(tmp_6_fu_1069_p1),
    .din2(tmp_6_fu_1069_p2),
    .din3(tmp_6_fu_1069_p3),
    .din4(tmp_6_fu_1069_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_6_fu_1069_p6)
);

matmul_hw_mul_32shbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32shbi_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1449),
    .din1(a_row_3_1_reg_1439),
    .ce(1'b1),
    .dout(grp_fu_1112_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_287_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & ~(exitcond_flatten_reg_1254 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_261 <= i2_mid2_v_reg_1293;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_261 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_250 <= indvar_flatten_next_reg_1258;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_250 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_272 <= j_1_reg_1434;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_272 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_row_0_2_fu_86 <= a_row_0_1_fu_591_p3;
        b_copy_1_3_11_fu_118 <= b_copy_1_3_18_fu_690_p3;
        b_copy_1_3_12_fu_126 <= b_copy_1_3_16_fu_676_p3;
        b_copy_1_3_1_fu_130 <= b_copy_1_3_3_fu_669_p3;
        b_copy_1_3_8_fu_122 <= b_copy_1_3_17_fu_683_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_1_2_fu_90 <= a_row_1_1_fu_772_p3;
        b_copy_2_3_11_fu_134 <= b_copy_2_3_18_fu_886_p3;
        b_copy_2_3_12_fu_142 <= b_copy_2_3_16_fu_872_p3;
        b_copy_2_3_1_fu_146 <= b_copy_2_3_3_fu_865_p3;
        b_copy_2_3_8_fu_138 <= b_copy_2_3_17_fu_879_p3;
        j_1_reg_1434 <= j_1_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_2_2_fu_94 <= a_row_2_1_fu_966_p3;
        a_row_3_2_fu_98 <= a_row_3_1_fu_959_p3;
        b_copy_3_3_11_fu_150 <= b_copy_3_3_18_fu_1057_p3;
        b_copy_3_3_12_fu_158 <= b_copy_3_3_16_fu_1043_p3;
        b_copy_3_3_1_fu_162 <= b_copy_3_3_3_fu_1036_p3;
        b_copy_3_3_8_fu_154 <= b_copy_3_3_17_fu_1050_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_row_3_1_reg_1439 <= a_row_3_1_fu_959_p3;
        tmp_6_reg_1449 <= tmp_6_fu_1069_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 <= exitcond_flatten_reg_1254;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254;
        exitcond_flatten_reg_1254 <= exitcond_flatten_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
        ap_pipeline_reg_pp0_iter1_tmp_19_reg_1424 <= tmp_19_reg_1424;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0))) begin
        b_copy_0_3_11_fu_102 <= b_copy_0_3_18_fu_522_p3;
        b_copy_0_3_12_fu_110 <= b_copy_0_3_16_fu_508_p3;
        b_copy_0_3_1_fu_114 <= b_copy_0_3_3_fu_501_p3;
        b_copy_0_3_8_fu_106 <= b_copy_0_3_17_fu_515_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_287_p2))) begin
        i2_mid2_v_reg_1293 <= i2_mid2_v_fu_339_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1258 <= indvar_flatten_next_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_287_p2))) begin
        j_mid2_reg_1263 <= j_mid2_fu_311_p3;
        tmp_7_reg_1298[4 : 2] <= tmp_7_fu_347_p3[4 : 2];
        tmp_mid2_reg_1273 <= tmp_mid2_fu_331_p3;
        tmp_reg_1316 <= tmp_fu_365_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_5_reg_1332)))) begin
        reg_283 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1254 == 1'b0))) begin
        sel_tmp2_reg_1355 <= sel_tmp2_fu_427_p2;
        sel_tmp4_reg_1368 <= sel_tmp4_fu_440_p2;
        sel_tmp_reg_1345 <= sel_tmp_fu_414_p2;
        tmp_2_reg_1384 <= tmp_2_fu_529_p6;
        tmp_5_reg_1332 <= tmp_5_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254))) begin
        tmp7_reg_1469 <= tmp7_fu_1116_p2;
        tmp_11_2_reg_1464 <= grp_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254))) begin
        tmp_11_1_reg_1459 <= grp_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254))) begin
        tmp_11_3_reg_1474 <= grp_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_19_reg_1424 <= tmp_19_fu_796_p2;
        tmp_4_reg_1429 <= tmp_4_fu_898_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_3_reg_1404 <= tmp_3_fu_702_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254))) begin
        tmp_s_reg_1454 <= grp_fu_697_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_15_fu_763_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_13_fu_582_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_11_fu_386_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_9_fu_355_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_18_cast_fu_791_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_17_fu_598_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_16_cast_fu_409_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_8_fu_360_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_2_EN_A = 1'b1;
    end else begin
        a_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_2_WEN_A = ap_const_lv4_F;
    end else begin
        a_2_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_265_p4 = i2_mid2_v_reg_1293;
    end else begin
        i_phi_fu_265_p4 = i_reg_261;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_next_reg_1258;
    end else begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_reg_250;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_276_p4 = j_1_reg_1434;
    end else begin
        j_phi_fu_276_p4 = j_reg_272;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_287_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign a_2_Addr_A = a_2_Addr_A_orig << ap_const_lv32_2;

assign a_2_Addr_A_orig = tmp_19_cast_fu_1120_p1;

assign a_2_Clk_A = ap_clk;

assign a_2_Din_A = (tmp7_reg_1469 + tmp8_fu_1124_p2);

assign a_2_Rst_A = ap_rst;

assign a_row_0_1_fu_591_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_0_2_fu_86);

assign a_row_1_1_fu_772_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_1_2_fu_90);

assign a_row_2_1_fu_966_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_2_2_fu_94);

assign a_row_3_1_fu_959_p3 = ((tmp_5_reg_1332[0:0] === 1'b1) ? a_0_Dout_A : a_row_3_2_fu_98);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_5];

assign b_copy_0_3_14_fu_485_p3 = ((sel_tmp4_fu_440_p2[0:0] === 1'b1) ? b_copy_0_3_8_fu_106 : b_copy_0_3_9_fu_477_p3);

assign b_copy_0_3_15_fu_493_p3 = ((sel_tmp4_fu_440_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_11_fu_102);

assign b_copy_0_3_16_fu_508_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_7_fu_469_p3 : b_copy_0_3_12_fu_110);

assign b_copy_0_3_17_fu_515_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_14_fu_485_p3 : b_copy_0_3_8_fu_106);

assign b_copy_0_3_18_fu_522_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_15_fu_493_p3 : b_copy_0_3_11_fu_102);

assign b_copy_0_3_2_fu_445_p3 = ((sel_tmp4_fu_440_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_114 : b_copy_0_3_4_fu_432_p3);

assign b_copy_0_3_3_fu_501_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_2_fu_445_p3 : b_copy_0_3_1_fu_114);

assign b_copy_0_3_4_fu_432_p3 = ((sel_tmp2_fu_427_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_114 : b_copy_0_3_fu_419_p3);

assign b_copy_0_3_5_fu_453_p3 = ((sel_tmp_fu_414_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_12_fu_110);

assign b_copy_0_3_6_fu_461_p3 = ((sel_tmp2_fu_427_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_110 : b_copy_0_3_5_fu_453_p3);

assign b_copy_0_3_7_fu_469_p3 = ((sel_tmp4_fu_440_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_110 : b_copy_0_3_6_fu_461_p3);

assign b_copy_0_3_9_fu_477_p3 = ((sel_tmp2_fu_427_p2[0:0] === 1'b1) ? a_1_Dout_A : b_copy_0_3_8_fu_106);

assign b_copy_0_3_fu_419_p3 = ((sel_tmp_fu_414_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_114 : a_1_Dout_A);

assign b_copy_1_3_14_fu_655_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_8_fu_122 : b_copy_1_3_9_fu_648_p3);

assign b_copy_1_3_15_fu_662_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_11_fu_118);

assign b_copy_1_3_16_fu_676_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_7_fu_641_p3 : b_copy_1_3_12_fu_126);

assign b_copy_1_3_17_fu_683_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_14_fu_655_p3 : b_copy_1_3_8_fu_122);

assign b_copy_1_3_18_fu_690_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_15_fu_662_p3 : b_copy_1_3_11_fu_118);

assign b_copy_1_3_2_fu_620_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_1_fu_130 : b_copy_1_3_4_fu_613_p3);

assign b_copy_1_3_3_fu_669_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_2_fu_620_p3 : b_copy_1_3_1_fu_130);

assign b_copy_1_3_4_fu_613_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_1_3_1_fu_130 : b_copy_1_3_fu_606_p3);

assign b_copy_1_3_5_fu_627_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_12_fu_126);

assign b_copy_1_3_6_fu_634_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_1_3_12_fu_126 : b_copy_1_3_5_fu_627_p3);

assign b_copy_1_3_7_fu_641_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_1_3_12_fu_126 : b_copy_1_3_6_fu_634_p3);

assign b_copy_1_3_9_fu_648_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? a_1_Dout_A : b_copy_1_3_8_fu_122);

assign b_copy_1_3_fu_606_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_1_3_1_fu_130 : a_1_Dout_A);

assign b_copy_2_3_14_fu_851_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_8_fu_138 : b_copy_2_3_9_fu_844_p3);

assign b_copy_2_3_15_fu_858_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_11_fu_134);

assign b_copy_2_3_16_fu_872_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_7_fu_837_p3 : b_copy_2_3_12_fu_142);

assign b_copy_2_3_17_fu_879_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_14_fu_851_p3 : b_copy_2_3_8_fu_138);

assign b_copy_2_3_18_fu_886_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_15_fu_858_p3 : b_copy_2_3_11_fu_134);

assign b_copy_2_3_2_fu_816_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_1_fu_146 : b_copy_2_3_4_fu_809_p3);

assign b_copy_2_3_3_fu_865_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_2_fu_816_p3 : b_copy_2_3_1_fu_146);

assign b_copy_2_3_4_fu_809_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_2_3_1_fu_146 : b_copy_2_3_fu_802_p3);

assign b_copy_2_3_5_fu_823_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_12_fu_142);

assign b_copy_2_3_6_fu_830_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_2_3_12_fu_142 : b_copy_2_3_5_fu_823_p3);

assign b_copy_2_3_7_fu_837_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_2_3_12_fu_142 : b_copy_2_3_6_fu_830_p3);

assign b_copy_2_3_9_fu_844_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? a_1_Dout_A : b_copy_2_3_8_fu_138);

assign b_copy_2_3_fu_802_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_2_3_1_fu_146 : a_1_Dout_A);

assign b_copy_3_3_14_fu_1022_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_8_fu_154 : b_copy_3_3_9_fu_1015_p3);

assign b_copy_3_3_15_fu_1029_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_11_fu_150);

assign b_copy_3_3_16_fu_1043_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_7_fu_1008_p3 : b_copy_3_3_12_fu_158);

assign b_copy_3_3_17_fu_1050_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_14_fu_1022_p3 : b_copy_3_3_8_fu_154);

assign b_copy_3_3_18_fu_1057_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_15_fu_1029_p3 : b_copy_3_3_11_fu_150);

assign b_copy_3_3_2_fu_987_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_1_fu_162 : b_copy_3_3_4_fu_980_p3);

assign b_copy_3_3_3_fu_1036_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_2_fu_987_p3 : b_copy_3_3_1_fu_162);

assign b_copy_3_3_4_fu_980_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_3_3_1_fu_162 : b_copy_3_3_fu_973_p3);

assign b_copy_3_3_5_fu_994_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_12_fu_158);

assign b_copy_3_3_6_fu_1001_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? b_copy_3_3_12_fu_158 : b_copy_3_3_5_fu_994_p3);

assign b_copy_3_3_7_fu_1008_p3 = ((sel_tmp4_reg_1368[0:0] === 1'b1) ? b_copy_3_3_12_fu_158 : b_copy_3_3_6_fu_1001_p3);

assign b_copy_3_3_9_fu_1015_p3 = ((sel_tmp2_reg_1355[0:0] === 1'b1) ? a_1_Dout_A : b_copy_3_3_8_fu_154);

assign b_copy_3_3_fu_973_p3 = ((sel_tmp_reg_1345[0:0] === 1'b1) ? b_copy_3_3_1_fu_162 : a_1_Dout_A);

assign exitcond_flatten_fu_287_p2 = ((indvar_flatten_phi_fu_254_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_305_p2 = ((j_phi_fu_276_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_1064_p1 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_2_2_fu_94);

assign grp_fu_697_p1 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_0_2_fu_86);

assign grp_fu_893_p1 = ((tmp_5_reg_1332[0:0] === 1'b1) ? reg_283 : a_row_1_2_fu_90);

assign i2_mid2_v_fu_339_p3 = ((exitcond_fu_305_p2[0:0] === 1'b1) ? i_1_fu_299_p2 : i_phi_fu_265_p4);

assign i_1_fu_299_p2 = (ap_const_lv3_1 + i_phi_fu_265_p4);

assign indvar_flatten_next_fu_293_p2 = (indvar_flatten_phi_fu_254_p4 + ap_const_lv5_1);

assign j_1_fu_911_p2 = (ap_const_lv3_1 + j_mid2_reg_1263);

assign j_mid2_fu_311_p3 = ((exitcond_fu_305_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_276_p4);

assign sel_tmp2_fu_427_p2 = ((tmp_reg_1316 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_440_p2 = ((tmp_reg_1316 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_414_p2 = ((tmp_reg_1316 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_325_p2 = ((i_phi_fu_265_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp7_fu_1116_p2 = (tmp_11_1_reg_1459 + tmp_s_reg_1454);

assign tmp8_fu_1124_p2 = (tmp_11_3_reg_1474 + tmp_11_2_reg_1464);

assign tmp_10_fu_381_p2 = (tmp_7_reg_1298 | ap_const_lv5_1);

assign tmp_11_fu_386_p3 = {{ap_const_lv59_0}, {tmp_10_fu_381_p2}};

assign tmp_12_fu_577_p2 = (tmp_7_reg_1298 | ap_const_lv5_2);

assign tmp_13_fu_582_p3 = {{ap_const_lv59_0}, {tmp_12_fu_577_p2}};

assign tmp_14_fu_758_p2 = (tmp_7_reg_1298 | ap_const_lv5_3);

assign tmp_15_fu_763_p3 = {{ap_const_lv59_0}, {tmp_14_fu_758_p2}};

assign tmp_16_cast_fu_409_p1 = tmp_16_fu_403_p2;

assign tmp_16_fu_403_p2 = (ap_const_lv4_4 + tmp_8_cast_fu_400_p1);

assign tmp_17_fu_598_p3 = {{ap_const_lv61_1}, {j_mid2_reg_1263}};

assign tmp_18_cast_fu_791_p1 = tmp_18_fu_785_p2;

assign tmp_18_fu_785_p2 = (ap_const_lv5_C + tmp_8_cast5_fu_782_p1);

assign tmp_19_cast_fu_1120_p1 = ap_pipeline_reg_pp0_iter1_tmp_19_reg_1424;

assign tmp_19_fu_796_p2 = (tmp_9_cast_fu_755_p1 + tmp_8_cast6_fu_779_p1);

assign tmp_2_fu_529_p1 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_15_fu_493_p3 : b_copy_0_3_11_fu_102);

assign tmp_2_fu_529_p2 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_14_fu_485_p3 : b_copy_0_3_8_fu_106);

assign tmp_2_fu_529_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_7_fu_469_p3 : b_copy_0_3_12_fu_110);

assign tmp_2_fu_529_p4 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_0_3_2_fu_445_p3 : b_copy_0_3_1_fu_114);

assign tmp_3_fu_702_p1 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_15_fu_662_p3 : b_copy_1_3_11_fu_118);

assign tmp_3_fu_702_p2 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_14_fu_655_p3 : b_copy_1_3_8_fu_122);

assign tmp_3_fu_702_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_7_fu_641_p3 : b_copy_1_3_12_fu_126);

assign tmp_3_fu_702_p4 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_1_3_2_fu_620_p3 : b_copy_1_3_1_fu_130);

assign tmp_4_fu_898_p1 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_15_fu_858_p3 : b_copy_2_3_11_fu_134);

assign tmp_4_fu_898_p2 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_14_fu_851_p3 : b_copy_2_3_8_fu_138);

assign tmp_4_fu_898_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_7_fu_837_p3 : b_copy_2_3_12_fu_142);

assign tmp_4_fu_898_p4 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_2_3_2_fu_816_p3 : b_copy_2_3_1_fu_146);

assign tmp_5_fu_395_p2 = ((j_mid2_reg_1263 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_1069_p1 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_15_fu_1029_p3 : b_copy_3_3_11_fu_150);

assign tmp_6_fu_1069_p2 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_14_fu_1022_p3 : b_copy_3_3_8_fu_154);

assign tmp_6_fu_1069_p3 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_7_fu_1008_p3 : b_copy_3_3_12_fu_158);

assign tmp_6_fu_1069_p4 = ((tmp_mid2_reg_1273[0:0] === 1'b1) ? b_copy_3_3_2_fu_987_p3 : b_copy_3_3_1_fu_162);

assign tmp_7_fu_347_p3 = {{i2_mid2_v_fu_339_p3}, {ap_const_lv2_0}};

assign tmp_8_cast5_fu_782_p1 = j_mid2_reg_1263;

assign tmp_8_cast6_fu_779_p1 = j_mid2_reg_1263;

assign tmp_8_cast_fu_400_p1 = j_mid2_reg_1263;

assign tmp_8_fu_360_p1 = j_mid2_fu_311_p3;

assign tmp_9_cast_fu_755_p1 = tmp_7_reg_1298;

assign tmp_9_fu_355_p1 = tmp_7_fu_347_p3;

assign tmp_fu_365_p1 = j_mid2_fu_311_p3[1:0];

assign tmp_mid1_fu_319_p2 = ((i_1_fu_299_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_331_p3 = ((exitcond_fu_305_p2[0:0] === 1'b1) ? tmp_mid1_fu_319_p2 : tmp1_fu_325_p2);

always @ (posedge ap_clk) begin
    tmp_7_reg_1298[1:0] <= 2'b00;
end

endmodule //matmul_hw
