// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=6154,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=3061,HLS_SYN_LUT=1758}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A
);

parameter    ap_ST_fsm_state1 = 26'b1;
parameter    ap_ST_fsm_pp0_stage0 = 26'b10;
parameter    ap_ST_fsm_pp0_stage1 = 26'b100;
parameter    ap_ST_fsm_pp0_stage2 = 26'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 26'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 26'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 26'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 26'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 26'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 26'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 26'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 26'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 26'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 26'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 26'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 26'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 26'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage16 = 26'b100000000000000000;
parameter    ap_ST_fsm_pp0_stage17 = 26'b1000000000000000000;
parameter    ap_ST_fsm_pp0_stage18 = 26'b10000000000000000000;
parameter    ap_ST_fsm_pp0_stage19 = 26'b100000000000000000000;
parameter    ap_ST_fsm_pp0_stage20 = 26'b1000000000000000000000;
parameter    ap_ST_fsm_pp0_stage21 = 26'b10000000000000000000000;
parameter    ap_ST_fsm_pp0_stage22 = 26'b100000000000000000000000;
parameter    ap_ST_fsm_pp0_stage23 = 26'b1000000000000000000000000;
parameter    ap_ST_fsm_state35 = 26'b10000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv59_8 = 59'b1000;
parameter    ap_const_lv9_110 = 9'b100010000;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv59_9 = 59'b1001;
parameter    ap_const_lv59_1 = 59'b1;
parameter    ap_const_lv9_130 = 9'b100110000;
parameter    ap_const_lv7_30 = 7'b110000;
parameter    ap_const_lv59_A = 59'b1010;
parameter    ap_const_lv59_2 = 59'b10;
parameter    ap_const_lv9_150 = 9'b101010000;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv59_B = 59'b1011;
parameter    ap_const_lv59_3 = 59'b11;
parameter    ap_const_lv9_170 = 9'b101110000;
parameter    ap_const_lv8_70 = 8'b1110000;
parameter    ap_const_lv55_0 = 55'b0000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_2 = 9'b10;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv9_4 = 9'b100;
parameter    ap_const_lv9_5 = 9'b101;
parameter    ap_const_lv9_6 = 9'b110;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv6_18 = 6'b11000;
parameter    ap_const_lv9_8 = 9'b1000;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv9_A = 9'b1010;
parameter    ap_const_lv9_B = 9'b1011;
parameter    ap_const_lv9_C = 9'b1100;
parameter    ap_const_lv9_D = 9'b1101;
parameter    ap_const_lv9_E = 9'b1110;
parameter    ap_const_lv9_F = 9'b1111;
parameter    ap_const_lv32_19 = 32'b11001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_840;
reg   [4:0] i_reg_851;
reg   [4:0] j_reg_862;
reg   [31:0] reg_873;
wire   [0:0] ap_CS_fsm_pp0_stage9;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1847;
wire   [0:0] ap_CS_fsm_pp0_stage10;
wire   [0:0] ap_CS_fsm_pp0_stage11;
reg   [0:0] tmp_5_reg_2050;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [0:0] ap_CS_fsm_pp0_stage13;
wire   [0:0] ap_CS_fsm_pp0_stage14;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [0:0] ap_CS_fsm_pp0_stage16;
wire   [0:0] ap_CS_fsm_pp0_stage17;
wire   [0:0] ap_CS_fsm_pp0_stage18;
wire   [0:0] ap_CS_fsm_pp0_stage19;
wire   [0:0] ap_CS_fsm_pp0_stage20;
wire   [0:0] ap_CS_fsm_pp0_stage21;
wire   [0:0] ap_CS_fsm_pp0_stage22;
wire   [0:0] ap_CS_fsm_pp0_stage23;
wire   [0:0] exitcond_flatten_fu_877_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847;
wire   [8:0] indvar_flatten_next_fu_883_p2;
reg   [8:0] indvar_flatten_next_reg_1851;
wire   [4:0] j_mid2_fu_901_p3;
reg   [4:0] j_mid2_reg_1856;
wire   [0:0] tmp_mid2_fu_921_p3;
reg   [0:0] tmp_mid2_reg_1874;
wire   [4:0] i2_mid2_v_fu_929_p3;
reg   [4:0] i2_mid2_v_reg_1878;
wire   [63:0] tmp_8_fu_937_p1;
reg   [63:0] tmp_8_reg_1885;
wire   [8:0] tmp_8_cast_fu_954_p1;
reg   [8:0] tmp_8_cast_reg_1915;
wire   [0:0] ap_CS_fsm_pp0_stage1;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [6:0] tmp_8_cast2_fu_995_p1;
reg   [6:0] tmp_8_cast2_reg_1942;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage7;
wire   [8:0] tmp_1_fu_1095_p3;
reg   [8:0] tmp_1_reg_1997;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [63:0] tmp_7_fu_1107_p1;
reg   [63:0] tmp_7_reg_2021;
wire   [0:0] tmp_5_fu_1125_p2;
wire   [31:0] b_copy_0_q0;
reg  signed [31:0] b_copy_0_load_reg_2070;
wire  signed [31:0] a_row_0_1_fu_1147_p3;
wire   [31:0] b_copy_1_q0;
reg  signed [31:0] b_copy_1_load_reg_2090;
wire  signed [31:0] a_row_1_1_fu_1181_p3;
wire   [31:0] b_copy_2_q0;
reg  signed [31:0] b_copy_2_load_reg_2110;
wire  signed [31:0] a_row_2_1_fu_1215_p3;
wire   [31:0] b_copy_3_q0;
reg  signed [31:0] b_copy_3_load_reg_2130;
wire  signed [31:0] a_row_3_1_fu_1249_p3;
wire   [31:0] b_copy_4_q0;
reg  signed [31:0] b_copy_4_load_reg_2150;
wire  signed [31:0] a_row_4_1_fu_1283_p3;
wire   [31:0] b_copy_5_q0;
reg  signed [31:0] b_copy_5_load_reg_2170;
wire  signed [31:0] a_row_5_1_fu_1330_p3;
wire   [31:0] grp_fu_1159_p2;
reg   [31:0] tmp_s_reg_2195;
wire   [31:0] b_copy_6_q0;
reg  signed [31:0] b_copy_6_load_reg_2200;
wire  signed [31:0] a_row_6_1_fu_1364_p3;
wire   [31:0] grp_fu_1193_p2;
reg   [31:0] tmp_11_1_reg_2220;
wire   [31:0] b_copy_7_q0;
reg  signed [31:0] b_copy_7_load_reg_2225;
wire  signed [31:0] a_row_7_1_fu_1398_p3;
wire   [31:0] grp_fu_1227_p2;
reg   [31:0] tmp_11_2_reg_2245;
wire   [31:0] b_copy_8_q0;
reg  signed [31:0] b_copy_8_load_reg_2250;
wire   [31:0] tmp3_fu_1415_p2;
reg   [31:0] tmp3_reg_2260;
wire  signed [31:0] a_row_8_1_fu_1436_p3;
wire   [31:0] grp_fu_1261_p2;
reg   [31:0] tmp_11_3_reg_2275;
wire   [31:0] b_copy_9_q0;
reg  signed [31:0] b_copy_9_load_reg_2280;
wire  signed [31:0] a_row_9_1_fu_1470_p3;
wire   [31:0] grp_fu_1295_p2;
reg   [31:0] tmp_11_4_reg_2300;
wire   [31:0] b_copy_10_q0;
reg  signed [31:0] b_copy_10_load_reg_2305;
wire   [31:0] tmp2_fu_1491_p2;
reg   [31:0] tmp2_reg_2315;
wire  signed [31:0] a_row_10_1_fu_1513_p3;
wire   [31:0] grp_fu_1342_p2;
reg   [31:0] tmp_11_5_reg_2330;
wire   [31:0] b_copy_11_q0;
reg  signed [31:0] b_copy_11_load_reg_2335;
wire  signed [31:0] a_row_11_1_fu_1547_p3;
wire   [31:0] grp_fu_1376_p2;
reg   [31:0] tmp_11_6_reg_2355;
wire   [31:0] b_copy_12_q0;
reg  signed [31:0] b_copy_12_load_reg_2360;
wire   [31:0] tmp6_fu_1564_p2;
reg   [31:0] tmp6_reg_2370;
wire  signed [31:0] a_row_12_1_fu_1585_p3;
wire   [31:0] grp_fu_1410_p2;
reg   [31:0] tmp_11_7_reg_2385;
wire   [31:0] b_copy_13_q0;
reg  signed [31:0] b_copy_13_load_reg_2390;
wire  signed [31:0] a_row_13_1_fu_1619_p3;
wire   [31:0] grp_fu_1448_p2;
reg   [31:0] tmp_11_8_reg_2415;
wire   [31:0] b_copy_14_q0;
reg  signed [31:0] b_copy_14_load_reg_2420;
wire   [31:0] b_copy_15_q0;
reg  signed [31:0] b_copy_15_load_reg_2425;
wire   [31:0] tmp1_fu_1645_p2;
reg   [31:0] tmp1_reg_2430;
wire   [4:0] j_1_fu_1650_p2;
reg   [4:0] j_1_reg_2435;
wire  signed [31:0] a_row_15_1_fu_1669_p3;
reg  signed [31:0] a_row_15_1_reg_2440;
wire  signed [31:0] a_row_14_1_fu_1676_p3;
wire   [9:0] tmp_53_fu_1696_p2;
reg   [9:0] tmp_53_reg_2450;
wire   [31:0] grp_fu_1482_p2;
reg   [31:0] tmp_11_9_reg_2455;
wire   [31:0] grp_fu_1525_p2;
reg   [31:0] tmp_11_s_reg_2460;
wire   [31:0] tmp10_fu_1711_p2;
reg   [31:0] tmp10_reg_2465;
wire   [31:0] grp_fu_1559_p2;
reg   [31:0] tmp_11_10_reg_2470;
wire   [31:0] grp_fu_1597_p2;
reg   [31:0] tmp_11_11_reg_2475;
wire   [31:0] tmp9_fu_1719_p2;
reg   [31:0] tmp9_reg_2480;
wire   [31:0] grp_fu_1631_p2;
reg   [31:0] tmp_11_12_reg_2485;
wire   [31:0] grp_fu_1702_p2;
reg   [31:0] tmp_11_13_reg_2490;
wire   [31:0] tmp13_fu_1724_p2;
reg   [31:0] tmp13_reg_2495;
wire   [31:0] grp_fu_1707_p2;
reg   [31:0] tmp_11_14_reg_2500;
wire   [31:0] tmp_12_s_fu_1742_p2;
reg   [31:0] tmp_12_s_reg_2505;
reg    ap_enable_reg_pp0_iter1;
reg   [3:0] b_copy_0_address0;
reg    b_copy_0_ce0;
reg    b_copy_0_we0;
reg   [3:0] b_copy_1_address0;
reg    b_copy_1_ce0;
reg    b_copy_1_we0;
reg   [3:0] b_copy_2_address0;
reg    b_copy_2_ce0;
reg    b_copy_2_we0;
reg   [3:0] b_copy_3_address0;
reg    b_copy_3_ce0;
reg    b_copy_3_we0;
reg   [3:0] b_copy_4_address0;
reg    b_copy_4_ce0;
reg    b_copy_4_we0;
reg   [3:0] b_copy_5_address0;
reg    b_copy_5_ce0;
reg    b_copy_5_we0;
reg   [3:0] b_copy_6_address0;
reg    b_copy_6_ce0;
reg    b_copy_6_we0;
reg   [3:0] b_copy_7_address0;
reg    b_copy_7_ce0;
reg    b_copy_7_we0;
reg   [3:0] b_copy_8_address0;
reg    b_copy_8_ce0;
reg    b_copy_8_we0;
reg   [3:0] b_copy_9_address0;
reg    b_copy_9_ce0;
reg    b_copy_9_we0;
reg   [3:0] b_copy_10_address0;
reg    b_copy_10_ce0;
reg    b_copy_10_we0;
reg   [3:0] b_copy_11_address0;
reg    b_copy_11_ce0;
reg    b_copy_11_we0;
reg   [3:0] b_copy_12_address0;
reg    b_copy_12_ce0;
reg    b_copy_12_we0;
reg   [3:0] b_copy_13_address0;
reg    b_copy_13_ce0;
reg    b_copy_13_we0;
reg   [3:0] b_copy_14_address0;
reg    b_copy_14_ce0;
reg    b_copy_14_we0;
reg   [3:0] b_copy_15_address0;
reg    b_copy_15_ce0;
reg    b_copy_15_we0;
reg   [8:0] indvar_flatten_phi_fu_844_p4;
reg   [4:0] i_phi_fu_855_p4;
reg   [4:0] j_phi_fu_866_p4;
wire   [63:0] tmp_38_fu_942_p3;
wire   [63:0] tmp_40_cast_fu_963_p1;
wire   [63:0] tmp_47_cast_fu_974_p1;
wire   [63:0] tmp_40_fu_979_p3;
wire   [63:0] tmp_47_fu_987_p3;
wire   [63:0] tmp_42_cast_fu_1003_p1;
wire   [63:0] tmp_49_cast_fu_1014_p1;
wire   [63:0] tmp_42_fu_1019_p3;
wire   [63:0] tmp_49_fu_1027_p3;
wire   [63:0] tmp_44_cast_fu_1040_p1;
wire   [63:0] tmp_51_cast_fu_1050_p1;
wire   [63:0] tmp_44_fu_1055_p3;
wire   [63:0] tmp_51_fu_1063_p3;
wire   [63:0] tmp_46_cast_fu_1079_p1;
wire   [63:0] tmp_53_cast_fu_1090_p1;
wire   [63:0] tmp_3_fu_1102_p1;
wire   [63:0] tmp_6_fu_1116_p3;
wire   [63:0] tmp_10_fu_1138_p3;
wire   [63:0] tmp_12_fu_1172_p3;
wire   [63:0] tmp_14_fu_1206_p3;
wire   [63:0] tmp_16_fu_1240_p3;
wire   [63:0] tmp_18_fu_1274_p3;
wire   [63:0] tmp_20_fu_1308_p3;
wire   [63:0] tmp_22_fu_1355_p3;
wire   [63:0] tmp_24_fu_1389_p3;
wire   [63:0] tmp_26_fu_1427_p3;
wire   [63:0] tmp_28_fu_1461_p3;
wire   [63:0] tmp_30_fu_1504_p3;
wire   [63:0] tmp_32_fu_1538_p3;
wire   [63:0] tmp_34_fu_1576_p3;
wire   [63:0] tmp_36_fu_1610_p3;
wire   [63:0] tmp_54_cast_fu_1747_p1;
reg   [31:0] a_row_0_2_fu_136;
reg   [31:0] a_row_1_2_fu_140;
reg   [31:0] a_row_2_2_fu_144;
reg   [31:0] a_row_3_2_fu_148;
reg   [31:0] a_row_4_2_fu_152;
reg   [31:0] a_row_5_2_fu_156;
reg   [31:0] a_row_6_2_fu_160;
reg   [31:0] a_row_7_2_fu_164;
reg   [31:0] a_row_8_2_fu_168;
reg   [31:0] a_row_9_2_fu_172;
reg   [31:0] a_row_10_2_fu_176;
reg   [31:0] a_row_11_2_fu_180;
reg   [31:0] a_row_12_2_fu_184;
reg   [31:0] a_row_13_2_fu_188;
reg   [31:0] a_row_14_2_fu_192;
reg   [31:0] a_row_15_2_fu_196;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [0:0] exitcond_fu_895_p2;
wire   [4:0] i_1_fu_889_p2;
wire   [0:0] tmp_mid1_fu_909_p2;
wire   [0:0] tmp_fu_915_p2;
wire   [8:0] tmp_39_fu_957_p2;
wire   [5:0] tmp_8_cast3_fu_951_p1;
wire   [5:0] tmp_46_fu_968_p2;
wire   [8:0] tmp_41_fu_998_p2;
wire   [6:0] tmp_48_fu_1008_p2;
wire   [8:0] tmp_43_fu_1035_p2;
wire   [6:0] tmp_50_fu_1045_p2;
wire   [8:0] tmp_45_fu_1074_p2;
wire   [7:0] tmp_8_cast1_fu_1071_p1;
wire   [7:0] tmp_52_fu_1084_p2;
wire   [8:0] tmp_4_fu_1111_p2;
wire   [8:0] tmp_9_fu_1133_p2;
wire  signed [31:0] grp_fu_1159_p0;
wire   [8:0] tmp_11_fu_1167_p2;
wire  signed [31:0] grp_fu_1193_p0;
wire   [8:0] tmp_13_fu_1201_p2;
wire  signed [31:0] grp_fu_1227_p0;
wire   [8:0] tmp_15_fu_1235_p2;
wire  signed [31:0] grp_fu_1261_p0;
wire   [8:0] tmp_17_fu_1269_p2;
wire  signed [31:0] grp_fu_1295_p0;
wire   [8:0] tmp_19_fu_1303_p2;
wire   [5:0] grp_fu_1324_p0;
wire  signed [31:0] grp_fu_1342_p0;
wire   [8:0] tmp_21_fu_1350_p2;
wire  signed [31:0] grp_fu_1376_p0;
wire   [8:0] tmp_23_fu_1384_p2;
wire  signed [31:0] grp_fu_1410_p0;
wire   [8:0] tmp_25_fu_1422_p2;
wire  signed [31:0] grp_fu_1448_p0;
wire   [8:0] tmp_27_fu_1456_p2;
wire  signed [31:0] grp_fu_1482_p0;
wire   [31:0] tmp4_fu_1487_p2;
wire   [8:0] tmp_29_fu_1499_p2;
wire  signed [31:0] grp_fu_1525_p0;
wire   [8:0] tmp_31_fu_1533_p2;
wire  signed [31:0] grp_fu_1559_p0;
wire   [8:0] tmp_33_fu_1571_p2;
wire  signed [31:0] grp_fu_1597_p0;
wire   [8:0] tmp_35_fu_1605_p2;
wire  signed [31:0] grp_fu_1631_p0;
wire   [31:0] tmp7_fu_1636_p2;
wire   [31:0] tmp5_fu_1640_p2;
wire   [5:0] grp_fu_1324_p2;
wire   [9:0] tmp_37_fu_1661_p3;
wire   [9:0] tmp_7_cast_fu_1693_p1;
wire  signed [31:0] grp_fu_1702_p0;
wire   [31:0] tmp11_fu_1715_p2;
wire   [31:0] tmp14_fu_1728_p2;
wire   [31:0] tmp12_fu_1732_p2;
wire   [31:0] tmp8_fu_1737_p2;
wire   [0:0] ap_CS_fsm_state35;
reg   [25:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_0_address0),
    .ce0(b_copy_0_ce0),
    .we0(b_copy_0_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_0_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_1_address0),
    .ce0(b_copy_1_ce0),
    .we0(b_copy_1_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_1_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_2_address0),
    .ce0(b_copy_2_ce0),
    .we0(b_copy_2_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_2_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_3_address0),
    .ce0(b_copy_3_ce0),
    .we0(b_copy_3_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_3_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_4_address0),
    .ce0(b_copy_4_ce0),
    .we0(b_copy_4_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_4_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_5_address0),
    .ce0(b_copy_5_ce0),
    .we0(b_copy_5_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_5_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_6_address0),
    .ce0(b_copy_6_ce0),
    .we0(b_copy_6_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_6_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_7_address0),
    .ce0(b_copy_7_ce0),
    .we0(b_copy_7_we0),
    .d0(a_0_Dout_A),
    .q0(b_copy_7_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_8_address0),
    .ce0(b_copy_8_ce0),
    .we0(b_copy_8_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_8_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_9_address0),
    .ce0(b_copy_9_ce0),
    .we0(b_copy_9_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_9_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_10_address0),
    .ce0(b_copy_10_ce0),
    .we0(b_copy_10_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_10_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_11_address0),
    .ce0(b_copy_11_ce0),
    .we0(b_copy_11_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_11_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_12_address0),
    .ce0(b_copy_12_ce0),
    .we0(b_copy_12_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_12_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_13_address0),
    .ce0(b_copy_13_ce0),
    .we0(b_copy_13_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_13_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_14_address0),
    .ce0(b_copy_14_ce0),
    .we0(b_copy_14_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_14_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_15_address0),
    .ce0(b_copy_15_ce0),
    .we0(b_copy_15_we0),
    .d0(a_1_Dout_A),
    .q0(b_copy_15_q0)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1159_p0),
    .din1(b_copy_0_load_reg_2070),
    .ce(1'b1),
    .dout(grp_fu_1159_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1193_p0),
    .din1(b_copy_1_load_reg_2090),
    .ce(1'b1),
    .dout(grp_fu_1193_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1227_p0),
    .din1(b_copy_2_load_reg_2110),
    .ce(1'b1),
    .dout(grp_fu_1227_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1261_p0),
    .din1(b_copy_3_load_reg_2130),
    .ce(1'b1),
    .dout(grp_fu_1261_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1295_p0),
    .din1(b_copy_4_load_reg_2150),
    .ce(1'b1),
    .dout(grp_fu_1295_p2)
);

matmul_hw_urem_6ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
matmul_hw_urem_6ndEe_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1324_p0),
    .din1(ap_const_lv6_18),
    .ce(1'b1),
    .dout(grp_fu_1324_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1342_p0),
    .din1(b_copy_5_load_reg_2170),
    .ce(1'b1),
    .dout(grp_fu_1342_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1376_p0),
    .din1(b_copy_6_load_reg_2200),
    .ce(1'b1),
    .dout(grp_fu_1376_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1410_p0),
    .din1(b_copy_7_load_reg_2225),
    .ce(1'b1),
    .dout(grp_fu_1410_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1448_p0),
    .din1(b_copy_8_load_reg_2250),
    .ce(1'b1),
    .dout(grp_fu_1448_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1482_p0),
    .din1(b_copy_9_load_reg_2280),
    .ce(1'b1),
    .dout(grp_fu_1482_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1525_p0),
    .din1(b_copy_10_load_reg_2305),
    .ce(1'b1),
    .dout(grp_fu_1525_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1559_p0),
    .din1(b_copy_11_load_reg_2335),
    .ce(1'b1),
    .dout(grp_fu_1559_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1597_p0),
    .din1(b_copy_12_load_reg_2360),
    .ce(1'b1),
    .dout(grp_fu_1597_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1631_p0),
    .din1(b_copy_13_load_reg_2390),
    .ce(1'b1),
    .dout(grp_fu_1631_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1702_p0),
    .din1(b_copy_14_load_reg_2420),
    .ce(1'b1),
    .dout(grp_fu_1702_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_15_1_reg_2440),
    .din1(b_copy_15_load_reg_2425),
    .ce(1'b1),
    .dout(grp_fu_1707_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_877_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & ~(exitcond_flatten_reg_1847 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_851 <= i2_mid2_v_reg_1878;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_851 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_840 <= indvar_flatten_next_reg_1851;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_840 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_862 <= j_1_reg_2435;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_862 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_row_0_2_fu_136 <= a_row_0_1_fu_1147_p3;
        b_copy_1_load_reg_2090 <= b_copy_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        a_row_10_2_fu_176 <= a_row_10_1_fu_1513_p3;
        b_copy_11_load_reg_2335 <= b_copy_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        a_row_11_2_fu_180 <= a_row_11_1_fu_1547_p3;
        b_copy_12_load_reg_2360 <= b_copy_12_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        a_row_12_2_fu_184 <= a_row_12_1_fu_1585_p3;
        b_copy_13_load_reg_2390 <= b_copy_13_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        a_row_13_2_fu_188 <= a_row_13_1_fu_1619_p3;
        b_copy_14_load_reg_2420 <= b_copy_14_q0;
        b_copy_15_load_reg_2425 <= b_copy_15_q0;
        j_1_reg_2435 <= j_1_fu_1650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_14_2_fu_192 <= a_row_14_1_fu_1676_p3;
        a_row_15_2_fu_196 <= a_row_15_1_fu_1669_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_row_15_1_reg_2440 <= a_row_15_1_fu_1669_p3;
        tmp_11_9_reg_2455 <= grp_fu_1482_p2;
        tmp_53_reg_2450 <= tmp_53_fu_1696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_1_2_fu_140 <= a_row_1_1_fu_1181_p3;
        b_copy_2_load_reg_2110 <= b_copy_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        a_row_2_2_fu_144 <= a_row_2_1_fu_1215_p3;
        b_copy_3_load_reg_2130 <= b_copy_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        a_row_3_2_fu_148 <= a_row_3_1_fu_1249_p3;
        b_copy_4_load_reg_2150 <= b_copy_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        a_row_4_2_fu_152 <= a_row_4_1_fu_1283_p3;
        b_copy_5_load_reg_2170 <= b_copy_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        a_row_5_2_fu_156 <= a_row_5_1_fu_1330_p3;
        b_copy_6_load_reg_2200 <= b_copy_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        a_row_6_2_fu_160 <= a_row_6_1_fu_1364_p3;
        b_copy_7_load_reg_2225 <= b_copy_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        a_row_7_2_fu_164 <= a_row_7_1_fu_1398_p3;
        b_copy_8_load_reg_2250 <= b_copy_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        a_row_8_2_fu_168 <= a_row_8_1_fu_1436_p3;
        b_copy_9_load_reg_2280 <= b_copy_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        a_row_9_2_fu_172 <= a_row_9_1_fu_1470_p3;
        b_copy_10_load_reg_2305 <= b_copy_10_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847 <= exitcond_flatten_reg_1847;
        exitcond_flatten_reg_1847 <= exitcond_flatten_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0))) begin
        b_copy_0_load_reg_2070 <= b_copy_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_877_p2))) begin
        i2_mid2_v_reg_1878 <= i2_mid2_v_fu_929_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1851 <= indvar_flatten_next_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_877_p2))) begin
        j_mid2_reg_1856 <= j_mid2_fu_901_p3;
        tmp_mid2_reg_1874 <= tmp_mid2_fu_921_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & ~(1'b0 == tmp_5_reg_2050)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_5_reg_2050) & (1'b1 == ap_CS_fsm_pp0_stage23)))) begin
        reg_873 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp10_reg_2465 <= tmp10_fu_1711_p2;
        tmp_11_s_reg_2460 <= grp_fu_1525_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp13_reg_2495 <= tmp13_fu_1724_p2;
        tmp_11_13_reg_2490 <= grp_fu_1702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp1_reg_2430 <= tmp1_fu_1645_p2;
        tmp_11_8_reg_2415 <= grp_fu_1448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        tmp2_reg_2315 <= tmp2_fu_1491_p2;
        tmp_11_4_reg_2300 <= grp_fu_1295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        tmp3_reg_2260 <= tmp3_fu_1415_p2;
        tmp_11_2_reg_2245 <= grp_fu_1227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp6_reg_2370 <= tmp6_fu_1564_p2;
        tmp_11_6_reg_2355 <= grp_fu_1376_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp9_reg_2480 <= tmp9_fu_1719_p2;
        tmp_11_11_reg_2475 <= grp_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp_11_10_reg_2470 <= grp_fu_1559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp_11_12_reg_2485 <= grp_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp_11_14_reg_2500 <= grp_fu_1707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_11_1_reg_2220 <= grp_fu_1193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_11_3_reg_2275 <= grp_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp_11_5_reg_2330 <= grp_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_11_7_reg_2385 <= grp_fu_1410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847))) begin
        tmp_12_s_reg_2505 <= tmp_12_s_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_1_reg_1997[8 : 4] <= tmp_1_fu_1095_p3[8 : 4];
        tmp_7_reg_2021[4 : 0] <= tmp_7_fu_1107_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten_reg_1847 == 1'b0))) begin
        tmp_5_reg_2050 <= tmp_5_fu_1125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_8_cast2_reg_1942[4 : 0] <= tmp_8_cast2_fu_995_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & ~(1'b0 == tmp_mid2_reg_1874))) begin
        tmp_8_cast_reg_1915[4 : 0] <= tmp_8_cast_fu_954_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_877_p2) & ~(1'b0 == tmp_mid2_fu_921_p3))) begin
        tmp_8_reg_1885[4 : 0] <= tmp_8_fu_937_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_s_reg_2195 <= grp_fu_1159_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage23)) begin
            a_0_Addr_A_orig = tmp_36_fu_1610_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            a_0_Addr_A_orig = tmp_34_fu_1576_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage21)) begin
            a_0_Addr_A_orig = tmp_32_fu_1538_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            a_0_Addr_A_orig = tmp_30_fu_1504_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage19)) begin
            a_0_Addr_A_orig = tmp_28_fu_1461_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            a_0_Addr_A_orig = tmp_26_fu_1427_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage17)) begin
            a_0_Addr_A_orig = tmp_24_fu_1389_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            a_0_Addr_A_orig = tmp_22_fu_1355_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            a_0_Addr_A_orig = tmp_20_fu_1308_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            a_0_Addr_A_orig = tmp_18_fu_1274_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            a_0_Addr_A_orig = tmp_16_fu_1240_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            a_0_Addr_A_orig = tmp_14_fu_1206_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            a_0_Addr_A_orig = tmp_12_fu_1172_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            a_0_Addr_A_orig = tmp_10_fu_1138_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            a_0_Addr_A_orig = tmp_6_fu_1116_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            a_0_Addr_A_orig = tmp_3_fu_1102_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_0_Addr_A_orig = tmp_46_cast_fu_1079_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_0_Addr_A_orig = tmp_44_fu_1055_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_44_cast_fu_1040_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_42_fu_1019_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_42_cast_fu_1003_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_40_fu_979_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_40_cast_fu_963_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_38_fu_942_p3;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_1_Addr_A_orig = tmp_54_cast_fu_1747_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_1_Addr_A_orig = tmp_53_cast_fu_1090_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_1_Addr_A_orig = tmp_51_fu_1063_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_1_Addr_A_orig = tmp_51_cast_fu_1050_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_1_Addr_A_orig = tmp_49_fu_1027_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_1_Addr_A_orig = tmp_49_cast_fu_1014_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_1_Addr_A_orig = tmp_47_fu_987_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_1_Addr_A_orig = tmp_47_cast_fu_974_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_Addr_A_orig = tmp_8_fu_937_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1847) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_0_address0 = tmp_7_fu_1107_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_0_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_0_address0 = 'bx;
        end
    end else begin
        b_copy_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        b_copy_0_ce0 = 1'b1;
    end else begin
        b_copy_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & ~(1'b0 == tmp_mid2_reg_1874))) begin
        b_copy_0_we0 = 1'b1;
    end else begin
        b_copy_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            b_copy_10_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_10_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_10_address0 = 'bx;
        end
    end else begin
        b_copy_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_10_ce0 = 1'b1;
    end else begin
        b_copy_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_copy_10_we0 = 1'b1;
    end else begin
        b_copy_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage19)) begin
            b_copy_11_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_11_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_11_address0 = 'bx;
        end
    end else begin
        b_copy_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        b_copy_11_ce0 = 1'b1;
    end else begin
        b_copy_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_copy_11_we0 = 1'b1;
    end else begin
        b_copy_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            b_copy_12_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_12_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_12_address0 = 'bx;
        end
    end else begin
        b_copy_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_12_ce0 = 1'b1;
    end else begin
        b_copy_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_12_we0 = 1'b1;
    end else begin
        b_copy_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage21)) begin
            b_copy_13_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_13_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_13_address0 = 'bx;
        end
    end else begin
        b_copy_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_13_ce0 = 1'b1;
    end else begin
        b_copy_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        b_copy_13_we0 = 1'b1;
    end else begin
        b_copy_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            b_copy_14_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_14_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_14_address0 = 'bx;
        end
    end else begin
        b_copy_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        b_copy_14_ce0 = 1'b1;
    end else begin
        b_copy_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_copy_14_we0 = 1'b1;
    end else begin
        b_copy_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            b_copy_15_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_15_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_15_address0 = 'bx;
        end
    end else begin
        b_copy_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        b_copy_15_ce0 = 1'b1;
    end else begin
        b_copy_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        b_copy_15_we0 = 1'b1;
    end else begin
        b_copy_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_copy_1_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_1_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_1_address0 = 'bx;
        end
    end else begin
        b_copy_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        b_copy_1_ce0 = 1'b1;
    end else begin
        b_copy_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_copy_1_we0 = 1'b1;
    end else begin
        b_copy_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_copy_2_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_2_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_2_address0 = 'bx;
        end
    end else begin
        b_copy_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_2_ce0 = 1'b1;
    end else begin
        b_copy_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_copy_2_we0 = 1'b1;
    end else begin
        b_copy_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_copy_3_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_3_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_3_address0 = 'bx;
        end
    end else begin
        b_copy_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        b_copy_3_ce0 = 1'b1;
    end else begin
        b_copy_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_copy_3_we0 = 1'b1;
    end else begin
        b_copy_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_copy_4_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_4_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_4_address0 = 'bx;
        end
    end else begin
        b_copy_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_4_ce0 = 1'b1;
    end else begin
        b_copy_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_4_we0 = 1'b1;
    end else begin
        b_copy_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_copy_5_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_5_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_5_address0 = 'bx;
        end
    end else begin
        b_copy_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_5_ce0 = 1'b1;
    end else begin
        b_copy_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        b_copy_5_we0 = 1'b1;
    end else begin
        b_copy_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_copy_6_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_6_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_6_address0 = 'bx;
        end
    end else begin
        b_copy_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        b_copy_6_ce0 = 1'b1;
    end else begin
        b_copy_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_copy_6_we0 = 1'b1;
    end else begin
        b_copy_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_copy_7_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_7_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_7_address0 = 'bx;
        end
    end else begin
        b_copy_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        b_copy_7_ce0 = 1'b1;
    end else begin
        b_copy_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        b_copy_7_we0 = 1'b1;
    end else begin
        b_copy_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            b_copy_8_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_8_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_8_address0 = 'bx;
        end
    end else begin
        b_copy_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_copy_8_ce0 = 1'b1;
    end else begin
        b_copy_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & ~(1'b0 == tmp_mid2_reg_1874))) begin
        b_copy_8_we0 = 1'b1;
    end else begin
        b_copy_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage17)) begin
            b_copy_9_address0 = tmp_7_reg_2021;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_9_address0 = tmp_8_reg_1885;
        end else begin
            b_copy_9_address0 = 'bx;
        end
    end else begin
        b_copy_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        b_copy_9_ce0 = 1'b1;
    end else begin
        b_copy_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1847 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1874) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_copy_9_we0 = 1'b1;
    end else begin
        b_copy_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_855_p4 = i2_mid2_v_reg_1878;
    end else begin
        i_phi_fu_855_p4 = i_reg_851;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_844_p4 = indvar_flatten_next_reg_1851;
    end else begin
        indvar_flatten_phi_fu_844_p4 = indvar_flatten_reg_840;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1847 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_866_p4 = j_1_reg_2435;
    end else begin
        j_phi_fu_866_p4 = j_reg_862;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_877_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
        end
        ap_ST_fsm_pp0_stage8 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage16;
        end
        ap_ST_fsm_pp0_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage17;
        end
        ap_ST_fsm_pp0_stage17 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage18;
        end
        ap_ST_fsm_pp0_stage18 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage19;
        end
        ap_ST_fsm_pp0_stage19 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage20;
        end
        ap_ST_fsm_pp0_stage20 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage21;
        end
        ap_ST_fsm_pp0_stage21 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage22;
        end
        ap_ST_fsm_pp0_stage22 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage23;
        end
        ap_ST_fsm_pp0_stage23 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = tmp_12_s_reg_2505;

assign a_1_Rst_A = ap_rst;

assign a_row_0_1_fu_1147_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_0_2_fu_136);

assign a_row_10_1_fu_1513_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_10_2_fu_176);

assign a_row_11_1_fu_1547_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_11_2_fu_180);

assign a_row_12_1_fu_1585_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_12_2_fu_184);

assign a_row_13_1_fu_1619_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_13_2_fu_188);

assign a_row_14_1_fu_1676_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_14_2_fu_192);

assign a_row_15_1_fu_1669_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? a_0_Dout_A : a_row_15_2_fu_196);

assign a_row_1_1_fu_1181_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_1_2_fu_140);

assign a_row_2_1_fu_1215_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_2_2_fu_144);

assign a_row_3_1_fu_1249_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_3_2_fu_148);

assign a_row_4_1_fu_1283_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_4_2_fu_152);

assign a_row_5_1_fu_1330_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_5_2_fu_156);

assign a_row_6_1_fu_1364_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_6_2_fu_160);

assign a_row_7_1_fu_1398_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_7_2_fu_164);

assign a_row_8_1_fu_1436_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_8_2_fu_168);

assign a_row_9_1_fu_1470_p3 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_9_2_fu_172);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_19];

assign exitcond_flatten_fu_877_p2 = ((indvar_flatten_phi_fu_844_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_895_p2 = ((j_phi_fu_866_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_fu_1159_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_0_2_fu_136);

assign grp_fu_1193_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_1_2_fu_140);

assign grp_fu_1227_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_2_2_fu_144);

assign grp_fu_1261_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_3_2_fu_148);

assign grp_fu_1295_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_4_2_fu_152);

assign grp_fu_1324_p0 = {{1'b1}, {i2_mid2_v_reg_1878}};

assign grp_fu_1342_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_5_2_fu_156);

assign grp_fu_1376_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_6_2_fu_160);

assign grp_fu_1410_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_7_2_fu_164);

assign grp_fu_1448_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_8_2_fu_168);

assign grp_fu_1482_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_9_2_fu_172);

assign grp_fu_1525_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_10_2_fu_176);

assign grp_fu_1559_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_11_2_fu_180);

assign grp_fu_1597_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_12_2_fu_184);

assign grp_fu_1631_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_13_2_fu_188);

assign grp_fu_1702_p0 = ((tmp_5_reg_2050[0:0] === 1'b1) ? reg_873 : a_row_14_2_fu_192);

assign i2_mid2_v_fu_929_p3 = ((exitcond_fu_895_p2[0:0] === 1'b1) ? i_1_fu_889_p2 : i_phi_fu_855_p4);

assign i_1_fu_889_p2 = (i_phi_fu_855_p4 + ap_const_lv5_1);

assign indvar_flatten_next_fu_883_p2 = (indvar_flatten_phi_fu_844_p4 + ap_const_lv9_1);

assign j_1_fu_1650_p2 = (j_mid2_reg_1856 + ap_const_lv5_1);

assign j_mid2_fu_901_p3 = ((exitcond_fu_895_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_phi_fu_866_p4);

assign tmp10_fu_1711_p2 = (tmp_11_9_reg_2455 + tmp_11_8_reg_2415);

assign tmp11_fu_1715_p2 = (tmp_11_10_reg_2470 + tmp_11_s_reg_2460);

assign tmp12_fu_1732_p2 = (tmp13_reg_2495 + tmp14_fu_1728_p2);

assign tmp13_fu_1724_p2 = (tmp_11_12_reg_2485 + tmp_11_11_reg_2475);

assign tmp14_fu_1728_p2 = (tmp_11_14_reg_2500 + tmp_11_13_reg_2490);

assign tmp1_fu_1645_p2 = (tmp2_reg_2315 + tmp5_fu_1640_p2);

assign tmp2_fu_1491_p2 = (tmp3_reg_2260 + tmp4_fu_1487_p2);

assign tmp3_fu_1415_p2 = (tmp_11_1_reg_2220 + tmp_s_reg_2195);

assign tmp4_fu_1487_p2 = (tmp_11_3_reg_2275 + tmp_11_2_reg_2245);

assign tmp5_fu_1640_p2 = (tmp6_reg_2370 + tmp7_fu_1636_p2);

assign tmp6_fu_1564_p2 = (tmp_11_5_reg_2330 + tmp_11_4_reg_2300);

assign tmp7_fu_1636_p2 = (tmp_11_7_reg_2385 + tmp_11_6_reg_2355);

assign tmp8_fu_1737_p2 = (tmp9_reg_2480 + tmp12_fu_1732_p2);

assign tmp9_fu_1719_p2 = (tmp10_reg_2465 + tmp11_fu_1715_p2);

assign tmp_10_fu_1138_p3 = {{ap_const_lv55_0}, {tmp_9_fu_1133_p2}};

assign tmp_11_fu_1167_p2 = (tmp_1_reg_1997 | ap_const_lv9_3);

assign tmp_12_fu_1172_p3 = {{ap_const_lv55_0}, {tmp_11_fu_1167_p2}};

assign tmp_12_s_fu_1742_p2 = (tmp1_reg_2430 + tmp8_fu_1737_p2);

assign tmp_13_fu_1201_p2 = (tmp_1_reg_1997 | ap_const_lv9_4);

assign tmp_14_fu_1206_p3 = {{ap_const_lv55_0}, {tmp_13_fu_1201_p2}};

assign tmp_15_fu_1235_p2 = (tmp_1_reg_1997 | ap_const_lv9_5);

assign tmp_16_fu_1240_p3 = {{ap_const_lv55_0}, {tmp_15_fu_1235_p2}};

assign tmp_17_fu_1269_p2 = (tmp_1_reg_1997 | ap_const_lv9_6);

assign tmp_18_fu_1274_p3 = {{ap_const_lv55_0}, {tmp_17_fu_1269_p2}};

assign tmp_19_fu_1303_p2 = (tmp_1_reg_1997 | ap_const_lv9_7);

assign tmp_1_fu_1095_p3 = {{i2_mid2_v_reg_1878}, {ap_const_lv4_0}};

assign tmp_20_fu_1308_p3 = {{ap_const_lv55_0}, {tmp_19_fu_1303_p2}};

assign tmp_21_fu_1350_p2 = (tmp_1_reg_1997 | ap_const_lv9_8);

assign tmp_22_fu_1355_p3 = {{ap_const_lv55_0}, {tmp_21_fu_1350_p2}};

assign tmp_23_fu_1384_p2 = (tmp_1_reg_1997 | ap_const_lv9_9);

assign tmp_24_fu_1389_p3 = {{ap_const_lv55_0}, {tmp_23_fu_1384_p2}};

assign tmp_25_fu_1422_p2 = (tmp_1_reg_1997 | ap_const_lv9_A);

assign tmp_26_fu_1427_p3 = {{ap_const_lv55_0}, {tmp_25_fu_1422_p2}};

assign tmp_27_fu_1456_p2 = (tmp_1_reg_1997 | ap_const_lv9_B);

assign tmp_28_fu_1461_p3 = {{ap_const_lv55_0}, {tmp_27_fu_1456_p2}};

assign tmp_29_fu_1499_p2 = (tmp_1_reg_1997 | ap_const_lv9_C);

assign tmp_30_fu_1504_p3 = {{ap_const_lv55_0}, {tmp_29_fu_1499_p2}};

assign tmp_31_fu_1533_p2 = (tmp_1_reg_1997 | ap_const_lv9_D);

assign tmp_32_fu_1538_p3 = {{ap_const_lv55_0}, {tmp_31_fu_1533_p2}};

assign tmp_33_fu_1571_p2 = (tmp_1_reg_1997 | ap_const_lv9_E);

assign tmp_34_fu_1576_p3 = {{ap_const_lv55_0}, {tmp_33_fu_1571_p2}};

assign tmp_35_fu_1605_p2 = (tmp_1_reg_1997 | ap_const_lv9_F);

assign tmp_36_fu_1610_p3 = {{ap_const_lv55_0}, {tmp_35_fu_1605_p2}};

assign tmp_37_fu_1661_p3 = {{grp_fu_1324_p2}, {ap_const_lv4_0}};

assign tmp_38_fu_942_p3 = {{ap_const_lv59_8}, {j_mid2_fu_901_p3}};

assign tmp_39_fu_957_p2 = ($signed(tmp_8_cast_fu_954_p1) + $signed(ap_const_lv9_110));

assign tmp_3_fu_1102_p1 = tmp_1_fu_1095_p3;

assign tmp_40_cast_fu_963_p1 = tmp_39_fu_957_p2;

assign tmp_40_fu_979_p3 = {{ap_const_lv59_9}, {j_mid2_reg_1856}};

assign tmp_41_fu_998_p2 = ($signed(tmp_8_cast_reg_1915) + $signed(ap_const_lv9_130));

assign tmp_42_cast_fu_1003_p1 = tmp_41_fu_998_p2;

assign tmp_42_fu_1019_p3 = {{ap_const_lv59_A}, {j_mid2_reg_1856}};

assign tmp_43_fu_1035_p2 = ($signed(tmp_8_cast_reg_1915) + $signed(ap_const_lv9_150));

assign tmp_44_cast_fu_1040_p1 = tmp_43_fu_1035_p2;

assign tmp_44_fu_1055_p3 = {{ap_const_lv59_B}, {j_mid2_reg_1856}};

assign tmp_45_fu_1074_p2 = ($signed(tmp_8_cast_reg_1915) + $signed(ap_const_lv9_170));

assign tmp_46_cast_fu_1079_p1 = tmp_45_fu_1074_p2;

assign tmp_46_fu_968_p2 = (tmp_8_cast3_fu_951_p1 + ap_const_lv6_10);

assign tmp_47_cast_fu_974_p1 = tmp_46_fu_968_p2;

assign tmp_47_fu_987_p3 = {{ap_const_lv59_1}, {j_mid2_reg_1856}};

assign tmp_48_fu_1008_p2 = (tmp_8_cast2_fu_995_p1 + ap_const_lv7_30);

assign tmp_49_cast_fu_1014_p1 = tmp_48_fu_1008_p2;

assign tmp_49_fu_1027_p3 = {{ap_const_lv59_2}, {j_mid2_reg_1856}};

assign tmp_4_fu_1111_p2 = (tmp_1_reg_1997 | ap_const_lv9_1);

assign tmp_50_fu_1045_p2 = ($signed(tmp_8_cast2_reg_1942) + $signed(ap_const_lv7_50));

assign tmp_51_cast_fu_1050_p1 = tmp_50_fu_1045_p2;

assign tmp_51_fu_1063_p3 = {{ap_const_lv59_3}, {j_mid2_reg_1856}};

assign tmp_52_fu_1084_p2 = (tmp_8_cast1_fu_1071_p1 + ap_const_lv8_70);

assign tmp_53_cast_fu_1090_p1 = tmp_52_fu_1084_p2;

assign tmp_53_fu_1696_p2 = (tmp_37_fu_1661_p3 + tmp_7_cast_fu_1693_p1);

assign tmp_54_cast_fu_1747_p1 = tmp_53_reg_2450;

assign tmp_5_fu_1125_p2 = ((j_mid2_reg_1856 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_1116_p3 = {{ap_const_lv55_0}, {tmp_4_fu_1111_p2}};

assign tmp_7_cast_fu_1693_p1 = j_mid2_reg_1856;

assign tmp_7_fu_1107_p1 = j_mid2_reg_1856;

assign tmp_8_cast1_fu_1071_p1 = j_mid2_reg_1856;

assign tmp_8_cast2_fu_995_p1 = j_mid2_reg_1856;

assign tmp_8_cast3_fu_951_p1 = j_mid2_reg_1856;

assign tmp_8_cast_fu_954_p1 = j_mid2_reg_1856;

assign tmp_8_fu_937_p1 = j_mid2_fu_901_p3;

assign tmp_9_fu_1133_p2 = (tmp_1_reg_1997 | ap_const_lv9_2);

assign tmp_fu_915_p2 = ((i_phi_fu_855_p4 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_909_p2 = ((i_1_fu_889_p2 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_921_p3 = ((exitcond_fu_895_p2[0:0] === 1'b1) ? tmp_mid1_fu_909_p2 : tmp_fu_915_p2);

always @ (posedge ap_clk) begin
    tmp_8_reg_1885[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_8_cast_reg_1915[8:5] <= 4'b0000;
    tmp_8_cast2_reg_1942[6:5] <= 2'b00;
    tmp_1_reg_1997[3:0] <= 4'b0000;
    tmp_7_reg_2021[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //matmul_hw
