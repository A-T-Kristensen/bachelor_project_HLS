-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=4108,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=3117,HLS_SYN_LUT=1702}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv59_4 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv9_9 : STD_LOGIC_VECTOR (8 downto 0) := "000001001";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv9_A : STD_LOGIC_VECTOR (8 downto 0) := "000001010";
    constant ap_const_lv59_5 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv8_B0 : STD_LOGIC_VECTOR (7 downto 0) := "10110000";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv59_6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv9_D : STD_LOGIC_VECTOR (8 downto 0) := "000001101";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv59_7 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_836 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_847 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_858 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_869 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal tmp_5_reg_1965 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal exitcond_flatten_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_887_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_1833 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_fu_905_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_1838 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_925_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1857 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_mid2_v_fu_933_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_mid2_v_reg_1861 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_941_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_reg_1866 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_1891 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_1009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_1936 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_cast20_cast_fu_1032_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_cast20_cast_reg_1985 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_copy_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_load_reg_1995 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_0_1_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_load_reg_2020 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_1_fu_1105_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1117_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_41_reg_2040 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_copy_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_load_reg_2050 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_1_fu_1149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_load_reg_2075 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_1_fu_1191_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_cast2_fu_1203_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_cast2_reg_2095 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_4_load_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_4_1_fu_1239_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_5_load_reg_2131 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_5_1_fu_1281_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1083_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2156 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_6_load_reg_2161 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_6_1_fu_1325_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_2186 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_7_load_reg_2191 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_7_1_fu_1367_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1169_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_8_load_reg_2221 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_2231 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_8_1_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1217_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_2251 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_9_load_reg_2256 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_9_1_fu_1457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_4_reg_2281 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_10_load_reg_2286 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_2296 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_10_1_fu_1508_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_5_reg_2316 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_11_load_reg_2321 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_11_1_fu_1553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1582_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_51_reg_2346 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_6_reg_2351 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_12_load_reg_2356 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_2366 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_1597_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_2371 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_row_15_1_fu_1614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_15_1_reg_2376 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_14_1_fu_1621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_14_1_reg_2381 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_13_1_fu_1628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_13_1_reg_2386 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_12_1_fu_1635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1389_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_7_reg_2396 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_13_load_reg_2401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_1435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_8_reg_2411 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_14_load_reg_2416 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_9_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_15_load_reg_2436 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1528_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_s_reg_2441 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_2446 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_10_reg_2451 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_11_reg_2456 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1701_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_2461 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_12_reg_2466 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_13_reg_2471 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_reg_2476 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_14_reg_2481 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_s_fu_1724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_s_reg_2486 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_ce0 : STD_LOGIC;
    signal b_copy_0_we0 : STD_LOGIC;
    signal b_copy_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_1_ce0 : STD_LOGIC;
    signal b_copy_1_we0 : STD_LOGIC;
    signal b_copy_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_2_ce0 : STD_LOGIC;
    signal b_copy_2_we0 : STD_LOGIC;
    signal b_copy_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_3_ce0 : STD_LOGIC;
    signal b_copy_3_we0 : STD_LOGIC;
    signal b_copy_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_4_ce0 : STD_LOGIC;
    signal b_copy_4_we0 : STD_LOGIC;
    signal b_copy_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_5_ce0 : STD_LOGIC;
    signal b_copy_5_we0 : STD_LOGIC;
    signal b_copy_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_6_ce0 : STD_LOGIC;
    signal b_copy_6_we0 : STD_LOGIC;
    signal b_copy_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_7_ce0 : STD_LOGIC;
    signal b_copy_7_we0 : STD_LOGIC;
    signal b_copy_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_8_ce0 : STD_LOGIC;
    signal b_copy_8_we0 : STD_LOGIC;
    signal b_copy_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_9_ce0 : STD_LOGIC;
    signal b_copy_9_we0 : STD_LOGIC;
    signal b_copy_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_10_ce0 : STD_LOGIC;
    signal b_copy_10_we0 : STD_LOGIC;
    signal b_copy_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_11_ce0 : STD_LOGIC;
    signal b_copy_11_we0 : STD_LOGIC;
    signal b_copy_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_12_ce0 : STD_LOGIC;
    signal b_copy_12_we0 : STD_LOGIC;
    signal b_copy_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_13_ce0 : STD_LOGIC;
    signal b_copy_13_we0 : STD_LOGIC;
    signal b_copy_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_14_ce0 : STD_LOGIC;
    signal b_copy_14_we0 : STD_LOGIC;
    signal b_copy_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_15_ce0 : STD_LOGIC;
    signal b_copy_15_we0 : STD_LOGIC;
    signal indvar_flatten_phi_fu_840_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_851_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_862_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_964_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_cast_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_992_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1001_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1018_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_cast_fu_1041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1054_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1075_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1096_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_cast_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1140_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1161_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1182_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_cast_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1230_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1251_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1272_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_cast_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1316_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1337_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1358_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_cast_fu_1384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1406_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_1427_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_cast_fu_1472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_1499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_1520_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1544_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_cast_fu_1574_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_1729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_0_2_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_2_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_2_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_2_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_4_2_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_5_2_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_6_2_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_7_2_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_8_2_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_9_2_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_10_2_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_11_2_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_12_2_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_13_2_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_14_2_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_15_2_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_893_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid1_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_959_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast_fu_973_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_37_fu_976_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_987_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_1013_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_1035_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_1049_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1083_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1091_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1127_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1135_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1169_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1177_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_43_fu_1206_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1217_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1225_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_45_fu_1293_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1303_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1311_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1345_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1353_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_fu_1379_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1389_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1401_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1435_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1443_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_cast1_fu_1469_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1477_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1494_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1528_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1539_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast1_fu_1565_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_1568_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_fu_1536_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_cast_fu_1579_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1588_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1662_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1675_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component matmul_hw_mul_32seOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_b_copy_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    b_copy_0_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_0_address0,
        ce0 => b_copy_0_ce0,
        we0 => b_copy_0_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_0_q0);

    b_copy_1_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_1_address0,
        ce0 => b_copy_1_ce0,
        we0 => b_copy_1_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_1_q0);

    b_copy_2_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_2_address0,
        ce0 => b_copy_2_ce0,
        we0 => b_copy_2_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_2_q0);

    b_copy_3_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_3_address0,
        ce0 => b_copy_3_ce0,
        we0 => b_copy_3_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_3_q0);

    b_copy_4_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_4_address0,
        ce0 => b_copy_4_ce0,
        we0 => b_copy_4_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_4_q0);

    b_copy_5_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_5_address0,
        ce0 => b_copy_5_ce0,
        we0 => b_copy_5_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_5_q0);

    b_copy_6_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_6_address0,
        ce0 => b_copy_6_ce0,
        we0 => b_copy_6_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_6_q0);

    b_copy_7_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_7_address0,
        ce0 => b_copy_7_ce0,
        we0 => b_copy_7_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_7_q0);

    b_copy_8_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_8_address0,
        ce0 => b_copy_8_ce0,
        we0 => b_copy_8_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_8_q0);

    b_copy_9_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_9_address0,
        ce0 => b_copy_9_ce0,
        we0 => b_copy_9_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_9_q0);

    b_copy_10_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_10_address0,
        ce0 => b_copy_10_ce0,
        we0 => b_copy_10_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_10_q0);

    b_copy_11_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_11_address0,
        ce0 => b_copy_11_ce0,
        we0 => b_copy_11_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_11_q0);

    b_copy_12_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_12_address0,
        ce0 => b_copy_12_ce0,
        we0 => b_copy_12_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_12_q0);

    b_copy_13_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_13_address0,
        ce0 => b_copy_13_ce0,
        we0 => b_copy_13_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_13_q0);

    b_copy_14_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_14_address0,
        ce0 => b_copy_14_ce0,
        we0 => b_copy_14_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_14_q0);

    b_copy_15_U : component matmul_hw_b_copy_0
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_copy_15_address0,
        ce0 => b_copy_15_ce0,
        we0 => b_copy_15_we0,
        d0 => a_1_Dout_A,
        q0 => b_copy_15_q0);

    matmul_hw_mul_32seOg_U1 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1083_p0,
        din1 => b_copy_0_load_reg_1995,
        ce => ap_const_logic_1,
        dout => grp_fu_1083_p2);

    matmul_hw_mul_32seOg_U2 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1127_p0,
        din1 => b_copy_1_load_reg_2020,
        ce => ap_const_logic_1,
        dout => grp_fu_1127_p2);

    matmul_hw_mul_32seOg_U3 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1169_p0,
        din1 => b_copy_2_load_reg_2050,
        ce => ap_const_logic_1,
        dout => grp_fu_1169_p2);

    matmul_hw_mul_32seOg_U4 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1217_p0,
        din1 => b_copy_3_load_reg_2075,
        ce => ap_const_logic_1,
        dout => grp_fu_1217_p2);

    matmul_hw_mul_32seOg_U5 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1259_p0,
        din1 => b_copy_4_load_reg_2106,
        ce => ap_const_logic_1,
        dout => grp_fu_1259_p2);

    matmul_hw_mul_32seOg_U6 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1303_p0,
        din1 => b_copy_5_load_reg_2131,
        ce => ap_const_logic_1,
        dout => grp_fu_1303_p2);

    matmul_hw_mul_32seOg_U7 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1345_p0,
        din1 => b_copy_6_load_reg_2161,
        ce => ap_const_logic_1,
        dout => grp_fu_1345_p2);

    matmul_hw_mul_32seOg_U8 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1389_p0,
        din1 => b_copy_7_load_reg_2191,
        ce => ap_const_logic_1,
        dout => grp_fu_1389_p2);

    matmul_hw_mul_32seOg_U9 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1435_p0,
        din1 => b_copy_8_load_reg_2221,
        ce => ap_const_logic_1,
        dout => grp_fu_1435_p2);

    matmul_hw_mul_32seOg_U10 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1477_p0,
        din1 => b_copy_9_load_reg_2256,
        ce => ap_const_logic_1,
        dout => grp_fu_1477_p2);

    matmul_hw_mul_32seOg_U11 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1528_p0,
        din1 => b_copy_10_load_reg_2286,
        ce => ap_const_logic_1,
        dout => grp_fu_1528_p2);

    matmul_hw_mul_32seOg_U12 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1588_p0,
        din1 => b_copy_11_load_reg_2321,
        ce => ap_const_logic_1,
        dout => grp_fu_1588_p2);

    matmul_hw_mul_32seOg_U13 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1662_p0,
        din1 => b_copy_12_load_reg_2356,
        ce => ap_const_logic_1,
        dout => grp_fu_1662_p2);

    matmul_hw_mul_32seOg_U14 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_13_1_reg_2386,
        din1 => b_copy_13_load_reg_2401,
        ce => ap_const_logic_1,
        dout => grp_fu_1667_p2);

    matmul_hw_mul_32seOg_U15 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_14_1_reg_2381,
        din1 => b_copy_14_load_reg_2416,
        ce => ap_const_logic_1,
        dout => grp_fu_1685_p2);

    matmul_hw_mul_32seOg_U16 : component matmul_hw_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_15_1_reg_2376,
        din1 => b_copy_15_load_reg_2436,
        ce => ap_const_logic_1,
        dout => grp_fu_1689_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_881_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((exitcond_flatten_reg_1829 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_847_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_847 <= i2_mid2_v_reg_1861;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_847 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_836_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_836 <= indvar_flatten_next_reg_1833;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_836 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_858_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_858 <= j_1_reg_2371;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_858 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_row_0_2_fu_128 <= a_row_0_1_fu_1063_p3;
                b_copy_1_load_reg_2020 <= b_copy_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                a_row_10_2_fu_168 <= a_row_10_1_fu_1508_p3;
                b_copy_11_load_reg_2321 <= b_copy_11_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                a_row_11_2_fu_172 <= a_row_11_1_fu_1553_p3;
                b_copy_12_load_reg_2356 <= b_copy_12_q0;
                j_1_reg_2371 <= j_1_fu_1597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_12_2_fu_176 <= a_row_12_1_fu_1635_p3;
                a_row_13_2_fu_180 <= a_row_13_1_fu_1628_p3;
                a_row_14_2_fu_184 <= a_row_14_1_fu_1621_p3;
                a_row_15_2_fu_188 <= a_row_15_1_fu_1614_p3;
                b_copy_13_load_reg_2401 <= b_copy_13_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_13_1_reg_2386 <= a_row_13_1_fu_1628_p3;
                a_row_14_1_reg_2381 <= a_row_14_1_fu_1621_p3;
                a_row_15_1_reg_2376 <= a_row_15_1_fu_1614_p3;
                tmp_11_7_reg_2396 <= grp_fu_1389_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_row_1_2_fu_132 <= a_row_1_1_fu_1105_p3;
                b_copy_2_load_reg_2050 <= b_copy_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_row_2_2_fu_136 <= a_row_2_1_fu_1149_p3;
                b_copy_3_load_reg_2075 <= b_copy_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                a_row_3_2_fu_140 <= a_row_3_1_fu_1191_p3;
                b_copy_4_load_reg_2106 <= b_copy_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                a_row_4_2_fu_144 <= a_row_4_1_fu_1239_p3;
                b_copy_5_load_reg_2131 <= b_copy_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                a_row_5_2_fu_148 <= a_row_5_1_fu_1281_p3;
                b_copy_6_load_reg_2161 <= b_copy_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                a_row_6_2_fu_152 <= a_row_6_1_fu_1325_p3;
                b_copy_7_load_reg_2191 <= b_copy_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                a_row_7_2_fu_156 <= a_row_7_1_fu_1367_p3;
                b_copy_8_load_reg_2221 <= b_copy_8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                a_row_8_2_fu_160 <= a_row_8_1_fu_1415_p3;
                b_copy_9_load_reg_2256 <= b_copy_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                a_row_9_2_fu_164 <= a_row_9_1_fu_1457_p3;
                b_copy_10_load_reg_2286 <= b_copy_10_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829 <= exitcond_flatten_reg_1829;
                exitcond_flatten_reg_1829 <= exitcond_flatten_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                b_copy_0_load_reg_1995 <= b_copy_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                b_copy_14_load_reg_2416 <= b_copy_14_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                b_copy_15_load_reg_2436 <= b_copy_15_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_881_p2))) then
                i2_mid2_v_reg_1861 <= i2_mid2_v_fu_933_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1833 <= indvar_flatten_next_fu_887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_881_p2))) then
                j_mid2_reg_1838 <= j_mid2_fu_905_p3;
                    tmp_2_reg_1866(8 downto 4) <= tmp_2_fu_941_p3(8 downto 4);
                tmp_mid2_reg_1857 <= tmp_mid2_fu_925_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_5_reg_1965))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then
                reg_869 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then
                reg_873 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_5_reg_1965)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then
                reg_877 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp10_reg_2446 <= tmp10_fu_1693_p2;
                tmp_11_s_reg_2441 <= grp_fu_1528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp13_reg_2476 <= tmp13_fu_1706_p2;
                tmp_11_13_reg_2471 <= grp_fu_1685_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp1_reg_2426 <= tmp1_fu_1680_p2;
                tmp_11_8_reg_2411 <= grp_fu_1435_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                tmp2_reg_2296 <= tmp2_fu_1486_p2;
                tmp_11_4_reg_2281 <= grp_fu_1259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                tmp3_reg_2231 <= tmp3_fu_1394_p2;
                tmp_11_2_reg_2216 <= grp_fu_1169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                tmp6_reg_2366 <= tmp6_fu_1593_p2;
                tmp_11_6_reg_2351 <= grp_fu_1345_p2;
                tmp_51_reg_2346 <= tmp_51_fu_1582_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp9_reg_2461 <= tmp9_fu_1701_p2;
                tmp_11_11_reg_2456 <= grp_fu_1662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp_11_10_reg_2451 <= grp_fu_1588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp_11_12_reg_2466 <= grp_fu_1667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp_11_14_reg_2481 <= grp_fu_1689_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_11_1_reg_2186 <= grp_fu_1127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                tmp_11_3_reg_2251 <= grp_fu_1217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                tmp_11_5_reg_2316 <= grp_fu_1303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp_11_9_reg_2431 <= grp_fu_1477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) then
                tmp_12_s_reg_2486 <= tmp_12_s_fu_1724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_mid2_reg_1857)))) then
                tmp_41_reg_2040 <= tmp_41_fu_1117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_5_reg_1965 <= tmp_5_fu_1027_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                    tmp_7_reg_1936(4 downto 0) <= tmp_7_fu_1009_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1857)))) then
                    tmp_8_cast20_cast_reg_1985(4 downto 0) <= tmp_8_cast20_cast_fu_1032_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1857)))) then
                    tmp_8_cast2_reg_2095(4 downto 0) <= tmp_8_cast2_fu_1203_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_881_p2) and not((ap_const_lv1_0 = tmp_mid2_fu_925_p3)))) then
                    tmp_8_reg_1891(4 downto 0) <= tmp_8_fu_954_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                tmp_s_reg_2156 <= grp_fu_1083_p2;
            end if;
        end if;
    end process;
    tmp_2_reg_1866(3 downto 0) <= "0000";
    tmp_8_reg_1891(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_7_reg_1936(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_8_cast20_cast_reg_1985(6 downto 5) <= "00";
    tmp_8_cast2_reg_2095(7 downto 5) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, exitcond_flatten_fu_881_p2, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_881_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, tmp_3_fu_949_p1, tmp_6_fu_964_p3, tmp_10_fu_992_p3, tmp_12_fu_1018_p3, tmp_14_fu_1054_p3, tmp_16_fu_1096_p3, tmp_18_fu_1140_p3, tmp_20_fu_1182_p3, tmp_22_fu_1230_p3, tmp_24_fu_1272_p3, tmp_26_fu_1316_p3, tmp_28_fu_1358_p3, tmp_30_fu_1406_p3, tmp_32_fu_1448_p3, tmp_34_fu_1499_p3, tmp_36_fu_1544_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_0_Addr_A_orig <= tmp_36_fu_1544_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_0_Addr_A_orig <= tmp_34_fu_1499_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_0_Addr_A_orig <= tmp_32_fu_1448_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_0_Addr_A_orig <= tmp_30_fu_1406_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_0_Addr_A_orig <= tmp_28_fu_1358_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_0_Addr_A_orig <= tmp_26_fu_1316_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_0_Addr_A_orig <= tmp_24_fu_1272_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_0_Addr_A_orig <= tmp_22_fu_1230_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_20_fu_1182_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_18_fu_1140_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_16_fu_1096_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_14_fu_1054_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_12_fu_1018_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_10_fu_992_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_6_fu_964_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_949_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, tmp_8_fu_954_p1, tmp_37_cast_fu_982_p1, tmp_38_fu_1001_p3, tmp_39_cast_fu_1041_p1, tmp_40_fu_1075_p3, tmp_41_cast_fu_1122_p1, tmp_42_fu_1161_p3, tmp_43_cast_fu_1212_p1, tmp_44_fu_1251_p3, tmp_45_cast_fu_1298_p1, tmp_46_fu_1337_p3, tmp_47_cast_fu_1384_p1, tmp_48_fu_1427_p3, tmp_49_cast_fu_1472_p1, tmp_49_fu_1520_p3, tmp_51_cast_fu_1574_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_1_Addr_A_orig <= tmp_51_cast_fu_1574_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_1_Addr_A_orig <= tmp_49_fu_1520_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_1_Addr_A_orig <= tmp_49_cast_fu_1472_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_1_Addr_A_orig <= tmp_48_fu_1427_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_1_Addr_A_orig <= tmp_47_cast_fu_1384_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_1_Addr_A_orig <= tmp_46_fu_1337_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_1_Addr_A_orig <= tmp_45_cast_fu_1298_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_1_Addr_A_orig <= tmp_44_fu_1251_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_43_cast_fu_1212_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_42_fu_1161_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_41_cast_fu_1122_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_40_fu_1075_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_39_cast_fu_1041_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_38_fu_1001_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_37_cast_fu_982_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_8_fu_954_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_2_Addr_A_orig <= tmp_52_cast_fu_1729_p1(32 - 1 downto 0);
    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= tmp_12_s_reg_2486;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage10, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;

    a_2_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage10, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829)))) then 
            a_2_WEN_A <= ap_const_lv4_F;
        else 
            a_2_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_0_1_fu_1063_p3 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_0_2_fu_128;
    a_row_10_1_fu_1508_p3 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_10_2_fu_168;
    a_row_11_1_fu_1553_p3 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_11_2_fu_172;
    a_row_12_1_fu_1635_p3 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_12_2_fu_176;
    a_row_13_1_fu_1628_p3 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_13_2_fu_180;
    a_row_14_1_fu_1621_p3 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_14_2_fu_184;
    a_row_15_1_fu_1614_p3 <= 
        a_0_Dout_A when (tmp_5_reg_1965(0) = '1') else 
        a_row_15_2_fu_188;
    a_row_1_1_fu_1105_p3 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_1_2_fu_132;
    a_row_2_1_fu_1149_p3 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_2_2_fu_136;
    a_row_3_1_fu_1191_p3 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_3_2_fu_140;
    a_row_4_1_fu_1239_p3 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_4_2_fu_144;
    a_row_5_1_fu_1281_p3 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_5_2_fu_148;
    a_row_6_1_fu_1325_p3 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_6_2_fu_152;
    a_row_7_1_fu_1367_p3 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_7_2_fu_156;
    a_row_8_1_fu_1415_p3 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_8_2_fu_160;
    a_row_9_1_fu_1457_p3 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_9_2_fu_164;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state29 <= ap_CS_fsm(17 downto 17);

    ap_done_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_8_reg_1891, tmp_7_fu_1009_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_0_address0 <= tmp_7_fu_1009_p1(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_0_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_0_address0 <= "XXXX";
            end if;
        else 
            b_copy_0_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)))) then 
            b_copy_0_ce0 <= ap_const_logic_1;
        else 
            b_copy_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_0_we0 <= ap_const_logic_1;
        else 
            b_copy_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_copy_10_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_copy_10_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_10_address0 <= "XXXX";
            end if;
        else 
            b_copy_10_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            b_copy_10_ce0 <= ap_const_logic_1;
        else 
            b_copy_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_10_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage11, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_10_we0 <= ap_const_logic_1;
        else 
            b_copy_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_copy_11_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_copy_11_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_11_address0 <= "XXXX";
            end if;
        else 
            b_copy_11_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            b_copy_11_ce0 <= ap_const_logic_1;
        else 
            b_copy_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_11_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage12, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_11_we0 <= ap_const_logic_1;
        else 
            b_copy_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_copy_12_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_copy_12_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_12_address0 <= "XXXX";
            end if;
        else 
            b_copy_12_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then 
            b_copy_12_ce0 <= ap_const_logic_1;
        else 
            b_copy_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_12_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage13, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_12_we0 <= ap_const_logic_1;
        else 
            b_copy_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_copy_13_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_copy_13_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_13_address0 <= "XXXX";
            end if;
        else 
            b_copy_13_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then 
            b_copy_13_ce0 <= ap_const_logic_1;
        else 
            b_copy_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_13_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage14, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_13_we0 <= ap_const_logic_1;
        else 
            b_copy_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, tmp_8_reg_1891, tmp_7_reg_1936, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            b_copy_14_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            b_copy_14_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
        else 
            b_copy_14_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            b_copy_14_ce0 <= ap_const_logic_1;
        else 
            b_copy_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_14_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage15, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_14_we0 <= ap_const_logic_1;
        else 
            b_copy_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_8_reg_1891, tmp_7_reg_1936, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_copy_15_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_copy_15_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_15_address0 <= "XXXX";
            end if;
        else 
            b_copy_15_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            b_copy_15_ce0 <= ap_const_logic_1;
        else 
            b_copy_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_mid2_reg_1857, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = tmp_mid2_reg_1857)) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            b_copy_15_we0 <= ap_const_logic_1;
        else 
            b_copy_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_1_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_copy_1_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_1_address0 <= "XXXX";
            end if;
        else 
            b_copy_1_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            b_copy_1_ce0 <= ap_const_logic_1;
        else 
            b_copy_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_1_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage2, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_1_we0 <= ap_const_logic_1;
        else 
            b_copy_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_2_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_copy_2_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_2_address0 <= "XXXX";
            end if;
        else 
            b_copy_2_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            b_copy_2_ce0 <= ap_const_logic_1;
        else 
            b_copy_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_2_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage3, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_2_we0 <= ap_const_logic_1;
        else 
            b_copy_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_3_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_copy_3_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_3_address0 <= "XXXX";
            end if;
        else 
            b_copy_3_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then 
            b_copy_3_ce0 <= ap_const_logic_1;
        else 
            b_copy_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_3_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage4, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_3_we0 <= ap_const_logic_1;
        else 
            b_copy_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_4_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_copy_4_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_4_address0 <= "XXXX";
            end if;
        else 
            b_copy_4_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_copy_4_ce0 <= ap_const_logic_1;
        else 
            b_copy_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_4_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage5, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_4_we0 <= ap_const_logic_1;
        else 
            b_copy_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_5_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_copy_5_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_5_address0 <= "XXXX";
            end if;
        else 
            b_copy_5_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_copy_5_ce0 <= ap_const_logic_1;
        else 
            b_copy_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_5_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage6, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_5_we0 <= ap_const_logic_1;
        else 
            b_copy_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_6_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_copy_6_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_6_address0 <= "XXXX";
            end if;
        else 
            b_copy_6_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            b_copy_6_ce0 <= ap_const_logic_1;
        else 
            b_copy_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_6_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage7, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_6_we0 <= ap_const_logic_1;
        else 
            b_copy_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_copy_7_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_copy_7_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_7_address0 <= "XXXX";
            end if;
        else 
            b_copy_7_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            b_copy_7_ce0 <= ap_const_logic_1;
        else 
            b_copy_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_7_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage8, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_7_we0 <= ap_const_logic_1;
        else 
            b_copy_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_copy_8_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_copy_8_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_8_address0 <= "XXXX";
            end if;
        else 
            b_copy_8_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            b_copy_8_ce0 <= ap_const_logic_1;
        else 
            b_copy_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_8_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage9, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_8_we0 <= ap_const_logic_1;
        else 
            b_copy_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, tmp_8_reg_1891, tmp_7_reg_1936)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_copy_9_address0 <= tmp_7_reg_1936(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_copy_9_address0 <= tmp_8_reg_1891(4 - 1 downto 0);
            else 
                b_copy_9_address0 <= "XXXX";
            end if;
        else 
            b_copy_9_address0 <= "XXXX";
        end if; 
    end process;


    b_copy_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            b_copy_9_ce0 <= ap_const_logic_1;
        else 
            b_copy_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_copy_9_we0_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage10, tmp_mid2_reg_1857)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and not((ap_const_lv1_0 = tmp_mid2_reg_1857))))) then 
            b_copy_9_we0 <= ap_const_logic_1;
        else 
            b_copy_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_881_p2 <= "1" when (indvar_flatten_phi_fu_840_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_899_p2 <= "1" when (j_phi_fu_862_p4 = ap_const_lv5_10) else "0";
    grp_fu_1083_p0 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_0_2_fu_128;
    grp_fu_1127_p0 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_1_2_fu_132;
    grp_fu_1169_p0 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_2_2_fu_136;
    grp_fu_1217_p0 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_3_2_fu_140;
    grp_fu_1259_p0 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_4_2_fu_144;
    grp_fu_1303_p0 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_5_2_fu_148;
    grp_fu_1345_p0 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_6_2_fu_152;
    grp_fu_1389_p0 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_7_2_fu_156;
    grp_fu_1435_p0 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_8_2_fu_160;
    grp_fu_1477_p0 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_9_2_fu_164;
    grp_fu_1528_p0 <= 
        reg_873 when (tmp_5_reg_1965(0) = '1') else 
        a_row_10_2_fu_168;
    grp_fu_1588_p0 <= 
        reg_877 when (tmp_5_reg_1965(0) = '1') else 
        a_row_11_2_fu_172;
    grp_fu_1662_p0 <= 
        reg_869 when (tmp_5_reg_1965(0) = '1') else 
        a_row_12_2_fu_176;
    i2_mid2_v_fu_933_p3 <= 
        i_1_fu_893_p2 when (exitcond_fu_899_p2(0) = '1') else 
        i_phi_fu_851_p4;
    i_1_fu_893_p2 <= std_logic_vector(unsigned(i_phi_fu_851_p4) + unsigned(ap_const_lv5_1));

    i_phi_fu_851_p4_assign_proc : process(i_reg_847, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage0, i2_mid2_v_reg_1861, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_851_p4 <= i2_mid2_v_reg_1861;
        else 
            i_phi_fu_851_p4 <= i_reg_847;
        end if; 
    end process;

    indvar_flatten_next_fu_887_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_840_p4) + unsigned(ap_const_lv9_1));

    indvar_flatten_phi_fu_840_p4_assign_proc : process(indvar_flatten_reg_836, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1833, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_840_p4 <= indvar_flatten_next_reg_1833;
        else 
            indvar_flatten_phi_fu_840_p4 <= indvar_flatten_reg_836;
        end if; 
    end process;

    j_1_fu_1597_p2 <= std_logic_vector(unsigned(j_mid2_reg_1838) + unsigned(ap_const_lv5_1));
    j_mid2_fu_905_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_899_p2(0) = '1') else 
        j_phi_fu_862_p4;

    j_phi_fu_862_p4_assign_proc : process(j_reg_858, exitcond_flatten_reg_1829, ap_CS_fsm_pp0_stage0, j_1_reg_2371, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1829 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_862_p4 <= j_1_reg_2371;
        else 
            j_phi_fu_862_p4 <= j_reg_858;
        end if; 
    end process;

    tmp10_fu_1693_p2 <= std_logic_vector(unsigned(tmp_11_9_reg_2431) + unsigned(tmp_11_8_reg_2411));
    tmp11_fu_1697_p2 <= std_logic_vector(unsigned(tmp_11_10_reg_2451) + unsigned(tmp_11_s_reg_2441));
    tmp12_fu_1714_p2 <= std_logic_vector(unsigned(tmp13_reg_2476) + unsigned(tmp14_fu_1710_p2));
    tmp13_fu_1706_p2 <= std_logic_vector(unsigned(tmp_11_12_reg_2466) + unsigned(tmp_11_11_reg_2456));
    tmp14_fu_1710_p2 <= std_logic_vector(unsigned(tmp_11_14_reg_2481) + unsigned(tmp_11_13_reg_2471));
    tmp1_fu_1680_p2 <= std_logic_vector(unsigned(tmp2_reg_2296) + unsigned(tmp5_fu_1675_p2));
    tmp2_fu_1486_p2 <= std_logic_vector(unsigned(tmp3_reg_2231) + unsigned(tmp4_fu_1482_p2));
    tmp3_fu_1394_p2 <= std_logic_vector(unsigned(tmp_11_1_reg_2186) + unsigned(tmp_s_reg_2156));
    tmp4_fu_1482_p2 <= std_logic_vector(unsigned(tmp_11_3_reg_2251) + unsigned(tmp_11_2_reg_2216));
    tmp5_fu_1675_p2 <= std_logic_vector(unsigned(tmp6_reg_2366) + unsigned(tmp7_fu_1671_p2));
    tmp6_fu_1593_p2 <= std_logic_vector(unsigned(tmp_11_5_reg_2316) + unsigned(tmp_11_4_reg_2281));
    tmp7_fu_1671_p2 <= std_logic_vector(unsigned(tmp_11_7_reg_2396) + unsigned(tmp_11_6_reg_2351));
    tmp8_fu_1719_p2 <= std_logic_vector(unsigned(tmp9_reg_2461) + unsigned(tmp12_fu_1714_p2));
    tmp9_fu_1701_p2 <= std_logic_vector(unsigned(tmp10_reg_2446) + unsigned(tmp11_fu_1697_p2));
    tmp_10_fu_992_p3 <= (ap_const_lv55_0 & tmp_9_fu_987_p2);
    tmp_11_fu_1013_p2 <= (tmp_2_reg_1866 or ap_const_lv9_3);
    tmp_12_fu_1018_p3 <= (ap_const_lv55_0 & tmp_11_fu_1013_p2);
    tmp_12_s_fu_1724_p2 <= std_logic_vector(unsigned(tmp1_reg_2426) + unsigned(tmp8_fu_1719_p2));
    tmp_13_fu_1049_p2 <= (tmp_2_reg_1866 or ap_const_lv9_4);
    tmp_14_fu_1054_p3 <= (ap_const_lv55_0 & tmp_13_fu_1049_p2);
    tmp_15_fu_1091_p2 <= (tmp_2_reg_1866 or ap_const_lv9_5);
    tmp_16_fu_1096_p3 <= (ap_const_lv55_0 & tmp_15_fu_1091_p2);
    tmp_17_fu_1135_p2 <= (tmp_2_reg_1866 or ap_const_lv9_6);
    tmp_18_fu_1140_p3 <= (ap_const_lv55_0 & tmp_17_fu_1135_p2);
    tmp_19_fu_1177_p2 <= (tmp_2_reg_1866 or ap_const_lv9_7);
    tmp_20_fu_1182_p3 <= (ap_const_lv55_0 & tmp_19_fu_1177_p2);
    tmp_21_fu_1225_p2 <= (tmp_2_reg_1866 or ap_const_lv9_8);
    tmp_22_fu_1230_p3 <= (ap_const_lv55_0 & tmp_21_fu_1225_p2);
    tmp_23_fu_1267_p2 <= (tmp_2_reg_1866 or ap_const_lv9_9);
    tmp_24_fu_1272_p3 <= (ap_const_lv55_0 & tmp_23_fu_1267_p2);
    tmp_25_fu_1311_p2 <= (tmp_2_reg_1866 or ap_const_lv9_A);
    tmp_26_fu_1316_p3 <= (ap_const_lv55_0 & tmp_25_fu_1311_p2);
    tmp_27_fu_1353_p2 <= (tmp_2_reg_1866 or ap_const_lv9_B);
    tmp_28_fu_1358_p3 <= (ap_const_lv55_0 & tmp_27_fu_1353_p2);
    tmp_29_fu_1401_p2 <= (tmp_2_reg_1866 or ap_const_lv9_C);
    tmp_2_fu_941_p3 <= (i2_mid2_v_fu_933_p3 & ap_const_lv4_0);
    tmp_30_fu_1406_p3 <= (ap_const_lv55_0 & tmp_29_fu_1401_p2);
    tmp_31_fu_1443_p2 <= (tmp_2_reg_1866 or ap_const_lv9_D);
    tmp_32_fu_1448_p3 <= (ap_const_lv55_0 & tmp_31_fu_1443_p2);
    tmp_33_fu_1494_p2 <= (tmp_2_reg_1866 or ap_const_lv9_E);
    tmp_34_fu_1499_p3 <= (ap_const_lv55_0 & tmp_33_fu_1494_p2);
    tmp_35_fu_1539_p2 <= (tmp_2_reg_1866 or ap_const_lv9_F);
    tmp_36_fu_1544_p3 <= (ap_const_lv55_0 & tmp_35_fu_1539_p2);
    tmp_37_cast_fu_982_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_976_p2),64));
    tmp_37_fu_976_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_973_p1) + unsigned(ap_const_lv6_10));
    tmp_38_fu_1001_p3 <= (ap_const_lv59_1 & j_mid2_reg_1838);
    tmp_39_cast_fu_1041_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_1035_p2),64));
    tmp_39_fu_1035_p2 <= std_logic_vector(unsigned(tmp_8_cast20_cast_fu_1032_p1) + unsigned(ap_const_lv7_30));
    tmp_3_cast_fu_1536_p1 <= std_logic_vector(resize(unsigned(tmp_2_reg_1866),10));
    tmp_3_fu_949_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_941_p3),64));
    tmp_40_fu_1075_p3 <= (ap_const_lv59_2 & j_mid2_reg_1838);
    tmp_41_cast_fu_1122_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_1117_p2),64));
    tmp_41_fu_1117_p2 <= std_logic_vector(unsigned(tmp_8_cast20_cast_reg_1985) + unsigned(ap_const_lv7_50));
    tmp_42_fu_1161_p3 <= (ap_const_lv59_3 & j_mid2_reg_1838);
    tmp_43_cast_fu_1212_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_1206_p2),64));
    tmp_43_fu_1206_p2 <= std_logic_vector(unsigned(tmp_8_cast2_fu_1203_p1) + unsigned(ap_const_lv8_70));
    tmp_44_fu_1251_p3 <= (ap_const_lv59_4 & j_mid2_reg_1838);
    tmp_45_cast_fu_1298_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_1293_p2),64));
    tmp_45_fu_1293_p2 <= std_logic_vector(unsigned(tmp_8_cast2_reg_2095) + unsigned(ap_const_lv8_90));
    tmp_46_fu_1337_p3 <= (ap_const_lv59_5 & j_mid2_reg_1838);
    tmp_47_cast_fu_1384_p1 <= std_logic_vector(resize(unsigned(tmp_47_fu_1379_p2),64));
    tmp_47_fu_1379_p2 <= std_logic_vector(unsigned(tmp_8_cast2_reg_2095) + unsigned(ap_const_lv8_B0));
    tmp_48_fu_1427_p3 <= (ap_const_lv59_6 & j_mid2_reg_1838);
        tmp_49_cast1_fu_1469_p1 <= std_logic_vector(resize(signed(tmp_41_reg_2040),8));

    tmp_49_cast_fu_1472_p1 <= std_logic_vector(resize(unsigned(tmp_49_cast1_fu_1469_p1),64));
    tmp_49_fu_1520_p3 <= (ap_const_lv59_7 & j_mid2_reg_1838);
    tmp_4_fu_959_p2 <= (tmp_2_reg_1866 or ap_const_lv9_1);
    tmp_50_fu_1568_p2 <= std_logic_vector(unsigned(tmp_8_cast1_fu_1565_p1) + unsigned(ap_const_lv9_F0));
    tmp_51_cast_fu_1574_p1 <= std_logic_vector(resize(unsigned(tmp_50_fu_1568_p2),64));
    tmp_51_fu_1582_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_1536_p1) + unsigned(tmp_7_cast_fu_1579_p1));
    tmp_52_cast_fu_1729_p1 <= std_logic_vector(resize(unsigned(tmp_51_reg_2346),64));
    tmp_5_fu_1027_p2 <= "1" when (j_mid2_reg_1838 = ap_const_lv5_0) else "0";
    tmp_6_fu_964_p3 <= (ap_const_lv55_0 & tmp_4_fu_959_p2);
    tmp_7_cast_fu_1579_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),10));
    tmp_7_fu_1009_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),64));
    tmp_8_cast1_fu_1565_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),9));
    tmp_8_cast20_cast_fu_1032_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),7));
    tmp_8_cast2_fu_1203_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),8));
    tmp_8_cast_fu_973_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1838),6));
    tmp_8_fu_954_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_905_p3),64));
    tmp_9_fu_987_p2 <= (tmp_2_reg_1866 or ap_const_lv9_2);
    tmp_fu_919_p2 <= "1" when (i_phi_fu_851_p4 = ap_const_lv5_0) else "0";
    tmp_mid1_fu_913_p2 <= "1" when (i_1_fu_893_p2 = ap_const_lv5_0) else "0";
    tmp_mid2_fu_925_p3 <= 
        tmp_mid1_fu_913_p2 when (exitcond_fu_899_p2(0) = '1') else 
        tmp_fu_919_p2;
end behav;
