

================================================================
== Vivado HLS Report for 'matmul_hw'
================================================================
* Date:           Mon Apr 24 20:56:45 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul_int
* Solution:       matmul_1b_32x32
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.05|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  74754|  74754|  74755|  74755|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-------+-------+----------+-----------+-----------+------+----------+
        |- L_col   |  74752|  74752|        73|         73|          1|  1024|    yes   |
        +----------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 73, depth = 73


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 75
* Pipeline: 1
  Pipeline-0: II = 73, D = 73, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	75  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	2  / true
75 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_0_2 (2)  [1/1] 0.00ns
:0  %a_row_0_2 = alloca i32

ST_1: a_row_1_2 (3)  [1/1] 0.00ns
:1  %a_row_1_2 = alloca i32

ST_1: a_row_2_2 (4)  [1/1] 0.00ns
:2  %a_row_2_2 = alloca i32

ST_1: a_row_3_2 (5)  [1/1] 0.00ns
:3  %a_row_3_2 = alloca i32

ST_1: a_row_4_2 (6)  [1/1] 0.00ns
:4  %a_row_4_2 = alloca i32

ST_1: a_row_5_2 (7)  [1/1] 0.00ns
:5  %a_row_5_2 = alloca i32

ST_1: a_row_6_2 (8)  [1/1] 0.00ns
:6  %a_row_6_2 = alloca i32

ST_1: a_row_7_2 (9)  [1/1] 0.00ns
:7  %a_row_7_2 = alloca i32

ST_1: a_row_8_2 (10)  [1/1] 0.00ns
:8  %a_row_8_2 = alloca i32

ST_1: a_row_9_2 (11)  [1/1] 0.00ns
:9  %a_row_9_2 = alloca i32

ST_1: a_row_10_2 (12)  [1/1] 0.00ns
:10  %a_row_10_2 = alloca i32

ST_1: a_row_11_2 (13)  [1/1] 0.00ns
:11  %a_row_11_2 = alloca i32

ST_1: a_row_12_2 (14)  [1/1] 0.00ns
:12  %a_row_12_2 = alloca i32

ST_1: a_row_13_2 (15)  [1/1] 0.00ns
:13  %a_row_13_2 = alloca i32

ST_1: a_row_14_2 (16)  [1/1] 0.00ns
:14  %a_row_14_2 = alloca i32

ST_1: a_row_15_2 (17)  [1/1] 0.00ns
:15  %a_row_15_2 = alloca i32

ST_1: a_row_16_2 (18)  [1/1] 0.00ns
:16  %a_row_16_2 = alloca i32

ST_1: a_row_17_2 (19)  [1/1] 0.00ns
:17  %a_row_17_2 = alloca i32

ST_1: a_row_18_2 (20)  [1/1] 0.00ns
:18  %a_row_18_2 = alloca i32

ST_1: a_row_19_2 (21)  [1/1] 0.00ns
:19  %a_row_19_2 = alloca i32

ST_1: a_row_20_2 (22)  [1/1] 0.00ns
:20  %a_row_20_2 = alloca i32

ST_1: a_row_21_2 (23)  [1/1] 0.00ns
:21  %a_row_21_2 = alloca i32

ST_1: a_row_22_2 (24)  [1/1] 0.00ns
:22  %a_row_22_2 = alloca i32

ST_1: a_row_23_2 (25)  [1/1] 0.00ns
:23  %a_row_23_2 = alloca i32

ST_1: a_row_24_2 (26)  [1/1] 0.00ns
:24  %a_row_24_2 = alloca i32

ST_1: a_row_25_2 (27)  [1/1] 0.00ns
:25  %a_row_25_2 = alloca i32

ST_1: a_row_26_2 (28)  [1/1] 0.00ns
:26  %a_row_26_2 = alloca i32

ST_1: a_row_27_2 (29)  [1/1] 0.00ns
:27  %a_row_27_2 = alloca i32

ST_1: a_row_28_2 (30)  [1/1] 0.00ns
:28  %a_row_28_2 = alloca i32

ST_1: a_row_29_2 (31)  [1/1] 0.00ns
:29  %a_row_29_2 = alloca i32

ST_1: a_row_30_2 (32)  [1/1] 0.00ns
:30  %a_row_30_2 = alloca i32

ST_1: a_row_31_2 (33)  [1/1] 0.00ns
:31  %a_row_31_2 = alloca i32

ST_1: StgValue_108 (34)  [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecBitsMap([3072 x i32]* %a) nounwind, !map !7

ST_1: StgValue_109 (35)  [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matmul_hw_str) nounwind

ST_1: b_copy_0 (36)  [1/1] 0.00ns  loc: matmul.cpp:14
:34  %b_copy_0 = alloca [32 x i32], align 16

ST_1: b_copy_1 (37)  [1/1] 0.00ns  loc: matmul.cpp:14
:35  %b_copy_1 = alloca [32 x i32], align 16

ST_1: b_copy_2 (38)  [1/1] 0.00ns  loc: matmul.cpp:14
:36  %b_copy_2 = alloca [32 x i32], align 16

ST_1: b_copy_3 (39)  [1/1] 0.00ns  loc: matmul.cpp:14
:37  %b_copy_3 = alloca [32 x i32], align 16

ST_1: b_copy_4 (40)  [1/1] 0.00ns  loc: matmul.cpp:14
:38  %b_copy_4 = alloca [32 x i32], align 16

ST_1: b_copy_5 (41)  [1/1] 0.00ns  loc: matmul.cpp:14
:39  %b_copy_5 = alloca [32 x i32], align 16

ST_1: b_copy_6 (42)  [1/1] 0.00ns  loc: matmul.cpp:14
:40  %b_copy_6 = alloca [32 x i32], align 16

ST_1: b_copy_7 (43)  [1/1] 0.00ns  loc: matmul.cpp:14
:41  %b_copy_7 = alloca [32 x i32], align 16

ST_1: b_copy_8 (44)  [1/1] 0.00ns  loc: matmul.cpp:14
:42  %b_copy_8 = alloca [32 x i32], align 16

ST_1: b_copy_9 (45)  [1/1] 0.00ns  loc: matmul.cpp:14
:43  %b_copy_9 = alloca [32 x i32], align 16

ST_1: b_copy_10 (46)  [1/1] 0.00ns  loc: matmul.cpp:14
:44  %b_copy_10 = alloca [32 x i32], align 16

ST_1: b_copy_11 (47)  [1/1] 0.00ns  loc: matmul.cpp:14
:45  %b_copy_11 = alloca [32 x i32], align 16

ST_1: b_copy_12 (48)  [1/1] 0.00ns  loc: matmul.cpp:14
:46  %b_copy_12 = alloca [32 x i32], align 16

ST_1: b_copy_13 (49)  [1/1] 0.00ns  loc: matmul.cpp:14
:47  %b_copy_13 = alloca [32 x i32], align 16

ST_1: b_copy_14 (50)  [1/1] 0.00ns  loc: matmul.cpp:14
:48  %b_copy_14 = alloca [32 x i32], align 16

ST_1: b_copy_15 (51)  [1/1] 0.00ns  loc: matmul.cpp:14
:49  %b_copy_15 = alloca [32 x i32], align 16

ST_1: b_copy_16 (52)  [1/1] 0.00ns  loc: matmul.cpp:14
:50  %b_copy_16 = alloca [32 x i32], align 16

ST_1: b_copy_17 (53)  [1/1] 0.00ns  loc: matmul.cpp:14
:51  %b_copy_17 = alloca [32 x i32], align 16

ST_1: b_copy_18 (54)  [1/1] 0.00ns  loc: matmul.cpp:14
:52  %b_copy_18 = alloca [32 x i32], align 16

ST_1: b_copy_19 (55)  [1/1] 0.00ns  loc: matmul.cpp:14
:53  %b_copy_19 = alloca [32 x i32], align 16

ST_1: b_copy_20 (56)  [1/1] 0.00ns  loc: matmul.cpp:14
:54  %b_copy_20 = alloca [32 x i32], align 16

ST_1: b_copy_21 (57)  [1/1] 0.00ns  loc: matmul.cpp:14
:55  %b_copy_21 = alloca [32 x i32], align 16

ST_1: b_copy_22 (58)  [1/1] 0.00ns  loc: matmul.cpp:14
:56  %b_copy_22 = alloca [32 x i32], align 16

ST_1: b_copy_23 (59)  [1/1] 0.00ns  loc: matmul.cpp:14
:57  %b_copy_23 = alloca [32 x i32], align 16

ST_1: b_copy_24 (60)  [1/1] 0.00ns  loc: matmul.cpp:14
:58  %b_copy_24 = alloca [32 x i32], align 16

ST_1: b_copy_25 (61)  [1/1] 0.00ns  loc: matmul.cpp:14
:59  %b_copy_25 = alloca [32 x i32], align 16

ST_1: b_copy_26 (62)  [1/1] 0.00ns  loc: matmul.cpp:14
:60  %b_copy_26 = alloca [32 x i32], align 16

ST_1: b_copy_27 (63)  [1/1] 0.00ns  loc: matmul.cpp:14
:61  %b_copy_27 = alloca [32 x i32], align 16

ST_1: b_copy_28 (64)  [1/1] 0.00ns  loc: matmul.cpp:14
:62  %b_copy_28 = alloca [32 x i32], align 16

ST_1: b_copy_29 (65)  [1/1] 0.00ns  loc: matmul.cpp:14
:63  %b_copy_29 = alloca [32 x i32], align 16

ST_1: b_copy_30 (66)  [1/1] 0.00ns  loc: matmul.cpp:14
:64  %b_copy_30 = alloca [32 x i32], align 16

ST_1: b_copy_31 (67)  [1/1] 0.00ns  loc: matmul.cpp:14
:65  %b_copy_31 = alloca [32 x i32], align 16

ST_1: StgValue_142 (68)  [1/1] 0.00ns  loc: matmul.cpp:6
:66  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_143 (69)  [1/1] 0.00ns
:67  call void (...)* @_ssdm_op_SpecInterface([3072 x i32]* %a, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_144 (70)  [1/1] 0.00ns
:68  call void (...)* @_ssdm_op_SpecMemCore([3072 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_145 (71)  [1/1] 1.57ns  loc: matmul.cpp:19
:69  br label %.preheader7


 <State 2>: 6.48ns
ST_2: indvar_flatten (73)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i11 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit ]

ST_2: i (74)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7:1  %i = phi i6 [ 0, %0 ], [ %tmp_2_mid2_v_v_v, %.loopexit ]

ST_2: j (75)  [1/1] 0.00ns
.preheader7:2  %j = phi i6 [ 0, %0 ], [ %j_1, %.loopexit ]

ST_2: exitcond_flatten (76)  [1/1] 2.58ns
.preheader7:3  %exitcond_flatten = icmp eq i11 %indvar_flatten, -1024

ST_2: indvar_flatten_next (77)  [1/1] 1.79ns
.preheader7:4  %indvar_flatten_next = add i11 %indvar_flatten, 1

ST_2: StgValue_151 (78)  [1/1] 0.00ns
.preheader7:5  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (112)  [1/1] 1.67ns  loc: matmul.cpp:19
.preheader7.preheader:32  %i_1 = add i6 %i, 1

ST_2: exitcond (115)  [1/1] 2.40ns  loc: matmul.cpp:20
.preheader7.preheader:35  %exitcond = icmp eq i6 %j, -32

ST_2: j_mid2 (116)  [1/1] 1.37ns  loc: matmul.cpp:20
.preheader7.preheader:36  %j_mid2 = select i1 %exitcond, i6 0, i6 %j

ST_2: tmp_mid1 (117)  [1/1] 2.40ns  loc: matmul.cpp:31
.preheader7.preheader:37  %tmp_mid1 = icmp eq i6 %i_1, 0

ST_2: tmp (118)  [1/1] 2.40ns  loc: matmul.cpp:31
.preheader7.preheader:38  %tmp = icmp eq i6 %i, 0

ST_2: tmp_mid2 (119)  [1/1] 1.37ns  loc: matmul.cpp:31
.preheader7.preheader:39  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp

ST_2: tmp_2_mid2_v_v_v (120)  [1/1] 1.37ns  loc: matmul.cpp:41
.preheader7.preheader:40  %tmp_2_mid2_v_v_v = select i1 %exitcond, i6 %i_1, i6 %i

ST_2: tmp_70 (327)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:6  %tmp_70 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 16, i6 %j_mid2)

ST_2: a_addr_33 (328)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:7  %a_addr_33 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_70

ST_2: a_load (414)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:93  %a_load = load i32* %a_addr_33, align 4


 <State 3>: 4.50ns
ST_3: tmp_8_cast (323)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:2  %tmp_8_cast = zext i6 %j_mid2 to i11

ST_3: tmp_71 (329)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:8  %tmp_71 = add i11 %tmp_8_cast, -992

ST_3: tmp_72_cast (330)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:9  %tmp_72_cast = zext i11 %tmp_71 to i64

ST_3: a_addr_34 (331)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:10  %a_addr_34 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_72_cast

ST_3: a_load (414)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:93  %a_load = load i32* %a_addr_33, align 4

ST_3: a_load_1 (417)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:96  %a_load_1 = load i32* %a_addr_34, align 4


 <State 4>: 2.71ns
ST_4: tmp_72 (332)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:11  %tmp_72 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 17, i6 %j_mid2)

ST_4: a_addr_35 (333)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:12  %a_addr_35 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_72

ST_4: a_load_1 (417)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:96  %a_load_1 = load i32* %a_addr_34, align 4

ST_4: a_load_2 (420)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:99  %a_load_2 = load i32* %a_addr_35, align 4


 <State 5>: 5.42ns
ST_5: tmp_8 (321)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:0  %tmp_8 = zext i6 %j_mid2 to i64

ST_5: tmp_73 (334)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:13  %tmp_73 = add i11 %tmp_8_cast, -928

ST_5: tmp_74_cast (335)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:14  %tmp_74_cast = zext i11 %tmp_73 to i64

ST_5: a_addr_36 (336)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:15  %a_addr_36 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_74_cast

ST_5: b_copy_0_addr (415)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:94  %b_copy_0_addr = getelementptr [32 x i32]* %b_copy_0, i64 0, i64 %tmp_8

ST_5: StgValue_177 (416)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:95  store i32 %a_load, i32* %b_copy_0_addr, align 4

ST_5: b_copy_1_addr (418)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:97  %b_copy_1_addr = getelementptr [32 x i32]* %b_copy_1, i64 0, i64 %tmp_8

ST_5: StgValue_179 (419)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:98  store i32 %a_load_1, i32* %b_copy_1_addr, align 4

ST_5: a_load_2 (420)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:99  %a_load_2 = load i32* %a_addr_35, align 4

ST_5: b_copy_2_addr (421)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:100  %b_copy_2_addr = getelementptr [32 x i32]* %b_copy_2, i64 0, i64 %tmp_8

ST_5: StgValue_182 (422)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:101  store i32 %a_load_2, i32* %b_copy_2_addr, align 4

ST_5: a_load_3 (423)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:102  %a_load_3 = load i32* %a_addr_36, align 4


 <State 6>: 5.42ns
ST_6: tmp_74 (337)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:16  %tmp_74 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 18, i6 %j_mid2)

ST_6: a_addr_37 (338)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:17  %a_addr_37 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_74

ST_6: a_load_3 (423)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:102  %a_load_3 = load i32* %a_addr_36, align 4

ST_6: b_copy_3_addr (424)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:103  %b_copy_3_addr = getelementptr [32 x i32]* %b_copy_3, i64 0, i64 %tmp_8

ST_6: StgValue_188 (425)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:104  store i32 %a_load_3, i32* %b_copy_3_addr, align 4

ST_6: a_load_4 (426)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:105  %a_load_4 = load i32* %a_addr_37, align 4


 <State 7>: 5.42ns
ST_7: tmp_75 (339)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:18  %tmp_75 = add i11 %tmp_8_cast, -864

ST_7: tmp_76_cast (340)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:19  %tmp_76_cast = zext i11 %tmp_75 to i64

ST_7: a_addr_38 (341)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:20  %a_addr_38 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_76_cast

ST_7: a_load_4 (426)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:105  %a_load_4 = load i32* %a_addr_37, align 4

ST_7: b_copy_4_addr (427)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:106  %b_copy_4_addr = getelementptr [32 x i32]* %b_copy_4, i64 0, i64 %tmp_8

ST_7: StgValue_195 (428)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:107  store i32 %a_load_4, i32* %b_copy_4_addr, align 4

ST_7: a_load_5 (429)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:108  %a_load_5 = load i32* %a_addr_38, align 4


 <State 8>: 5.42ns
ST_8: tmp_76 (342)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:21  %tmp_76 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 19, i6 %j_mid2)

ST_8: a_addr_39 (343)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:22  %a_addr_39 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_76

ST_8: a_load_5 (429)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:108  %a_load_5 = load i32* %a_addr_38, align 4

ST_8: b_copy_5_addr (430)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:109  %b_copy_5_addr = getelementptr [32 x i32]* %b_copy_5, i64 0, i64 %tmp_8

ST_8: StgValue_201 (431)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:110  store i32 %a_load_5, i32* %b_copy_5_addr, align 4

ST_8: a_load_6 (432)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:111  %a_load_6 = load i32* %a_addr_39, align 4


 <State 9>: 5.42ns
ST_9: tmp_77 (344)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:23  %tmp_77 = add i11 %tmp_8_cast, -800

ST_9: tmp_78_cast (345)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:24  %tmp_78_cast = zext i11 %tmp_77 to i64

ST_9: a_addr_40 (346)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:25  %a_addr_40 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_78_cast

ST_9: a_load_6 (432)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:111  %a_load_6 = load i32* %a_addr_39, align 4

ST_9: b_copy_6_addr (433)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:112  %b_copy_6_addr = getelementptr [32 x i32]* %b_copy_6, i64 0, i64 %tmp_8

ST_9: StgValue_208 (434)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:113  store i32 %a_load_6, i32* %b_copy_6_addr, align 4

ST_9: a_load_7 (435)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:114  %a_load_7 = load i32* %a_addr_40, align 4


 <State 10>: 5.42ns
ST_10: tmp_78 (347)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:26  %tmp_78 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 20, i6 %j_mid2)

ST_10: a_addr_41 (348)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:27  %a_addr_41 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_78

ST_10: a_load_7 (435)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:114  %a_load_7 = load i32* %a_addr_40, align 4

ST_10: b_copy_7_addr (436)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:115  %b_copy_7_addr = getelementptr [32 x i32]* %b_copy_7, i64 0, i64 %tmp_8

ST_10: StgValue_214 (437)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:116  store i32 %a_load_7, i32* %b_copy_7_addr, align 4

ST_10: a_load_8 (438)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:117  %a_load_8 = load i32* %a_addr_41, align 4


 <State 11>: 5.42ns
ST_11: tmp_79 (349)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:28  %tmp_79 = add i11 %tmp_8_cast, -736

ST_11: tmp_80_cast (350)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:29  %tmp_80_cast = zext i11 %tmp_79 to i64

ST_11: a_addr_42 (351)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:30  %a_addr_42 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_80_cast

ST_11: a_load_8 (438)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:117  %a_load_8 = load i32* %a_addr_41, align 4

ST_11: b_copy_8_addr (439)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:118  %b_copy_8_addr = getelementptr [32 x i32]* %b_copy_8, i64 0, i64 %tmp_8

ST_11: StgValue_221 (440)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:119  store i32 %a_load_8, i32* %b_copy_8_addr, align 4

ST_11: a_load_9 (441)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:120  %a_load_9 = load i32* %a_addr_42, align 4


 <State 12>: 5.42ns
ST_12: tmp_80 (352)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:31  %tmp_80 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 21, i6 %j_mid2)

ST_12: a_addr_43 (353)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:32  %a_addr_43 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_80

ST_12: a_load_9 (441)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:120  %a_load_9 = load i32* %a_addr_42, align 4

ST_12: b_copy_9_addr (442)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:121  %b_copy_9_addr = getelementptr [32 x i32]* %b_copy_9, i64 0, i64 %tmp_8

ST_12: StgValue_227 (443)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:122  store i32 %a_load_9, i32* %b_copy_9_addr, align 4

ST_12: a_load_10 (444)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:123  %a_load_10 = load i32* %a_addr_43, align 4


 <State 13>: 5.42ns
ST_13: tmp_81 (354)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:33  %tmp_81 = add i11 %tmp_8_cast, -672

ST_13: tmp_82_cast (355)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:34  %tmp_82_cast = zext i11 %tmp_81 to i64

ST_13: a_addr_44 (356)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:35  %a_addr_44 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_82_cast

ST_13: a_load_10 (444)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:123  %a_load_10 = load i32* %a_addr_43, align 4

ST_13: b_copy_10_addr (445)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:124  %b_copy_10_addr = getelementptr [32 x i32]* %b_copy_10, i64 0, i64 %tmp_8

ST_13: StgValue_234 (446)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:125  store i32 %a_load_10, i32* %b_copy_10_addr, align 4

ST_13: a_load_11 (447)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:126  %a_load_11 = load i32* %a_addr_44, align 4


 <State 14>: 5.42ns
ST_14: tmp_82 (357)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:36  %tmp_82 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 22, i6 %j_mid2)

ST_14: a_addr_45 (358)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:37  %a_addr_45 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_82

ST_14: a_load_11 (447)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:126  %a_load_11 = load i32* %a_addr_44, align 4

ST_14: b_copy_11_addr (448)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:127  %b_copy_11_addr = getelementptr [32 x i32]* %b_copy_11, i64 0, i64 %tmp_8

ST_14: StgValue_240 (449)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:128  store i32 %a_load_11, i32* %b_copy_11_addr, align 4

ST_14: a_load_12 (450)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:129  %a_load_12 = load i32* %a_addr_45, align 4


 <State 15>: 5.42ns
ST_15: tmp_83 (359)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:38  %tmp_83 = add i11 %tmp_8_cast, -608

ST_15: tmp_84_cast (360)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:39  %tmp_84_cast = zext i11 %tmp_83 to i64

ST_15: a_addr_46 (361)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:40  %a_addr_46 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_84_cast

ST_15: a_load_12 (450)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:129  %a_load_12 = load i32* %a_addr_45, align 4

ST_15: b_copy_12_addr (451)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:130  %b_copy_12_addr = getelementptr [32 x i32]* %b_copy_12, i64 0, i64 %tmp_8

ST_15: StgValue_247 (452)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:131  store i32 %a_load_12, i32* %b_copy_12_addr, align 4

ST_15: a_load_13 (453)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:132  %a_load_13 = load i32* %a_addr_46, align 4


 <State 16>: 5.42ns
ST_16: tmp_84 (362)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:41  %tmp_84 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 23, i6 %j_mid2)

ST_16: a_addr_47 (363)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:42  %a_addr_47 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_84

ST_16: a_load_13 (453)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:132  %a_load_13 = load i32* %a_addr_46, align 4

ST_16: b_copy_13_addr (454)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:133  %b_copy_13_addr = getelementptr [32 x i32]* %b_copy_13, i64 0, i64 %tmp_8

ST_16: StgValue_253 (455)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:134  store i32 %a_load_13, i32* %b_copy_13_addr, align 4

ST_16: a_load_14 (456)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:135  %a_load_14 = load i32* %a_addr_47, align 4


 <State 17>: 5.42ns
ST_17: tmp_85 (364)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:43  %tmp_85 = add i11 %tmp_8_cast, -544

ST_17: tmp_86_cast (365)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:44  %tmp_86_cast = zext i11 %tmp_85 to i64

ST_17: a_addr_48 (366)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:45  %a_addr_48 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_86_cast

ST_17: a_load_14 (456)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:135  %a_load_14 = load i32* %a_addr_47, align 4

ST_17: b_copy_14_addr (457)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:136  %b_copy_14_addr = getelementptr [32 x i32]* %b_copy_14, i64 0, i64 %tmp_8

ST_17: StgValue_260 (458)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:137  store i32 %a_load_14, i32* %b_copy_14_addr, align 4

ST_17: a_load_15 (459)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:138  %a_load_15 = load i32* %a_addr_48, align 4


 <State 18>: 5.42ns
ST_18: tmp_86 (367)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:46  %tmp_86 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 24, i6 %j_mid2)

ST_18: a_addr_49 (368)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:47  %a_addr_49 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_86

ST_18: a_load_15 (459)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:138  %a_load_15 = load i32* %a_addr_48, align 4

ST_18: b_copy_15_addr (460)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:139  %b_copy_15_addr = getelementptr [32 x i32]* %b_copy_15, i64 0, i64 %tmp_8

ST_18: StgValue_266 (461)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:140  store i32 %a_load_15, i32* %b_copy_15_addr, align 4

ST_18: a_load_16 (462)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:141  %a_load_16 = load i32* %a_addr_49, align 4


 <State 19>: 5.42ns
ST_19: tmp_8_cast_cast (326)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:5  %tmp_8_cast_cast = zext i6 %j_mid2 to i10

ST_19: tmp_87 (369)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:48  %tmp_87 = add i10 %tmp_8_cast_cast, -480

ST_19: tmp_88_cast1 (370)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:49  %tmp_88_cast1 = sext i10 %tmp_87 to i11

ST_19: tmp_88_cast (371)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:50  %tmp_88_cast = zext i11 %tmp_88_cast1 to i64

ST_19: a_addr_50 (372)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:51  %a_addr_50 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_88_cast

ST_19: a_load_16 (462)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:141  %a_load_16 = load i32* %a_addr_49, align 4

ST_19: b_copy_16_addr (463)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:142  %b_copy_16_addr = getelementptr [32 x i32]* %b_copy_16, i64 0, i64 %tmp_8

ST_19: StgValue_275 (464)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:143  store i32 %a_load_16, i32* %b_copy_16_addr, align 4

ST_19: a_load_17 (465)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:144  %a_load_17 = load i32* %a_addr_50, align 4


 <State 20>: 5.42ns
ST_20: tmp_88 (373)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:52  %tmp_88 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 25, i6 %j_mid2)

ST_20: a_addr_51 (374)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:53  %a_addr_51 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_88

ST_20: a_load_17 (465)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:144  %a_load_17 = load i32* %a_addr_50, align 4

ST_20: b_copy_17_addr (466)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:145  %b_copy_17_addr = getelementptr [32 x i32]* %b_copy_17, i64 0, i64 %tmp_8

ST_20: StgValue_281 (467)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:146  store i32 %a_load_17, i32* %b_copy_17_addr, align 4

ST_20: a_load_18 (468)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:147  %a_load_18 = load i32* %a_addr_51, align 4


 <State 21>: 5.42ns
ST_21: tmp_89 (375)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:54  %tmp_89 = add i10 %tmp_8_cast_cast, -416

ST_21: tmp_90_cast1 (376)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:55  %tmp_90_cast1 = sext i10 %tmp_89 to i11

ST_21: tmp_90_cast (377)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:56  %tmp_90_cast = zext i11 %tmp_90_cast1 to i64

ST_21: a_addr_52 (378)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:57  %a_addr_52 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_90_cast

ST_21: a_load_18 (468)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:147  %a_load_18 = load i32* %a_addr_51, align 4

ST_21: b_copy_18_addr (469)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:148  %b_copy_18_addr = getelementptr [32 x i32]* %b_copy_18, i64 0, i64 %tmp_8

ST_21: StgValue_289 (470)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:149  store i32 %a_load_18, i32* %b_copy_18_addr, align 4

ST_21: a_load_19 (471)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:150  %a_load_19 = load i32* %a_addr_52, align 4


 <State 22>: 5.42ns
ST_22: tmp_90 (379)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:58  %tmp_90 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 26, i6 %j_mid2)

ST_22: a_addr_53 (380)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:59  %a_addr_53 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_90

ST_22: a_load_19 (471)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:150  %a_load_19 = load i32* %a_addr_52, align 4

ST_22: b_copy_19_addr (472)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:151  %b_copy_19_addr = getelementptr [32 x i32]* %b_copy_19, i64 0, i64 %tmp_8

ST_22: StgValue_295 (473)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:152  store i32 %a_load_19, i32* %b_copy_19_addr, align 4

ST_22: a_load_20 (474)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:153  %a_load_20 = load i32* %a_addr_53, align 4


 <State 23>: 5.42ns
ST_23: tmp_91 (381)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:60  %tmp_91 = add i10 %tmp_8_cast_cast, -352

ST_23: tmp_92_cast1 (382)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:61  %tmp_92_cast1 = sext i10 %tmp_91 to i11

ST_23: tmp_92_cast (383)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:62  %tmp_92_cast = zext i11 %tmp_92_cast1 to i64

ST_23: a_addr_54 (384)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:63  %a_addr_54 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_92_cast

ST_23: a_load_20 (474)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:153  %a_load_20 = load i32* %a_addr_53, align 4

ST_23: b_copy_20_addr (475)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:154  %b_copy_20_addr = getelementptr [32 x i32]* %b_copy_20, i64 0, i64 %tmp_8

ST_23: StgValue_303 (476)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:155  store i32 %a_load_20, i32* %b_copy_20_addr, align 4

ST_23: a_load_21 (477)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:156  %a_load_21 = load i32* %a_addr_54, align 4


 <State 24>: 5.42ns
ST_24: tmp_92 (385)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:64  %tmp_92 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 27, i6 %j_mid2)

ST_24: a_addr_55 (386)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:65  %a_addr_55 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_92

ST_24: a_load_21 (477)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:156  %a_load_21 = load i32* %a_addr_54, align 4

ST_24: b_copy_21_addr (478)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:157  %b_copy_21_addr = getelementptr [32 x i32]* %b_copy_21, i64 0, i64 %tmp_8

ST_24: StgValue_309 (479)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:158  store i32 %a_load_21, i32* %b_copy_21_addr, align 4

ST_24: a_load_22 (480)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:159  %a_load_22 = load i32* %a_addr_55, align 4


 <State 25>: 5.42ns
ST_25: tmp_93 (387)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:66  %tmp_93 = add i10 %tmp_8_cast_cast, -288

ST_25: tmp_94_cast1 (388)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:67  %tmp_94_cast1 = sext i10 %tmp_93 to i11

ST_25: tmp_94_cast (389)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:68  %tmp_94_cast = zext i11 %tmp_94_cast1 to i64

ST_25: a_addr_56 (390)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:69  %a_addr_56 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_94_cast

ST_25: a_load_22 (480)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:159  %a_load_22 = load i32* %a_addr_55, align 4

ST_25: b_copy_22_addr (481)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:160  %b_copy_22_addr = getelementptr [32 x i32]* %b_copy_22, i64 0, i64 %tmp_8

ST_25: StgValue_317 (482)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:161  store i32 %a_load_22, i32* %b_copy_22_addr, align 4

ST_25: a_load_23 (483)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:162  %a_load_23 = load i32* %a_addr_56, align 4


 <State 26>: 5.42ns
ST_26: tmp_94 (391)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:70  %tmp_94 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 28, i6 %j_mid2)

ST_26: a_addr_57 (392)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:71  %a_addr_57 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_94

ST_26: a_load_23 (483)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:162  %a_load_23 = load i32* %a_addr_56, align 4

ST_26: b_copy_23_addr (484)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:163  %b_copy_23_addr = getelementptr [32 x i32]* %b_copy_23, i64 0, i64 %tmp_8

ST_26: StgValue_323 (485)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:164  store i32 %a_load_23, i32* %b_copy_23_addr, align 4

ST_26: a_load_24 (486)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:165  %a_load_24 = load i32* %a_addr_57, align 4


 <State 27>: 5.42ns
ST_27: tmp_8_cast_cast2 (325)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:4  %tmp_8_cast_cast2 = zext i6 %j_mid2 to i9

ST_27: tmp_95 (393)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:72  %tmp_95 = add i9 %tmp_8_cast_cast2, -224

ST_27: tmp_96_cast1 (394)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:73  %tmp_96_cast1 = sext i9 %tmp_95 to i11

ST_27: tmp_96_cast (395)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:74  %tmp_96_cast = zext i11 %tmp_96_cast1 to i64

ST_27: a_addr_58 (396)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:75  %a_addr_58 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_96_cast

ST_27: a_load_24 (486)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:165  %a_load_24 = load i32* %a_addr_57, align 4

ST_27: b_copy_24_addr (487)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:166  %b_copy_24_addr = getelementptr [32 x i32]* %b_copy_24, i64 0, i64 %tmp_8

ST_27: StgValue_332 (488)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:167  store i32 %a_load_24, i32* %b_copy_24_addr, align 4

ST_27: a_load_25 (489)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:168  %a_load_25 = load i32* %a_addr_58, align 4


 <State 28>: 5.42ns
ST_28: tmp_96 (397)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:76  %tmp_96 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 29, i6 %j_mid2)

ST_28: a_addr_59 (398)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:77  %a_addr_59 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_96

ST_28: a_load_25 (489)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:168  %a_load_25 = load i32* %a_addr_58, align 4

ST_28: b_copy_25_addr (490)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:169  %b_copy_25_addr = getelementptr [32 x i32]* %b_copy_25, i64 0, i64 %tmp_8

ST_28: StgValue_338 (491)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:170  store i32 %a_load_25, i32* %b_copy_25_addr, align 4

ST_28: a_load_26 (492)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:171  %a_load_26 = load i32* %a_addr_59, align 4


 <State 29>: 5.42ns
ST_29: tmp_97 (399)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:78  %tmp_97 = add i9 %tmp_8_cast_cast2, -160

ST_29: tmp_98_cast1 (400)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:79  %tmp_98_cast1 = sext i9 %tmp_97 to i11

ST_29: tmp_98_cast (401)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:80  %tmp_98_cast = zext i11 %tmp_98_cast1 to i64

ST_29: a_addr_60 (402)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:81  %a_addr_60 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_98_cast

ST_29: a_load_26 (492)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:171  %a_load_26 = load i32* %a_addr_59, align 4

ST_29: b_copy_26_addr (493)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:172  %b_copy_26_addr = getelementptr [32 x i32]* %b_copy_26, i64 0, i64 %tmp_8

ST_29: StgValue_346 (494)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:173  store i32 %a_load_26, i32* %b_copy_26_addr, align 4

ST_29: a_load_27 (495)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:174  %a_load_27 = load i32* %a_addr_60, align 4


 <State 30>: 5.42ns
ST_30: tmp_98 (403)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:82  %tmp_98 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 30, i6 %j_mid2)

ST_30: a_addr_61 (404)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:83  %a_addr_61 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_98

ST_30: a_load_27 (495)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:174  %a_load_27 = load i32* %a_addr_60, align 4

ST_30: b_copy_27_addr (496)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:175  %b_copy_27_addr = getelementptr [32 x i32]* %b_copy_27, i64 0, i64 %tmp_8

ST_30: StgValue_352 (497)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:176  store i32 %a_load_27, i32* %b_copy_27_addr, align 4

ST_30: a_load_28 (498)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:177  %a_load_28 = load i32* %a_addr_61, align 4


 <State 31>: 5.42ns
ST_31: tmp_8_cast_cast1 (324)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:3  %tmp_8_cast_cast1 = zext i6 %j_mid2 to i8

ST_31: tmp_99 (405)  [1/1] 1.67ns  loc: matmul.cpp:33
.preheader.preheader:84  %tmp_99 = add i8 %tmp_8_cast_cast1, -96

ST_31: tmp_100_cast1 (406)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:85  %tmp_100_cast1 = sext i8 %tmp_99 to i11

ST_31: tmp_100_cast (407)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:86  %tmp_100_cast = zext i11 %tmp_100_cast1 to i64

ST_31: a_addr_62 (408)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:87  %a_addr_62 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_100_cast

ST_31: a_load_28 (498)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:177  %a_load_28 = load i32* %a_addr_61, align 4

ST_31: b_copy_28_addr (499)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:178  %b_copy_28_addr = getelementptr [32 x i32]* %b_copy_28, i64 0, i64 %tmp_8

ST_31: StgValue_361 (500)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:179  store i32 %a_load_28, i32* %b_copy_28_addr, align 4

ST_31: a_load_29 (501)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:180  %a_load_29 = load i32* %a_addr_62, align 4


 <State 32>: 5.42ns
ST_32: tmp_100 (409)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:88  %tmp_100 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 31, i6 %j_mid2)

ST_32: a_addr_63 (410)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:89  %a_addr_63 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_100

ST_32: a_load_29 (501)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:180  %a_load_29 = load i32* %a_addr_62, align 4

ST_32: b_copy_29_addr (502)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:181  %b_copy_29_addr = getelementptr [32 x i32]* %b_copy_29, i64 0, i64 %tmp_8

ST_32: StgValue_367 (503)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:182  store i32 %a_load_29, i32* %b_copy_29_addr, align 4

ST_32: a_load_30 (504)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:183  %a_load_30 = load i32* %a_addr_63, align 4


 <State 33>: 5.42ns
ST_33: tmp_8_cast1 (322)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:1  %tmp_8_cast1 = zext i6 %j_mid2 to i12

ST_33: tmp_101 (411)  [1/1] 1.79ns  loc: matmul.cpp:33
.preheader.preheader:90  %tmp_101 = add i12 %tmp_8_cast1, 2016

ST_33: tmp_102_cast (412)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:91  %tmp_102_cast = zext i12 %tmp_101 to i64

ST_33: a_addr_64 (413)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:92  %a_addr_64 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_102_cast

ST_33: a_load_30 (504)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:183  %a_load_30 = load i32* %a_addr_63, align 4

ST_33: b_copy_30_addr (505)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:184  %b_copy_30_addr = getelementptr [32 x i32]* %b_copy_30, i64 0, i64 %tmp_8

ST_33: StgValue_375 (506)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:185  store i32 %a_load_30, i32* %b_copy_30_addr, align 4

ST_33: a_load_31 (507)  [2/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:186  %a_load_31 = load i32* %a_addr_64, align 4


 <State 34>: 5.42ns
ST_34: tmp_3 (123)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:43  %tmp_3 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %tmp_2_mid2_v_v_v, i5 0)

ST_34: tmp_6 (124)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:44  %tmp_6 = zext i11 %tmp_3 to i64

ST_34: a_addr (125)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:45  %a_addr = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_6

ST_34: a_row_0 (223)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:143  %a_row_0 = load i32* %a_addr, align 4

ST_34: a_load_31 (507)  [1/2] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:186  %a_load_31 = load i32* %a_addr_64, align 4

ST_34: b_copy_31_addr (508)  [1/1] 0.00ns  loc: matmul.cpp:33
.preheader.preheader:187  %b_copy_31_addr = getelementptr [32 x i32]* %b_copy_31, i64 0, i64 %tmp_8

ST_34: StgValue_383 (509)  [1/1] 2.71ns  loc: matmul.cpp:33
.preheader.preheader:188  store i32 %a_load_31, i32* %b_copy_31_addr, align 4

ST_34: StgValue_384 (510)  [1/1] 0.00ns
.preheader.preheader:189  br label %.loopexit

ST_34: tmp_7 (512)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:0  %tmp_7 = zext i6 %j_mid2 to i64

ST_34: b_copy_0_addr_1 (517)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:5  %b_copy_0_addr_1 = getelementptr [32 x i32]* %b_copy_0, i64 0, i64 %tmp_7

ST_34: b_copy_0_load (518)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:6  %b_copy_0_load = load i32* %b_copy_0_addr_1, align 4


 <State 35>: 2.71ns
ST_35: tmp_9 (126)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:46  %tmp_9 = or i11 %tmp_3, 1

ST_35: tmp_2 (127)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:47  %tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_9)

ST_35: a_addr_1 (128)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:48  %a_addr_1 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_2

ST_35: tmp_5 (222)  [1/1] 2.40ns  loc: matmul.cpp:25
.preheader7.preheader:142  %tmp_5 = icmp eq i6 %j_mid2, 0

ST_35: a_row_0 (223)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:143  %a_row_0 = load i32* %a_addr, align 4

ST_35: a_row_1 (224)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:144  %a_row_1 = load i32* %a_addr_1, align 4

ST_35: b_copy_0_load (518)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:6  %b_copy_0_load = load i32* %b_copy_0_addr_1, align 4

ST_35: b_copy_1_addr_1 (520)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:8  %b_copy_1_addr_1 = getelementptr [32 x i32]* %b_copy_1, i64 0, i64 %tmp_7

ST_35: b_copy_1_load (521)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:9  %b_copy_1_load = load i32* %b_copy_1_addr_1, align 4


 <State 36>: 8.05ns
ST_36: a_row_0_2_load (80)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_0_2_load = load i32* %a_row_0_2

ST_36: tmp_10 (129)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:49  %tmp_10 = or i11 %tmp_3, 2

ST_36: tmp_11 (130)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:50  %tmp_11 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_10)

ST_36: a_addr_2 (131)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:51  %a_addr_2 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_11

ST_36: a_row_1 (224)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:144  %a_row_1 = load i32* %a_addr_1, align 4

ST_36: a_row_2 (225)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:145  %a_row_2 = load i32* %a_addr_2, align 4

ST_36: a_row_0_1 (286)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:206  %a_row_0_1 = select i1 %tmp_5, i32 %a_row_0, i32 %a_row_0_2_load

ST_36: StgValue_404 (318)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:238  store i32 %a_row_0_1, i32* %a_row_0_2

ST_36: tmp_s (519)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_36: b_copy_1_load (521)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:9  %b_copy_1_load = load i32* %b_copy_1_addr_1, align 4

ST_36: b_copy_2_addr_1 (523)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:11  %b_copy_2_addr_1 = getelementptr [32 x i32]* %b_copy_2, i64 0, i64 %tmp_7

ST_36: b_copy_2_load (524)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:12  %b_copy_2_load = load i32* %b_copy_2_addr_1, align 4


 <State 37>: 8.05ns
ST_37: a_row_1_2_load (81)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_1_2_load = load i32* %a_row_1_2

ST_37: tmp_12 (132)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:52  %tmp_12 = or i11 %tmp_3, 3

ST_37: tmp_13 (133)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:53  %tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_12)

ST_37: a_addr_3 (134)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:54  %a_addr_3 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_13

ST_37: a_row_2 (225)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:145  %a_row_2 = load i32* %a_addr_2, align 4

ST_37: a_row_3 (226)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:146  %a_row_3 = load i32* %a_addr_3, align 4

ST_37: a_row_1_1 (285)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:205  %a_row_1_1 = select i1 %tmp_5, i32 %a_row_1, i32 %a_row_1_2_load

ST_37: StgValue_416 (317)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:237  store i32 %a_row_1_1, i32* %a_row_1_2

ST_37: tmp_s (519)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_37: tmp_11_1 (522)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_37: b_copy_2_load (524)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:12  %b_copy_2_load = load i32* %b_copy_2_addr_1, align 4

ST_37: b_copy_3_addr_1 (526)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:14  %b_copy_3_addr_1 = getelementptr [32 x i32]* %b_copy_3, i64 0, i64 %tmp_7

ST_37: b_copy_3_load (527)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:15  %b_copy_3_load = load i32* %b_copy_3_addr_1, align 4


 <State 38>: 8.05ns
ST_38: a_row_2_2_load (82)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_2_2_load = load i32* %a_row_2_2

ST_38: tmp_14 (135)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:55  %tmp_14 = or i11 %tmp_3, 4

ST_38: tmp_15 (136)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:56  %tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_14)

ST_38: a_addr_4 (137)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:57  %a_addr_4 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_15

ST_38: a_row_3 (226)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:146  %a_row_3 = load i32* %a_addr_3, align 4

ST_38: a_row_4 (227)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:147  %a_row_4 = load i32* %a_addr_4, align 4

ST_38: a_row_2_1 (284)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:204  %a_row_2_1 = select i1 %tmp_5, i32 %a_row_2, i32 %a_row_2_2_load

ST_38: StgValue_429 (316)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:236  store i32 %a_row_2_1, i32* %a_row_2_2

ST_38: tmp_s (519)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_38: tmp_11_1 (522)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_38: tmp_11_2 (525)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_38: b_copy_3_load (527)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:15  %b_copy_3_load = load i32* %b_copy_3_addr_1, align 4

ST_38: b_copy_4_addr_1 (529)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:17  %b_copy_4_addr_1 = getelementptr [32 x i32]* %b_copy_4, i64 0, i64 %tmp_7

ST_38: b_copy_4_load (530)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:18  %b_copy_4_load = load i32* %b_copy_4_addr_1, align 4


 <State 39>: 8.05ns
ST_39: a_row_3_2_load (83)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_3_2_load = load i32* %a_row_3_2

ST_39: tmp_16 (138)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:58  %tmp_16 = or i11 %tmp_3, 5

ST_39: tmp_17 (139)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:59  %tmp_17 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_16)

ST_39: a_addr_5 (140)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:60  %a_addr_5 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_17

ST_39: a_row_4 (227)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:147  %a_row_4 = load i32* %a_addr_4, align 4

ST_39: a_row_5 (228)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:148  %a_row_5 = load i32* %a_addr_5, align 4

ST_39: a_row_3_1 (283)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:203  %a_row_3_1 = select i1 %tmp_5, i32 %a_row_3, i32 %a_row_3_2_load

ST_39: StgValue_443 (315)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:235  store i32 %a_row_3_1, i32* %a_row_3_2

ST_39: tmp_s (519)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_39: tmp_11_1 (522)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_39: tmp_11_2 (525)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_39: tmp_11_3 (528)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_39: b_copy_4_load (530)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:18  %b_copy_4_load = load i32* %b_copy_4_addr_1, align 4

ST_39: b_copy_5_addr_1 (532)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:20  %b_copy_5_addr_1 = getelementptr [32 x i32]* %b_copy_5, i64 0, i64 %tmp_7

ST_39: b_copy_5_load (533)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:21  %b_copy_5_load = load i32* %b_copy_5_addr_1, align 4


 <State 40>: 8.05ns
ST_40: a_row_4_2_load (84)  [1/1] 0.00ns
.preheader7.preheader:4  %a_row_4_2_load = load i32* %a_row_4_2

ST_40: tmp_18 (141)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:61  %tmp_18 = or i11 %tmp_3, 6

ST_40: tmp_19 (142)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:62  %tmp_19 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_18)

ST_40: a_addr_6 (143)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:63  %a_addr_6 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_19

ST_40: a_row_5 (228)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:148  %a_row_5 = load i32* %a_addr_5, align 4

ST_40: a_row_6 (229)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:149  %a_row_6 = load i32* %a_addr_6, align 4

ST_40: a_row_4_1 (282)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:202  %a_row_4_1 = select i1 %tmp_5, i32 %a_row_4, i32 %a_row_4_2_load

ST_40: StgValue_458 (314)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:234  store i32 %a_row_4_1, i32* %a_row_4_2

ST_40: tmp_s (519)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_40: tmp_11_1 (522)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_40: tmp_11_2 (525)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_40: tmp_11_3 (528)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_40: tmp_11_4 (531)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_40: b_copy_5_load (533)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:21  %b_copy_5_load = load i32* %b_copy_5_addr_1, align 4

ST_40: b_copy_6_addr_1 (535)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:23  %b_copy_6_addr_1 = getelementptr [32 x i32]* %b_copy_6, i64 0, i64 %tmp_7

ST_40: b_copy_6_load (536)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:24  %b_copy_6_load = load i32* %b_copy_6_addr_1, align 4


 <State 41>: 8.05ns
ST_41: a_row_5_2_load (85)  [1/1] 0.00ns
.preheader7.preheader:5  %a_row_5_2_load = load i32* %a_row_5_2

ST_41: tmp_20 (144)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:64  %tmp_20 = or i11 %tmp_3, 7

ST_41: tmp_21 (145)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:65  %tmp_21 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_20)

ST_41: a_addr_7 (146)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:66  %a_addr_7 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_21

ST_41: a_row_6 (229)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:149  %a_row_6 = load i32* %a_addr_6, align 4

ST_41: a_row_7 (230)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:150  %a_row_7 = load i32* %a_addr_7, align 4

ST_41: a_row_5_1 (281)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:201  %a_row_5_1 = select i1 %tmp_5, i32 %a_row_5, i32 %a_row_5_2_load

ST_41: StgValue_474 (313)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:233  store i32 %a_row_5_1, i32* %a_row_5_2

ST_41: tmp_s (519)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_41: tmp_11_1 (522)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_41: tmp_11_2 (525)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_41: tmp_11_3 (528)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_41: tmp_11_4 (531)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_41: tmp_11_5 (534)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_41: b_copy_6_load (536)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:24  %b_copy_6_load = load i32* %b_copy_6_addr_1, align 4

ST_41: b_copy_7_addr_1 (538)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:26  %b_copy_7_addr_1 = getelementptr [32 x i32]* %b_copy_7, i64 0, i64 %tmp_7

ST_41: b_copy_7_load (539)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:27  %b_copy_7_load = load i32* %b_copy_7_addr_1, align 4


 <State 42>: 8.05ns
ST_42: a_row_6_2_load (86)  [1/1] 0.00ns
.preheader7.preheader:6  %a_row_6_2_load = load i32* %a_row_6_2

ST_42: tmp_22 (147)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:67  %tmp_22 = or i11 %tmp_3, 8

ST_42: tmp_23 (148)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:68  %tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_22)

ST_42: a_addr_8 (149)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:69  %a_addr_8 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_23

ST_42: a_row_7 (230)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:150  %a_row_7 = load i32* %a_addr_7, align 4

ST_42: a_row_8 (231)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:151  %a_row_8 = load i32* %a_addr_8, align 4

ST_42: a_row_6_1 (280)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:200  %a_row_6_1 = select i1 %tmp_5, i32 %a_row_6, i32 %a_row_6_2_load

ST_42: StgValue_491 (312)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:232  store i32 %a_row_6_1, i32* %a_row_6_2

ST_42: tmp_11_1 (522)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:10  %tmp_11_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_42: tmp_11_2 (525)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_42: tmp_11_3 (528)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_42: tmp_11_4 (531)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_42: tmp_11_5 (534)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_42: tmp_11_6 (537)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_42: b_copy_7_load (539)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:27  %b_copy_7_load = load i32* %b_copy_7_addr_1, align 4

ST_42: b_copy_8_addr_1 (541)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:29  %b_copy_8_addr_1 = getelementptr [32 x i32]* %b_copy_8, i64 0, i64 %tmp_7

ST_42: b_copy_8_load (542)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:30  %b_copy_8_load = load i32* %b_copy_8_addr_1, align 4


 <State 43>: 8.05ns
ST_43: a_row_7_2_load (87)  [1/1] 0.00ns
.preheader7.preheader:7  %a_row_7_2_load = load i32* %a_row_7_2

ST_43: tmp_24 (150)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:70  %tmp_24 = or i11 %tmp_3, 9

ST_43: tmp_25 (151)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:71  %tmp_25 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_24)

ST_43: a_addr_9 (152)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:72  %a_addr_9 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_25

ST_43: a_row_8 (231)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:151  %a_row_8 = load i32* %a_addr_8, align 4

ST_43: a_row_9 (232)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:152  %a_row_9 = load i32* %a_addr_9, align 4

ST_43: a_row_7_1 (279)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:199  %a_row_7_1 = select i1 %tmp_5, i32 %a_row_7, i32 %a_row_7_2_load

ST_43: StgValue_508 (311)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:231  store i32 %a_row_7_1, i32* %a_row_7_2

ST_43: tmp_11_2 (525)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:13  %tmp_11_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_43: tmp_11_3 (528)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_43: tmp_11_4 (531)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_43: tmp_11_5 (534)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_43: tmp_11_6 (537)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_43: tmp_11_7 (540)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_43: b_copy_8_load (542)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:30  %b_copy_8_load = load i32* %b_copy_8_addr_1, align 4

ST_43: b_copy_9_addr_1 (544)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:32  %b_copy_9_addr_1 = getelementptr [32 x i32]* %b_copy_9, i64 0, i64 %tmp_7

ST_43: b_copy_9_load (545)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:33  %b_copy_9_load = load i32* %b_copy_9_addr_1, align 4

ST_43: tmp4 (613)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:101  %tmp4 = add i32 %tmp_11_1, %tmp_s


 <State 44>: 8.05ns
ST_44: a_row_8_2_load (88)  [1/1] 0.00ns
.preheader7.preheader:8  %a_row_8_2_load = load i32* %a_row_8_2

ST_44: tmp_26 (153)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:73  %tmp_26 = or i11 %tmp_3, 10

ST_44: tmp_27 (154)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:74  %tmp_27 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_26)

ST_44: a_addr_10 (155)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:75  %a_addr_10 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_27

ST_44: a_row_9 (232)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:152  %a_row_9 = load i32* %a_addr_9, align 4

ST_44: a_row_10 (233)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:153  %a_row_10 = load i32* %a_addr_10, align 4

ST_44: a_row_8_1 (278)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:198  %a_row_8_1 = select i1 %tmp_5, i32 %a_row_8, i32 %a_row_8_2_load

ST_44: StgValue_526 (310)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:230  store i32 %a_row_8_1, i32* %a_row_8_2

ST_44: tmp_11_3 (528)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:16  %tmp_11_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_44: tmp_11_4 (531)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_44: tmp_11_5 (534)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_44: tmp_11_6 (537)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_44: tmp_11_7 (540)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_44: tmp_11_8 (543)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_44: b_copy_9_load (545)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:33  %b_copy_9_load = load i32* %b_copy_9_addr_1, align 4

ST_44: b_copy_10_addr_1 (547)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:35  %b_copy_10_addr_1 = getelementptr [32 x i32]* %b_copy_10, i64 0, i64 %tmp_7

ST_44: b_copy_10_load (548)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:36  %b_copy_10_load = load i32* %b_copy_10_addr_1, align 4


 <State 45>: 8.05ns
ST_45: a_row_9_2_load (89)  [1/1] 0.00ns
.preheader7.preheader:9  %a_row_9_2_load = load i32* %a_row_9_2

ST_45: tmp_28 (156)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:76  %tmp_28 = or i11 %tmp_3, 11

ST_45: tmp_29 (157)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:77  %tmp_29 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_28)

ST_45: a_addr_11 (158)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:78  %a_addr_11 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_29

ST_45: a_row_10 (233)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:153  %a_row_10 = load i32* %a_addr_10, align 4

ST_45: a_row_11 (234)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:154  %a_row_11 = load i32* %a_addr_11, align 4

ST_45: a_row_9_1 (277)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:197  %a_row_9_1 = select i1 %tmp_5, i32 %a_row_9, i32 %a_row_9_2_load

ST_45: StgValue_543 (309)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:229  store i32 %a_row_9_1, i32* %a_row_9_2

ST_45: tmp_11_4 (531)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:19  %tmp_11_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_45: tmp_11_5 (534)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_45: tmp_11_6 (537)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_45: tmp_11_7 (540)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_45: tmp_11_8 (543)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_45: tmp_11_9 (546)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_45: b_copy_10_load (548)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:36  %b_copy_10_load = load i32* %b_copy_10_addr_1, align 4

ST_45: b_copy_11_addr_1 (550)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:38  %b_copy_11_addr_1 = getelementptr [32 x i32]* %b_copy_11, i64 0, i64 %tmp_7

ST_45: b_copy_11_load (551)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:39  %b_copy_11_load = load i32* %b_copy_11_addr_1, align 4

ST_45: tmp5 (614)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:102  %tmp5 = add i32 %tmp_11_3, %tmp_11_2

ST_45: tmp3 (615)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:103  %tmp3 = add i32 %tmp4, %tmp5


 <State 46>: 8.05ns
ST_46: a_row_10_2_load (90)  [1/1] 0.00ns
.preheader7.preheader:10  %a_row_10_2_load = load i32* %a_row_10_2

ST_46: tmp_30 (159)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:79  %tmp_30 = or i11 %tmp_3, 12

ST_46: tmp_31 (160)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:80  %tmp_31 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_30)

ST_46: a_addr_12 (161)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:81  %a_addr_12 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_31

ST_46: a_row_11 (234)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:154  %a_row_11 = load i32* %a_addr_11, align 4

ST_46: a_row_12 (235)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:155  %a_row_12 = load i32* %a_addr_12, align 4

ST_46: a_row_10_1 (276)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:196  %a_row_10_1 = select i1 %tmp_5, i32 %a_row_10, i32 %a_row_10_2_load

ST_46: StgValue_562 (308)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:228  store i32 %a_row_10_1, i32* %a_row_10_2

ST_46: tmp_11_5 (534)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:22  %tmp_11_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_46: tmp_11_6 (537)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_46: tmp_11_7 (540)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_46: tmp_11_8 (543)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_46: tmp_11_9 (546)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_46: tmp_11_s (549)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_46: b_copy_11_load (551)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:39  %b_copy_11_load = load i32* %b_copy_11_addr_1, align 4

ST_46: b_copy_12_addr_1 (553)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:41  %b_copy_12_addr_1 = getelementptr [32 x i32]* %b_copy_12, i64 0, i64 %tmp_7

ST_46: b_copy_12_load (554)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:42  %b_copy_12_load = load i32* %b_copy_12_addr_1, align 4


 <State 47>: 8.05ns
ST_47: a_row_11_2_load (91)  [1/1] 0.00ns
.preheader7.preheader:11  %a_row_11_2_load = load i32* %a_row_11_2

ST_47: tmp_32 (162)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:82  %tmp_32 = or i11 %tmp_3, 13

ST_47: tmp_33 (163)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:83  %tmp_33 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_32)

ST_47: a_addr_13 (164)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:84  %a_addr_13 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_33

ST_47: a_row_12 (235)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:155  %a_row_12 = load i32* %a_addr_12, align 4

ST_47: a_row_13 (236)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:156  %a_row_13 = load i32* %a_addr_13, align 4

ST_47: a_row_11_1 (275)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:195  %a_row_11_1 = select i1 %tmp_5, i32 %a_row_11, i32 %a_row_11_2_load

ST_47: StgValue_579 (307)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:227  store i32 %a_row_11_1, i32* %a_row_11_2

ST_47: tmp_11_6 (537)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:25  %tmp_11_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_47: tmp_11_7 (540)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_47: tmp_11_8 (543)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_47: tmp_11_9 (546)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_47: tmp_11_s (549)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_47: tmp_11_10 (552)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_47: b_copy_12_load (554)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:42  %b_copy_12_load = load i32* %b_copy_12_addr_1, align 4

ST_47: b_copy_13_addr_1 (556)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:44  %b_copy_13_addr_1 = getelementptr [32 x i32]* %b_copy_13, i64 0, i64 %tmp_7

ST_47: b_copy_13_load (557)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:45  %b_copy_13_load = load i32* %b_copy_13_addr_1, align 4

ST_47: tmp7 (616)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:104  %tmp7 = add i32 %tmp_11_5, %tmp_11_4


 <State 48>: 8.05ns
ST_48: a_row_12_2_load (92)  [1/1] 0.00ns
.preheader7.preheader:12  %a_row_12_2_load = load i32* %a_row_12_2

ST_48: tmp_34 (165)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:85  %tmp_34 = or i11 %tmp_3, 14

ST_48: tmp_35 (166)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:86  %tmp_35 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_34)

ST_48: a_addr_14 (167)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:87  %a_addr_14 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_35

ST_48: a_row_13 (236)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:156  %a_row_13 = load i32* %a_addr_13, align 4

ST_48: a_row_14 (237)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:157  %a_row_14 = load i32* %a_addr_14, align 4

ST_48: a_row_12_1 (274)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:194  %a_row_12_1 = select i1 %tmp_5, i32 %a_row_12, i32 %a_row_12_2_load

ST_48: StgValue_597 (306)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:226  store i32 %a_row_12_1, i32* %a_row_12_2

ST_48: tmp_11_7 (540)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:28  %tmp_11_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_48: tmp_11_8 (543)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_48: tmp_11_9 (546)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_48: tmp_11_s (549)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_48: tmp_11_10 (552)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_48: tmp_11_11 (555)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_48: b_copy_13_load (557)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:45  %b_copy_13_load = load i32* %b_copy_13_addr_1, align 4

ST_48: b_copy_14_addr_1 (559)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:47  %b_copy_14_addr_1 = getelementptr [32 x i32]* %b_copy_14, i64 0, i64 %tmp_7

ST_48: b_copy_14_load (560)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:48  %b_copy_14_load = load i32* %b_copy_14_addr_1, align 4


 <State 49>: 8.05ns
ST_49: a_row_13_2_load (93)  [1/1] 0.00ns
.preheader7.preheader:13  %a_row_13_2_load = load i32* %a_row_13_2

ST_49: tmp_36 (168)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:88  %tmp_36 = or i11 %tmp_3, 15

ST_49: tmp_37 (169)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:89  %tmp_37 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_36)

ST_49: a_addr_15 (170)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:90  %a_addr_15 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_37

ST_49: a_row_14 (237)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:157  %a_row_14 = load i32* %a_addr_14, align 4

ST_49: a_row_15 (238)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:158  %a_row_15 = load i32* %a_addr_15, align 4

ST_49: a_row_13_1 (273)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:193  %a_row_13_1 = select i1 %tmp_5, i32 %a_row_13, i32 %a_row_13_2_load

ST_49: StgValue_614 (305)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:225  store i32 %a_row_13_1, i32* %a_row_13_2

ST_49: tmp_11_8 (543)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:31  %tmp_11_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_49: tmp_11_9 (546)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_49: tmp_11_s (549)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_49: tmp_11_10 (552)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_49: tmp_11_11 (555)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_49: tmp_11_12 (558)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_49: b_copy_14_load (560)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:48  %b_copy_14_load = load i32* %b_copy_14_addr_1, align 4

ST_49: b_copy_15_addr_1 (562)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:50  %b_copy_15_addr_1 = getelementptr [32 x i32]* %b_copy_15, i64 0, i64 %tmp_7

ST_49: b_copy_15_load (563)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:51  %b_copy_15_load = load i32* %b_copy_15_addr_1, align 4

ST_49: tmp8 (617)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:105  %tmp8 = add i32 %tmp_11_7, %tmp_11_6

ST_49: tmp6 (618)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:106  %tmp6 = add i32 %tmp7, %tmp8

ST_49: tmp2 (619)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:107  %tmp2 = add i32 %tmp3, %tmp6


 <State 50>: 8.05ns
ST_50: a_row_14_2_load (94)  [1/1] 0.00ns
.preheader7.preheader:14  %a_row_14_2_load = load i32* %a_row_14_2

ST_50: tmp_38 (171)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:91  %tmp_38 = or i11 %tmp_3, 16

ST_50: tmp_39 (172)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:92  %tmp_39 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_38)

ST_50: a_addr_16 (173)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:93  %a_addr_16 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_39

ST_50: a_row_15 (238)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:158  %a_row_15 = load i32* %a_addr_15, align 4

ST_50: a_row_16 (239)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:159  %a_row_16 = load i32* %a_addr_16, align 4

ST_50: a_row_14_1 (272)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:192  %a_row_14_1 = select i1 %tmp_5, i32 %a_row_14, i32 %a_row_14_2_load

ST_50: StgValue_634 (304)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:224  store i32 %a_row_14_1, i32* %a_row_14_2

ST_50: tmp_11_9 (546)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:34  %tmp_11_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_50: tmp_11_s (549)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_50: tmp_11_10 (552)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_50: tmp_11_11 (555)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_50: tmp_11_12 (558)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_50: tmp_11_13 (561)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_50: b_copy_15_load (563)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:51  %b_copy_15_load = load i32* %b_copy_15_addr_1, align 4

ST_50: b_copy_16_addr_1 (565)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:53  %b_copy_16_addr_1 = getelementptr [32 x i32]* %b_copy_16, i64 0, i64 %tmp_7

ST_50: b_copy_16_load (566)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:54  %b_copy_16_load = load i32* %b_copy_16_addr_1, align 4


 <State 51>: 8.05ns
ST_51: a_row_15_2_load (95)  [1/1] 0.00ns
.preheader7.preheader:15  %a_row_15_2_load = load i32* %a_row_15_2

ST_51: tmp_40 (174)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:94  %tmp_40 = or i11 %tmp_3, 17

ST_51: tmp_41 (175)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:95  %tmp_41 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_40)

ST_51: a_addr_17 (176)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:96  %a_addr_17 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_41

ST_51: a_row_16 (239)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:159  %a_row_16 = load i32* %a_addr_16, align 4

ST_51: a_row_17 (240)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:160  %a_row_17 = load i32* %a_addr_17, align 4

ST_51: a_row_15_1 (271)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:191  %a_row_15_1 = select i1 %tmp_5, i32 %a_row_15, i32 %a_row_15_2_load

ST_51: StgValue_651 (303)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:223  store i32 %a_row_15_1, i32* %a_row_15_2

ST_51: tmp_11_s (549)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:37  %tmp_11_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_51: tmp_11_10 (552)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_51: tmp_11_11 (555)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_51: tmp_11_12 (558)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_51: tmp_11_13 (561)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_51: tmp_11_14 (564)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_51: b_copy_16_load (566)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:54  %b_copy_16_load = load i32* %b_copy_16_addr_1, align 4

ST_51: b_copy_17_addr_1 (568)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:56  %b_copy_17_addr_1 = getelementptr [32 x i32]* %b_copy_17, i64 0, i64 %tmp_7

ST_51: b_copy_17_load (569)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:57  %b_copy_17_load = load i32* %b_copy_17_addr_1, align 4

ST_51: tmp11 (620)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:108  %tmp11 = add i32 %tmp_11_9, %tmp_11_8


 <State 52>: 8.05ns
ST_52: a_row_16_2_load (96)  [1/1] 0.00ns
.preheader7.preheader:16  %a_row_16_2_load = load i32* %a_row_16_2

ST_52: tmp_42 (177)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:97  %tmp_42 = or i11 %tmp_3, 18

ST_52: tmp_43 (178)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:98  %tmp_43 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_42)

ST_52: a_addr_18 (179)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:99  %a_addr_18 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_43

ST_52: a_row_17 (240)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:160  %a_row_17 = load i32* %a_addr_17, align 4

ST_52: a_row_18 (241)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:161  %a_row_18 = load i32* %a_addr_18, align 4

ST_52: a_row_16_1 (270)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:190  %a_row_16_1 = select i1 %tmp_5, i32 %a_row_16, i32 %a_row_16_2_load

ST_52: StgValue_669 (302)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:222  store i32 %a_row_16_1, i32* %a_row_16_2

ST_52: tmp_11_10 (552)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:40  %tmp_11_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_52: tmp_11_11 (555)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_52: tmp_11_12 (558)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_52: tmp_11_13 (561)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_52: tmp_11_14 (564)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_52: tmp_11_15 (567)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_52: b_copy_17_load (569)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:57  %b_copy_17_load = load i32* %b_copy_17_addr_1, align 4

ST_52: b_copy_18_addr_1 (571)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:59  %b_copy_18_addr_1 = getelementptr [32 x i32]* %b_copy_18, i64 0, i64 %tmp_7

ST_52: b_copy_18_load (572)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:60  %b_copy_18_load = load i32* %b_copy_18_addr_1, align 4


 <State 53>: 8.05ns
ST_53: a_row_17_2_load (97)  [1/1] 0.00ns
.preheader7.preheader:17  %a_row_17_2_load = load i32* %a_row_17_2

ST_53: tmp_44 (180)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:100  %tmp_44 = or i11 %tmp_3, 19

ST_53: tmp_45 (181)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:101  %tmp_45 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_44)

ST_53: a_addr_19 (182)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:102  %a_addr_19 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_45

ST_53: a_row_18 (241)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:161  %a_row_18 = load i32* %a_addr_18, align 4

ST_53: a_row_19 (242)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:162  %a_row_19 = load i32* %a_addr_19, align 4

ST_53: a_row_17_1 (269)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:189  %a_row_17_1 = select i1 %tmp_5, i32 %a_row_17, i32 %a_row_17_2_load

ST_53: StgValue_686 (301)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:221  store i32 %a_row_17_1, i32* %a_row_17_2

ST_53: tmp_11_11 (555)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:43  %tmp_11_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_53: tmp_11_12 (558)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_53: tmp_11_13 (561)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_53: tmp_11_14 (564)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_53: tmp_11_15 (567)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_53: tmp_11_16 (570)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_53: b_copy_18_load (572)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:60  %b_copy_18_load = load i32* %b_copy_18_addr_1, align 4

ST_53: b_copy_19_addr_1 (574)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:62  %b_copy_19_addr_1 = getelementptr [32 x i32]* %b_copy_19, i64 0, i64 %tmp_7

ST_53: b_copy_19_load (575)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:63  %b_copy_19_load = load i32* %b_copy_19_addr_1, align 4

ST_53: tmp12 (621)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:109  %tmp12 = add i32 %tmp_11_10, %tmp_11_s

ST_53: tmp10 (622)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:110  %tmp10 = add i32 %tmp11, %tmp12


 <State 54>: 8.05ns
ST_54: a_row_18_2_load (98)  [1/1] 0.00ns
.preheader7.preheader:18  %a_row_18_2_load = load i32* %a_row_18_2

ST_54: tmp_46 (183)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:103  %tmp_46 = or i11 %tmp_3, 20

ST_54: tmp_47 (184)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:104  %tmp_47 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_46)

ST_54: a_addr_20 (185)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:105  %a_addr_20 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_47

ST_54: a_row_19 (242)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:162  %a_row_19 = load i32* %a_addr_19, align 4

ST_54: a_row_20 (243)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:163  %a_row_20 = load i32* %a_addr_20, align 4

ST_54: a_row_18_1 (268)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:188  %a_row_18_1 = select i1 %tmp_5, i32 %a_row_18, i32 %a_row_18_2_load

ST_54: StgValue_705 (300)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:220  store i32 %a_row_18_1, i32* %a_row_18_2

ST_54: tmp_11_12 (558)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:46  %tmp_11_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_54: tmp_11_13 (561)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_54: tmp_11_14 (564)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_54: tmp_11_15 (567)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_54: tmp_11_16 (570)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_54: tmp_11_17 (573)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_54: b_copy_19_load (575)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:63  %b_copy_19_load = load i32* %b_copy_19_addr_1, align 4

ST_54: b_copy_20_addr_1 (577)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:65  %b_copy_20_addr_1 = getelementptr [32 x i32]* %b_copy_20, i64 0, i64 %tmp_7

ST_54: b_copy_20_load (578)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:66  %b_copy_20_load = load i32* %b_copy_20_addr_1, align 4


 <State 55>: 8.05ns
ST_55: a_row_19_2_load (99)  [1/1] 0.00ns
.preheader7.preheader:19  %a_row_19_2_load = load i32* %a_row_19_2

ST_55: tmp_48 (186)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:106  %tmp_48 = or i11 %tmp_3, 21

ST_55: tmp_49 (187)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:107  %tmp_49 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_48)

ST_55: a_addr_21 (188)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:108  %a_addr_21 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_49

ST_55: a_row_20 (243)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:163  %a_row_20 = load i32* %a_addr_20, align 4

ST_55: a_row_21 (244)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:164  %a_row_21 = load i32* %a_addr_21, align 4

ST_55: a_row_19_1 (267)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:187  %a_row_19_1 = select i1 %tmp_5, i32 %a_row_19, i32 %a_row_19_2_load

ST_55: StgValue_722 (299)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:219  store i32 %a_row_19_1, i32* %a_row_19_2

ST_55: tmp_11_13 (561)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:49  %tmp_11_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_55: tmp_11_14 (564)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_55: tmp_11_15 (567)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_55: tmp_11_16 (570)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_55: tmp_11_17 (573)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_55: tmp_11_18 (576)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_55: b_copy_20_load (578)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:66  %b_copy_20_load = load i32* %b_copy_20_addr_1, align 4

ST_55: b_copy_21_addr_1 (580)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:68  %b_copy_21_addr_1 = getelementptr [32 x i32]* %b_copy_21, i64 0, i64 %tmp_7

ST_55: b_copy_21_load (581)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:69  %b_copy_21_load = load i32* %b_copy_21_addr_1, align 4

ST_55: tmp14 (623)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:111  %tmp14 = add i32 %tmp_11_12, %tmp_11_11


 <State 56>: 8.05ns
ST_56: a_row_20_2_load (100)  [1/1] 0.00ns
.preheader7.preheader:20  %a_row_20_2_load = load i32* %a_row_20_2

ST_56: tmp_50 (189)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:109  %tmp_50 = or i11 %tmp_3, 22

ST_56: tmp_51 (190)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:110  %tmp_51 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_50)

ST_56: a_addr_22 (191)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:111  %a_addr_22 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_51

ST_56: a_row_21 (244)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:164  %a_row_21 = load i32* %a_addr_21, align 4

ST_56: a_row_22 (245)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:165  %a_row_22 = load i32* %a_addr_22, align 4

ST_56: a_row_20_1 (266)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:186  %a_row_20_1 = select i1 %tmp_5, i32 %a_row_20, i32 %a_row_20_2_load

ST_56: StgValue_740 (298)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:218  store i32 %a_row_20_1, i32* %a_row_20_2

ST_56: tmp_11_14 (564)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:52  %tmp_11_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_56: tmp_11_15 (567)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_56: tmp_11_16 (570)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_56: tmp_11_17 (573)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_56: tmp_11_18 (576)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_56: tmp_11_19 (579)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_56: b_copy_21_load (581)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:69  %b_copy_21_load = load i32* %b_copy_21_addr_1, align 4

ST_56: b_copy_22_addr_1 (583)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:71  %b_copy_22_addr_1 = getelementptr [32 x i32]* %b_copy_22, i64 0, i64 %tmp_7

ST_56: b_copy_22_load (584)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:72  %b_copy_22_load = load i32* %b_copy_22_addr_1, align 4


 <State 57>: 8.05ns
ST_57: a_row_21_2_load (101)  [1/1] 0.00ns
.preheader7.preheader:21  %a_row_21_2_load = load i32* %a_row_21_2

ST_57: tmp_52 (192)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:112  %tmp_52 = or i11 %tmp_3, 23

ST_57: tmp_53 (193)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:113  %tmp_53 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_52)

ST_57: a_addr_23 (194)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:114  %a_addr_23 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_53

ST_57: a_row_22 (245)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:165  %a_row_22 = load i32* %a_addr_22, align 4

ST_57: a_row_23 (246)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:166  %a_row_23 = load i32* %a_addr_23, align 4

ST_57: a_row_21_1 (265)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:185  %a_row_21_1 = select i1 %tmp_5, i32 %a_row_21, i32 %a_row_21_2_load

ST_57: StgValue_757 (297)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:217  store i32 %a_row_21_1, i32* %a_row_21_2

ST_57: tmp_11_15 (567)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:55  %tmp_11_15 = mul nsw i32 %a_row_16_1, %b_copy_16_load

ST_57: tmp_11_16 (570)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_57: tmp_11_17 (573)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_57: tmp_11_18 (576)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_57: tmp_11_19 (579)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_57: tmp_11_20 (582)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_57: b_copy_22_load (584)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:72  %b_copy_22_load = load i32* %b_copy_22_addr_1, align 4

ST_57: b_copy_23_addr_1 (586)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:74  %b_copy_23_addr_1 = getelementptr [32 x i32]* %b_copy_23, i64 0, i64 %tmp_7

ST_57: b_copy_23_load (587)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:75  %b_copy_23_load = load i32* %b_copy_23_addr_1, align 4

ST_57: tmp15 (624)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:112  %tmp15 = add i32 %tmp_11_14, %tmp_11_13

ST_57: tmp13 (625)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:113  %tmp13 = add i32 %tmp14, %tmp15

ST_57: tmp9 (626)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:114  %tmp9 = add i32 %tmp10, %tmp13

ST_57: tmp1 (627)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:115  %tmp1 = add i32 %tmp2, %tmp9


 <State 58>: 8.05ns
ST_58: a_row_22_2_load (102)  [1/1] 0.00ns
.preheader7.preheader:22  %a_row_22_2_load = load i32* %a_row_22_2

ST_58: tmp_54 (195)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:115  %tmp_54 = or i11 %tmp_3, 24

ST_58: tmp_55 (196)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:116  %tmp_55 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_54)

ST_58: a_addr_24 (197)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:117  %a_addr_24 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_55

ST_58: a_row_23 (246)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:166  %a_row_23 = load i32* %a_addr_23, align 4

ST_58: a_row_24 (247)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:167  %a_row_24 = load i32* %a_addr_24, align 4

ST_58: a_row_22_1 (264)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:184  %a_row_22_1 = select i1 %tmp_5, i32 %a_row_22, i32 %a_row_22_2_load

ST_58: StgValue_778 (296)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:216  store i32 %a_row_22_1, i32* %a_row_22_2

ST_58: tmp_11_16 (570)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:58  %tmp_11_16 = mul nsw i32 %a_row_17_1, %b_copy_17_load

ST_58: tmp_11_17 (573)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_58: tmp_11_18 (576)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_58: tmp_11_19 (579)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_58: tmp_11_20 (582)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_58: tmp_11_21 (585)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_58: b_copy_23_load (587)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:75  %b_copy_23_load = load i32* %b_copy_23_addr_1, align 4

ST_58: b_copy_24_addr_1 (589)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:77  %b_copy_24_addr_1 = getelementptr [32 x i32]* %b_copy_24, i64 0, i64 %tmp_7

ST_58: b_copy_24_load (590)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:78  %b_copy_24_load = load i32* %b_copy_24_addr_1, align 4


 <State 59>: 8.05ns
ST_59: a_row_23_2_load (103)  [1/1] 0.00ns
.preheader7.preheader:23  %a_row_23_2_load = load i32* %a_row_23_2

ST_59: tmp_56 (198)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:118  %tmp_56 = or i11 %tmp_3, 25

ST_59: tmp_57 (199)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:119  %tmp_57 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_56)

ST_59: a_addr_26 (200)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:120  %a_addr_26 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_57

ST_59: a_row_24 (247)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:167  %a_row_24 = load i32* %a_addr_24, align 4

ST_59: a_row_25 (248)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:168  %a_row_25 = load i32* %a_addr_26, align 4

ST_59: a_row_23_1 (263)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:183  %a_row_23_1 = select i1 %tmp_5, i32 %a_row_23, i32 %a_row_23_2_load

ST_59: StgValue_795 (295)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:215  store i32 %a_row_23_1, i32* %a_row_23_2

ST_59: tmp_11_17 (573)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:61  %tmp_11_17 = mul nsw i32 %a_row_18_1, %b_copy_18_load

ST_59: tmp_11_18 (576)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_59: tmp_11_19 (579)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_59: tmp_11_20 (582)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_59: tmp_11_21 (585)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_59: tmp_11_22 (588)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_59: b_copy_24_load (590)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:78  %b_copy_24_load = load i32* %b_copy_24_addr_1, align 4

ST_59: b_copy_25_addr_1 (592)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:80  %b_copy_25_addr_1 = getelementptr [32 x i32]* %b_copy_25, i64 0, i64 %tmp_7

ST_59: b_copy_25_load (593)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:81  %b_copy_25_load = load i32* %b_copy_25_addr_1, align 4

ST_59: tmp19 (628)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:116  %tmp19 = add i32 %tmp_11_16, %tmp_11_15


 <State 60>: 8.05ns
ST_60: a_row_24_2_load (104)  [1/1] 0.00ns
.preheader7.preheader:24  %a_row_24_2_load = load i32* %a_row_24_2

ST_60: tmp_58 (201)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:121  %tmp_58 = or i11 %tmp_3, 26

ST_60: tmp_59 (202)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:122  %tmp_59 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_58)

ST_60: a_addr_27 (203)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:123  %a_addr_27 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_59

ST_60: a_row_25 (248)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:168  %a_row_25 = load i32* %a_addr_26, align 4

ST_60: a_row_26 (249)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:169  %a_row_26 = load i32* %a_addr_27, align 4

ST_60: a_row_24_1 (262)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:182  %a_row_24_1 = select i1 %tmp_5, i32 %a_row_24, i32 %a_row_24_2_load

ST_60: StgValue_813 (294)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:214  store i32 %a_row_24_1, i32* %a_row_24_2

ST_60: tmp_11_18 (576)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:64  %tmp_11_18 = mul nsw i32 %a_row_19_1, %b_copy_19_load

ST_60: tmp_11_19 (579)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_60: tmp_11_20 (582)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_60: tmp_11_21 (585)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_60: tmp_11_22 (588)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_60: tmp_11_23 (591)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_60: b_copy_25_load (593)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:81  %b_copy_25_load = load i32* %b_copy_25_addr_1, align 4

ST_60: b_copy_26_addr_1 (595)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:83  %b_copy_26_addr_1 = getelementptr [32 x i32]* %b_copy_26, i64 0, i64 %tmp_7

ST_60: b_copy_26_load (596)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:84  %b_copy_26_load = load i32* %b_copy_26_addr_1, align 4


 <State 61>: 8.05ns
ST_61: a_row_25_2_load (105)  [1/1] 0.00ns
.preheader7.preheader:25  %a_row_25_2_load = load i32* %a_row_25_2

ST_61: tmp_60 (204)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:124  %tmp_60 = or i11 %tmp_3, 27

ST_61: tmp_61 (205)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:125  %tmp_61 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_60)

ST_61: a_addr_28 (206)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:126  %a_addr_28 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_61

ST_61: a_row_26 (249)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:169  %a_row_26 = load i32* %a_addr_27, align 4

ST_61: a_row_27 (250)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:170  %a_row_27 = load i32* %a_addr_28, align 4

ST_61: a_row_25_1 (261)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:181  %a_row_25_1 = select i1 %tmp_5, i32 %a_row_25, i32 %a_row_25_2_load

ST_61: StgValue_830 (293)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:213  store i32 %a_row_25_1, i32* %a_row_25_2

ST_61: tmp_11_19 (579)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:67  %tmp_11_19 = mul nsw i32 %a_row_20_1, %b_copy_20_load

ST_61: tmp_11_20 (582)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_61: tmp_11_21 (585)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_61: tmp_11_22 (588)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_61: tmp_11_23 (591)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_61: tmp_11_24 (594)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_61: b_copy_26_load (596)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:84  %b_copy_26_load = load i32* %b_copy_26_addr_1, align 4

ST_61: b_copy_27_addr_1 (598)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:86  %b_copy_27_addr_1 = getelementptr [32 x i32]* %b_copy_27, i64 0, i64 %tmp_7

ST_61: b_copy_27_load (599)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:87  %b_copy_27_load = load i32* %b_copy_27_addr_1, align 4

ST_61: tmp20 (629)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:117  %tmp20 = add i32 %tmp_11_18, %tmp_11_17

ST_61: tmp18 (630)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:118  %tmp18 = add i32 %tmp19, %tmp20


 <State 62>: 8.05ns
ST_62: a_row_26_2_load (106)  [1/1] 0.00ns
.preheader7.preheader:26  %a_row_26_2_load = load i32* %a_row_26_2

ST_62: tmp_62 (207)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:127  %tmp_62 = or i11 %tmp_3, 28

ST_62: tmp_63 (208)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:128  %tmp_63 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_62)

ST_62: a_addr_29 (209)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:129  %a_addr_29 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_63

ST_62: a_row_27 (250)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:170  %a_row_27 = load i32* %a_addr_28, align 4

ST_62: a_row_28 (251)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:171  %a_row_28 = load i32* %a_addr_29, align 4

ST_62: a_row_26_1 (260)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:180  %a_row_26_1 = select i1 %tmp_5, i32 %a_row_26, i32 %a_row_26_2_load

ST_62: StgValue_849 (292)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:212  store i32 %a_row_26_1, i32* %a_row_26_2

ST_62: tmp_11_20 (582)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:70  %tmp_11_20 = mul nsw i32 %a_row_21_1, %b_copy_21_load

ST_62: tmp_11_21 (585)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_62: tmp_11_22 (588)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_62: tmp_11_23 (591)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_62: tmp_11_24 (594)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_62: tmp_11_25 (597)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_62: b_copy_27_load (599)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:87  %b_copy_27_load = load i32* %b_copy_27_addr_1, align 4

ST_62: b_copy_28_addr_1 (601)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:89  %b_copy_28_addr_1 = getelementptr [32 x i32]* %b_copy_28, i64 0, i64 %tmp_7

ST_62: b_copy_28_load (602)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:90  %b_copy_28_load = load i32* %b_copy_28_addr_1, align 4


 <State 63>: 8.05ns
ST_63: a_row_27_2_load (107)  [1/1] 0.00ns
.preheader7.preheader:27  %a_row_27_2_load = load i32* %a_row_27_2

ST_63: tmp_64 (210)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:130  %tmp_64 = or i11 %tmp_3, 29

ST_63: tmp_65 (211)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:131  %tmp_65 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_64)

ST_63: a_addr_30 (212)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:132  %a_addr_30 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_65

ST_63: a_row_28 (251)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:171  %a_row_28 = load i32* %a_addr_29, align 4

ST_63: a_row_29 (252)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:172  %a_row_29 = load i32* %a_addr_30, align 4

ST_63: a_row_27_1 (259)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:179  %a_row_27_1 = select i1 %tmp_5, i32 %a_row_27, i32 %a_row_27_2_load

ST_63: StgValue_866 (291)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:211  store i32 %a_row_27_1, i32* %a_row_27_2

ST_63: tmp_11_21 (585)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:73  %tmp_11_21 = mul nsw i32 %a_row_22_1, %b_copy_22_load

ST_63: tmp_11_22 (588)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_63: tmp_11_23 (591)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_63: tmp_11_24 (594)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_63: tmp_11_25 (597)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_63: tmp_11_26 (600)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_63: b_copy_28_load (602)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:90  %b_copy_28_load = load i32* %b_copy_28_addr_1, align 4

ST_63: b_copy_29_addr_1 (604)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:92  %b_copy_29_addr_1 = getelementptr [32 x i32]* %b_copy_29, i64 0, i64 %tmp_7

ST_63: b_copy_29_load (605)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:93  %b_copy_29_load = load i32* %b_copy_29_addr_1, align 4

ST_63: tmp22 (631)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:119  %tmp22 = add i32 %tmp_11_20, %tmp_11_19


 <State 64>: 8.05ns
ST_64: a_row_28_2_load (108)  [1/1] 0.00ns
.preheader7.preheader:28  %a_row_28_2_load = load i32* %a_row_28_2

ST_64: tmp_66 (213)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:133  %tmp_66 = or i11 %tmp_3, 30

ST_64: tmp_67 (214)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:134  %tmp_67 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_66)

ST_64: a_addr_31 (215)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:135  %a_addr_31 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_67

ST_64: a_row_29 (252)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:172  %a_row_29 = load i32* %a_addr_30, align 4

ST_64: a_row_30 (253)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:173  %a_row_30 = load i32* %a_addr_31, align 4

ST_64: a_row_28_1 (258)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:178  %a_row_28_1 = select i1 %tmp_5, i32 %a_row_28, i32 %a_row_28_2_load

ST_64: StgValue_884 (290)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:210  store i32 %a_row_28_1, i32* %a_row_28_2

ST_64: tmp_11_22 (588)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:76  %tmp_11_22 = mul nsw i32 %a_row_23_1, %b_copy_23_load

ST_64: tmp_11_23 (591)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_64: tmp_11_24 (594)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_64: tmp_11_25 (597)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_64: tmp_11_26 (600)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_64: tmp_11_27 (603)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_64: b_copy_29_load (605)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:93  %b_copy_29_load = load i32* %b_copy_29_addr_1, align 4

ST_64: b_copy_30_addr_1 (607)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:95  %b_copy_30_addr_1 = getelementptr [32 x i32]* %b_copy_30, i64 0, i64 %tmp_7

ST_64: b_copy_30_load (608)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:96  %b_copy_30_load = load i32* %b_copy_30_addr_1, align 4

ST_64: b_copy_31_addr_1 (610)  [1/1] 0.00ns  loc: matmul.cpp:38
.loopexit:98  %b_copy_31_addr_1 = getelementptr [32 x i32]* %b_copy_31, i64 0, i64 %tmp_7

ST_64: b_copy_31_load (611)  [2/2] 2.71ns  loc: matmul.cpp:38
.loopexit:99  %b_copy_31_load = load i32* %b_copy_31_addr_1, align 4


 <State 65>: 8.05ns
ST_65: a_row_29_2_load (109)  [1/1] 0.00ns
.preheader7.preheader:29  %a_row_29_2_load = load i32* %a_row_29_2

ST_65: tmp_68 (216)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:136  %tmp_68 = or i11 %tmp_3, 31

ST_65: tmp_69 (217)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:137  %tmp_69 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %tmp_68)

ST_65: a_addr_32 (218)  [1/1] 0.00ns  loc: matmul.cpp:27
.preheader7.preheader:138  %a_addr_32 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_69

ST_65: a_row_30 (253)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:173  %a_row_30 = load i32* %a_addr_31, align 4

ST_65: a_row_31 (254)  [2/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:174  %a_row_31 = load i32* %a_addr_32, align 4

ST_65: a_row_29_1 (257)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:177  %a_row_29_1 = select i1 %tmp_5, i32 %a_row_29, i32 %a_row_29_2_load

ST_65: StgValue_903 (289)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:209  store i32 %a_row_29_1, i32* %a_row_29_2

ST_65: tmp_11_23 (591)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:79  %tmp_11_23 = mul nsw i32 %a_row_24_1, %b_copy_24_load

ST_65: tmp_11_24 (594)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_65: tmp_11_25 (597)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_65: tmp_11_26 (600)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_65: tmp_11_27 (603)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_65: tmp_11_28 (606)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_65: b_copy_30_load (608)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:96  %b_copy_30_load = load i32* %b_copy_30_addr_1, align 4

ST_65: b_copy_31_load (611)  [1/2] 2.71ns  loc: matmul.cpp:38
.loopexit:99  %b_copy_31_load = load i32* %b_copy_31_addr_1, align 4

ST_65: tmp23 (632)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:120  %tmp23 = add i32 %tmp_11_22, %tmp_11_21

ST_65: tmp21 (633)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:121  %tmp21 = add i32 %tmp22, %tmp23

ST_65: tmp17 (634)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:122  %tmp17 = add i32 %tmp18, %tmp21


 <State 66>: 8.05ns
ST_66: a_row_30_2_load (110)  [1/1] 0.00ns
.preheader7.preheader:30  %a_row_30_2_load = load i32* %a_row_30_2

ST_66: a_row_31_2_load (111)  [1/1] 0.00ns
.preheader7.preheader:31  %a_row_31_2_load = load i32* %a_row_31_2

ST_66: StgValue_917 (113)  [1/1] 0.00ns
.preheader7.preheader:33  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_66: empty_3 (114)  [1/1] 0.00ns
.preheader7.preheader:34  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024) nounwind

ST_66: tmp_1 (121)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:41  %tmp_1 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i6.i5(i1 true, i6 %tmp_2_mid2_v_v_v, i5 0)

ST_66: tmp_2_cast (122)  [1/1] 0.00ns  loc: matmul.cpp:41
.preheader7.preheader:42  %tmp_2_cast = zext i12 %tmp_1 to i13

ST_66: StgValue_921 (219)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:139  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_66: tmp_4 (220)  [1/1] 0.00ns  loc: matmul.cpp:20
.preheader7.preheader:140  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_66: StgValue_923 (221)  [1/1] 0.00ns  loc: matmul.cpp:21
.preheader7.preheader:141  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_66: a_row_31 (254)  [1/2] 2.71ns  loc: matmul.cpp:27
.preheader7.preheader:174  %a_row_31 = load i32* %a_addr_32, align 4

ST_66: a_row_31_1 (255)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:175  %a_row_31_1 = select i1 %tmp_5, i32 %a_row_31, i32 %a_row_31_2_load

ST_66: a_row_30_1 (256)  [1/1] 1.37ns  loc: matmul.cpp:25
.preheader7.preheader:176  %a_row_30_1 = select i1 %tmp_5, i32 %a_row_30, i32 %a_row_30_2_load

ST_66: StgValue_927 (287)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:207  store i32 %a_row_31_1, i32* %a_row_31_2

ST_66: StgValue_928 (288)  [1/1] 0.00ns  loc: matmul.cpp:25
.preheader7.preheader:208  store i32 %a_row_30_1, i32* %a_row_30_2

ST_66: StgValue_929 (319)  [1/1] 0.00ns  loc: matmul.cpp:31
.preheader7.preheader:239  br i1 %tmp_mid2, label %.preheader.preheader, label %.loopexit

ST_66: tmp_7_cast (513)  [1/1] 0.00ns  loc: matmul.cpp:41
.loopexit:1  %tmp_7_cast = zext i6 %j_mid2 to i13

ST_66: tmp_102 (514)  [1/1] 1.79ns  loc: matmul.cpp:41
.loopexit:2  %tmp_102 = add i13 %tmp_2_cast, %tmp_7_cast

ST_66: tmp_11_24 (594)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:82  %tmp_11_24 = mul nsw i32 %a_row_25_1, %b_copy_25_load

ST_66: tmp_11_25 (597)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_66: tmp_11_26 (600)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_66: tmp_11_27 (603)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_66: tmp_11_28 (606)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_66: tmp_11_29 (609)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_66: j_1 (646)  [1/1] 1.67ns  loc: matmul.cpp:20
.loopexit:134  %j_1 = add i6 %j_mid2, 1


 <State 67>: 6.68ns
ST_67: tmp_11_25 (597)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:85  %tmp_11_25 = mul nsw i32 %a_row_26_1, %b_copy_26_load

ST_67: tmp_11_26 (600)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_67: tmp_11_27 (603)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_67: tmp_11_28 (606)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_67: tmp_11_29 (609)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_67: tmp_11_30 (612)  [6/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load

ST_67: tmp26 (635)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:123  %tmp26 = add i32 %tmp_11_24, %tmp_11_23


 <State 68>: 6.68ns
ST_68: tmp_11_26 (600)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:88  %tmp_11_26 = mul nsw i32 %a_row_27_1, %b_copy_27_load

ST_68: tmp_11_27 (603)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_68: tmp_11_28 (606)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_68: tmp_11_29 (609)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_68: tmp_11_30 (612)  [5/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load


 <State 69>: 6.68ns
ST_69: tmp_11_27 (603)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:91  %tmp_11_27 = mul nsw i32 %a_row_28_1, %b_copy_28_load

ST_69: tmp_11_28 (606)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_69: tmp_11_29 (609)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_69: tmp_11_30 (612)  [4/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load

ST_69: tmp27 (636)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:124  %tmp27 = add i32 %tmp_11_26, %tmp_11_25

ST_69: tmp25 (637)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:125  %tmp25 = add i32 %tmp26, %tmp27


 <State 70>: 6.68ns
ST_70: tmp_11_28 (606)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:94  %tmp_11_28 = mul nsw i32 %a_row_29_1, %b_copy_29_load

ST_70: tmp_11_29 (609)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_70: tmp_11_30 (612)  [3/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load


 <State 71>: 6.68ns
ST_71: tmp_11_29 (609)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:97  %tmp_11_29 = mul nsw i32 %a_row_30_1, %b_copy_30_load

ST_71: tmp_11_30 (612)  [2/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load

ST_71: tmp29 (638)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:126  %tmp29 = add i32 %tmp_11_28, %tmp_11_27


 <State 72>: 6.68ns
ST_72: tmp_11_30 (612)  [1/6] 6.68ns  loc: matmul.cpp:38
.loopexit:100  %tmp_11_30 = mul nsw i32 %a_row_31_1, %b_copy_31_load


 <State 73>: 6.23ns
ST_73: tmp30 (639)  [1/1] 2.39ns  loc: matmul.cpp:38
.loopexit:127  %tmp30 = add i32 %tmp_11_30, %tmp_11_29

ST_73: tmp28 (640)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:128  %tmp28 = add i32 %tmp29, %tmp30

ST_73: tmp24 (641)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:129  %tmp24 = add i32 %tmp25, %tmp28


 <State 74>: 6.55ns
ST_74: tmp_103_cast (515)  [1/1] 0.00ns  loc: matmul.cpp:41
.loopexit:3  %tmp_103_cast = zext i13 %tmp_102 to i64

ST_74: a_addr_25 (516)  [1/1] 0.00ns  loc: matmul.cpp:41
.loopexit:4  %a_addr_25 = getelementptr [3072 x i32]* %a, i64 0, i64 %tmp_103_cast

ST_74: tmp16 (642)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:130  %tmp16 = add i32 %tmp17, %tmp24

ST_74: tmp_12_s (643)  [1/1] 1.92ns  loc: matmul.cpp:38
.loopexit:131  %tmp_12_s = add nsw i32 %tmp1, %tmp16

ST_74: StgValue_971 (644)  [1/1] 2.71ns  loc: matmul.cpp:41
.loopexit:132  store i32 %tmp_12_s, i32* %a_addr_25, align 4

ST_74: empty (645)  [1/1] 0.00ns  loc: matmul.cpp:42
.loopexit:133  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_4) nounwind

ST_74: StgValue_973 (647)  [1/1] 0.00ns  loc: matmul.cpp:20
.loopexit:135  br label %.preheader7


 <State 75>: 0.00ns
ST_75: StgValue_974 (649)  [1/1] 0.00ns  loc: matmul.cpp:44
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [73]  (1.57 ns)

 <State 2>: 6.48ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.cpp:20) [75]  (0 ns)
	'icmp' operation ('exitcond', matmul.cpp:20) [115]  (2.4 ns)
	'select' operation ('j_mid2', matmul.cpp:20) [116]  (1.37 ns)
	'getelementptr' operation ('a_addr_33', matmul.cpp:33) [328]  (0 ns)
	'load' operation ('a_load', matmul.cpp:33) on array 'a' [414]  (2.71 ns)

 <State 3>: 4.5ns
The critical path consists of the following:
	'add' operation ('tmp_71', matmul.cpp:33) [329]  (1.79 ns)
	'getelementptr' operation ('a_addr_34', matmul.cpp:33) [331]  (0 ns)
	'load' operation ('a_load_1', matmul.cpp:33) on array 'a' [417]  (2.71 ns)

 <State 4>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr_35', matmul.cpp:33) [333]  (0 ns)
	'load' operation ('a_load_2', matmul.cpp:33) on array 'a' [420]  (2.71 ns)

 <State 5>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_2', matmul.cpp:33) on array 'a' [420]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_2', matmul.cpp:33 on array 'b_copy[2]', matmul.cpp:14 [422]  (2.71 ns)

 <State 6>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_3', matmul.cpp:33) on array 'a' [423]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_3', matmul.cpp:33 on array 'b_copy[3]', matmul.cpp:14 [425]  (2.71 ns)

 <State 7>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_4', matmul.cpp:33) on array 'a' [426]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_4', matmul.cpp:33 on array 'b_copy[4]', matmul.cpp:14 [428]  (2.71 ns)

 <State 8>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_5', matmul.cpp:33) on array 'a' [429]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_5', matmul.cpp:33 on array 'b_copy[5]', matmul.cpp:14 [431]  (2.71 ns)

 <State 9>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_6', matmul.cpp:33) on array 'a' [432]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_6', matmul.cpp:33 on array 'b_copy[6]', matmul.cpp:14 [434]  (2.71 ns)

 <State 10>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_7', matmul.cpp:33) on array 'a' [435]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_7', matmul.cpp:33 on array 'b_copy[7]', matmul.cpp:14 [437]  (2.71 ns)

 <State 11>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_8', matmul.cpp:33) on array 'a' [438]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_8', matmul.cpp:33 on array 'b_copy[8]', matmul.cpp:14 [440]  (2.71 ns)

 <State 12>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_9', matmul.cpp:33) on array 'a' [441]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_9', matmul.cpp:33 on array 'b_copy[9]', matmul.cpp:14 [443]  (2.71 ns)

 <State 13>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_10', matmul.cpp:33) on array 'a' [444]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_10', matmul.cpp:33 on array 'b_copy[10]', matmul.cpp:14 [446]  (2.71 ns)

 <State 14>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_11', matmul.cpp:33) on array 'a' [447]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_11', matmul.cpp:33 on array 'b_copy[11]', matmul.cpp:14 [449]  (2.71 ns)

 <State 15>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_12', matmul.cpp:33) on array 'a' [450]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_12', matmul.cpp:33 on array 'b_copy[12]', matmul.cpp:14 [452]  (2.71 ns)

 <State 16>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_13', matmul.cpp:33) on array 'a' [453]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_13', matmul.cpp:33 on array 'b_copy[13]', matmul.cpp:14 [455]  (2.71 ns)

 <State 17>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_14', matmul.cpp:33) on array 'a' [456]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_14', matmul.cpp:33 on array 'b_copy[14]', matmul.cpp:14 [458]  (2.71 ns)

 <State 18>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_15', matmul.cpp:33) on array 'a' [459]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_15', matmul.cpp:33 on array 'b_copy[15]', matmul.cpp:14 [461]  (2.71 ns)

 <State 19>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_16', matmul.cpp:33) on array 'a' [462]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_16', matmul.cpp:33 on array 'b_copy[16]', matmul.cpp:14 [464]  (2.71 ns)

 <State 20>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_17', matmul.cpp:33) on array 'a' [465]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_17', matmul.cpp:33 on array 'b_copy[17]', matmul.cpp:14 [467]  (2.71 ns)

 <State 21>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_18', matmul.cpp:33) on array 'a' [468]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_18', matmul.cpp:33 on array 'b_copy[18]', matmul.cpp:14 [470]  (2.71 ns)

 <State 22>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_19', matmul.cpp:33) on array 'a' [471]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_19', matmul.cpp:33 on array 'b_copy[19]', matmul.cpp:14 [473]  (2.71 ns)

 <State 23>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_20', matmul.cpp:33) on array 'a' [474]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_20', matmul.cpp:33 on array 'b_copy[20]', matmul.cpp:14 [476]  (2.71 ns)

 <State 24>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_21', matmul.cpp:33) on array 'a' [477]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_21', matmul.cpp:33 on array 'b_copy[21]', matmul.cpp:14 [479]  (2.71 ns)

 <State 25>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_22', matmul.cpp:33) on array 'a' [480]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_22', matmul.cpp:33 on array 'b_copy[22]', matmul.cpp:14 [482]  (2.71 ns)

 <State 26>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_23', matmul.cpp:33) on array 'a' [483]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_23', matmul.cpp:33 on array 'b_copy[23]', matmul.cpp:14 [485]  (2.71 ns)

 <State 27>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_24', matmul.cpp:33) on array 'a' [486]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_24', matmul.cpp:33 on array 'b_copy[24]', matmul.cpp:14 [488]  (2.71 ns)

 <State 28>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_25', matmul.cpp:33) on array 'a' [489]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_25', matmul.cpp:33 on array 'b_copy[25]', matmul.cpp:14 [491]  (2.71 ns)

 <State 29>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_26', matmul.cpp:33) on array 'a' [492]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_26', matmul.cpp:33 on array 'b_copy[26]', matmul.cpp:14 [494]  (2.71 ns)

 <State 30>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_27', matmul.cpp:33) on array 'a' [495]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_27', matmul.cpp:33 on array 'b_copy[27]', matmul.cpp:14 [497]  (2.71 ns)

 <State 31>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_28', matmul.cpp:33) on array 'a' [498]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_28', matmul.cpp:33 on array 'b_copy[28]', matmul.cpp:14 [500]  (2.71 ns)

 <State 32>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_29', matmul.cpp:33) on array 'a' [501]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_29', matmul.cpp:33 on array 'b_copy[29]', matmul.cpp:14 [503]  (2.71 ns)

 <State 33>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_30', matmul.cpp:33) on array 'a' [504]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_30', matmul.cpp:33 on array 'b_copy[30]', matmul.cpp:14 [506]  (2.71 ns)

 <State 34>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_31', matmul.cpp:33) on array 'a' [507]  (2.71 ns)
	'store' operation (matmul.cpp:33) of variable 'a_load_31', matmul.cpp:33 on array 'b_copy[31]', matmul.cpp:14 [509]  (2.71 ns)

 <State 35>: 2.71ns
The critical path consists of the following:
	'or' operation ('tmp_9', matmul.cpp:41) [126]  (0 ns)
	'getelementptr' operation ('a_addr_1', matmul.cpp:27) [128]  (0 ns)
	'load' operation ('a_row[1]', matmul.cpp:27) on array 'a' [224]  (2.71 ns)

 <State 36>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_0_2_load') on local variable 'a_row[0]' [80]  (0 ns)
	'select' operation ('a_row[0]', matmul.cpp:25) [286]  (1.37 ns)
	'mul' operation ('tmp_s', matmul.cpp:38) [519]  (6.68 ns)

 <State 37>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_1_2_load') on local variable 'a_row[1]' [81]  (0 ns)
	'select' operation ('a_row[1]', matmul.cpp:25) [285]  (1.37 ns)
	'mul' operation ('tmp_11_1', matmul.cpp:38) [522]  (6.68 ns)

 <State 38>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_2_2_load') on local variable 'a_row[2]' [82]  (0 ns)
	'select' operation ('a_row[2]', matmul.cpp:25) [284]  (1.37 ns)
	'mul' operation ('tmp_11_2', matmul.cpp:38) [525]  (6.68 ns)

 <State 39>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_3_2_load') on local variable 'a_row[3]' [83]  (0 ns)
	'select' operation ('a_row[3]', matmul.cpp:25) [283]  (1.37 ns)
	'mul' operation ('tmp_11_3', matmul.cpp:38) [528]  (6.68 ns)

 <State 40>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_4_2_load') on local variable 'a_row[4]' [84]  (0 ns)
	'select' operation ('a_row[4]', matmul.cpp:25) [282]  (1.37 ns)
	'mul' operation ('tmp_11_4', matmul.cpp:38) [531]  (6.68 ns)

 <State 41>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_5_2_load') on local variable 'a_row[5]' [85]  (0 ns)
	'select' operation ('a_row[5]', matmul.cpp:25) [281]  (1.37 ns)
	'mul' operation ('tmp_11_5', matmul.cpp:38) [534]  (6.68 ns)

 <State 42>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_6_2_load') on local variable 'a_row[6]' [86]  (0 ns)
	'select' operation ('a_row[6]', matmul.cpp:25) [280]  (1.37 ns)
	'mul' operation ('tmp_11_6', matmul.cpp:38) [537]  (6.68 ns)

 <State 43>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_7_2_load') on local variable 'a_row[7]' [87]  (0 ns)
	'select' operation ('a_row[7]', matmul.cpp:25) [279]  (1.37 ns)
	'mul' operation ('tmp_11_7', matmul.cpp:38) [540]  (6.68 ns)

 <State 44>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_8_2_load') on local variable 'a_row[8]' [88]  (0 ns)
	'select' operation ('a_row[8]', matmul.cpp:25) [278]  (1.37 ns)
	'mul' operation ('tmp_11_8', matmul.cpp:38) [543]  (6.68 ns)

 <State 45>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_9_2_load') on local variable 'a_row[9]' [89]  (0 ns)
	'select' operation ('a_row[9]', matmul.cpp:25) [277]  (1.37 ns)
	'mul' operation ('tmp_11_9', matmul.cpp:38) [546]  (6.68 ns)

 <State 46>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_10_2_load') on local variable 'a_row[10]' [90]  (0 ns)
	'select' operation ('a_row[10]', matmul.cpp:25) [276]  (1.37 ns)
	'mul' operation ('tmp_11_s', matmul.cpp:38) [549]  (6.68 ns)

 <State 47>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_11_2_load') on local variable 'a_row[11]' [91]  (0 ns)
	'select' operation ('a_row[11]', matmul.cpp:25) [275]  (1.37 ns)
	'mul' operation ('tmp_11_10', matmul.cpp:38) [552]  (6.68 ns)

 <State 48>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_12_2_load') on local variable 'a_row[12]' [92]  (0 ns)
	'select' operation ('a_row[12]', matmul.cpp:25) [274]  (1.37 ns)
	'mul' operation ('tmp_11_11', matmul.cpp:38) [555]  (6.68 ns)

 <State 49>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_13_2_load') on local variable 'a_row[13]' [93]  (0 ns)
	'select' operation ('a_row[13]', matmul.cpp:25) [273]  (1.37 ns)
	'mul' operation ('tmp_11_12', matmul.cpp:38) [558]  (6.68 ns)

 <State 50>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_14_2_load') on local variable 'a_row[14]' [94]  (0 ns)
	'select' operation ('a_row[14]', matmul.cpp:25) [272]  (1.37 ns)
	'mul' operation ('tmp_11_13', matmul.cpp:38) [561]  (6.68 ns)

 <State 51>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_15_2_load') on local variable 'a_row[15]' [95]  (0 ns)
	'select' operation ('a_row[15]', matmul.cpp:25) [271]  (1.37 ns)
	'mul' operation ('tmp_11_14', matmul.cpp:38) [564]  (6.68 ns)

 <State 52>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_16_2_load') on local variable 'a_row[16]' [96]  (0 ns)
	'select' operation ('a_row[16]', matmul.cpp:25) [270]  (1.37 ns)
	'mul' operation ('tmp_11_15', matmul.cpp:38) [567]  (6.68 ns)

 <State 53>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_17_2_load') on local variable 'a_row[17]' [97]  (0 ns)
	'select' operation ('a_row[17]', matmul.cpp:25) [269]  (1.37 ns)
	'mul' operation ('tmp_11_16', matmul.cpp:38) [570]  (6.68 ns)

 <State 54>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_18_2_load') on local variable 'a_row[18]' [98]  (0 ns)
	'select' operation ('a_row[18]', matmul.cpp:25) [268]  (1.37 ns)
	'mul' operation ('tmp_11_17', matmul.cpp:38) [573]  (6.68 ns)

 <State 55>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_19_2_load') on local variable 'a_row[19]' [99]  (0 ns)
	'select' operation ('a_row[19]', matmul.cpp:25) [267]  (1.37 ns)
	'mul' operation ('tmp_11_18', matmul.cpp:38) [576]  (6.68 ns)

 <State 56>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_20_2_load') on local variable 'a_row[20]' [100]  (0 ns)
	'select' operation ('a_row[20]', matmul.cpp:25) [266]  (1.37 ns)
	'mul' operation ('tmp_11_19', matmul.cpp:38) [579]  (6.68 ns)

 <State 57>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_21_2_load') on local variable 'a_row[21]' [101]  (0 ns)
	'select' operation ('a_row[21]', matmul.cpp:25) [265]  (1.37 ns)
	'mul' operation ('tmp_11_20', matmul.cpp:38) [582]  (6.68 ns)

 <State 58>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_22_2_load') on local variable 'a_row[22]' [102]  (0 ns)
	'select' operation ('a_row[22]', matmul.cpp:25) [264]  (1.37 ns)
	'mul' operation ('tmp_11_21', matmul.cpp:38) [585]  (6.68 ns)

 <State 59>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_23_2_load') on local variable 'a_row[23]' [103]  (0 ns)
	'select' operation ('a_row[23]', matmul.cpp:25) [263]  (1.37 ns)
	'mul' operation ('tmp_11_22', matmul.cpp:38) [588]  (6.68 ns)

 <State 60>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_24_2_load') on local variable 'a_row[24]' [104]  (0 ns)
	'select' operation ('a_row[24]', matmul.cpp:25) [262]  (1.37 ns)
	'mul' operation ('tmp_11_23', matmul.cpp:38) [591]  (6.68 ns)

 <State 61>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_25_2_load') on local variable 'a_row[25]' [105]  (0 ns)
	'select' operation ('a_row[25]', matmul.cpp:25) [261]  (1.37 ns)
	'mul' operation ('tmp_11_24', matmul.cpp:38) [594]  (6.68 ns)

 <State 62>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_26_2_load') on local variable 'a_row[26]' [106]  (0 ns)
	'select' operation ('a_row[26]', matmul.cpp:25) [260]  (1.37 ns)
	'mul' operation ('tmp_11_25', matmul.cpp:38) [597]  (6.68 ns)

 <State 63>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_27_2_load') on local variable 'a_row[27]' [107]  (0 ns)
	'select' operation ('a_row[27]', matmul.cpp:25) [259]  (1.37 ns)
	'mul' operation ('tmp_11_26', matmul.cpp:38) [600]  (6.68 ns)

 <State 64>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_28_2_load') on local variable 'a_row[28]' [108]  (0 ns)
	'select' operation ('a_row[28]', matmul.cpp:25) [258]  (1.37 ns)
	'mul' operation ('tmp_11_27', matmul.cpp:38) [603]  (6.68 ns)

 <State 65>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_29_2_load') on local variable 'a_row[29]' [109]  (0 ns)
	'select' operation ('a_row[29]', matmul.cpp:25) [257]  (1.37 ns)
	'mul' operation ('tmp_11_28', matmul.cpp:38) [606]  (6.68 ns)

 <State 66>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_30_2_load') on local variable 'a_row[30]' [110]  (0 ns)
	'select' operation ('a_row[30]', matmul.cpp:25) [256]  (1.37 ns)
	'mul' operation ('tmp_11_29', matmul.cpp:38) [609]  (6.68 ns)

 <State 67>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_25', matmul.cpp:38) [597]  (6.68 ns)

 <State 68>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_26', matmul.cpp:38) [600]  (6.68 ns)

 <State 69>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_27', matmul.cpp:38) [603]  (6.68 ns)

 <State 70>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_28', matmul.cpp:38) [606]  (6.68 ns)

 <State 71>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_29', matmul.cpp:38) [609]  (6.68 ns)

 <State 72>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_30', matmul.cpp:38) [612]  (6.68 ns)

 <State 73>: 6.23ns
The critical path consists of the following:
	'add' operation ('tmp30', matmul.cpp:38) [639]  (2.39 ns)
	'add' operation ('tmp28', matmul.cpp:38) [640]  (1.92 ns)
	'add' operation ('tmp24', matmul.cpp:38) [641]  (1.92 ns)

 <State 74>: 6.55ns
The critical path consists of the following:
	'add' operation ('tmp16', matmul.cpp:38) [642]  (1.92 ns)
	'add' operation ('tmp_12_s', matmul.cpp:38) [643]  (1.92 ns)
	'store' operation (matmul.cpp:41) of variable 'tmp_12_s', matmul.cpp:38 on array 'a' [644]  (2.71 ns)

 <State 75>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
