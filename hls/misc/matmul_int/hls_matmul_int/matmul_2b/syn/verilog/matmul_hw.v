// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1265,HLS_SYN_LUT=2180}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A
);

parameter    ap_ST_fsm_state1 = 8'b1;
parameter    ap_ST_fsm_pp0_stage0 = 8'b10;
parameter    ap_ST_fsm_pp0_stage1 = 8'b100;
parameter    ap_ST_fsm_pp0_stage2 = 8'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 8'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 8'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 8'b1000000;
parameter    ap_ST_fsm_state17 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv61_2 = 61'b10;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv32_7 = 32'b111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_252;
reg   [2:0] i_reg_263;
reg   [2:0] j_reg_274;
wire   [0:0] exitcond_flatten_fu_285_p2;
reg   [0:0] exitcond_flatten_reg_1258;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1258;
wire   [4:0] indvar_flatten_next_fu_291_p2;
reg   [4:0] indvar_flatten_next_reg_1262;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] j_mid2_fu_309_p3;
reg   [2:0] j_mid2_reg_1267;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1267;
reg   [2:0] ap_pipeline_reg_pp0_iter2_j_mid2_reg_1267;
wire   [0:0] tmp_mid2_fu_329_p3;
reg   [0:0] tmp_mid2_reg_1277;
wire   [2:0] i2_mid2_v_fu_337_p3;
reg   [2:0] i2_mid2_v_reg_1297;
reg   [2:0] ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1297;
wire   [4:0] tmp_1_fu_345_p3;
reg   [4:0] tmp_1_reg_1303;
wire   [1:0] tmp_fu_363_p1;
reg   [1:0] tmp_reg_1320;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg   [31:0] a_row_0_reg_1336;
reg   [31:0] b_copy_2_3_19_reg_1346;
wire   [0:0] ap_CS_fsm_pp0_stage2;
reg   [31:0] a_row_1_reg_1359;
reg   [31:0] b_copy_3_3_19_reg_1364;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] tmp_5_fu_435_p2;
reg   [0:0] tmp_5_reg_1377;
reg   [31:0] a_row_2_reg_1385;
wire   [0:0] sel_tmp_fu_440_p2;
reg   [0:0] sel_tmp_reg_1390;
wire   [0:0] sel_tmp2_fu_445_p2;
reg   [0:0] sel_tmp2_reg_1400;
wire   [0:0] sel_tmp4_fu_450_p2;
reg   [0:0] sel_tmp4_reg_1413;
wire  signed [31:0] tmp_6_fu_551_p6;
reg  signed [31:0] tmp_6_reg_1429;
wire  signed [31:0] a_row_3_1_fu_608_p3;
reg  signed [31:0] a_row_3_1_reg_1434;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire  signed [31:0] a_row_2_1_fu_615_p3;
wire  signed [31:0] a_row_1_1_fu_621_p3;
reg  signed [31:0] a_row_1_1_reg_1444;
wire  signed [31:0] a_row_0_1_fu_627_p3;
reg  signed [31:0] a_row_0_1_reg_1449;
wire  signed [31:0] tmp_7_fu_733_p6;
reg  signed [31:0] tmp_7_reg_1459;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire  signed [31:0] tmp_3_fu_903_p6;
reg  signed [31:0] tmp_3_reg_1469;
wire   [2:0] j_1_fu_920_p2;
reg   [2:0] j_1_reg_1474;
wire  signed [31:0] tmp_4_fu_1052_p6;
reg  signed [31:0] tmp_4_reg_1479;
wire   [31:0] grp_fu_728_p2;
reg   [31:0] tmp_11_2_reg_1489;
wire   [31:0] grp_fu_916_p2;
reg   [31:0] tmp_11_3_reg_1494;
wire   [31:0] grp_fu_1048_p2;
reg   [31:0] tmp_s_reg_1499;
wire   [31:0] grp_fu_1098_p2;
reg   [31:0] tmp_11_1_reg_1504;
wire   [31:0] tmp_12_3_fu_1110_p2;
reg   [31:0] tmp_12_3_reg_1509;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] indvar_flatten_phi_fu_256_p4;
reg   [2:0] i_phi_fu_267_p4;
reg   [2:0] j_phi_fu_278_p4;
wire   [63:0] tmp_9_fu_353_p1;
wire   [63:0] tmp_8_fu_358_p1;
wire   [63:0] tmp_11_fu_372_p3;
wire   [63:0] tmp_20_cast_fu_390_p1;
wire   [63:0] tmp_13_fu_400_p3;
wire   [63:0] tmp_15_fu_426_p3;
wire   [63:0] tmp_17_fu_633_p3;
wire   [63:0] tmp_19_cast_fu_807_p1;
wire   [63:0] tmp_21_cast_fu_1133_p1;
reg   [31:0] a_row_0_2_fu_92;
reg   [31:0] a_row_1_2_fu_96;
reg   [31:0] a_row_2_2_fu_100;
reg   [31:0] a_row_3_2_fu_104;
reg   [31:0] b_copy_0_3_11_fu_108;
wire   [31:0] b_copy_0_3_18_fu_896_p3;
reg   [31:0] b_copy_0_3_8_fu_112;
wire   [31:0] b_copy_0_3_17_fu_889_p3;
reg   [31:0] b_copy_0_3_12_fu_116;
wire   [31:0] b_copy_0_3_16_fu_882_p3;
reg   [31:0] b_copy_0_3_1_fu_120;
wire   [31:0] b_copy_0_3_3_fu_875_p3;
reg   [31:0] b_copy_1_3_11_fu_124;
wire   [31:0] b_copy_1_3_18_fu_1041_p3;
reg   [31:0] b_copy_1_3_8_fu_128;
wire   [31:0] b_copy_1_3_17_fu_1034_p3;
reg   [31:0] b_copy_1_3_12_fu_132;
wire   [31:0] b_copy_1_3_16_fu_1027_p3;
reg   [31:0] b_copy_1_3_1_fu_136;
wire   [31:0] b_copy_1_3_3_fu_1020_p3;
reg   [31:0] b_copy_2_3_11_fu_140;
wire   [31:0] b_copy_2_3_18_fu_544_p3;
reg   [31:0] b_copy_2_3_8_fu_144;
wire   [31:0] b_copy_2_3_17_fu_537_p3;
reg   [31:0] b_copy_2_3_12_fu_148;
wire   [31:0] b_copy_2_3_16_fu_530_p3;
reg   [31:0] b_copy_2_3_1_fu_152;
wire   [31:0] b_copy_2_3_3_fu_523_p3;
reg   [31:0] b_copy_3_3_11_fu_156;
wire   [31:0] b_copy_3_3_18_fu_721_p3;
reg   [31:0] b_copy_3_3_8_fu_160;
wire   [31:0] b_copy_3_3_17_fu_714_p3;
reg   [31:0] b_copy_3_3_12_fu_164;
wire   [31:0] b_copy_3_3_16_fu_707_p3;
reg   [31:0] b_copy_3_3_1_fu_168;
wire   [31:0] b_copy_3_3_3_fu_700_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [0:0] exitcond_fu_303_p2;
wire   [2:0] i_1_fu_297_p2;
wire   [0:0] tmp_mid1_fu_317_p2;
wire   [0:0] tmp1_fu_323_p2;
wire   [4:0] tmp_10_fu_367_p2;
wire   [3:0] tmp_8_cast5_fu_381_p1;
wire   [3:0] tmp_19_fu_384_p2;
wire   [4:0] tmp_12_fu_395_p2;
wire   [4:0] tmp_14_fu_421_p2;
wire   [31:0] b_copy_2_3_fu_455_p3;
wire   [31:0] b_copy_2_3_4_fu_462_p3;
wire   [31:0] b_copy_2_3_5_fu_478_p3;
wire   [31:0] b_copy_2_3_6_fu_485_p3;
wire   [31:0] b_copy_2_3_9_fu_501_p3;
wire   [31:0] b_copy_2_3_2_fu_470_p3;
wire   [31:0] b_copy_2_3_7_fu_493_p3;
wire   [31:0] b_copy_2_3_14_fu_508_p3;
wire   [31:0] b_copy_2_3_15_fu_516_p3;
wire   [31:0] tmp_6_fu_551_p1;
wire   [31:0] tmp_6_fu_551_p2;
wire   [31:0] tmp_6_fu_551_p3;
wire   [31:0] tmp_6_fu_551_p4;
wire   [31:0] b_copy_3_3_fu_641_p3;
wire   [31:0] b_copy_3_3_4_fu_647_p3;
wire   [31:0] b_copy_3_3_5_fu_661_p3;
wire   [31:0] b_copy_3_3_6_fu_667_p3;
wire   [31:0] b_copy_3_3_9_fu_681_p3;
wire   [31:0] b_copy_3_3_2_fu_654_p3;
wire   [31:0] b_copy_3_3_7_fu_674_p3;
wire   [31:0] b_copy_3_3_14_fu_687_p3;
wire   [31:0] b_copy_3_3_15_fu_694_p3;
wire  signed [31:0] grp_fu_728_p1;
wire   [31:0] tmp_7_fu_733_p1;
wire   [31:0] tmp_7_fu_733_p2;
wire   [31:0] tmp_7_fu_733_p3;
wire   [31:0] tmp_7_fu_733_p4;
wire   [4:0] tmp_8_cast_fu_798_p1;
wire   [4:0] tmp_18_fu_801_p2;
wire   [31:0] b_copy_0_3_fu_812_p3;
wire   [31:0] b_copy_0_3_4_fu_819_p3;
wire   [31:0] b_copy_0_3_5_fu_833_p3;
wire   [31:0] b_copy_0_3_6_fu_840_p3;
wire   [31:0] b_copy_0_3_9_fu_854_p3;
wire   [31:0] b_copy_0_3_2_fu_826_p3;
wire   [31:0] b_copy_0_3_7_fu_847_p3;
wire   [31:0] b_copy_0_3_14_fu_861_p3;
wire   [31:0] b_copy_0_3_15_fu_868_p3;
wire   [31:0] tmp_3_fu_903_p1;
wire   [31:0] tmp_3_fu_903_p2;
wire   [31:0] tmp_3_fu_903_p3;
wire   [31:0] tmp_3_fu_903_p4;
wire   [31:0] b_copy_1_3_fu_957_p3;
wire   [31:0] b_copy_1_3_4_fu_964_p3;
wire   [31:0] b_copy_1_3_5_fu_978_p3;
wire   [31:0] b_copy_1_3_6_fu_985_p3;
wire   [31:0] b_copy_1_3_9_fu_999_p3;
wire   [31:0] b_copy_1_3_2_fu_971_p3;
wire   [31:0] b_copy_1_3_7_fu_992_p3;
wire   [31:0] b_copy_1_3_14_fu_1006_p3;
wire   [31:0] b_copy_1_3_15_fu_1013_p3;
wire   [31:0] tmp_4_fu_1052_p1;
wire   [31:0] tmp_4_fu_1052_p2;
wire   [31:0] tmp_4_fu_1052_p3;
wire   [31:0] tmp_4_fu_1052_p4;
wire   [3:0] grp_fu_1092_p0;
wire   [31:0] tmp8_fu_1102_p2;
wire   [31:0] tmp9_fu_1106_p2;
wire   [3:0] grp_fu_1092_p2;
wire   [5:0] tmp_16_fu_1116_p3;
wire   [5:0] tmp_8_cast6_fu_1124_p1;
wire   [5:0] tmp_20_fu_1127_p2;
wire   [0:0] ap_CS_fsm_state17;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matmul_hw_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_bkb_U1(
    .din1(tmp_6_fu_551_p1),
    .din2(tmp_6_fu_551_p2),
    .din3(tmp_6_fu_551_p3),
    .din4(tmp_6_fu_551_p4),
    .din5(tmp_reg_1320),
    .dout(tmp_6_fu_551_p6)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1429),
    .din1(grp_fu_728_p1),
    .ce(1'b1),
    .dout(grp_fu_728_p2)
);

matmul_hw_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_bkb_U3(
    .din1(tmp_7_fu_733_p1),
    .din2(tmp_7_fu_733_p2),
    .din3(tmp_7_fu_733_p3),
    .din4(tmp_7_fu_733_p4),
    .din5(tmp_reg_1320),
    .dout(tmp_7_fu_733_p6)
);

matmul_hw_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_bkb_U4(
    .din1(tmp_3_fu_903_p1),
    .din2(tmp_3_fu_903_p2),
    .din3(tmp_3_fu_903_p3),
    .din4(tmp_3_fu_903_p4),
    .din5(tmp_reg_1320),
    .dout(tmp_3_fu_903_p6)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_1459),
    .din1(a_row_3_1_reg_1434),
    .ce(1'b1),
    .dout(grp_fu_916_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1469),
    .din1(a_row_0_1_reg_1449),
    .ce(1'b1),
    .dout(grp_fu_1048_p2)
);

matmul_hw_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_bkb_U7(
    .din1(tmp_4_fu_1052_p1),
    .din2(tmp_4_fu_1052_p2),
    .din3(tmp_4_fu_1052_p3),
    .din4(tmp_4_fu_1052_p4),
    .din5(tmp_reg_1320),
    .dout(tmp_4_fu_1052_p6)
);

matmul_hw_urem_4ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
matmul_hw_urem_4ndEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1092_p0),
    .din1(ap_const_lv4_6),
    .ce(1'b1),
    .dout(grp_fu_1092_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1479),
    .din1(a_row_1_1_reg_1444),
    .ce(1'b1),
    .dout(grp_fu_1098_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(exitcond_flatten_fu_285_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & ~(exitcond_flatten_reg_1258 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_263 <= i2_mid2_v_reg_1297;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_263 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_252 <= indvar_flatten_next_reg_1262;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_252 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_274 <= j_1_reg_1474;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_274 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_1_reg_1449 <= a_row_0_1_fu_627_p3;
        a_row_1_1_reg_1444 <= a_row_1_1_fu_621_p3;
        a_row_3_1_reg_1434 <= a_row_3_1_fu_608_p3;
        tmp_7_reg_1459 <= tmp_7_fu_733_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_2_fu_92 <= a_row_0_1_fu_627_p3;
        a_row_1_2_fu_96 <= a_row_1_1_fu_621_p3;
        a_row_2_2_fu_100 <= a_row_2_1_fu_615_p3;
        a_row_3_2_fu_104 <= a_row_3_1_fu_608_p3;
        b_copy_3_3_11_fu_156 <= b_copy_3_3_18_fu_721_p3;
        b_copy_3_3_12_fu_164 <= b_copy_3_3_16_fu_707_p3;
        b_copy_3_3_1_fu_168 <= b_copy_3_3_3_fu_700_p3;
        b_copy_3_3_8_fu_160 <= b_copy_3_3_17_fu_714_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1258 == 1'b0))) begin
        a_row_0_reg_1336 <= a_0_Dout_A;
        b_copy_2_3_19_reg_1346 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_row_1_reg_1359 <= a_0_Dout_A;
        b_copy_3_3_19_reg_1364 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_2_reg_1385 <= a_0_Dout_A;
        b_copy_2_3_11_fu_140 <= b_copy_2_3_18_fu_544_p3;
        b_copy_2_3_12_fu_148 <= b_copy_2_3_16_fu_530_p3;
        b_copy_2_3_1_fu_152 <= b_copy_2_3_3_fu_523_p3;
        b_copy_2_3_8_fu_144 <= b_copy_2_3_17_fu_537_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258 <= exitcond_flatten_reg_1258;
        ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1297 <= i2_mid2_v_reg_1297;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1267 <= j_mid2_reg_1267;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1258 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258;
        ap_pipeline_reg_pp0_iter2_j_mid2_reg_1267 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1267;
        exitcond_flatten_reg_1258 <= exitcond_flatten_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_0_3_11_fu_108 <= b_copy_0_3_18_fu_896_p3;
        b_copy_0_3_12_fu_116 <= b_copy_0_3_16_fu_882_p3;
        b_copy_0_3_1_fu_120 <= b_copy_0_3_3_fu_875_p3;
        b_copy_0_3_8_fu_112 <= b_copy_0_3_17_fu_889_p3;
        j_1_reg_1474 <= j_1_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_1_3_11_fu_124 <= b_copy_1_3_18_fu_1041_p3;
        b_copy_1_3_12_fu_132 <= b_copy_1_3_16_fu_1027_p3;
        b_copy_1_3_1_fu_136 <= b_copy_1_3_3_fu_1020_p3;
        b_copy_1_3_8_fu_128 <= b_copy_1_3_17_fu_1034_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_285_p2 == 1'b0))) begin
        i2_mid2_v_reg_1297 <= i2_mid2_v_fu_337_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1262 <= indvar_flatten_next_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_285_p2 == 1'b0))) begin
        j_mid2_reg_1267 <= j_mid2_fu_309_p3;
        tmp_1_reg_1303[4 : 2] <= tmp_1_fu_345_p3[4 : 2];
        tmp_mid2_reg_1277 <= tmp_mid2_fu_329_p3;
        tmp_reg_1320 <= tmp_fu_363_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sel_tmp2_reg_1400 <= sel_tmp2_fu_445_p2;
        sel_tmp4_reg_1413 <= sel_tmp4_fu_450_p2;
        sel_tmp_reg_1390 <= sel_tmp_fu_440_p2;
        tmp_5_reg_1377 <= tmp_5_fu_435_p2;
        tmp_6_reg_1429 <= tmp_6_fu_551_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_11_1_reg_1504 <= grp_fu_1098_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_11_2_reg_1489 <= grp_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_11_3_reg_1494 <= grp_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_12_3_reg_1509 <= tmp_12_3_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_3_reg_1469 <= tmp_3_fu_903_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_4_reg_1479 <= tmp_4_fu_1052_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1258 == 1'b0))) begin
        tmp_s_reg_1499 <= grp_fu_1048_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_19_cast_fu_807_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_17_fu_633_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_15_fu_426_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_13_fu_400_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_11_fu_372_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_9_fu_353_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_Addr_A_orig = tmp_21_cast_fu_1133_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_1_Addr_A_orig = tmp_20_cast_fu_390_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_1_Addr_A_orig = tmp_8_fu_358_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_267_p4 = i2_mid2_v_reg_1297;
    end else begin
        i_phi_fu_267_p4 = i_reg_263;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_256_p4 = indvar_flatten_next_reg_1262;
    end else begin
        indvar_flatten_phi_fu_256_p4 = indvar_flatten_reg_252;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1258 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_278_p4 = j_1_reg_1474;
    end else begin
        j_phi_fu_278_p4 = j_reg_274;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_285_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = tmp_12_3_reg_1509;

assign a_1_Rst_A = ap_rst;

assign a_row_0_1_fu_627_p3 = ((tmp_5_reg_1377[0:0] === 1'b1) ? a_row_0_reg_1336 : a_row_0_2_fu_92);

assign a_row_1_1_fu_621_p3 = ((tmp_5_reg_1377[0:0] === 1'b1) ? a_row_1_reg_1359 : a_row_1_2_fu_96);

assign a_row_2_1_fu_615_p3 = ((tmp_5_reg_1377[0:0] === 1'b1) ? a_row_2_reg_1385 : a_row_2_2_fu_100);

assign a_row_3_1_fu_608_p3 = ((tmp_5_reg_1377[0:0] === 1'b1) ? a_0_Dout_A : a_row_3_2_fu_104);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_7];

assign b_copy_0_3_14_fu_861_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_0_3_8_fu_112 : b_copy_0_3_9_fu_854_p3);

assign b_copy_0_3_15_fu_868_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_11_fu_108);

assign b_copy_0_3_16_fu_882_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_7_fu_847_p3 : b_copy_0_3_12_fu_116);

assign b_copy_0_3_17_fu_889_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_14_fu_861_p3 : b_copy_0_3_8_fu_112);

assign b_copy_0_3_18_fu_896_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_15_fu_868_p3 : b_copy_0_3_11_fu_108);

assign b_copy_0_3_2_fu_826_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : b_copy_0_3_4_fu_819_p3);

assign b_copy_0_3_3_fu_875_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_2_fu_826_p3 : b_copy_0_3_1_fu_120);

assign b_copy_0_3_4_fu_819_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : b_copy_0_3_fu_812_p3);

assign b_copy_0_3_5_fu_833_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_12_fu_116);

assign b_copy_0_3_6_fu_840_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_0_3_12_fu_116 : b_copy_0_3_5_fu_833_p3);

assign b_copy_0_3_7_fu_847_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_0_3_12_fu_116 : b_copy_0_3_6_fu_840_p3);

assign b_copy_0_3_9_fu_854_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_8_fu_112);

assign b_copy_0_3_fu_812_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : a_0_Dout_A);

assign b_copy_1_3_14_fu_1006_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_1_3_8_fu_128 : b_copy_1_3_9_fu_999_p3);

assign b_copy_1_3_15_fu_1013_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_11_fu_124);

assign b_copy_1_3_16_fu_1027_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_7_fu_992_p3 : b_copy_1_3_12_fu_132);

assign b_copy_1_3_17_fu_1034_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_14_fu_1006_p3 : b_copy_1_3_8_fu_128);

assign b_copy_1_3_18_fu_1041_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_15_fu_1013_p3 : b_copy_1_3_11_fu_124);

assign b_copy_1_3_2_fu_971_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : b_copy_1_3_4_fu_964_p3);

assign b_copy_1_3_3_fu_1020_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_2_fu_971_p3 : b_copy_1_3_1_fu_136);

assign b_copy_1_3_4_fu_964_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : b_copy_1_3_fu_957_p3);

assign b_copy_1_3_5_fu_978_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_12_fu_132);

assign b_copy_1_3_6_fu_985_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_1_3_12_fu_132 : b_copy_1_3_5_fu_978_p3);

assign b_copy_1_3_7_fu_992_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_1_3_12_fu_132 : b_copy_1_3_6_fu_985_p3);

assign b_copy_1_3_9_fu_999_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_8_fu_128);

assign b_copy_1_3_fu_957_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : a_0_Dout_A);

assign b_copy_2_3_14_fu_508_p3 = ((sel_tmp4_fu_450_p2[0:0] === 1'b1) ? b_copy_2_3_8_fu_144 : b_copy_2_3_9_fu_501_p3);

assign b_copy_2_3_15_fu_516_p3 = ((sel_tmp4_fu_450_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1346 : b_copy_2_3_11_fu_140);

assign b_copy_2_3_16_fu_530_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_7_fu_493_p3 : b_copy_2_3_12_fu_148);

assign b_copy_2_3_17_fu_537_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_14_fu_508_p3 : b_copy_2_3_8_fu_144);

assign b_copy_2_3_18_fu_544_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_15_fu_516_p3 : b_copy_2_3_11_fu_140);

assign b_copy_2_3_2_fu_470_p3 = ((sel_tmp4_fu_450_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_copy_2_3_4_fu_462_p3);

assign b_copy_2_3_3_fu_523_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_2_fu_470_p3 : b_copy_2_3_1_fu_152);

assign b_copy_2_3_4_fu_462_p3 = ((sel_tmp2_fu_445_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_copy_2_3_fu_455_p3);

assign b_copy_2_3_5_fu_478_p3 = ((sel_tmp_fu_440_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1346 : b_copy_2_3_12_fu_148);

assign b_copy_2_3_6_fu_485_p3 = ((sel_tmp2_fu_445_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_148 : b_copy_2_3_5_fu_478_p3);

assign b_copy_2_3_7_fu_493_p3 = ((sel_tmp4_fu_450_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_148 : b_copy_2_3_6_fu_485_p3);

assign b_copy_2_3_9_fu_501_p3 = ((sel_tmp2_fu_445_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1346 : b_copy_2_3_8_fu_144);

assign b_copy_2_3_fu_455_p3 = ((sel_tmp_fu_440_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_copy_2_3_19_reg_1346);

assign b_copy_3_3_14_fu_687_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_3_3_8_fu_160 : b_copy_3_3_9_fu_681_p3);

assign b_copy_3_3_15_fu_694_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_3_3_19_reg_1364 : b_copy_3_3_11_fu_156);

assign b_copy_3_3_16_fu_707_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_7_fu_674_p3 : b_copy_3_3_12_fu_164);

assign b_copy_3_3_17_fu_714_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_14_fu_687_p3 : b_copy_3_3_8_fu_160);

assign b_copy_3_3_18_fu_721_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_15_fu_694_p3 : b_copy_3_3_11_fu_156);

assign b_copy_3_3_2_fu_654_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_copy_3_3_4_fu_647_p3);

assign b_copy_3_3_3_fu_700_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_2_fu_654_p3 : b_copy_3_3_1_fu_168);

assign b_copy_3_3_4_fu_647_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_copy_3_3_fu_641_p3);

assign b_copy_3_3_5_fu_661_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? b_copy_3_3_19_reg_1364 : b_copy_3_3_12_fu_164);

assign b_copy_3_3_6_fu_667_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_3_3_12_fu_164 : b_copy_3_3_5_fu_661_p3);

assign b_copy_3_3_7_fu_674_p3 = ((sel_tmp4_reg_1413[0:0] === 1'b1) ? b_copy_3_3_12_fu_164 : b_copy_3_3_6_fu_667_p3);

assign b_copy_3_3_9_fu_681_p3 = ((sel_tmp2_reg_1400[0:0] === 1'b1) ? b_copy_3_3_19_reg_1364 : b_copy_3_3_8_fu_160);

assign b_copy_3_3_fu_641_p3 = ((sel_tmp_reg_1390[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_copy_3_3_19_reg_1364);

assign exitcond_flatten_fu_285_p2 = ((indvar_flatten_phi_fu_256_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_303_p2 = ((j_phi_fu_278_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_1092_p0 = {{1'b1}, {ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1297}};

assign grp_fu_728_p1 = ((tmp_5_reg_1377[0:0] === 1'b1) ? a_row_2_reg_1385 : a_row_2_2_fu_100);

assign i2_mid2_v_fu_337_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? i_1_fu_297_p2 : i_phi_fu_267_p4);

assign i_1_fu_297_p2 = (ap_const_lv3_1 + i_phi_fu_267_p4);

assign indvar_flatten_next_fu_291_p2 = (indvar_flatten_phi_fu_256_p4 + ap_const_lv5_1);

assign j_1_fu_920_p2 = (ap_const_lv3_1 + j_mid2_reg_1267);

assign j_mid2_fu_309_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_278_p4);

assign sel_tmp2_fu_445_p2 = ((tmp_reg_1320 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_450_p2 = ((tmp_reg_1320 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_440_p2 = ((tmp_reg_1320 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_323_p2 = ((i_phi_fu_267_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp8_fu_1102_p2 = (tmp_11_1_reg_1504 + tmp_s_reg_1499);

assign tmp9_fu_1106_p2 = (tmp_11_3_reg_1494 + tmp_11_2_reg_1489);

assign tmp_10_fu_367_p2 = (tmp_1_reg_1303 | ap_const_lv5_1);

assign tmp_11_fu_372_p3 = {{ap_const_lv59_0}, {tmp_10_fu_367_p2}};

assign tmp_12_3_fu_1110_p2 = (tmp8_fu_1102_p2 + tmp9_fu_1106_p2);

assign tmp_12_fu_395_p2 = (tmp_1_reg_1303 | ap_const_lv5_2);

assign tmp_13_fu_400_p3 = {{ap_const_lv59_0}, {tmp_12_fu_395_p2}};

assign tmp_14_fu_421_p2 = (tmp_1_reg_1303 | ap_const_lv5_3);

assign tmp_15_fu_426_p3 = {{ap_const_lv59_0}, {tmp_14_fu_421_p2}};

assign tmp_16_fu_1116_p3 = {{grp_fu_1092_p2}, {ap_const_lv2_0}};

assign tmp_17_fu_633_p3 = {{ap_const_lv61_2}, {j_mid2_reg_1267}};

assign tmp_18_fu_801_p2 = ($signed(ap_const_lv5_14) + $signed(tmp_8_cast_fu_798_p1));

assign tmp_19_cast_fu_807_p1 = tmp_18_fu_801_p2;

assign tmp_19_fu_384_p2 = (ap_const_lv4_4 + tmp_8_cast5_fu_381_p1);

assign tmp_1_fu_345_p3 = {{i2_mid2_v_fu_337_p3}, {ap_const_lv2_0}};

assign tmp_20_cast_fu_390_p1 = tmp_19_fu_384_p2;

assign tmp_20_fu_1127_p2 = (tmp_16_fu_1116_p3 + tmp_8_cast6_fu_1124_p1);

assign tmp_21_cast_fu_1133_p1 = tmp_20_fu_1127_p2;

assign tmp_3_fu_903_p1 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_15_fu_868_p3 : b_copy_0_3_11_fu_108);

assign tmp_3_fu_903_p2 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_14_fu_861_p3 : b_copy_0_3_8_fu_112);

assign tmp_3_fu_903_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_7_fu_847_p3 : b_copy_0_3_12_fu_116);

assign tmp_3_fu_903_p4 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_0_3_2_fu_826_p3 : b_copy_0_3_1_fu_120);

assign tmp_4_fu_1052_p1 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_15_fu_1013_p3 : b_copy_1_3_11_fu_124);

assign tmp_4_fu_1052_p2 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_14_fu_1006_p3 : b_copy_1_3_8_fu_128);

assign tmp_4_fu_1052_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_7_fu_992_p3 : b_copy_1_3_12_fu_132);

assign tmp_4_fu_1052_p4 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_1_3_2_fu_971_p3 : b_copy_1_3_1_fu_136);

assign tmp_5_fu_435_p2 = ((j_mid2_reg_1267 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_551_p1 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_15_fu_516_p3 : b_copy_2_3_11_fu_140);

assign tmp_6_fu_551_p2 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_14_fu_508_p3 : b_copy_2_3_8_fu_144);

assign tmp_6_fu_551_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_7_fu_493_p3 : b_copy_2_3_12_fu_148);

assign tmp_6_fu_551_p4 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_2_3_2_fu_470_p3 : b_copy_2_3_1_fu_152);

assign tmp_7_fu_733_p1 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_15_fu_694_p3 : b_copy_3_3_11_fu_156);

assign tmp_7_fu_733_p2 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_14_fu_687_p3 : b_copy_3_3_8_fu_160);

assign tmp_7_fu_733_p3 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_7_fu_674_p3 : b_copy_3_3_12_fu_164);

assign tmp_7_fu_733_p4 = ((tmp_mid2_reg_1277[0:0] === 1'b1) ? b_copy_3_3_2_fu_654_p3 : b_copy_3_3_1_fu_168);

assign tmp_8_cast5_fu_381_p1 = j_mid2_reg_1267;

assign tmp_8_cast6_fu_1124_p1 = ap_pipeline_reg_pp0_iter2_j_mid2_reg_1267;

assign tmp_8_cast_fu_798_p1 = j_mid2_reg_1267;

assign tmp_8_fu_358_p1 = j_mid2_fu_309_p3;

assign tmp_9_fu_353_p1 = tmp_1_fu_345_p3;

assign tmp_fu_363_p1 = j_mid2_fu_309_p3[1:0];

assign tmp_mid1_fu_317_p2 = ((i_1_fu_297_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_329_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? tmp_mid1_fu_317_p2 : tmp1_fu_323_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1303[1:0] <= 2'b00;
end

endmodule //matmul_hw
