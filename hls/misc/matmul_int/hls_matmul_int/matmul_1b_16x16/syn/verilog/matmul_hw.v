// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=10498,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=3037,HLS_SYN_LUT=1763}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A
);

parameter    ap_ST_fsm_state1 = 43'b1;
parameter    ap_ST_fsm_state2 = 43'b10;
parameter    ap_ST_fsm_state3 = 43'b100;
parameter    ap_ST_fsm_state4 = 43'b1000;
parameter    ap_ST_fsm_state5 = 43'b10000;
parameter    ap_ST_fsm_state6 = 43'b100000;
parameter    ap_ST_fsm_state7 = 43'b1000000;
parameter    ap_ST_fsm_state8 = 43'b10000000;
parameter    ap_ST_fsm_state9 = 43'b100000000;
parameter    ap_ST_fsm_state10 = 43'b1000000000;
parameter    ap_ST_fsm_state11 = 43'b10000000000;
parameter    ap_ST_fsm_state12 = 43'b100000000000;
parameter    ap_ST_fsm_state13 = 43'b1000000000000;
parameter    ap_ST_fsm_state14 = 43'b10000000000000;
parameter    ap_ST_fsm_state15 = 43'b100000000000000;
parameter    ap_ST_fsm_state16 = 43'b1000000000000000;
parameter    ap_ST_fsm_state17 = 43'b10000000000000000;
parameter    ap_ST_fsm_state18 = 43'b100000000000000000;
parameter    ap_ST_fsm_state19 = 43'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 43'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 43'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 43'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 43'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 43'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 43'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 43'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 43'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 43'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 43'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 43'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 43'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 43'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 43'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 43'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 43'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 43'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 43'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 43'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 43'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 43'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 43'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 43'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 43'b1000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv59_8 = 59'b1000;
parameter    ap_const_lv9_110 = 9'b100010000;
parameter    ap_const_lv59_9 = 59'b1001;
parameter    ap_const_lv9_130 = 9'b100110000;
parameter    ap_const_lv59_A = 59'b1010;
parameter    ap_const_lv9_150 = 9'b101010000;
parameter    ap_const_lv59_B = 59'b1011;
parameter    ap_const_lv9_170 = 9'b101110000;
parameter    ap_const_lv59_C = 59'b1100;
parameter    ap_const_lv8_90 = 8'b10010000;
parameter    ap_const_lv59_D = 59'b1101;
parameter    ap_const_lv8_B0 = 8'b10110000;
parameter    ap_const_lv59_E = 59'b1110;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv59_F = 59'b1111;
parameter    ap_const_lv10_1F0 = 10'b111110000;
parameter    ap_const_lv55_0 = 55'b0000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_2 = 9'b10;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv9_4 = 9'b100;
parameter    ap_const_lv9_5 = 9'b101;
parameter    ap_const_lv9_6 = 9'b110;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv9_8 = 9'b1000;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv9_A = 9'b1010;
parameter    ap_const_lv9_B = 9'b1011;
parameter    ap_const_lv9_C = 9'b1100;
parameter    ap_const_lv9_D = 9'b1101;
parameter    ap_const_lv9_E = 9'b1110;
parameter    ap_const_lv9_F = 9'b1111;
parameter    ap_const_lv32_2A = 32'b101010;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] reg_863;
wire   [0:0] ap_CS_fsm_state3;
reg   [0:0] tmp_mid2_reg_1880;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] ap_CS_fsm_state21;
reg   [0:0] tmp_5_reg_2058;
wire   [0:0] ap_CS_fsm_state22;
wire   [0:0] ap_CS_fsm_state23;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] ap_CS_fsm_state26;
wire   [0:0] ap_CS_fsm_state27;
wire   [0:0] ap_CS_fsm_state28;
wire   [0:0] ap_CS_fsm_state29;
wire   [0:0] ap_CS_fsm_state30;
wire   [0:0] ap_CS_fsm_state31;
wire   [0:0] ap_CS_fsm_state32;
wire   [0:0] ap_CS_fsm_state33;
wire   [0:0] exitcond_flatten_fu_868_p2;
reg   [0:0] exitcond_flatten_reg_1851;
wire   [0:0] ap_CS_fsm_state2;
wire   [8:0] indvar_flatten_next_fu_874_p2;
reg   [8:0] indvar_flatten_next_reg_1855;
wire   [4:0] j_mid2_fu_892_p3;
reg   [4:0] j_mid2_reg_1860;
wire   [0:0] tmp_mid2_fu_912_p3;
wire   [4:0] tmp_2_mid2_v_v_v_fu_920_p3;
reg   [4:0] tmp_2_mid2_v_v_v_reg_1884;
wire   [8:0] tmp_8_cast_fu_937_p1;
reg   [8:0] tmp_8_cast_reg_1896;
wire   [0:0] ap_CS_fsm_state4;
reg   [31:0] a_load_1_reg_1913;
wire   [63:0] tmp_8_fu_959_p1;
reg   [63:0] tmp_8_reg_1918;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] ap_CS_fsm_state10;
wire   [7:0] tmp_8_cast_cast_fu_1019_p1;
reg   [7:0] tmp_8_cast_cast_reg_1965;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state17;
wire   [8:0] tmp_3_fu_1107_p3;
reg   [8:0] tmp_3_reg_2005;
wire   [0:0] ap_CS_fsm_state18;
wire   [63:0] tmp_7_fu_1119_p1;
reg   [63:0] tmp_7_reg_2029;
wire   [0:0] tmp_5_fu_1137_p2;
wire   [31:0] b_copy_0_q0;
reg  signed [31:0] b_copy_0_load_reg_2078;
wire  signed [31:0] a_row_0_1_fu_1159_p3;
wire   [31:0] b_copy_1_q0;
reg  signed [31:0] b_copy_1_load_reg_2098;
wire  signed [31:0] a_row_1_1_fu_1193_p3;
wire   [31:0] b_copy_2_q0;
reg  signed [31:0] b_copy_2_load_reg_2118;
wire  signed [31:0] a_row_2_1_fu_1227_p3;
wire   [31:0] b_copy_3_q0;
reg  signed [31:0] b_copy_3_load_reg_2138;
wire  signed [31:0] a_row_3_1_fu_1261_p3;
wire   [31:0] b_copy_4_q0;
reg  signed [31:0] b_copy_4_load_reg_2158;
wire  signed [31:0] a_row_4_1_fu_1295_p3;
wire   [31:0] b_copy_5_q0;
reg  signed [31:0] b_copy_5_load_reg_2178;
wire  signed [31:0] a_row_5_1_fu_1329_p3;
wire   [31:0] grp_fu_1171_p2;
reg   [31:0] tmp_s_reg_2198;
wire   [31:0] b_copy_6_q0;
reg  signed [31:0] b_copy_6_load_reg_2203;
wire  signed [31:0] a_row_6_1_fu_1363_p3;
wire   [31:0] grp_fu_1205_p2;
reg   [31:0] tmp_11_1_reg_2223;
wire   [31:0] b_copy_7_q0;
reg  signed [31:0] b_copy_7_load_reg_2228;
wire  signed [31:0] a_row_7_1_fu_1397_p3;
wire   [31:0] grp_fu_1239_p2;
reg   [31:0] tmp_11_2_reg_2248;
wire   [31:0] b_copy_8_q0;
reg  signed [31:0] b_copy_8_load_reg_2253;
wire   [31:0] tmp3_fu_1414_p2;
reg   [31:0] tmp3_reg_2263;
wire  signed [31:0] a_row_8_1_fu_1435_p3;
wire   [31:0] grp_fu_1273_p2;
reg   [31:0] tmp_11_3_reg_2278;
wire   [31:0] b_copy_9_q0;
reg  signed [31:0] b_copy_9_load_reg_2283;
wire  signed [31:0] a_row_9_1_fu_1469_p3;
wire   [31:0] grp_fu_1307_p2;
reg   [31:0] tmp_11_4_reg_2303;
wire   [31:0] b_copy_10_q0;
reg  signed [31:0] b_copy_10_load_reg_2308;
wire   [31:0] tmp2_fu_1490_p2;
reg   [31:0] tmp2_reg_2318;
wire  signed [31:0] a_row_10_1_fu_1512_p3;
wire   [31:0] grp_fu_1341_p2;
reg   [31:0] tmp_11_5_reg_2333;
wire   [31:0] b_copy_11_q0;
reg  signed [31:0] b_copy_11_load_reg_2338;
wire  signed [31:0] a_row_11_1_fu_1546_p3;
wire   [31:0] grp_fu_1375_p2;
reg   [31:0] tmp_11_6_reg_2358;
wire   [31:0] b_copy_12_q0;
reg  signed [31:0] b_copy_12_load_reg_2363;
wire   [31:0] tmp6_fu_1563_p2;
reg   [31:0] tmp6_reg_2373;
wire  signed [31:0] a_row_12_1_fu_1584_p3;
wire   [31:0] grp_fu_1409_p2;
reg   [31:0] tmp_11_7_reg_2388;
wire   [31:0] b_copy_13_q0;
reg  signed [31:0] b_copy_13_load_reg_2393;
wire  signed [31:0] a_row_13_1_fu_1618_p3;
wire   [31:0] grp_fu_1447_p2;
reg   [31:0] tmp_11_8_reg_2418;
wire   [31:0] b_copy_14_q0;
reg  signed [31:0] b_copy_14_load_reg_2423;
wire   [31:0] b_copy_15_q0;
reg  signed [31:0] b_copy_15_load_reg_2428;
wire   [31:0] tmp1_fu_1644_p2;
reg   [31:0] tmp1_reg_2433;
wire  signed [31:0] a_row_15_1_fu_1668_p3;
reg  signed [31:0] a_row_15_1_reg_2438;
wire   [0:0] ap_CS_fsm_state34;
wire  signed [31:0] a_row_14_1_fu_1675_p3;
wire   [10:0] tmp_54_fu_1695_p2;
reg   [10:0] tmp_54_reg_2448;
wire   [31:0] grp_fu_1481_p2;
reg   [31:0] tmp_11_9_reg_2453;
wire   [4:0] j_1_fu_1706_p2;
reg   [4:0] j_1_reg_2458;
wire   [31:0] grp_fu_1524_p2;
reg   [31:0] tmp_11_s_reg_2463;
wire   [0:0] ap_CS_fsm_state35;
wire   [31:0] tmp10_fu_1715_p2;
reg   [31:0] tmp10_reg_2468;
wire   [31:0] grp_fu_1558_p2;
reg   [31:0] tmp_11_10_reg_2473;
wire   [0:0] ap_CS_fsm_state36;
wire   [31:0] grp_fu_1596_p2;
reg   [31:0] tmp_11_11_reg_2478;
wire   [0:0] ap_CS_fsm_state37;
wire   [31:0] tmp9_fu_1723_p2;
reg   [31:0] tmp9_reg_2483;
wire   [31:0] grp_fu_1630_p2;
reg   [31:0] tmp_11_12_reg_2488;
wire   [0:0] ap_CS_fsm_state38;
wire   [31:0] grp_fu_1701_p2;
reg   [31:0] tmp_11_13_reg_2493;
wire   [0:0] ap_CS_fsm_state39;
wire   [31:0] tmp13_fu_1728_p2;
reg   [31:0] tmp13_reg_2498;
wire   [31:0] grp_fu_1711_p2;
reg   [31:0] tmp_11_14_reg_2503;
wire   [0:0] ap_CS_fsm_state40;
wire   [31:0] tmp_12_s_fu_1746_p2;
reg   [31:0] tmp_12_s_reg_2508;
wire   [0:0] ap_CS_fsm_state41;
reg   [3:0] b_copy_0_address0;
reg    b_copy_0_ce0;
reg    b_copy_0_we0;
reg   [3:0] b_copy_1_address0;
reg    b_copy_1_ce0;
reg    b_copy_1_we0;
reg   [3:0] b_copy_2_address0;
reg    b_copy_2_ce0;
reg    b_copy_2_we0;
reg   [3:0] b_copy_3_address0;
reg    b_copy_3_ce0;
reg    b_copy_3_we0;
reg   [3:0] b_copy_4_address0;
reg    b_copy_4_ce0;
reg    b_copy_4_we0;
reg   [3:0] b_copy_5_address0;
reg    b_copy_5_ce0;
reg    b_copy_5_we0;
reg   [3:0] b_copy_6_address0;
reg    b_copy_6_ce0;
reg    b_copy_6_we0;
reg   [3:0] b_copy_7_address0;
reg    b_copy_7_ce0;
reg    b_copy_7_we0;
reg   [3:0] b_copy_8_address0;
reg    b_copy_8_ce0;
reg    b_copy_8_we0;
reg   [3:0] b_copy_9_address0;
reg    b_copy_9_ce0;
reg    b_copy_9_we0;
reg   [3:0] b_copy_10_address0;
reg    b_copy_10_ce0;
reg    b_copy_10_we0;
reg   [3:0] b_copy_11_address0;
reg    b_copy_11_ce0;
reg    b_copy_11_we0;
reg   [3:0] b_copy_12_address0;
reg    b_copy_12_ce0;
reg    b_copy_12_we0;
reg   [3:0] b_copy_13_address0;
reg    b_copy_13_ce0;
reg    b_copy_13_we0;
reg   [3:0] b_copy_14_address0;
reg    b_copy_14_ce0;
reg    b_copy_14_we0;
reg   [3:0] b_copy_15_address0;
reg    b_copy_15_ce0;
reg    b_copy_15_we0;
reg   [8:0] indvar_flatten_reg_830;
wire   [0:0] ap_CS_fsm_state42;
reg   [4:0] i_reg_841;
reg   [4:0] j_reg_852;
wire   [63:0] tmp_38_fu_928_p3;
wire   [63:0] tmp_40_cast_fu_946_p1;
wire   [63:0] tmp_40_fu_951_p3;
wire   [63:0] tmp_42_cast_fu_970_p1;
wire   [63:0] tmp_42_fu_975_p3;
wire   [63:0] tmp_44_cast_fu_988_p1;
wire   [63:0] tmp_44_fu_993_p3;
wire   [63:0] tmp_46_cast_fu_1006_p1;
wire   [63:0] tmp_46_fu_1011_p3;
wire   [63:0] tmp_48_cast_fu_1032_p1;
wire   [63:0] tmp_48_fu_1037_p3;
wire   [63:0] tmp_50_cast_fu_1054_p1;
wire   [63:0] tmp_50_fu_1059_p3;
wire   [63:0] tmp_52_cast_fu_1080_p1;
wire   [63:0] tmp_52_fu_1085_p3;
wire   [63:0] tmp_54_cast_fu_1102_p1;
wire   [63:0] tmp_6_fu_1114_p1;
wire   [63:0] tmp_2_fu_1128_p3;
wire   [63:0] tmp_11_fu_1150_p3;
wire   [63:0] tmp_13_fu_1184_p3;
wire   [63:0] tmp_15_fu_1218_p3;
wire   [63:0] tmp_17_fu_1252_p3;
wire   [63:0] tmp_19_fu_1286_p3;
wire   [63:0] tmp_21_fu_1320_p3;
wire   [63:0] tmp_23_fu_1354_p3;
wire   [63:0] tmp_25_fu_1388_p3;
wire   [63:0] tmp_27_fu_1426_p3;
wire   [63:0] tmp_29_fu_1460_p3;
wire   [63:0] tmp_31_fu_1503_p3;
wire   [63:0] tmp_33_fu_1537_p3;
wire   [63:0] tmp_35_fu_1575_p3;
wire   [63:0] tmp_37_fu_1609_p3;
wire   [63:0] tmp_55_cast_fu_1751_p1;
reg   [31:0] a_row_0_2_fu_132;
reg   [31:0] a_row_1_2_fu_136;
reg   [31:0] a_row_2_2_fu_140;
reg   [31:0] a_row_3_2_fu_144;
reg   [31:0] a_row_4_2_fu_148;
reg   [31:0] a_row_5_2_fu_152;
reg   [31:0] a_row_6_2_fu_156;
reg   [31:0] a_row_7_2_fu_160;
reg   [31:0] a_row_8_2_fu_164;
reg   [31:0] a_row_9_2_fu_168;
reg   [31:0] a_row_10_2_fu_172;
reg   [31:0] a_row_11_2_fu_176;
reg   [31:0] a_row_12_2_fu_180;
reg   [31:0] a_row_13_2_fu_184;
reg   [31:0] a_row_14_2_fu_188;
reg   [31:0] a_row_15_2_fu_192;
reg   [31:0] a_Addr_A_orig;
wire   [0:0] exitcond_fu_886_p2;
wire   [4:0] i_1_fu_880_p2;
wire   [0:0] tmp_mid1_fu_900_p2;
wire   [0:0] tmp_fu_906_p2;
wire   [8:0] tmp_39_fu_940_p2;
wire   [8:0] tmp_41_fu_965_p2;
wire   [8:0] tmp_43_fu_983_p2;
wire   [8:0] tmp_45_fu_1001_p2;
wire   [7:0] tmp_47_fu_1022_p2;
wire  signed [8:0] tmp_48_cast1_fu_1028_p1;
wire   [7:0] tmp_49_fu_1045_p2;
wire  signed [8:0] tmp_50_cast1_fu_1050_p1;
wire   [6:0] tmp_8_cast_cast1_fu_1067_p1;
wire   [6:0] tmp_51_fu_1070_p2;
wire  signed [8:0] tmp_52_cast1_fu_1076_p1;
wire   [9:0] tmp_8_cast1_fu_1093_p1;
wire   [9:0] tmp_53_fu_1096_p2;
wire   [8:0] tmp_9_fu_1123_p2;
wire   [8:0] tmp_10_fu_1145_p2;
wire  signed [31:0] grp_fu_1171_p0;
wire   [8:0] tmp_12_fu_1179_p2;
wire  signed [31:0] grp_fu_1205_p0;
wire   [8:0] tmp_14_fu_1213_p2;
wire  signed [31:0] grp_fu_1239_p0;
wire   [8:0] tmp_16_fu_1247_p2;
wire  signed [31:0] grp_fu_1273_p0;
wire   [8:0] tmp_18_fu_1281_p2;
wire  signed [31:0] grp_fu_1307_p0;
wire   [8:0] tmp_20_fu_1315_p2;
wire  signed [31:0] grp_fu_1341_p0;
wire   [8:0] tmp_22_fu_1349_p2;
wire  signed [31:0] grp_fu_1375_p0;
wire   [8:0] tmp_24_fu_1383_p2;
wire  signed [31:0] grp_fu_1409_p0;
wire   [8:0] tmp_26_fu_1421_p2;
wire  signed [31:0] grp_fu_1447_p0;
wire   [8:0] tmp_28_fu_1455_p2;
wire  signed [31:0] grp_fu_1481_p0;
wire   [31:0] tmp4_fu_1486_p2;
wire   [8:0] tmp_30_fu_1498_p2;
wire  signed [31:0] grp_fu_1524_p0;
wire   [8:0] tmp_32_fu_1532_p2;
wire  signed [31:0] grp_fu_1558_p0;
wire   [8:0] tmp_34_fu_1570_p2;
wire  signed [31:0] grp_fu_1596_p0;
wire   [8:0] tmp_36_fu_1604_p2;
wire  signed [31:0] grp_fu_1630_p0;
wire   [31:0] tmp7_fu_1635_p2;
wire   [31:0] tmp5_fu_1639_p2;
wire   [9:0] tmp_1_fu_1655_p4;
wire   [10:0] tmp_2_cast_fu_1664_p1;
wire   [10:0] tmp_7_cast_fu_1692_p1;
wire  signed [31:0] grp_fu_1701_p0;
wire   [31:0] tmp11_fu_1719_p2;
wire   [31:0] tmp14_fu_1732_p2;
wire   [31:0] tmp12_fu_1736_p2;
wire   [31:0] tmp8_fu_1741_p2;
wire   [0:0] ap_CS_fsm_state43;
reg   [42:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'b1;
end

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_0_address0),
    .ce0(b_copy_0_ce0),
    .we0(b_copy_0_we0),
    .d0(reg_863),
    .q0(b_copy_0_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_1_address0),
    .ce0(b_copy_1_ce0),
    .we0(b_copy_1_we0),
    .d0(a_load_1_reg_1913),
    .q0(b_copy_1_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_2_address0),
    .ce0(b_copy_2_ce0),
    .we0(b_copy_2_we0),
    .d0(a_Dout_A),
    .q0(b_copy_2_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_3_address0),
    .ce0(b_copy_3_ce0),
    .we0(b_copy_3_we0),
    .d0(a_Dout_A),
    .q0(b_copy_3_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_4_address0),
    .ce0(b_copy_4_ce0),
    .we0(b_copy_4_we0),
    .d0(a_Dout_A),
    .q0(b_copy_4_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_5_address0),
    .ce0(b_copy_5_ce0),
    .we0(b_copy_5_we0),
    .d0(a_Dout_A),
    .q0(b_copy_5_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_6_address0),
    .ce0(b_copy_6_ce0),
    .we0(b_copy_6_we0),
    .d0(a_Dout_A),
    .q0(b_copy_6_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_7_address0),
    .ce0(b_copy_7_ce0),
    .we0(b_copy_7_we0),
    .d0(a_Dout_A),
    .q0(b_copy_7_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_8_address0),
    .ce0(b_copy_8_ce0),
    .we0(b_copy_8_we0),
    .d0(a_Dout_A),
    .q0(b_copy_8_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_9_address0),
    .ce0(b_copy_9_ce0),
    .we0(b_copy_9_we0),
    .d0(a_Dout_A),
    .q0(b_copy_9_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_10_address0),
    .ce0(b_copy_10_ce0),
    .we0(b_copy_10_we0),
    .d0(a_Dout_A),
    .q0(b_copy_10_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_11_address0),
    .ce0(b_copy_11_ce0),
    .we0(b_copy_11_we0),
    .d0(a_Dout_A),
    .q0(b_copy_11_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_12_address0),
    .ce0(b_copy_12_ce0),
    .we0(b_copy_12_we0),
    .d0(a_Dout_A),
    .q0(b_copy_12_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_13_address0),
    .ce0(b_copy_13_ce0),
    .we0(b_copy_13_we0),
    .d0(a_Dout_A),
    .q0(b_copy_13_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_14_address0),
    .ce0(b_copy_14_ce0),
    .we0(b_copy_14_we0),
    .d0(a_Dout_A),
    .q0(b_copy_14_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_15_address0),
    .ce0(b_copy_15_ce0),
    .we0(b_copy_15_we0),
    .d0(a_Dout_A),
    .q0(b_copy_15_q0)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1171_p0),
    .din1(b_copy_0_load_reg_2078),
    .ce(1'b1),
    .dout(grp_fu_1171_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1205_p0),
    .din1(b_copy_1_load_reg_2098),
    .ce(1'b1),
    .dout(grp_fu_1205_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1239_p0),
    .din1(b_copy_2_load_reg_2118),
    .ce(1'b1),
    .dout(grp_fu_1239_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1273_p0),
    .din1(b_copy_3_load_reg_2138),
    .ce(1'b1),
    .dout(grp_fu_1273_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1307_p0),
    .din1(b_copy_4_load_reg_2158),
    .ce(1'b1),
    .dout(grp_fu_1307_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1341_p0),
    .din1(b_copy_5_load_reg_2178),
    .ce(1'b1),
    .dout(grp_fu_1341_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1375_p0),
    .din1(b_copy_6_load_reg_2203),
    .ce(1'b1),
    .dout(grp_fu_1375_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1409_p0),
    .din1(b_copy_7_load_reg_2228),
    .ce(1'b1),
    .dout(grp_fu_1409_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1447_p0),
    .din1(b_copy_8_load_reg_2253),
    .ce(1'b1),
    .dout(grp_fu_1447_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1481_p0),
    .din1(b_copy_9_load_reg_2283),
    .ce(1'b1),
    .dout(grp_fu_1481_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1524_p0),
    .din1(b_copy_10_load_reg_2308),
    .ce(1'b1),
    .dout(grp_fu_1524_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1558_p0),
    .din1(b_copy_11_load_reg_2338),
    .ce(1'b1),
    .dout(grp_fu_1558_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1596_p0),
    .din1(b_copy_12_load_reg_2363),
    .ce(1'b1),
    .dout(grp_fu_1596_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1630_p0),
    .din1(b_copy_13_load_reg_2393),
    .ce(1'b1),
    .dout(grp_fu_1630_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1701_p0),
    .din1(b_copy_14_load_reg_2423),
    .ce(1'b1),
    .dout(grp_fu_1701_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_15_1_reg_2438),
    .din1(b_copy_15_load_reg_2428),
    .ce(1'b1),
    .dout(grp_fu_1711_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state42))) begin
        i_reg_841 <= tmp_2_mid2_v_v_v_reg_1884;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_841 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state42))) begin
        indvar_flatten_reg_830 <= indvar_flatten_next_reg_1855;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_830 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state42))) begin
        j_reg_852 <= j_1_reg_2458;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_852 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
        a_load_1_reg_1913 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        a_row_0_2_fu_132 <= a_row_0_1_fu_1159_p3;
        b_copy_1_load_reg_2098 <= b_copy_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        a_row_10_2_fu_172 <= a_row_10_1_fu_1512_p3;
        b_copy_11_load_reg_2338 <= b_copy_11_q0;
        tmp_11_5_reg_2333 <= grp_fu_1341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        a_row_11_2_fu_176 <= a_row_11_1_fu_1546_p3;
        b_copy_12_load_reg_2363 <= b_copy_12_q0;
        tmp6_reg_2373 <= tmp6_fu_1563_p2;
        tmp_11_6_reg_2358 <= grp_fu_1375_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        a_row_12_2_fu_180 <= a_row_12_1_fu_1584_p3;
        b_copy_13_load_reg_2393 <= b_copy_13_q0;
        tmp_11_7_reg_2388 <= grp_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        a_row_13_2_fu_184 <= a_row_13_1_fu_1618_p3;
        b_copy_14_load_reg_2423 <= b_copy_14_q0;
        b_copy_15_load_reg_2428 <= b_copy_15_q0;
        tmp1_reg_2433 <= tmp1_fu_1644_p2;
        tmp_11_8_reg_2418 <= grp_fu_1447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        a_row_14_2_fu_188 <= a_row_14_1_fu_1675_p3;
        a_row_15_1_reg_2438 <= a_row_15_1_fu_1668_p3;
        a_row_15_2_fu_192 <= a_row_15_1_fu_1668_p3;
        j_1_reg_2458 <= j_1_fu_1706_p2;
        tmp_11_9_reg_2453 <= grp_fu_1481_p2;
        tmp_54_reg_2448 <= tmp_54_fu_1695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        a_row_1_2_fu_136 <= a_row_1_1_fu_1193_p3;
        b_copy_2_load_reg_2118 <= b_copy_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        a_row_2_2_fu_140 <= a_row_2_1_fu_1227_p3;
        b_copy_3_load_reg_2138 <= b_copy_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_row_3_2_fu_144 <= a_row_3_1_fu_1261_p3;
        b_copy_4_load_reg_2158 <= b_copy_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        a_row_4_2_fu_148 <= a_row_4_1_fu_1295_p3;
        b_copy_5_load_reg_2178 <= b_copy_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        a_row_5_2_fu_152 <= a_row_5_1_fu_1329_p3;
        b_copy_6_load_reg_2203 <= b_copy_6_q0;
        tmp_s_reg_2198 <= grp_fu_1171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        a_row_6_2_fu_156 <= a_row_6_1_fu_1363_p3;
        b_copy_7_load_reg_2228 <= b_copy_7_q0;
        tmp_11_1_reg_2223 <= grp_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        a_row_7_2_fu_160 <= a_row_7_1_fu_1397_p3;
        b_copy_8_load_reg_2253 <= b_copy_8_q0;
        tmp3_reg_2263 <= tmp3_fu_1414_p2;
        tmp_11_2_reg_2248 <= grp_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        a_row_8_2_fu_164 <= a_row_8_1_fu_1435_p3;
        b_copy_9_load_reg_2283 <= b_copy_9_q0;
        tmp_11_3_reg_2278 <= grp_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        a_row_9_2_fu_168 <= a_row_9_1_fu_1469_p3;
        b_copy_10_load_reg_2308 <= b_copy_10_q0;
        tmp2_reg_2318 <= tmp2_fu_1490_p2;
        tmp_11_4_reg_2303 <= grp_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_copy_0_load_reg_2078 <= b_copy_0_q0;
        tmp_5_reg_2058 <= tmp_5_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        exitcond_flatten_reg_1851 <= exitcond_flatten_fu_868_p2;
        indvar_flatten_next_reg_1855 <= indvar_flatten_next_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond_flatten_fu_868_p2))) begin
        j_mid2_reg_1860 <= j_mid2_fu_892_p3;
        tmp_2_mid2_v_v_v_reg_1884 <= tmp_2_mid2_v_v_v_fu_920_p3;
        tmp_mid2_reg_1880 <= tmp_mid2_fu_912_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & ~(tmp_mid2_reg_1880 == 1'b0)) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state21) & ~(1'b0 == tmp_5_reg_2058)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state22)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state23)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state24)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state25)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state26)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state27)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state28)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state29)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state30)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state31)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state32)) | (~(1'b0 == tmp_5_reg_2058) & (1'b1 == ap_CS_fsm_state33)))) begin
        reg_863 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (1'b0 == exitcond_flatten_reg_1851))) begin
        tmp10_reg_2468 <= tmp10_fu_1715_p2;
        tmp_11_s_reg_2463 <= grp_fu_1524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state39))) begin
        tmp13_reg_2498 <= tmp13_fu_1728_p2;
        tmp_11_13_reg_2493 <= grp_fu_1701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state37))) begin
        tmp9_reg_2483 <= tmp9_fu_1723_p2;
        tmp_11_11_reg_2478 <= grp_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state36))) begin
        tmp_11_10_reg_2473 <= grp_fu_1558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state38))) begin
        tmp_11_12_reg_2488 <= grp_fu_1630_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state40))) begin
        tmp_11_14_reg_2503 <= grp_fu_1711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state41))) begin
        tmp_12_s_reg_2508 <= tmp_12_s_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_3_reg_2005[8 : 4] <= tmp_3_fu_1107_p3[8 : 4];
        tmp_7_reg_2029[4 : 0] <= tmp_7_fu_1119_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_8_cast_cast_reg_1965[4 : 0] <= tmp_8_cast_cast_fu_1019_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_mid2_reg_1880 == 1'b0))) begin
        tmp_8_cast_reg_1896[4 : 0] <= tmp_8_cast_fu_937_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_8_reg_1918[4 : 0] <= tmp_8_fu_959_p1[4 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        a_Addr_A_orig = tmp_55_cast_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        a_Addr_A_orig = tmp_37_fu_1609_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        a_Addr_A_orig = tmp_35_fu_1575_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        a_Addr_A_orig = tmp_33_fu_1537_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        a_Addr_A_orig = tmp_31_fu_1503_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        a_Addr_A_orig = tmp_29_fu_1460_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        a_Addr_A_orig = tmp_27_fu_1426_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        a_Addr_A_orig = tmp_25_fu_1388_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        a_Addr_A_orig = tmp_23_fu_1354_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        a_Addr_A_orig = tmp_21_fu_1320_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        a_Addr_A_orig = tmp_19_fu_1286_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        a_Addr_A_orig = tmp_17_fu_1252_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        a_Addr_A_orig = tmp_15_fu_1218_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        a_Addr_A_orig = tmp_13_fu_1184_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_Addr_A_orig = tmp_11_fu_1150_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_Addr_A_orig = tmp_2_fu_1128_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_Addr_A_orig = tmp_6_fu_1114_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_Addr_A_orig = tmp_54_cast_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        a_Addr_A_orig = tmp_52_fu_1085_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_Addr_A_orig = tmp_52_cast_fu_1080_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_Addr_A_orig = tmp_50_fu_1059_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_Addr_A_orig = tmp_50_cast_fu_1054_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_Addr_A_orig = tmp_48_fu_1037_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        a_Addr_A_orig = tmp_48_cast_fu_1032_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_Addr_A_orig = tmp_46_fu_1011_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_Addr_A_orig = tmp_46_cast_fu_1006_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_Addr_A_orig = tmp_44_fu_993_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_Addr_A_orig = tmp_44_cast_fu_988_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_Addr_A_orig = tmp_42_fu_975_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_Addr_A_orig = tmp_42_cast_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_Addr_A_orig = tmp_40_fu_951_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_Addr_A_orig = tmp_40_cast_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_Addr_A_orig = tmp_38_fu_928_p3;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state42))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond_flatten_reg_1851) & (1'b1 == ap_CS_fsm_state42))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        b_copy_0_address0 = tmp_7_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_copy_0_address0 = tmp_8_fu_959_p1;
    end else begin
        b_copy_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state18))) begin
        b_copy_0_ce0 = 1'b1;
    end else begin
        b_copy_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        b_copy_0_we0 = 1'b1;
    end else begin
        b_copy_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        b_copy_10_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        b_copy_10_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state13))) begin
        b_copy_10_ce0 = 1'b1;
    end else begin
        b_copy_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
        b_copy_10_we0 = 1'b1;
    end else begin
        b_copy_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        b_copy_11_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        b_copy_11_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state14))) begin
        b_copy_11_ce0 = 1'b1;
    end else begin
        b_copy_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state14))) begin
        b_copy_11_we0 = 1'b1;
    end else begin
        b_copy_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        b_copy_12_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_copy_12_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state15))) begin
        b_copy_12_ce0 = 1'b1;
    end else begin
        b_copy_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state15))) begin
        b_copy_12_we0 = 1'b1;
    end else begin
        b_copy_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        b_copy_13_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        b_copy_13_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16))) begin
        b_copy_13_ce0 = 1'b1;
    end else begin
        b_copy_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        b_copy_13_we0 = 1'b1;
    end else begin
        b_copy_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        b_copy_14_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        b_copy_14_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        b_copy_14_ce0 = 1'b1;
    end else begin
        b_copy_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
        b_copy_14_we0 = 1'b1;
    end else begin
        b_copy_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        b_copy_15_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        b_copy_15_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18))) begin
        b_copy_15_ce0 = 1'b1;
    end else begin
        b_copy_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state18))) begin
        b_copy_15_we0 = 1'b1;
    end else begin
        b_copy_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        b_copy_1_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_copy_1_address0 = tmp_8_fu_959_p1;
    end else begin
        b_copy_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state5))) begin
        b_copy_1_ce0 = 1'b1;
    end else begin
        b_copy_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        b_copy_1_we0 = 1'b1;
    end else begin
        b_copy_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        b_copy_2_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_copy_2_address0 = tmp_8_fu_959_p1;
    end else begin
        b_copy_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5))) begin
        b_copy_2_ce0 = 1'b1;
    end else begin
        b_copy_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        b_copy_2_we0 = 1'b1;
    end else begin
        b_copy_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_copy_3_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_copy_3_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state6))) begin
        b_copy_3_ce0 = 1'b1;
    end else begin
        b_copy_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state6))) begin
        b_copy_3_we0 = 1'b1;
    end else begin
        b_copy_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        b_copy_4_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_copy_4_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        b_copy_4_ce0 = 1'b1;
    end else begin
        b_copy_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state7))) begin
        b_copy_4_we0 = 1'b1;
    end else begin
        b_copy_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        b_copy_5_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_copy_5_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state8))) begin
        b_copy_5_ce0 = 1'b1;
    end else begin
        b_copy_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
        b_copy_5_we0 = 1'b1;
    end else begin
        b_copy_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        b_copy_6_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b_copy_6_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state9))) begin
        b_copy_6_ce0 = 1'b1;
    end else begin
        b_copy_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state9))) begin
        b_copy_6_we0 = 1'b1;
    end else begin
        b_copy_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        b_copy_7_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b_copy_7_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state10))) begin
        b_copy_7_ce0 = 1'b1;
    end else begin
        b_copy_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        b_copy_7_we0 = 1'b1;
    end else begin
        b_copy_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        b_copy_8_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        b_copy_8_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state11))) begin
        b_copy_8_ce0 = 1'b1;
    end else begin
        b_copy_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state11))) begin
        b_copy_8_we0 = 1'b1;
    end else begin
        b_copy_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        b_copy_9_address0 = tmp_7_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        b_copy_9_address0 = tmp_8_reg_1918;
    end else begin
        b_copy_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state12))) begin
        b_copy_9_ce0 = 1'b1;
    end else begin
        b_copy_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_mid2_reg_1880 == 1'b0) & (1'b1 == ap_CS_fsm_state12))) begin
        b_copy_9_we0 = 1'b1;
    end else begin
        b_copy_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond_flatten_fu_868_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = tmp_12_s_reg_2508;

assign a_Rst_A = ap_rst;

assign a_row_0_1_fu_1159_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_0_2_fu_132);

assign a_row_10_1_fu_1512_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_10_2_fu_172);

assign a_row_11_1_fu_1546_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_11_2_fu_176);

assign a_row_12_1_fu_1584_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_12_2_fu_180);

assign a_row_13_1_fu_1618_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_13_2_fu_184);

assign a_row_14_1_fu_1675_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_14_2_fu_188);

assign a_row_15_1_fu_1668_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? a_Dout_A : a_row_15_2_fu_192);

assign a_row_1_1_fu_1193_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_1_2_fu_136);

assign a_row_2_1_fu_1227_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_2_2_fu_140);

assign a_row_3_1_fu_1261_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_3_2_fu_144);

assign a_row_4_1_fu_1295_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_4_2_fu_148);

assign a_row_5_1_fu_1329_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_5_2_fu_152);

assign a_row_6_1_fu_1363_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_6_2_fu_156);

assign a_row_7_1_fu_1397_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_7_2_fu_160);

assign a_row_8_1_fu_1435_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_8_2_fu_164);

assign a_row_9_1_fu_1469_p3 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_9_2_fu_168);

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state23 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state30 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state31 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_state32 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state33 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state34 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state36 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_state37 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state38 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_state39 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign exitcond_flatten_fu_868_p2 = ((indvar_flatten_reg_830 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_886_p2 = ((j_reg_852 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_fu_1171_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_0_2_fu_132);

assign grp_fu_1205_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_1_2_fu_136);

assign grp_fu_1239_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_2_2_fu_140);

assign grp_fu_1273_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_3_2_fu_144);

assign grp_fu_1307_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_4_2_fu_148);

assign grp_fu_1341_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_5_2_fu_152);

assign grp_fu_1375_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_6_2_fu_156);

assign grp_fu_1409_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_7_2_fu_160);

assign grp_fu_1447_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_8_2_fu_164);

assign grp_fu_1481_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_9_2_fu_168);

assign grp_fu_1524_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_10_2_fu_172);

assign grp_fu_1558_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_11_2_fu_176);

assign grp_fu_1596_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_12_2_fu_180);

assign grp_fu_1630_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_13_2_fu_184);

assign grp_fu_1701_p0 = ((tmp_5_reg_2058[0:0] === 1'b1) ? reg_863 : a_row_14_2_fu_188);

assign i_1_fu_880_p2 = (i_reg_841 + ap_const_lv5_1);

assign indvar_flatten_next_fu_874_p2 = (indvar_flatten_reg_830 + ap_const_lv9_1);

assign j_1_fu_1706_p2 = (j_mid2_reg_1860 + ap_const_lv5_1);

assign j_mid2_fu_892_p3 = ((exitcond_fu_886_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_reg_852);

assign tmp10_fu_1715_p2 = (tmp_11_9_reg_2453 + tmp_11_8_reg_2418);

assign tmp11_fu_1719_p2 = (tmp_11_10_reg_2473 + tmp_11_s_reg_2463);

assign tmp12_fu_1736_p2 = (tmp13_reg_2498 + tmp14_fu_1732_p2);

assign tmp13_fu_1728_p2 = (tmp_11_12_reg_2488 + tmp_11_11_reg_2478);

assign tmp14_fu_1732_p2 = (tmp_11_14_reg_2503 + tmp_11_13_reg_2493);

assign tmp1_fu_1644_p2 = (tmp2_reg_2318 + tmp5_fu_1639_p2);

assign tmp2_fu_1490_p2 = (tmp3_reg_2263 + tmp4_fu_1486_p2);

assign tmp3_fu_1414_p2 = (tmp_11_1_reg_2223 + tmp_s_reg_2198);

assign tmp4_fu_1486_p2 = (tmp_11_3_reg_2278 + tmp_11_2_reg_2248);

assign tmp5_fu_1639_p2 = (tmp6_reg_2373 + tmp7_fu_1635_p2);

assign tmp6_fu_1563_p2 = (tmp_11_5_reg_2333 + tmp_11_4_reg_2303);

assign tmp7_fu_1635_p2 = (tmp_11_7_reg_2388 + tmp_11_6_reg_2358);

assign tmp8_fu_1741_p2 = (tmp9_reg_2483 + tmp12_fu_1736_p2);

assign tmp9_fu_1723_p2 = (tmp10_reg_2468 + tmp11_fu_1719_p2);

assign tmp_10_fu_1145_p2 = (tmp_3_reg_2005 | ap_const_lv9_2);

assign tmp_11_fu_1150_p3 = {{ap_const_lv55_0}, {tmp_10_fu_1145_p2}};

assign tmp_12_fu_1179_p2 = (tmp_3_reg_2005 | ap_const_lv9_3);

assign tmp_12_s_fu_1746_p2 = (tmp1_reg_2433 + tmp8_fu_1741_p2);

assign tmp_13_fu_1184_p3 = {{ap_const_lv55_0}, {tmp_12_fu_1179_p2}};

assign tmp_14_fu_1213_p2 = (tmp_3_reg_2005 | ap_const_lv9_4);

assign tmp_15_fu_1218_p3 = {{ap_const_lv55_0}, {tmp_14_fu_1213_p2}};

assign tmp_16_fu_1247_p2 = (tmp_3_reg_2005 | ap_const_lv9_5);

assign tmp_17_fu_1252_p3 = {{ap_const_lv55_0}, {tmp_16_fu_1247_p2}};

assign tmp_18_fu_1281_p2 = (tmp_3_reg_2005 | ap_const_lv9_6);

assign tmp_19_fu_1286_p3 = {{ap_const_lv55_0}, {tmp_18_fu_1281_p2}};

assign tmp_1_fu_1655_p4 = {{{{1'b1}, {tmp_2_mid2_v_v_v_reg_1884}}}, {ap_const_lv4_0}};

assign tmp_20_fu_1315_p2 = (tmp_3_reg_2005 | ap_const_lv9_7);

assign tmp_21_fu_1320_p3 = {{ap_const_lv55_0}, {tmp_20_fu_1315_p2}};

assign tmp_22_fu_1349_p2 = (tmp_3_reg_2005 | ap_const_lv9_8);

assign tmp_23_fu_1354_p3 = {{ap_const_lv55_0}, {tmp_22_fu_1349_p2}};

assign tmp_24_fu_1383_p2 = (tmp_3_reg_2005 | ap_const_lv9_9);

assign tmp_25_fu_1388_p3 = {{ap_const_lv55_0}, {tmp_24_fu_1383_p2}};

assign tmp_26_fu_1421_p2 = (tmp_3_reg_2005 | ap_const_lv9_A);

assign tmp_27_fu_1426_p3 = {{ap_const_lv55_0}, {tmp_26_fu_1421_p2}};

assign tmp_28_fu_1455_p2 = (tmp_3_reg_2005 | ap_const_lv9_B);

assign tmp_29_fu_1460_p3 = {{ap_const_lv55_0}, {tmp_28_fu_1455_p2}};

assign tmp_2_cast_fu_1664_p1 = tmp_1_fu_1655_p4;

assign tmp_2_fu_1128_p3 = {{ap_const_lv55_0}, {tmp_9_fu_1123_p2}};

assign tmp_2_mid2_v_v_v_fu_920_p3 = ((exitcond_fu_886_p2[0:0] === 1'b1) ? i_1_fu_880_p2 : i_reg_841);

assign tmp_30_fu_1498_p2 = (tmp_3_reg_2005 | ap_const_lv9_C);

assign tmp_31_fu_1503_p3 = {{ap_const_lv55_0}, {tmp_30_fu_1498_p2}};

assign tmp_32_fu_1532_p2 = (tmp_3_reg_2005 | ap_const_lv9_D);

assign tmp_33_fu_1537_p3 = {{ap_const_lv55_0}, {tmp_32_fu_1532_p2}};

assign tmp_34_fu_1570_p2 = (tmp_3_reg_2005 | ap_const_lv9_E);

assign tmp_35_fu_1575_p3 = {{ap_const_lv55_0}, {tmp_34_fu_1570_p2}};

assign tmp_36_fu_1604_p2 = (tmp_3_reg_2005 | ap_const_lv9_F);

assign tmp_37_fu_1609_p3 = {{ap_const_lv55_0}, {tmp_36_fu_1604_p2}};

assign tmp_38_fu_928_p3 = {{ap_const_lv59_8}, {j_mid2_fu_892_p3}};

assign tmp_39_fu_940_p2 = ($signed(tmp_8_cast_fu_937_p1) + $signed(ap_const_lv9_110));

assign tmp_3_fu_1107_p3 = {{tmp_2_mid2_v_v_v_reg_1884}, {ap_const_lv4_0}};

assign tmp_40_cast_fu_946_p1 = tmp_39_fu_940_p2;

assign tmp_40_fu_951_p3 = {{ap_const_lv59_9}, {j_mid2_reg_1860}};

assign tmp_41_fu_965_p2 = ($signed(tmp_8_cast_reg_1896) + $signed(ap_const_lv9_130));

assign tmp_42_cast_fu_970_p1 = tmp_41_fu_965_p2;

assign tmp_42_fu_975_p3 = {{ap_const_lv59_A}, {j_mid2_reg_1860}};

assign tmp_43_fu_983_p2 = ($signed(tmp_8_cast_reg_1896) + $signed(ap_const_lv9_150));

assign tmp_44_cast_fu_988_p1 = tmp_43_fu_983_p2;

assign tmp_44_fu_993_p3 = {{ap_const_lv59_B}, {j_mid2_reg_1860}};

assign tmp_45_fu_1001_p2 = ($signed(tmp_8_cast_reg_1896) + $signed(ap_const_lv9_170));

assign tmp_46_cast_fu_1006_p1 = tmp_45_fu_1001_p2;

assign tmp_46_fu_1011_p3 = {{ap_const_lv59_C}, {j_mid2_reg_1860}};

assign tmp_47_fu_1022_p2 = ($signed(tmp_8_cast_cast_fu_1019_p1) + $signed(ap_const_lv8_90));

assign tmp_48_cast1_fu_1028_p1 = $signed(tmp_47_fu_1022_p2);

assign tmp_48_cast_fu_1032_p1 = $unsigned(tmp_48_cast1_fu_1028_p1);

assign tmp_48_fu_1037_p3 = {{ap_const_lv59_D}, {j_mid2_reg_1860}};

assign tmp_49_fu_1045_p2 = ($signed(tmp_8_cast_cast_reg_1965) + $signed(ap_const_lv8_B0));

assign tmp_50_cast1_fu_1050_p1 = $signed(tmp_49_fu_1045_p2);

assign tmp_50_cast_fu_1054_p1 = $unsigned(tmp_50_cast1_fu_1050_p1);

assign tmp_50_fu_1059_p3 = {{ap_const_lv59_E}, {j_mid2_reg_1860}};

assign tmp_51_fu_1070_p2 = ($signed(tmp_8_cast_cast1_fu_1067_p1) + $signed(ap_const_lv7_50));

assign tmp_52_cast1_fu_1076_p1 = $signed(tmp_51_fu_1070_p2);

assign tmp_52_cast_fu_1080_p1 = $unsigned(tmp_52_cast1_fu_1076_p1);

assign tmp_52_fu_1085_p3 = {{ap_const_lv59_F}, {j_mid2_reg_1860}};

assign tmp_53_fu_1096_p2 = (tmp_8_cast1_fu_1093_p1 + ap_const_lv10_1F0);

assign tmp_54_cast_fu_1102_p1 = tmp_53_fu_1096_p2;

assign tmp_54_fu_1695_p2 = (tmp_2_cast_fu_1664_p1 + tmp_7_cast_fu_1692_p1);

assign tmp_55_cast_fu_1751_p1 = tmp_54_reg_2448;

assign tmp_5_fu_1137_p2 = ((j_mid2_reg_1860 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_1114_p1 = tmp_3_fu_1107_p3;

assign tmp_7_cast_fu_1692_p1 = j_mid2_reg_1860;

assign tmp_7_fu_1119_p1 = j_mid2_reg_1860;

assign tmp_8_cast1_fu_1093_p1 = j_mid2_reg_1860;

assign tmp_8_cast_cast1_fu_1067_p1 = j_mid2_reg_1860;

assign tmp_8_cast_cast_fu_1019_p1 = j_mid2_reg_1860;

assign tmp_8_cast_fu_937_p1 = j_mid2_reg_1860;

assign tmp_8_fu_959_p1 = j_mid2_reg_1860;

assign tmp_9_fu_1123_p2 = (tmp_3_reg_2005 | ap_const_lv9_1);

assign tmp_fu_906_p2 = ((i_reg_841 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_900_p2 = ((i_1_fu_880_p2 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_912_p3 = ((exitcond_fu_886_p2[0:0] === 1'b1) ? tmp_mid1_fu_900_p2 : tmp_fu_906_p2);

always @ (posedge ap_clk) begin
    tmp_8_cast_reg_1896[8:5] <= 4'b0000;
    tmp_8_reg_1918[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_8_cast_cast_reg_1965[7:5] <= 3'b000;
    tmp_3_reg_2005[3:0] <= 4'b0000;
    tmp_7_reg_2029[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //matmul_hw
