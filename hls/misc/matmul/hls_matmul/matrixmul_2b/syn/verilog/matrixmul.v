// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1265,HLS_SYN_LUT=2180}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A
);

parameter    ap_ST_fsm_state1 = 8'b1;
parameter    ap_ST_fsm_pp0_stage0 = 8'b10;
parameter    ap_ST_fsm_pp0_stage1 = 8'b100;
parameter    ap_ST_fsm_pp0_stage2 = 8'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 8'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 8'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 8'b1000000;
parameter    ap_ST_fsm_state17 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv61_2 = 61'b10;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv32_7 = 32'b111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_250;
reg   [2:0] i_reg_261;
reg   [2:0] j_reg_272;
wire   [0:0] exitcond_flatten_fu_283_p2;
reg   [0:0] exitcond_flatten_reg_1256;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1256;
wire   [4:0] indvar_flatten_next_fu_289_p2;
reg   [4:0] indvar_flatten_next_reg_1260;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] j_mid2_fu_307_p3;
reg   [2:0] j_mid2_reg_1265;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1265;
reg   [2:0] ap_pipeline_reg_pp0_iter2_j_mid2_reg_1265;
wire   [0:0] tmp_mid2_fu_327_p3;
reg   [0:0] tmp_mid2_reg_1275;
wire   [2:0] i2_mid2_v_fu_335_p3;
reg   [2:0] i2_mid2_v_reg_1295;
reg   [2:0] ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1295;
wire   [4:0] tmp_1_fu_343_p3;
reg   [4:0] tmp_1_reg_1301;
wire   [1:0] tmp_fu_361_p1;
reg   [1:0] tmp_reg_1318;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg   [31:0] a_row_0_reg_1334;
reg   [31:0] b_copy_2_3_19_reg_1344;
wire   [0:0] ap_CS_fsm_pp0_stage2;
reg   [31:0] a_row_1_reg_1357;
reg   [31:0] b_copy_3_3_19_reg_1362;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] tmp_5_fu_433_p2;
reg   [0:0] tmp_5_reg_1375;
reg   [31:0] a_row_2_reg_1383;
wire   [0:0] sel_tmp_fu_438_p2;
reg   [0:0] sel_tmp_reg_1388;
wire   [0:0] sel_tmp2_fu_443_p2;
reg   [0:0] sel_tmp2_reg_1398;
wire   [0:0] sel_tmp4_fu_448_p2;
reg   [0:0] sel_tmp4_reg_1411;
wire  signed [31:0] tmp_6_fu_549_p6;
reg  signed [31:0] tmp_6_reg_1427;
wire  signed [31:0] a_row_3_1_fu_606_p3;
reg  signed [31:0] a_row_3_1_reg_1432;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire  signed [31:0] a_row_2_1_fu_613_p3;
wire  signed [31:0] a_row_1_1_fu_619_p3;
reg  signed [31:0] a_row_1_1_reg_1442;
wire  signed [31:0] a_row_0_1_fu_625_p3;
reg  signed [31:0] a_row_0_1_reg_1447;
wire  signed [31:0] tmp_7_fu_731_p6;
reg  signed [31:0] tmp_7_reg_1457;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire  signed [31:0] tmp_3_fu_901_p6;
reg  signed [31:0] tmp_3_reg_1467;
wire   [2:0] j_1_fu_918_p2;
reg   [2:0] j_1_reg_1472;
wire  signed [31:0] tmp_4_fu_1050_p6;
reg  signed [31:0] tmp_4_reg_1477;
wire   [31:0] grp_fu_726_p2;
reg   [31:0] tmp_11_2_reg_1487;
wire   [31:0] grp_fu_914_p2;
reg   [31:0] tmp_11_3_reg_1492;
wire   [31:0] grp_fu_1046_p2;
reg   [31:0] tmp_s_reg_1497;
wire   [31:0] grp_fu_1096_p2;
reg   [31:0] tmp_11_1_reg_1502;
wire   [31:0] tmp_12_3_fu_1108_p2;
reg   [31:0] tmp_12_3_reg_1507;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] indvar_flatten_phi_fu_254_p4;
reg   [2:0] i_phi_fu_265_p4;
reg   [2:0] j_phi_fu_276_p4;
wire   [63:0] tmp_9_fu_351_p1;
wire   [63:0] tmp_8_fu_356_p1;
wire   [63:0] tmp_11_fu_370_p3;
wire   [63:0] tmp_20_cast_fu_388_p1;
wire   [63:0] tmp_13_fu_398_p3;
wire   [63:0] tmp_15_fu_424_p3;
wire   [63:0] tmp_17_fu_631_p3;
wire   [63:0] tmp_19_cast_fu_805_p1;
wire   [63:0] tmp_21_cast_fu_1131_p1;
reg   [31:0] a_row_0_2_fu_90;
reg   [31:0] a_row_1_2_fu_94;
reg   [31:0] a_row_2_2_fu_98;
reg   [31:0] a_row_3_2_fu_102;
reg   [31:0] b_copy_0_3_11_fu_106;
wire   [31:0] b_copy_0_3_18_fu_894_p3;
reg   [31:0] b_copy_0_3_8_fu_110;
wire   [31:0] b_copy_0_3_17_fu_887_p3;
reg   [31:0] b_copy_0_3_12_fu_114;
wire   [31:0] b_copy_0_3_16_fu_880_p3;
reg   [31:0] b_copy_0_3_1_fu_118;
wire   [31:0] b_copy_0_3_3_fu_873_p3;
reg   [31:0] b_copy_1_3_11_fu_122;
wire   [31:0] b_copy_1_3_18_fu_1039_p3;
reg   [31:0] b_copy_1_3_8_fu_126;
wire   [31:0] b_copy_1_3_17_fu_1032_p3;
reg   [31:0] b_copy_1_3_12_fu_130;
wire   [31:0] b_copy_1_3_16_fu_1025_p3;
reg   [31:0] b_copy_1_3_1_fu_134;
wire   [31:0] b_copy_1_3_3_fu_1018_p3;
reg   [31:0] b_copy_2_3_11_fu_138;
wire   [31:0] b_copy_2_3_18_fu_542_p3;
reg   [31:0] b_copy_2_3_8_fu_142;
wire   [31:0] b_copy_2_3_17_fu_535_p3;
reg   [31:0] b_copy_2_3_12_fu_146;
wire   [31:0] b_copy_2_3_16_fu_528_p3;
reg   [31:0] b_copy_2_3_1_fu_150;
wire   [31:0] b_copy_2_3_3_fu_521_p3;
reg   [31:0] b_copy_3_3_11_fu_154;
wire   [31:0] b_copy_3_3_18_fu_719_p3;
reg   [31:0] b_copy_3_3_8_fu_158;
wire   [31:0] b_copy_3_3_17_fu_712_p3;
reg   [31:0] b_copy_3_3_12_fu_162;
wire   [31:0] b_copy_3_3_16_fu_705_p3;
reg   [31:0] b_copy_3_3_1_fu_166;
wire   [31:0] b_copy_3_3_3_fu_698_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [0:0] exitcond_fu_301_p2;
wire   [2:0] i_1_fu_295_p2;
wire   [0:0] tmp_mid1_fu_315_p2;
wire   [0:0] tmp1_fu_321_p2;
wire   [4:0] tmp_10_fu_365_p2;
wire   [3:0] tmp_8_cast5_fu_379_p1;
wire   [3:0] tmp_19_fu_382_p2;
wire   [4:0] tmp_12_fu_393_p2;
wire   [4:0] tmp_14_fu_419_p2;
wire   [31:0] b_copy_2_3_fu_453_p3;
wire   [31:0] b_copy_2_3_4_fu_460_p3;
wire   [31:0] b_copy_2_3_5_fu_476_p3;
wire   [31:0] b_copy_2_3_6_fu_483_p3;
wire   [31:0] b_copy_2_3_9_fu_499_p3;
wire   [31:0] b_copy_2_3_2_fu_468_p3;
wire   [31:0] b_copy_2_3_7_fu_491_p3;
wire   [31:0] b_copy_2_3_14_fu_506_p3;
wire   [31:0] b_copy_2_3_15_fu_514_p3;
wire   [31:0] tmp_6_fu_549_p1;
wire   [31:0] tmp_6_fu_549_p2;
wire   [31:0] tmp_6_fu_549_p3;
wire   [31:0] tmp_6_fu_549_p4;
wire   [31:0] b_copy_3_3_fu_639_p3;
wire   [31:0] b_copy_3_3_4_fu_645_p3;
wire   [31:0] b_copy_3_3_5_fu_659_p3;
wire   [31:0] b_copy_3_3_6_fu_665_p3;
wire   [31:0] b_copy_3_3_9_fu_679_p3;
wire   [31:0] b_copy_3_3_2_fu_652_p3;
wire   [31:0] b_copy_3_3_7_fu_672_p3;
wire   [31:0] b_copy_3_3_14_fu_685_p3;
wire   [31:0] b_copy_3_3_15_fu_692_p3;
wire  signed [31:0] grp_fu_726_p1;
wire   [31:0] tmp_7_fu_731_p1;
wire   [31:0] tmp_7_fu_731_p2;
wire   [31:0] tmp_7_fu_731_p3;
wire   [31:0] tmp_7_fu_731_p4;
wire   [4:0] tmp_8_cast_fu_796_p1;
wire   [4:0] tmp_18_fu_799_p2;
wire   [31:0] b_copy_0_3_fu_810_p3;
wire   [31:0] b_copy_0_3_4_fu_817_p3;
wire   [31:0] b_copy_0_3_5_fu_831_p3;
wire   [31:0] b_copy_0_3_6_fu_838_p3;
wire   [31:0] b_copy_0_3_9_fu_852_p3;
wire   [31:0] b_copy_0_3_2_fu_824_p3;
wire   [31:0] b_copy_0_3_7_fu_845_p3;
wire   [31:0] b_copy_0_3_14_fu_859_p3;
wire   [31:0] b_copy_0_3_15_fu_866_p3;
wire   [31:0] tmp_3_fu_901_p1;
wire   [31:0] tmp_3_fu_901_p2;
wire   [31:0] tmp_3_fu_901_p3;
wire   [31:0] tmp_3_fu_901_p4;
wire   [31:0] b_copy_1_3_fu_955_p3;
wire   [31:0] b_copy_1_3_4_fu_962_p3;
wire   [31:0] b_copy_1_3_5_fu_976_p3;
wire   [31:0] b_copy_1_3_6_fu_983_p3;
wire   [31:0] b_copy_1_3_9_fu_997_p3;
wire   [31:0] b_copy_1_3_2_fu_969_p3;
wire   [31:0] b_copy_1_3_7_fu_990_p3;
wire   [31:0] b_copy_1_3_14_fu_1004_p3;
wire   [31:0] b_copy_1_3_15_fu_1011_p3;
wire   [31:0] tmp_4_fu_1050_p1;
wire   [31:0] tmp_4_fu_1050_p2;
wire   [31:0] tmp_4_fu_1050_p3;
wire   [31:0] tmp_4_fu_1050_p4;
wire   [3:0] grp_fu_1090_p0;
wire   [31:0] tmp8_fu_1100_p2;
wire   [31:0] tmp9_fu_1104_p2;
wire   [3:0] grp_fu_1090_p2;
wire   [5:0] tmp_16_fu_1114_p3;
wire   [5:0] tmp_8_cast6_fu_1122_p1;
wire   [5:0] tmp_20_fu_1125_p2;
wire   [0:0] ap_CS_fsm_state17;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U1(
    .din1(tmp_6_fu_549_p1),
    .din2(tmp_6_fu_549_p2),
    .din3(tmp_6_fu_549_p3),
    .din4(tmp_6_fu_549_p4),
    .din5(tmp_reg_1318),
    .dout(tmp_6_fu_549_p6)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1427),
    .din1(grp_fu_726_p1),
    .ce(1'b1),
    .dout(grp_fu_726_p2)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U3(
    .din1(tmp_7_fu_731_p1),
    .din2(tmp_7_fu_731_p2),
    .din3(tmp_7_fu_731_p3),
    .din4(tmp_7_fu_731_p4),
    .din5(tmp_reg_1318),
    .dout(tmp_7_fu_731_p6)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U4(
    .din1(tmp_3_fu_901_p1),
    .din2(tmp_3_fu_901_p2),
    .din3(tmp_3_fu_901_p3),
    .din4(tmp_3_fu_901_p4),
    .din5(tmp_reg_1318),
    .dout(tmp_3_fu_901_p6)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_1457),
    .din1(a_row_3_1_reg_1432),
    .ce(1'b1),
    .dout(grp_fu_914_p2)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1467),
    .din1(a_row_0_1_reg_1447),
    .ce(1'b1),
    .dout(grp_fu_1046_p2)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U7(
    .din1(tmp_4_fu_1050_p1),
    .din2(tmp_4_fu_1050_p2),
    .din3(tmp_4_fu_1050_p3),
    .din4(tmp_4_fu_1050_p4),
    .din5(tmp_reg_1318),
    .dout(tmp_4_fu_1050_p6)
);

matrixmul_urem_4ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
matrixmul_urem_4ndEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1090_p0),
    .din1(ap_const_lv4_6),
    .ce(1'b1),
    .dout(grp_fu_1090_p2)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1477),
    .din1(a_row_1_1_reg_1442),
    .ce(1'b1),
    .dout(grp_fu_1096_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(exitcond_flatten_fu_283_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & ~(exitcond_flatten_reg_1256 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_261 <= i2_mid2_v_reg_1295;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_261 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_250 <= indvar_flatten_next_reg_1260;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_250 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_272 <= j_1_reg_1472;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_272 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_1_reg_1447 <= a_row_0_1_fu_625_p3;
        a_row_1_1_reg_1442 <= a_row_1_1_fu_619_p3;
        a_row_3_1_reg_1432 <= a_row_3_1_fu_606_p3;
        tmp_7_reg_1457 <= tmp_7_fu_731_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_2_fu_90 <= a_row_0_1_fu_625_p3;
        a_row_1_2_fu_94 <= a_row_1_1_fu_619_p3;
        a_row_2_2_fu_98 <= a_row_2_1_fu_613_p3;
        a_row_3_2_fu_102 <= a_row_3_1_fu_606_p3;
        b_copy_3_3_11_fu_154 <= b_copy_3_3_18_fu_719_p3;
        b_copy_3_3_12_fu_162 <= b_copy_3_3_16_fu_705_p3;
        b_copy_3_3_1_fu_166 <= b_copy_3_3_3_fu_698_p3;
        b_copy_3_3_8_fu_158 <= b_copy_3_3_17_fu_712_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1256 == 1'b0))) begin
        a_row_0_reg_1334 <= a_0_Dout_A;
        b_copy_2_3_19_reg_1344 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_row_1_reg_1357 <= a_0_Dout_A;
        b_copy_3_3_19_reg_1362 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_2_reg_1383 <= a_0_Dout_A;
        b_copy_2_3_11_fu_138 <= b_copy_2_3_18_fu_542_p3;
        b_copy_2_3_12_fu_146 <= b_copy_2_3_16_fu_528_p3;
        b_copy_2_3_1_fu_150 <= b_copy_2_3_3_fu_521_p3;
        b_copy_2_3_8_fu_142 <= b_copy_2_3_17_fu_535_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256 <= exitcond_flatten_reg_1256;
        ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1295 <= i2_mid2_v_reg_1295;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1265 <= j_mid2_reg_1265;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1256 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256;
        ap_pipeline_reg_pp0_iter2_j_mid2_reg_1265 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1265;
        exitcond_flatten_reg_1256 <= exitcond_flatten_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_0_3_11_fu_106 <= b_copy_0_3_18_fu_894_p3;
        b_copy_0_3_12_fu_114 <= b_copy_0_3_16_fu_880_p3;
        b_copy_0_3_1_fu_118 <= b_copy_0_3_3_fu_873_p3;
        b_copy_0_3_8_fu_110 <= b_copy_0_3_17_fu_887_p3;
        j_1_reg_1472 <= j_1_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_1_3_11_fu_122 <= b_copy_1_3_18_fu_1039_p3;
        b_copy_1_3_12_fu_130 <= b_copy_1_3_16_fu_1025_p3;
        b_copy_1_3_1_fu_134 <= b_copy_1_3_3_fu_1018_p3;
        b_copy_1_3_8_fu_126 <= b_copy_1_3_17_fu_1032_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_283_p2 == 1'b0))) begin
        i2_mid2_v_reg_1295 <= i2_mid2_v_fu_335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1260 <= indvar_flatten_next_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_283_p2 == 1'b0))) begin
        j_mid2_reg_1265 <= j_mid2_fu_307_p3;
        tmp_1_reg_1301[4 : 2] <= tmp_1_fu_343_p3[4 : 2];
        tmp_mid2_reg_1275 <= tmp_mid2_fu_327_p3;
        tmp_reg_1318 <= tmp_fu_361_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sel_tmp2_reg_1398 <= sel_tmp2_fu_443_p2;
        sel_tmp4_reg_1411 <= sel_tmp4_fu_448_p2;
        sel_tmp_reg_1388 <= sel_tmp_fu_438_p2;
        tmp_5_reg_1375 <= tmp_5_fu_433_p2;
        tmp_6_reg_1427 <= tmp_6_fu_549_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_11_1_reg_1502 <= grp_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_11_2_reg_1487 <= grp_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_11_3_reg_1492 <= grp_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_12_3_reg_1507 <= tmp_12_3_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_3_reg_1467 <= tmp_3_fu_901_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_4_reg_1477 <= tmp_4_fu_1050_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1256 == 1'b0))) begin
        tmp_s_reg_1497 <= grp_fu_1046_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_19_cast_fu_805_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_17_fu_631_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_15_fu_424_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_13_fu_398_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_11_fu_370_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_9_fu_351_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_Addr_A_orig = tmp_21_cast_fu_1131_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_1_Addr_A_orig = tmp_20_cast_fu_388_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_1_Addr_A_orig = tmp_8_fu_356_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_265_p4 = i2_mid2_v_reg_1295;
    end else begin
        i_phi_fu_265_p4 = i_reg_261;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_next_reg_1260;
    end else begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_reg_250;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1256 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_276_p4 = j_1_reg_1472;
    end else begin
        j_phi_fu_276_p4 = j_reg_272;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_283_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = tmp_12_3_reg_1507;

assign a_1_Rst_A = ap_rst;

assign a_row_0_1_fu_625_p3 = ((tmp_5_reg_1375[0:0] === 1'b1) ? a_row_0_reg_1334 : a_row_0_2_fu_90);

assign a_row_1_1_fu_619_p3 = ((tmp_5_reg_1375[0:0] === 1'b1) ? a_row_1_reg_1357 : a_row_1_2_fu_94);

assign a_row_2_1_fu_613_p3 = ((tmp_5_reg_1375[0:0] === 1'b1) ? a_row_2_reg_1383 : a_row_2_2_fu_98);

assign a_row_3_1_fu_606_p3 = ((tmp_5_reg_1375[0:0] === 1'b1) ? a_0_Dout_A : a_row_3_2_fu_102);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_7];

assign b_copy_0_3_14_fu_859_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_0_3_8_fu_110 : b_copy_0_3_9_fu_852_p3);

assign b_copy_0_3_15_fu_866_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_11_fu_106);

assign b_copy_0_3_16_fu_880_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_7_fu_845_p3 : b_copy_0_3_12_fu_114);

assign b_copy_0_3_17_fu_887_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_14_fu_859_p3 : b_copy_0_3_8_fu_110);

assign b_copy_0_3_18_fu_894_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_15_fu_866_p3 : b_copy_0_3_11_fu_106);

assign b_copy_0_3_2_fu_824_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : b_copy_0_3_4_fu_817_p3);

assign b_copy_0_3_3_fu_873_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_2_fu_824_p3 : b_copy_0_3_1_fu_118);

assign b_copy_0_3_4_fu_817_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : b_copy_0_3_fu_810_p3);

assign b_copy_0_3_5_fu_831_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_12_fu_114);

assign b_copy_0_3_6_fu_838_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_0_3_12_fu_114 : b_copy_0_3_5_fu_831_p3);

assign b_copy_0_3_7_fu_845_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_0_3_12_fu_114 : b_copy_0_3_6_fu_838_p3);

assign b_copy_0_3_9_fu_852_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_8_fu_110);

assign b_copy_0_3_fu_810_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? b_copy_0_3_1_fu_118 : a_0_Dout_A);

assign b_copy_1_3_14_fu_1004_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_1_3_8_fu_126 : b_copy_1_3_9_fu_997_p3);

assign b_copy_1_3_15_fu_1011_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_11_fu_122);

assign b_copy_1_3_16_fu_1025_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_7_fu_990_p3 : b_copy_1_3_12_fu_130);

assign b_copy_1_3_17_fu_1032_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_14_fu_1004_p3 : b_copy_1_3_8_fu_126);

assign b_copy_1_3_18_fu_1039_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_15_fu_1011_p3 : b_copy_1_3_11_fu_122);

assign b_copy_1_3_2_fu_969_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : b_copy_1_3_4_fu_962_p3);

assign b_copy_1_3_3_fu_1018_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_2_fu_969_p3 : b_copy_1_3_1_fu_134);

assign b_copy_1_3_4_fu_962_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : b_copy_1_3_fu_955_p3);

assign b_copy_1_3_5_fu_976_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_12_fu_130);

assign b_copy_1_3_6_fu_983_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_1_3_12_fu_130 : b_copy_1_3_5_fu_976_p3);

assign b_copy_1_3_7_fu_990_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_1_3_12_fu_130 : b_copy_1_3_6_fu_983_p3);

assign b_copy_1_3_9_fu_997_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_8_fu_126);

assign b_copy_1_3_fu_955_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? b_copy_1_3_1_fu_134 : a_0_Dout_A);

assign b_copy_2_3_14_fu_506_p3 = ((sel_tmp4_fu_448_p2[0:0] === 1'b1) ? b_copy_2_3_8_fu_142 : b_copy_2_3_9_fu_499_p3);

assign b_copy_2_3_15_fu_514_p3 = ((sel_tmp4_fu_448_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1344 : b_copy_2_3_11_fu_138);

assign b_copy_2_3_16_fu_528_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_7_fu_491_p3 : b_copy_2_3_12_fu_146);

assign b_copy_2_3_17_fu_535_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_14_fu_506_p3 : b_copy_2_3_8_fu_142);

assign b_copy_2_3_18_fu_542_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_15_fu_514_p3 : b_copy_2_3_11_fu_138);

assign b_copy_2_3_2_fu_468_p3 = ((sel_tmp4_fu_448_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_4_fu_460_p3);

assign b_copy_2_3_3_fu_521_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_2_fu_468_p3 : b_copy_2_3_1_fu_150);

assign b_copy_2_3_4_fu_460_p3 = ((sel_tmp2_fu_443_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_fu_453_p3);

assign b_copy_2_3_5_fu_476_p3 = ((sel_tmp_fu_438_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1344 : b_copy_2_3_12_fu_146);

assign b_copy_2_3_6_fu_483_p3 = ((sel_tmp2_fu_443_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_146 : b_copy_2_3_5_fu_476_p3);

assign b_copy_2_3_7_fu_491_p3 = ((sel_tmp4_fu_448_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_146 : b_copy_2_3_6_fu_483_p3);

assign b_copy_2_3_9_fu_499_p3 = ((sel_tmp2_fu_443_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1344 : b_copy_2_3_8_fu_142);

assign b_copy_2_3_fu_453_p3 = ((sel_tmp_fu_438_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_150 : b_copy_2_3_19_reg_1344);

assign b_copy_3_3_14_fu_685_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_3_3_8_fu_158 : b_copy_3_3_9_fu_679_p3);

assign b_copy_3_3_15_fu_692_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_3_3_19_reg_1362 : b_copy_3_3_11_fu_154);

assign b_copy_3_3_16_fu_705_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_7_fu_672_p3 : b_copy_3_3_12_fu_162);

assign b_copy_3_3_17_fu_712_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_14_fu_685_p3 : b_copy_3_3_8_fu_158);

assign b_copy_3_3_18_fu_719_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_15_fu_692_p3 : b_copy_3_3_11_fu_154);

assign b_copy_3_3_2_fu_652_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : b_copy_3_3_4_fu_645_p3);

assign b_copy_3_3_3_fu_698_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_2_fu_652_p3 : b_copy_3_3_1_fu_166);

assign b_copy_3_3_4_fu_645_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : b_copy_3_3_fu_639_p3);

assign b_copy_3_3_5_fu_659_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? b_copy_3_3_19_reg_1362 : b_copy_3_3_12_fu_162);

assign b_copy_3_3_6_fu_665_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_3_3_12_fu_162 : b_copy_3_3_5_fu_659_p3);

assign b_copy_3_3_7_fu_672_p3 = ((sel_tmp4_reg_1411[0:0] === 1'b1) ? b_copy_3_3_12_fu_162 : b_copy_3_3_6_fu_665_p3);

assign b_copy_3_3_9_fu_679_p3 = ((sel_tmp2_reg_1398[0:0] === 1'b1) ? b_copy_3_3_19_reg_1362 : b_copy_3_3_8_fu_158);

assign b_copy_3_3_fu_639_p3 = ((sel_tmp_reg_1388[0:0] === 1'b1) ? b_copy_3_3_1_fu_166 : b_copy_3_3_19_reg_1362);

assign exitcond_flatten_fu_283_p2 = ((indvar_flatten_phi_fu_254_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_301_p2 = ((j_phi_fu_276_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_1090_p0 = {{1'b1}, {ap_pipeline_reg_pp0_iter1_i2_mid2_v_reg_1295}};

assign grp_fu_726_p1 = ((tmp_5_reg_1375[0:0] === 1'b1) ? a_row_2_reg_1383 : a_row_2_2_fu_98);

assign i2_mid2_v_fu_335_p3 = ((exitcond_fu_301_p2[0:0] === 1'b1) ? i_1_fu_295_p2 : i_phi_fu_265_p4);

assign i_1_fu_295_p2 = (ap_const_lv3_1 + i_phi_fu_265_p4);

assign indvar_flatten_next_fu_289_p2 = (indvar_flatten_phi_fu_254_p4 + ap_const_lv5_1);

assign j_1_fu_918_p2 = (ap_const_lv3_1 + j_mid2_reg_1265);

assign j_mid2_fu_307_p3 = ((exitcond_fu_301_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_276_p4);

assign sel_tmp2_fu_443_p2 = ((tmp_reg_1318 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_448_p2 = ((tmp_reg_1318 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_438_p2 = ((tmp_reg_1318 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_321_p2 = ((i_phi_fu_265_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp8_fu_1100_p2 = (tmp_11_1_reg_1502 + tmp_s_reg_1497);

assign tmp9_fu_1104_p2 = (tmp_11_3_reg_1492 + tmp_11_2_reg_1487);

assign tmp_10_fu_365_p2 = (tmp_1_reg_1301 | ap_const_lv5_1);

assign tmp_11_fu_370_p3 = {{ap_const_lv59_0}, {tmp_10_fu_365_p2}};

assign tmp_12_3_fu_1108_p2 = (tmp8_fu_1100_p2 + tmp9_fu_1104_p2);

assign tmp_12_fu_393_p2 = (tmp_1_reg_1301 | ap_const_lv5_2);

assign tmp_13_fu_398_p3 = {{ap_const_lv59_0}, {tmp_12_fu_393_p2}};

assign tmp_14_fu_419_p2 = (tmp_1_reg_1301 | ap_const_lv5_3);

assign tmp_15_fu_424_p3 = {{ap_const_lv59_0}, {tmp_14_fu_419_p2}};

assign tmp_16_fu_1114_p3 = {{grp_fu_1090_p2}, {ap_const_lv2_0}};

assign tmp_17_fu_631_p3 = {{ap_const_lv61_2}, {j_mid2_reg_1265}};

assign tmp_18_fu_799_p2 = ($signed(ap_const_lv5_14) + $signed(tmp_8_cast_fu_796_p1));

assign tmp_19_cast_fu_805_p1 = tmp_18_fu_799_p2;

assign tmp_19_fu_382_p2 = (ap_const_lv4_4 + tmp_8_cast5_fu_379_p1);

assign tmp_1_fu_343_p3 = {{i2_mid2_v_fu_335_p3}, {ap_const_lv2_0}};

assign tmp_20_cast_fu_388_p1 = tmp_19_fu_382_p2;

assign tmp_20_fu_1125_p2 = (tmp_16_fu_1114_p3 + tmp_8_cast6_fu_1122_p1);

assign tmp_21_cast_fu_1131_p1 = tmp_20_fu_1125_p2;

assign tmp_3_fu_901_p1 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_15_fu_866_p3 : b_copy_0_3_11_fu_106);

assign tmp_3_fu_901_p2 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_14_fu_859_p3 : b_copy_0_3_8_fu_110);

assign tmp_3_fu_901_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_7_fu_845_p3 : b_copy_0_3_12_fu_114);

assign tmp_3_fu_901_p4 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_0_3_2_fu_824_p3 : b_copy_0_3_1_fu_118);

assign tmp_4_fu_1050_p1 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_15_fu_1011_p3 : b_copy_1_3_11_fu_122);

assign tmp_4_fu_1050_p2 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_14_fu_1004_p3 : b_copy_1_3_8_fu_126);

assign tmp_4_fu_1050_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_7_fu_990_p3 : b_copy_1_3_12_fu_130);

assign tmp_4_fu_1050_p4 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_1_3_2_fu_969_p3 : b_copy_1_3_1_fu_134);

assign tmp_5_fu_433_p2 = ((j_mid2_reg_1265 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_549_p1 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_15_fu_514_p3 : b_copy_2_3_11_fu_138);

assign tmp_6_fu_549_p2 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_14_fu_506_p3 : b_copy_2_3_8_fu_142);

assign tmp_6_fu_549_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_7_fu_491_p3 : b_copy_2_3_12_fu_146);

assign tmp_6_fu_549_p4 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_2_3_2_fu_468_p3 : b_copy_2_3_1_fu_150);

assign tmp_7_fu_731_p1 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_15_fu_692_p3 : b_copy_3_3_11_fu_154);

assign tmp_7_fu_731_p2 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_14_fu_685_p3 : b_copy_3_3_8_fu_158);

assign tmp_7_fu_731_p3 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_7_fu_672_p3 : b_copy_3_3_12_fu_162);

assign tmp_7_fu_731_p4 = ((tmp_mid2_reg_1275[0:0] === 1'b1) ? b_copy_3_3_2_fu_652_p3 : b_copy_3_3_1_fu_166);

assign tmp_8_cast5_fu_379_p1 = j_mid2_reg_1265;

assign tmp_8_cast6_fu_1122_p1 = ap_pipeline_reg_pp0_iter2_j_mid2_reg_1265;

assign tmp_8_cast_fu_796_p1 = j_mid2_reg_1265;

assign tmp_8_fu_356_p1 = j_mid2_fu_307_p3;

assign tmp_9_fu_351_p1 = tmp_1_fu_343_p3;

assign tmp_fu_361_p1 = j_mid2_fu_307_p3[1:0];

assign tmp_mid1_fu_315_p2 = ((i_1_fu_295_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_327_p3 = ((exitcond_fu_301_p2[0:0] === 1'b1) ? tmp_mid1_fu_315_p2 : tmp1_fu_321_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1301[1:0] <= 2'b00;
end

endmodule //matrixmul
