

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Tue Apr  4 19:42:20 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul
* Solution:       matrixmul_6b
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.52|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   88|   88|   89|   89|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- L_col   |   86|   86|        27|          4|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 27


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 29
* Pipeline: 1
  Pipeline-0: II = 4, D = 27, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	29  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	2  / true
29 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_load_s (7)  [1/1] 0.00ns
:0  %a_row_load_s = alloca float

ST_1: a_row_load_9 (8)  [1/1] 0.00ns
:1  %a_row_load_9 = alloca float

ST_1: a_row_load_8 (9)  [1/1] 0.00ns
:2  %a_row_load_8 = alloca float

ST_1: a_row_load_7 (10)  [1/1] 0.00ns
:3  %a_row_load_7 = alloca float

ST_1: b_copy_0_3_11 (11)  [1/1] 0.00ns
:4  %b_copy_0_3_11 = alloca float

ST_1: b_copy_0_3_8 (12)  [1/1] 0.00ns
:5  %b_copy_0_3_8 = alloca float

ST_1: b_copy_0_3_12 (13)  [1/1] 0.00ns
:6  %b_copy_0_3_12 = alloca float

ST_1: b_copy_0_3_1 (14)  [1/1] 0.00ns
:7  %b_copy_0_3_1 = alloca float

ST_1: b_copy_1_3_11 (15)  [1/1] 0.00ns
:8  %b_copy_1_3_11 = alloca float

ST_1: b_copy_1_3_8 (16)  [1/1] 0.00ns
:9  %b_copy_1_3_8 = alloca float

ST_1: b_copy_1_3_12 (17)  [1/1] 0.00ns
:10  %b_copy_1_3_12 = alloca float

ST_1: b_copy_1_3_1 (18)  [1/1] 0.00ns
:11  %b_copy_1_3_1 = alloca float

ST_1: b_copy_2_3_11 (19)  [1/1] 0.00ns
:12  %b_copy_2_3_11 = alloca float

ST_1: b_copy_2_3_8 (20)  [1/1] 0.00ns
:13  %b_copy_2_3_8 = alloca float

ST_1: b_copy_2_3_12 (21)  [1/1] 0.00ns
:14  %b_copy_2_3_12 = alloca float

ST_1: b_copy_2_3_1 (22)  [1/1] 0.00ns
:15  %b_copy_2_3_1 = alloca float

ST_1: b_copy_3_3_11 (23)  [1/1] 0.00ns
:16  %b_copy_3_3_11 = alloca float

ST_1: b_copy_3_3_8 (24)  [1/1] 0.00ns
:17  %b_copy_3_3_8 = alloca float

ST_1: b_copy_3_3_12 (25)  [1/1] 0.00ns
:18  %b_copy_3_3_12 = alloca float

ST_1: b_copy_3_3_1 (26)  [1/1] 0.00ns
:19  %b_copy_3_3_1 = alloca float

ST_1: StgValue_50 (27)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_5), !map !7

ST_1: StgValue_51 (28)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_4), !map !14

ST_1: StgValue_52 (29)  [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_3), !map !20

ST_1: StgValue_53 (30)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_2), !map !26

ST_1: StgValue_54 (31)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_1), !map !32

ST_1: StgValue_55 (32)  [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %a_0), !map !38

ST_1: StgValue_56 (33)  [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind

ST_1: StgValue_57 (34)  [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecInterface([8 x float]* %a_0, [8 x float]* %a_1, [8 x float]* %a_2, [8 x float]* %a_3, [8 x float]* %a_4, [8 x float]* %a_5, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_58 (35)  [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecMemCore([8 x float]* %a_0, [8 x float]* %a_1, [8 x float]* %a_2, [8 x float]* %a_3, [8 x float]* %a_4, [8 x float]* %a_5, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_59 (36)  [1/1] 1.57ns  loc: matrixmul.cpp:62
:29  br label %.preheader7


 <State 2>: 5.70ns
ST_2: indvar_flatten (38)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i5 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit101 ]

ST_2: i (39)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7:1  %i = phi i3 [ 0, %0 ], [ %newIndex1_mid2_v_v, %.loopexit101 ]

ST_2: j (40)  [1/1] 0.00ns
.preheader7:2  %j = phi i3 [ 0, %0 ], [ %j_1, %.loopexit101 ]

ST_2: tmp (41)  [1/1] 1.94ns  loc: matrixmul.cpp:75
.preheader7:3  %tmp = icmp eq i3 %i, 0

ST_2: tmp_11 (42)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7:4  %tmp_11 = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %i, i32 1, i32 2)

ST_2: icmp (43)  [1/1] 1.54ns  loc: matrixmul.cpp:71
.preheader7:5  %icmp = icmp eq i2 %tmp_11, 0

ST_2: tmp_3 (44)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node cond)
.preheader7:6  %tmp_3 = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %i, i32 1, i32 2)

ST_2: tmp_1 (45)  [1/1] 0.00ns  loc: matrixmul.cpp:85 (grouped into LUT with out node cond)
.preheader7:7  %tmp_1 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i2.i1(i1 false, i2 %tmp_3, i1 false)

ST_2: arrayNo92_mask (46)  [1/1] 0.00ns  loc: matrixmul.cpp:85 (grouped into LUT with out node cond)
.preheader7:8  %arrayNo92_mask = or i4 %tmp_1, -8

ST_2: cond (47)  [1/1] 2.33ns  loc: matrixmul.cpp:85 (out node of the LUT)
.preheader7:9  %cond = icmp eq i4 %arrayNo92_mask, -8

ST_2: exitcond_flatten (48)  [1/1] 2.37ns
.preheader7:10  %exitcond_flatten = icmp eq i5 %indvar_flatten, -16

ST_2: indvar_flatten_next (49)  [1/1] 1.67ns
.preheader7:11  %indvar_flatten_next = add i5 %indvar_flatten, 1

ST_2: StgValue_72 (50)  [1/1] 0.00ns
.preheader7:12  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (72)  [1/1] 0.75ns  loc: matrixmul.cpp:62
.preheader7.preheader:20  %i_1 = add i3 1, %i

ST_2: exitcond (75)  [1/1] 1.94ns  loc: matrixmul.cpp:63
.preheader7.preheader:23  %exitcond = icmp eq i3 %j, -4

ST_2: j_mid2 (76)  [1/1] 1.37ns  loc: matrixmul.cpp:63
.preheader7.preheader:24  %j_mid2 = select i1 %exitcond, i3 0, i3 %j

ST_2: tmp_mid1 (77)  [1/1] 1.94ns  loc: matrixmul.cpp:75
.preheader7.preheader:25  %tmp_mid1 = icmp eq i3 %i_1, 0

ST_2: tmp_mid2 (78)  [1/1] 1.37ns  loc: matrixmul.cpp:75
.preheader7.preheader:26  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp

ST_2: newIndex1_mid2_v_v (79)  [1/1] 1.37ns  loc: matrixmul.cpp:63
.preheader7.preheader:27  %newIndex1_mid2_v_v = select i1 %exitcond, i3 %i_1, i3 %i

ST_2: tmp_12 (80)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:28  %tmp_12 = shl i3 %newIndex1_mid2_v_v, 2

ST_2: tmp_13 (81)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:29  %tmp_13 = zext i3 %tmp_12 to i64

ST_2: a_0_addr (83)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:31  %a_0_addr = getelementptr [8 x float]* %a_0, i64 0, i64 %tmp_13

ST_2: a_1_addr (93)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:41  %a_1_addr = getelementptr [8 x float]* %a_1, i64 0, i64 %tmp_13

ST_2: tmp_23 (97)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:45  %tmp_23 = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %i_1, i32 1, i32 2)

ST_2: icmp8 (98)  [1/1] 1.54ns  loc: matrixmul.cpp:71
.preheader7.preheader:46  %icmp8 = icmp eq i2 %tmp_23, 0

ST_2: cond1_mid2 (99)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:47  %cond1_mid2 = select i1 %exitcond, i1 %icmp8, i1 %icmp

ST_2: tmp_20 (100)  [1/1] 0.00ns  loc: matrixmul.cpp:62 (grouped into LUT with out node cond_mid1)
.preheader7.preheader:48  %tmp_20 = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %i_1, i32 1, i32 2)

ST_2: tmp_1_mid1 (101)  [1/1] 0.00ns  loc: matrixmul.cpp:85 (grouped into LUT with out node cond_mid1)
.preheader7.preheader:49  %tmp_1_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i2.i1(i1 false, i2 %tmp_20, i1 false)

ST_2: arrayNo92_mask_mid1 (102)  [1/1] 0.00ns  loc: matrixmul.cpp:85 (grouped into LUT with out node cond_mid1)
.preheader7.preheader:50  %arrayNo92_mask_mid1 = or i4 %tmp_1_mid1, -8

ST_2: cond_mid1 (103)  [1/1] 2.33ns  loc: matrixmul.cpp:85 (out node of the LUT)
.preheader7.preheader:51  %cond_mid1 = icmp eq i4 %arrayNo92_mask_mid1, -8

ST_2: cond_mid2 (104)  [1/1] 1.37ns  loc: matrixmul.cpp:85
.preheader7.preheader:52  %cond_mid2 = select i1 %exitcond, i1 %cond_mid1, i1 %cond

ST_2: a_0_load (109)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:57  %a_0_load = load float* %a_0_addr, align 4

ST_2: a_1_load (110)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:58  %a_1_load = load float* %a_1_addr, align 4

ST_2: tmp_8 (129)  [1/1] 0.00ns  loc: matrixmul.cpp:77
.preheader7.preheader:77  %tmp_8 = zext i3 %j_mid2 to i64

ST_2: a_2_addr (131)  [1/1] 0.00ns  loc: matrixmul.cpp:77
.preheader7.preheader:79  %a_2_addr = getelementptr [8 x float]* %a_2, i64 0, i64 %tmp_8

ST_2: a_3_addr (135)  [1/1] 0.00ns  loc: matrixmul.cpp:77
.preheader7.preheader:83  %a_3_addr = getelementptr [8 x float]* %a_3, i64 0, i64 %tmp_8

ST_2: b_copy_0_3_19 (141)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:89  %b_copy_0_3_19 = load float* %a_2_addr, align 4

ST_2: tmp_24 (142)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:90  %tmp_24 = trunc i3 %j_mid2 to i2

ST_2: b_copy_2_3_19 (165)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:113  %b_copy_2_3_19 = load float* %a_3_addr, align 4

ST_2: StgValue_99 (233)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:181  br i1 %cond_mid2, label %branch28, label %branch29


 <State 3>: 6.70ns
ST_3: b_copy_0_3_11_load (56)  [1/1] 0.00ns
.preheader7.preheader:4  %b_copy_0_3_11_load = load float* %b_copy_0_3_11

ST_3: b_copy_0_3_8_load (57)  [1/1] 0.00ns
.preheader7.preheader:5  %b_copy_0_3_8_load = load float* %b_copy_0_3_8

ST_3: b_copy_0_3_12_load (58)  [1/1] 0.00ns
.preheader7.preheader:6  %b_copy_0_3_12_load = load float* %b_copy_0_3_12

ST_3: b_copy_0_3_1_load (59)  [1/1] 0.00ns
.preheader7.preheader:7  %b_copy_0_3_1_load = load float* %b_copy_0_3_1

ST_3: tmp_14 (84)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:32  %tmp_14 = or i3 %tmp_12, 1

ST_3: tmp_15 (85)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:33  %tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 0, i3 %tmp_14)

ST_3: a_0_addr_1 (86)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:34  %a_0_addr_1 = getelementptr [8 x float]* %a_0, i64 0, i64 %tmp_15

ST_3: a_1_addr_1 (94)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:42  %a_1_addr_1 = getelementptr [8 x float]* %a_1, i64 0, i64 %tmp_15

ST_3: tmp_4 (106)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:54  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_3: tmp_5 (108)  [1/1] 1.94ns  loc: matrixmul.cpp:69
.preheader7.preheader:56  %tmp_5 = icmp eq i3 %j_mid2, 0

ST_3: a_0_load (109)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:57  %a_0_load = load float* %a_0_addr, align 4

ST_3: a_1_load (110)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:58  %a_1_load = load float* %a_1_addr, align 4

ST_3: a_load_0_phi (111)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:59  %a_load_0_phi = select i1 %cond1_mid2, float %a_0_load, float %a_1_load

ST_3: a_0_load_1 (112)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:60  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_3: a_1_load_1 (113)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:61  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_3: tmp_8_cast (130)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:78  %tmp_8_cast = zext i3 %j_mid2 to i4

ST_3: tmp_21 (132)  [1/1] 0.75ns  loc: matrixmul.cpp:63
.preheader7.preheader:80  %tmp_21 = add i4 4, %tmp_8_cast

ST_3: tmp_21_cast (133)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:81  %tmp_21_cast = zext i4 %tmp_21 to i64

ST_3: a_2_addr_1 (134)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:82  %a_2_addr_1 = getelementptr [8 x float]* %a_2, i64 0, i64 %tmp_21_cast

ST_3: a_3_addr_1 (136)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:84  %a_3_addr_1 = getelementptr [8 x float]* %a_3, i64 0, i64 %tmp_21_cast

ST_3: b_copy_0_3_19 (141)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:89  %b_copy_0_3_19 = load float* %a_2_addr, align 4

ST_3: sel_tmp5 (143)  [1/1] 1.54ns  loc: matrixmul.cpp:63
.preheader7.preheader:91  %sel_tmp5 = icmp eq i2 %tmp_24, -2

ST_3: b_copy_0_3 (144)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_4)
.preheader7.preheader:92  %b_copy_0_3 = select i1 %sel_tmp5, float %b_copy_0_3_1_load, float %b_copy_0_3_19

ST_3: sel_tmp7 (145)  [1/1] 1.54ns  loc: matrixmul.cpp:63
.preheader7.preheader:93  %sel_tmp7 = icmp eq i2 %tmp_24, 1

ST_3: b_copy_0_3_4 (146)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:94  %b_copy_0_3_4 = select i1 %sel_tmp7, float %b_copy_0_3_1_load, float %b_copy_0_3

ST_3: sel_tmp9 (147)  [1/1] 1.54ns  loc: matrixmul.cpp:63
.preheader7.preheader:95  %sel_tmp9 = icmp eq i2 %tmp_24, 0

ST_3: b_copy_0_3_2 (148)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_3)
.preheader7.preheader:96  %b_copy_0_3_2 = select i1 %sel_tmp9, float %b_copy_0_3_1_load, float %b_copy_0_3_4

ST_3: b_copy_0_3_5 (149)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_6)
.preheader7.preheader:97  %b_copy_0_3_5 = select i1 %sel_tmp5, float %b_copy_0_3_19, float %b_copy_0_3_12_load

ST_3: b_copy_0_3_6 (150)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:98  %b_copy_0_3_6 = select i1 %sel_tmp7, float %b_copy_0_3_12_load, float %b_copy_0_3_5

ST_3: b_copy_0_3_7 (151)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_16)
.preheader7.preheader:99  %b_copy_0_3_7 = select i1 %sel_tmp9, float %b_copy_0_3_12_load, float %b_copy_0_3_6

ST_3: b_copy_0_3_9 (152)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_14)
.preheader7.preheader:100  %b_copy_0_3_9 = select i1 %sel_tmp7, float %b_copy_0_3_19, float %b_copy_0_3_8_load

ST_3: b_copy_0_3_14 (153)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:101  %b_copy_0_3_14 = select i1 %sel_tmp9, float %b_copy_0_3_8_load, float %b_copy_0_3_9

ST_3: b_copy_0_3_15 (154)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_0_3_18)
.preheader7.preheader:102  %b_copy_0_3_15 = select i1 %sel_tmp9, float %b_copy_0_3_19, float %b_copy_0_3_11_load

ST_3: b_copy_1_3_19 (155)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:103  %b_copy_1_3_19 = load float* %a_2_addr_1, align 4

ST_3: b_copy_2_3_19 (165)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:113  %b_copy_2_3_19 = load float* %a_3_addr, align 4

ST_3: b_copy_3_3_19 (175)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:123  %b_copy_3_3_19 = load float* %a_3_addr_1, align 4

ST_3: b_copy_0_3_3 (197)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:145  %b_copy_0_3_3 = select i1 %tmp_mid2, float %b_copy_0_3_2, float %b_copy_0_3_1_load

ST_3: b_copy_0_3_16 (198)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:146  %b_copy_0_3_16 = select i1 %tmp_mid2, float %b_copy_0_3_7, float %b_copy_0_3_12_load

ST_3: b_copy_0_3_17 (199)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:147  %b_copy_0_3_17 = select i1 %tmp_mid2, float %b_copy_0_3_14, float %b_copy_0_3_8_load

ST_3: b_copy_0_3_18 (200)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:148  %b_copy_0_3_18 = select i1 %tmp_mid2, float %b_copy_0_3_15, float %b_copy_0_3_11_load

ST_3: tmp_6 (201)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:149  %tmp_6 = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %b_copy_0_3_18, float %b_copy_0_3_17, float %b_copy_0_3_16, float %b_copy_0_3_3, i2 %tmp_24)

ST_3: StgValue_141 (225)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:173  store float %b_copy_0_3_3, float* %b_copy_0_3_1

ST_3: StgValue_142 (226)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:174  store float %b_copy_0_3_16, float* %b_copy_0_3_12

ST_3: StgValue_143 (227)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:175  store float %b_copy_0_3_17, float* %b_copy_0_3_8

ST_3: StgValue_144 (228)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:176  store float %b_copy_0_3_18, float* %b_copy_0_3_11

ST_3: empty (241)  [1/1] 0.00ns  loc: matrixmul.cpp:86
.loopexit101:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_4) nounwind

ST_3: j_1 (242)  [1/1] 0.75ns  loc: matrixmul.cpp:63
.loopexit101:1  %j_1 = add i3 %j_mid2, 1

ST_3: StgValue_147 (243)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.loopexit101:2  br label %.preheader7


 <State 4>: 8.52ns
ST_4: a_row_load_4 (52)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_load_4 = load float* %a_row_load_s

ST_4: b_copy_1_3_11_load (60)  [1/1] 0.00ns
.preheader7.preheader:8  %b_copy_1_3_11_load = load float* %b_copy_1_3_11

ST_4: b_copy_1_3_8_load (61)  [1/1] 0.00ns
.preheader7.preheader:9  %b_copy_1_3_8_load = load float* %b_copy_1_3_8

ST_4: b_copy_1_3_12_load (62)  [1/1] 0.00ns
.preheader7.preheader:10  %b_copy_1_3_12_load = load float* %b_copy_1_3_12

ST_4: b_copy_1_3_1_load (63)  [1/1] 0.00ns
.preheader7.preheader:11  %b_copy_1_3_1_load = load float* %b_copy_1_3_1

ST_4: b_copy_2_3_11_load (64)  [1/1] 0.00ns
.preheader7.preheader:12  %b_copy_2_3_11_load = load float* %b_copy_2_3_11

ST_4: b_copy_2_3_8_load (65)  [1/1] 0.00ns
.preheader7.preheader:13  %b_copy_2_3_8_load = load float* %b_copy_2_3_8

ST_4: b_copy_2_3_12_load (66)  [1/1] 0.00ns
.preheader7.preheader:14  %b_copy_2_3_12_load = load float* %b_copy_2_3_12

ST_4: b_copy_2_3_1_load (67)  [1/1] 0.00ns
.preheader7.preheader:15  %b_copy_2_3_1_load = load float* %b_copy_2_3_1

ST_4: b_copy_3_3_11_load (68)  [1/1] 0.00ns
.preheader7.preheader:16  %b_copy_3_3_11_load = load float* %b_copy_3_3_11

ST_4: b_copy_3_3_8_load (69)  [1/1] 0.00ns
.preheader7.preheader:17  %b_copy_3_3_8_load = load float* %b_copy_3_3_8

ST_4: b_copy_3_3_12_load (70)  [1/1] 0.00ns
.preheader7.preheader:18  %b_copy_3_3_12_load = load float* %b_copy_3_3_12

ST_4: b_copy_3_3_1_load (71)  [1/1] 0.00ns
.preheader7.preheader:19  %b_copy_3_3_1_load = load float* %b_copy_3_3_1

ST_4: tmp_16 (87)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:35  %tmp_16 = or i3 %tmp_12, 2

ST_4: tmp_17 (88)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:36  %tmp_17 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 0, i3 %tmp_16)

ST_4: a_0_addr_2 (89)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:37  %a_0_addr_2 = getelementptr [8 x float]* %a_0, i64 0, i64 %tmp_17

ST_4: a_1_addr_2 (95)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:43  %a_1_addr_2 = getelementptr [8 x float]* %a_1, i64 0, i64 %tmp_17

ST_4: a_0_load_1 (112)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:60  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_4: a_1_load_1 (113)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:61  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_4: a_load_17_phi (114)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:62  %a_load_17_phi = select i1 %cond1_mid2, float %a_0_load_1, float %a_1_load_1

ST_4: a_0_load_2 (115)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:63  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_4: a_1_load_2 (116)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:64  %a_1_load_2 = load float* %a_1_addr_2, align 4

ST_4: sel_tmp1 (121)  [1/1] 1.37ns  loc: matrixmul.cpp:69
.preheader7.preheader:69  %sel_tmp1 = and i1 %tmp_5, %cond1_mid2

ST_4: sel_tmp4 (127)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_load)
.preheader7.preheader:75  %sel_tmp4 = select i1 %tmp_5, float %a_load_0_phi, float %a_row_load_4

ST_4: a_row_load (128)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:76  %a_row_load = select i1 %sel_tmp1, float %a_load_0_phi, float %sel_tmp4

ST_4: b_copy_1_3_19 (155)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:103  %b_copy_1_3_19 = load float* %a_2_addr_1, align 4

ST_4: b_copy_1_3 (156)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_4)
.preheader7.preheader:104  %b_copy_1_3 = select i1 %sel_tmp5, float %b_copy_1_3_1_load, float %b_copy_1_3_19

ST_4: b_copy_1_3_4 (157)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:105  %b_copy_1_3_4 = select i1 %sel_tmp7, float %b_copy_1_3_1_load, float %b_copy_1_3

ST_4: b_copy_1_3_2 (158)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_3)
.preheader7.preheader:106  %b_copy_1_3_2 = select i1 %sel_tmp9, float %b_copy_1_3_1_load, float %b_copy_1_3_4

ST_4: b_copy_1_3_5 (159)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_6)
.preheader7.preheader:107  %b_copy_1_3_5 = select i1 %sel_tmp5, float %b_copy_1_3_19, float %b_copy_1_3_12_load

ST_4: b_copy_1_3_6 (160)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:108  %b_copy_1_3_6 = select i1 %sel_tmp7, float %b_copy_1_3_12_load, float %b_copy_1_3_5

ST_4: b_copy_1_3_7 (161)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_16)
.preheader7.preheader:109  %b_copy_1_3_7 = select i1 %sel_tmp9, float %b_copy_1_3_12_load, float %b_copy_1_3_6

ST_4: b_copy_1_3_9 (162)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_14)
.preheader7.preheader:110  %b_copy_1_3_9 = select i1 %sel_tmp7, float %b_copy_1_3_19, float %b_copy_1_3_8_load

ST_4: b_copy_1_3_14 (163)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:111  %b_copy_1_3_14 = select i1 %sel_tmp9, float %b_copy_1_3_8_load, float %b_copy_1_3_9

ST_4: b_copy_1_3_15 (164)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_1_3_18)
.preheader7.preheader:112  %b_copy_1_3_15 = select i1 %sel_tmp9, float %b_copy_1_3_19, float %b_copy_1_3_11_load

ST_4: b_copy_2_3 (166)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_4)
.preheader7.preheader:114  %b_copy_2_3 = select i1 %sel_tmp5, float %b_copy_2_3_1_load, float %b_copy_2_3_19

ST_4: b_copy_2_3_4 (167)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:115  %b_copy_2_3_4 = select i1 %sel_tmp7, float %b_copy_2_3_1_load, float %b_copy_2_3

ST_4: b_copy_2_3_2 (168)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_3)
.preheader7.preheader:116  %b_copy_2_3_2 = select i1 %sel_tmp9, float %b_copy_2_3_1_load, float %b_copy_2_3_4

ST_4: b_copy_2_3_5 (169)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_6)
.preheader7.preheader:117  %b_copy_2_3_5 = select i1 %sel_tmp5, float %b_copy_2_3_19, float %b_copy_2_3_12_load

ST_4: b_copy_2_3_6 (170)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:118  %b_copy_2_3_6 = select i1 %sel_tmp7, float %b_copy_2_3_12_load, float %b_copy_2_3_5

ST_4: b_copy_2_3_7 (171)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_16)
.preheader7.preheader:119  %b_copy_2_3_7 = select i1 %sel_tmp9, float %b_copy_2_3_12_load, float %b_copy_2_3_6

ST_4: b_copy_2_3_9 (172)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_14)
.preheader7.preheader:120  %b_copy_2_3_9 = select i1 %sel_tmp7, float %b_copy_2_3_19, float %b_copy_2_3_8_load

ST_4: b_copy_2_3_14 (173)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:121  %b_copy_2_3_14 = select i1 %sel_tmp9, float %b_copy_2_3_8_load, float %b_copy_2_3_9

ST_4: b_copy_2_3_15 (174)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_2_3_18)
.preheader7.preheader:122  %b_copy_2_3_15 = select i1 %sel_tmp9, float %b_copy_2_3_19, float %b_copy_2_3_11_load

ST_4: b_copy_3_3_19 (175)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:123  %b_copy_3_3_19 = load float* %a_3_addr_1, align 4

ST_4: b_copy_3_3 (176)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_4)
.preheader7.preheader:124  %b_copy_3_3 = select i1 %sel_tmp5, float %b_copy_3_3_1_load, float %b_copy_3_3_19

ST_4: b_copy_3_3_4 (177)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:125  %b_copy_3_3_4 = select i1 %sel_tmp7, float %b_copy_3_3_1_load, float %b_copy_3_3

ST_4: b_copy_3_3_2 (178)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_3)
.preheader7.preheader:126  %b_copy_3_3_2 = select i1 %sel_tmp9, float %b_copy_3_3_1_load, float %b_copy_3_3_4

ST_4: b_copy_3_3_5 (179)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_6)
.preheader7.preheader:127  %b_copy_3_3_5 = select i1 %sel_tmp5, float %b_copy_3_3_19, float %b_copy_3_3_12_load

ST_4: b_copy_3_3_6 (180)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:128  %b_copy_3_3_6 = select i1 %sel_tmp7, float %b_copy_3_3_12_load, float %b_copy_3_3_5

ST_4: b_copy_3_3_7 (181)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_16)
.preheader7.preheader:129  %b_copy_3_3_7 = select i1 %sel_tmp9, float %b_copy_3_3_12_load, float %b_copy_3_3_6

ST_4: b_copy_3_3_9 (182)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_14)
.preheader7.preheader:130  %b_copy_3_3_9 = select i1 %sel_tmp7, float %b_copy_3_3_19, float %b_copy_3_3_8_load

ST_4: b_copy_3_3_14 (183)  [1/1] 1.37ns  loc: matrixmul.cpp:63 (out node of the LUT)
.preheader7.preheader:131  %b_copy_3_3_14 = select i1 %sel_tmp9, float %b_copy_3_3_8_load, float %b_copy_3_3_9

ST_4: b_copy_3_3_15 (184)  [1/1] 0.00ns  loc: matrixmul.cpp:63 (grouped into LUT with out node b_copy_3_3_18)
.preheader7.preheader:132  %b_copy_3_3_15 = select i1 %sel_tmp9, float %b_copy_3_3_19, float %b_copy_3_3_11_load

ST_4: b_copy_3_3_3 (185)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:133  %b_copy_3_3_3 = select i1 %tmp_mid2, float %b_copy_3_3_2, float %b_copy_3_3_1_load

ST_4: b_copy_3_3_16 (186)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:134  %b_copy_3_3_16 = select i1 %tmp_mid2, float %b_copy_3_3_7, float %b_copy_3_3_12_load

ST_4: b_copy_3_3_17 (187)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:135  %b_copy_3_3_17 = select i1 %tmp_mid2, float %b_copy_3_3_14, float %b_copy_3_3_8_load

ST_4: b_copy_3_3_18 (188)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:136  %b_copy_3_3_18 = select i1 %tmp_mid2, float %b_copy_3_3_15, float %b_copy_3_3_11_load

ST_4: b_copy_2_3_3 (189)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:137  %b_copy_2_3_3 = select i1 %tmp_mid2, float %b_copy_2_3_2, float %b_copy_2_3_1_load

ST_4: b_copy_2_3_16 (190)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:138  %b_copy_2_3_16 = select i1 %tmp_mid2, float %b_copy_2_3_7, float %b_copy_2_3_12_load

ST_4: b_copy_2_3_17 (191)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:139  %b_copy_2_3_17 = select i1 %tmp_mid2, float %b_copy_2_3_14, float %b_copy_2_3_8_load

ST_4: b_copy_2_3_18 (192)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:140  %b_copy_2_3_18 = select i1 %tmp_mid2, float %b_copy_2_3_15, float %b_copy_2_3_11_load

ST_4: b_copy_1_3_3 (193)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:141  %b_copy_1_3_3 = select i1 %tmp_mid2, float %b_copy_1_3_2, float %b_copy_1_3_1_load

ST_4: b_copy_1_3_16 (194)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:142  %b_copy_1_3_16 = select i1 %tmp_mid2, float %b_copy_1_3_7, float %b_copy_1_3_12_load

ST_4: b_copy_1_3_17 (195)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:143  %b_copy_1_3_17 = select i1 %tmp_mid2, float %b_copy_1_3_14, float %b_copy_1_3_8_load

ST_4: b_copy_1_3_18 (196)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:144  %b_copy_1_3_18 = select i1 %tmp_mid2, float %b_copy_1_3_15, float %b_copy_1_3_11_load

ST_4: tmp_s (202)  [4/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:150  %tmp_s = fmul float %a_row_load, %tmp_6

ST_4: tmp_7 (204)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:152  %tmp_7 = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %b_copy_1_3_18, float %b_copy_1_3_17, float %b_copy_1_3_16, float %b_copy_1_3_3, i2 %tmp_24)

ST_4: tmp_9 (207)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:155  %tmp_9 = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %b_copy_2_3_18, float %b_copy_2_3_17, float %b_copy_2_3_16, float %b_copy_2_3_3, i2 %tmp_24)

ST_4: tmp_10 (210)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:158  %tmp_10 = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %b_copy_3_3_18, float %b_copy_3_3_17, float %b_copy_3_3_16, float %b_copy_3_3_3, i2 %tmp_24)

ST_4: StgValue_218 (213)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:161  store float %b_copy_3_3_3, float* %b_copy_3_3_1

ST_4: StgValue_219 (214)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:162  store float %b_copy_3_3_16, float* %b_copy_3_3_12

ST_4: StgValue_220 (215)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:163  store float %b_copy_3_3_17, float* %b_copy_3_3_8

ST_4: StgValue_221 (216)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:164  store float %b_copy_3_3_18, float* %b_copy_3_3_11

ST_4: StgValue_222 (217)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:165  store float %b_copy_2_3_3, float* %b_copy_2_3_1

ST_4: StgValue_223 (218)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:166  store float %b_copy_2_3_16, float* %b_copy_2_3_12

ST_4: StgValue_224 (219)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:167  store float %b_copy_2_3_17, float* %b_copy_2_3_8

ST_4: StgValue_225 (220)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:168  store float %b_copy_2_3_18, float* %b_copy_2_3_11

ST_4: StgValue_226 (221)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:169  store float %b_copy_1_3_3, float* %b_copy_1_3_1

ST_4: StgValue_227 (222)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:170  store float %b_copy_1_3_16, float* %b_copy_1_3_12

ST_4: StgValue_228 (223)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:171  store float %b_copy_1_3_17, float* %b_copy_1_3_8

ST_4: StgValue_229 (224)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:172  store float %b_copy_1_3_18, float* %b_copy_1_3_11

ST_4: StgValue_230 (232)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:180  store float %a_row_load, float* %a_row_load_s


 <State 5>: 7.15ns
ST_5: a_row_load_5 (53)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_load_5 = load float* %a_row_load_9

ST_5: tmp_13_cast (82)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:30  %tmp_13_cast = zext i3 %tmp_12 to i4

ST_5: tmp_18 (90)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:38  %tmp_18 = or i3 %tmp_12, 3

ST_5: tmp_19 (91)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:39  %tmp_19 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 0, i3 %tmp_18)

ST_5: a_0_addr_3 (92)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:40  %a_0_addr_3 = getelementptr [8 x float]* %a_0, i64 0, i64 %tmp_19

ST_5: a_1_addr_3 (96)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:44  %a_1_addr_3 = getelementptr [8 x float]* %a_1, i64 0, i64 %tmp_19

ST_5: a_0_load_2 (115)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:63  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_5: a_1_load_2 (116)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:64  %a_1_load_2 = load float* %a_1_addr_2, align 4

ST_5: a_load_2_phi (117)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:65  %a_load_2_phi = select i1 %cond1_mid2, float %a_0_load_2, float %a_1_load_2

ST_5: a_0_load_3 (118)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:66  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_5: a_1_load_3 (119)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:67  %a_1_load_3 = load float* %a_1_addr_3, align 4

ST_5: sel_tmp3 (125)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_load_1)
.preheader7.preheader:73  %sel_tmp3 = select i1 %tmp_5, float %a_load_17_phi, float %a_row_load_5

ST_5: a_row_load_1 (126)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:74  %a_row_load_1 = select i1 %sel_tmp1, float %a_load_17_phi, float %sel_tmp3

ST_5: tmp_22 (137)  [1/1] 0.75ns  loc: matrixmul.cpp:85
.preheader7.preheader:85  %tmp_22 = add i4 %tmp_13_cast, %tmp_8_cast

ST_5: tmp_s (202)  [3/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:150  %tmp_s = fmul float %a_row_load, %tmp_6

ST_5: tmp_11_1 (205)  [4/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:153  %tmp_11_1 = fmul float %a_row_load_1, %tmp_7

ST_5: StgValue_247 (231)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:179  store float %a_row_load_1, float* %a_row_load_9


 <State 6>: 7.15ns
ST_6: a_row_load_6 (54)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_load_6 = load float* %a_row_load_8

ST_6: a_row_load_10 (55)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_load_10 = load float* %a_row_load_7

ST_6: a_0_load_3 (118)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:66  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_6: a_1_load_3 (119)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:67  %a_1_load_3 = load float* %a_1_addr_3, align 4

ST_6: sel_tmp (120)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_load_3)
.preheader7.preheader:68  %sel_tmp = select i1 %tmp_5, float %a_1_load_3, float %a_row_load_10

ST_6: a_row_load_3 (122)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:70  %a_row_load_3 = select i1 %sel_tmp1, float %a_0_load_3, float %sel_tmp

ST_6: sel_tmp2 (123)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_load_2)
.preheader7.preheader:71  %sel_tmp2 = select i1 %tmp_5, float %a_load_2_phi, float %a_row_load_6

ST_6: a_row_load_2 (124)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:72  %a_row_load_2 = select i1 %sel_tmp1, float %a_load_2_phi, float %sel_tmp2

ST_6: tmp_s (202)  [2/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:150  %tmp_s = fmul float %a_row_load, %tmp_6

ST_6: tmp_11_1 (205)  [3/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:153  %tmp_11_1 = fmul float %a_row_load_1, %tmp_7

ST_6: tmp_11_2 (208)  [4/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = fmul float %a_row_load_2, %tmp_9

ST_6: StgValue_259 (229)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:177  store float %a_row_load_3, float* %a_row_load_7

ST_6: StgValue_260 (230)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:178  store float %a_row_load_2, float* %a_row_load_8


 <State 7>: 5.78ns
ST_7: tmp_s (202)  [1/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:150  %tmp_s = fmul float %a_row_load, %tmp_6

ST_7: tmp_11_1 (205)  [2/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:153  %tmp_11_1 = fmul float %a_row_load_1, %tmp_7

ST_7: tmp_11_2 (208)  [3/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = fmul float %a_row_load_2, %tmp_9

ST_7: tmp_11_3 (211)  [4/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:159  %tmp_11_3 = fmul float %a_row_load_3, %tmp_10


 <State 8>: 8.26ns
ST_8: tmp_2 (203)  [5/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:151  %tmp_2 = fadd float %tmp_s, 0.000000e+00

ST_8: tmp_11_1 (205)  [1/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:153  %tmp_11_1 = fmul float %a_row_load_1, %tmp_7

ST_8: tmp_11_2 (208)  [2/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = fmul float %a_row_load_2, %tmp_9

ST_8: tmp_11_3 (211)  [3/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:159  %tmp_11_3 = fmul float %a_row_load_3, %tmp_10


 <State 9>: 8.26ns
ST_9: tmp_2 (203)  [4/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:151  %tmp_2 = fadd float %tmp_s, 0.000000e+00

ST_9: tmp_11_2 (208)  [1/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = fmul float %a_row_load_2, %tmp_9

ST_9: tmp_11_3 (211)  [2/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:159  %tmp_11_3 = fmul float %a_row_load_3, %tmp_10


 <State 10>: 8.26ns
ST_10: tmp_2 (203)  [3/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:151  %tmp_2 = fadd float %tmp_s, 0.000000e+00

ST_10: tmp_11_3 (211)  [1/4] 5.78ns  loc: matrixmul.cpp:82
.preheader7.preheader:159  %tmp_11_3 = fmul float %a_row_load_3, %tmp_10


 <State 11>: 8.26ns
ST_11: tmp_2 (203)  [2/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:151  %tmp_2 = fadd float %tmp_s, 0.000000e+00


 <State 12>: 8.26ns
ST_12: tmp_2 (203)  [1/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:151  %tmp_2 = fadd float %tmp_s, 0.000000e+00


 <State 13>: 8.26ns
ST_13: tmp_12_1 (206)  [5/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_12_1 = fadd float %tmp_2, %tmp_11_1


 <State 14>: 8.26ns
ST_14: tmp_12_1 (206)  [4/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_12_1 = fadd float %tmp_2, %tmp_11_1


 <State 15>: 8.26ns
ST_15: tmp_12_1 (206)  [3/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_12_1 = fadd float %tmp_2, %tmp_11_1


 <State 16>: 8.26ns
ST_16: tmp_12_1 (206)  [2/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_12_1 = fadd float %tmp_2, %tmp_11_1


 <State 17>: 8.26ns
ST_17: tmp_12_1 (206)  [1/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_12_1 = fadd float %tmp_2, %tmp_11_1


 <State 18>: 8.26ns
ST_18: tmp_12_2 (209)  [5/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:157  %tmp_12_2 = fadd float %tmp_12_1, %tmp_11_2


 <State 19>: 8.26ns
ST_19: tmp_12_2 (209)  [4/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:157  %tmp_12_2 = fadd float %tmp_12_1, %tmp_11_2


 <State 20>: 8.26ns
ST_20: tmp_12_2 (209)  [3/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:157  %tmp_12_2 = fadd float %tmp_12_1, %tmp_11_2


 <State 21>: 8.26ns
ST_21: tmp_12_2 (209)  [2/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:157  %tmp_12_2 = fadd float %tmp_12_1, %tmp_11_2


 <State 22>: 8.26ns
ST_22: tmp_12_2 (209)  [1/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:157  %tmp_12_2 = fadd float %tmp_12_1, %tmp_11_2


 <State 23>: 8.26ns
ST_23: tmp_12_3 (212)  [5/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp_12_3 = fadd float %tmp_12_2, %tmp_11_3


 <State 24>: 8.26ns
ST_24: tmp_12_3 (212)  [4/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp_12_3 = fadd float %tmp_12_2, %tmp_11_3


 <State 25>: 8.26ns
ST_25: tmp_12_3 (212)  [3/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp_12_3 = fadd float %tmp_12_2, %tmp_11_3


 <State 26>: 8.26ns
ST_26: tmp_12_3 (212)  [2/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp_12_3 = fadd float %tmp_12_2, %tmp_11_3


 <State 27>: 8.26ns
ST_27: tmp_12_3 (212)  [1/5] 8.26ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp_12_3 = fadd float %tmp_12_2, %tmp_11_3


 <State 28>: 2.39ns
ST_28: StgValue_291 (73)  [1/1] 0.00ns
.preheader7.preheader:21  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_28: empty_5 (74)  [1/1] 0.00ns
.preheader7.preheader:22  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_28: StgValue_293 (105)  [1/1] 0.00ns  loc: matrixmul.cpp:63
.preheader7.preheader:53  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_28: StgValue_294 (107)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:55  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_28: tmp_22_cast (138)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:86  %tmp_22_cast = zext i4 %tmp_22 to i64

ST_28: a_4_addr (139)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:87  %a_4_addr = getelementptr [8 x float]* %a_4, i64 0, i64 %tmp_22_cast

ST_28: a_5_addr (140)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:88  %a_5_addr = getelementptr [8 x float]* %a_5, i64 0, i64 %tmp_22_cast

ST_28: StgValue_298 (235)  [1/1] 2.39ns  loc: matrixmul.cpp:85
branch29:0  store float %tmp_12_3, float* %a_5_addr, align 4

ST_28: StgValue_299 (236)  [1/1] 0.00ns  loc: matrixmul.cpp:85
branch29:1  br label %.loopexit101

ST_28: StgValue_300 (238)  [1/1] 2.39ns  loc: matrixmul.cpp:85
branch28:0  store float %tmp_12_3, float* %a_4_addr, align 4

ST_28: StgValue_301 (239)  [1/1] 0.00ns  loc: matrixmul.cpp:85
branch28:1  br label %.loopexit101


 <State 29>: 0.00ns
ST_29: StgValue_302 (245)  [1/1] 0.00ns  loc: matrixmul.cpp:88
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [38]  (1.57 ns)

 <State 2>: 5.7ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matrixmul.cpp:63) [40]  (0 ns)
	'icmp' operation ('exitcond', matrixmul.cpp:63) [75]  (1.94 ns)
	'select' operation ('newIndex1_mid2_v_v', matrixmul.cpp:63) [79]  (1.37 ns)
	'shl' operation ('tmp_12', matrixmul.cpp:63) [80]  (0 ns)
	'getelementptr' operation ('a_0_addr', matrixmul.cpp:71) [83]  (0 ns)
	'load' operation ('a_0_load', matrixmul.cpp:71) on array 'a_0' [109]  (2.39 ns)

 <State 3>: 6.7ns
The critical path consists of the following:
	'load' operation ('b_copy[0][3]', matrixmul.cpp:77) on array 'a_2' [141]  (2.39 ns)
	'select' operation ('b_copy[0][3]', matrixmul.cpp:63) [144]  (0 ns)
	'select' operation ('b_copy[0][3]', matrixmul.cpp:63) [146]  (1.37 ns)
	'select' operation ('b_copy[0][3]', matrixmul.cpp:63) [148]  (0 ns)
	'select' operation ('b_copy[0][3]', matrixmul.cpp:75) [197]  (1.37 ns)
	'mux' operation ('tmp_6', matrixmul.cpp:75) [201]  (1.57 ns)

 <State 4>: 8.52ns
The critical path consists of the following:
	'and' operation ('sel_tmp1', matrixmul.cpp:69) [121]  (1.37 ns)
	'select' operation ('a_row_load', matrixmul.cpp:69) [128]  (1.37 ns)
	'fmul' operation ('tmp_s', matrixmul.cpp:82) [202]  (5.78 ns)

 <State 5>: 7.15ns
The critical path consists of the following:
	'load' operation ('a_row_load_5') on local variable 'a_row_load_9' [53]  (0 ns)
	'select' operation ('sel_tmp3', matrixmul.cpp:69) [125]  (0 ns)
	'select' operation ('a_row_load_1', matrixmul.cpp:69) [126]  (1.37 ns)
	'fmul' operation ('tmp_11_1', matrixmul.cpp:82) [205]  (5.78 ns)

 <State 6>: 7.15ns
The critical path consists of the following:
	'load' operation ('a_row_load_6') on local variable 'a_row_load_8' [54]  (0 ns)
	'select' operation ('sel_tmp2', matrixmul.cpp:69) [123]  (0 ns)
	'select' operation ('a_row_load_2', matrixmul.cpp:69) [124]  (1.37 ns)
	'fmul' operation ('tmp_11_2', matrixmul.cpp:82) [208]  (5.78 ns)

 <State 7>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', matrixmul.cpp:82) [202]  (5.78 ns)

 <State 8>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', matrixmul.cpp:82) [203]  (8.26 ns)

 <State 9>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', matrixmul.cpp:82) [203]  (8.26 ns)

 <State 10>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', matrixmul.cpp:82) [203]  (8.26 ns)

 <State 11>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', matrixmul.cpp:82) [203]  (8.26 ns)

 <State 12>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', matrixmul.cpp:82) [203]  (8.26 ns)

 <State 13>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_1', matrixmul.cpp:82) [206]  (8.26 ns)

 <State 14>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_1', matrixmul.cpp:82) [206]  (8.26 ns)

 <State 15>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_1', matrixmul.cpp:82) [206]  (8.26 ns)

 <State 16>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_1', matrixmul.cpp:82) [206]  (8.26 ns)

 <State 17>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_1', matrixmul.cpp:82) [206]  (8.26 ns)

 <State 18>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_2', matrixmul.cpp:82) [209]  (8.26 ns)

 <State 19>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_2', matrixmul.cpp:82) [209]  (8.26 ns)

 <State 20>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_2', matrixmul.cpp:82) [209]  (8.26 ns)

 <State 21>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_2', matrixmul.cpp:82) [209]  (8.26 ns)

 <State 22>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_2', matrixmul.cpp:82) [209]  (8.26 ns)

 <State 23>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_3', matrixmul.cpp:82) [212]  (8.26 ns)

 <State 24>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_3', matrixmul.cpp:82) [212]  (8.26 ns)

 <State 25>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_3', matrixmul.cpp:82) [212]  (8.26 ns)

 <State 26>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_3', matrixmul.cpp:82) [212]  (8.26 ns)

 <State 27>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_12_3', matrixmul.cpp:82) [212]  (8.26 ns)

 <State 28>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('a_5_addr', matrixmul.cpp:85) [140]  (0 ns)
	'store' operation (matrixmul.cpp:85) of variable 'tmp_12_3', matrixmul.cpp:82 on array 'a_5' [235]  (2.39 ns)

 <State 29>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
