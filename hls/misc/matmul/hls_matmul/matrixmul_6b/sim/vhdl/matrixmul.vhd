-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrixmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    a_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_EN_A : OUT STD_LOGIC;
    a_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_3_Clk_A : OUT STD_LOGIC;
    a_3_Rst_A : OUT STD_LOGIC;
    a_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_4_EN_A : OUT STD_LOGIC;
    a_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_4_Clk_A : OUT STD_LOGIC;
    a_4_Rst_A : OUT STD_LOGIC;
    a_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_5_EN_A : OUT STD_LOGIC;
    a_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_5_Clk_A : OUT STD_LOGIC;
    a_5_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matrixmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=73,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1081,HLS_SYN_LUT=2377}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_310 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_321 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_332 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_343_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal exitcond_flatten_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_414_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1446 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_fu_432_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1451 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex1_mid2_v_v_fu_454_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex1_mid2_v_v_reg_1478 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_462_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_reg_1483 : STD_LOGIC_VECTOR (2 downto 0);
    signal cond1_mid2_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_mid2_reg_1501 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_fu_530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_reg_1521 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1542 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_1550 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_cast_fu_585_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_cast_reg_1558 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp5_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1573 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1583 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_2_3_19_reg_1612 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_715_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1620 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_748_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1625 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_0_2_fu_814_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1095_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1645 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1108_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1650 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1121_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1655 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_2_fu_1227_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1234_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_reg_1675 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_21_reg_1675 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_row_3_2_fu_1262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_2_reg_1680 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_2_fu_1276_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1690 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_1695 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_1700 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_1705 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_1710 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_314_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_325_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_336_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_565_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_797_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1210_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_1306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_0_3_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_3_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_3_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_1_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_708_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_701_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_694_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_1083_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_1076_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_1069_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_1062_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_1055_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_1048_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_1041_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_1027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_1020_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_1013_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_1006_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_3_fu_1315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_360_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_376_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_386_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo92_mask_fu_396_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_420_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_474_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp8_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_498_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_mid1_fu_508_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo92_mask_mid1_fu_518_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cond_mid1_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_560_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_fu_588_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_3_fu_605_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_647_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_679_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_715_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_792_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_0_1_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_890_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_904_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_910_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_924_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_943_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_950_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_964_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_985_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_992_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_999_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_897_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_930_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1090_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1095_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1095_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1108_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1108_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1121_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1121_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1205_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_1_1_fu_1220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_cast_fu_1202_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1239_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_1255_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_1_fu_1269_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1283_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component matrixmul_mux_42_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matrixmul_mul_32scud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matrixmul_mux_42_bkb_U1 : component matrixmul_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_2_fu_715_p1,
        din2 => tmp_2_fu_715_p2,
        din3 => tmp_2_fu_715_p3,
        din4 => tmp_2_fu_715_p4,
        din5 => tmp_23_reg_1521,
        dout => tmp_2_fu_715_p6);

    matrixmul_mul_32scud_U2 : component matrixmul_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1090_p0,
        din1 => tmp_2_reg_1620,
        ce => ap_const_logic_1,
        dout => grp_fu_1090_p2);

    matrixmul_mux_42_bkb_U3 : component matrixmul_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_6_fu_1095_p1,
        din2 => tmp_6_fu_1095_p2,
        din3 => tmp_6_fu_1095_p3,
        din4 => tmp_6_fu_1095_p4,
        din5 => tmp_23_reg_1521,
        dout => tmp_6_fu_1095_p6);

    matrixmul_mux_42_bkb_U4 : component matrixmul_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_1108_p1,
        din2 => tmp_7_fu_1108_p2,
        din3 => tmp_7_fu_1108_p3,
        din4 => tmp_7_fu_1108_p4,
        din5 => tmp_23_reg_1521,
        dout => tmp_7_fu_1108_p6);

    matrixmul_mux_42_bkb_U5 : component matrixmul_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1121_p1,
        din2 => tmp_9_fu_1121_p2,
        din3 => tmp_9_fu_1121_p3,
        din4 => tmp_9_fu_1121_p4,
        din5 => tmp_23_reg_1521,
        dout => tmp_9_fu_1121_p6);

    matrixmul_mul_32scud_U6 : component matrixmul_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1239_p0,
        din1 => tmp_6_reg_1645,
        ce => ap_const_logic_1,
        dout => grp_fu_1239_p2);

    matrixmul_mul_32scud_U7 : component matrixmul_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1283_p0,
        din1 => tmp_7_reg_1650,
        ce => ap_const_logic_1,
        dout => grp_fu_1283_p2);

    matrixmul_mul_32scud_U8 : component matrixmul_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_3_2_reg_1680,
        din1 => tmp_9_reg_1655,
        ce => ap_const_logic_1,
        dout => grp_fu_1298_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_408_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_flatten_reg_1442 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_321 <= newIndex1_mid2_v_v_reg_1478;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_321 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_310 <= indvar_flatten_next_reg_1446;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_310 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_332 <= j_1_reg_1625;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_332 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                a_row_0_3_fu_94 <= a_row_0_2_fu_814_p3;
                b_copy_1_3_11_fu_126 <= b_copy_1_3_18_fu_1083_p3;
                b_copy_1_3_12_fu_134 <= b_copy_1_3_16_fu_1069_p3;
                b_copy_1_3_1_fu_138 <= b_copy_1_3_3_fu_1062_p3;
                b_copy_1_3_8_fu_130 <= b_copy_1_3_17_fu_1076_p3;
                b_copy_2_3_11_fu_142 <= b_copy_2_3_18_fu_1055_p3;
                b_copy_2_3_12_fu_150 <= b_copy_2_3_16_fu_1041_p3;
                b_copy_2_3_1_fu_154 <= b_copy_2_3_3_fu_1034_p3;
                b_copy_2_3_8_fu_146 <= b_copy_2_3_17_fu_1048_p3;
                b_copy_3_3_11_fu_158 <= b_copy_3_3_18_fu_1027_p3;
                b_copy_3_3_12_fu_166 <= b_copy_3_3_16_fu_1013_p3;
                b_copy_3_3_1_fu_170 <= b_copy_3_3_3_fu_1006_p3;
                b_copy_3_3_8_fu_162 <= b_copy_3_3_17_fu_1020_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_1_3_fu_98 <= a_row_1_2_fu_1227_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_2_3_fu_102 <= a_row_2_2_fu_1276_p3;
                a_row_3_1_fu_106 <= a_row_3_2_fu_1262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_3_2_reg_1680 <= a_row_3_2_fu_1262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1507 <= cond_mid2_reg_1507;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1442 <= exitcond_flatten_reg_1442;
                ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507 <= ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1507;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1442 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1442;
                exitcond_flatten_reg_1442 <= exitcond_flatten_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter1_tmp_21_reg_1675 <= tmp_21_reg_1675;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0))) then
                b_copy_0_3_11_fu_110 <= b_copy_0_3_18_fu_708_p3;
                b_copy_0_3_12_fu_118 <= b_copy_0_3_16_fu_694_p3;
                b_copy_0_3_1_fu_122 <= b_copy_0_3_3_fu_687_p3;
                b_copy_0_3_8_fu_114 <= b_copy_0_3_17_fu_701_p3;
                b_copy_2_3_19_reg_1612 <= a_3_Dout_A;
                j_1_reg_1625 <= j_1_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_408_p2))) then
                cond1_mid2_reg_1501 <= cond1_mid2_fu_490_p3;
                cond_mid2_reg_1507 <= cond_mid2_fu_530_p3;
                j_mid2_reg_1451 <= j_mid2_fu_432_p3;
                    tmp_11_reg_1483(2) <= tmp_11_fu_462_p2(2);
                tmp_23_reg_1521 <= tmp_23_fu_544_p1;
                tmp_mid2_reg_1458 <= tmp_mid2_fu_446_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1446 <= indvar_flatten_next_fu_414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_408_p2))) then
                newIndex1_mid2_v_v_reg_1478 <= newIndex1_mid2_v_v_fu_454_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_350 <= grp_fu_343_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1442 = ap_const_lv1_0))) then
                sel_tmp1_reg_1550 <= sel_tmp1_fu_580_p2;
                sel_tmp5_reg_1573 <= sel_tmp5_fu_600_p2;
                sel_tmp7_reg_1583 <= sel_tmp7_fu_613_p2;
                sel_tmp9_reg_1596 <= sel_tmp9_fu_626_p2;
                tmp_2_reg_1620 <= tmp_2_fu_715_p6;
                tmp_5_reg_1542 <= tmp_5_fu_575_p2;
                    tmp_8_cast_reg_1558(2 downto 0) <= tmp_8_cast_fu_585_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1442))) then
                tmp10_reg_1710 <= tmp10_fu_1302_p2;
                tmp_11_3_reg_1705 <= grp_fu_1298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1442))) then
                tmp_11_1_reg_1695 <= grp_fu_1239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1442))) then
                tmp_11_2_reg_1700 <= grp_fu_1283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_21_reg_1675 <= tmp_21_fu_1234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_6_reg_1645 <= tmp_6_fu_1095_p6;
                tmp_7_reg_1650 <= tmp_7_fu_1108_p6;
                tmp_9_reg_1655 <= tmp_9_fu_1121_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1442))) then
                tmp_s_reg_1690 <= grp_fu_1090_p2;
            end if;
        end if;
    end process;
    tmp_11_reg_1483(1 downto 0) <= "00";
    tmp_8_cast_reg_1558(3) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, exitcond_flatten_fu_408_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_408_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_12_fu_468_p1, tmp_14_fu_565_p3, tmp_16_fu_797_p3, tmp_18_fu_1210_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_18_fu_1210_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_16_fu_797_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_14_fu_565_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_12_fu_468_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_12_fu_468_p1, tmp_14_fu_565_p3, tmp_16_fu_797_p3, tmp_18_fu_1210_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_18_fu_1210_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_16_fu_797_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_14_fu_565_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_12_fu_468_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_fu_538_p1, tmp_20_cast_fu_594_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_2_Addr_A_orig <= tmp_20_cast_fu_594_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_2_Addr_A_orig <= tmp_8_fu_538_p1(32 - 1 downto 0);
            else 
                a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= ap_const_lv32_0;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;
    a_2_WEN_A <= ap_const_lv4_0;
    a_3_Addr_A <= std_logic_vector(shift_left(unsigned(a_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_3_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_fu_538_p1, tmp_20_cast_fu_594_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_3_Addr_A_orig <= tmp_20_cast_fu_594_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_3_Addr_A_orig <= tmp_8_fu_538_p1(32 - 1 downto 0);
            else 
                a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_3_Clk_A <= ap_clk;
    a_3_Din_A <= ap_const_lv32_0;

    a_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_3_EN_A <= ap_const_logic_1;
        else 
            a_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_3_Rst_A <= ap_rst;
    a_3_WEN_A <= ap_const_lv4_0;
    a_4_Addr_A <= std_logic_vector(shift_left(unsigned(a_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_4_Addr_A_orig <= tmp_21_cast_fu_1306_p1(32 - 1 downto 0);
    a_4_Clk_A <= ap_clk;
    a_4_Din_A <= tmp_12_3_fu_1315_p2;

    a_4_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            a_4_EN_A <= ap_const_logic_1;
        else 
            a_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_4_Rst_A <= ap_rst;

    a_4_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507))))) then 
            a_4_WEN_A <= ap_const_lv4_F;
        else 
            a_4_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_5_Addr_A <= std_logic_vector(shift_left(unsigned(a_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_5_Addr_A_orig <= tmp_21_cast_fu_1306_p1(32 - 1 downto 0);
    a_5_Clk_A <= ap_clk;
    a_5_Din_A <= tmp_12_3_fu_1315_p2;

    a_5_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            a_5_EN_A <= ap_const_logic_1;
        else 
            a_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_5_Rst_A <= ap_rst;

    a_5_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1507)))) then 
            a_5_WEN_A <= ap_const_lv4_F;
        else 
            a_5_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_0_1_fu_807_p3 <= 
        reg_350 when (tmp_5_reg_1542(0) = '1') else 
        a_row_0_3_fu_94;
    a_row_0_2_fu_814_p3 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_0_1_fu_807_p3;
    a_row_1_1_fu_1220_p3 <= 
        reg_350 when (tmp_5_reg_1542(0) = '1') else 
        a_row_1_3_fu_98;
    a_row_1_2_fu_1227_p3 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_1_1_fu_1220_p3;
    a_row_2_1_fu_1269_p3 <= 
        reg_350 when (tmp_5_reg_1542(0) = '1') else 
        a_row_2_3_fu_102;
    a_row_2_2_fu_1276_p3 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_2_1_fu_1269_p3;
    a_row_3_2_fu_1262_p3 <= 
        a_0_Dout_A when (sel_tmp1_reg_1550(0) = '1') else 
        sel_tmp_fu_1255_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state14 <= ap_CS_fsm(5 downto 5);

    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo92_mask_fu_396_p2 <= (tmp_1_fu_386_p4 or ap_const_lv4_8);
    arrayNo92_mask_mid1_fu_518_p2 <= (tmp_1_mid1_fu_508_p4 or ap_const_lv4_8);
    b_copy_0_3_14_fu_671_p3 <= 
        b_copy_0_3_8_fu_114 when (sel_tmp9_fu_626_p2(0) = '1') else 
        b_copy_0_3_9_fu_663_p3;
    b_copy_0_3_15_fu_679_p3 <= 
        a_2_Dout_A when (sel_tmp9_fu_626_p2(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_16_fu_694_p3 <= 
        b_copy_0_3_7_fu_655_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_17_fu_701_p3 <= 
        b_copy_0_3_14_fu_671_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_18_fu_708_p3 <= 
        b_copy_0_3_15_fu_679_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_2_fu_631_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp9_fu_626_p2(0) = '1') else 
        b_copy_0_3_4_fu_618_p3;
    b_copy_0_3_3_fu_687_p3 <= 
        b_copy_0_3_2_fu_631_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_1_fu_122;
    b_copy_0_3_4_fu_618_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp7_fu_613_p2(0) = '1') else 
        b_copy_0_3_fu_605_p3;
    b_copy_0_3_5_fu_639_p3 <= 
        a_2_Dout_A when (sel_tmp5_fu_600_p2(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_6_fu_647_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp7_fu_613_p2(0) = '1') else 
        b_copy_0_3_5_fu_639_p3;
    b_copy_0_3_7_fu_655_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp9_fu_626_p2(0) = '1') else 
        b_copy_0_3_6_fu_647_p3;
    b_copy_0_3_9_fu_663_p3 <= 
        a_2_Dout_A when (sel_tmp7_fu_613_p2(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_fu_605_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp5_fu_600_p2(0) = '1') else 
        a_2_Dout_A;
    b_copy_1_3_14_fu_870_p3 <= 
        b_copy_1_3_8_fu_130 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_1_3_9_fu_863_p3;
    b_copy_1_3_15_fu_877_p3 <= 
        a_2_Dout_A when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_16_fu_1069_p3 <= 
        b_copy_1_3_7_fu_856_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_17_fu_1076_p3 <= 
        b_copy_1_3_14_fu_870_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_18_fu_1083_p3 <= 
        b_copy_1_3_15_fu_877_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_2_fu_835_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_1_3_4_fu_828_p3;
    b_copy_1_3_3_fu_1062_p3 <= 
        b_copy_1_3_2_fu_835_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_1_fu_138;
    b_copy_1_3_4_fu_828_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_1_3_fu_821_p3;
    b_copy_1_3_5_fu_842_p3 <= 
        a_2_Dout_A when (sel_tmp5_reg_1573(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_6_fu_849_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_1_3_5_fu_842_p3;
    b_copy_1_3_7_fu_856_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_1_3_6_fu_849_p3;
    b_copy_1_3_9_fu_863_p3 <= 
        a_2_Dout_A when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_fu_821_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp5_reg_1573(0) = '1') else 
        a_2_Dout_A;
    b_copy_2_3_14_fu_930_p3 <= 
        b_copy_2_3_8_fu_146 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_2_3_9_fu_924_p3;
    b_copy_2_3_15_fu_937_p3 <= 
        b_copy_2_3_19_reg_1612 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_16_fu_1041_p3 <= 
        b_copy_2_3_7_fu_917_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_17_fu_1048_p3 <= 
        b_copy_2_3_14_fu_930_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_18_fu_1055_p3 <= 
        b_copy_2_3_15_fu_937_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_2_fu_897_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_2_3_4_fu_890_p3;
    b_copy_2_3_3_fu_1034_p3 <= 
        b_copy_2_3_2_fu_897_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_1_fu_154;
    b_copy_2_3_4_fu_890_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_2_3_fu_884_p3;
    b_copy_2_3_5_fu_904_p3 <= 
        b_copy_2_3_19_reg_1612 when (sel_tmp5_reg_1573(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_6_fu_910_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_2_3_5_fu_904_p3;
    b_copy_2_3_7_fu_917_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_2_3_6_fu_910_p3;
    b_copy_2_3_9_fu_924_p3 <= 
        b_copy_2_3_19_reg_1612 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_fu_884_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp5_reg_1573(0) = '1') else 
        b_copy_2_3_19_reg_1612;
    b_copy_3_3_14_fu_992_p3 <= 
        b_copy_3_3_8_fu_162 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_3_3_9_fu_985_p3;
    b_copy_3_3_15_fu_999_p3 <= 
        a_3_Dout_A when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_16_fu_1013_p3 <= 
        b_copy_3_3_7_fu_978_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_17_fu_1020_p3 <= 
        b_copy_3_3_14_fu_992_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_18_fu_1027_p3 <= 
        b_copy_3_3_15_fu_999_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_2_fu_957_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_3_3_4_fu_950_p3;
    b_copy_3_3_3_fu_1006_p3 <= 
        b_copy_3_3_2_fu_957_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_1_fu_170;
    b_copy_3_3_4_fu_950_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_3_3_fu_943_p3;
    b_copy_3_3_5_fu_964_p3 <= 
        a_3_Dout_A when (sel_tmp5_reg_1573(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_6_fu_971_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_3_3_5_fu_964_p3;
    b_copy_3_3_7_fu_978_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp9_reg_1596(0) = '1') else 
        b_copy_3_3_6_fu_971_p3;
    b_copy_3_3_9_fu_985_p3 <= 
        a_3_Dout_A when (sel_tmp7_reg_1583(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_fu_943_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp5_reg_1573(0) = '1') else 
        a_3_Dout_A;
    cond1_mid2_fu_490_p3 <= 
        icmp8_fu_484_p2 when (exitcond_fu_426_p2(0) = '1') else 
        icmp_fu_370_p2;
    cond_fu_402_p2 <= "1" when (arrayNo92_mask_fu_396_p2 = ap_const_lv4_8) else "0";
    cond_mid1_fu_524_p2 <= "1" when (arrayNo92_mask_mid1_fu_518_p2 = ap_const_lv4_8) else "0";
    cond_mid2_fu_530_p3 <= 
        cond_mid1_fu_524_p2 when (exitcond_fu_426_p2(0) = '1') else 
        cond_fu_402_p2;
    exitcond_flatten_fu_408_p2 <= "1" when (indvar_flatten_phi_fu_314_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_426_p2 <= "1" when (j_phi_fu_336_p4 = ap_const_lv3_4) else "0";
    grp_fu_1090_p0 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_0_1_fu_807_p3;
    grp_fu_1239_p0 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_1_1_fu_1220_p3;
    grp_fu_1283_p0 <= 
        reg_350 when (sel_tmp1_reg_1550(0) = '1') else 
        a_row_2_1_fu_1269_p3;
    grp_fu_343_p3 <= 
        a_0_Dout_A when (cond1_mid2_reg_1501(0) = '1') else 
        a_1_Dout_A;
    i_1_fu_420_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_325_p4));

    i_phi_fu_325_p4_assign_proc : process(i_reg_321, exitcond_flatten_reg_1442, ap_CS_fsm_pp0_stage0, newIndex1_mid2_v_v_reg_1478, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_325_p4 <= newIndex1_mid2_v_v_reg_1478;
        else 
            i_phi_fu_325_p4 <= i_reg_321;
        end if; 
    end process;

    icmp8_fu_484_p2 <= "1" when (tmp_22_fu_474_p4 = ap_const_lv2_0) else "0";
    icmp_fu_370_p2 <= "1" when (tmp_10_fu_360_p4 = ap_const_lv2_0) else "0";
    indvar_flatten_next_fu_414_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_314_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_314_p4_assign_proc : process(indvar_flatten_reg_310, exitcond_flatten_reg_1442, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1446, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_314_p4 <= indvar_flatten_next_reg_1446;
        else 
            indvar_flatten_phi_fu_314_p4 <= indvar_flatten_reg_310;
        end if; 
    end process;

    j_1_fu_748_p2 <= std_logic_vector(unsigned(j_mid2_reg_1451) + unsigned(ap_const_lv3_1));
    j_mid2_fu_432_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_426_p2(0) = '1') else 
        j_phi_fu_336_p4;

    j_phi_fu_336_p4_assign_proc : process(j_reg_332, exitcond_flatten_reg_1442, ap_CS_fsm_pp0_stage0, j_1_reg_1625, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1442 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_336_p4 <= j_1_reg_1625;
        else 
            j_phi_fu_336_p4 <= j_reg_332;
        end if; 
    end process;

    newIndex1_mid2_v_v_fu_454_p3 <= 
        i_1_fu_420_p2 when (exitcond_fu_426_p2(0) = '1') else 
        i_phi_fu_325_p4;
    sel_tmp1_fu_580_p2 <= (tmp_5_fu_575_p2 and cond1_mid2_reg_1501);
    sel_tmp5_fu_600_p2 <= "1" when (tmp_23_reg_1521 = ap_const_lv2_2) else "0";
    sel_tmp7_fu_613_p2 <= "1" when (tmp_23_reg_1521 = ap_const_lv2_1) else "0";
    sel_tmp9_fu_626_p2 <= "1" when (tmp_23_reg_1521 = ap_const_lv2_0) else "0";
    sel_tmp_fu_1255_p3 <= 
        a_1_Dout_A when (tmp_5_reg_1542(0) = '1') else 
        a_row_3_1_fu_106;
    tmp10_fu_1302_p2 <= std_logic_vector(unsigned(tmp_11_2_reg_1700) + unsigned(tmp_s_reg_1690));
    tmp11_fu_1311_p2 <= std_logic_vector(unsigned(tmp_11_3_reg_1705) + unsigned(tmp_11_1_reg_1695));
    tmp_10_fu_360_p4 <= i_phi_fu_325_p4(2 downto 1);
    tmp_11_fu_462_p2 <= std_logic_vector(shift_left(unsigned(newIndex1_mid2_v_v_fu_454_p3),to_integer(unsigned('0' & ap_const_lv3_2(3-1 downto 0)))));
    tmp_12_3_fu_1315_p2 <= std_logic_vector(unsigned(tmp10_reg_1710) + unsigned(tmp11_fu_1311_p2));
    tmp_12_cast_fu_1202_p1 <= std_logic_vector(resize(unsigned(tmp_11_reg_1483),4));
    tmp_12_fu_468_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_462_p2),64));
    tmp_13_fu_560_p2 <= (tmp_11_reg_1483 or ap_const_lv3_1);
    tmp_14_fu_565_p3 <= (ap_const_lv61_0 & tmp_13_fu_560_p2);
    tmp_15_fu_792_p2 <= (tmp_11_reg_1483 or ap_const_lv3_2);
    tmp_16_fu_797_p3 <= (ap_const_lv61_0 & tmp_15_fu_792_p2);
    tmp_17_fu_1205_p2 <= (tmp_11_reg_1483 or ap_const_lv3_3);
    tmp_18_fu_1210_p3 <= (ap_const_lv61_0 & tmp_17_fu_1205_p2);
    tmp_19_fu_498_p4 <= i_1_fu_420_p2(2 downto 1);
    tmp_1_fu_386_p4 <= ((ap_const_lv1_0 & tmp_3_fu_376_p4) & ap_const_lv1_0);
    tmp_1_mid1_fu_508_p4 <= ((ap_const_lv1_0 & tmp_19_fu_498_p4) & ap_const_lv1_0);
    tmp_20_cast_fu_594_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_588_p2),64));
    tmp_20_fu_588_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_8_cast_fu_585_p1));
    tmp_21_cast_fu_1306_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_tmp_21_reg_1675),64));
    tmp_21_fu_1234_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_1202_p1) + unsigned(tmp_8_cast_reg_1558));
    tmp_22_fu_474_p4 <= i_1_fu_420_p2(2 downto 1);
    tmp_23_fu_544_p1 <= j_mid2_fu_432_p3(2 - 1 downto 0);
    tmp_2_fu_715_p1 <= 
        b_copy_0_3_15_fu_679_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_11_fu_110;
    tmp_2_fu_715_p2 <= 
        b_copy_0_3_14_fu_671_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_8_fu_114;
    tmp_2_fu_715_p3 <= 
        b_copy_0_3_7_fu_655_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_12_fu_118;
    tmp_2_fu_715_p4 <= 
        b_copy_0_3_2_fu_631_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_0_3_1_fu_122;
    tmp_3_fu_376_p4 <= i_phi_fu_325_p4(2 downto 1);
    tmp_5_fu_575_p2 <= "1" when (j_mid2_reg_1451 = ap_const_lv3_0) else "0";
    tmp_6_fu_1095_p1 <= 
        b_copy_1_3_15_fu_877_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_11_fu_126;
    tmp_6_fu_1095_p2 <= 
        b_copy_1_3_14_fu_870_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_8_fu_130;
    tmp_6_fu_1095_p3 <= 
        b_copy_1_3_7_fu_856_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_12_fu_134;
    tmp_6_fu_1095_p4 <= 
        b_copy_1_3_2_fu_835_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_1_3_1_fu_138;
    tmp_7_fu_1108_p1 <= 
        b_copy_2_3_15_fu_937_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_11_fu_142;
    tmp_7_fu_1108_p2 <= 
        b_copy_2_3_14_fu_930_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_8_fu_146;
    tmp_7_fu_1108_p3 <= 
        b_copy_2_3_7_fu_917_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_12_fu_150;
    tmp_7_fu_1108_p4 <= 
        b_copy_2_3_2_fu_897_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_2_3_1_fu_154;
    tmp_8_cast_fu_585_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1451),4));
    tmp_8_fu_538_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_432_p3),64));
    tmp_9_fu_1121_p1 <= 
        b_copy_3_3_15_fu_999_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_11_fu_158;
    tmp_9_fu_1121_p2 <= 
        b_copy_3_3_14_fu_992_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_8_fu_162;
    tmp_9_fu_1121_p3 <= 
        b_copy_3_3_7_fu_978_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_12_fu_166;
    tmp_9_fu_1121_p4 <= 
        b_copy_3_3_2_fu_957_p3 when (tmp_mid2_reg_1458(0) = '1') else 
        b_copy_3_3_1_fu_170;
    tmp_fu_354_p2 <= "1" when (i_phi_fu_325_p4 = ap_const_lv3_0) else "0";
    tmp_mid1_fu_440_p2 <= "1" when (i_1_fu_420_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_446_p3 <= 
        tmp_mid1_fu_440_p2 when (exitcond_fu_426_p2(0) = '1') else 
        tmp_fu_354_p2;
end behav;
