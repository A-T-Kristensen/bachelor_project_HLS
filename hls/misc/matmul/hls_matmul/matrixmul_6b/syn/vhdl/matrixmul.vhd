-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrixmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    a_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_EN_A : OUT STD_LOGIC;
    a_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_3_Clk_A : OUT STD_LOGIC;
    a_3_Rst_A : OUT STD_LOGIC;
    a_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_4_EN_A : OUT STD_LOGIC;
    a_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_4_Clk_A : OUT STD_LOGIC;
    a_4_Rst_A : OUT STD_LOGIC;
    a_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_5_EN_A : OUT STD_LOGIC;
    a_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_5_Clk_A : OUT STD_LOGIC;
    a_5_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matrixmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.524000,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1525,HLS_SYN_LUT=2886}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_310 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_321 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_332 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_352_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal exitcond_flatten_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_423_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1424 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_fu_441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1429 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1436 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex1_mid2_v_v_fu_463_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex1_mid2_v_v_reg_1456 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_471_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_reg_1461 : STD_LOGIC_VECTOR (2 downto 0);
    signal cond1_mid2_fu_499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_mid2_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_553_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_reg_1499 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1520 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_cast_fu_589_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_cast_reg_1529 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp5_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_1544 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1554 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1567 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_2_3_19_reg_1583 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_719_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1591 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_752_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1596 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp1_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_1611 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_row_load_fu_822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1100_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1623 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1113_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1628 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1126_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1633 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_1232_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1240_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_22_reg_1653 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_row_load_3_fu_1263_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_reg_1658 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_1277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_11_1_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1688 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_1_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_12_2_reg_1698 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_12_3_reg_1703 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_314_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_325_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_336_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_574_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_801_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1215_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_cast_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_s_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_705_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_698_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_691_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_1093_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_1086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_1079_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_1072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_1065_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_1058_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_1051_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_1044_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_1037_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_1030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_1023_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_1016_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_343_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_369_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_385_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_395_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo92_mask_fu_405_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_429_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_483_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp8_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_507_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_mid1_fu_517_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo92_mask_mid1_fu_527_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal cond_mid1_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_569_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_592_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_3_fu_609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_622_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_667_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_683_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_719_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_796_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp4_fu_815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_914_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_920_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_953_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_960_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_974_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_981_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_1009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_907_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1100_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1113_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1113_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1126_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1126_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1210_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp3_fu_1225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_1207_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp_fu_1256_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_1270_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component matrixmul_fadd_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matrixmul_fmul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matrixmul_mux_42_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matrixmul_fadd_32bkb_U1 : component matrixmul_fadd_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_343_p0,
        din1 => grp_fu_343_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_343_p2);

    matrixmul_fmul_32cud_U2 : component matrixmul_fmul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_348_p0,
        din1 => grp_fu_348_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_348_p2);

    matrixmul_mux_42_dEe_U3 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_6_fu_719_p1,
        din2 => tmp_6_fu_719_p2,
        din3 => tmp_6_fu_719_p3,
        din4 => tmp_6_fu_719_p4,
        din5 => tmp_24_reg_1499,
        dout => tmp_6_fu_719_p6);

    matrixmul_mux_42_dEe_U4 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_1100_p1,
        din2 => tmp_7_fu_1100_p2,
        din3 => tmp_7_fu_1100_p3,
        din4 => tmp_7_fu_1100_p4,
        din5 => tmp_24_reg_1499,
        dout => tmp_7_fu_1100_p6);

    matrixmul_mux_42_dEe_U5 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1113_p1,
        din2 => tmp_9_fu_1113_p2,
        din3 => tmp_9_fu_1113_p3,
        din4 => tmp_9_fu_1113_p4,
        din5 => tmp_24_reg_1499,
        dout => tmp_9_fu_1113_p6);

    matrixmul_mux_42_dEe_U6 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_10_fu_1126_p1,
        din2 => tmp_10_fu_1126_p2,
        din3 => tmp_10_fu_1126_p3,
        din4 => tmp_10_fu_1126_p4,
        din5 => tmp_24_reg_1499,
        dout => tmp_10_fu_1126_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_417_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_flatten_reg_1420 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_321 <= newIndex1_mid2_v_v_reg_1456;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_321 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_310 <= indvar_flatten_next_reg_1424;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_310 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_332 <= j_1_reg_1596;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_332 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_3_reg_1658 <= a_row_load_3_fu_1263_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_7_fu_106 <= a_row_load_3_fu_1263_p3;
                a_row_load_8_fu_102 <= a_row_load_2_fu_1277_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_load_9_fu_98 <= a_row_load_1_fu_1232_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                a_row_load_s_fu_94 <= a_row_load_fu_822_p3;
                b_copy_1_3_11_fu_126 <= b_copy_1_3_18_fu_1093_p3;
                b_copy_1_3_12_fu_134 <= b_copy_1_3_16_fu_1079_p3;
                b_copy_1_3_1_fu_138 <= b_copy_1_3_3_fu_1072_p3;
                b_copy_1_3_8_fu_130 <= b_copy_1_3_17_fu_1086_p3;
                b_copy_2_3_11_fu_142 <= b_copy_2_3_18_fu_1065_p3;
                b_copy_2_3_12_fu_150 <= b_copy_2_3_16_fu_1051_p3;
                b_copy_2_3_1_fu_154 <= b_copy_2_3_3_fu_1044_p3;
                b_copy_2_3_8_fu_146 <= b_copy_2_3_17_fu_1058_p3;
                b_copy_3_3_11_fu_158 <= b_copy_3_3_18_fu_1037_p3;
                b_copy_3_3_12_fu_166 <= b_copy_3_3_16_fu_1023_p3;
                b_copy_3_3_1_fu_170 <= b_copy_3_3_3_fu_1016_p3;
                b_copy_3_3_8_fu_162 <= b_copy_3_3_17_fu_1030_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1485 <= cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420 <= exitcond_flatten_reg_1420;
                ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1485 <= ap_pipeline_reg_pp0_iter1_cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1420 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420;
                ap_pipeline_reg_pp0_iter3_cond_mid2_reg_1485 <= ap_pipeline_reg_pp0_iter2_cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1420 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1420;
                ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1683 <= tmp_11_3_reg_1683;
                ap_pipeline_reg_pp0_iter4_cond_mid2_reg_1485 <= ap_pipeline_reg_pp0_iter3_cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1420 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1420;
                ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1683 <= ap_pipeline_reg_pp0_iter3_tmp_11_3_reg_1683;
                ap_pipeline_reg_pp0_iter5_cond_mid2_reg_1485 <= ap_pipeline_reg_pp0_iter4_cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1420 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1420;
                ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1683 <= ap_pipeline_reg_pp0_iter4_tmp_11_3_reg_1683;
                ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485 <= ap_pipeline_reg_pp0_iter5_cond_mid2_reg_1485;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1420 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1420;
                exitcond_flatten_reg_1420 <= exitcond_flatten_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter1_tmp_22_reg_1653 <= tmp_22_reg_1653;
                ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1678 <= tmp_11_2_reg_1678;
                ap_pipeline_reg_pp0_iter2_tmp_22_reg_1653 <= ap_pipeline_reg_pp0_iter1_tmp_22_reg_1653;
                ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1678 <= ap_pipeline_reg_pp0_iter2_tmp_11_2_reg_1678;
                ap_pipeline_reg_pp0_iter3_tmp_22_reg_1653 <= ap_pipeline_reg_pp0_iter2_tmp_22_reg_1653;
                ap_pipeline_reg_pp0_iter4_tmp_22_reg_1653 <= ap_pipeline_reg_pp0_iter3_tmp_22_reg_1653;
                ap_pipeline_reg_pp0_iter5_tmp_22_reg_1653 <= ap_pipeline_reg_pp0_iter4_tmp_22_reg_1653;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1673 <= tmp_11_1_reg_1673;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0))) then
                b_copy_0_3_11_fu_110 <= b_copy_0_3_18_fu_712_p3;
                b_copy_0_3_12_fu_118 <= b_copy_0_3_16_fu_698_p3;
                b_copy_0_3_1_fu_122 <= b_copy_0_3_3_fu_691_p3;
                b_copy_0_3_8_fu_114 <= b_copy_0_3_17_fu_705_p3;
                b_copy_2_3_19_reg_1583 <= a_3_Dout_A;
                j_1_reg_1596 <= j_1_fu_752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_417_p2))) then
                cond1_mid2_reg_1479 <= cond1_mid2_fu_499_p3;
                cond_mid2_reg_1485 <= cond_mid2_fu_539_p3;
                j_mid2_reg_1429 <= j_mid2_fu_441_p3;
                    tmp_12_reg_1461(2) <= tmp_12_fu_471_p2(2);
                tmp_24_reg_1499 <= tmp_24_fu_553_p1;
                tmp_mid2_reg_1436 <= tmp_mid2_fu_455_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1424 <= indvar_flatten_next_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_417_p2))) then
                newIndex1_mid2_v_v_reg_1456 <= newIndex1_mid2_v_v_fu_463_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_359 <= grp_fu_352_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                sel_tmp1_reg_1611 <= sel_tmp1_fu_811_p2;
                tmp_10_reg_1633 <= tmp_10_fu_1126_p6;
                tmp_7_reg_1623 <= tmp_7_fu_1100_p6;
                tmp_9_reg_1628 <= tmp_9_fu_1113_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1420 = ap_const_lv1_0))) then
                sel_tmp5_reg_1544 <= sel_tmp5_fu_604_p2;
                sel_tmp7_reg_1554 <= sel_tmp7_fu_617_p2;
                sel_tmp9_reg_1567 <= sel_tmp9_fu_630_p2;
                tmp_5_reg_1520 <= tmp_5_fu_584_p2;
                tmp_6_reg_1591 <= tmp_6_fu_719_p6;
                    tmp_8_cast_reg_1529(2 downto 0) <= tmp_8_cast_fu_589_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420))) then
                tmp_11_1_reg_1673 <= grp_fu_348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420))) then
                tmp_11_2_reg_1678 <= grp_fu_348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                tmp_11_3_reg_1683 <= grp_fu_348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1420))) then
                tmp_12_1_reg_1693 <= grp_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1420))) then
                tmp_12_2_reg_1698 <= grp_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1420))) then
                tmp_12_3_reg_1703 <= grp_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_22_reg_1653 <= tmp_22_fu_1240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1420))) then
                tmp_2_reg_1688 <= grp_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1420))) then
                tmp_s_reg_1668 <= grp_fu_348_p2;
            end if;
        end if;
    end process;
    tmp_12_reg_1461(1 downto 0) <= "00";
    tmp_8_cast_reg_1529(3) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, exitcond_flatten_fu_417_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_417_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter5))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_13_fu_477_p1, tmp_15_fu_574_p3, tmp_17_fu_801_p3, tmp_19_fu_1215_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_19_fu_1215_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_17_fu_801_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_15_fu_574_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_13_fu_477_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_13_fu_477_p1, tmp_15_fu_574_p3, tmp_17_fu_801_p3, tmp_19_fu_1215_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_19_fu_1215_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_17_fu_801_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_15_fu_574_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_13_fu_477_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_fu_547_p1, tmp_21_cast_fu_598_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_2_Addr_A_orig <= tmp_21_cast_fu_598_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_2_Addr_A_orig <= tmp_8_fu_547_p1(32 - 1 downto 0);
            else 
                a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= ap_const_lv32_0;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;
    a_2_WEN_A <= ap_const_lv4_0;
    a_3_Addr_A <= std_logic_vector(shift_left(unsigned(a_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_3_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, tmp_8_fu_547_p1, tmp_21_cast_fu_598_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_3_Addr_A_orig <= tmp_21_cast_fu_598_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_3_Addr_A_orig <= tmp_8_fu_547_p1(32 - 1 downto 0);
            else 
                a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_3_Clk_A <= ap_clk;
    a_3_Din_A <= ap_const_lv32_0;

    a_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_3_EN_A <= ap_const_logic_1;
        else 
            a_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_3_Rst_A <= ap_rst;
    a_3_WEN_A <= ap_const_lv4_0;
    a_4_Addr_A <= std_logic_vector(shift_left(unsigned(a_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_4_Addr_A_orig <= tmp_22_cast_fu_1295_p1(32 - 1 downto 0);
    a_4_Clk_A <= ap_clk;
    a_4_Din_A <= tmp_12_3_reg_1703;

    a_4_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            a_4_EN_A <= ap_const_logic_1;
        else 
            a_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_4_Rst_A <= ap_rst;

    a_4_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485, ap_enable_reg_pp0_iter6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485))))) then 
            a_4_WEN_A <= ap_const_lv4_F;
        else 
            a_4_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_5_Addr_A <= std_logic_vector(shift_left(unsigned(a_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_5_Addr_A_orig <= tmp_22_cast_fu_1295_p1(32 - 1 downto 0);
    a_5_Clk_A <= ap_clk;
    a_5_Din_A <= tmp_12_3_reg_1703;

    a_5_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            a_5_EN_A <= ap_const_logic_1;
        else 
            a_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_5_Rst_A <= ap_rst;

    a_5_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485, ap_enable_reg_pp0_iter6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_cond_mid2_reg_1485)))) then 
            a_5_WEN_A <= ap_const_lv4_F;
        else 
            a_5_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_load_1_fu_1232_p3 <= 
        reg_359 when (sel_tmp1_reg_1611(0) = '1') else 
        sel_tmp3_fu_1225_p3;
    a_row_load_2_fu_1277_p3 <= 
        reg_359 when (sel_tmp1_reg_1611(0) = '1') else 
        sel_tmp2_fu_1270_p3;
    a_row_load_3_fu_1263_p3 <= 
        a_0_Dout_A when (sel_tmp1_reg_1611(0) = '1') else 
        sel_tmp_fu_1256_p3;
    a_row_load_fu_822_p3 <= 
        reg_359 when (sel_tmp1_fu_811_p2(0) = '1') else 
        sel_tmp4_fu_815_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state29 <= ap_CS_fsm(5 downto 5);

    ap_done_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo92_mask_fu_405_p2 <= (tmp_1_fu_395_p4 or ap_const_lv4_8);
    arrayNo92_mask_mid1_fu_527_p2 <= (tmp_1_mid1_fu_517_p4 or ap_const_lv4_8);
    b_copy_0_3_14_fu_675_p3 <= 
        b_copy_0_3_8_fu_114 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_9_fu_667_p3;
    b_copy_0_3_15_fu_683_p3 <= 
        a_2_Dout_A when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_16_fu_698_p3 <= 
        b_copy_0_3_7_fu_659_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_17_fu_705_p3 <= 
        b_copy_0_3_14_fu_675_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_18_fu_712_p3 <= 
        b_copy_0_3_15_fu_683_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_11_fu_110;
    b_copy_0_3_2_fu_635_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_4_fu_622_p3;
    b_copy_0_3_3_fu_691_p3 <= 
        b_copy_0_3_2_fu_635_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_1_fu_122;
    b_copy_0_3_4_fu_622_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_fu_609_p3;
    b_copy_0_3_5_fu_643_p3 <= 
        a_2_Dout_A when (sel_tmp5_fu_604_p2(0) = '1') else 
        b_copy_0_3_12_fu_118;
    b_copy_0_3_6_fu_651_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_5_fu_643_p3;
    b_copy_0_3_7_fu_659_p3 <= 
        b_copy_0_3_12_fu_118 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_6_fu_651_p3;
    b_copy_0_3_9_fu_667_p3 <= 
        a_2_Dout_A when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_8_fu_114;
    b_copy_0_3_fu_609_p3 <= 
        b_copy_0_3_1_fu_122 when (sel_tmp5_fu_604_p2(0) = '1') else 
        a_2_Dout_A;
    b_copy_1_3_14_fu_880_p3 <= 
        b_copy_1_3_8_fu_130 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_1_3_9_fu_873_p3;
    b_copy_1_3_15_fu_887_p3 <= 
        a_2_Dout_A when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_16_fu_1079_p3 <= 
        b_copy_1_3_7_fu_866_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_17_fu_1086_p3 <= 
        b_copy_1_3_14_fu_880_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_18_fu_1093_p3 <= 
        b_copy_1_3_15_fu_887_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_11_fu_126;
    b_copy_1_3_2_fu_845_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_1_3_4_fu_838_p3;
    b_copy_1_3_3_fu_1072_p3 <= 
        b_copy_1_3_2_fu_845_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_1_fu_138;
    b_copy_1_3_4_fu_838_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_1_3_fu_831_p3;
    b_copy_1_3_5_fu_852_p3 <= 
        a_2_Dout_A when (sel_tmp5_reg_1544(0) = '1') else 
        b_copy_1_3_12_fu_134;
    b_copy_1_3_6_fu_859_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_1_3_5_fu_852_p3;
    b_copy_1_3_7_fu_866_p3 <= 
        b_copy_1_3_12_fu_134 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_1_3_6_fu_859_p3;
    b_copy_1_3_9_fu_873_p3 <= 
        a_2_Dout_A when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_1_3_8_fu_130;
    b_copy_1_3_fu_831_p3 <= 
        b_copy_1_3_1_fu_138 when (sel_tmp5_reg_1544(0) = '1') else 
        a_2_Dout_A;
    b_copy_2_3_14_fu_940_p3 <= 
        b_copy_2_3_8_fu_146 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_2_3_9_fu_934_p3;
    b_copy_2_3_15_fu_947_p3 <= 
        b_copy_2_3_19_reg_1583 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_16_fu_1051_p3 <= 
        b_copy_2_3_7_fu_927_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_17_fu_1058_p3 <= 
        b_copy_2_3_14_fu_940_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_18_fu_1065_p3 <= 
        b_copy_2_3_15_fu_947_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_11_fu_142;
    b_copy_2_3_2_fu_907_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_2_3_4_fu_900_p3;
    b_copy_2_3_3_fu_1044_p3 <= 
        b_copy_2_3_2_fu_907_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_1_fu_154;
    b_copy_2_3_4_fu_900_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_2_3_fu_894_p3;
    b_copy_2_3_5_fu_914_p3 <= 
        b_copy_2_3_19_reg_1583 when (sel_tmp5_reg_1544(0) = '1') else 
        b_copy_2_3_12_fu_150;
    b_copy_2_3_6_fu_920_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_2_3_5_fu_914_p3;
    b_copy_2_3_7_fu_927_p3 <= 
        b_copy_2_3_12_fu_150 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_2_3_6_fu_920_p3;
    b_copy_2_3_9_fu_934_p3 <= 
        b_copy_2_3_19_reg_1583 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_2_3_8_fu_146;
    b_copy_2_3_fu_894_p3 <= 
        b_copy_2_3_1_fu_154 when (sel_tmp5_reg_1544(0) = '1') else 
        b_copy_2_3_19_reg_1583;
    b_copy_3_3_14_fu_1002_p3 <= 
        b_copy_3_3_8_fu_162 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_3_3_9_fu_995_p3;
    b_copy_3_3_15_fu_1009_p3 <= 
        a_3_Dout_A when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_16_fu_1023_p3 <= 
        b_copy_3_3_7_fu_988_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_17_fu_1030_p3 <= 
        b_copy_3_3_14_fu_1002_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_18_fu_1037_p3 <= 
        b_copy_3_3_15_fu_1009_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_11_fu_158;
    b_copy_3_3_2_fu_967_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_3_3_4_fu_960_p3;
    b_copy_3_3_3_fu_1016_p3 <= 
        b_copy_3_3_2_fu_967_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_1_fu_170;
    b_copy_3_3_4_fu_960_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_3_3_fu_953_p3;
    b_copy_3_3_5_fu_974_p3 <= 
        a_3_Dout_A when (sel_tmp5_reg_1544(0) = '1') else 
        b_copy_3_3_12_fu_166;
    b_copy_3_3_6_fu_981_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_3_3_5_fu_974_p3;
    b_copy_3_3_7_fu_988_p3 <= 
        b_copy_3_3_12_fu_166 when (sel_tmp9_reg_1567(0) = '1') else 
        b_copy_3_3_6_fu_981_p3;
    b_copy_3_3_9_fu_995_p3 <= 
        a_3_Dout_A when (sel_tmp7_reg_1554(0) = '1') else 
        b_copy_3_3_8_fu_162;
    b_copy_3_3_fu_953_p3 <= 
        b_copy_3_3_1_fu_170 when (sel_tmp5_reg_1544(0) = '1') else 
        a_3_Dout_A;
    cond1_mid2_fu_499_p3 <= 
        icmp8_fu_493_p2 when (exitcond_fu_435_p2(0) = '1') else 
        icmp_fu_379_p2;
    cond_fu_411_p2 <= "1" when (arrayNo92_mask_fu_405_p2 = ap_const_lv4_8) else "0";
    cond_mid1_fu_533_p2 <= "1" when (arrayNo92_mask_mid1_fu_527_p2 = ap_const_lv4_8) else "0";
    cond_mid2_fu_539_p3 <= 
        cond_mid1_fu_533_p2 when (exitcond_fu_435_p2(0) = '1') else 
        cond_fu_411_p2;
    exitcond_flatten_fu_417_p2 <= "1" when (indvar_flatten_phi_fu_314_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_435_p2 <= "1" when (j_phi_fu_336_p4 = ap_const_lv3_4) else "0";

    grp_fu_343_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_s_reg_1668, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_2_reg_1688, tmp_12_1_reg_1693, tmp_12_2_reg_1698, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_343_p0 <= tmp_12_2_reg_1698;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_343_p0 <= tmp_12_1_reg_1693;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_343_p0 <= tmp_2_reg_1688;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_343_p0 <= tmp_s_reg_1668;
        else 
            grp_fu_343_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_343_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1673, ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1678, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1683, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_343_p1 <= ap_pipeline_reg_pp0_iter5_tmp_11_3_reg_1683;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_343_p1 <= ap_pipeline_reg_pp0_iter3_tmp_11_2_reg_1678;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_343_p1 <= ap_pipeline_reg_pp0_iter2_tmp_11_1_reg_1673;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_343_p1 <= ap_const_lv32_0;
        else 
            grp_fu_343_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_348_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, a_row_load_fu_822_p3, a_row_load_1_fu_1232_p3, a_row_load_3_reg_1658, a_row_load_2_fu_1277_p3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_348_p0 <= a_row_load_3_reg_1658;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_348_p0 <= a_row_load_2_fu_1277_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_348_p0 <= a_row_load_1_fu_1232_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_348_p0 <= a_row_load_fu_822_p3;
        else 
            grp_fu_348_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_348_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_6_reg_1591, tmp_7_reg_1623, tmp_9_reg_1628, tmp_10_reg_1633, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_348_p1 <= tmp_10_reg_1633;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_348_p1 <= tmp_9_reg_1628;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_348_p1 <= tmp_7_reg_1623;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_348_p1 <= tmp_6_reg_1591;
        else 
            grp_fu_348_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_352_p3 <= 
        a_0_Dout_A when (cond1_mid2_reg_1479(0) = '1') else 
        a_1_Dout_A;
    i_1_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_325_p4));

    i_phi_fu_325_p4_assign_proc : process(i_reg_321, exitcond_flatten_reg_1420, ap_CS_fsm_pp0_stage0, newIndex1_mid2_v_v_reg_1456, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_325_p4 <= newIndex1_mid2_v_v_reg_1456;
        else 
            i_phi_fu_325_p4 <= i_reg_321;
        end if; 
    end process;

    icmp8_fu_493_p2 <= "1" when (tmp_23_fu_483_p4 = ap_const_lv2_0) else "0";
    icmp_fu_379_p2 <= "1" when (tmp_11_fu_369_p4 = ap_const_lv2_0) else "0";
    indvar_flatten_next_fu_423_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_314_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_314_p4_assign_proc : process(indvar_flatten_reg_310, exitcond_flatten_reg_1420, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1424, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_314_p4 <= indvar_flatten_next_reg_1424;
        else 
            indvar_flatten_phi_fu_314_p4 <= indvar_flatten_reg_310;
        end if; 
    end process;

    j_1_fu_752_p2 <= std_logic_vector(unsigned(j_mid2_reg_1429) + unsigned(ap_const_lv3_1));
    j_mid2_fu_441_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_435_p2(0) = '1') else 
        j_phi_fu_336_p4;

    j_phi_fu_336_p4_assign_proc : process(j_reg_332, exitcond_flatten_reg_1420, ap_CS_fsm_pp0_stage0, j_1_reg_1596, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1420 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_336_p4 <= j_1_reg_1596;
        else 
            j_phi_fu_336_p4 <= j_reg_332;
        end if; 
    end process;

    newIndex1_mid2_v_v_fu_463_p3 <= 
        i_1_fu_429_p2 when (exitcond_fu_435_p2(0) = '1') else 
        i_phi_fu_325_p4;
    sel_tmp1_fu_811_p2 <= (tmp_5_reg_1520 and cond1_mid2_reg_1479);
    sel_tmp2_fu_1270_p3 <= 
        reg_359 when (tmp_5_reg_1520(0) = '1') else 
        a_row_load_8_fu_102;
    sel_tmp3_fu_1225_p3 <= 
        reg_359 when (tmp_5_reg_1520(0) = '1') else 
        a_row_load_9_fu_98;
    sel_tmp4_fu_815_p3 <= 
        reg_359 when (tmp_5_reg_1520(0) = '1') else 
        a_row_load_s_fu_94;
    sel_tmp5_fu_604_p2 <= "1" when (tmp_24_reg_1499 = ap_const_lv2_2) else "0";
    sel_tmp7_fu_617_p2 <= "1" when (tmp_24_reg_1499 = ap_const_lv2_1) else "0";
    sel_tmp9_fu_630_p2 <= "1" when (tmp_24_reg_1499 = ap_const_lv2_0) else "0";
    sel_tmp_fu_1256_p3 <= 
        a_1_Dout_A when (tmp_5_reg_1520(0) = '1') else 
        a_row_load_7_fu_106;
    tmp_10_fu_1126_p1 <= 
        b_copy_3_3_15_fu_1009_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_11_fu_158;
    tmp_10_fu_1126_p2 <= 
        b_copy_3_3_14_fu_1002_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_8_fu_162;
    tmp_10_fu_1126_p3 <= 
        b_copy_3_3_7_fu_988_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_12_fu_166;
    tmp_10_fu_1126_p4 <= 
        b_copy_3_3_2_fu_967_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_3_3_1_fu_170;
    tmp_11_fu_369_p4 <= i_phi_fu_325_p4(2 downto 1);
    tmp_12_fu_471_p2 <= std_logic_vector(shift_left(unsigned(newIndex1_mid2_v_v_fu_463_p3),to_integer(unsigned('0' & ap_const_lv3_2(3-1 downto 0)))));
    tmp_13_cast_fu_1207_p1 <= std_logic_vector(resize(unsigned(tmp_12_reg_1461),4));
    tmp_13_fu_477_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_471_p2),64));
    tmp_14_fu_569_p2 <= (tmp_12_reg_1461 or ap_const_lv3_1);
    tmp_15_fu_574_p3 <= (ap_const_lv61_0 & tmp_14_fu_569_p2);
    tmp_16_fu_796_p2 <= (tmp_12_reg_1461 or ap_const_lv3_2);
    tmp_17_fu_801_p3 <= (ap_const_lv61_0 & tmp_16_fu_796_p2);
    tmp_18_fu_1210_p2 <= (tmp_12_reg_1461 or ap_const_lv3_3);
    tmp_19_fu_1215_p3 <= (ap_const_lv61_0 & tmp_18_fu_1210_p2);
    tmp_1_fu_395_p4 <= ((ap_const_lv1_0 & tmp_3_fu_385_p4) & ap_const_lv1_0);
    tmp_1_mid1_fu_517_p4 <= ((ap_const_lv1_0 & tmp_20_fu_507_p4) & ap_const_lv1_0);
    tmp_20_fu_507_p4 <= i_1_fu_429_p2(2 downto 1);
    tmp_21_cast_fu_598_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_592_p2),64));
    tmp_21_fu_592_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_8_cast_fu_589_p1));
    tmp_22_cast_fu_1295_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter5_tmp_22_reg_1653),64));
    tmp_22_fu_1240_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_1207_p1) + unsigned(tmp_8_cast_reg_1529));
    tmp_23_fu_483_p4 <= i_1_fu_429_p2(2 downto 1);
    tmp_24_fu_553_p1 <= j_mid2_fu_441_p3(2 - 1 downto 0);
    tmp_3_fu_385_p4 <= i_phi_fu_325_p4(2 downto 1);
    tmp_5_fu_584_p2 <= "1" when (j_mid2_reg_1429 = ap_const_lv3_0) else "0";
    tmp_6_fu_719_p1 <= 
        b_copy_0_3_15_fu_683_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_11_fu_110;
    tmp_6_fu_719_p2 <= 
        b_copy_0_3_14_fu_675_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_8_fu_114;
    tmp_6_fu_719_p3 <= 
        b_copy_0_3_7_fu_659_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_12_fu_118;
    tmp_6_fu_719_p4 <= 
        b_copy_0_3_2_fu_635_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_0_3_1_fu_122;
    tmp_7_fu_1100_p1 <= 
        b_copy_1_3_15_fu_887_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_11_fu_126;
    tmp_7_fu_1100_p2 <= 
        b_copy_1_3_14_fu_880_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_8_fu_130;
    tmp_7_fu_1100_p3 <= 
        b_copy_1_3_7_fu_866_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_12_fu_134;
    tmp_7_fu_1100_p4 <= 
        b_copy_1_3_2_fu_845_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_1_3_1_fu_138;
    tmp_8_cast_fu_589_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1429),4));
    tmp_8_fu_547_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_441_p3),64));
    tmp_9_fu_1113_p1 <= 
        b_copy_2_3_15_fu_947_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_11_fu_142;
    tmp_9_fu_1113_p2 <= 
        b_copy_2_3_14_fu_940_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_8_fu_146;
    tmp_9_fu_1113_p3 <= 
        b_copy_2_3_7_fu_927_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_12_fu_150;
    tmp_9_fu_1113_p4 <= 
        b_copy_2_3_2_fu_907_p3 when (tmp_mid2_reg_1436(0) = '1') else 
        b_copy_2_3_1_fu_154;
    tmp_fu_363_p2 <= "1" when (i_phi_fu_325_p4 = ap_const_lv3_0) else "0";
    tmp_mid1_fu_449_p2 <= "1" when (i_1_fu_429_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_455_p3 <= 
        tmp_mid1_fu_449_p2 when (exitcond_fu_435_p2(0) = '1') else 
        tmp_fu_363_p2;
end behav;
