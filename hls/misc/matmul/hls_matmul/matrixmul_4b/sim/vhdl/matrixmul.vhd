-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrixmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    a_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_EN_A : OUT STD_LOGIC;
    a_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_3_Clk_A : OUT STD_LOGIC;
    a_3_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matrixmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=112,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1348,HLS_SYN_LUT=2463}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv61_1 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_303 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_314 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_325 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_mid2_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal grp_fu_345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal exitcond_flatten_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_386_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1443 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex1_mid2_v_v_fu_418_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex1_mid2_v_v_reg_1473 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_mid2_fu_438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_5_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_5_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_5_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_mid2_5_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_473_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1496 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_480_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_reg_1505 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_fu_484_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1516 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_490_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1521 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_1528 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_reg_1538 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_526_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_1553 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_copy_0_3_19_reg_1573 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_19_reg_1581 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_596_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_1589 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_467_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex3_mid2_v_reg_1604 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1012_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1025_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1614 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1038_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1619 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1051_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1149_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_1629 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1644 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_1652 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1182_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_reg_1660 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_21_reg_1660 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_row_1_fu_1191_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_reg_1670 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_0_2_fu_1205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_2_fu_1231_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_2_fu_1260_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_2_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_2_fu_1274_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_1706 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_1711 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_reg_1721 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_addr_2_reg_1726 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_3_fu_1313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_3_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_307_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_318_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_329_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_535_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_cast_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_0_3_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_3_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_3_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_1_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_1005_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_998_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_977_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_935_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_928_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_914_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_907_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_off_fu_368_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_fu_392_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_426_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_mid1_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_4_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_467_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_467_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_cast_fu_507_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_19_fu_510_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_521_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_591_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sel_tmp5_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_0_3_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_0_3_4_fu_622_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_696_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_720_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_760_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_860_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_868_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_892_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_775_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_728_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_752_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_673_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1012_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1012_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1025_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1025_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1025_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1038_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1038_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1038_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1051_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1051_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1144_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_fu_1158_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_cast_fu_1161_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_cast6_fu_1179_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_row_0_1_fu_1198_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_1_fu_1225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_1253_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_1_fu_1267_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component matrixmul_urem_3nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component matrixmul_urem_4ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component matrixmul_mux_42_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matrixmul_mul_32seOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matrixmul_urem_3nbkb_U1 : component matrixmul_urem_3nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_426_p0,
        din1 => ap_const_lv3_3,
        ce => ap_const_logic_1,
        dout => grp_fu_426_p2);

    matrixmul_urem_4ncud_U2 : component matrixmul_urem_4ncud
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 4,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_467_p0,
        din1 => grp_fu_467_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_467_p2);

    matrixmul_mux_42_dEe_U3 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_4_fu_1012_p1,
        din2 => tmp_4_fu_1012_p2,
        din3 => tmp_4_fu_1012_p3,
        din4 => tmp_4_fu_1012_p4,
        din5 => tmp_22_reg_1505,
        dout => tmp_4_fu_1012_p6);

    matrixmul_mux_42_dEe_U4 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_1025_p1,
        din2 => tmp_7_fu_1025_p2,
        din3 => tmp_7_fu_1025_p3,
        din4 => tmp_7_fu_1025_p4,
        din5 => tmp_22_reg_1505,
        dout => tmp_7_fu_1025_p6);

    matrixmul_mux_42_dEe_U5 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1038_p1,
        din2 => tmp_9_fu_1038_p2,
        din3 => tmp_9_fu_1038_p3,
        din4 => tmp_9_fu_1038_p4,
        din5 => tmp_22_reg_1505,
        dout => tmp_9_fu_1038_p6);

    matrixmul_mux_42_dEe_U6 : component matrixmul_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_10_fu_1051_p1,
        din2 => tmp_10_fu_1051_p2,
        din3 => tmp_10_fu_1051_p3,
        din4 => tmp_10_fu_1051_p4,
        din5 => tmp_22_reg_1505,
        dout => tmp_10_fu_1051_p6);

    matrixmul_mul_32seOg_U7 : component matrixmul_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_4_reg_1609,
        din1 => grp_fu_1212_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1212_p2);

    matrixmul_mul_32seOg_U8 : component matrixmul_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_7_reg_1614,
        din1 => grp_fu_1237_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1237_p2);

    matrixmul_mul_32seOg_U9 : component matrixmul_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_1619,
        din1 => grp_fu_1281_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1281_p2);

    matrixmul_mul_32seOg_U10 : component matrixmul_mul_32seOg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_10_reg_1624,
        din1 => a_row_3_2_reg_1691,
        ce => ap_const_logic_1,
        dout => grp_fu_1296_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_380_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and not((exitcond_flatten_reg_1439 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
                i_reg_314 <= newIndex1_mid2_v_v_reg_1473;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_314 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
                indvar_flatten_reg_303 <= indvar_flatten_next_reg_1443;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_303 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
                j_reg_325 <= j_1_reg_1516;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_325 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1439))) then
                a_2_addr_2_reg_1726 <= tmp_22_cast_fu_1304_p1(4 - 1 downto 0);
                tmp_12_3_reg_1731 <= tmp_12_3_fu_1313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_row_0_3_fu_96 <= a_row_0_2_fu_1205_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_row_1_3_fu_100 <= a_row_1_2_fu_1231_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_row_1_reg_1670 <= a_row_1_fu_1191_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                a_row_2_3_fu_104 <= a_row_2_2_fu_1274_p3;
                a_row_3_1_fu_108 <= a_row_3_2_fu_1260_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_3_2_reg_1691 <= a_row_3_2_fu_1260_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 <= exitcond_flatten_reg_1439;
                ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480 <= tmp_3_mid2_reg_1480;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_5_reg_1487 <= tmp_mid2_5_reg_1487;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453 <= tmp_mid2_reg_1453;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439;
                ap_pipeline_reg_pp0_iter2_tmp_mid2_5_reg_1487 <= ap_pipeline_reg_pp0_iter1_tmp_mid2_5_reg_1487;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1439 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439;
                ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487 <= ap_pipeline_reg_pp0_iter2_tmp_mid2_5_reg_1487;
                exitcond_flatten_reg_1439 <= exitcond_flatten_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_21_reg_1660 <= tmp_21_reg_1660;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                b_copy_0_3_11_fu_112 <= b_copy_0_3_18_fu_1005_p3;
                b_copy_0_3_12_fu_120 <= b_copy_0_3_16_fu_991_p3;
                b_copy_0_3_1_fu_124 <= b_copy_0_3_3_fu_984_p3;
                b_copy_0_3_8_fu_116 <= b_copy_0_3_17_fu_998_p3;
                b_copy_1_3_11_fu_128 <= b_copy_1_3_18_fu_977_p3;
                b_copy_1_3_12_fu_136 <= b_copy_1_3_16_fu_963_p3;
                b_copy_1_3_1_fu_140 <= b_copy_1_3_3_fu_956_p3;
                b_copy_1_3_8_fu_132 <= b_copy_1_3_17_fu_970_p3;
                b_copy_2_3_11_fu_144 <= b_copy_2_3_18_fu_949_p3;
                b_copy_2_3_12_fu_152 <= b_copy_2_3_16_fu_935_p3;
                b_copy_2_3_1_fu_156 <= b_copy_2_3_3_fu_928_p3;
                b_copy_2_3_8_fu_148 <= b_copy_2_3_17_fu_942_p3;
                b_copy_3_3_11_fu_160 <= b_copy_3_3_18_fu_921_p3;
                b_copy_3_3_12_fu_168 <= b_copy_3_3_16_fu_907_p3;
                b_copy_3_3_1_fu_172 <= b_copy_3_3_3_fu_900_p3;
                b_copy_3_3_8_fu_164 <= b_copy_3_3_17_fu_914_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0))) then
                b_copy_0_3_19_reg_1573 <= a_1_Dout_A;
                b_copy_2_3_19_reg_1581 <= a_2_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_380_p2))) then
                exitcond_reg_1448 <= exitcond_fu_398_p2;
                tmp_3_mid2_reg_1480 <= tmp_3_mid2_fu_438_p3;
                tmp_mid2_5_reg_1487 <= tmp_mid2_5_fu_452_p3;
                tmp_mid2_reg_1453 <= tmp_mid2_fu_410_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_1443 <= indvar_flatten_next_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then
                j_1_reg_1516 <= j_1_fu_484_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then
                j_mid2_reg_1496 <= j_mid2_fu_473_p3;
                tmp_22_reg_1505 <= tmp_22_fu_480_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_380_p2))) then
                newIndex1_mid2_v_v_reg_1473 <= newIndex1_mid2_v_v_fu_418_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                newIndex3_mid2_v_reg_1604 <= grp_fu_467_p2;
                tmp_10_reg_1624 <= tmp_10_fu_1051_p6;
                    tmp_15_reg_1589(4 downto 2) <= tmp_15_fu_596_p3(4 downto 2);
                tmp_4_reg_1609 <= tmp_4_fu_1012_p6;
                tmp_7_reg_1614 <= tmp_7_fu_1025_p6;
                tmp_9_reg_1619 <= tmp_9_fu_1038_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_337 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480)) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_341 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_352 <= grp_fu_345_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                sel_tmp1_reg_1652 <= sel_tmp1_fu_1174_p2;
                    tmp_17_reg_1629(4 downto 2) <= tmp_17_fu_1149_p3(4 downto 2);
                tmp_21_reg_1660 <= tmp_21_fu_1182_p2;
                tmp_5_reg_1644 <= tmp_5_fu_1169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439))) then
                tmp11_reg_1721 <= tmp11_fu_1300_p2;
                tmp_11_3_reg_1716 <= grp_fu_1296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439))) then
                tmp_11_1_reg_1706 <= grp_fu_1237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439))) then
                tmp_11_2_reg_1711 <= grp_fu_1281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then
                    tmp_11_reg_1528(4 downto 2) <= tmp_11_fu_498_p1(4 downto 2);
                    tmp_1_reg_1521(4 downto 2) <= tmp_1_fu_490_p3(4 downto 2);
                    tmp_20_cast_reg_1538(3 downto 0) <= tmp_20_cast_fu_516_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1439 = ap_const_lv1_0))) then
                    tmp_13_reg_1553(4 downto 2) <= tmp_13_fu_526_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1439))) then
                tmp_6_reg_1701 <= grp_fu_1212_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1521(1 downto 0) <= "00";
    tmp_11_reg_1528(1 downto 0) <= "00";
    tmp_11_reg_1528(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_20_cast_reg_1538(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_13_reg_1553(1 downto 0) <= "01";
    tmp_13_reg_1553(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_15_reg_1589(1 downto 0) <= "10";
    tmp_15_reg_1589(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_17_reg_1629(1 downto 0) <= "11";
    tmp_17_reg_1629(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, exitcond_flatten_fu_380_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_380_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_11_fu_498_p1, tmp_13_fu_526_p3, tmp_15_fu_596_p3, tmp_17_fu_1149_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_17_fu_1149_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_15_fu_596_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_13_fu_526_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_11_fu_498_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage0, tmp_11_reg_1528, tmp_20_cast_fu_516_p1, tmp_13_reg_1553, tmp_15_reg_1589, tmp_17_reg_1629, tmp_20_fu_535_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_17_reg_1629(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_15_reg_1589(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_13_reg_1553(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_11_reg_1528(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_20_fu_535_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_20_cast_fu_516_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_20_cast_reg_1538, a_2_addr_2_reg_1726, ap_enable_reg_pp0_iter3, tmp_8_fu_503_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            a_2_Addr_A_orig <= std_logic_vector(resize(unsigned(a_2_addr_2_reg_1726),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_2_Addr_A_orig <= tmp_20_cast_reg_1538(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            a_2_Addr_A_orig <= tmp_8_fu_503_p1(32 - 1 downto 0);
        else 
            a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= tmp_12_3_reg_1731;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;

    a_2_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487))))) then 
            a_2_WEN_A <= ap_const_lv4_F;
        else 
            a_2_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_3_Addr_A <= std_logic_vector(shift_left(unsigned(a_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_3_Addr_A_orig <= tmp_22_cast_fu_1304_p1(32 - 1 downto 0);
    a_3_Clk_A <= ap_clk;
    a_3_Din_A <= std_logic_vector(unsigned(tmp11_reg_1721) + unsigned(tmp12_fu_1309_p2));

    a_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            a_3_EN_A <= ap_const_logic_1;
        else 
            a_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_3_Rst_A <= ap_rst;

    a_3_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_tmp_mid2_5_reg_1487)))) then 
            a_3_WEN_A <= ap_const_lv4_F;
        else 
            a_3_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_row_0_1_fu_1198_p3 <= 
        reg_352 when (tmp_5_reg_1644(0) = '1') else 
        a_row_0_3_fu_96;
    a_row_0_2_fu_1205_p3 <= 
        reg_352 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_0_1_fu_1198_p3;
    a_row_1_1_fu_1225_p3 <= 
        a_row_1_reg_1670 when (tmp_5_reg_1644(0) = '1') else 
        a_row_1_3_fu_100;
    a_row_1_2_fu_1231_p3 <= 
        a_row_1_reg_1670 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_1_1_fu_1225_p3;
    a_row_1_fu_1191_p3 <= 
        reg_341 when (ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480(0) = '1') else 
        a_1_Dout_A;
    a_row_2_1_fu_1267_p3 <= 
        reg_352 when (tmp_5_reg_1644(0) = '1') else 
        a_row_2_3_fu_104;
    a_row_2_2_fu_1274_p3 <= 
        reg_352 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_2_1_fu_1267_p3;
    a_row_3_2_fu_1260_p3 <= 
        reg_341 when (sel_tmp1_reg_1652(0) = '1') else 
        sel_tmp_fu_1253_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state23 <= ap_CS_fsm(7 downto 7);

    ap_done_assign_proc : process(ap_CS_fsm_state23)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_copy_0_3_14_fu_673_p3 <= 
        b_copy_0_3_8_fu_116 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_9_fu_666_p3;
    b_copy_0_3_15_fu_681_p3 <= 
        b_copy_0_3_19_reg_1573 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_11_fu_112;
    b_copy_0_3_16_fu_991_p3 <= 
        b_copy_0_3_7_fu_658_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_12_fu_120;
    b_copy_0_3_17_fu_998_p3 <= 
        b_copy_0_3_14_fu_673_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_8_fu_116;
    b_copy_0_3_18_fu_1005_p3 <= 
        b_copy_0_3_15_fu_681_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_11_fu_112;
    b_copy_0_3_2_fu_635_p3 <= 
        b_copy_0_3_1_fu_124 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_4_fu_622_p3;
    b_copy_0_3_3_fu_984_p3 <= 
        b_copy_0_3_2_fu_635_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_1_fu_124;
    b_copy_0_3_4_fu_622_p3 <= 
        b_copy_0_3_1_fu_124 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_fu_610_p3;
    b_copy_0_3_5_fu_643_p3 <= 
        b_copy_0_3_19_reg_1573 when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_0_3_12_fu_120;
    b_copy_0_3_6_fu_650_p3 <= 
        b_copy_0_3_12_fu_120 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_5_fu_643_p3;
    b_copy_0_3_7_fu_658_p3 <= 
        b_copy_0_3_12_fu_120 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_0_3_6_fu_650_p3;
    b_copy_0_3_9_fu_666_p3 <= 
        b_copy_0_3_19_reg_1573 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_0_3_8_fu_116;
    b_copy_0_3_fu_610_p3 <= 
        b_copy_0_3_1_fu_124 when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_0_3_19_reg_1573;
    b_copy_1_3_14_fu_744_p3 <= 
        b_copy_1_3_8_fu_132 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_1_3_9_fu_736_p3;
    b_copy_1_3_15_fu_752_p3 <= 
        a_1_Dout_A when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_1_3_11_fu_128;
    b_copy_1_3_16_fu_963_p3 <= 
        b_copy_1_3_7_fu_728_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_12_fu_136;
    b_copy_1_3_17_fu_970_p3 <= 
        b_copy_1_3_14_fu_744_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_8_fu_132;
    b_copy_1_3_18_fu_977_p3 <= 
        b_copy_1_3_15_fu_752_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_11_fu_128;
    b_copy_1_3_2_fu_704_p3 <= 
        b_copy_1_3_1_fu_140 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_1_3_4_fu_696_p3;
    b_copy_1_3_3_fu_956_p3 <= 
        b_copy_1_3_2_fu_704_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_1_fu_140;
    b_copy_1_3_4_fu_696_p3 <= 
        b_copy_1_3_1_fu_140 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_1_3_fu_688_p3;
    b_copy_1_3_5_fu_712_p3 <= 
        a_1_Dout_A when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_1_3_12_fu_136;
    b_copy_1_3_6_fu_720_p3 <= 
        b_copy_1_3_12_fu_136 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_1_3_5_fu_712_p3;
    b_copy_1_3_7_fu_728_p3 <= 
        b_copy_1_3_12_fu_136 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_1_3_6_fu_720_p3;
    b_copy_1_3_9_fu_736_p3 <= 
        a_1_Dout_A when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_1_3_8_fu_132;
    b_copy_1_3_fu_688_p3 <= 
        b_copy_1_3_1_fu_140 when (sel_tmp5_fu_605_p2(0) = '1') else 
        a_1_Dout_A;
    b_copy_2_3_14_fu_813_p3 <= 
        b_copy_2_3_8_fu_148 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_2_3_9_fu_806_p3;
    b_copy_2_3_15_fu_821_p3 <= 
        b_copy_2_3_19_reg_1581 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_2_3_11_fu_144;
    b_copy_2_3_16_fu_935_p3 <= 
        b_copy_2_3_7_fu_798_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_12_fu_152;
    b_copy_2_3_17_fu_942_p3 <= 
        b_copy_2_3_14_fu_813_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_8_fu_148;
    b_copy_2_3_18_fu_949_p3 <= 
        b_copy_2_3_15_fu_821_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_11_fu_144;
    b_copy_2_3_2_fu_775_p3 <= 
        b_copy_2_3_1_fu_156 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_2_3_4_fu_767_p3;
    b_copy_2_3_3_fu_928_p3 <= 
        b_copy_2_3_2_fu_775_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_1_fu_156;
    b_copy_2_3_4_fu_767_p3 <= 
        b_copy_2_3_1_fu_156 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_2_3_fu_760_p3;
    b_copy_2_3_5_fu_783_p3 <= 
        b_copy_2_3_19_reg_1581 when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_2_3_12_fu_152;
    b_copy_2_3_6_fu_790_p3 <= 
        b_copy_2_3_12_fu_152 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_2_3_5_fu_783_p3;
    b_copy_2_3_7_fu_798_p3 <= 
        b_copy_2_3_12_fu_152 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_2_3_6_fu_790_p3;
    b_copy_2_3_9_fu_806_p3 <= 
        b_copy_2_3_19_reg_1581 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_2_3_8_fu_148;
    b_copy_2_3_fu_760_p3 <= 
        b_copy_2_3_1_fu_156 when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_2_3_19_reg_1581;
    b_copy_3_3_14_fu_884_p3 <= 
        b_copy_3_3_8_fu_164 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_3_3_9_fu_876_p3;
    b_copy_3_3_15_fu_892_p3 <= 
        a_2_Dout_A when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_3_3_11_fu_160;
    b_copy_3_3_16_fu_907_p3 <= 
        b_copy_3_3_7_fu_868_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_12_fu_168;
    b_copy_3_3_17_fu_914_p3 <= 
        b_copy_3_3_14_fu_884_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_8_fu_164;
    b_copy_3_3_18_fu_921_p3 <= 
        b_copy_3_3_15_fu_892_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_11_fu_160;
    b_copy_3_3_2_fu_844_p3 <= 
        b_copy_3_3_1_fu_172 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_3_3_4_fu_836_p3;
    b_copy_3_3_3_fu_900_p3 <= 
        b_copy_3_3_2_fu_844_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_1_fu_172;
    b_copy_3_3_4_fu_836_p3 <= 
        b_copy_3_3_1_fu_172 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_3_3_fu_828_p3;
    b_copy_3_3_5_fu_852_p3 <= 
        a_2_Dout_A when (sel_tmp5_fu_605_p2(0) = '1') else 
        b_copy_3_3_12_fu_168;
    b_copy_3_3_6_fu_860_p3 <= 
        b_copy_3_3_12_fu_168 when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_3_3_5_fu_852_p3;
    b_copy_3_3_7_fu_868_p3 <= 
        b_copy_3_3_12_fu_168 when (sel_tmp9_fu_630_p2(0) = '1') else 
        b_copy_3_3_6_fu_860_p3;
    b_copy_3_3_9_fu_876_p3 <= 
        a_2_Dout_A when (sel_tmp7_fu_617_p2(0) = '1') else 
        b_copy_3_3_8_fu_164;
    b_copy_3_3_fu_828_p3 <= 
        b_copy_3_3_1_fu_172 when (sel_tmp5_fu_605_p2(0) = '1') else 
        a_2_Dout_A;
    exitcond_flatten_fu_380_p2 <= "1" when (indvar_flatten_phi_fu_307_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_398_p2 <= "1" when (j_phi_fu_329_p4 = ap_const_lv3_4) else "0";
    grp_fu_1212_p1 <= 
        reg_352 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_0_1_fu_1198_p3;
    grp_fu_1237_p1 <= 
        a_row_1_reg_1670 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_1_1_fu_1225_p3;
    grp_fu_1281_p1 <= 
        reg_352 when (sel_tmp1_reg_1652(0) = '1') else 
        a_row_2_1_fu_1267_p3;
    grp_fu_345_p3 <= 
        reg_337 when (ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480(0) = '1') else 
        a_1_Dout_A;
    grp_fu_426_p0 <= 
        i_1_fu_392_p2 when (exitcond_fu_398_p2(0) = '1') else 
        i_phi_fu_318_p4;
    grp_fu_467_p0 <= (ap_const_lv1_1 & newIndex1_mid2_v_v_reg_1473);
    grp_fu_467_p1 <= ap_const_lv4_3(3 - 1 downto 0);
    i_1_fu_392_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_318_p4));

    i_phi_fu_318_p4_assign_proc : process(i_reg_314, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1439, ap_CS_fsm_pp0_stage0, newIndex1_mid2_v_v_reg_1473)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
            i_phi_fu_318_p4 <= newIndex1_mid2_v_v_reg_1473;
        else 
            i_phi_fu_318_p4 <= i_reg_314;
        end if; 
    end process;

    indvar_flatten_next_fu_386_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_307_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_307_p4_assign_proc : process(indvar_flatten_reg_303, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1439, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1443)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
            indvar_flatten_phi_fu_307_p4 <= indvar_flatten_next_reg_1443;
        else 
            indvar_flatten_phi_fu_307_p4 <= indvar_flatten_reg_303;
        end if; 
    end process;

    j_1_fu_484_p2 <= std_logic_vector(unsigned(j_mid2_fu_473_p3) + unsigned(ap_const_lv3_1));
    j_mid2_fu_473_p3 <= 
        ap_const_lv3_0 when (exitcond_reg_1448(0) = '1') else 
        j_reg_325;

    j_phi_fu_329_p4_assign_proc : process(j_reg_325, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1439, ap_CS_fsm_pp0_stage0, j_1_reg_1516)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1439 = ap_const_lv1_0))) then 
            j_phi_fu_329_p4 <= j_1_reg_1516;
        else 
            j_phi_fu_329_p4 <= j_reg_325;
        end if; 
    end process;

    newIndex1_mid2_v_v_fu_418_p3 <= 
        i_1_fu_392_p2 when (exitcond_fu_398_p2(0) = '1') else 
        i_phi_fu_318_p4;
    sel_tmp1_fu_1174_p2 <= (tmp_5_fu_1169_p2 and ap_pipeline_reg_pp0_iter1_tmp_3_mid2_reg_1480);
    sel_tmp5_fu_605_p2 <= "1" when (tmp_22_reg_1505 = ap_const_lv2_2) else "0";
    sel_tmp7_fu_617_p2 <= "1" when (tmp_22_reg_1505 = ap_const_lv2_1) else "0";
    sel_tmp9_fu_630_p2 <= "1" when (tmp_22_reg_1505 = ap_const_lv2_0) else "0";
    sel_tmp_fu_1253_p3 <= 
        a_1_Dout_A when (tmp_5_reg_1644(0) = '1') else 
        a_row_3_1_fu_108;
    tmp11_fu_1300_p2 <= std_logic_vector(unsigned(tmp_11_2_reg_1711) + unsigned(tmp_11_1_reg_1706));
    tmp12_fu_1309_p2 <= std_logic_vector(unsigned(tmp_11_3_reg_1716) + unsigned(tmp_6_reg_1701));
    tmp_10_fu_1051_p1 <= 
        b_copy_3_3_15_fu_892_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_11_fu_160;
    tmp_10_fu_1051_p2 <= 
        b_copy_3_3_14_fu_884_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_8_fu_164;
    tmp_10_fu_1051_p3 <= 
        b_copy_3_3_7_fu_868_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_12_fu_168;
    tmp_10_fu_1051_p4 <= 
        b_copy_3_3_2_fu_844_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_3_3_1_fu_172;
    tmp_11_fu_498_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_490_p3),64));
    tmp_12_3_fu_1313_p2 <= std_logic_vector(unsigned(tmp11_reg_1721) + unsigned(tmp12_fu_1309_p2));
    tmp_12_fu_521_p2 <= (tmp_1_reg_1521 or ap_const_lv5_1);
    tmp_13_fu_526_p3 <= (ap_const_lv59_0 & tmp_12_fu_521_p2);
    tmp_14_fu_591_p2 <= (tmp_1_reg_1521 or ap_const_lv5_2);
    tmp_15_fu_596_p3 <= (ap_const_lv59_0 & tmp_14_fu_591_p2);
    tmp_16_fu_1144_p2 <= (tmp_1_reg_1521 or ap_const_lv5_3);
    tmp_17_fu_1149_p3 <= (ap_const_lv59_0 & tmp_16_fu_1144_p2);
    tmp_18_fu_1158_p1 <= newIndex3_mid2_v_reg_1604(3 - 1 downto 0);
    tmp_19_cast_fu_1161_p3 <= (tmp_18_fu_1158_p1 & ap_const_lv2_0);
    tmp_19_fu_510_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_8_cast_fu_507_p1));
    tmp_1_fu_490_p3 <= (grp_fu_426_p2 & ap_const_lv2_0);
    tmp_1_off_fu_368_p2 <= std_logic_vector(unsigned(i_phi_fu_318_p4) + unsigned(ap_const_lv3_2));
    tmp_20_cast_fu_516_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_510_p2),64));
    tmp_20_fu_535_p3 <= (ap_const_lv61_1 & j_mid2_reg_1496);
    tmp_21_fu_1182_p2 <= std_logic_vector(unsigned(tmp_19_cast_fu_1161_p3) + unsigned(tmp_8_cast6_fu_1179_p1));
    tmp_22_cast_fu_1304_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter2_tmp_21_reg_1660),64));
    tmp_22_fu_480_p1 <= j_mid2_fu_473_p3(2 - 1 downto 0);
    tmp_3_fu_362_p2 <= "1" when (unsigned(i_phi_fu_318_p4) < unsigned(ap_const_lv3_3)) else "0";
    tmp_3_mid1_fu_432_p2 <= "1" when (unsigned(i_1_fu_392_p2) < unsigned(ap_const_lv3_3)) else "0";
    tmp_3_mid2_fu_438_p3 <= 
        tmp_3_mid1_fu_432_p2 when (exitcond_fu_398_p2(0) = '1') else 
        tmp_3_fu_362_p2;
    tmp_4_fu_1012_p1 <= 
        b_copy_0_3_15_fu_681_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_11_fu_112;
    tmp_4_fu_1012_p2 <= 
        b_copy_0_3_14_fu_673_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_8_fu_116;
    tmp_4_fu_1012_p3 <= 
        b_copy_0_3_7_fu_658_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_12_fu_120;
    tmp_4_fu_1012_p4 <= 
        b_copy_0_3_2_fu_635_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_0_3_1_fu_124;
    tmp_5_fu_1169_p2 <= "1" when (j_mid2_reg_1496 = ap_const_lv3_0) else "0";
    tmp_7_fu_1025_p1 <= 
        b_copy_1_3_15_fu_752_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_11_fu_128;
    tmp_7_fu_1025_p2 <= 
        b_copy_1_3_14_fu_744_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_8_fu_132;
    tmp_7_fu_1025_p3 <= 
        b_copy_1_3_7_fu_728_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_12_fu_136;
    tmp_7_fu_1025_p4 <= 
        b_copy_1_3_2_fu_704_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_1_3_1_fu_140;
    tmp_8_cast6_fu_1179_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1496),5));
    tmp_8_cast_fu_507_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1496),4));
    tmp_8_fu_503_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1496),64));
    tmp_9_fu_1038_p1 <= 
        b_copy_2_3_15_fu_821_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_11_fu_144;
    tmp_9_fu_1038_p2 <= 
        b_copy_2_3_14_fu_813_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_8_fu_148;
    tmp_9_fu_1038_p3 <= 
        b_copy_2_3_7_fu_798_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_12_fu_152;
    tmp_9_fu_1038_p4 <= 
        b_copy_2_3_2_fu_775_p3 when (ap_pipeline_reg_pp0_iter1_tmp_mid2_reg_1453(0) = '1') else 
        b_copy_2_3_1_fu_156;
    tmp_fu_356_p2 <= "1" when (i_phi_fu_318_p4 = ap_const_lv3_0) else "0";
    tmp_mid1_4_fu_446_p2 <= "1" when (unsigned(i_phi_fu_318_p4) > unsigned(ap_const_lv3_4)) else "0";
    tmp_mid1_fu_404_p2 <= "1" when (i_1_fu_392_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_5_fu_452_p3 <= 
        tmp_mid1_4_fu_446_p2 when (exitcond_fu_398_p2(0) = '1') else 
        tmp_s_fu_374_p2;
    tmp_mid2_fu_410_p3 <= 
        tmp_mid1_fu_404_p2 when (exitcond_fu_398_p2(0) = '1') else 
        tmp_fu_356_p2;
    tmp_s_fu_374_p2 <= "1" when (unsigned(tmp_1_off_fu_368_p2) < unsigned(ap_const_lv3_3)) else "0";
end behav;
