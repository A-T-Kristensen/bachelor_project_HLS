

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Wed Apr  5 09:18:16 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul
* Solution:       matrixmul_5b
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.05|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  112|  112|  113|  113|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- L_col   |  110|  110|        21|          6|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 21


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 23
* Pipeline: 1
  Pipeline-0: II = 6, D = 21, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	23  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	2  / true
23 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_0_3 (6)  [1/1] 0.00ns
:0  %a_row_0_3 = alloca i32

ST_1: a_row_1_3 (7)  [1/1] 0.00ns
:1  %a_row_1_3 = alloca i32

ST_1: a_row_2_3 (8)  [1/1] 0.00ns
:2  %a_row_2_3 = alloca i32

ST_1: a_row_3_1 (9)  [1/1] 0.00ns
:3  %a_row_3_1 = alloca i32

ST_1: b_copy_0_3_11 (10)  [1/1] 0.00ns
:4  %b_copy_0_3_11 = alloca i32

ST_1: b_copy_0_3_8 (11)  [1/1] 0.00ns
:5  %b_copy_0_3_8 = alloca i32

ST_1: b_copy_0_3_12 (12)  [1/1] 0.00ns
:6  %b_copy_0_3_12 = alloca i32

ST_1: b_copy_0_3_1 (13)  [1/1] 0.00ns
:7  %b_copy_0_3_1 = alloca i32

ST_1: b_copy_1_3_11 (14)  [1/1] 0.00ns
:8  %b_copy_1_3_11 = alloca i32

ST_1: b_copy_1_3_8 (15)  [1/1] 0.00ns
:9  %b_copy_1_3_8 = alloca i32

ST_1: b_copy_1_3_12 (16)  [1/1] 0.00ns
:10  %b_copy_1_3_12 = alloca i32

ST_1: b_copy_1_3_1 (17)  [1/1] 0.00ns
:11  %b_copy_1_3_1 = alloca i32

ST_1: b_copy_2_3_11 (18)  [1/1] 0.00ns
:12  %b_copy_2_3_11 = alloca i32

ST_1: b_copy_2_3_8 (19)  [1/1] 0.00ns
:13  %b_copy_2_3_8 = alloca i32

ST_1: b_copy_2_3_12 (20)  [1/1] 0.00ns
:14  %b_copy_2_3_12 = alloca i32

ST_1: b_copy_2_3_1 (21)  [1/1] 0.00ns
:15  %b_copy_2_3_1 = alloca i32

ST_1: b_copy_3_3_11 (22)  [1/1] 0.00ns
:16  %b_copy_3_3_11 = alloca i32

ST_1: b_copy_3_3_8 (23)  [1/1] 0.00ns
:17  %b_copy_3_3_8 = alloca i32

ST_1: b_copy_3_3_12 (24)  [1/1] 0.00ns
:18  %b_copy_3_3_12 = alloca i32

ST_1: b_copy_3_3_1 (25)  [1/1] 0.00ns
:19  %b_copy_3_3_1 = alloca i32

ST_1: StgValue_44 (26)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %a_4), !map !7

ST_1: StgValue_45 (27)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap([12 x i32]* %a_3), !map !14

ST_1: StgValue_46 (28)  [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap([12 x i32]* %a_2), !map !20

ST_1: StgValue_47 (29)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecBitsMap([12 x i32]* %a_1), !map !26

ST_1: StgValue_48 (30)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecBitsMap([12 x i32]* %a_0), !map !32

ST_1: StgValue_49 (31)  [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind

ST_1: StgValue_50 (32)  [1/1] 0.00ns  loc: matrixmul.cpp:50
:26  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_51 (33)  [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecInterface([12 x i32]* %a_0, [12 x i32]* %a_1, [12 x i32]* %a_2, [12 x i32]* %a_3, [4 x i32]* %a_4, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_52 (34)  [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecMemCore([12 x i32]* %a_0, [12 x i32]* %a_1, [12 x i32]* %a_2, [12 x i32]* %a_3, [4 x i32]* %a_4, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_53 (35)  [1/1] 1.57ns  loc: matrixmul.cpp:63
:29  br label %.preheader7


 <State 2>: 6.05ns
ST_2: indvar_flatten (37)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i5 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit89 ]

ST_2: i (38)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7:1  %i = phi i3 [ 0, %0 ], [ %newIndex1_mid2_v_v, %.loopexit89 ]

ST_2: j (39)  [1/1] 0.00ns
.preheader7:2  %j = phi i3 [ 0, %0 ], [ %j_1, %.loopexit89 ]

ST_2: tmp (40)  [1/1] 1.94ns  loc: matrixmul.cpp:75
.preheader7:3  %tmp = icmp eq i3 %i, 0

ST_2: tmp_3 (41)  [1/1] 1.94ns  loc: matrixmul.cpp:71
.preheader7:4  %tmp_3 = icmp ult i3 %i, 3

ST_2: tmp_1_off (42)  [1/1] 0.75ns  loc: matrixmul.cpp:85
.preheader7:5  %tmp_1_off = add i3 %i, 2

ST_2: tmp_s (43)  [1/1] 1.94ns  loc: matrixmul.cpp:85
.preheader7:6  %tmp_s = icmp ult i3 %tmp_1_off, 3

ST_2: exitcond_flatten (44)  [1/1] 2.37ns
.preheader7:7  %exitcond_flatten = icmp eq i5 %indvar_flatten, -16

ST_2: indvar_flatten_next (45)  [1/1] 1.67ns
.preheader7:8  %indvar_flatten_next = add i5 %indvar_flatten, 1

ST_2: StgValue_63 (46)  [1/1] 0.00ns
.preheader7:9  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (68)  [1/1] 0.75ns  loc: matrixmul.cpp:63
.preheader7.preheader:20  %i_1 = add i3 1, %i

ST_2: exitcond (71)  [1/1] 1.94ns  loc: matrixmul.cpp:64
.preheader7.preheader:23  %exitcond = icmp eq i3 %j, -4

ST_2: tmp_mid1 (73)  [1/1] 1.94ns  loc: matrixmul.cpp:75
.preheader7.preheader:25  %tmp_mid1 = icmp eq i3 %i_1, 0

ST_2: tmp_mid2 (74)  [1/1] 1.37ns  loc: matrixmul.cpp:75
.preheader7.preheader:26  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp

ST_2: newIndex1_mid2_v_v (75)  [1/1] 1.37ns  loc: matrixmul.cpp:64
.preheader7.preheader:27  %newIndex1_mid2_v_v = select i1 %exitcond, i3 %i_1, i3 %i

ST_2: newIndex1_mid2_v (76)  [7/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_2: tmp_3_mid1 (93)  [1/1] 1.94ns  loc: matrixmul.cpp:71
.preheader7.preheader:45  %tmp_3_mid1 = icmp ult i3 %i_1, 3

ST_2: tmp_3_mid2 (94)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:46  %tmp_3_mid2 = select i1 %exitcond, i1 %tmp_3_mid1, i1 %tmp_3

ST_2: tmp_mid1_4 (99)  [1/1] 1.94ns  loc: matrixmul.cpp:85
.preheader7.preheader:51  %tmp_mid1_4 = icmp ugt i3 %i, -4

ST_2: tmp_mid2_5 (100)  [1/1] 1.37ns  loc: matrixmul.cpp:85
.preheader7.preheader:52  %tmp_mid2_5 = select i1 %exitcond, i1 %tmp_mid1_4, i1 %tmp_s

ST_2: StgValue_74 (230)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:182  br i1 %tmp_mid2_5, label %branch22, label %branch23


 <State 3>: 2.74ns
ST_3: newIndex1_mid2_v (76)  [6/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_3: newIndex3_mid2_v_v (95)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:47  %newIndex3_mid2_v_v = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %newIndex1_mid2_v_v)

ST_3: newIndex3_mid2_v (96)  [8/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3


 <State 4>: 2.74ns
ST_4: newIndex1_mid2_v (76)  [5/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_4: newIndex3_mid2_v (96)  [7/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3


 <State 5>: 2.74ns
ST_5: newIndex1_mid2_v (76)  [4/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_5: newIndex3_mid2_v (96)  [6/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3


 <State 6>: 2.74ns
ST_6: newIndex1_mid2_v (76)  [3/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_6: newIndex3_mid2_v (96)  [5/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3


 <State 7>: 2.74ns
ST_7: j_mid2 (72)  [1/1] 1.37ns  loc: matrixmul.cpp:64
.preheader7.preheader:24  %j_mid2 = select i1 %exitcond, i3 0, i3 %j

ST_7: newIndex1_mid2_v (76)  [2/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_7: newIndex3_mid2_v (96)  [4/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3

ST_7: tmp_2 (102)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:54  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_7: tmp_22 (140)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:92  %tmp_22 = trunc i3 %j_mid2 to i2

ST_7: empty (238)  [1/1] 0.00ns  loc: matrixmul.cpp:86
.loopexit89:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_7: j_1 (239)  [1/1] 0.75ns  loc: matrixmul.cpp:64
.loopexit89:1  %j_1 = add i3 %j_mid2, 1

ST_7: StgValue_91 (240)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.loopexit89:2  br label %.preheader7


 <State 8>: 5.13ns
ST_8: newIndex1_mid2_v (76)  [1/7] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:28  %newIndex1_mid2_v = urem i3 %newIndex1_mid2_v_v, 3

ST_8: tmp_1 (77)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:29  %tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %newIndex1_mid2_v, i2 0)

ST_8: tmp_11 (78)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:30  %tmp_11 = zext i5 %tmp_1 to i64

ST_8: a_0_addr (79)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:31  %a_0_addr = getelementptr [12 x i32]* %a_0, i64 0, i64 %tmp_11

ST_8: newIndex3_mid2_v (96)  [3/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3

ST_8: a_0_load (105)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:57  %a_0_load = load i32* %a_0_addr, align 4

ST_8: tmp_8 (125)  [1/1] 0.00ns  loc: matrixmul.cpp:77
.preheader7.preheader:77  %tmp_8 = zext i3 %j_mid2 to i64

ST_8: tmp_8_cast (127)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:79  %tmp_8_cast = zext i3 %j_mid2 to i4

ST_8: tmp_19 (128)  [1/1] 0.75ns  loc: matrixmul.cpp:64
.preheader7.preheader:80  %tmp_19 = add i4 4, %tmp_8_cast

ST_8: tmp_20_cast (129)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:81  %tmp_20_cast = zext i4 %tmp_19 to i64

ST_8: a_1_addr_4 (130)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:82  %a_1_addr_4 = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_20_cast

ST_8: a_2_addr (133)  [1/1] 0.00ns  loc: matrixmul.cpp:77
.preheader7.preheader:85  %a_2_addr = getelementptr [12 x i32]* %a_2, i64 0, i64 %tmp_8

ST_8: b_copy_0_3_19 (139)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:91  %b_copy_0_3_19 = load i32* %a_1_addr_4, align 4

ST_8: b_copy_2_3_19 (163)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:115  %b_copy_2_3_19 = load i32* %a_2_addr, align 4


 <State 9>: 2.74ns
ST_9: tmp_12 (80)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:32  %tmp_12 = or i5 %tmp_1, 1

ST_9: tmp_13 (81)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:33  %tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_12)

ST_9: a_0_addr_1 (82)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:34  %a_0_addr_1 = getelementptr [12 x i32]* %a_0, i64 0, i64 %tmp_13

ST_9: newIndex3_mid2_v (96)  [2/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3

ST_9: a_0_load (105)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:57  %a_0_load = load i32* %a_0_addr, align 4

ST_9: a_0_load_1 (108)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:60  %a_0_load_1 = load i32* %a_0_addr_1, align 4

ST_9: tmp_20 (131)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:83  %tmp_20 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 1, i3 %j_mid2)

ST_9: a_1_addr_5 (132)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:84  %a_1_addr_5 = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_20

ST_9: a_2_addr_1 (134)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:86  %a_2_addr_1 = getelementptr [12 x i32]* %a_2, i64 0, i64 %tmp_20_cast

ST_9: b_copy_0_3_19 (139)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:91  %b_copy_0_3_19 = load i32* %a_1_addr_4, align 4

ST_9: b_copy_1_3_19 (153)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:105  %b_copy_1_3_19 = load i32* %a_1_addr_5, align 4

ST_9: b_copy_2_3_19 (163)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:115  %b_copy_2_3_19 = load i32* %a_2_addr, align 4

ST_9: b_copy_3_3_19 (173)  [2/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:125  %b_copy_3_3_19 = load i32* %a_2_addr_1, align 4


 <State 10>: 6.70ns
ST_10: b_copy_0_3_11_load (52)  [1/1] 0.00ns
.preheader7.preheader:4  %b_copy_0_3_11_load = load i32* %b_copy_0_3_11

ST_10: b_copy_0_3_8_load (53)  [1/1] 0.00ns
.preheader7.preheader:5  %b_copy_0_3_8_load = load i32* %b_copy_0_3_8

ST_10: b_copy_0_3_12_load (54)  [1/1] 0.00ns
.preheader7.preheader:6  %b_copy_0_3_12_load = load i32* %b_copy_0_3_12

ST_10: b_copy_0_3_1_load (55)  [1/1] 0.00ns
.preheader7.preheader:7  %b_copy_0_3_1_load = load i32* %b_copy_0_3_1

ST_10: b_copy_1_3_11_load (56)  [1/1] 0.00ns
.preheader7.preheader:8  %b_copy_1_3_11_load = load i32* %b_copy_1_3_11

ST_10: b_copy_1_3_8_load (57)  [1/1] 0.00ns
.preheader7.preheader:9  %b_copy_1_3_8_load = load i32* %b_copy_1_3_8

ST_10: b_copy_1_3_12_load (58)  [1/1] 0.00ns
.preheader7.preheader:10  %b_copy_1_3_12_load = load i32* %b_copy_1_3_12

ST_10: b_copy_1_3_1_load (59)  [1/1] 0.00ns
.preheader7.preheader:11  %b_copy_1_3_1_load = load i32* %b_copy_1_3_1

ST_10: b_copy_2_3_11_load (60)  [1/1] 0.00ns
.preheader7.preheader:12  %b_copy_2_3_11_load = load i32* %b_copy_2_3_11

ST_10: b_copy_2_3_8_load (61)  [1/1] 0.00ns
.preheader7.preheader:13  %b_copy_2_3_8_load = load i32* %b_copy_2_3_8

ST_10: b_copy_2_3_12_load (62)  [1/1] 0.00ns
.preheader7.preheader:14  %b_copy_2_3_12_load = load i32* %b_copy_2_3_12

ST_10: b_copy_2_3_1_load (63)  [1/1] 0.00ns
.preheader7.preheader:15  %b_copy_2_3_1_load = load i32* %b_copy_2_3_1

ST_10: b_copy_3_3_11_load (64)  [1/1] 0.00ns
.preheader7.preheader:16  %b_copy_3_3_11_load = load i32* %b_copy_3_3_11

ST_10: b_copy_3_3_8_load (65)  [1/1] 0.00ns
.preheader7.preheader:17  %b_copy_3_3_8_load = load i32* %b_copy_3_3_8

ST_10: b_copy_3_3_12_load (66)  [1/1] 0.00ns
.preheader7.preheader:18  %b_copy_3_3_12_load = load i32* %b_copy_3_3_12

ST_10: b_copy_3_3_1_load (67)  [1/1] 0.00ns
.preheader7.preheader:19  %b_copy_3_3_1_load = load i32* %b_copy_3_3_1

ST_10: tmp_14 (83)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:35  %tmp_14 = or i5 %tmp_1, 2

ST_10: tmp_15 (84)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:36  %tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_14)

ST_10: a_0_addr_2 (85)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:37  %a_0_addr_2 = getelementptr [12 x i32]* %a_0, i64 0, i64 %tmp_15

ST_10: a_1_addr (89)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:41  %a_1_addr = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_11

ST_10: newIndex3_mid2_v (96)  [1/8] 2.74ns  loc: matrixmul.cpp:64
.preheader7.preheader:48  %newIndex3_mid2_v = urem i4 %newIndex3_mid2_v_v, 3

ST_10: a_1_load (106)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:58  %a_1_load = load i32* %a_1_addr, align 4

ST_10: a_0_load_1 (108)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:60  %a_0_load_1 = load i32* %a_0_addr_1, align 4

ST_10: a_0_load_2 (111)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:63  %a_0_load_2 = load i32* %a_0_addr_2, align 4

ST_10: sel_tmp5 (141)  [1/1] 1.54ns  loc: matrixmul.cpp:64
.preheader7.preheader:93  %sel_tmp5 = icmp eq i2 %tmp_22, -2

ST_10: b_copy_0_3 (142)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_4)
.preheader7.preheader:94  %b_copy_0_3 = select i1 %sel_tmp5, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3_19

ST_10: sel_tmp7 (143)  [1/1] 1.54ns  loc: matrixmul.cpp:64
.preheader7.preheader:95  %sel_tmp7 = icmp eq i2 %tmp_22, 1

ST_10: b_copy_0_3_4 (144)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:96  %b_copy_0_3_4 = select i1 %sel_tmp7, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3

ST_10: sel_tmp9 (145)  [1/1] 1.54ns  loc: matrixmul.cpp:64
.preheader7.preheader:97  %sel_tmp9 = icmp eq i2 %tmp_22, 0

ST_10: b_copy_0_3_2 (146)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_3)
.preheader7.preheader:98  %b_copy_0_3_2 = select i1 %sel_tmp9, i32 %b_copy_0_3_1_load, i32 %b_copy_0_3_4

ST_10: b_copy_0_3_5 (147)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_6)
.preheader7.preheader:99  %b_copy_0_3_5 = select i1 %sel_tmp5, i32 %b_copy_0_3_19, i32 %b_copy_0_3_12_load

ST_10: b_copy_0_3_6 (148)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:100  %b_copy_0_3_6 = select i1 %sel_tmp7, i32 %b_copy_0_3_12_load, i32 %b_copy_0_3_5

ST_10: b_copy_0_3_7 (149)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_16)
.preheader7.preheader:101  %b_copy_0_3_7 = select i1 %sel_tmp9, i32 %b_copy_0_3_12_load, i32 %b_copy_0_3_6

ST_10: b_copy_0_3_9 (150)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_14)
.preheader7.preheader:102  %b_copy_0_3_9 = select i1 %sel_tmp7, i32 %b_copy_0_3_19, i32 %b_copy_0_3_8_load

ST_10: b_copy_0_3_14 (151)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:103  %b_copy_0_3_14 = select i1 %sel_tmp9, i32 %b_copy_0_3_8_load, i32 %b_copy_0_3_9

ST_10: b_copy_0_3_15 (152)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_0_3_18)
.preheader7.preheader:104  %b_copy_0_3_15 = select i1 %sel_tmp9, i32 %b_copy_0_3_19, i32 %b_copy_0_3_11_load

ST_10: b_copy_1_3_19 (153)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:105  %b_copy_1_3_19 = load i32* %a_1_addr_5, align 4

ST_10: b_copy_1_3 (154)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_4)
.preheader7.preheader:106  %b_copy_1_3 = select i1 %sel_tmp5, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3_19

ST_10: b_copy_1_3_4 (155)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:107  %b_copy_1_3_4 = select i1 %sel_tmp7, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3

ST_10: b_copy_1_3_2 (156)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_3)
.preheader7.preheader:108  %b_copy_1_3_2 = select i1 %sel_tmp9, i32 %b_copy_1_3_1_load, i32 %b_copy_1_3_4

ST_10: b_copy_1_3_5 (157)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_6)
.preheader7.preheader:109  %b_copy_1_3_5 = select i1 %sel_tmp5, i32 %b_copy_1_3_19, i32 %b_copy_1_3_12_load

ST_10: b_copy_1_3_6 (158)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:110  %b_copy_1_3_6 = select i1 %sel_tmp7, i32 %b_copy_1_3_12_load, i32 %b_copy_1_3_5

ST_10: b_copy_1_3_7 (159)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_16)
.preheader7.preheader:111  %b_copy_1_3_7 = select i1 %sel_tmp9, i32 %b_copy_1_3_12_load, i32 %b_copy_1_3_6

ST_10: b_copy_1_3_9 (160)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_14)
.preheader7.preheader:112  %b_copy_1_3_9 = select i1 %sel_tmp7, i32 %b_copy_1_3_19, i32 %b_copy_1_3_8_load

ST_10: b_copy_1_3_14 (161)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:113  %b_copy_1_3_14 = select i1 %sel_tmp9, i32 %b_copy_1_3_8_load, i32 %b_copy_1_3_9

ST_10: b_copy_1_3_15 (162)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_1_3_18)
.preheader7.preheader:114  %b_copy_1_3_15 = select i1 %sel_tmp9, i32 %b_copy_1_3_19, i32 %b_copy_1_3_11_load

ST_10: b_copy_2_3 (164)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_4)
.preheader7.preheader:116  %b_copy_2_3 = select i1 %sel_tmp5, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3_19

ST_10: b_copy_2_3_4 (165)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:117  %b_copy_2_3_4 = select i1 %sel_tmp7, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3

ST_10: b_copy_2_3_2 (166)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_3)
.preheader7.preheader:118  %b_copy_2_3_2 = select i1 %sel_tmp9, i32 %b_copy_2_3_1_load, i32 %b_copy_2_3_4

ST_10: b_copy_2_3_5 (167)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_6)
.preheader7.preheader:119  %b_copy_2_3_5 = select i1 %sel_tmp5, i32 %b_copy_2_3_19, i32 %b_copy_2_3_12_load

ST_10: b_copy_2_3_6 (168)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:120  %b_copy_2_3_6 = select i1 %sel_tmp7, i32 %b_copy_2_3_12_load, i32 %b_copy_2_3_5

ST_10: b_copy_2_3_7 (169)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_16)
.preheader7.preheader:121  %b_copy_2_3_7 = select i1 %sel_tmp9, i32 %b_copy_2_3_12_load, i32 %b_copy_2_3_6

ST_10: b_copy_2_3_9 (170)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_14)
.preheader7.preheader:122  %b_copy_2_3_9 = select i1 %sel_tmp7, i32 %b_copy_2_3_19, i32 %b_copy_2_3_8_load

ST_10: b_copy_2_3_14 (171)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:123  %b_copy_2_3_14 = select i1 %sel_tmp9, i32 %b_copy_2_3_8_load, i32 %b_copy_2_3_9

ST_10: b_copy_2_3_15 (172)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_2_3_18)
.preheader7.preheader:124  %b_copy_2_3_15 = select i1 %sel_tmp9, i32 %b_copy_2_3_19, i32 %b_copy_2_3_11_load

ST_10: b_copy_3_3_19 (173)  [1/2] 2.39ns  loc: matrixmul.cpp:77
.preheader7.preheader:125  %b_copy_3_3_19 = load i32* %a_2_addr_1, align 4

ST_10: b_copy_3_3 (174)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_4)
.preheader7.preheader:126  %b_copy_3_3 = select i1 %sel_tmp5, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3_19

ST_10: b_copy_3_3_4 (175)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:127  %b_copy_3_3_4 = select i1 %sel_tmp7, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3

ST_10: b_copy_3_3_2 (176)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_3)
.preheader7.preheader:128  %b_copy_3_3_2 = select i1 %sel_tmp9, i32 %b_copy_3_3_1_load, i32 %b_copy_3_3_4

ST_10: b_copy_3_3_5 (177)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_6)
.preheader7.preheader:129  %b_copy_3_3_5 = select i1 %sel_tmp5, i32 %b_copy_3_3_19, i32 %b_copy_3_3_12_load

ST_10: b_copy_3_3_6 (178)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:130  %b_copy_3_3_6 = select i1 %sel_tmp7, i32 %b_copy_3_3_12_load, i32 %b_copy_3_3_5

ST_10: b_copy_3_3_7 (179)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_16)
.preheader7.preheader:131  %b_copy_3_3_7 = select i1 %sel_tmp9, i32 %b_copy_3_3_12_load, i32 %b_copy_3_3_6

ST_10: b_copy_3_3_9 (180)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_14)
.preheader7.preheader:132  %b_copy_3_3_9 = select i1 %sel_tmp7, i32 %b_copy_3_3_19, i32 %b_copy_3_3_8_load

ST_10: b_copy_3_3_14 (181)  [1/1] 1.37ns  loc: matrixmul.cpp:64 (out node of the LUT)
.preheader7.preheader:133  %b_copy_3_3_14 = select i1 %sel_tmp9, i32 %b_copy_3_3_8_load, i32 %b_copy_3_3_9

ST_10: b_copy_3_3_15 (182)  [1/1] 0.00ns  loc: matrixmul.cpp:64 (grouped into LUT with out node b_copy_3_3_18)
.preheader7.preheader:134  %b_copy_3_3_15 = select i1 %sel_tmp9, i32 %b_copy_3_3_19, i32 %b_copy_3_3_11_load

ST_10: b_copy_3_3_3 (183)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:135  %b_copy_3_3_3 = select i1 %tmp_mid2, i32 %b_copy_3_3_2, i32 %b_copy_3_3_1_load

ST_10: b_copy_3_3_16 (184)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:136  %b_copy_3_3_16 = select i1 %tmp_mid2, i32 %b_copy_3_3_7, i32 %b_copy_3_3_12_load

ST_10: b_copy_3_3_17 (185)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:137  %b_copy_3_3_17 = select i1 %tmp_mid2, i32 %b_copy_3_3_14, i32 %b_copy_3_3_8_load

ST_10: b_copy_3_3_18 (186)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:138  %b_copy_3_3_18 = select i1 %tmp_mid2, i32 %b_copy_3_3_15, i32 %b_copy_3_3_11_load

ST_10: b_copy_2_3_3 (187)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:139  %b_copy_2_3_3 = select i1 %tmp_mid2, i32 %b_copy_2_3_2, i32 %b_copy_2_3_1_load

ST_10: b_copy_2_3_16 (188)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:140  %b_copy_2_3_16 = select i1 %tmp_mid2, i32 %b_copy_2_3_7, i32 %b_copy_2_3_12_load

ST_10: b_copy_2_3_17 (189)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:141  %b_copy_2_3_17 = select i1 %tmp_mid2, i32 %b_copy_2_3_14, i32 %b_copy_2_3_8_load

ST_10: b_copy_2_3_18 (190)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:142  %b_copy_2_3_18 = select i1 %tmp_mid2, i32 %b_copy_2_3_15, i32 %b_copy_2_3_11_load

ST_10: b_copy_1_3_3 (191)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:143  %b_copy_1_3_3 = select i1 %tmp_mid2, i32 %b_copy_1_3_2, i32 %b_copy_1_3_1_load

ST_10: b_copy_1_3_16 (192)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:144  %b_copy_1_3_16 = select i1 %tmp_mid2, i32 %b_copy_1_3_7, i32 %b_copy_1_3_12_load

ST_10: b_copy_1_3_17 (193)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:145  %b_copy_1_3_17 = select i1 %tmp_mid2, i32 %b_copy_1_3_14, i32 %b_copy_1_3_8_load

ST_10: b_copy_1_3_18 (194)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:146  %b_copy_1_3_18 = select i1 %tmp_mid2, i32 %b_copy_1_3_15, i32 %b_copy_1_3_11_load

ST_10: b_copy_0_3_3 (195)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:147  %b_copy_0_3_3 = select i1 %tmp_mid2, i32 %b_copy_0_3_2, i32 %b_copy_0_3_1_load

ST_10: b_copy_0_3_16 (196)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:148  %b_copy_0_3_16 = select i1 %tmp_mid2, i32 %b_copy_0_3_7, i32 %b_copy_0_3_12_load

ST_10: b_copy_0_3_17 (197)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:149  %b_copy_0_3_17 = select i1 %tmp_mid2, i32 %b_copy_0_3_14, i32 %b_copy_0_3_8_load

ST_10: b_copy_0_3_18 (198)  [1/1] 1.37ns  loc: matrixmul.cpp:75 (out node of the LUT)
.preheader7.preheader:150  %b_copy_0_3_18 = select i1 %tmp_mid2, i32 %b_copy_0_3_15, i32 %b_copy_0_3_11_load

ST_10: tmp_4 (199)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:151  %tmp_4 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_0_3_18, i32 %b_copy_0_3_17, i32 %b_copy_0_3_16, i32 %b_copy_0_3_3, i2 %tmp_22)

ST_10: tmp_7 (201)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:153  %tmp_7 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_1_3_18, i32 %b_copy_1_3_17, i32 %b_copy_1_3_16, i32 %b_copy_1_3_3, i2 %tmp_22)

ST_10: tmp_9 (203)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:155  %tmp_9 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_2_3_18, i32 %b_copy_2_3_17, i32 %b_copy_2_3_16, i32 %b_copy_2_3_3, i2 %tmp_22)

ST_10: tmp_10 (205)  [1/1] 1.57ns  loc: matrixmul.cpp:75
.preheader7.preheader:157  %tmp_10 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %b_copy_3_3_18, i32 %b_copy_3_3_17, i32 %b_copy_3_3_16, i32 %b_copy_3_3_3, i2 %tmp_22)

ST_10: StgValue_204 (210)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:162  store i32 %b_copy_3_3_3, i32* %b_copy_3_3_1

ST_10: StgValue_205 (211)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:163  store i32 %b_copy_3_3_16, i32* %b_copy_3_3_12

ST_10: StgValue_206 (212)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:164  store i32 %b_copy_3_3_17, i32* %b_copy_3_3_8

ST_10: StgValue_207 (213)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:165  store i32 %b_copy_3_3_18, i32* %b_copy_3_3_11

ST_10: StgValue_208 (214)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:166  store i32 %b_copy_2_3_3, i32* %b_copy_2_3_1

ST_10: StgValue_209 (215)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:167  store i32 %b_copy_2_3_16, i32* %b_copy_2_3_12

ST_10: StgValue_210 (216)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:168  store i32 %b_copy_2_3_17, i32* %b_copy_2_3_8

ST_10: StgValue_211 (217)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:169  store i32 %b_copy_2_3_18, i32* %b_copy_2_3_11

ST_10: StgValue_212 (218)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:170  store i32 %b_copy_1_3_3, i32* %b_copy_1_3_1

ST_10: StgValue_213 (219)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:171  store i32 %b_copy_1_3_16, i32* %b_copy_1_3_12

ST_10: StgValue_214 (220)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:172  store i32 %b_copy_1_3_17, i32* %b_copy_1_3_8

ST_10: StgValue_215 (221)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:173  store i32 %b_copy_1_3_18, i32* %b_copy_1_3_11

ST_10: StgValue_216 (222)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:174  store i32 %b_copy_0_3_3, i32* %b_copy_0_3_1

ST_10: StgValue_217 (223)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:175  store i32 %b_copy_0_3_16, i32* %b_copy_0_3_12

ST_10: StgValue_218 (224)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:176  store i32 %b_copy_0_3_17, i32* %b_copy_0_3_8

ST_10: StgValue_219 (225)  [1/1] 0.00ns  loc: matrixmul.cpp:75
.preheader7.preheader:177  store i32 %b_copy_0_3_18, i32* %b_copy_0_3_11


 <State 11>: 3.76ns
ST_11: tmp_16 (86)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:38  %tmp_16 = or i5 %tmp_1, 3

ST_11: tmp_17 (87)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:39  %tmp_17 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_16)

ST_11: a_0_addr_3 (88)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:40  %a_0_addr_3 = getelementptr [12 x i32]* %a_0, i64 0, i64 %tmp_17

ST_11: a_1_addr_1 (90)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:42  %a_1_addr_1 = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_13

ST_11: tmp_18 (97)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:49  %tmp_18 = trunc i4 %newIndex3_mid2_v to i3

ST_11: tmp_19_cast (98)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:50  %tmp_19_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_18, i2 0)

ST_11: tmp_5 (104)  [1/1] 1.94ns  loc: matrixmul.cpp:69
.preheader7.preheader:56  %tmp_5 = icmp eq i3 %j_mid2, 0

ST_11: a_1_load (106)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:58  %a_1_load = load i32* %a_1_addr, align 4

ST_11: a_row_0 (107)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:59  %a_row_0 = select i1 %tmp_3_mid2, i32 %a_0_load, i32 %a_1_load

ST_11: a_1_load_1 (109)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:61  %a_1_load_1 = load i32* %a_1_addr_1, align 4

ST_11: a_0_load_2 (111)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:63  %a_0_load_2 = load i32* %a_0_addr_2, align 4

ST_11: a_0_load_3 (114)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:66  %a_0_load_3 = load i32* %a_0_addr_3, align 4

ST_11: sel_tmp1 (117)  [1/1] 1.37ns  loc: matrixmul.cpp:69
.preheader7.preheader:69  %sel_tmp1 = and i1 %tmp_5, %tmp_3_mid2

ST_11: tmp_8_cast6 (126)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:78  %tmp_8_cast6 = zext i3 %j_mid2 to i5

ST_11: tmp_21 (135)  [1/1] 1.67ns  loc: matrixmul.cpp:85
.preheader7.preheader:87  %tmp_21 = add i5 %tmp_19_cast, %tmp_8_cast6


 <State 12>: 8.05ns
ST_12: a_row_0_3_load (48)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_0_3_load = load i32* %a_row_0_3

ST_12: a_1_addr_2 (91)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:43  %a_1_addr_2 = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_15

ST_12: a_1_load_1 (109)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:61  %a_1_load_1 = load i32* %a_1_addr_1, align 4

ST_12: a_row_1 (110)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:62  %a_row_1 = select i1 %tmp_3_mid2, i32 %a_0_load_1, i32 %a_1_load_1

ST_12: a_1_load_2 (112)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:64  %a_1_load_2 = load i32* %a_1_addr_2, align 4

ST_12: a_0_load_3 (114)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:66  %a_0_load_3 = load i32* %a_0_addr_3, align 4

ST_12: a_row_0_1 (123)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_0_2)
.preheader7.preheader:75  %a_row_0_1 = select i1 %tmp_5, i32 %a_row_0, i32 %a_row_0_3_load

ST_12: a_row_0_2 (124)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:76  %a_row_0_2 = select i1 %sel_tmp1, i32 %a_row_0, i32 %a_row_0_1

ST_12: tmp_6 (200)  [6/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_12: StgValue_244 (229)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:181  store i32 %a_row_0_2, i32* %a_row_0_3


 <State 13>: 8.05ns
ST_13: a_row_1_3_load (49)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_1_3_load = load i32* %a_row_1_3

ST_13: a_1_addr_3 (92)  [1/1] 0.00ns  loc: matrixmul.cpp:71
.preheader7.preheader:44  %a_1_addr_3 = getelementptr [12 x i32]* %a_1, i64 0, i64 %tmp_17

ST_13: a_1_load_2 (112)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:64  %a_1_load_2 = load i32* %a_1_addr_2, align 4

ST_13: a_row_2 (113)  [1/1] 1.37ns  loc: matrixmul.cpp:71
.preheader7.preheader:65  %a_row_2 = select i1 %tmp_3_mid2, i32 %a_0_load_2, i32 %a_1_load_2

ST_13: a_1_load_3 (115)  [2/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:67  %a_1_load_3 = load i32* %a_1_addr_3, align 4

ST_13: a_row_1_1 (121)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_1_2)
.preheader7.preheader:73  %a_row_1_1 = select i1 %tmp_5, i32 %a_row_1, i32 %a_row_1_3_load

ST_13: a_row_1_2 (122)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:74  %a_row_1_2 = select i1 %sel_tmp1, i32 %a_row_1, i32 %a_row_1_1

ST_13: tmp_6 (200)  [5/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_13: tmp_11_1 (202)  [6/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_13: StgValue_254 (228)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:180  store i32 %a_row_1_2, i32* %a_row_1_3


 <State 14>: 8.05ns
ST_14: a_row_2_3_load (50)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_2_3_load = load i32* %a_row_2_3

ST_14: a_row_3_1_load (51)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_3_1_load = load i32* %a_row_3_1

ST_14: a_1_load_3 (115)  [1/2] 2.39ns  loc: matrixmul.cpp:71
.preheader7.preheader:67  %a_1_load_3 = load i32* %a_1_addr_3, align 4

ST_14: sel_tmp (116)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_3_2)
.preheader7.preheader:68  %sel_tmp = select i1 %tmp_5, i32 %a_1_load_3, i32 %a_row_3_1_load

ST_14: a_row_3_2 (118)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:70  %a_row_3_2 = select i1 %sel_tmp1, i32 %a_0_load_3, i32 %sel_tmp

ST_14: a_row_2_1 (119)  [1/1] 0.00ns  loc: matrixmul.cpp:69 (grouped into LUT with out node a_row_2_2)
.preheader7.preheader:71  %a_row_2_1 = select i1 %tmp_5, i32 %a_row_2, i32 %a_row_2_3_load

ST_14: a_row_2_2 (120)  [1/1] 1.37ns  loc: matrixmul.cpp:69 (out node of the LUT)
.preheader7.preheader:72  %a_row_2_2 = select i1 %sel_tmp1, i32 %a_row_2, i32 %a_row_2_1

ST_14: tmp_6 (200)  [4/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_14: tmp_11_1 (202)  [5/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_14: tmp_11_2 (204)  [6/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_14: StgValue_265 (226)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:178  store i32 %a_row_3_2, i32* %a_row_3_1

ST_14: StgValue_266 (227)  [1/1] 0.00ns  loc: matrixmul.cpp:69
.preheader7.preheader:179  store i32 %a_row_2_2, i32* %a_row_2_3


 <State 15>: 6.68ns
ST_15: tmp_6 (200)  [3/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_15: tmp_11_1 (202)  [4/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_15: tmp_11_2 (204)  [5/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_15: tmp_11_3 (206)  [6/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2


 <State 16>: 6.68ns
ST_16: tmp_6 (200)  [2/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_16: tmp_11_1 (202)  [3/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_16: tmp_11_2 (204)  [4/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_16: tmp_11_3 (206)  [5/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2


 <State 17>: 6.68ns
ST_17: tmp_6 (200)  [1/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:152  %tmp_6 = mul nsw i32 %tmp_4, %a_row_0_2

ST_17: tmp_11_1 (202)  [2/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_17: tmp_11_2 (204)  [3/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_17: tmp_11_3 (206)  [4/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2


 <State 18>: 6.68ns
ST_18: tmp_11_1 (202)  [1/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:154  %tmp_11_1 = mul nsw i32 %tmp_7, %a_row_1_2

ST_18: tmp_11_2 (204)  [2/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_18: tmp_11_3 (206)  [3/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2


 <State 19>: 6.68ns
ST_19: tmp_11_2 (204)  [1/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:156  %tmp_11_2 = mul nsw i32 %tmp_9, %a_row_2_2

ST_19: tmp_11_3 (206)  [2/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2


 <State 20>: 6.68ns
ST_20: tmp_11_3 (206)  [1/6] 6.68ns  loc: matrixmul.cpp:82
.preheader7.preheader:158  %tmp_11_3 = mul nsw i32 %tmp_10, %a_row_3_2

ST_20: tmp11 (207)  [1/1] 2.39ns  loc: matrixmul.cpp:82
.preheader7.preheader:159  %tmp11 = add i32 %tmp_11_2, %tmp_11_1


 <State 21>: 6.23ns
ST_21: StgValue_286 (69)  [1/1] 0.00ns
.preheader7.preheader:21  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_21: empty_3 (70)  [1/1] 0.00ns
.preheader7.preheader:22  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_21: StgValue_288 (101)  [1/1] 0.00ns  loc: matrixmul.cpp:64
.preheader7.preheader:53  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_21: StgValue_289 (103)  [1/1] 0.00ns  loc: matrixmul.cpp:65
.preheader7.preheader:55  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_21: tmp_22_cast (136)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:88  %tmp_22_cast = zext i5 %tmp_21 to i64

ST_21: a_2_addr_2 (137)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:89  %a_2_addr_2 = getelementptr [12 x i32]* %a_2, i64 0, i64 %tmp_22_cast

ST_21: a_3_addr (138)  [1/1] 0.00ns  loc: matrixmul.cpp:85
.preheader7.preheader:90  %a_3_addr = getelementptr [12 x i32]* %a_3, i64 0, i64 %tmp_22_cast

ST_21: tmp12 (208)  [1/1] 1.92ns  loc: matrixmul.cpp:82
.preheader7.preheader:160  %tmp12 = add i32 %tmp_11_3, %tmp_6

ST_21: tmp_12_3 (209)  [1/1] 1.92ns  loc: matrixmul.cpp:82
.preheader7.preheader:161  %tmp_12_3 = add nsw i32 %tmp11, %tmp12

ST_21: StgValue_295 (232)  [1/1] 2.39ns  loc: matrixmul.cpp:85
branch23:0  store i32 %tmp_12_3, i32* %a_3_addr, align 4

ST_21: StgValue_296 (233)  [1/1] 0.00ns  loc: matrixmul.cpp:85
branch23:1  br label %.loopexit89


 <State 22>: 2.39ns
ST_22: StgValue_297 (235)  [1/1] 2.39ns  loc: matrixmul.cpp:85
branch22:0  store i32 %tmp_12_3, i32* %a_2_addr_2, align 4

ST_22: StgValue_298 (236)  [1/1] 0.00ns  loc: matrixmul.cpp:85
branch22:1  br label %.loopexit89


 <State 23>: 0.00ns
ST_23: StgValue_299 (242)  [1/1] 0.00ns  loc: matrixmul.cpp:88
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [37]  (1.57 ns)

 <State 2>: 6.05ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matrixmul.cpp:64) [39]  (0 ns)
	'icmp' operation ('exitcond', matrixmul.cpp:64) [71]  (1.94 ns)
	'select' operation ('newIndex1_mid2_v_v', matrixmul.cpp:64) [75]  (1.37 ns)
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 3>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 4>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 5>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 6>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 7>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)

 <State 8>: 5.13ns
The critical path consists of the following:
	'urem' operation ('newIndex1_mid2_v', matrixmul.cpp:64) [76]  (2.74 ns)
	'getelementptr' operation ('a_0_addr', matrixmul.cpp:71) [79]  (0 ns)
	'load' operation ('a_0_load', matrixmul.cpp:71) on array 'a_0' [105]  (2.39 ns)

 <State 9>: 2.74ns
The critical path consists of the following:
	'urem' operation ('newIndex3_mid2_v', matrixmul.cpp:64) [96]  (2.74 ns)

 <State 10>: 6.7ns
The critical path consists of the following:
	'load' operation ('b_copy[1][3]', matrixmul.cpp:77) on array 'a_1' [153]  (2.39 ns)
	'select' operation ('b_copy[1][3]', matrixmul.cpp:64) [154]  (0 ns)
	'select' operation ('b_copy[1][3]', matrixmul.cpp:64) [155]  (1.37 ns)
	'select' operation ('b_copy[1][3]', matrixmul.cpp:64) [156]  (0 ns)
	'select' operation ('b_copy[1][3]', matrixmul.cpp:75) [191]  (1.37 ns)
	'mux' operation ('tmp_7', matrixmul.cpp:75) [201]  (1.57 ns)

 <State 11>: 3.76ns
The critical path consists of the following:
	'load' operation ('a_1_load', matrixmul.cpp:71) on array 'a_1' [106]  (2.39 ns)
	'select' operation ('a_row[0]', matrixmul.cpp:71) [107]  (1.37 ns)

 <State 12>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_0_3_load') on local variable 'a_row[0]' [48]  (0 ns)
	'select' operation ('a_row[0]', matrixmul.cpp:69) [123]  (0 ns)
	'select' operation ('a_row[0]', matrixmul.cpp:69) [124]  (1.37 ns)
	'mul' operation ('tmp_6', matrixmul.cpp:82) [200]  (6.68 ns)

 <State 13>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_1_3_load') on local variable 'a_row[1]' [49]  (0 ns)
	'select' operation ('a_row[1]', matrixmul.cpp:69) [121]  (0 ns)
	'select' operation ('a_row[1]', matrixmul.cpp:69) [122]  (1.37 ns)
	'mul' operation ('tmp_11_1', matrixmul.cpp:82) [202]  (6.68 ns)

 <State 14>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_2_3_load') on local variable 'a_row[2]' [50]  (0 ns)
	'select' operation ('a_row[2]', matrixmul.cpp:69) [119]  (0 ns)
	'select' operation ('a_row[2]', matrixmul.cpp:69) [120]  (1.37 ns)
	'mul' operation ('tmp_11_2', matrixmul.cpp:82) [204]  (6.68 ns)

 <State 15>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_6', matrixmul.cpp:82) [200]  (6.68 ns)

 <State 16>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_6', matrixmul.cpp:82) [200]  (6.68 ns)

 <State 17>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_6', matrixmul.cpp:82) [200]  (6.68 ns)

 <State 18>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_1', matrixmul.cpp:82) [202]  (6.68 ns)

 <State 19>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_2', matrixmul.cpp:82) [204]  (6.68 ns)

 <State 20>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_11_3', matrixmul.cpp:82) [206]  (6.68 ns)

 <State 21>: 6.23ns
The critical path consists of the following:
	'add' operation ('tmp12', matrixmul.cpp:82) [208]  (1.92 ns)
	'add' operation ('tmp_12_3', matrixmul.cpp:82) [209]  (1.92 ns)
	'store' operation (matrixmul.cpp:85) of variable 'tmp_12_3', matrixmul.cpp:82 on array 'a_3' [232]  (2.39 ns)

 <State 22>: 2.39ns
The critical path consists of the following:
	'store' operation (matrixmul.cpp:85) of variable 'tmp_12_3', matrixmul.cpp:82 on array 'a_2' [235]  (2.39 ns)

 <State 23>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
