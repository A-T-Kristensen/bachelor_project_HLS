// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.526000,HLS_SYN_LAT=281,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1405,HLS_SYN_LUT=2570}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A
);

parameter    ap_ST_fsm_state1 = 19'b1;
parameter    ap_ST_fsm_pp0_stage0 = 19'b10;
parameter    ap_ST_fsm_pp0_stage1 = 19'b100;
parameter    ap_ST_fsm_pp0_stage2 = 19'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 19'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 19'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 19'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 19'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 19'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 19'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 19'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 19'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 19'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 19'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 19'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 19'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 19'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage16 = 19'b100000000000000000;
parameter    ap_ST_fsm_state27 = 19'b1000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv61_2 = 61'b10;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv61_3 = 61'b11;
parameter    ap_const_lv6_1C = 6'b11100;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv32_12 = 32'b10010;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_244;
reg   [2:0] i_reg_255;
reg   [2:0] j_reg_266;
reg   [31:0] reg_290;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1252;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage10;
reg   [0:0] tmp_5_reg_1330;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] reg_294;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] reg_300;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage16;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1252;
wire   [0:0] exitcond_flatten_fu_305_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [4:0] indvar_flatten_next_fu_311_p2;
reg   [4:0] indvar_flatten_next_reg_1256;
wire   [0:0] exitcond_fu_323_p2;
reg   [0:0] exitcond_reg_1261;
wire   [0:0] tmp_mid2_fu_341_p3;
reg   [0:0] tmp_mid2_reg_1266;
wire   [2:0] tmp_2_mid2_v_v_v_fu_349_p3;
reg   [2:0] tmp_2_mid2_v_v_v_reg_1286;
reg   [2:0] ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1286;
wire   [4:0] tmp_3_fu_357_p3;
reg   [4:0] tmp_3_reg_1292;
wire   [2:0] j_mid2_fu_370_p3;
reg   [2:0] j_mid2_reg_1304;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1304;
wire   [1:0] tmp_fu_386_p1;
reg   [1:0] tmp_reg_1319;
wire   [0:0] tmp_5_fu_402_p2;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] sel_tmp_fu_421_p2;
reg   [0:0] sel_tmp_reg_1343;
wire   [0:0] sel_tmp2_fu_434_p2;
reg   [0:0] sel_tmp2_reg_1353;
wire   [0:0] sel_tmp4_fu_447_p2;
reg   [0:0] sel_tmp4_reg_1366;
wire   [31:0] tmp_6_fu_536_p6;
reg   [31:0] tmp_6_reg_1382;
wire   [31:0] a_row_load_fu_572_p3;
wire   [0:0] ap_CS_fsm_pp0_stage4;
reg   [31:0] b_copy_2_3_19_reg_1402;
wire   [31:0] tmp_9_fu_912_p6;
reg   [31:0] tmp_9_reg_1410;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [31:0] tmp_10_fu_925_p6;
reg   [31:0] tmp_10_reg_1415;
wire   [31:0] tmp_11_fu_938_p6;
reg   [31:0] tmp_11_reg_1420;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [31:0] a_row_load_1_fu_1042_p3;
wire   [31:0] a_row_load_3_fu_1075_p3;
reg   [31:0] a_row_load_3_reg_1445;
wire   [31:0] a_row_load_2_fu_1082_p3;
reg   [31:0] tmp_11_2_reg_1455;
wire   [0:0] ap_CS_fsm_pp0_stage14;
reg   [31:0] tmp_11_3_reg_1460;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [2:0] j_1_fu_1100_p2;
reg   [2:0] j_1_reg_1465;
reg   [4:0] indvar_flatten_phi_fu_248_p4;
reg   [2:0] i_phi_fu_259_p4;
reg   [2:0] j_phi_fu_270_p4;
wire   [63:0] tmp_2_fu_365_p1;
wire   [63:0] tmp_17_fu_377_p3;
wire   [63:0] tmp_20_cast_fu_416_p1;
wire   [63:0] tmp_19_fu_580_p3;
wire   [63:0] tmp_22_cast_fu_602_p1;
wire   [63:0] tmp_12_fu_1016_p3;
wire   [63:0] tmp_14_fu_1033_p3;
wire   [63:0] tmp_16_fu_1060_p3;
wire   [63:0] tmp_23_cast_fu_1127_p1;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg   [31:0] a_row_load_s_fu_88;
reg   [31:0] a_row_load_9_fu_92;
reg   [31:0] a_row_load_8_fu_96;
reg   [31:0] a_row_load_7_fu_100;
reg   [31:0] b_copy_0_3_11_fu_104;
wire   [31:0] b_copy_0_3_18_fu_529_p3;
reg   [31:0] b_copy_0_3_8_fu_108;
wire   [31:0] b_copy_0_3_17_fu_522_p3;
reg   [31:0] b_copy_0_3_12_fu_112;
wire   [31:0] b_copy_0_3_16_fu_515_p3;
reg   [31:0] b_copy_0_3_1_fu_116;
wire   [31:0] b_copy_0_3_3_fu_508_p3;
reg   [31:0] b_copy_1_3_11_fu_120;
wire   [31:0] b_copy_1_3_18_fu_905_p3;
reg   [31:0] b_copy_1_3_8_fu_124;
wire   [31:0] b_copy_1_3_17_fu_898_p3;
reg   [31:0] b_copy_1_3_12_fu_128;
wire   [31:0] b_copy_1_3_16_fu_891_p3;
reg   [31:0] b_copy_1_3_1_fu_132;
wire   [31:0] b_copy_1_3_3_fu_884_p3;
reg   [31:0] b_copy_2_3_11_fu_136;
wire   [31:0] b_copy_2_3_18_fu_877_p3;
reg   [31:0] b_copy_2_3_8_fu_140;
wire   [31:0] b_copy_2_3_17_fu_870_p3;
reg   [31:0] b_copy_2_3_12_fu_144;
wire   [31:0] b_copy_2_3_16_fu_863_p3;
reg   [31:0] b_copy_2_3_1_fu_148;
wire   [31:0] b_copy_2_3_3_fu_856_p3;
reg   [31:0] b_copy_3_3_11_fu_152;
wire   [31:0] b_copy_3_3_18_fu_849_p3;
reg   [31:0] b_copy_3_3_8_fu_156;
wire   [31:0] b_copy_3_3_17_fu_842_p3;
reg   [31:0] b_copy_3_3_12_fu_160;
wire   [31:0] b_copy_3_3_16_fu_835_p3;
reg   [31:0] b_copy_3_3_1_fu_164;
wire   [31:0] b_copy_3_3_3_fu_828_p3;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] grp_fu_278_p0;
reg   [31:0] grp_fu_278_p1;
reg   [31:0] grp_fu_285_p0;
reg   [31:0] grp_fu_285_p1;
wire   [2:0] i_1_fu_317_p2;
wire   [0:0] tmp_mid1_fu_329_p2;
wire   [0:0] tmp1_fu_335_p2;
wire   [4:0] tmp_8_cast_fu_407_p1;
wire   [4:0] tmp_18_fu_410_p2;
wire   [31:0] b_copy_0_3_fu_426_p3;
wire   [31:0] b_copy_0_3_4_fu_439_p3;
wire   [31:0] b_copy_0_3_5_fu_460_p3;
wire   [31:0] b_copy_0_3_6_fu_468_p3;
wire   [31:0] b_copy_0_3_9_fu_484_p3;
wire   [31:0] b_copy_0_3_2_fu_452_p3;
wire   [31:0] b_copy_0_3_7_fu_476_p3;
wire   [31:0] b_copy_0_3_14_fu_492_p3;
wire   [31:0] b_copy_0_3_15_fu_500_p3;
wire   [31:0] tmp_6_fu_536_p1;
wire   [31:0] tmp_6_fu_536_p2;
wire   [31:0] tmp_6_fu_536_p3;
wire   [31:0] tmp_6_fu_536_p4;
wire   [5:0] tmp_8_cast5_fu_593_p1;
wire   [5:0] tmp_20_fu_596_p2;
wire   [31:0] b_copy_1_3_fu_643_p3;
wire   [31:0] b_copy_1_3_4_fu_650_p3;
wire   [31:0] b_copy_1_3_5_fu_664_p3;
wire   [31:0] b_copy_1_3_6_fu_671_p3;
wire   [31:0] b_copy_1_3_9_fu_685_p3;
wire   [31:0] b_copy_2_3_fu_706_p3;
wire   [31:0] b_copy_2_3_4_fu_712_p3;
wire   [31:0] b_copy_2_3_5_fu_726_p3;
wire   [31:0] b_copy_2_3_6_fu_732_p3;
wire   [31:0] b_copy_2_3_9_fu_746_p3;
wire   [31:0] b_copy_3_3_fu_765_p3;
wire   [31:0] b_copy_3_3_4_fu_772_p3;
wire   [31:0] b_copy_3_3_5_fu_786_p3;
wire   [31:0] b_copy_3_3_6_fu_793_p3;
wire   [31:0] b_copy_3_3_9_fu_807_p3;
wire   [31:0] b_copy_3_3_2_fu_779_p3;
wire   [31:0] b_copy_3_3_7_fu_800_p3;
wire   [31:0] b_copy_3_3_14_fu_814_p3;
wire   [31:0] b_copy_3_3_15_fu_821_p3;
wire   [31:0] b_copy_2_3_2_fu_719_p3;
wire   [31:0] b_copy_2_3_7_fu_739_p3;
wire   [31:0] b_copy_2_3_14_fu_752_p3;
wire   [31:0] b_copy_2_3_15_fu_759_p3;
wire   [31:0] b_copy_1_3_2_fu_657_p3;
wire   [31:0] b_copy_1_3_7_fu_678_p3;
wire   [31:0] b_copy_1_3_14_fu_692_p3;
wire   [31:0] b_copy_1_3_15_fu_699_p3;
wire   [31:0] tmp_9_fu_912_p1;
wire   [31:0] tmp_9_fu_912_p2;
wire   [31:0] tmp_9_fu_912_p3;
wire   [31:0] tmp_9_fu_912_p4;
wire   [31:0] tmp_10_fu_925_p1;
wire   [31:0] tmp_10_fu_925_p2;
wire   [31:0] tmp_10_fu_925_p3;
wire   [31:0] tmp_10_fu_925_p4;
wire   [31:0] tmp_11_fu_938_p1;
wire   [31:0] tmp_11_fu_938_p2;
wire   [31:0] tmp_11_fu_938_p3;
wire   [31:0] tmp_11_fu_938_p4;
wire   [4:0] tmp_8_fu_1011_p2;
wire   [4:0] tmp_13_fu_1028_p2;
wire   [4:0] tmp_15_fu_1055_p2;
wire   [5:0] tmp_1_fu_1105_p4;
wire   [6:0] tmp_2_cast_fu_1114_p1;
wire   [6:0] tmp_8_cast6_fu_1118_p1;
wire   [6:0] tmp_21_fu_1121_p2;
wire   [0:0] ap_CS_fsm_state27;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matrixmul_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

matrixmul_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(1'b1),
    .dout(grp_fu_285_p2)
);

matrixmul_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_dEe_U3(
    .din1(tmp_6_fu_536_p1),
    .din2(tmp_6_fu_536_p2),
    .din3(tmp_6_fu_536_p3),
    .din4(tmp_6_fu_536_p4),
    .din5(tmp_reg_1319),
    .dout(tmp_6_fu_536_p6)
);

matrixmul_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_dEe_U4(
    .din1(tmp_9_fu_912_p1),
    .din2(tmp_9_fu_912_p2),
    .din3(tmp_9_fu_912_p3),
    .din4(tmp_9_fu_912_p4),
    .din5(tmp_reg_1319),
    .dout(tmp_9_fu_912_p6)
);

matrixmul_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_dEe_U5(
    .din1(tmp_10_fu_925_p1),
    .din2(tmp_10_fu_925_p2),
    .din3(tmp_10_fu_925_p3),
    .din4(tmp_10_fu_925_p4),
    .din5(tmp_reg_1319),
    .dout(tmp_10_fu_925_p6)
);

matrixmul_mux_42_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_dEe_U6(
    .din1(tmp_11_fu_938_p1),
    .din2(tmp_11_fu_938_p2),
    .din3(tmp_11_fu_938_p3),
    .din4(tmp_11_fu_938_p4),
    .din5(tmp_reg_1319),
    .dout(tmp_11_fu_938_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_305_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & ~(exitcond_flatten_reg_1252 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_255 <= tmp_2_mid2_v_v_v_reg_1286;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_255 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_244 <= indvar_flatten_next_reg_1256;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_244 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_266 <= j_1_reg_1465;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_266 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_load_3_reg_1445 <= a_row_load_3_fu_1075_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_load_7_fu_100 <= a_row_load_3_fu_1075_p3;
        a_row_load_8_fu_96 <= a_row_load_2_fu_1082_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_row_load_9_fu_92 <= a_row_load_1_fu_1042_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_load_s_fu_88 <= a_row_load_fu_572_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1252 <= exitcond_flatten_reg_1252;
        ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1286 <= tmp_2_mid2_v_v_v_reg_1286;
        exitcond_flatten_reg_1252 <= exitcond_flatten_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1304 <= j_mid2_reg_1304;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_copy_0_3_11_fu_104 <= b_copy_0_3_18_fu_529_p3;
        b_copy_0_3_12_fu_112 <= b_copy_0_3_16_fu_515_p3;
        b_copy_0_3_1_fu_116 <= b_copy_0_3_3_fu_508_p3;
        b_copy_0_3_8_fu_108 <= b_copy_0_3_17_fu_522_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_1_3_11_fu_120 <= b_copy_1_3_18_fu_905_p3;
        b_copy_1_3_12_fu_128 <= b_copy_1_3_16_fu_891_p3;
        b_copy_1_3_1_fu_132 <= b_copy_1_3_3_fu_884_p3;
        b_copy_1_3_8_fu_124 <= b_copy_1_3_17_fu_898_p3;
        b_copy_2_3_11_fu_136 <= b_copy_2_3_18_fu_877_p3;
        b_copy_2_3_12_fu_144 <= b_copy_2_3_16_fu_863_p3;
        b_copy_2_3_1_fu_148 <= b_copy_2_3_3_fu_856_p3;
        b_copy_2_3_8_fu_140 <= b_copy_2_3_17_fu_870_p3;
        b_copy_3_3_11_fu_152 <= b_copy_3_3_18_fu_849_p3;
        b_copy_3_3_12_fu_160 <= b_copy_3_3_16_fu_835_p3;
        b_copy_3_3_1_fu_164 <= b_copy_3_3_3_fu_828_p3;
        b_copy_3_3_8_fu_156 <= b_copy_3_3_17_fu_842_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        b_copy_2_3_19_reg_1402 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_305_p2))) begin
        exitcond_reg_1261 <= exitcond_fu_323_p2;
        tmp_3_reg_1292[4 : 2] <= tmp_3_fu_357_p3[4 : 2];
        tmp_mid2_reg_1266 <= tmp_mid2_fu_341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1256 <= indvar_flatten_next_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        j_1_reg_1465 <= j_1_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1252 == 1'b0))) begin
        j_mid2_reg_1304 <= j_mid2_fu_370_p3;
        tmp_reg_1319 <= tmp_fu_386_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~(1'b0 == tmp_5_reg_1330)))) begin
        reg_290 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_294 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1252)))) begin
        reg_300 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sel_tmp2_reg_1353 <= sel_tmp2_fu_434_p2;
        sel_tmp4_reg_1366 <= sel_tmp4_fu_447_p2;
        sel_tmp_reg_1343 <= sel_tmp_fu_421_p2;
        tmp_5_reg_1330 <= tmp_5_fu_402_p2;
        tmp_6_reg_1382 <= tmp_6_fu_536_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_10_reg_1415 <= tmp_10_fu_925_p6;
        tmp_11_reg_1420 <= tmp_11_fu_938_p6;
        tmp_9_reg_1410 <= tmp_9_fu_912_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_11_2_reg_1455 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_11_3_reg_1460 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_305_p2))) begin
        tmp_2_mid2_v_v_v_reg_1286 <= tmp_2_mid2_v_v_v_fu_349_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_Addr_A_orig = tmp_23_cast_fu_1127_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_Addr_A_orig = tmp_16_fu_1060_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_Addr_A_orig = tmp_14_fu_1033_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        a_Addr_A_orig = tmp_12_fu_1016_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_Addr_A_orig = tmp_22_cast_fu_602_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_Addr_A_orig = tmp_19_fu_580_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_Addr_A_orig = tmp_20_cast_fu_416_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_Addr_A_orig = tmp_17_fu_377_p3;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_Addr_A_orig = tmp_2_fu_365_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1252) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        grp_fu_278_p0 = grp_fu_278_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_278_p0 = reg_300;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_278_p0 = reg_294;
    end else begin
        grp_fu_278_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_278_p1 = tmp_11_3_reg_1460;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_278_p1 = tmp_11_2_reg_1455;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_278_p1 = grp_fu_285_p2;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_278_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_278_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_285_p0 = a_row_load_3_reg_1445;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_285_p0 = a_row_load_2_fu_1082_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_285_p0 = a_row_load_1_fu_1042_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_285_p0 = a_row_load_fu_572_p3;
        end else begin
            grp_fu_285_p0 = 'bx;
        end
    end else begin
        grp_fu_285_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            grp_fu_285_p1 = tmp_11_reg_1420;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            grp_fu_285_p1 = tmp_10_reg_1415;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            grp_fu_285_p1 = tmp_9_reg_1410;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            grp_fu_285_p1 = tmp_6_reg_1382;
        end else begin
            grp_fu_285_p1 = 'bx;
        end
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_259_p4 = tmp_2_mid2_v_v_v_reg_1286;
    end else begin
        i_phi_fu_259_p4 = i_reg_255;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_248_p4 = indvar_flatten_next_reg_1256;
    end else begin
        indvar_flatten_phi_fu_248_p4 = indvar_flatten_reg_244;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1252 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_270_p4 = j_1_reg_1465;
    end else begin
        j_phi_fu_270_p4 = j_reg_266;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_305_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage16;
        end
        ap_ST_fsm_pp0_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = grp_fu_278_p2;

assign a_Rst_A = ap_rst;

assign a_row_load_1_fu_1042_p3 = ((tmp_5_reg_1330[0:0] === 1'b1) ? a_Dout_A : a_row_load_9_fu_92);

assign a_row_load_2_fu_1082_p3 = ((tmp_5_reg_1330[0:0] === 1'b1) ? reg_290 : a_row_load_8_fu_96);

assign a_row_load_3_fu_1075_p3 = ((tmp_5_reg_1330[0:0] === 1'b1) ? a_Dout_A : a_row_load_7_fu_100);

assign a_row_load_fu_572_p3 = ((tmp_5_reg_1330[0:0] === 1'b1) ? reg_290 : a_row_load_s_fu_88);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_12];

assign b_copy_0_3_14_fu_492_p3 = ((sel_tmp4_fu_447_p2[0:0] === 1'b1) ? b_copy_0_3_8_fu_108 : b_copy_0_3_9_fu_484_p3);

assign b_copy_0_3_15_fu_500_p3 = ((sel_tmp4_fu_447_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_11_fu_104);

assign b_copy_0_3_16_fu_515_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_7_fu_476_p3 : b_copy_0_3_12_fu_112);

assign b_copy_0_3_17_fu_522_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_14_fu_492_p3 : b_copy_0_3_8_fu_108);

assign b_copy_0_3_18_fu_529_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_15_fu_500_p3 : b_copy_0_3_11_fu_104);

assign b_copy_0_3_2_fu_452_p3 = ((sel_tmp4_fu_447_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_4_fu_439_p3);

assign b_copy_0_3_3_fu_508_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_2_fu_452_p3 : b_copy_0_3_1_fu_116);

assign b_copy_0_3_4_fu_439_p3 = ((sel_tmp2_fu_434_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_fu_426_p3);

assign b_copy_0_3_5_fu_460_p3 = ((sel_tmp_fu_421_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_12_fu_112);

assign b_copy_0_3_6_fu_468_p3 = ((sel_tmp2_fu_434_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_5_fu_460_p3);

assign b_copy_0_3_7_fu_476_p3 = ((sel_tmp4_fu_447_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_6_fu_468_p3);

assign b_copy_0_3_9_fu_484_p3 = ((sel_tmp2_fu_434_p2[0:0] === 1'b1) ? a_Dout_A : b_copy_0_3_8_fu_108);

assign b_copy_0_3_fu_426_p3 = ((sel_tmp_fu_421_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : a_Dout_A);

assign b_copy_1_3_14_fu_692_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_1_3_8_fu_124 : b_copy_1_3_9_fu_685_p3);

assign b_copy_1_3_15_fu_699_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? reg_290 : b_copy_1_3_11_fu_120);

assign b_copy_1_3_16_fu_891_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_7_fu_678_p3 : b_copy_1_3_12_fu_128);

assign b_copy_1_3_17_fu_898_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_14_fu_692_p3 : b_copy_1_3_8_fu_124);

assign b_copy_1_3_18_fu_905_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_15_fu_699_p3 : b_copy_1_3_11_fu_120);

assign b_copy_1_3_2_fu_657_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_4_fu_650_p3);

assign b_copy_1_3_3_fu_884_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_2_fu_657_p3 : b_copy_1_3_1_fu_132);

assign b_copy_1_3_4_fu_650_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_fu_643_p3);

assign b_copy_1_3_5_fu_664_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? reg_290 : b_copy_1_3_12_fu_128);

assign b_copy_1_3_6_fu_671_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_5_fu_664_p3);

assign b_copy_1_3_7_fu_678_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_6_fu_671_p3);

assign b_copy_1_3_9_fu_685_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? reg_290 : b_copy_1_3_8_fu_124);

assign b_copy_1_3_fu_643_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : reg_290);

assign b_copy_2_3_14_fu_752_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_2_3_8_fu_140 : b_copy_2_3_9_fu_746_p3);

assign b_copy_2_3_15_fu_759_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_2_3_19_reg_1402 : b_copy_2_3_11_fu_136);

assign b_copy_2_3_16_fu_863_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_7_fu_739_p3 : b_copy_2_3_12_fu_144);

assign b_copy_2_3_17_fu_870_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_14_fu_752_p3 : b_copy_2_3_8_fu_140);

assign b_copy_2_3_18_fu_877_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_15_fu_759_p3 : b_copy_2_3_11_fu_136);

assign b_copy_2_3_2_fu_719_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_4_fu_712_p3);

assign b_copy_2_3_3_fu_856_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_2_fu_719_p3 : b_copy_2_3_1_fu_148);

assign b_copy_2_3_4_fu_712_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_fu_706_p3);

assign b_copy_2_3_5_fu_726_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? b_copy_2_3_19_reg_1402 : b_copy_2_3_12_fu_144);

assign b_copy_2_3_6_fu_732_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_5_fu_726_p3);

assign b_copy_2_3_7_fu_739_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_6_fu_732_p3);

assign b_copy_2_3_9_fu_746_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_2_3_19_reg_1402 : b_copy_2_3_8_fu_140);

assign b_copy_2_3_fu_706_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_19_reg_1402);

assign b_copy_3_3_14_fu_814_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_3_3_8_fu_156 : b_copy_3_3_9_fu_807_p3);

assign b_copy_3_3_15_fu_821_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_11_fu_152);

assign b_copy_3_3_16_fu_835_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_7_fu_800_p3 : b_copy_3_3_12_fu_160);

assign b_copy_3_3_17_fu_842_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_14_fu_814_p3 : b_copy_3_3_8_fu_156);

assign b_copy_3_3_18_fu_849_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_15_fu_821_p3 : b_copy_3_3_11_fu_152);

assign b_copy_3_3_2_fu_779_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_4_fu_772_p3);

assign b_copy_3_3_3_fu_828_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_2_fu_779_p3 : b_copy_3_3_1_fu_164);

assign b_copy_3_3_4_fu_772_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_fu_765_p3);

assign b_copy_3_3_5_fu_786_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_12_fu_160);

assign b_copy_3_3_6_fu_793_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_5_fu_786_p3);

assign b_copy_3_3_7_fu_800_p3 = ((sel_tmp4_reg_1366[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_6_fu_793_p3);

assign b_copy_3_3_9_fu_807_p3 = ((sel_tmp2_reg_1353[0:0] === 1'b1) ? a_Dout_A : b_copy_3_3_8_fu_156);

assign b_copy_3_3_fu_765_p3 = ((sel_tmp_reg_1343[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : a_Dout_A);

assign exitcond_flatten_fu_305_p2 = ((indvar_flatten_phi_fu_248_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_323_p2 = ((j_phi_fu_270_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i_1_fu_317_p2 = (ap_const_lv3_1 + i_phi_fu_259_p4);

assign indvar_flatten_next_fu_311_p2 = (indvar_flatten_phi_fu_248_p4 + ap_const_lv5_1);

assign j_1_fu_1100_p2 = (ap_const_lv3_1 + j_mid2_reg_1304);

assign j_mid2_fu_370_p3 = ((exitcond_reg_1261[0:0] === 1'b1) ? ap_const_lv3_0 : j_reg_266);

assign sel_tmp2_fu_434_p2 = ((tmp_reg_1319 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_447_p2 = ((tmp_reg_1319 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_421_p2 = ((tmp_reg_1319 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_335_p2 = ((i_phi_fu_259_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_10_fu_925_p1 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_15_fu_759_p3 : b_copy_2_3_11_fu_136);

assign tmp_10_fu_925_p2 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_14_fu_752_p3 : b_copy_2_3_8_fu_140);

assign tmp_10_fu_925_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_7_fu_739_p3 : b_copy_2_3_12_fu_144);

assign tmp_10_fu_925_p4 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_2_3_2_fu_719_p3 : b_copy_2_3_1_fu_148);

assign tmp_11_fu_938_p1 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_15_fu_821_p3 : b_copy_3_3_11_fu_152);

assign tmp_11_fu_938_p2 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_14_fu_814_p3 : b_copy_3_3_8_fu_156);

assign tmp_11_fu_938_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_7_fu_800_p3 : b_copy_3_3_12_fu_160);

assign tmp_11_fu_938_p4 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_3_3_2_fu_779_p3 : b_copy_3_3_1_fu_164);

assign tmp_12_fu_1016_p3 = {{ap_const_lv59_0}, {tmp_8_fu_1011_p2}};

assign tmp_13_fu_1028_p2 = (tmp_3_reg_1292 | ap_const_lv5_2);

assign tmp_14_fu_1033_p3 = {{ap_const_lv59_0}, {tmp_13_fu_1028_p2}};

assign tmp_15_fu_1055_p2 = (tmp_3_reg_1292 | ap_const_lv5_3);

assign tmp_16_fu_1060_p3 = {{ap_const_lv59_0}, {tmp_15_fu_1055_p2}};

assign tmp_17_fu_377_p3 = {{ap_const_lv61_2}, {j_mid2_fu_370_p3}};

assign tmp_18_fu_410_p2 = ($signed(ap_const_lv5_14) + $signed(tmp_8_cast_fu_407_p1));

assign tmp_19_fu_580_p3 = {{ap_const_lv61_3}, {j_mid2_reg_1304}};

assign tmp_1_fu_1105_p4 = {{{{1'b1}, {ap_pipeline_reg_pp0_iter1_tmp_2_mid2_v_v_v_reg_1286}}}, {ap_const_lv2_0}};

assign tmp_20_cast_fu_416_p1 = tmp_18_fu_410_p2;

assign tmp_20_fu_596_p2 = (ap_const_lv6_1C + tmp_8_cast5_fu_593_p1);

assign tmp_21_fu_1121_p2 = (tmp_2_cast_fu_1114_p1 + tmp_8_cast6_fu_1118_p1);

assign tmp_22_cast_fu_602_p1 = tmp_20_fu_596_p2;

assign tmp_23_cast_fu_1127_p1 = tmp_21_fu_1121_p2;

assign tmp_2_cast_fu_1114_p1 = tmp_1_fu_1105_p4;

assign tmp_2_fu_365_p1 = tmp_3_fu_357_p3;

assign tmp_2_mid2_v_v_v_fu_349_p3 = ((exitcond_fu_323_p2[0:0] === 1'b1) ? i_1_fu_317_p2 : i_phi_fu_259_p4);

assign tmp_3_fu_357_p3 = {{tmp_2_mid2_v_v_v_fu_349_p3}, {ap_const_lv2_0}};

assign tmp_5_fu_402_p2 = ((j_mid2_reg_1304 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_6_fu_536_p1 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_15_fu_500_p3 : b_copy_0_3_11_fu_104);

assign tmp_6_fu_536_p2 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_14_fu_492_p3 : b_copy_0_3_8_fu_108);

assign tmp_6_fu_536_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_7_fu_476_p3 : b_copy_0_3_12_fu_112);

assign tmp_6_fu_536_p4 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_0_3_2_fu_452_p3 : b_copy_0_3_1_fu_116);

assign tmp_8_cast5_fu_593_p1 = j_mid2_reg_1304;

assign tmp_8_cast6_fu_1118_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_1304;

assign tmp_8_cast_fu_407_p1 = j_mid2_reg_1304;

assign tmp_8_fu_1011_p2 = (tmp_3_reg_1292 | ap_const_lv5_1);

assign tmp_9_fu_912_p1 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_15_fu_699_p3 : b_copy_1_3_11_fu_120);

assign tmp_9_fu_912_p2 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_14_fu_692_p3 : b_copy_1_3_8_fu_124);

assign tmp_9_fu_912_p3 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_7_fu_678_p3 : b_copy_1_3_12_fu_128);

assign tmp_9_fu_912_p4 = ((tmp_mid2_reg_1266[0:0] === 1'b1) ? b_copy_1_3_2_fu_657_p3 : b_copy_1_3_1_fu_132);

assign tmp_fu_386_p1 = j_mid2_fu_370_p3[1:0];

assign tmp_mid1_fu_329_p2 = ((i_1_fu_317_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_341_p3 = ((exitcond_fu_323_p2[0:0] === 1'b1) ? tmp_mid1_fu_329_p2 : tmp1_fu_335_p2);

always @ (posedge ap_clk) begin
    tmp_3_reg_1292[1:0] <= 2'b00;
end

endmodule //matrixmul
