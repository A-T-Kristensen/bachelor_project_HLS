// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=106,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1265,HLS_SYN_LUT=2180}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A
);

parameter    ap_ST_fsm_state1 = 8'b1;
parameter    ap_ST_fsm_pp0_stage0 = 8'b10;
parameter    ap_ST_fsm_pp0_stage1 = 8'b100;
parameter    ap_ST_fsm_pp0_stage2 = 8'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 8'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 8'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 8'b1000000;
parameter    ap_ST_fsm_state17 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv27_0 = 27'b000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv29_2 = 29'b10;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv32_7 = 32'b111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_248;
reg   [2:0] i_reg_259;
reg   [2:0] j_reg_270;
wire   [0:0] exitcond_flatten_fu_281_p2;
reg   [0:0] exitcond_flatten_reg_1254;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254;
wire   [4:0] indvar_flatten_next_fu_287_p2;
reg   [4:0] indvar_flatten_next_reg_1258;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] j_mid2_fu_305_p3;
reg   [2:0] j_mid2_reg_1263;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1263;
reg   [2:0] ap_pipeline_reg_pp0_iter2_j_mid2_reg_1263;
wire   [2:0] i_cast1_mid2_v_fu_313_p3;
reg   [2:0] i_cast1_mid2_v_reg_1273;
reg   [2:0] ap_pipeline_reg_pp0_iter1_i_cast1_mid2_v_reg_1273;
wire   [4:0] tmp_7_fu_321_p3;
reg   [4:0] tmp_7_reg_1279;
wire   [0:0] tmp_mid2_fu_346_p3;
reg   [0:0] tmp_mid2_reg_1291;
wire   [1:0] tmp_fu_359_p1;
reg   [1:0] tmp_reg_1316;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg   [31:0] a_row_0_reg_1337;
reg   [31:0] b_copy_2_3_19_reg_1342;
wire   [0:0] ap_CS_fsm_pp0_stage2;
reg   [31:0] a_row_1_reg_1355;
reg   [31:0] b_copy_3_3_19_reg_1360;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] tmp_3_fu_431_p2;
reg   [0:0] tmp_3_reg_1373;
reg   [31:0] a_row_2_reg_1381;
wire   [0:0] sel_tmp_fu_436_p2;
reg   [0:0] sel_tmp_reg_1386;
wire   [0:0] sel_tmp2_fu_441_p2;
reg   [0:0] sel_tmp2_reg_1396;
wire   [0:0] sel_tmp4_fu_446_p2;
reg   [0:0] sel_tmp4_reg_1409;
wire  signed [31:0] tmp_5_fu_547_p6;
reg  signed [31:0] tmp_5_reg_1425;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire  signed [31:0] a_row_3_1_fu_612_p3;
reg  signed [31:0] a_row_3_1_reg_1435;
wire  signed [31:0] a_row_2_1_fu_619_p3;
wire  signed [31:0] a_row_1_1_fu_625_p3;
reg  signed [31:0] a_row_1_1_reg_1445;
wire  signed [31:0] a_row_0_1_fu_631_p3;
reg  signed [31:0] a_row_0_1_reg_1450;
wire  signed [31:0] tmp_6_fu_729_p6;
reg  signed [31:0] tmp_6_reg_1455;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire  signed [31:0] tmp_2_fu_899_p6;
reg  signed [31:0] tmp_2_reg_1465;
wire   [2:0] j_1_fu_916_p2;
reg   [2:0] j_1_reg_1470;
wire  signed [31:0] tmp_4_fu_1048_p6;
reg  signed [31:0] tmp_4_reg_1475;
wire   [31:0] grp_fu_724_p2;
reg   [31:0] tmp_9_2_reg_1485;
wire   [31:0] grp_fu_912_p2;
reg   [31:0] tmp_9_3_reg_1490;
wire   [31:0] grp_fu_1044_p2;
reg   [31:0] tmp_9_reg_1495;
wire   [31:0] grp_fu_1094_p2;
reg   [31:0] tmp_9_1_reg_1500;
wire   [31:0] tmp_2_3_fu_1106_p2;
reg   [31:0] tmp_2_3_reg_1505;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] indvar_flatten_phi_fu_252_p4;
reg   [2:0] i_phi_fu_263_p4;
reg   [2:0] j_phi_fu_274_p4;
wire   [31:0] tmp_8_fu_329_p1;
wire   [31:0] j_cast_fu_354_p1;
wire   [31:0] tmp_10_fu_368_p3;
wire   [31:0] tmp_20_cast_fu_386_p1;
wire   [31:0] tmp_12_fu_396_p3;
wire   [31:0] tmp_14_fu_422_p3;
wire   [31:0] tmp_16_fu_604_p3;
wire   [31:0] tmp_19_cast_fu_803_p1;
wire   [31:0] tmp_21_cast_fu_1129_p1;
reg   [31:0] a_row_0_2_fu_88;
reg   [31:0] a_row_1_2_fu_92;
reg   [31:0] a_row_2_2_fu_96;
reg   [31:0] a_row_3_2_fu_100;
reg   [31:0] b_copy_0_3_11_fu_104;
wire   [31:0] b_copy_0_3_18_fu_892_p3;
reg   [31:0] b_copy_0_3_8_fu_108;
wire   [31:0] b_copy_0_3_17_fu_885_p3;
reg   [31:0] b_copy_0_3_12_fu_112;
wire   [31:0] b_copy_0_3_16_fu_878_p3;
reg   [31:0] b_copy_0_3_1_fu_116;
wire   [31:0] b_copy_0_3_3_fu_871_p3;
reg   [31:0] b_copy_1_3_11_fu_120;
wire   [31:0] b_copy_1_3_18_fu_1037_p3;
reg   [31:0] b_copy_1_3_8_fu_124;
wire   [31:0] b_copy_1_3_17_fu_1030_p3;
reg   [31:0] b_copy_1_3_12_fu_128;
wire   [31:0] b_copy_1_3_16_fu_1023_p3;
reg   [31:0] b_copy_1_3_1_fu_132;
wire   [31:0] b_copy_1_3_3_fu_1016_p3;
reg   [31:0] b_copy_2_3_11_fu_136;
wire   [31:0] b_copy_2_3_18_fu_540_p3;
reg   [31:0] b_copy_2_3_8_fu_140;
wire   [31:0] b_copy_2_3_17_fu_533_p3;
reg   [31:0] b_copy_2_3_12_fu_144;
wire   [31:0] b_copy_2_3_16_fu_526_p3;
reg   [31:0] b_copy_2_3_1_fu_148;
wire   [31:0] b_copy_2_3_3_fu_519_p3;
reg   [31:0] b_copy_3_3_11_fu_152;
wire   [31:0] b_copy_3_3_18_fu_717_p3;
reg   [31:0] b_copy_3_3_8_fu_156;
wire   [31:0] b_copy_3_3_17_fu_710_p3;
reg   [31:0] b_copy_3_3_12_fu_160;
wire   [31:0] b_copy_3_3_16_fu_703_p3;
reg   [31:0] b_copy_3_3_1_fu_164;
wire   [31:0] b_copy_3_3_3_fu_696_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
wire   [0:0] exitcond_fu_299_p2;
wire   [2:0] i_1_fu_293_p2;
wire   [0:0] tmp_mid1_fu_334_p2;
wire   [0:0] tmp1_fu_340_p2;
wire   [4:0] tmp_s_fu_363_p2;
wire   [3:0] j_cast_cast5_fu_377_p1;
wire   [3:0] tmp_18_fu_380_p2;
wire   [4:0] tmp_11_fu_391_p2;
wire   [4:0] tmp_13_fu_417_p2;
wire   [31:0] b_copy_2_3_fu_451_p3;
wire   [31:0] b_copy_2_3_4_fu_458_p3;
wire   [31:0] b_copy_2_3_5_fu_474_p3;
wire   [31:0] b_copy_2_3_6_fu_481_p3;
wire   [31:0] b_copy_2_3_9_fu_497_p3;
wire   [31:0] b_copy_2_3_2_fu_466_p3;
wire   [31:0] b_copy_2_3_7_fu_489_p3;
wire   [31:0] b_copy_2_3_14_fu_504_p3;
wire   [31:0] b_copy_2_3_15_fu_512_p3;
wire   [31:0] tmp_5_fu_547_p1;
wire   [31:0] tmp_5_fu_547_p2;
wire   [31:0] tmp_5_fu_547_p3;
wire   [31:0] tmp_5_fu_547_p4;
wire   [31:0] b_copy_3_3_fu_637_p3;
wire   [31:0] b_copy_3_3_4_fu_643_p3;
wire   [31:0] b_copy_3_3_5_fu_657_p3;
wire   [31:0] b_copy_3_3_6_fu_663_p3;
wire   [31:0] b_copy_3_3_9_fu_677_p3;
wire   [31:0] b_copy_3_3_2_fu_650_p3;
wire   [31:0] b_copy_3_3_7_fu_670_p3;
wire   [31:0] b_copy_3_3_14_fu_683_p3;
wire   [31:0] b_copy_3_3_15_fu_690_p3;
wire  signed [31:0] grp_fu_724_p0;
wire   [31:0] tmp_6_fu_729_p1;
wire   [31:0] tmp_6_fu_729_p2;
wire   [31:0] tmp_6_fu_729_p3;
wire   [31:0] tmp_6_fu_729_p4;
wire   [4:0] j_cast_cast_fu_794_p1;
wire   [4:0] tmp_17_fu_797_p2;
wire   [31:0] b_copy_0_3_fu_808_p3;
wire   [31:0] b_copy_0_3_4_fu_815_p3;
wire   [31:0] b_copy_0_3_5_fu_829_p3;
wire   [31:0] b_copy_0_3_6_fu_836_p3;
wire   [31:0] b_copy_0_3_9_fu_850_p3;
wire   [31:0] b_copy_0_3_2_fu_822_p3;
wire   [31:0] b_copy_0_3_7_fu_843_p3;
wire   [31:0] b_copy_0_3_14_fu_857_p3;
wire   [31:0] b_copy_0_3_15_fu_864_p3;
wire   [31:0] tmp_2_fu_899_p1;
wire   [31:0] tmp_2_fu_899_p2;
wire   [31:0] tmp_2_fu_899_p3;
wire   [31:0] tmp_2_fu_899_p4;
wire   [31:0] b_copy_1_3_fu_953_p3;
wire   [31:0] b_copy_1_3_4_fu_960_p3;
wire   [31:0] b_copy_1_3_5_fu_974_p3;
wire   [31:0] b_copy_1_3_6_fu_981_p3;
wire   [31:0] b_copy_1_3_9_fu_995_p3;
wire   [31:0] b_copy_1_3_2_fu_967_p3;
wire   [31:0] b_copy_1_3_7_fu_988_p3;
wire   [31:0] b_copy_1_3_14_fu_1002_p3;
wire   [31:0] b_copy_1_3_15_fu_1009_p3;
wire   [31:0] tmp_4_fu_1048_p1;
wire   [31:0] tmp_4_fu_1048_p2;
wire   [31:0] tmp_4_fu_1048_p3;
wire   [31:0] tmp_4_fu_1048_p4;
wire   [3:0] grp_fu_1088_p0;
wire   [31:0] tmp7_fu_1098_p2;
wire   [31:0] tmp8_fu_1102_p2;
wire   [3:0] grp_fu_1088_p2;
wire   [5:0] tmp_15_fu_1112_p3;
wire   [5:0] j_cast_cast6_fu_1120_p1;
wire   [5:0] tmp_19_fu_1123_p2;
wire   [0:0] ap_CS_fsm_state17;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U0(
    .din1(tmp_5_fu_547_p1),
    .din2(tmp_5_fu_547_p2),
    .din3(tmp_5_fu_547_p3),
    .din4(tmp_5_fu_547_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_5_fu_547_p6)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_724_p0),
    .din1(tmp_5_reg_1425),
    .ce(1'b1),
    .dout(grp_fu_724_p2)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U2(
    .din1(tmp_6_fu_729_p1),
    .din2(tmp_6_fu_729_p2),
    .din3(tmp_6_fu_729_p3),
    .din4(tmp_6_fu_729_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_6_fu_729_p6)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U3(
    .din1(tmp_2_fu_899_p1),
    .din2(tmp_2_fu_899_p2),
    .din3(tmp_2_fu_899_p3),
    .din4(tmp_2_fu_899_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_2_fu_899_p6)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_3_1_reg_1435),
    .din1(tmp_6_reg_1455),
    .ce(1'b1),
    .dout(grp_fu_912_p2)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_0_1_reg_1450),
    .din1(tmp_2_reg_1465),
    .ce(1'b1),
    .dout(grp_fu_1044_p2)
);

matrixmul_mux_42_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matrixmul_mux_42_bkb_U6(
    .din1(tmp_4_fu_1048_p1),
    .din2(tmp_4_fu_1048_p2),
    .din3(tmp_4_fu_1048_p3),
    .din4(tmp_4_fu_1048_p4),
    .din5(tmp_reg_1316),
    .dout(tmp_4_fu_1048_p6)
);

matrixmul_urem_4ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
matrixmul_urem_4ndEe_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1088_p0),
    .din1(ap_const_lv4_6),
    .ce(1'b1),
    .dout(grp_fu_1088_p2)
);

matrixmul_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrixmul_mul_32scud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_1_1_reg_1445),
    .din1(tmp_4_reg_1475),
    .ce(1'b1),
    .dout(grp_fu_1094_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(exitcond_flatten_fu_281_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & ~(exitcond_flatten_reg_1254 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_259 <= i_cast1_mid2_v_reg_1273;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_259 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_248 <= indvar_flatten_next_reg_1258;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_248 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_270 <= j_1_reg_1470;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_270 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_1_reg_1450 <= a_row_0_1_fu_631_p3;
        a_row_1_1_reg_1445 <= a_row_1_1_fu_625_p3;
        a_row_3_1_reg_1435 <= a_row_3_1_fu_612_p3;
        tmp_6_reg_1455 <= tmp_6_fu_729_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_2_fu_88 <= a_row_0_1_fu_631_p3;
        a_row_1_2_fu_92 <= a_row_1_1_fu_625_p3;
        a_row_2_2_fu_96 <= a_row_2_1_fu_619_p3;
        a_row_3_2_fu_100 <= a_row_3_1_fu_612_p3;
        b_copy_3_3_11_fu_152 <= b_copy_3_3_18_fu_717_p3;
        b_copy_3_3_12_fu_160 <= b_copy_3_3_16_fu_703_p3;
        b_copy_3_3_1_fu_164 <= b_copy_3_3_3_fu_696_p3;
        b_copy_3_3_8_fu_156 <= b_copy_3_3_17_fu_710_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1254 == 1'b0))) begin
        a_row_0_reg_1337 <= a_0_Dout_A;
        b_copy_2_3_19_reg_1342 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_row_1_reg_1355 <= a_0_Dout_A;
        b_copy_3_3_19_reg_1360 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_row_2_reg_1381 <= a_0_Dout_A;
        b_copy_2_3_11_fu_136 <= b_copy_2_3_18_fu_540_p3;
        b_copy_2_3_12_fu_144 <= b_copy_2_3_16_fu_526_p3;
        b_copy_2_3_1_fu_148 <= b_copy_2_3_3_fu_519_p3;
        b_copy_2_3_8_fu_140 <= b_copy_2_3_17_fu_533_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 <= exitcond_flatten_reg_1254;
        ap_pipeline_reg_pp0_iter1_i_cast1_mid2_v_reg_1273 <= i_cast1_mid2_v_reg_1273;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1263 <= j_mid2_reg_1263;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254;
        ap_pipeline_reg_pp0_iter2_j_mid2_reg_1263 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1263;
        exitcond_flatten_reg_1254 <= exitcond_flatten_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_copy_0_3_11_fu_104 <= b_copy_0_3_18_fu_892_p3;
        b_copy_0_3_12_fu_112 <= b_copy_0_3_16_fu_878_p3;
        b_copy_0_3_1_fu_116 <= b_copy_0_3_3_fu_871_p3;
        b_copy_0_3_8_fu_108 <= b_copy_0_3_17_fu_885_p3;
        j_1_reg_1470 <= j_1_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_1_3_11_fu_120 <= b_copy_1_3_18_fu_1037_p3;
        b_copy_1_3_12_fu_128 <= b_copy_1_3_16_fu_1023_p3;
        b_copy_1_3_1_fu_132 <= b_copy_1_3_3_fu_1016_p3;
        b_copy_1_3_8_fu_124 <= b_copy_1_3_17_fu_1030_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_281_p2 == 1'b0))) begin
        i_cast1_mid2_v_reg_1273 <= i_cast1_mid2_v_fu_313_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1258 <= indvar_flatten_next_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_281_p2 == 1'b0))) begin
        j_mid2_reg_1263 <= j_mid2_fu_305_p3;
        tmp_7_reg_1279[4 : 2] <= tmp_7_fu_321_p3[4 : 2];
        tmp_mid2_reg_1291 <= tmp_mid2_fu_346_p3;
        tmp_reg_1316 <= tmp_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sel_tmp2_reg_1396 <= sel_tmp2_fu_441_p2;
        sel_tmp4_reg_1409 <= sel_tmp4_fu_446_p2;
        sel_tmp_reg_1386 <= sel_tmp_fu_436_p2;
        tmp_3_reg_1373 <= tmp_3_fu_431_p2;
        tmp_5_reg_1425 <= tmp_5_fu_547_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_2_3_reg_1505 <= tmp_2_3_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_2_reg_1465 <= tmp_2_fu_899_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_4_reg_1475 <= tmp_4_fu_1048_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_9_1_reg_1500 <= grp_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_9_2_reg_1485 <= grp_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_9_3_reg_1490 <= grp_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1254 == 1'b0))) begin
        tmp_9_reg_1495 <= grp_fu_1044_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_19_cast_fu_803_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_16_fu_604_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_14_fu_422_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_12_fu_396_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_10_fu_368_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_8_fu_329_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_Addr_A_orig = tmp_21_cast_fu_1129_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_1_Addr_A_orig = tmp_20_cast_fu_386_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_1_Addr_A_orig = j_cast_fu_354_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_263_p4 = i_cast1_mid2_v_reg_1273;
    end else begin
        i_phi_fu_263_p4 = i_reg_259;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_252_p4 = indvar_flatten_next_reg_1258;
    end else begin
        indvar_flatten_phi_fu_252_p4 = indvar_flatten_reg_248;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1254 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_274_p4 = j_1_reg_1470;
    end else begin
        j_phi_fu_274_p4 = j_reg_270;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_281_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = tmp_2_3_reg_1505;

assign a_1_Rst_A = ap_rst;

assign a_row_0_1_fu_631_p3 = ((tmp_3_reg_1373[0:0] === 1'b1) ? a_row_0_reg_1337 : a_row_0_2_fu_88);

assign a_row_1_1_fu_625_p3 = ((tmp_3_reg_1373[0:0] === 1'b1) ? a_row_1_reg_1355 : a_row_1_2_fu_92);

assign a_row_2_1_fu_619_p3 = ((tmp_3_reg_1373[0:0] === 1'b1) ? a_row_2_reg_1381 : a_row_2_2_fu_96);

assign a_row_3_1_fu_612_p3 = ((tmp_3_reg_1373[0:0] === 1'b1) ? a_0_Dout_A : a_row_3_2_fu_100);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_7];

assign b_copy_0_3_14_fu_857_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_0_3_8_fu_108 : b_copy_0_3_9_fu_850_p3);

assign b_copy_0_3_15_fu_864_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_11_fu_104);

assign b_copy_0_3_16_fu_878_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_7_fu_843_p3 : b_copy_0_3_12_fu_112);

assign b_copy_0_3_17_fu_885_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_14_fu_857_p3 : b_copy_0_3_8_fu_108);

assign b_copy_0_3_18_fu_892_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_15_fu_864_p3 : b_copy_0_3_11_fu_104);

assign b_copy_0_3_2_fu_822_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_4_fu_815_p3);

assign b_copy_0_3_3_fu_871_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_2_fu_822_p3 : b_copy_0_3_1_fu_116);

assign b_copy_0_3_4_fu_815_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : b_copy_0_3_fu_808_p3);

assign b_copy_0_3_5_fu_829_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_12_fu_112);

assign b_copy_0_3_6_fu_836_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_5_fu_829_p3);

assign b_copy_0_3_7_fu_843_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_0_3_12_fu_112 : b_copy_0_3_6_fu_836_p3);

assign b_copy_0_3_9_fu_850_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? a_0_Dout_A : b_copy_0_3_8_fu_108);

assign b_copy_0_3_fu_808_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? b_copy_0_3_1_fu_116 : a_0_Dout_A);

assign b_copy_1_3_14_fu_1002_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_1_3_8_fu_124 : b_copy_1_3_9_fu_995_p3);

assign b_copy_1_3_15_fu_1009_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_11_fu_120);

assign b_copy_1_3_16_fu_1023_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_7_fu_988_p3 : b_copy_1_3_12_fu_128);

assign b_copy_1_3_17_fu_1030_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_14_fu_1002_p3 : b_copy_1_3_8_fu_124);

assign b_copy_1_3_18_fu_1037_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_15_fu_1009_p3 : b_copy_1_3_11_fu_120);

assign b_copy_1_3_2_fu_967_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_4_fu_960_p3);

assign b_copy_1_3_3_fu_1016_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_2_fu_967_p3 : b_copy_1_3_1_fu_132);

assign b_copy_1_3_4_fu_960_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : b_copy_1_3_fu_953_p3);

assign b_copy_1_3_5_fu_974_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_12_fu_128);

assign b_copy_1_3_6_fu_981_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_5_fu_974_p3);

assign b_copy_1_3_7_fu_988_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_1_3_12_fu_128 : b_copy_1_3_6_fu_981_p3);

assign b_copy_1_3_9_fu_995_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? a_0_Dout_A : b_copy_1_3_8_fu_124);

assign b_copy_1_3_fu_953_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? b_copy_1_3_1_fu_132 : a_0_Dout_A);

assign b_copy_2_3_14_fu_504_p3 = ((sel_tmp4_fu_446_p2[0:0] === 1'b1) ? b_copy_2_3_8_fu_140 : b_copy_2_3_9_fu_497_p3);

assign b_copy_2_3_15_fu_512_p3 = ((sel_tmp4_fu_446_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1342 : b_copy_2_3_11_fu_136);

assign b_copy_2_3_16_fu_526_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_7_fu_489_p3 : b_copy_2_3_12_fu_144);

assign b_copy_2_3_17_fu_533_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_14_fu_504_p3 : b_copy_2_3_8_fu_140);

assign b_copy_2_3_18_fu_540_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_15_fu_512_p3 : b_copy_2_3_11_fu_136);

assign b_copy_2_3_2_fu_466_p3 = ((sel_tmp4_fu_446_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_4_fu_458_p3);

assign b_copy_2_3_3_fu_519_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_2_fu_466_p3 : b_copy_2_3_1_fu_148);

assign b_copy_2_3_4_fu_458_p3 = ((sel_tmp2_fu_441_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_fu_451_p3);

assign b_copy_2_3_5_fu_474_p3 = ((sel_tmp_fu_436_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1342 : b_copy_2_3_12_fu_144);

assign b_copy_2_3_6_fu_481_p3 = ((sel_tmp2_fu_441_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_5_fu_474_p3);

assign b_copy_2_3_7_fu_489_p3 = ((sel_tmp4_fu_446_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_144 : b_copy_2_3_6_fu_481_p3);

assign b_copy_2_3_9_fu_497_p3 = ((sel_tmp2_fu_441_p2[0:0] === 1'b1) ? b_copy_2_3_19_reg_1342 : b_copy_2_3_8_fu_140);

assign b_copy_2_3_fu_451_p3 = ((sel_tmp_fu_436_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_148 : b_copy_2_3_19_reg_1342);

assign b_copy_3_3_14_fu_683_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_3_3_8_fu_156 : b_copy_3_3_9_fu_677_p3);

assign b_copy_3_3_15_fu_690_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_3_3_19_reg_1360 : b_copy_3_3_11_fu_152);

assign b_copy_3_3_16_fu_703_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_7_fu_670_p3 : b_copy_3_3_12_fu_160);

assign b_copy_3_3_17_fu_710_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_14_fu_683_p3 : b_copy_3_3_8_fu_156);

assign b_copy_3_3_18_fu_717_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_15_fu_690_p3 : b_copy_3_3_11_fu_152);

assign b_copy_3_3_2_fu_650_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_4_fu_643_p3);

assign b_copy_3_3_3_fu_696_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_2_fu_650_p3 : b_copy_3_3_1_fu_164);

assign b_copy_3_3_4_fu_643_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_fu_637_p3);

assign b_copy_3_3_5_fu_657_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? b_copy_3_3_19_reg_1360 : b_copy_3_3_12_fu_160);

assign b_copy_3_3_6_fu_663_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_5_fu_657_p3);

assign b_copy_3_3_7_fu_670_p3 = ((sel_tmp4_reg_1409[0:0] === 1'b1) ? b_copy_3_3_12_fu_160 : b_copy_3_3_6_fu_663_p3);

assign b_copy_3_3_9_fu_677_p3 = ((sel_tmp2_reg_1396[0:0] === 1'b1) ? b_copy_3_3_19_reg_1360 : b_copy_3_3_8_fu_156);

assign b_copy_3_3_fu_637_p3 = ((sel_tmp_reg_1386[0:0] === 1'b1) ? b_copy_3_3_1_fu_164 : b_copy_3_3_19_reg_1360);

assign exitcond_flatten_fu_281_p2 = ((indvar_flatten_phi_fu_252_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_299_p2 = ((j_phi_fu_274_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_1088_p0 = {{1'b1}, {ap_pipeline_reg_pp0_iter1_i_cast1_mid2_v_reg_1273}};

assign grp_fu_724_p0 = ((tmp_3_reg_1373[0:0] === 1'b1) ? a_row_2_reg_1381 : a_row_2_2_fu_96);

assign i_1_fu_293_p2 = (ap_const_lv3_1 + i_phi_fu_263_p4);

assign i_cast1_mid2_v_fu_313_p3 = ((exitcond_fu_299_p2[0:0] === 1'b1) ? i_1_fu_293_p2 : i_phi_fu_263_p4);

assign indvar_flatten_next_fu_287_p2 = (indvar_flatten_phi_fu_252_p4 + ap_const_lv5_1);

assign j_1_fu_916_p2 = (ap_const_lv3_1 + j_mid2_reg_1263);

assign j_cast_cast5_fu_377_p1 = j_mid2_reg_1263;

assign j_cast_cast6_fu_1120_p1 = ap_pipeline_reg_pp0_iter2_j_mid2_reg_1263;

assign j_cast_cast_fu_794_p1 = j_mid2_reg_1263;

assign j_cast_fu_354_p1 = j_mid2_fu_305_p3;

assign j_mid2_fu_305_p3 = ((exitcond_fu_299_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_274_p4);

assign sel_tmp2_fu_441_p2 = ((tmp_reg_1316 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_446_p2 = ((tmp_reg_1316 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_436_p2 = ((tmp_reg_1316 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_340_p2 = ((i_phi_fu_263_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp7_fu_1098_p2 = (tmp_9_reg_1495 + tmp_9_1_reg_1500);

assign tmp8_fu_1102_p2 = (tmp_9_3_reg_1490 + tmp_9_2_reg_1485);

assign tmp_10_fu_368_p3 = {{ap_const_lv27_0}, {tmp_s_fu_363_p2}};

assign tmp_11_fu_391_p2 = (tmp_7_reg_1279 | ap_const_lv5_2);

assign tmp_12_fu_396_p3 = {{ap_const_lv27_0}, {tmp_11_fu_391_p2}};

assign tmp_13_fu_417_p2 = (tmp_7_reg_1279 | ap_const_lv5_3);

assign tmp_14_fu_422_p3 = {{ap_const_lv27_0}, {tmp_13_fu_417_p2}};

assign tmp_15_fu_1112_p3 = {{grp_fu_1088_p2}, {ap_const_lv2_0}};

assign tmp_16_fu_604_p3 = {{ap_const_lv29_2}, {j_mid2_reg_1263}};

assign tmp_17_fu_797_p2 = ($signed(ap_const_lv5_14) + $signed(j_cast_cast_fu_794_p1));

assign tmp_18_fu_380_p2 = (ap_const_lv4_4 + j_cast_cast5_fu_377_p1);

assign tmp_19_cast_fu_803_p1 = tmp_17_fu_797_p2;

assign tmp_19_fu_1123_p2 = (tmp_15_fu_1112_p3 + j_cast_cast6_fu_1120_p1);

assign tmp_20_cast_fu_386_p1 = tmp_18_fu_380_p2;

assign tmp_21_cast_fu_1129_p1 = tmp_19_fu_1123_p2;

assign tmp_2_3_fu_1106_p2 = (tmp7_fu_1098_p2 + tmp8_fu_1102_p2);

assign tmp_2_fu_899_p1 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_15_fu_864_p3 : b_copy_0_3_11_fu_104);

assign tmp_2_fu_899_p2 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_14_fu_857_p3 : b_copy_0_3_8_fu_108);

assign tmp_2_fu_899_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_7_fu_843_p3 : b_copy_0_3_12_fu_112);

assign tmp_2_fu_899_p4 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_0_3_2_fu_822_p3 : b_copy_0_3_1_fu_116);

assign tmp_3_fu_431_p2 = ((j_mid2_reg_1263 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_1048_p1 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_15_fu_1009_p3 : b_copy_1_3_11_fu_120);

assign tmp_4_fu_1048_p2 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_14_fu_1002_p3 : b_copy_1_3_8_fu_124);

assign tmp_4_fu_1048_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_7_fu_988_p3 : b_copy_1_3_12_fu_128);

assign tmp_4_fu_1048_p4 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_1_3_2_fu_967_p3 : b_copy_1_3_1_fu_132);

assign tmp_5_fu_547_p1 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_15_fu_512_p3 : b_copy_2_3_11_fu_136);

assign tmp_5_fu_547_p2 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_14_fu_504_p3 : b_copy_2_3_8_fu_140);

assign tmp_5_fu_547_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_7_fu_489_p3 : b_copy_2_3_12_fu_144);

assign tmp_5_fu_547_p4 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_2_3_2_fu_466_p3 : b_copy_2_3_1_fu_148);

assign tmp_6_fu_729_p1 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_15_fu_690_p3 : b_copy_3_3_11_fu_152);

assign tmp_6_fu_729_p2 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_14_fu_683_p3 : b_copy_3_3_8_fu_156);

assign tmp_6_fu_729_p3 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_7_fu_670_p3 : b_copy_3_3_12_fu_160);

assign tmp_6_fu_729_p4 = ((tmp_mid2_reg_1291[0:0] === 1'b1) ? b_copy_3_3_2_fu_650_p3 : b_copy_3_3_1_fu_164);

assign tmp_7_fu_321_p3 = {{i_cast1_mid2_v_fu_313_p3}, {ap_const_lv2_0}};

assign tmp_8_fu_329_p1 = tmp_7_fu_321_p3;

assign tmp_fu_359_p1 = j_mid2_fu_305_p3[1:0];

assign tmp_mid1_fu_334_p2 = ((i_1_fu_293_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_346_p3 = ((exitcond_fu_299_p2[0:0] === 1'b1) ? tmp_mid1_fu_334_p2 : tmp1_fu_340_p2);

assign tmp_s_fu_363_p2 = (tmp_7_reg_1279 | ap_const_lv5_1);

always @ (posedge ap_clk) begin
    tmp_7_reg_1279[1:0] <= 2'b00;
end

endmodule //matrixmul
