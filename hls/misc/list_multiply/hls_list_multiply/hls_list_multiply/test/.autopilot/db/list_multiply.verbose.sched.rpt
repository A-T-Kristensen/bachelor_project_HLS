

================================================================
== Vivado HLS Report for 'list_multiply'
================================================================
* Date:           Mon Mar 27 20:20:18 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_list_multiply
* Solution:       test
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      3.96|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   10|   10|   11|   11|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    3|    3|         2|          1|          1|     3|    yes   |
        |- Loop 2  |    3|    3|         1|          1|          1|     3|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 2
  Pipeline-0: II = 1, D = 2, States = { 2 3 }
  Pipeline-1: II = 1, D = 1, States = { 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond1)
	3  / (!exitcond1)
3 --> 
	2  / true
4 --> 
	5  / true
5 --> 
	6  / (exitcond)
	5  / (!exitcond)
6 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_7 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([3 x i32]* %a) nounwind, !map !7

ST_1: StgValue_8 (3)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @list_multiply_str) nounwind

ST_1: StgValue_9 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecInterface([3 x i32]* %a, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_10 (5)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecMemCore([3 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_11 (6)  [1/1] 1.57ns  loc: ../list_multiply.c:19
:4  br label %1


 <State 2>: 2.39ns
ST_2: tmp_2_s (8)  [1/1] 0.00ns
:0  %tmp_2_s = phi i32 [ undef, %0 ], [ %tmp_2_1, %_ifconv ]

ST_2: tmp_1_s (9)  [1/1] 0.00ns
:1  %tmp_1_s = phi i32 [ undef, %0 ], [ %tmp_2_3, %_ifconv ]

ST_2: tmp_2_4 (10)  [1/1] 0.00ns
:2  %tmp_2_4 = phi i32 [ undef, %0 ], [ %tmp_2_5, %_ifconv ]

ST_2: i (11)  [1/1] 0.00ns
:3  %i = phi i2 [ 0, %0 ], [ %i_2, %_ifconv ]

ST_2: exitcond1 (12)  [1/1] 1.54ns  loc: ../list_multiply.c:19
:4  %exitcond1 = icmp eq i2 %i, -1

ST_2: i_2 (13)  [1/1] 0.75ns  loc: ../list_multiply.c:19
:5  %i_2 = add i2 %i, 1

ST_2: StgValue_18 (14)  [1/1] 0.00ns  loc: ../list_multiply.c:19
:6  br i1 %exitcond1, label %.preheader.preheader, label %_ifconv

ST_2: tmp_1 (19)  [1/1] 0.00ns  loc: ../list_multiply.c:21
_ifconv:3  %tmp_1 = zext i2 %i to i64

ST_2: a_addr (20)  [1/1] 0.00ns  loc: ../list_multiply.c:21
_ifconv:4  %a_addr = getelementptr [3 x i32]* %a, i64 0, i64 %tmp_1

ST_2: a_load (21)  [2/2] 2.39ns  loc: ../list_multiply.c:21
_ifconv:5  %a_load = load i32* %a_addr, align 4

ST_2: sel_tmp (23)  [1/1] 1.54ns  loc: ../list_multiply.c:19
_ifconv:7  %sel_tmp = icmp eq i2 %i, 1

ST_2: sel_tmp5 (25)  [1/1] 1.54ns  loc: ../list_multiply.c:19
_ifconv:9  %sel_tmp5 = icmp eq i2 %i, 0


 <State 3>: 3.76ns
ST_3: empty (16)  [1/1] 0.00ns
_ifconv:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_3: tmp (17)  [1/1] 0.00ns  loc: ../list_multiply.c:19
_ifconv:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3) nounwind

ST_3: StgValue_26 (18)  [1/1] 0.00ns  loc: ../list_multiply.c:20
_ifconv:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_3: a_load (21)  [1/2] 2.39ns  loc: ../list_multiply.c:21
_ifconv:5  %a_load = load i32* %a_addr, align 4

ST_3: tmp_2_7 (22)  [1/1] 0.00ns  loc: ../list_multiply.c:21
_ifconv:6  %tmp_2_7 = shl i32 %a_load, 1

ST_3: tmp_2 (24)  [1/1] 0.00ns  loc: ../list_multiply.c:19 (grouped into LUT with out node tmp_2_1)
_ifconv:8  %tmp_2 = select i1 %sel_tmp, i32 %tmp_2_s, i32 %tmp_2_7

ST_3: tmp_2_1 (26)  [1/1] 1.37ns  loc: ../list_multiply.c:19 (out node of the LUT)
_ifconv:10  %tmp_2_1 = select i1 %sel_tmp5, i32 %tmp_2_s, i32 %tmp_2

ST_3: tmp_2_2 (27)  [1/1] 0.00ns  loc: ../list_multiply.c:19 (grouped into LUT with out node tmp_2_3)
_ifconv:11  %tmp_2_2 = select i1 %sel_tmp, i32 %tmp_2_7, i32 %tmp_1_s

ST_3: tmp_2_3 (28)  [1/1] 1.37ns  loc: ../list_multiply.c:19 (out node of the LUT)
_ifconv:12  %tmp_2_3 = select i1 %sel_tmp5, i32 %tmp_1_s, i32 %tmp_2_2

ST_3: tmp_2_5 (29)  [1/1] 1.37ns  loc: ../list_multiply.c:19
_ifconv:13  %tmp_2_5 = select i1 %sel_tmp5, i32 %tmp_2_7, i32 %tmp_2_4

ST_3: empty_2 (30)  [1/1] 0.00ns  loc: ../list_multiply.c:22
_ifconv:14  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp) nounwind

ST_3: StgValue_35 (31)  [1/1] 0.00ns  loc: ../list_multiply.c:19
_ifconv:15  br label %1


 <State 4>: 1.57ns
ST_4: StgValue_36 (33)  [1/1] 1.57ns  loc: ../list_multiply.c:24
.preheader.preheader:0  br label %.preheader


 <State 5>: 3.96ns
ST_5: i_1 (35)  [1/1] 0.00ns
.preheader:0  %i_1 = phi i2 [ %i_3, %2 ], [ 0, %.preheader.preheader ]

ST_5: exitcond (36)  [1/1] 1.54ns  loc: ../list_multiply.c:24
.preheader:1  %exitcond = icmp eq i2 %i_1, -1

ST_5: i_3 (37)  [1/1] 0.75ns  loc: ../list_multiply.c:24
.preheader:2  %i_3 = add i2 %i_1, 1

ST_5: StgValue_40 (38)  [1/1] 0.00ns  loc: ../list_multiply.c:24
.preheader:3  br i1 %exitcond, label %3, label %2

ST_5: empty_3 (40)  [1/1] 0.00ns
:0  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_5: tmp_3 (41)  [1/1] 0.00ns  loc: ../list_multiply.c:24
:1  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_5: StgValue_43 (42)  [1/1] 0.00ns  loc: ../list_multiply.c:25
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_5: tmp_4 (43)  [1/1] 0.00ns  loc: ../list_multiply.c:27
:3  %tmp_4 = zext i2 %i_1 to i64

ST_5: tmp_2_6 (44)  [1/1] 1.57ns  loc: ../list_multiply.c:19
:4  %tmp_2_6 = call i32 @_ssdm_op_Mux.ap_auto.3i32.i2(i32 %tmp_2_4, i32 %tmp_1_s, i32 %tmp_2_s, i2 %i_1) nounwind

ST_5: a_addr_1 (45)  [1/1] 0.00ns  loc: ../list_multiply.c:27
:5  %a_addr_1 = getelementptr [3 x i32]* %a, i64 0, i64 %tmp_4

ST_5: StgValue_47 (46)  [1/1] 2.39ns  loc: ../list_multiply.c:27
:6  store i32 %tmp_2_6, i32* %a_addr_1, align 4

ST_5: empty_7 (47)  [1/1] 0.00ns  loc: ../list_multiply.c:28
:7  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_3) nounwind

ST_5: StgValue_49 (48)  [1/1] 0.00ns  loc: ../list_multiply.c:24
:8  br label %.preheader


 <State 6>: 0.00ns
ST_6: StgValue_50 (50)  [1/1] 0.00ns  loc: ../list_multiply.c:30
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('tmp[2]') with incoming values : ('tmp[2]', ../list_multiply.c:19) [8]  (1.57 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ../list_multiply.c:19) [11]  (0 ns)
	'getelementptr' operation ('a_addr', ../list_multiply.c:21) [20]  (0 ns)
	'load' operation ('a_load', ../list_multiply.c:21) on array 'a' [21]  (2.39 ns)

 <State 3>: 3.76ns
The critical path consists of the following:
	'load' operation ('a_load', ../list_multiply.c:21) on array 'a' [21]  (2.39 ns)
	'shl' operation ('tmp[2]', ../list_multiply.c:21) [22]  (0 ns)
	'select' operation ('tmp[2]', ../list_multiply.c:19) [24]  (0 ns)
	'select' operation ('tmp[2]', ../list_multiply.c:19) [26]  (1.37 ns)

 <State 4>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ../list_multiply.c:24) [35]  (1.57 ns)

 <State 5>: 3.96ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ../list_multiply.c:24) [35]  (0 ns)
	'mux' operation ('tmp_2_6', ../list_multiply.c:19) [44]  (1.57 ns)
	'store' operation (../list_multiply.c:27) of variable 'tmp_2_6', ../list_multiply.c:19 on array 'a' [46]  (2.39 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
