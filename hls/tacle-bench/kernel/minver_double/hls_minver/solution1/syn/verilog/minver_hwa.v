// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.635500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=14,HLS_SYN_FF=5514,HLS_SYN_LUT=6449}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        a_Addr_B,
        a_EN_B,
        a_WEN_B,
        a_Din_B,
        a_Dout_B,
        a_Clk_B,
        a_Rst_B,
        ap_return
);

parameter    ap_ST_fsm_state1 = 105'b1;
parameter    ap_ST_fsm_state2 = 105'b10;
parameter    ap_ST_fsm_state3 = 105'b100;
parameter    ap_ST_fsm_pp0_stage0 = 105'b1000;
parameter    ap_ST_fsm_state9 = 105'b10000;
parameter    ap_ST_fsm_state10 = 105'b100000;
parameter    ap_ST_fsm_state11 = 105'b1000000;
parameter    ap_ST_fsm_state12 = 105'b10000000;
parameter    ap_ST_fsm_state13 = 105'b100000000;
parameter    ap_ST_fsm_state14 = 105'b1000000000;
parameter    ap_ST_fsm_pp1_stage0 = 105'b10000000000;
parameter    ap_ST_fsm_pp1_stage1 = 105'b100000000000;
parameter    ap_ST_fsm_state19 = 105'b1000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 105'b10000000000000;
parameter    ap_ST_fsm_state54 = 105'b100000000000000;
parameter    ap_ST_fsm_state55 = 105'b1000000000000000;
parameter    ap_ST_fsm_state56 = 105'b10000000000000000;
parameter    ap_ST_fsm_state57 = 105'b100000000000000000;
parameter    ap_ST_fsm_state58 = 105'b1000000000000000000;
parameter    ap_ST_fsm_state59 = 105'b10000000000000000000;
parameter    ap_ST_fsm_state60 = 105'b100000000000000000000;
parameter    ap_ST_fsm_state61 = 105'b1000000000000000000000;
parameter    ap_ST_fsm_state62 = 105'b10000000000000000000000;
parameter    ap_ST_fsm_state63 = 105'b100000000000000000000000;
parameter    ap_ST_fsm_state64 = 105'b1000000000000000000000000;
parameter    ap_ST_fsm_state65 = 105'b10000000000000000000000000;
parameter    ap_ST_fsm_state66 = 105'b100000000000000000000000000;
parameter    ap_ST_fsm_state67 = 105'b1000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 105'b10000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 105'b100000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 105'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 105'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 105'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 105'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 105'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 105'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 105'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 105'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 105'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 105'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 105'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 105'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 105'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 105'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 105'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 105'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 105'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 105'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 105'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 105'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 105'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 105'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state92 = 105'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state93 = 105'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state94 = 105'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state95 = 105'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state96 = 105'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state97 = 105'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state98 = 105'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state99 = 105'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state100 = 105'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state101 = 105'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state102 = 105'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state103 = 105'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state104 = 105'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state105 = 105'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state106 = 105'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state107 = 105'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state108 = 105'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state109 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state110 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state111 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state112 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state113 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state114 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state115 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state116 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state117 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state118 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state119 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state120 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state121 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state122 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state123 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state124 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state125 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state126 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state127 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state128 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state129 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state130 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state131 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state132 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state133 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state134 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state135 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state136 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state137 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state138 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state139 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state140 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state141 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state142 = 105'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state143 = 105'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state144 = 105'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [7:0] a_WEN_A;
output  [63:0] a_Din_A;
input  [63:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] a_Addr_B;
output   a_EN_B;
output  [7:0] a_WEN_B;
output  [63:0] a_Din_B;
input  [63:0] a_Dout_B;
output   a_Clk_B;
output   a_Rst_B;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[7:0] a_WEN_A;
reg[63:0] a_Din_A;
reg a_EN_B;
reg[7:0] a_WEN_B;
reg[63:0] a_Din_B;

(* fsm_encoding = "none" *) reg   [104:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [63:0] wmax_reg_243;
reg   [31:0] r_1_reg_255;
reg   [31:0] ap_pipeline_reg_pp0_iter1_r_1_reg_255;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [31:0] ap_pipeline_reg_pp0_iter2_r_1_reg_255;
reg   [31:0] ap_pipeline_reg_pp0_iter3_r_1_reg_255;
reg   [1:0] j_reg_265;
reg   [1:0] i_2_reg_276;
reg   [63:0] reg_359;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond6_reg_1151;
wire   [0:0] ap_CS_fsm_state10;
wire   [1:0] work_q0;
reg   [1:0] reg_365;
wire   [0:0] ap_CS_fsm_state13;
wire   [1:0] work_q1;
wire   [0:0] ap_CS_fsm_state138;
reg   [63:0] reg_372;
wire   [0:0] ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] exitcond5_reg_1223;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond4_reg_1244;
wire   [0:0] ap_CS_fsm_state56;
wire   [0:0] ap_CS_fsm_state142;
wire   [63:0] grp_fu_340_p2;
reg   [63:0] reg_382;
reg    ap_enable_reg_pp2_iter32;
reg   [0:0] ap_pipeline_reg_pp2_iter31_exitcond4_reg_1244;
wire   [0:0] ap_CS_fsm_state134;
reg   [63:0] reg_388;
wire   [0:0] ap_CS_fsm_state59;
wire   [0:0] ap_CS_fsm_state65;
wire   [1:0] i_1_fu_401_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_417_p2;
reg   [0:0] tmp_2_reg_1112;
wire   [0:0] ap_CS_fsm_state3;
wire   [1:0] k_fu_423_p2;
reg   [1:0] k_reg_1116;
wire   [31:0] i_5_cast7_fu_429_p1;
reg   [31:0] i_5_cast7_reg_1121;
wire   [63:0] tmp_3_fu_433_p1;
reg   [63:0] tmp_3_reg_1127;
wire   [4:0] tmp_3_cast_fu_437_p1;
reg   [4:0] tmp_3_cast_reg_1132;
wire   [4:0] tmp_8_fu_458_p2;
reg   [4:0] tmp_8_reg_1139;
reg   [3:0] a_addr_7_reg_1146;
wire   [0:0] exitcond6_fu_464_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond6_reg_1151;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond6_reg_1151;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond6_reg_1151;
wire   [31:0] i_6_fu_502_p2;
reg   [31:0] i_6_reg_1160;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] w_4_fu_560_p3;
reg   [63:0] w_4_reg_1165;
wire   [0:0] tmp_47_fu_645_p2;
reg   [0:0] tmp_47_reg_1172;
wire   [63:0] wmax_1_fu_651_p3;
reg   [63:0] wmax_1_reg_1177;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] r_load_reg_1182;
wire   [0:0] ap_CS_fsm_state9;
wire   [4:0] tmp_15_fu_686_p2;
reg   [4:0] tmp_15_reg_1188;
wire   [63:0] api_fu_754_p3;
reg   [63:0] api_reg_1198;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] tmp_1_fu_807_p2;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_33_fu_801_p2;
reg   [8:0] work_addr_3_reg_1211;
reg   [8:0] work_addr_4_reg_1217;
wire   [0:0] exitcond5_fu_811_p2;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond5_reg_1223;
wire   [1:0] j_3_fu_817_p2;
reg   [1:0] j_3_reg_1227;
reg   [3:0] a_addr_4_reg_1232;
reg   [3:0] a_addr_5_reg_1238;
reg   [3:0] ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1238;
wire   [0:0] exitcond4_fu_847_p2;
reg   [0:0] ap_pipeline_reg_pp2_iter1_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter2_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter3_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter4_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter5_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter6_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter7_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter8_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter9_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter10_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter11_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter12_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter13_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter14_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter15_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter16_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter17_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter18_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter19_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter20_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter21_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter22_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter23_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter24_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter25_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter26_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter27_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter28_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter29_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter30_exitcond4_reg_1244;
reg   [0:0] ap_pipeline_reg_pp2_iter32_exitcond4_reg_1244;
wire   [1:0] i_8_fu_853_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [3:0] a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter16_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter17_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter18_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter19_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter20_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter21_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter22_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter23_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter24_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter25_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter26_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter27_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter28_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter29_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter30_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter31_a_addr_6_reg_1253;
reg   [3:0] ap_pipeline_reg_pp2_iter32_a_addr_6_reg_1253;
wire   [1:0] i_9_fu_879_p2;
reg   [1:0] i_9_reg_1262;
wire   [0:0] ap_CS_fsm_state55;
wire   [0:0] tmp_14_fu_885_p2;
reg   [0:0] tmp_14_reg_1267;
wire   [0:0] exitcond3_fu_873_p2;
wire   [4:0] tmp_65_fu_907_p2;
reg   [4:0] tmp_65_reg_1271;
reg   [3:0] a_addr_8_reg_1276;
wire   [63:0] w_3_to_int_fu_923_p1;
reg   [63:0] w_3_to_int_reg_1282;
wire   [0:0] ap_CS_fsm_state57;
wire   [0:0] tmp_52_fu_959_p2;
reg   [0:0] tmp_52_reg_1287;
wire   [1:0] j_5_fu_971_p2;
reg   [1:0] j_5_reg_1294;
wire   [0:0] ap_CS_fsm_state58;
wire   [0:0] tmp_19_fu_977_p2;
reg   [0:0] tmp_19_reg_1299;
wire   [0:0] exitcond2_fu_965_p2;
reg   [3:0] a_addr_10_reg_1308;
wire   [63:0] tmp_17_neg_fu_1007_p2;
reg   [63:0] tmp_17_neg_reg_1314;
wire   [63:0] grp_fu_336_p2;
reg   [63:0] tmp_21_reg_1319;
wire   [63:0] grp_fu_332_p2;
reg   [63:0] tmp_22_reg_1324;
wire   [0:0] ap_CS_fsm_state71;
wire   [63:0] tmp_17_fu_1012_p1;
wire   [0:0] ap_CS_fsm_state73;
reg   [63:0] tmp_18_reg_1334;
wire   [0:0] ap_CS_fsm_state103;
wire   [1:0] i_7_fu_1022_p2;
reg   [1:0] i_7_reg_1342;
wire   [0:0] ap_CS_fsm_state136;
wire   [4:0] tmp_cast_fu_1033_p1;
reg   [4:0] tmp_cast_reg_1347;
wire   [0:0] exitcond1_fu_1016_p2;
reg   [8:0] work_addr_1_reg_1352;
reg   [8:0] work_addr_2_reg_1361;
wire   [0:0] tmp_7_fu_1037_p2;
reg   [1:0] work_load_1_reg_1367;
wire   [0:0] ap_CS_fsm_state139;
reg   [3:0] a_addr_2_reg_1372;
wire   [0:0] ap_CS_fsm_state140;
reg   [3:0] a_addr_3_reg_1377;
wire   [1:0] j_4_fu_1091_p2;
reg   [1:0] j_4_reg_1385;
wire   [0:0] ap_CS_fsm_state141;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire   [0:0] ap_CS_fsm_state14;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] ap_CS_fsm_state19;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter26;
reg    ap_enable_reg_pp2_iter27;
reg    ap_enable_reg_pp2_iter28;
reg    ap_enable_reg_pp2_iter29;
reg    ap_enable_reg_pp2_iter30;
reg    ap_enable_reg_pp2_iter31;
reg    ap_enable_reg_pp2_iter33;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [1:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [1:0] work_d1;
reg   [1:0] i_reg_219;
wire   [0:0] exitcond7_fu_395_p2;
reg   [1:0] i_5_reg_231;
wire   [0:0] ap_CS_fsm_state135;
reg   [63:0] wmax_phi_fu_247_p4;
reg   [31:0] r_1_phi_fu_258_p4;
reg   [1:0] j_phi_fu_269_p4;
reg   [1:0] i_3_reg_287;
wire   [0:0] ap_CS_fsm_state104;
wire   [0:0] ap_CS_fsm_state54;
reg   [1:0] j_1_reg_298;
wire   [0:0] ap_CS_fsm_state72;
reg   [1:0] i_4_reg_309;
reg   [1:0] j_2_reg_321;
wire   [0:0] ap_CS_fsm_state143;
wire   [63:0] tmp_fu_407_p1;
wire   [63:0] p_shl_fu_449_p1;
wire  signed [63:0] tmp_60_cast_fu_497_p1;
wire  signed [63:0] tmp_57_cast_fu_697_p1;
wire  signed [63:0] tmp_4_fu_762_p1;
wire  signed [63:0] tmp_64_cast_fu_832_p1;
wire  signed [63:0] tmp_65_cast_fu_842_p1;
wire  signed [63:0] tmp_66_cast_fu_868_p1;
wire  signed [63:0] tmp_69_cast_fu_918_p1;
wire  signed [63:0] tmp_70_cast_fu_992_p1;
wire  signed [63:0] tmp_71_cast_fu_1002_p1;
wire   [63:0] tmp_s_fu_1028_p1;
wire   [63:0] tmp_9_fu_1043_p1;
wire  signed [63:0] tmp_63_cast_fu_1080_p1;
wire   [63:0] p_shl5_fu_1064_p1;
reg   [31:0] r_fu_80;
wire   [31:0] r_2_fu_658_p3;
wire   [0:0] ap_CS_fsm_state137;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] a_Addr_B_orig;
wire   [0:0] ap_CS_fsm_state64;
wire   [0:0] ap_CS_fsm_state66;
wire   [0:0] ap_CS_fsm_state60;
reg   [63:0] grp_fu_340_p0;
reg   [63:0] grp_fu_345_p0;
reg   [63:0] grp_fu_345_p1;
wire   [3:0] tmp_6_fu_441_p3;
wire   [4:0] p_shl_cast_fu_454_p1;
wire   [2:0] tmp_42_fu_474_p1;
wire   [4:0] p_shl2_cast_fu_478_p3;
wire   [4:0] tmp_40_fu_470_p1;
wire   [4:0] tmp_49_fu_486_p2;
wire   [4:0] tmp_53_fu_492_p2;
wire   [63:0] n_assign_1_to_int_fu_508_p1;
wire   [10:0] tmp_34_fu_512_p4;
wire   [51:0] tmp_54_fu_522_p1;
wire   [0:0] notrhs_fu_532_p2;
wire   [0:0] notlhs_fu_526_p2;
wire   [0:0] tmp_36_fu_538_p2;
wire   [0:0] grp_fu_345_p2;
wire   [63:0] f_neg_i_fu_550_p2;
wire   [0:0] tmp_38_fu_544_p2;
wire   [63:0] f_1_fu_556_p1;
wire   [63:0] w_4_to_int_fu_568_p1;
wire   [63:0] wmax_to_int_fu_585_p1;
wire   [10:0] tmp_39_fu_571_p4;
wire   [51:0] tmp_55_fu_581_p1;
wire   [0:0] notrhs3_fu_609_p2;
wire   [0:0] notlhs3_fu_603_p2;
wire   [10:0] tmp_41_fu_589_p4;
wire   [51:0] tmp_56_fu_599_p1;
wire   [0:0] notrhs4_fu_627_p2;
wire   [0:0] notlhs4_fu_621_p2;
wire   [0:0] tmp_43_fu_615_p2;
wire   [0:0] tmp_44_fu_633_p2;
wire   [0:0] tmp_45_fu_639_p2;
wire   [0:0] tmp_46_fu_350_p2;
wire   [2:0] tmp_11_fu_674_p1;
wire   [4:0] p_shl3_cast_fu_678_p3;
wire   [4:0] tmp_10_fu_670_p1;
wire   [4:0] tmp_20_fu_692_p2;
wire   [63:0] pivot_to_int_fu_702_p1;
wire   [10:0] tmp_5_fu_706_p4;
wire   [51:0] tmp_30_fu_716_p1;
wire   [0:0] notrhs1_fu_726_p2;
wire   [0:0] notlhs1_fu_720_p2;
wire   [0:0] tmp_16_fu_732_p2;
wire   [63:0] f_neg_i1_fu_744_p2;
wire   [0:0] tmp_28_fu_738_p2;
wire   [63:0] f_fu_750_p1;
wire   [63:0] api_to_int_fu_766_p1;
wire   [10:0] tmp_29_fu_769_p4;
wire   [51:0] tmp_35_fu_779_p1;
wire   [0:0] notrhs2_fu_789_p2;
wire   [0:0] notlhs2_fu_783_p2;
wire   [0:0] tmp_31_fu_795_p2;
wire   [4:0] tmp_10_cast_fu_823_p1;
wire   [4:0] tmp_61_fu_827_p2;
wire   [4:0] tmp_62_fu_837_p2;
wire   [4:0] tmp_11_cast_fu_859_p1;
wire   [4:0] tmp_63_fu_863_p2;
wire   [3:0] tmp_64_fu_895_p3;
wire   [4:0] p_shl4_cast_fu_903_p1;
wire   [4:0] tmp_15_cast_fu_891_p1;
wire   [4:0] tmp_66_fu_913_p2;
wire   [10:0] tmp_48_fu_927_p4;
wire   [51:0] tmp_67_fu_937_p1;
wire   [0:0] notrhs5_fu_947_p2;
wire   [0:0] notlhs5_fu_941_p2;
wire   [0:0] tmp_50_fu_953_p2;
wire   [4:0] tmp_20_cast_fu_983_p1;
wire   [4:0] tmp_68_fu_987_p2;
wire   [4:0] tmp_69_fu_997_p2;
wire   [3:0] tmp_57_fu_1052_p3;
wire   [4:0] tmp_58_fu_1060_p1;
wire   [4:0] tmp_9_cast_fu_1048_p1;
wire   [4:0] tmp_59_fu_1069_p2;
wire   [4:0] tmp_60_fu_1075_p2;
reg   [4:0] grp_fu_345_opcode;
wire   [0:0] exitcond_fu_1085_p2;
reg   [104:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 105'b1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter28 = 1'b0;
#0 ap_enable_reg_pp2_iter29 = 1'b0;
#0 ap_enable_reg_pp2_iter30 = 1'b0;
#0 ap_enable_reg_pp2_iter31 = 1'b0;
#0 ap_enable_reg_pp2_iter33 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 2 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_dsub_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
minver_hwa_dsub_6bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_388),
    .din1(tmp_21_reg_1319),
    .ce(1'b1),
    .dout(grp_fu_332_p2)
);

minver_hwa_dmul_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
minver_hwa_dmul_6cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_372),
    .din1(reg_388),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

minver_hwa_ddiv_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
minver_hwa_ddiv_6dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_340_p0),
    .din1(reg_359),
    .ce(1'b1),
    .dout(grp_fu_340_p2)
);

minver_hwa_dcmp_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6eOg_U4(
    .din0(grp_fu_345_p0),
    .din1(grp_fu_345_p1),
    .opcode(grp_fu_345_opcode),
    .dout(grp_fu_345_p2)
);

minver_hwa_dcmp_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6eOg_U5(
    .din0(w_4_reg_1165),
    .din1(wmax_phi_fu_247_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_46_fu_350_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_464_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_417_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_464_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_417_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_464_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond5_fu_811_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == exitcond5_reg_1223))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_pp1_stage1) & ~(1'b0 == exitcond5_reg_1223)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond4_fu_847_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond4_fu_847_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond4_fu_847_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter28 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter29 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter30 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter31 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter32 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter33 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond4_fu_847_p2))) begin
        i_2_reg_276 <= i_8_fu_853_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_2_reg_276 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_3_reg_287 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        i_3_reg_287 <= i_9_reg_1262;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == tmp_2_fu_417_p2))) begin
        i_4_reg_309 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_CS_fsm_state138) & ~(1'b0 == tmp_7_fu_1037_p2))) begin
        i_4_reg_309 <= i_7_reg_1342;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_395_p2))) begin
        i_5_reg_231 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        i_5_reg_231 <= k_reg_1116;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_395_p2))) begin
        i_reg_219 <= i_1_fu_401_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_219 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (1'b0 == tmp_52_fu_959_p2))) begin
        j_1_reg_298 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        j_1_reg_298 <= j_5_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        j_2_reg_321 <= j_4_reg_1385;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        j_2_reg_321 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond5_reg_1223) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_reg_265 <= j_3_reg_1227;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j_reg_265 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_417_p2))) begin
        r_1_reg_255 <= i_5_cast7_fu_429_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1151 == 1'b0))) begin
        r_1_reg_255 <= i_6_reg_1160;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1151))) begin
        r_fu_80 <= r_2_fu_658_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_395_p2))) begin
        r_fu_80 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        reg_365 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_365 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond4_reg_1244)) | (1'b1 == ap_CS_fsm_state56))) begin
        reg_372 <= a_Dout_B;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond5_reg_1223)) | (1'b1 == ap_CS_fsm_state142))) begin
        reg_372 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        reg_388 <= a_Dout_A;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        reg_388 <= a_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_417_p2))) begin
        wmax_reg_243 <= ap_const_lv64_0;
    end else if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1151))) begin
        wmax_reg_243 <= wmax_1_reg_1177;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & (1'b0 == exitcond2_fu_965_p2) & (1'b0 == tmp_19_fu_977_p2))) begin
        a_addr_10_reg_1308 <= tmp_71_cast_fu_1002_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        a_addr_2_reg_1372 <= tmp_63_cast_fu_1080_p1;
        a_addr_3_reg_1377[3 : 2] <= p_shl5_fu_1064_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond5_fu_811_p2))) begin
        a_addr_4_reg_1232 <= tmp_64_cast_fu_832_p1;
        a_addr_5_reg_1238 <= tmp_65_cast_fu_842_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond4_fu_847_p2))) begin
        a_addr_6_reg_1253 <= tmp_66_cast_fu_868_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_417_p2))) begin
        a_addr_7_reg_1146[3 : 2] <= p_shl_fu_449_p1[3 : 2];
        i_5_cast7_reg_1121[1 : 0] <= i_5_cast7_fu_429_p1[1 : 0];
        tmp_3_cast_reg_1132[1 : 0] <= tmp_3_cast_fu_437_p1[1 : 0];
        tmp_3_reg_1127[1 : 0] <= tmp_3_fu_433_p1[1 : 0];
        tmp_8_reg_1139 <= tmp_8_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == exitcond3_fu_873_p2) & (1'b0 == tmp_14_fu_885_p2))) begin
        a_addr_8_reg_1276 <= tmp_69_cast_fu_918_p1;
        tmp_65_reg_1271 <= tmp_65_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond6_reg_1151 <= exitcond6_reg_1151;
        ap_pipeline_reg_pp0_iter1_r_1_reg_255 <= r_1_reg_255;
        exitcond6_reg_1151 <= exitcond6_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp0_iter2_exitcond6_reg_1151 <= ap_pipeline_reg_pp0_iter1_exitcond6_reg_1151;
        ap_pipeline_reg_pp0_iter2_r_1_reg_255 <= ap_pipeline_reg_pp0_iter1_r_1_reg_255;
        ap_pipeline_reg_pp0_iter3_exitcond6_reg_1151 <= ap_pipeline_reg_pp0_iter2_exitcond6_reg_1151;
        ap_pipeline_reg_pp0_iter3_r_1_reg_255 <= ap_pipeline_reg_pp0_iter2_r_1_reg_255;
        ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter10_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter9_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter11_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter10_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter12_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter11_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter13_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter12_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter14_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter13_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter15_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter14_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter16_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter16_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter15_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter17_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter16_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter17_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter16_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter18_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter17_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter18_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter17_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter19_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter18_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter19_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter18_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter20_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter19_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter20_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter19_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter21_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter20_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter21_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter20_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter22_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter21_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter22_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter21_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter23_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter22_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter23_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter22_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter24_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter23_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter24_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter23_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter25_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter24_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter25_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter24_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter26_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter25_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter26_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter25_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter27_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter26_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter27_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter26_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter28_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter27_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter28_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter27_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter29_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter28_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter29_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter28_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter2_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter1_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter30_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter29_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter30_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter29_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter31_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter30_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter31_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter30_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter32_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter31_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter32_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter31_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter3_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter2_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter4_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter3_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter5_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter4_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter6_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter5_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter7_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter6_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter8_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter7_exitcond4_reg_1244;
        ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1253 <= ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter9_exitcond4_reg_1244 <= ap_pipeline_reg_pp2_iter8_exitcond4_reg_1244;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1238 <= a_addr_5_reg_1238;
        ap_pipeline_reg_pp1_iter1_exitcond5_reg_1223 <= exitcond5_reg_1223;
        exitcond5_reg_1223 <= exitcond5_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1253 <= a_addr_6_reg_1253;
        ap_pipeline_reg_pp2_iter1_exitcond4_reg_1244 <= exitcond4_reg_1244;
        exitcond4_reg_1244 <= exitcond4_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        api_reg_1198 <= api_fu_754_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_464_p2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_6_reg_1160 <= i_6_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        i_7_reg_1342 <= i_7_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_9_reg_1262 <= i_9_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_3_reg_1227 <= j_3_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        j_4_reg_1385 <= j_4_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        j_5_reg_1294 <= j_5_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_1116 <= k_fu_423_p2;
        tmp_2_reg_1112 <= tmp_2_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        r_load_reg_1182 <= r_fu_80;
        tmp_15_reg_1188 <= tmp_15_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1151 == 1'b0)) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_359 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter32) & (1'b0 == ap_pipeline_reg_pp2_iter31_exitcond4_reg_1244)) | (1'b1 == ap_CS_fsm_state134))) begin
        reg_382 <= grp_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == exitcond3_fu_873_p2))) begin
        tmp_14_reg_1267 <= tmp_14_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & ~(1'b0 == exitcond2_fu_965_p2))) begin
        tmp_17_neg_reg_1314 <= tmp_17_neg_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        tmp_18_reg_1334 <= grp_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & (1'b0 == exitcond2_fu_965_p2))) begin
        tmp_19_reg_1299 <= tmp_19_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        tmp_21_reg_1319 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        tmp_22_reg_1324 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter2_exitcond6_reg_1151)) begin
        tmp_47_reg_1172 <= tmp_47_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        tmp_52_reg_1287 <= tmp_52_fu_959_p2;
        w_3_to_int_reg_1282 <= w_3_to_int_fu_923_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (1'b0 == exitcond1_fu_1016_p2))) begin
        tmp_cast_reg_1347[1 : 0] <= tmp_cast_fu_1033_p1[1 : 0];
        work_addr_1_reg_1352[1 : 0] <= tmp_s_fu_1028_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1151)) begin
        w_4_reg_1165 <= w_4_fu_560_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_pipeline_reg_pp0_iter2_exitcond6_reg_1151) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        wmax_1_reg_1177 <= wmax_1_fu_651_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (1'b0 == tmp_7_fu_1037_p2))) begin
        work_addr_2_reg_1361[1 : 0] <= tmp_9_fu_1043_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_2_reg_1112) & (1'b0 == tmp_33_fu_801_p2) & (1'b0 == tmp_1_fu_807_p2))) begin
        work_addr_3_reg_1211[1 : 0] <= tmp_3_reg_1127[1 : 0];
        work_addr_4_reg_1217 <= tmp_4_fu_762_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        work_load_1_reg_1367 <= work_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141))) begin
        a_Addr_A_orig = a_addr_2_reg_1372;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        a_Addr_A_orig = a_addr_8_reg_1276;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        a_Addr_A_orig = a_addr_10_reg_1308;
    end else if ((1'b1 == ap_enable_reg_pp2_iter33)) begin
        a_Addr_A_orig = ap_pipeline_reg_pp2_iter32_a_addr_6_reg_1253;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1238;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_Addr_A_orig = tmp_64_cast_fu_832_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_Addr_A_orig = tmp_57_cast_fu_697_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_Addr_A_orig = tmp_60_cast_fu_497_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state143))) begin
        a_Addr_B_orig = a_addr_3_reg_1377;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        a_Addr_B_orig = a_addr_7_reg_1146;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_Addr_B_orig = a_addr_10_reg_1308;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        a_Addr_B_orig = tmp_70_cast_fu_992_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_Addr_B_orig = tmp_69_cast_fu_918_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        a_Addr_B_orig = tmp_66_cast_fu_868_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Addr_B_orig = a_addr_4_reg_1232;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_Addr_B_orig = tmp_65_cast_fu_842_p1;
    end else begin
        a_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        a_Din_A = a_Dout_B;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        a_Din_A = tmp_18_reg_1334;
    end else if ((1'b1 == ap_enable_reg_pp2_iter33)) begin
        a_Din_A = reg_382;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        a_Din_A = reg_372;
    end else begin
        a_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        a_Din_B = reg_372;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        a_Din_B = reg_382;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        a_Din_B = tmp_22_reg_1324;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Din_B = a_Dout_B;
    end else begin
        a_Din_B = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state104) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_enable_reg_pp2_iter33) | (1'b1 == ap_CS_fsm_state64))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state143))) begin
        a_EN_B = 1'b1;
    end else begin
        a_EN_B = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_pipeline_reg_pp1_iter1_exitcond5_reg_1223)) | ((1'b1 == ap_enable_reg_pp2_iter33) & (1'b0 == ap_pipeline_reg_pp2_iter32_exitcond4_reg_1244)) | ((1'b1 == ap_CS_fsm_state104) & (1'b0 == tmp_14_reg_1267) & (1'b0 == tmp_52_reg_1287)))) begin
        a_WEN_A = ap_const_lv8_FF;
    end else begin
        a_WEN_A = ap_const_lv8_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond5_reg_1223)) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state143) | ((1'b1 == ap_CS_fsm_state72) & (1'b0 == tmp_19_reg_1299)))) begin
        a_WEN_B = ap_const_lv8_FF;
    end else begin
        a_WEN_B = ap_const_lv8_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (~(1'b0 == tmp_2_reg_1112) | ~(1'b0 == tmp_33_fu_801_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (~(1'b0 == tmp_2_reg_1112) | ~(1'b0 == tmp_33_fu_801_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_340_p0 = tmp_17_fu_1012_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_340_p0 = ap_const_lv64_3FF0000000000000;
    end else if ((1'b1 == ap_enable_reg_pp2_iter2)) begin
        grp_fu_340_p0 = reg_372;
    end else begin
        grp_fu_340_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_345_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_2_reg_1112))) begin
        grp_fu_345_opcode = ap_const_lv5_5;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1151) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        grp_fu_345_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_345_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_345_p0 = reg_372;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_345_p0 = api_reg_1198;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_345_p0 = reg_359;
    end else begin
        grp_fu_345_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_345_p1 = ap_const_lv64_3EB0C6F7A0B5ED8D;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_345_p1 = ap_const_lv64_0;
    end else begin
        grp_fu_345_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond5_reg_1223) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_phi_fu_269_p4 = j_3_reg_1227;
    end else begin
        j_phi_fu_269_p4 = j_reg_265;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1151 == 1'b0))) begin
        r_1_phi_fu_258_p4 = i_6_reg_1160;
    end else begin
        r_1_phi_fu_258_p4 = r_1_reg_255;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1151))) begin
        wmax_phi_fu_247_p4 = wmax_1_reg_1177;
    end else begin
        wmax_phi_fu_247_p4 = wmax_reg_243;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        work_address0 = work_addr_1_reg_1352;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        work_address0 = tmp_9_fu_1043_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address0 = work_addr_4_reg_1217;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        work_address0 = tmp_3_reg_1127;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_407_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        work_address1 = work_addr_2_reg_1361;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        work_address1 = work_addr_1_reg_1352;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_address1 = work_addr_3_reg_1211;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        work_address1 = tmp_4_fu_762_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state14))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state137))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        work_d0 = work_load_1_reg_1367;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_d0 = reg_365;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_219;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        work_d1 = reg_365;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_395_p2)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state139))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond7_fu_395_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == tmp_2_fu_417_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter4) & ~(1'b1 == ap_enable_reg_pp0_iter3)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_464_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_464_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~(1'b0 == tmp_2_reg_1112) | ~(1'b0 == tmp_33_fu_801_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1112) & (1'b0 == tmp_33_fu_801_p2) & ~(1'b0 == tmp_1_fu_807_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond5_fu_811_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & ~(1'b1 == ap_enable_reg_pp1_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter33) & ~(1'b1 == ap_enable_reg_pp2_iter32)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond4_fu_847_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond4_fu_847_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((1'b0 == exitcond3_fu_873_p2) & ~(1'b0 == tmp_14_fu_885_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else if (((1'b0 == exitcond3_fu_873_p2) & (1'b0 == tmp_14_fu_885_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if ((1'b0 == tmp_52_fu_959_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b0 == exitcond2_fu_965_p2) & ~(1'b0 == tmp_19_fu_977_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else if (((1'b0 == exitcond2_fu_965_p2) & (1'b0 == tmp_19_fu_977_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state136 : begin
            if (~(1'b0 == exitcond1_fu_1016_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            if (~(1'b0 == tmp_7_fu_1037_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            if ((1'b0 == exitcond_fu_1085_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state144;
            end
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_3;

assign a_Addr_B = a_Addr_B_orig << ap_const_lv32_3;

assign a_Clk_A = ap_clk;

assign a_Clk_B = ap_clk;

assign a_Rst_A = ap_rst;

assign a_Rst_B = ap_rst;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state103 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_state104 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state134 = ap_CS_fsm[ap_const_lv32_5E];

assign ap_CS_fsm_state135 = ap_CS_fsm[ap_const_lv32_5F];

assign ap_CS_fsm_state136 = ap_CS_fsm[ap_const_lv32_60];

assign ap_CS_fsm_state137 = ap_CS_fsm[ap_const_lv32_61];

assign ap_CS_fsm_state138 = ap_CS_fsm[ap_const_lv32_62];

assign ap_CS_fsm_state139 = ap_CS_fsm[ap_const_lv32_63];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state140 = ap_CS_fsm[ap_const_lv32_64];

assign ap_CS_fsm_state141 = ap_CS_fsm[ap_const_lv32_65];

assign ap_CS_fsm_state142 = ap_CS_fsm[ap_const_lv32_66];

assign ap_CS_fsm_state143 = ap_CS_fsm[ap_const_lv32_67];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state54 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state55 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state56 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state57 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state58 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state59 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state60 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state64 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state65 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state66 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state71 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state72 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state73 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_4];

assign ap_return = ap_const_lv32_1;

assign api_fu_754_p3 = ((tmp_28_fu_738_p2[0:0] === 1'b1) ? reg_359 : f_fu_750_p1);

assign api_to_int_fu_766_p1 = api_reg_1198;

assign exitcond1_fu_1016_p2 = ((i_4_reg_309 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_965_p2 = ((j_1_reg_298 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond3_fu_873_p2 = ((i_3_reg_287 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond4_fu_847_p2 = ((i_2_reg_276 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond5_fu_811_p2 = ((j_phi_fu_269_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond6_fu_464_p2 = ((r_1_phi_fu_258_p4 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign exitcond7_fu_395_p2 = ((i_reg_219 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_1085_p2 = ((j_2_reg_321 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign f_1_fu_556_p1 = f_neg_i_fu_550_p2;

assign f_fu_750_p1 = f_neg_i1_fu_744_p2;

assign f_neg_i1_fu_744_p2 = (pivot_to_int_fu_702_p1 ^ ap_const_lv64_8000000000000000);

assign f_neg_i_fu_550_p2 = (n_assign_1_to_int_fu_508_p1 ^ ap_const_lv64_8000000000000000);

assign i_1_fu_401_p2 = (i_reg_219 + ap_const_lv2_1);

assign i_5_cast7_fu_429_p1 = i_5_reg_231;

assign i_6_fu_502_p2 = (ap_const_lv32_1 + r_1_phi_fu_258_p4);

assign i_7_fu_1022_p2 = (i_4_reg_309 + ap_const_lv2_1);

assign i_8_fu_853_p2 = (i_2_reg_276 + ap_const_lv2_1);

assign i_9_fu_879_p2 = (i_3_reg_287 + ap_const_lv2_1);

assign j_3_fu_817_p2 = (j_phi_fu_269_p4 + ap_const_lv2_1);

assign j_4_fu_1091_p2 = (j_2_reg_321 + ap_const_lv2_1);

assign j_5_fu_971_p2 = (j_1_reg_298 + ap_const_lv2_1);

assign k_fu_423_p2 = (i_5_reg_231 + ap_const_lv2_1);

assign n_assign_1_to_int_fu_508_p1 = reg_359;

assign notlhs1_fu_720_p2 = ((tmp_5_fu_706_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_783_p2 = ((tmp_29_fu_769_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_603_p2 = ((tmp_39_fu_571_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_621_p2 = ((tmp_41_fu_589_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_941_p2 = ((tmp_48_fu_927_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs_fu_526_p2 = ((tmp_34_fu_512_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_726_p2 = ((tmp_30_fu_716_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_789_p2 = ((tmp_35_fu_779_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_609_p2 = ((tmp_55_fu_581_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_627_p2 = ((tmp_56_fu_599_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_947_p2 = ((tmp_67_fu_937_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs_fu_532_p2 = ((tmp_54_fu_522_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign p_shl2_cast_fu_478_p3 = {{tmp_42_fu_474_p1}, {ap_const_lv2_0}};

assign p_shl3_cast_fu_678_p3 = {{tmp_11_fu_674_p1}, {ap_const_lv2_0}};

assign p_shl4_cast_fu_903_p1 = tmp_64_fu_895_p3;

assign p_shl5_fu_1064_p1 = tmp_57_fu_1052_p3;

assign p_shl_cast_fu_454_p1 = tmp_6_fu_441_p3;

assign p_shl_fu_449_p1 = tmp_6_fu_441_p3;

assign pivot_to_int_fu_702_p1 = reg_359;

assign r_2_fu_658_p3 = ((tmp_47_reg_1172[0:0] === 1'b1) ? ap_pipeline_reg_pp0_iter3_r_1_reg_255 : r_fu_80);

assign tmp_10_cast_fu_823_p1 = j_phi_fu_269_p4;

assign tmp_10_fu_670_p1 = r_fu_80[4:0];

assign tmp_11_cast_fu_859_p1 = i_2_reg_276;

assign tmp_11_fu_674_p1 = r_fu_80[2:0];

assign tmp_14_fu_885_p2 = ((i_3_reg_287 == i_5_reg_231) ? 1'b1 : 1'b0);

assign tmp_15_cast_fu_891_p1 = i_3_reg_287;

assign tmp_15_fu_686_p2 = (p_shl3_cast_fu_678_p3 - tmp_10_fu_670_p1);

assign tmp_16_fu_732_p2 = (notrhs1_fu_726_p2 | notlhs1_fu_720_p2);

assign tmp_17_fu_1012_p1 = tmp_17_neg_reg_1314;

assign tmp_17_neg_fu_1007_p2 = (w_3_to_int_reg_1282 ^ ap_const_lv64_8000000000000000);

assign tmp_19_fu_977_p2 = ((j_1_reg_298 == i_5_reg_231) ? 1'b1 : 1'b0);

assign tmp_1_fu_807_p2 = ((r_load_reg_1182 == i_5_cast7_reg_1121) ? 1'b1 : 1'b0);

assign tmp_20_cast_fu_983_p1 = j_1_reg_298;

assign tmp_20_fu_692_p2 = (tmp_3_cast_reg_1132 + tmp_15_fu_686_p2);

assign tmp_28_fu_738_p2 = (tmp_16_fu_732_p2 & grp_fu_345_p2);

assign tmp_29_fu_769_p4 = {{api_to_int_fu_766_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_2_fu_417_p2 = ((i_5_reg_231 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign tmp_30_fu_716_p1 = pivot_to_int_fu_702_p1[51:0];

assign tmp_31_fu_795_p2 = (notrhs2_fu_789_p2 | notlhs2_fu_783_p2);

assign tmp_33_fu_801_p2 = (tmp_31_fu_795_p2 & grp_fu_345_p2);

assign tmp_34_fu_512_p4 = {{n_assign_1_to_int_fu_508_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_35_fu_779_p1 = api_to_int_fu_766_p1[51:0];

assign tmp_36_fu_538_p2 = (notrhs_fu_532_p2 | notlhs_fu_526_p2);

assign tmp_38_fu_544_p2 = (tmp_36_fu_538_p2 & grp_fu_345_p2);

assign tmp_39_fu_571_p4 = {{w_4_to_int_fu_568_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_3_cast_fu_437_p1 = i_5_reg_231;

assign tmp_3_fu_433_p1 = i_5_reg_231;

assign tmp_40_fu_470_p1 = r_1_phi_fu_258_p4[4:0];

assign tmp_41_fu_589_p4 = {{wmax_to_int_fu_585_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_42_fu_474_p1 = r_1_phi_fu_258_p4[2:0];

assign tmp_43_fu_615_p2 = (notrhs3_fu_609_p2 | notlhs3_fu_603_p2);

assign tmp_44_fu_633_p2 = (notrhs4_fu_627_p2 | notlhs4_fu_621_p2);

assign tmp_45_fu_639_p2 = (tmp_43_fu_615_p2 & tmp_44_fu_633_p2);

assign tmp_47_fu_645_p2 = (tmp_45_fu_639_p2 & tmp_46_fu_350_p2);

assign tmp_48_fu_927_p4 = {{w_3_to_int_fu_923_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_49_fu_486_p2 = (p_shl2_cast_fu_478_p3 - tmp_40_fu_470_p1);

assign tmp_4_fu_762_p1 = $signed(r_load_reg_1182);

assign tmp_50_fu_953_p2 = (notrhs5_fu_947_p2 | notlhs5_fu_941_p2);

assign tmp_52_fu_959_p2 = (tmp_50_fu_953_p2 & grp_fu_345_p2);

assign tmp_53_fu_492_p2 = (tmp_3_cast_reg_1132 + tmp_49_fu_486_p2);

assign tmp_54_fu_522_p1 = n_assign_1_to_int_fu_508_p1[51:0];

assign tmp_55_fu_581_p1 = w_4_to_int_fu_568_p1[51:0];

assign tmp_56_fu_599_p1 = wmax_to_int_fu_585_p1[51:0];

assign tmp_57_cast_fu_697_p1 = $signed(tmp_20_fu_692_p2);

assign tmp_57_fu_1052_p3 = {{reg_365}, {ap_const_lv2_0}};

assign tmp_58_fu_1060_p1 = tmp_57_fu_1052_p3;

assign tmp_59_fu_1069_p2 = (tmp_58_fu_1060_p1 - tmp_9_cast_fu_1048_p1);

assign tmp_5_fu_706_p4 = {{pivot_to_int_fu_702_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_60_cast_fu_497_p1 = $signed(tmp_53_fu_492_p2);

assign tmp_60_fu_1075_p2 = (tmp_cast_reg_1347 + tmp_59_fu_1069_p2);

assign tmp_61_fu_827_p2 = (tmp_8_reg_1139 + tmp_10_cast_fu_823_p1);

assign tmp_62_fu_837_p2 = (tmp_15_reg_1188 + tmp_10_cast_fu_823_p1);

assign tmp_63_cast_fu_1080_p1 = $signed(tmp_60_fu_1075_p2);

assign tmp_63_fu_863_p2 = (tmp_8_reg_1139 + tmp_11_cast_fu_859_p1);

assign tmp_64_cast_fu_832_p1 = $signed(tmp_61_fu_827_p2);

assign tmp_64_fu_895_p3 = {{i_3_reg_287}, {ap_const_lv2_0}};

assign tmp_65_cast_fu_842_p1 = $signed(tmp_62_fu_837_p2);

assign tmp_65_fu_907_p2 = (p_shl4_cast_fu_903_p1 - tmp_15_cast_fu_891_p1);

assign tmp_66_cast_fu_868_p1 = $signed(tmp_63_fu_863_p2);

assign tmp_66_fu_913_p2 = (tmp_3_cast_reg_1132 + tmp_65_fu_907_p2);

assign tmp_67_fu_937_p1 = w_3_to_int_fu_923_p1[51:0];

assign tmp_68_fu_987_p2 = (tmp_8_reg_1139 + tmp_20_cast_fu_983_p1);

assign tmp_69_cast_fu_918_p1 = $signed(tmp_66_fu_913_p2);

assign tmp_69_fu_997_p2 = (tmp_65_reg_1271 + tmp_20_cast_fu_983_p1);

assign tmp_6_fu_441_p3 = {{i_5_reg_231}, {ap_const_lv2_0}};

assign tmp_70_cast_fu_992_p1 = $signed(tmp_68_fu_987_p2);

assign tmp_71_cast_fu_1002_p1 = $signed(tmp_69_fu_997_p2);

assign tmp_7_fu_1037_p2 = ((work_q1 == i_4_reg_309) ? 1'b1 : 1'b0);

assign tmp_8_fu_458_p2 = (p_shl_cast_fu_454_p1 - tmp_3_cast_fu_437_p1);

assign tmp_9_cast_fu_1048_p1 = reg_365;

assign tmp_9_fu_1043_p1 = work_q1;

assign tmp_cast_fu_1033_p1 = i_4_reg_309;

assign tmp_fu_407_p1 = i_reg_219;

assign tmp_s_fu_1028_p1 = i_4_reg_309;

assign w_3_to_int_fu_923_p1 = reg_372;

assign w_4_fu_560_p3 = ((tmp_38_fu_544_p2[0:0] === 1'b1) ? reg_359 : f_1_fu_556_p1);

assign w_4_to_int_fu_568_p1 = w_4_reg_1165;

assign wmax_1_fu_651_p3 = ((tmp_47_fu_645_p2[0:0] === 1'b1) ? w_4_reg_1165 : wmax_phi_fu_247_p4);

assign wmax_to_int_fu_585_p1 = wmax_phi_fu_247_p4;

always @ (posedge ap_clk) begin
    i_5_cast7_reg_1121[31:2] <= 30'b000000000000000000000000000000;
    tmp_3_reg_1127[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1132[4:2] <= 3'b000;
    a_addr_7_reg_1146[1:0] <= 2'b00;
    work_addr_3_reg_1211[8:2] <= 7'b0000000;
    tmp_cast_reg_1347[4:2] <= 3'b000;
    work_addr_1_reg_1352[8:2] <= 7'b0000000;
    work_addr_2_reg_1361[8:2] <= 7'b0000000;
    a_addr_3_reg_1377[1:0] <= 2'b00;
end

endmodule //minver_hwa
