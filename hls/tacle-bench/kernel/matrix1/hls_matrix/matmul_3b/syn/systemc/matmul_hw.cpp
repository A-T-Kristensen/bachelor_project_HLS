// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<4> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> matmul_hw::ap_ST_fsm_state19 = "1000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<3> matmul_hw::ap_const_lv3_0 = "000";
const sc_lv<2> matmul_hw::ap_const_lv2_0 = "00";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<3> matmul_hw::ap_const_lv3_4 = "100";
const sc_lv<3> matmul_hw::ap_const_lv3_1 = "1";
const sc_lv<2> matmul_hw::ap_const_lv2_1 = "1";
const sc_lv<2> matmul_hw::ap_const_lv2_2 = "10";
const sc_lv<61> matmul_hw::ap_const_lv61_0 = "0000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> matmul_hw::ap_const_lv3_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_fadd_32bkb_U1 = new matmul_hw_fadd_32bkb<1,5,32,32,32>("matmul_hw_fadd_32bkb_U1");
    matmul_hw_fadd_32bkb_U1->clk(ap_clk);
    matmul_hw_fadd_32bkb_U1->reset(ap_rst);
    matmul_hw_fadd_32bkb_U1->din0(grp_fu_181_p0);
    matmul_hw_fadd_32bkb_U1->din1(grp_fu_181_p1);
    matmul_hw_fadd_32bkb_U1->ce(ap_var_for_const0);
    matmul_hw_fadd_32bkb_U1->dout(grp_fu_181_p2);
    matmul_hw_fmul_32cud_U2 = new matmul_hw_fmul_32cud<1,4,32,32,32>("matmul_hw_fmul_32cud_U2");
    matmul_hw_fmul_32cud_U2->clk(ap_clk);
    matmul_hw_fmul_32cud_U2->reset(ap_rst);
    matmul_hw_fmul_32cud_U2->din0(grp_fu_186_p0);
    matmul_hw_fmul_32cud_U2->din1(grp_fu_186_p1);
    matmul_hw_fmul_32cud_U2->ce(ap_var_for_const0);
    matmul_hw_fmul_32cud_U2->dout(grp_fu_186_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_Addr_A);
    sensitive << ( a_Addr_A_orig );

    SC_METHOD(thread_a_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_4_fu_258_p1 );
    sensitive << ( tmp_8_fu_277_p3 );

    SC_METHOD(thread_a_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_Din_A);

    SC_METHOD(thread_a_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_a_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_WEN_A);

    SC_METHOD(thread_a_row_load_1_fu_331_p3);
    sensitive << ( a_Dout_A );
    sensitive << ( a_row_load_3_fu_76 );
    sensitive << ( tmp_3_fu_326_p2 );

    SC_METHOD(thread_a_row_load_fu_339_p3);
    sensitive << ( a_load_reg_556 );
    sensitive << ( a_row_load_4_fu_72 );
    sensitive << ( tmp_3_fu_326_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_b_Addr_A);
    sensitive << ( b_Addr_A_orig );

    SC_METHOD(thread_b_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_6_fu_263_p1 );
    sensitive << ( tmp_9_cast_fu_295_p1 );

    SC_METHOD(thread_b_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_Din_A);

    SC_METHOD(thread_b_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_b_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_WEN_A);

    SC_METHOD(thread_b_copy_0_1_1_fu_356_p3);
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_0_0_reg_566 );
    sensitive << ( b_copy_0_1_5_fu_84 );

    SC_METHOD(thread_b_copy_0_1_2_fu_362_p3);
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_0_0_reg_566 );
    sensitive << ( b_copy_0_1_fu_80 );

    SC_METHOD(thread_b_copy_0_1_3_fu_396_p3);
    sensitive << ( tmp_mid2_reg_512 );
    sensitive << ( b_copy_0_1_5_fu_84 );
    sensitive << ( b_copy_0_1_1_fu_356_p3 );

    SC_METHOD(thread_b_copy_0_1_4_fu_403_p3);
    sensitive << ( tmp_mid2_reg_512 );
    sensitive << ( b_copy_0_1_fu_80 );
    sensitive << ( b_copy_0_1_2_fu_362_p3 );

    SC_METHOD(thread_b_copy_1_1_1_fu_368_p3);
    sensitive << ( b_Dout_A );
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_1_1_5_fu_92 );

    SC_METHOD(thread_b_copy_1_1_2_fu_375_p3);
    sensitive << ( b_Dout_A );
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_1_1_fu_88 );

    SC_METHOD(thread_b_copy_1_1_3_fu_382_p3);
    sensitive << ( tmp_mid2_reg_512 );
    sensitive << ( b_copy_1_1_5_fu_92 );
    sensitive << ( b_copy_1_1_1_fu_368_p3 );

    SC_METHOD(thread_b_copy_1_1_4_fu_389_p3);
    sensitive << ( tmp_mid2_reg_512 );
    sensitive << ( b_copy_1_1_fu_88 );
    sensitive << ( b_copy_1_1_2_fu_375_p3 );

    SC_METHOD(thread_b_copy_load_0_phi_fu_410_p3);
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_0_1_4_fu_403_p3 );
    sensitive << ( b_copy_0_1_3_fu_396_p3 );

    SC_METHOD(thread_b_copy_load_1_phi_fu_418_p3);
    sensitive << ( tmp_reg_541 );
    sensitive << ( b_copy_1_1_4_fu_389_p3 );
    sensitive << ( b_copy_1_1_3_fu_382_p3 );

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_10_cast_fu_455_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_5_1_reg_617 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_exitcond_flatten_fu_190_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_phi_fu_152_p4 );

    SC_METHOD(thread_exitcond_fu_208_p2);
    sensitive << ( exitcond_flatten_fu_190_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_phi_fu_174_p4 );

    SC_METHOD(thread_grp_fu_181_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_s_reg_602 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_5_reg_612 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_181_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_607 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_186_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( a_row_load_1_reg_577 );
    sensitive << ( a_row_load_fu_339_p3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_186_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( b_copy_load_0_phi_fu_410_p3 );
    sensitive << ( b_copy_load_1_phi_reg_597 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_i_1_fu_202_p2);
    sensitive << ( i_phi_fu_163_p4 );

    SC_METHOD(thread_i_phi_fu_163_p4);
    sensitive << ( i_reg_159 );
    sensitive << ( exitcond_flatten_reg_495 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_mid2_v_reg_520 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_indvar_flatten_next_fu_196_p2);
    sensitive << ( indvar_flatten_phi_fu_152_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_152_p4);
    sensitive << ( indvar_flatten_reg_148 );
    sensitive << ( exitcond_flatten_reg_495 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_499 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_j_1_fu_300_p2);
    sensitive << ( j_mid2_reg_504 );

    SC_METHOD(thread_j_mid2_fu_214_p3);
    sensitive << ( j_phi_fu_174_p4 );
    sensitive << ( exitcond_fu_208_p2 );

    SC_METHOD(thread_j_phi_fu_174_p4);
    sensitive << ( j_reg_170 );
    sensitive << ( exitcond_flatten_reg_495 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_572 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp1_fu_228_p2);
    sensitive << ( exitcond_flatten_fu_190_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_phi_fu_163_p4 );

    SC_METHOD(thread_tmp_10_cast_fu_455_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter7_tmp_10_reg_587 );

    SC_METHOD(thread_tmp_10_fu_350_p2);
    sensitive << ( tmp_4_cast_fu_323_p1 );
    sensitive << ( tmp_6_cast5_fu_347_p1 );

    SC_METHOD(thread_tmp_1_fu_250_p3);
    sensitive << ( tmp_1_mid2_v_fu_242_p3 );

    SC_METHOD(thread_tmp_1_mid2_v_fu_242_p3);
    sensitive << ( i_phi_fu_163_p4 );
    sensitive << ( exitcond_fu_208_p2 );
    sensitive << ( i_1_fu_202_p2 );

    SC_METHOD(thread_tmp_3_fu_326_p2);
    sensitive << ( exitcond_flatten_reg_495 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_mid2_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_4_cast_fu_323_p1);
    sensitive << ( tmp_1_reg_525 );

    SC_METHOD(thread_tmp_4_fu_258_p1);
    sensitive << ( tmp_1_fu_250_p3 );

    SC_METHOD(thread_tmp_6_cast5_fu_347_p1);
    sensitive << ( j_mid2_reg_504 );

    SC_METHOD(thread_tmp_6_cast_fu_286_p1);
    sensitive << ( j_mid2_reg_504 );

    SC_METHOD(thread_tmp_6_fu_263_p1);
    sensitive << ( j_mid2_fu_214_p3 );

    SC_METHOD(thread_tmp_7_fu_272_p2);
    sensitive << ( tmp_1_reg_525 );

    SC_METHOD(thread_tmp_8_fu_277_p3);
    sensitive << ( tmp_7_fu_272_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_295_p1);
    sensitive << ( tmp_9_fu_289_p2 );

    SC_METHOD(thread_tmp_9_fu_289_p2);
    sensitive << ( tmp_6_cast_fu_286_p1 );

    SC_METHOD(thread_tmp_fu_268_p1);
    sensitive << ( j_mid2_fu_214_p3 );

    SC_METHOD(thread_tmp_mid1_fu_222_p2);
    sensitive << ( exitcond_flatten_fu_190_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_1_fu_202_p2 );

    SC_METHOD(thread_tmp_mid2_fu_234_p3);
    sensitive << ( exitcond_fu_208_p2 );
    sensitive << ( tmp_mid1_fu_222_p2 );
    sensitive << ( tmp1_fu_228_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_flatten_fu_190_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_Addr_A, "(port)a_Addr_A");
    sc_trace(mVcdFile, a_EN_A, "(port)a_EN_A");
    sc_trace(mVcdFile, a_WEN_A, "(port)a_WEN_A");
    sc_trace(mVcdFile, a_Din_A, "(port)a_Din_A");
    sc_trace(mVcdFile, a_Dout_A, "(port)a_Dout_A");
    sc_trace(mVcdFile, a_Clk_A, "(port)a_Clk_A");
    sc_trace(mVcdFile, a_Rst_A, "(port)a_Rst_A");
    sc_trace(mVcdFile, b_Addr_A, "(port)b_Addr_A");
    sc_trace(mVcdFile, b_EN_A, "(port)b_EN_A");
    sc_trace(mVcdFile, b_WEN_A, "(port)b_WEN_A");
    sc_trace(mVcdFile, b_Din_A, "(port)b_Din_A");
    sc_trace(mVcdFile, b_Dout_A, "(port)b_Dout_A");
    sc_trace(mVcdFile, b_Clk_A, "(port)b_Clk_A");
    sc_trace(mVcdFile, b_Rst_A, "(port)b_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_148, "indvar_flatten_reg_148");
    sc_trace(mVcdFile, i_reg_159, "i_reg_159");
    sc_trace(mVcdFile, j_reg_170, "j_reg_170");
    sc_trace(mVcdFile, exitcond_flatten_fu_190_p2, "exitcond_flatten_fu_190_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_495, "exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495, "ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495");
    sc_trace(mVcdFile, indvar_flatten_next_fu_196_p2, "indvar_flatten_next_fu_196_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_499, "indvar_flatten_next_reg_499");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, j_mid2_fu_214_p3, "j_mid2_fu_214_p3");
    sc_trace(mVcdFile, j_mid2_reg_504, "j_mid2_reg_504");
    sc_trace(mVcdFile, tmp_mid2_fu_234_p3, "tmp_mid2_fu_234_p3");
    sc_trace(mVcdFile, tmp_mid2_reg_512, "tmp_mid2_reg_512");
    sc_trace(mVcdFile, tmp_1_mid2_v_fu_242_p3, "tmp_1_mid2_v_fu_242_p3");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_520, "tmp_1_mid2_v_reg_520");
    sc_trace(mVcdFile, tmp_1_fu_250_p3, "tmp_1_fu_250_p3");
    sc_trace(mVcdFile, tmp_1_reg_525, "tmp_1_reg_525");
    sc_trace(mVcdFile, tmp_fu_268_p1, "tmp_fu_268_p1");
    sc_trace(mVcdFile, tmp_reg_541, "tmp_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, a_load_reg_556, "a_load_reg_556");
    sc_trace(mVcdFile, b_copy_0_0_reg_566, "b_copy_0_0_reg_566");
    sc_trace(mVcdFile, j_1_fu_300_p2, "j_1_fu_300_p2");
    sc_trace(mVcdFile, j_1_reg_572, "j_1_reg_572");
    sc_trace(mVcdFile, a_row_load_1_fu_331_p3, "a_row_load_1_fu_331_p3");
    sc_trace(mVcdFile, a_row_load_1_reg_577, "a_row_load_1_reg_577");
    sc_trace(mVcdFile, a_row_load_fu_339_p3, "a_row_load_fu_339_p3");
    sc_trace(mVcdFile, tmp_10_fu_350_p2, "tmp_10_fu_350_p2");
    sc_trace(mVcdFile, tmp_10_reg_587, "tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter2_tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter3_tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter4_tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter5_tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter6_tmp_10_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_tmp_10_reg_587, "ap_pipeline_reg_pp0_iter7_tmp_10_reg_587");
    sc_trace(mVcdFile, b_copy_load_0_phi_fu_410_p3, "b_copy_load_0_phi_fu_410_p3");
    sc_trace(mVcdFile, b_copy_load_1_phi_fu_418_p3, "b_copy_load_1_phi_fu_418_p3");
    sc_trace(mVcdFile, b_copy_load_1_phi_reg_597, "b_copy_load_1_phi_reg_597");
    sc_trace(mVcdFile, grp_fu_186_p2, "grp_fu_186_p2");
    sc_trace(mVcdFile, tmp_s_reg_602, "tmp_s_reg_602");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_2_1_reg_607, "tmp_2_1_reg_607");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_607, "ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_607");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_607, "ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_607");
    sc_trace(mVcdFile, grp_fu_181_p2, "grp_fu_181_p2");
    sc_trace(mVcdFile, tmp_5_reg_612, "tmp_5_reg_612");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, tmp_5_1_reg_617, "tmp_5_1_reg_617");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_152_p4, "indvar_flatten_phi_fu_152_p4");
    sc_trace(mVcdFile, i_phi_fu_163_p4, "i_phi_fu_163_p4");
    sc_trace(mVcdFile, j_phi_fu_174_p4, "j_phi_fu_174_p4");
    sc_trace(mVcdFile, tmp_4_fu_258_p1, "tmp_4_fu_258_p1");
    sc_trace(mVcdFile, tmp_6_fu_263_p1, "tmp_6_fu_263_p1");
    sc_trace(mVcdFile, tmp_8_fu_277_p3, "tmp_8_fu_277_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_295_p1, "tmp_9_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_455_p1, "tmp_10_cast_fu_455_p1");
    sc_trace(mVcdFile, a_row_load_4_fu_72, "a_row_load_4_fu_72");
    sc_trace(mVcdFile, a_row_load_3_fu_76, "a_row_load_3_fu_76");
    sc_trace(mVcdFile, b_copy_0_1_fu_80, "b_copy_0_1_fu_80");
    sc_trace(mVcdFile, b_copy_0_1_4_fu_403_p3, "b_copy_0_1_4_fu_403_p3");
    sc_trace(mVcdFile, b_copy_0_1_5_fu_84, "b_copy_0_1_5_fu_84");
    sc_trace(mVcdFile, b_copy_0_1_3_fu_396_p3, "b_copy_0_1_3_fu_396_p3");
    sc_trace(mVcdFile, b_copy_1_1_fu_88, "b_copy_1_1_fu_88");
    sc_trace(mVcdFile, b_copy_1_1_4_fu_389_p3, "b_copy_1_1_4_fu_389_p3");
    sc_trace(mVcdFile, b_copy_1_1_5_fu_92, "b_copy_1_1_5_fu_92");
    sc_trace(mVcdFile, b_copy_1_1_3_fu_382_p3, "b_copy_1_1_3_fu_382_p3");
    sc_trace(mVcdFile, a_Addr_A_orig, "a_Addr_A_orig");
    sc_trace(mVcdFile, b_Addr_A_orig, "b_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_181_p0, "grp_fu_181_p0");
    sc_trace(mVcdFile, grp_fu_181_p1, "grp_fu_181_p1");
    sc_trace(mVcdFile, grp_fu_186_p0, "grp_fu_186_p0");
    sc_trace(mVcdFile, grp_fu_186_p1, "grp_fu_186_p1");
    sc_trace(mVcdFile, exitcond_fu_208_p2, "exitcond_fu_208_p2");
    sc_trace(mVcdFile, i_1_fu_202_p2, "i_1_fu_202_p2");
    sc_trace(mVcdFile, tmp_mid1_fu_222_p2, "tmp_mid1_fu_222_p2");
    sc_trace(mVcdFile, tmp1_fu_228_p2, "tmp1_fu_228_p2");
    sc_trace(mVcdFile, tmp_7_fu_272_p2, "tmp_7_fu_272_p2");
    sc_trace(mVcdFile, tmp_6_cast_fu_286_p1, "tmp_6_cast_fu_286_p1");
    sc_trace(mVcdFile, tmp_9_fu_289_p2, "tmp_9_fu_289_p2");
    sc_trace(mVcdFile, tmp_3_fu_326_p2, "tmp_3_fu_326_p2");
    sc_trace(mVcdFile, tmp_4_cast_fu_323_p1, "tmp_4_cast_fu_323_p1");
    sc_trace(mVcdFile, tmp_6_cast5_fu_347_p1, "tmp_6_cast5_fu_347_p1");
    sc_trace(mVcdFile, b_copy_1_1_1_fu_368_p3, "b_copy_1_1_1_fu_368_p3");
    sc_trace(mVcdFile, b_copy_1_1_2_fu_375_p3, "b_copy_1_1_2_fu_375_p3");
    sc_trace(mVcdFile, b_copy_0_1_1_fu_356_p3, "b_copy_0_1_1_fu_356_p3");
    sc_trace(mVcdFile, b_copy_0_1_2_fu_362_p3, "b_copy_0_1_2_fu_362_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_fadd_32bkb_U1;
    delete matmul_hw_fmul_32cud_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_fu_190_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_159 = tmp_1_mid2_v_reg_520.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_159 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_148 = indvar_flatten_next_reg_499.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_148 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_170 = j_1_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_170 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
        a_load_reg_556 = a_Dout_A.read();
        b_copy_0_0_reg_566 = b_Dout_A.read();
        j_1_reg_572 = j_1_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
        a_row_load_1_reg_577 = a_row_load_1_fu_331_p3.read();
        b_copy_load_1_phi_reg_597 = b_copy_load_1_phi_fu_418_p3.read();
        tmp_10_reg_587 = tmp_10_fu_350_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        a_row_load_3_fu_76 = a_row_load_1_fu_331_p3.read();
        a_row_load_4_fu_72 = a_row_load_fu_339_p3.read();
        b_copy_0_1_5_fu_84 = b_copy_0_1_3_fu_396_p3.read();
        b_copy_0_1_fu_80 = b_copy_0_1_4_fu_403_p3.read();
        b_copy_1_1_5_fu_92 = b_copy_1_1_3_fu_382_p3.read();
        b_copy_1_1_fu_88 = b_copy_1_1_4_fu_389_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_495 = exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter2_tmp_10_reg_587 = tmp_10_reg_587.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter3_tmp_10_reg_587 = ap_pipeline_reg_pp0_iter2_tmp_10_reg_587.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter4_tmp_10_reg_587 = ap_pipeline_reg_pp0_iter3_tmp_10_reg_587.read();
        ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_607 = tmp_2_1_reg_607.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter5_tmp_10_reg_587 = ap_pipeline_reg_pp0_iter4_tmp_10_reg_587.read();
        ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_607 = ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_607.read();
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter6_tmp_10_reg_587 = ap_pipeline_reg_pp0_iter5_tmp_10_reg_587.read();
        ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_495.read();
        ap_pipeline_reg_pp0_iter7_tmp_10_reg_587 = ap_pipeline_reg_pp0_iter6_tmp_10_reg_587.read();
        exitcond_flatten_reg_495 = exitcond_flatten_fu_190_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_499 = indvar_flatten_next_fu_196_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_190_p2.read(), ap_const_lv1_0))) {
        j_mid2_reg_504 = j_mid2_fu_214_p3.read();
        tmp_1_reg_525 = tmp_1_fu_250_p3.read();
        tmp_mid2_reg_512 = tmp_mid2_fu_234_p3.read();
        tmp_reg_541 = tmp_fu_268_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_190_p2.read(), ap_const_lv1_0))) {
        tmp_1_mid2_v_reg_520 = tmp_1_mid2_v_fu_242_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        tmp_2_1_reg_607 = grp_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
        tmp_5_1_reg_617 = grp_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
        tmp_5_reg_612 = grp_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_495.read(), ap_const_lv1_0))) {
        tmp_s_reg_602 = grp_fu_186_p2.read();
    }
}

void matmul_hw::thread_a_Addr_A() {
    a_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_277_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_4_fu_258_p1.read());
        } else {
            a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_Clk_A() {
    a_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_Din_A() {
    a_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())))) {
        a_EN_A = ap_const_logic_1;
    } else {
        a_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_Rst_A() {
    a_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_WEN_A() {
    a_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_row_load_1_fu_331_p3() {
    a_row_load_1_fu_331_p3 = (!tmp_3_fu_326_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_326_p2.read()[0].to_bool())? a_Dout_A.read(): a_row_load_3_fu_76.read());
}

void matmul_hw::thread_a_row_load_fu_339_p3() {
    a_row_load_fu_339_p3 = (!tmp_3_fu_326_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_326_p2.read()[0].to_bool())? a_load_reg_556.read(): a_row_load_4_fu_72.read());
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Addr_A() {
    b_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_9_cast_fu_295_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_6_fu_263_p1.read());
        } else {
            b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_Clk_A() {
    b_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_Din_A() {
    b_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())))) {
        b_EN_A = ap_const_logic_1;
    } else {
        b_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Rst_A() {
    b_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_WEN_A() {
    b_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_copy_0_1_1_fu_356_p3() {
    b_copy_0_1_1_fu_356_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_copy_0_0_reg_566.read(): b_copy_0_1_5_fu_84.read());
}

void matmul_hw::thread_b_copy_0_1_2_fu_362_p3() {
    b_copy_0_1_2_fu_362_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_copy_0_1_fu_80.read(): b_copy_0_0_reg_566.read());
}

void matmul_hw::thread_b_copy_0_1_3_fu_396_p3() {
    b_copy_0_1_3_fu_396_p3 = (!tmp_mid2_reg_512.read()[0].is_01())? sc_lv<32>(): ((tmp_mid2_reg_512.read()[0].to_bool())? b_copy_0_1_1_fu_356_p3.read(): b_copy_0_1_5_fu_84.read());
}

void matmul_hw::thread_b_copy_0_1_4_fu_403_p3() {
    b_copy_0_1_4_fu_403_p3 = (!tmp_mid2_reg_512.read()[0].is_01())? sc_lv<32>(): ((tmp_mid2_reg_512.read()[0].to_bool())? b_copy_0_1_2_fu_362_p3.read(): b_copy_0_1_fu_80.read());
}

void matmul_hw::thread_b_copy_1_1_1_fu_368_p3() {
    b_copy_1_1_1_fu_368_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_Dout_A.read(): b_copy_1_1_5_fu_92.read());
}

void matmul_hw::thread_b_copy_1_1_2_fu_375_p3() {
    b_copy_1_1_2_fu_375_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_copy_1_1_fu_88.read(): b_Dout_A.read());
}

void matmul_hw::thread_b_copy_1_1_3_fu_382_p3() {
    b_copy_1_1_3_fu_382_p3 = (!tmp_mid2_reg_512.read()[0].is_01())? sc_lv<32>(): ((tmp_mid2_reg_512.read()[0].to_bool())? b_copy_1_1_1_fu_368_p3.read(): b_copy_1_1_5_fu_92.read());
}

void matmul_hw::thread_b_copy_1_1_4_fu_389_p3() {
    b_copy_1_1_4_fu_389_p3 = (!tmp_mid2_reg_512.read()[0].is_01())? sc_lv<32>(): ((tmp_mid2_reg_512.read()[0].to_bool())? b_copy_1_1_2_fu_375_p3.read(): b_copy_1_1_fu_88.read());
}

void matmul_hw::thread_b_copy_load_0_phi_fu_410_p3() {
    b_copy_load_0_phi_fu_410_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_copy_0_1_3_fu_396_p3.read(): b_copy_0_1_4_fu_403_p3.read());
}

void matmul_hw::thread_b_copy_load_1_phi_fu_418_p3() {
    b_copy_load_1_phi_fu_418_p3 = (!tmp_reg_541.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_541.read()[0].to_bool())? b_copy_1_1_3_fu_382_p3.read(): b_copy_1_1_4_fu_389_p3.read());
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_10_cast_fu_455_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = tmp_5_1_reg_617.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_190_p2() {
    exitcond_flatten_fu_190_p2 = (!indvar_flatten_phi_fu_152_p4.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_152_p4.read() == ap_const_lv3_4);
}

void matmul_hw::thread_exitcond_fu_208_p2() {
    exitcond_fu_208_p2 = (!j_phi_fu_174_p4.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_174_p4.read() == ap_const_lv2_2);
}

void matmul_hw::thread_grp_fu_181_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_181_p0 = tmp_5_reg_612.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_181_p0 = tmp_s_reg_602.read();
    } else {
        grp_fu_181_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_181_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_181_p1 = ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_607.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_181_p1 = ap_const_lv32_0;
    } else {
        grp_fu_181_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_186_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_186_p0 = a_row_load_1_reg_577.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_186_p0 = a_row_load_fu_339_p3.read();
        } else {
            grp_fu_186_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_186_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_186_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_186_p1 = b_copy_load_1_phi_reg_597.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_186_p1 = b_copy_load_0_phi_fu_410_p3.read();
        } else {
            grp_fu_186_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_186_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_i_1_fu_202_p2() {
    i_1_fu_202_p2 = (!ap_const_lv2_1.is_01() || !i_phi_fu_163_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(i_phi_fu_163_p4.read()));
}

void matmul_hw::thread_i_phi_fu_163_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_phi_fu_163_p4 = tmp_1_mid2_v_reg_520.read();
    } else {
        i_phi_fu_163_p4 = i_reg_159.read();
    }
}

void matmul_hw::thread_indvar_flatten_next_fu_196_p2() {
    indvar_flatten_next_fu_196_p2 = (!indvar_flatten_phi_fu_152_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_phi_fu_152_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matmul_hw::thread_indvar_flatten_phi_fu_152_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_phi_fu_152_p4 = indvar_flatten_next_reg_499.read();
    } else {
        indvar_flatten_phi_fu_152_p4 = indvar_flatten_reg_148.read();
    }
}

void matmul_hw::thread_j_1_fu_300_p2() {
    j_1_fu_300_p2 = (!ap_const_lv2_1.is_01() || !j_mid2_reg_504.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(j_mid2_reg_504.read()));
}

void matmul_hw::thread_j_mid2_fu_214_p3() {
    j_mid2_fu_214_p3 = (!exitcond_fu_208_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_208_p2.read()[0].to_bool())? ap_const_lv2_0: j_phi_fu_174_p4.read());
}

void matmul_hw::thread_j_phi_fu_174_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_495.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_phi_fu_174_p4 = j_1_reg_572.read();
    } else {
        j_phi_fu_174_p4 = j_reg_170.read();
    }
}

void matmul_hw::thread_tmp1_fu_228_p2() {
    tmp1_fu_228_p2 = (!i_phi_fu_163_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_163_p4.read() == ap_const_lv2_0);
}

void matmul_hw::thread_tmp_10_cast_fu_455_p1() {
    tmp_10_cast_fu_455_p1 = esl_zext<64,4>(ap_pipeline_reg_pp0_iter7_tmp_10_reg_587.read());
}

void matmul_hw::thread_tmp_10_fu_350_p2() {
    tmp_10_fu_350_p2 = (!tmp_4_cast_fu_323_p1.read().is_01() || !tmp_6_cast5_fu_347_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_4_cast_fu_323_p1.read()) + sc_biguint<4>(tmp_6_cast5_fu_347_p1.read()));
}

void matmul_hw::thread_tmp_1_fu_250_p3() {
    tmp_1_fu_250_p3 = esl_concat<2,1>(tmp_1_mid2_v_fu_242_p3.read(), ap_const_lv1_0);
}

void matmul_hw::thread_tmp_1_mid2_v_fu_242_p3() {
    tmp_1_mid2_v_fu_242_p3 = (!exitcond_fu_208_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_208_p2.read()[0].to_bool())? i_1_fu_202_p2.read(): i_phi_fu_163_p4.read());
}

void matmul_hw::thread_tmp_3_fu_326_p2() {
    tmp_3_fu_326_p2 = (!j_mid2_reg_504.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(j_mid2_reg_504.read() == ap_const_lv2_0);
}

void matmul_hw::thread_tmp_4_cast_fu_323_p1() {
    tmp_4_cast_fu_323_p1 = esl_zext<4,3>(tmp_1_reg_525.read());
}

void matmul_hw::thread_tmp_4_fu_258_p1() {
    tmp_4_fu_258_p1 = esl_zext<64,3>(tmp_1_fu_250_p3.read());
}

void matmul_hw::thread_tmp_6_cast5_fu_347_p1() {
    tmp_6_cast5_fu_347_p1 = esl_zext<4,2>(j_mid2_reg_504.read());
}

void matmul_hw::thread_tmp_6_cast_fu_286_p1() {
    tmp_6_cast_fu_286_p1 = esl_zext<3,2>(j_mid2_reg_504.read());
}

void matmul_hw::thread_tmp_6_fu_263_p1() {
    tmp_6_fu_263_p1 = esl_zext<64,2>(j_mid2_fu_214_p3.read());
}

void matmul_hw::thread_tmp_7_fu_272_p2() {
    tmp_7_fu_272_p2 = (tmp_1_reg_525.read() | ap_const_lv3_1);
}

void matmul_hw::thread_tmp_8_fu_277_p3() {
    tmp_8_fu_277_p3 = esl_concat<61,3>(ap_const_lv61_0, tmp_7_fu_272_p2.read());
}

void matmul_hw::thread_tmp_9_cast_fu_295_p1() {
    tmp_9_cast_fu_295_p1 = esl_zext<64,3>(tmp_9_fu_289_p2.read());
}

void matmul_hw::thread_tmp_9_fu_289_p2() {
    tmp_9_fu_289_p2 = (!ap_const_lv3_2.is_01() || !tmp_6_cast_fu_286_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(tmp_6_cast_fu_286_p1.read()));
}

void matmul_hw::thread_tmp_fu_268_p1() {
    tmp_fu_268_p1 = j_mid2_fu_214_p3.read().range(1-1, 0);
}

void matmul_hw::thread_tmp_mid1_fu_222_p2() {
    tmp_mid1_fu_222_p2 = (!i_1_fu_202_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_1_fu_202_p2.read() == ap_const_lv2_0);
}

void matmul_hw::thread_tmp_mid2_fu_234_p3() {
    tmp_mid2_fu_234_p3 = (!exitcond_fu_208_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_208_p2.read()[0].to_bool())? tmp_mid1_fu_222_p2.read(): tmp1_fu_228_p2.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_fu_190_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_fu_190_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Addr_A\" :  \"" << a_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_EN_A\" :  \"" << a_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_WEN_A\" :  \"" << a_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Din_A\" :  \"" << a_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_Dout_A\" :  \"" << a_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Clk_A\" :  \"" << a_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Rst_A\" :  \"" << a_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Addr_A\" :  \"" << b_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_EN_A\" :  \"" << b_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_WEN_A\" :  \"" << b_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Din_A\" :  \"" << b_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_Dout_A\" :  \"" << b_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Clk_A\" :  \"" << b_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Rst_A\" :  \"" << b_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

