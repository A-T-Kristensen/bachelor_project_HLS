-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir2dim_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fir2dim_coefficients_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_coefficients_ce0 : OUT STD_LOGIC;
    fir2dim_coefficients_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_coefficients_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_coefficients_ce1 : OUT STD_LOGIC;
    fir2dim_coefficients_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_image_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_image_ce0 : OUT STD_LOGIC;
    fir2dim_image_we0 : OUT STD_LOGIC;
    fir2dim_image_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_image_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_image_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_image_ce1 : OUT STD_LOGIC;
    fir2dim_image_we1 : OUT STD_LOGIC;
    fir2dim_image_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_image_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_array_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    fir2dim_array_ce0 : OUT STD_LOGIC;
    fir2dim_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_array_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    fir2dim_array_ce1 : OUT STD_LOGIC;
    fir2dim_array_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_output_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_output_ce0 : OUT STD_LOGIC;
    fir2dim_output_we0 : OUT STD_LOGIC;
    fir2dim_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fir2dim_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir2dim_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.657400,HLS_SYN_LAT=131,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=1469,HLS_SYN_LUT=1316}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_256 : STD_LOGIC_VECTOR (4 downto 0);
    signal poutput_0_idx_reg_267 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_reg_278 : STD_LOGIC_VECTOR (2 downto 0);
    signal poutput_1_rec_reg_289 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_361_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_622 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal poutput_0_idx_mid2_fu_433_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal poutput_0_idx_mid2_reg_627 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_mid2_fu_441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_mid2_reg_632 : STD_LOGIC_VECTOR (2 downto 0);
    signal poutput_0_idx1_fu_457_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter3_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter4_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter5_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter6_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter7_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter8_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter9_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter10_poutput_0_idx1_reg_637 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_463_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_642 : STD_LOGIC_VECTOR (5 downto 0);
    signal f_fu_478_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_reg_652 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_cast_fu_484_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_cast_reg_657 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal fir2dim_coefficients_11_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal fir2dim_coefficients_13_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal fir2dim_coefficients_15_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal fir2dim_coefficients_17_reg_777 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_1_reg_787 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal grp_fu_315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_2_reg_792 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_5_2_reg_792 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_5_2_reg_792 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_8_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_8_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_8_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_8_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_8_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_8_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_2_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_8_2_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_8_2_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_8_2_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_8_2_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_s_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_1_1_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_1_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_6_2_reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_9_reg_857 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_9_1_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_9_2_reg_867 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_7_reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_10_1_reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_10_2_reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_260_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal poutput_0_idx_phi_fu_271_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_phi_fu_282_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal poutput_1_rec_phi_fu_293_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_473_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_1_cast_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_2_cast_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_cast_fu_514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum10_1_cast_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum10_2_cast_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum1_cast_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum12_1_cast_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum12_2_cast_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal poutput_0_idx1_cast_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_300_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_323_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_327_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_339_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_fu_335_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl1_cast_fu_345_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_s_fu_381_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_387_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_mid1_fu_391_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_403_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_mid1_fu_399_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl1_cast_mid1_fu_409_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid1_fu_413_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_349_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_427_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal poutput_1_rec_mid2_fu_373_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal poutput_1_rec_cast3_fu_449_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_cast_fu_453_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_fu_419_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_cast_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum8_1_fu_487_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum8_2_fu_498_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum_fu_509_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum10_1_fu_519_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum10_2_fu_529_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum1_fu_539_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum12_1_fu_549_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum12_2_fu_559_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);

    component fir2dim_hwa_fadd_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir2dim_hwa_fmul_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fir2dim_hwa_fadd_bkb_U1 : component fir2dim_hwa_fadd_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_300_p0,
        din1 => grp_fu_300_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_300_p2);

    fir2dim_hwa_fadd_bkb_U2 : component fir2dim_hwa_fadd_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_305_p0,
        din1 => grp_fu_305_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_305_p2);

    fir2dim_hwa_fmul_cud_U3 : component fir2dim_hwa_fmul_cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_309_p0,
        din1 => grp_fu_309_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_309_p2);

    fir2dim_hwa_fmul_cud_U4 : component fir2dim_hwa_fmul_cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => fir2dim_coefficients_q0,
        din1 => grp_fu_315_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_315_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_355_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((exitcond_flatten_reg_618 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_256 <= indvar_flatten_next_reg_622;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_256 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                k_reg_278 <= k_mid2_reg_632;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                k_reg_278 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    poutput_0_idx_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                poutput_0_idx_reg_267 <= poutput_0_idx_mid2_reg_627;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                poutput_0_idx_reg_267 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    poutput_1_rec_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                poutput_1_rec_reg_289 <= f_reg_652;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                poutput_1_rec_reg_289 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter10_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter9_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 <= exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter1_poutput_0_idx1_reg_637 <= poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter2_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter1_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter2_tmp_5_2_reg_792 <= tmp_5_2_reg_792;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter3_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter2_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter3_tmp_5_2_reg_792 <= ap_pipeline_reg_pp0_iter2_tmp_5_2_reg_792;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter4_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter3_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter5_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter4_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter6_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter5_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter7_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter6_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter8_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter7_poutput_0_idx1_reg_637;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_618 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_618;
                ap_pipeline_reg_pp0_iter9_poutput_0_idx1_reg_637 <= ap_pipeline_reg_pp0_iter8_poutput_0_idx1_reg_637;
                exitcond_flatten_reg_618 <= exitcond_flatten_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_1_1_reg_832 <= tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter2_tmp_1_2_reg_837 <= tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter3_tmp_1_1_reg_832 <= ap_pipeline_reg_pp0_iter2_tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter3_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter2_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter4_tmp_1_1_reg_832 <= ap_pipeline_reg_pp0_iter3_tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter4_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter3_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_832 <= ap_pipeline_reg_pp0_iter4_tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter5_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter4_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter6_tmp_1_1_reg_832 <= ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter5_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter7_tmp_1_1_reg_832 <= ap_pipeline_reg_pp0_iter6_tmp_1_1_reg_832;
                ap_pipeline_reg_pp0_iter7_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter8_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter7_tmp_1_2_reg_837;
                ap_pipeline_reg_pp0_iter9_tmp_1_2_reg_837 <= ap_pipeline_reg_pp0_iter8_tmp_1_2_reg_837;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_8_1_reg_817 <= tmp_8_1_reg_817;
                ap_pipeline_reg_pp0_iter2_tmp_8_reg_812 <= tmp_8_reg_812;
                ap_pipeline_reg_pp0_iter3_tmp_8_1_reg_817 <= ap_pipeline_reg_pp0_iter2_tmp_8_1_reg_817;
                ap_pipeline_reg_pp0_iter3_tmp_8_reg_812 <= ap_pipeline_reg_pp0_iter2_tmp_8_reg_812;
                ap_pipeline_reg_pp0_iter4_tmp_8_1_reg_817 <= ap_pipeline_reg_pp0_iter3_tmp_8_1_reg_817;
                ap_pipeline_reg_pp0_iter5_tmp_8_1_reg_817 <= ap_pipeline_reg_pp0_iter4_tmp_8_1_reg_817;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_8_2_reg_822 <= tmp_8_2_reg_822;
                ap_pipeline_reg_pp0_iter2_tmp_s_reg_827 <= tmp_s_reg_827;
                ap_pipeline_reg_pp0_iter3_tmp_8_2_reg_822 <= ap_pipeline_reg_pp0_iter2_tmp_8_2_reg_822;
                ap_pipeline_reg_pp0_iter3_tmp_s_reg_827 <= ap_pipeline_reg_pp0_iter2_tmp_s_reg_827;
                ap_pipeline_reg_pp0_iter4_tmp_8_2_reg_822 <= ap_pipeline_reg_pp0_iter3_tmp_8_2_reg_822;
                ap_pipeline_reg_pp0_iter4_tmp_s_reg_827 <= ap_pipeline_reg_pp0_iter3_tmp_s_reg_827;
                ap_pipeline_reg_pp0_iter5_tmp_8_2_reg_822 <= ap_pipeline_reg_pp0_iter4_tmp_8_2_reg_822;
                ap_pipeline_reg_pp0_iter5_tmp_s_reg_827 <= ap_pipeline_reg_pp0_iter4_tmp_s_reg_827;
                ap_pipeline_reg_pp0_iter6_tmp_s_reg_827 <= ap_pipeline_reg_pp0_iter5_tmp_s_reg_827;
                ap_pipeline_reg_pp0_iter7_tmp_s_reg_827 <= ap_pipeline_reg_pp0_iter6_tmp_s_reg_827;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_355_p2 = ap_const_lv1_0))) then
                f_reg_652 <= f_fu_478_p2;
                k_mid2_reg_632 <= k_mid2_fu_441_p3;
                poutput_0_idx_mid2_reg_627 <= poutput_0_idx_mid2_fu_433_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                fir2dim_coefficients_11_reg_682 <= fir2dim_coefficients_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                fir2dim_coefficients_13_reg_712 <= fir2dim_coefficients_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                fir2dim_coefficients_15_reg_742 <= fir2dim_coefficients_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                fir2dim_coefficients_17_reg_777 <= fir2dim_coefficients_q1;
                tmp_5_reg_752 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_622 <= indvar_flatten_next_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_355_p2 = ap_const_lv1_0))) then
                poutput_0_idx1_reg_637 <= poutput_0_idx1_fu_457_p2;
                tmp_2_reg_642 <= tmp_2_fu_463_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_10_1_reg_877 <= grp_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_10_2_reg_882 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_1_1_reg_832 <= grp_fu_309_p2;
                tmp_1_2_reg_837 <= grp_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_3_cast_reg_657 <= tmp_3_cast_fu_484_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                tmp_5_1_reg_787 <= grp_fu_309_p2;
                tmp_5_2_reg_792 <= grp_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_6_1_reg_847 <= grp_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_6_2_reg_852 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_6_reg_842 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8) and (ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_7_reg_872 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_8_1_reg_817 <= grp_fu_315_p2;
                tmp_8_reg_812 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_8_2_reg_822 <= grp_fu_309_p2;
                tmp_s_reg_827 <= grp_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_9_1_reg_862 <= grp_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_9_2_reg_867 <= grp_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_618 = ap_const_lv1_0))) then
                tmp_9_reg_857 <= grp_fu_305_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_355_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_355_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter9))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state57 <= ap_CS_fsm(6 downto 6);

    ap_done_assign_proc : process(ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_355_p2 <= "1" when (indvar_flatten_phi_fu_260_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_367_p2 <= "1" when (poutput_1_rec_phi_fu_293_p4 = ap_const_lv3_4) else "0";
    f_cast_fu_453_p1 <= std_logic_vector(resize(unsigned(poutput_1_rec_mid2_fu_373_p3),6));
    f_fu_478_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(poutput_1_rec_mid2_fu_373_p3));

    fir2dim_array_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, tmp_3_fu_473_p1, sum8_1_cast_fu_493_p1, sum10_1_cast_fu_524_p1, sum1_cast_fu_544_p1, sum12_2_cast_fu_564_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                fir2dim_array_address0 <= sum12_2_cast_fu_564_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                fir2dim_array_address0 <= sum1_cast_fu_544_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                fir2dim_array_address0 <= sum10_1_cast_fu_524_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                fir2dim_array_address0 <= sum8_1_cast_fu_493_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                fir2dim_array_address0 <= tmp_3_fu_473_p1(6 - 1 downto 0);
            else 
                fir2dim_array_address0 <= "XXXXXX";
            end if;
        else 
            fir2dim_array_address0 <= "XXXXXX";
        end if; 
    end process;


    fir2dim_array_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sum8_2_cast_fu_504_p1, sum_cast_fu_514_p1, sum10_2_cast_fu_534_p1, sum12_1_cast_fu_554_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                fir2dim_array_address1 <= sum12_1_cast_fu_554_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                fir2dim_array_address1 <= sum10_2_cast_fu_534_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                fir2dim_array_address1 <= sum_cast_fu_514_p1(6 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                fir2dim_array_address1 <= sum8_2_cast_fu_504_p1(6 - 1 downto 0);
            else 
                fir2dim_array_address1 <= "XXXXXX";
            end if;
        else 
            fir2dim_array_address1 <= "XXXXXX";
        end if; 
    end process;


    fir2dim_array_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            fir2dim_array_ce0 <= ap_const_logic_1;
        else 
            fir2dim_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fir2dim_array_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            fir2dim_array_ce1 <= ap_const_logic_1;
        else 
            fir2dim_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fir2dim_coefficients_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                fir2dim_coefficients_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                fir2dim_coefficients_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                fir2dim_coefficients_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                fir2dim_coefficients_address0 <= ap_const_lv64_2(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                fir2dim_coefficients_address0 <= ap_const_lv64_0(4 - 1 downto 0);
            else 
                fir2dim_coefficients_address0 <= "XXXX";
            end if;
        else 
            fir2dim_coefficients_address0 <= "XXXX";
        end if; 
    end process;


    fir2dim_coefficients_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                fir2dim_coefficients_address1 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                fir2dim_coefficients_address1 <= ap_const_lv64_5(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                fir2dim_coefficients_address1 <= ap_const_lv64_3(4 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                fir2dim_coefficients_address1 <= ap_const_lv64_1(4 - 1 downto 0);
            else 
                fir2dim_coefficients_address1 <= "XXXX";
            end if;
        else 
            fir2dim_coefficients_address1 <= "XXXX";
        end if; 
    end process;


    fir2dim_coefficients_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            fir2dim_coefficients_ce0 <= ap_const_logic_1;
        else 
            fir2dim_coefficients_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fir2dim_coefficients_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            fir2dim_coefficients_ce1 <= ap_const_logic_1;
        else 
            fir2dim_coefficients_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    fir2dim_image_address0 <= ap_const_lv4_0;
    fir2dim_image_address1 <= ap_const_lv4_0;
    fir2dim_image_ce0 <= ap_const_logic_0;
    fir2dim_image_ce1 <= ap_const_logic_0;
    fir2dim_image_d0 <= ap_const_lv32_0;
    fir2dim_image_d1 <= ap_const_lv32_0;
    fir2dim_image_we0 <= ap_const_logic_0;
    fir2dim_image_we1 <= ap_const_logic_0;
    fir2dim_output_address0 <= poutput_0_idx1_cast_fu_569_p1(4 - 1 downto 0);

    fir2dim_output_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            fir2dim_output_ce0 <= ap_const_logic_1;
        else 
            fir2dim_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fir2dim_output_d0 <= tmp_10_2_reg_882;

    fir2dim_output_we0_assign_proc : process(ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_618, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_618 = ap_const_lv1_0)))) then 
            fir2dim_output_we0 <= ap_const_logic_1;
        else 
            fir2dim_output_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_300_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_5_reg_752, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_6_1_reg_847, tmp_9_reg_857, ap_enable_reg_pp0_iter5, tmp_9_2_reg_867, ap_enable_reg_pp0_iter7, tmp_10_1_reg_877, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_300_p0 <= tmp_10_1_reg_877;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_300_p0 <= tmp_9_2_reg_867;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_300_p0 <= tmp_9_reg_857;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_300_p0 <= tmp_6_1_reg_847;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_300_p0 <= tmp_5_reg_752;
        else 
            grp_fu_300_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_300_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter3_tmp_5_2_reg_792, ap_pipeline_reg_pp0_iter5_tmp_8_1_reg_817, ap_pipeline_reg_pp0_iter7_tmp_s_reg_827, ap_pipeline_reg_pp0_iter9_tmp_1_2_reg_837, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_300_p1 <= ap_pipeline_reg_pp0_iter9_tmp_1_2_reg_837;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_300_p1 <= ap_pipeline_reg_pp0_iter7_tmp_s_reg_827;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_300_p1 <= ap_pipeline_reg_pp0_iter5_tmp_8_1_reg_817;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_300_p1 <= ap_pipeline_reg_pp0_iter3_tmp_5_2_reg_792;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_300_p1 <= ap_const_lv32_0;
        else 
            grp_fu_300_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_6_reg_842, ap_enable_reg_pp0_iter2, tmp_6_2_reg_852, ap_enable_reg_pp0_iter4, tmp_9_1_reg_862, ap_enable_reg_pp0_iter6, tmp_7_reg_872, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_305_p0 <= tmp_7_reg_872;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_305_p0 <= tmp_9_1_reg_862;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_305_p0 <= tmp_6_2_reg_852;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_305_p0 <= tmp_6_reg_842;
        else 
            grp_fu_305_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_5_1_reg_787, ap_pipeline_reg_pp0_iter3_tmp_8_reg_812, ap_pipeline_reg_pp0_iter5_tmp_8_2_reg_822, ap_pipeline_reg_pp0_iter7_tmp_1_1_reg_832, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_305_p1 <= ap_pipeline_reg_pp0_iter7_tmp_1_1_reg_832;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_305_p1 <= ap_pipeline_reg_pp0_iter5_tmp_8_2_reg_822;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_305_p1 <= ap_pipeline_reg_pp0_iter3_tmp_8_reg_812;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_305_p1 <= tmp_5_1_reg_787;
        else 
            grp_fu_305_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_309_p0_assign_proc : process(fir2dim_coefficients_q0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, fir2dim_coefficients_11_reg_682, ap_CS_fsm_pp0_stage2, fir2dim_coefficients_13_reg_712, ap_CS_fsm_pp0_stage3, fir2dim_coefficients_15_reg_742, ap_CS_fsm_pp0_stage4, fir2dim_coefficients_17_reg_777, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_309_p0 <= fir2dim_coefficients_17_reg_777;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_309_p0 <= fir2dim_coefficients_15_reg_742;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_309_p0 <= fir2dim_coefficients_13_reg_712;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_309_p0 <= fir2dim_coefficients_11_reg_682;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_309_p0 <= fir2dim_coefficients_q0;
        else 
            grp_fu_309_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_309_p1_assign_proc : process(fir2dim_array_q0, fir2dim_array_q1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_309_p1 <= fir2dim_array_q1;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_309_p1 <= fir2dim_array_q0;
        else 
            grp_fu_309_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_315_p1_assign_proc : process(fir2dim_array_q0, fir2dim_array_q1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_315_p1 <= fir2dim_array_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_315_p1 <= fir2dim_array_q1;
        else 
            grp_fu_315_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    indvar_flatten_next_fu_361_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(indvar_flatten_phi_fu_260_p4));

    indvar_flatten_phi_fu_260_p4_assign_proc : process(indvar_flatten_reg_256, exitcond_flatten_reg_618, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_622, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_260_p4 <= indvar_flatten_next_reg_622;
        else 
            indvar_flatten_phi_fu_260_p4 <= indvar_flatten_reg_256;
        end if; 
    end process;

    k_mid2_fu_441_p3 <= 
        k_s_fu_381_p2 when (exitcond_fu_367_p2(0) = '1') else 
        k_phi_fu_282_p4;

    k_phi_fu_282_p4_assign_proc : process(k_reg_278, exitcond_flatten_reg_618, ap_CS_fsm_pp0_stage0, k_mid2_reg_632, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            k_phi_fu_282_p4 <= k_mid2_reg_632;
        else 
            k_phi_fu_282_p4 <= k_reg_278;
        end if; 
    end process;

    k_s_fu_381_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(k_phi_fu_282_p4));
    p_shl1_cast_fu_345_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_339_p2),6));
    p_shl1_cast_mid1_fu_409_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_403_p2),6));
    p_shl_cast_fu_335_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_327_p3),6));
    p_shl_cast_mid1_fu_399_p1 <= std_logic_vector(resize(unsigned(p_shl_mid1_fu_391_p3),6));
    p_shl_fu_327_p3 <= (tmp_1_fu_323_p1 & ap_const_lv3_0);
    p_shl_mid1_fu_391_p3 <= (tmp_11_fu_387_p1 & ap_const_lv3_0);
    poutput_0_idx1_cast_fu_569_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter10_poutput_0_idx1_reg_637),64));
    poutput_0_idx1_fu_457_p2 <= std_logic_vector(unsigned(poutput_1_rec_cast3_fu_449_p1) + unsigned(poutput_0_idx_mid2_fu_433_p3));
    poutput_0_idx_mid2_fu_433_p3 <= 
        tmp_13_fu_427_p2 when (exitcond_fu_367_p2(0) = '1') else 
        poutput_0_idx_phi_fu_271_p4;

    poutput_0_idx_phi_fu_271_p4_assign_proc : process(poutput_0_idx_reg_267, exitcond_flatten_reg_618, ap_CS_fsm_pp0_stage0, poutput_0_idx_mid2_reg_627, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            poutput_0_idx_phi_fu_271_p4 <= poutput_0_idx_mid2_reg_627;
        else 
            poutput_0_idx_phi_fu_271_p4 <= poutput_0_idx_reg_267;
        end if; 
    end process;

    poutput_1_rec_cast3_fu_449_p1 <= std_logic_vector(resize(unsigned(poutput_1_rec_mid2_fu_373_p3),5));
    poutput_1_rec_mid2_fu_373_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_367_p2(0) = '1') else 
        poutput_1_rec_phi_fu_293_p4;

    poutput_1_rec_phi_fu_293_p4_assign_proc : process(poutput_1_rec_reg_289, exitcond_flatten_reg_618, ap_CS_fsm_pp0_stage0, f_reg_652, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            poutput_1_rec_phi_fu_293_p4 <= f_reg_652;
        else 
            poutput_1_rec_phi_fu_293_p4 <= poutput_1_rec_reg_289;
        end if; 
    end process;

        sum10_1_cast_fu_524_p1 <= std_logic_vector(resize(signed(sum10_1_fu_519_p2),64));

    sum10_1_fu_519_p2 <= std_logic_vector(unsigned(ap_const_lv7_7) + unsigned(tmp_3_cast_reg_657));
        sum10_2_cast_fu_534_p1 <= std_logic_vector(resize(signed(sum10_2_fu_529_p2),64));

    sum10_2_fu_529_p2 <= std_logic_vector(unsigned(ap_const_lv7_8) + unsigned(tmp_3_cast_reg_657));
        sum12_1_cast_fu_554_p1 <= std_logic_vector(resize(signed(sum12_1_fu_549_p2),64));

    sum12_1_fu_549_p2 <= std_logic_vector(unsigned(ap_const_lv7_D) + unsigned(tmp_3_cast_reg_657));
        sum12_2_cast_fu_564_p1 <= std_logic_vector(resize(signed(sum12_2_fu_559_p2),64));

    sum12_2_fu_559_p2 <= std_logic_vector(unsigned(ap_const_lv7_E) + unsigned(tmp_3_cast_reg_657));
        sum1_cast_fu_544_p1 <= std_logic_vector(resize(signed(sum1_fu_539_p2),64));

    sum1_fu_539_p2 <= std_logic_vector(unsigned(ap_const_lv7_C) + unsigned(tmp_3_cast_reg_657));
    sum8_1_cast_fu_493_p1 <= std_logic_vector(resize(unsigned(sum8_1_fu_487_p2),64));
    sum8_1_fu_487_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(tmp_3_cast_fu_484_p1));
        sum8_2_cast_fu_504_p1 <= std_logic_vector(resize(signed(sum8_2_fu_498_p2),64));

    sum8_2_fu_498_p2 <= std_logic_vector(unsigned(ap_const_lv7_2) + unsigned(tmp_3_cast_fu_484_p1));
        sum_cast_fu_514_p1 <= std_logic_vector(resize(signed(sum_fu_509_p2),64));

    sum_fu_509_p2 <= std_logic_vector(unsigned(ap_const_lv7_6) + unsigned(tmp_3_cast_reg_657));
    tmp_10_fu_339_p2 <= std_logic_vector(shift_left(unsigned(k_phi_fu_282_p4),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    tmp_11_fu_387_p1 <= k_s_fu_381_p2(2 - 1 downto 0);
    tmp_12_fu_403_p2 <= std_logic_vector(shift_left(unsigned(k_s_fu_381_p2),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    tmp_13_fu_427_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(poutput_0_idx_phi_fu_271_p4));
    tmp_1_fu_323_p1 <= k_phi_fu_282_p4(2 - 1 downto 0);
        tmp_2_cast_fu_469_p1 <= std_logic_vector(resize(signed(tmp_2_fu_463_p2),32));

    tmp_2_fu_463_p2 <= std_logic_vector(unsigned(f_cast_fu_453_p1) + unsigned(tmp_mid2_fu_419_p3));
        tmp_3_cast_fu_484_p1 <= std_logic_vector(resize(signed(tmp_2_reg_642),7));

    tmp_3_fu_473_p1 <= std_logic_vector(resize(unsigned(tmp_2_cast_fu_469_p1),64));
    tmp_fu_349_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_335_p1) - unsigned(p_shl1_cast_fu_345_p1));
    tmp_mid1_fu_413_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_399_p1) - unsigned(p_shl1_cast_mid1_fu_409_p1));
    tmp_mid2_fu_419_p3 <= 
        tmp_mid1_fu_413_p2 when (exitcond_fu_367_p2(0) = '1') else 
        tmp_fu_349_p2;
end behav;
