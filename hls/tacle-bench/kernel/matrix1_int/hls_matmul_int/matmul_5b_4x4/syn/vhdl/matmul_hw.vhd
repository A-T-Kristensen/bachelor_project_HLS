-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=41,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=1069,HLS_SYN_LUT=2194}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_258 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_269 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_280 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1228 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_297_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1232 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_315_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_335_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1245 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_mid2_v_fu_343_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid2_v_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_351_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_reg_1271 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_371_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1296 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal tmp_3_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_row_0_reg_1325 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_reg_1330 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_649_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_662_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_675_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1385 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_3_1_fu_756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_1_reg_1390 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_1_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_1_fu_769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_1_reg_1400 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_0_1_fu_776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_969_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1410 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_987_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_964_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_1425 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1430 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_1435 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_262_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_273_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_284_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_404_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_cast_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_0_2_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_1_2_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_2_2_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_3_2_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_950_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_943_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_936_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_922_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_303_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_399_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_cast_fu_419_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_3_fu_439_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_452_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_545_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_537_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_585_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_649_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_662_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_662_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_782_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_969_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_969_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_969_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_987_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1068_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_cast_fu_1075_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_cast5_fu_1079_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_1082_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp9_fu_1093_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1097_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component matmul_hw_mux_42_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_mul_32scud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_mux_42_bkb_U1 : component matmul_hw_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_4_fu_649_p1,
        din2 => tmp_4_fu_649_p2,
        din3 => tmp_4_fu_649_p3,
        din4 => tmp_4_fu_649_p4,
        din5 => tmp_reg_1296,
        dout => tmp_4_fu_649_p6);

    matmul_hw_mux_42_bkb_U2 : component matmul_hw_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_662_p1,
        din2 => tmp_7_fu_662_p2,
        din3 => tmp_7_fu_662_p3,
        din4 => tmp_7_fu_662_p4,
        din5 => tmp_reg_1296,
        dout => tmp_7_fu_662_p6);

    matmul_hw_mul_32scud_U3 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_4_reg_1375,
        din1 => grp_fu_964_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_964_p2);

    matmul_hw_mux_42_bkb_U4 : component matmul_hw_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_5_fu_969_p1,
        din2 => tmp_5_fu_969_p2,
        din3 => tmp_5_fu_969_p3,
        din4 => tmp_5_fu_969_p4,
        din5 => tmp_reg_1296,
        dout => tmp_5_fu_969_p6);

    matmul_hw_mul_32scud_U5 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_7_reg_1380,
        din1 => grp_fu_982_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_982_p2);

    matmul_hw_mux_42_bkb_U6 : component matmul_hw_mux_42_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_8_fu_987_p1,
        din2 => tmp_8_fu_987_p2,
        din3 => tmp_8_fu_987_p3,
        din4 => tmp_8_fu_987_p4,
        din5 => tmp_reg_1296,
        dout => tmp_8_fu_987_p6);

    matmul_hw_mul_32scud_U7 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_reg_1410,
        din1 => a_row_1_1_reg_1400,
        ce => ap_const_logic_1,
        dout => grp_fu_1060_p2);

    matmul_hw_mul_32scud_U8 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_8_reg_1415,
        din1 => a_row_3_1_reg_1390,
        ce => ap_const_logic_1,
        dout => grp_fu_1064_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_291_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1228 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((exitcond_flatten_reg_1228 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_269 <= tmp_1_mid2_v_reg_1265;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_269 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_258 <= indvar_flatten_next_reg_1232;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_258 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_280 <= j_1_reg_1385;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_280 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_0_2_fu_86 <= a_row_0_1_fu_776_p3;
                a_row_1_2_fu_90 <= a_row_1_1_fu_769_p3;
                a_row_2_2_fu_94 <= a_row_2_1_fu_763_p3;
                a_row_3_2_fu_98 <= a_row_3_1_fu_756_p3;
                b_copy_1_3_11_fu_118 <= b_copy_1_3_18_fu_957_p3;
                b_copy_1_3_12_fu_126 <= b_copy_1_3_16_fu_943_p3;
                b_copy_1_3_1_fu_130 <= b_copy_1_3_3_fu_936_p3;
                b_copy_1_3_8_fu_122 <= b_copy_1_3_17_fu_950_p3;
                b_copy_3_3_11_fu_150 <= b_copy_3_3_18_fu_929_p3;
                b_copy_3_3_12_fu_158 <= b_copy_3_3_16_fu_915_p3;
                b_copy_3_3_1_fu_162 <= b_copy_3_3_3_fu_908_p3;
                b_copy_3_3_8_fu_154 <= b_copy_3_3_17_fu_922_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1228 = ap_const_lv1_0))) then
                a_row_0_reg_1325 <= a_0_Dout_A;
                a_row_2_reg_1330 <= a_1_Dout_A;
                b_copy_0_3_11_fu_102 <= b_copy_0_3_18_fu_642_p3;
                b_copy_0_3_12_fu_110 <= b_copy_0_3_16_fu_628_p3;
                b_copy_0_3_1_fu_114 <= b_copy_0_3_3_fu_621_p3;
                b_copy_0_3_8_fu_106 <= b_copy_0_3_17_fu_635_p3;
                b_copy_2_3_11_fu_134 <= b_copy_2_3_18_fu_614_p3;
                b_copy_2_3_12_fu_142 <= b_copy_2_3_16_fu_600_p3;
                b_copy_2_3_1_fu_146 <= b_copy_2_3_3_fu_593_p3;
                b_copy_2_3_8_fu_138 <= b_copy_2_3_17_fu_607_p3;
                j_1_reg_1385 <= j_1_fu_675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0))) then
                a_row_1_1_reg_1400 <= a_row_1_1_fu_769_p3;
                a_row_3_1_reg_1390 <= a_row_3_1_fu_756_p3;
                tmp_5_reg_1410 <= tmp_5_fu_969_p6;
                tmp_8_reg_1415 <= tmp_8_fu_987_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1228 <= exitcond_flatten_reg_1228;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1237 <= j_mid2_reg_1237;
                ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1265 <= tmp_1_mid2_v_reg_1265;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1228 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1228;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_1237 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1237;
                ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1265 <= ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1265;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1228 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1228;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_1237 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_1237;
                ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1265 <= ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1265;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1228 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1228;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_1237 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_1237;
                ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1265 <= ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1265;
                exitcond_flatten_reg_1228 <= exitcond_flatten_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_1232 <= indvar_flatten_next_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_291_p2 = ap_const_lv1_0))) then
                j_mid2_reg_1237 <= j_mid2_fu_315_p3;
                    tmp_1_reg_1271(3 downto 1) <= tmp_1_fu_351_p3(3 downto 1);
                tmp_mid2_reg_1245 <= tmp_mid2_fu_335_p3;
                tmp_reg_1296 <= tmp_fu_371_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1228 = ap_const_lv1_0))) then
                sel_tmp2_reg_1353 <= sel_tmp2_fu_447_p2;
                sel_tmp4_reg_1363 <= sel_tmp4_fu_460_p2;
                sel_tmp_reg_1345 <= sel_tmp_fu_434_p2;
                tmp_3_reg_1317 <= tmp_3_fu_414_p2;
                tmp_4_reg_1375 <= tmp_4_fu_649_p6;
                tmp_7_reg_1380 <= tmp_7_fu_662_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_291_p2 = ap_const_lv1_0))) then
                tmp_1_mid2_v_reg_1265 <= tmp_1_mid2_v_fu_343_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1228 = ap_const_lv1_0))) then
                tmp_2_1_reg_1430 <= grp_fu_1060_p2;
                tmp_2_3_reg_1435 <= grp_fu_1064_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1228 = ap_const_lv1_0))) then
                tmp_2_2_reg_1425 <= grp_fu_982_p2;
                tmp_s_reg_1420 <= grp_fu_964_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1271(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_291_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_291_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter3))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_9_fu_359_p1, tmp_11_fu_404_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_11_fu_404_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_9_fu_359_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_9_fu_359_p1, tmp_11_fu_404_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_11_fu_404_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_9_fu_359_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_row_0_1_fu_776_p3 <= 
        a_row_0_reg_1325 when (tmp_3_reg_1317(0) = '1') else 
        a_row_0_2_fu_86;
    a_row_1_1_fu_769_p3 <= 
        a_0_Dout_A when (tmp_3_reg_1317(0) = '1') else 
        a_row_1_2_fu_90;
    a_row_2_1_fu_763_p3 <= 
        a_row_2_reg_1330 when (tmp_3_reg_1317(0) = '1') else 
        a_row_2_2_fu_94;
    a_row_3_1_fu_756_p3 <= 
        a_1_Dout_A when (tmp_3_reg_1317(0) = '1') else 
        a_row_3_2_fu_98;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3 downto 3);

    ap_done_assign_proc : process(ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_6_fu_365_p1, tmp_14_cast_fu_428_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_14_cast_fu_428_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_6_fu_365_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_6_fu_365_p1, tmp_14_cast_fu_428_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_14_cast_fu_428_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_6_fu_365_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    b_copy_0_3_14_fu_505_p3 <= 
        b_copy_0_3_8_fu_106 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_0_3_9_fu_497_p3;
    b_copy_0_3_15_fu_513_p3 <= 
        b_0_Dout_A when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_0_3_11_fu_102;
    b_copy_0_3_16_fu_628_p3 <= 
        b_copy_0_3_7_fu_489_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_12_fu_110;
    b_copy_0_3_17_fu_635_p3 <= 
        b_copy_0_3_14_fu_505_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_8_fu_106;
    b_copy_0_3_18_fu_642_p3 <= 
        b_copy_0_3_15_fu_513_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_11_fu_102;
    b_copy_0_3_2_fu_465_p3 <= 
        b_copy_0_3_1_fu_114 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_0_3_4_fu_452_p3;
    b_copy_0_3_3_fu_621_p3 <= 
        b_copy_0_3_2_fu_465_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_1_fu_114;
    b_copy_0_3_4_fu_452_p3 <= 
        b_copy_0_3_1_fu_114 when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_0_3_fu_439_p3;
    b_copy_0_3_5_fu_473_p3 <= 
        b_0_Dout_A when (sel_tmp_fu_434_p2(0) = '1') else 
        b_copy_0_3_12_fu_110;
    b_copy_0_3_6_fu_481_p3 <= 
        b_copy_0_3_12_fu_110 when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_0_3_5_fu_473_p3;
    b_copy_0_3_7_fu_489_p3 <= 
        b_copy_0_3_12_fu_110 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_0_3_6_fu_481_p3;
    b_copy_0_3_9_fu_497_p3 <= 
        b_0_Dout_A when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_0_3_8_fu_106;
    b_copy_0_3_fu_439_p3 <= 
        b_copy_0_3_1_fu_114 when (sel_tmp_fu_434_p2(0) = '1') else 
        b_0_Dout_A;
    b_copy_1_3_14_fu_831_p3 <= 
        b_copy_1_3_8_fu_122 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_1_3_9_fu_824_p3;
    b_copy_1_3_15_fu_838_p3 <= 
        b_0_Dout_A when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_1_3_11_fu_118;
    b_copy_1_3_16_fu_943_p3 <= 
        b_copy_1_3_7_fu_817_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_12_fu_126;
    b_copy_1_3_17_fu_950_p3 <= 
        b_copy_1_3_14_fu_831_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_8_fu_122;
    b_copy_1_3_18_fu_957_p3 <= 
        b_copy_1_3_15_fu_838_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_11_fu_118;
    b_copy_1_3_2_fu_796_p3 <= 
        b_copy_1_3_1_fu_130 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_1_3_4_fu_789_p3;
    b_copy_1_3_3_fu_936_p3 <= 
        b_copy_1_3_2_fu_796_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_1_fu_130;
    b_copy_1_3_4_fu_789_p3 <= 
        b_copy_1_3_1_fu_130 when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_1_3_fu_782_p3;
    b_copy_1_3_5_fu_803_p3 <= 
        b_0_Dout_A when (sel_tmp_reg_1345(0) = '1') else 
        b_copy_1_3_12_fu_126;
    b_copy_1_3_6_fu_810_p3 <= 
        b_copy_1_3_12_fu_126 when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_1_3_5_fu_803_p3;
    b_copy_1_3_7_fu_817_p3 <= 
        b_copy_1_3_12_fu_126 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_1_3_6_fu_810_p3;
    b_copy_1_3_9_fu_824_p3 <= 
        b_0_Dout_A when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_1_3_8_fu_122;
    b_copy_1_3_fu_782_p3 <= 
        b_copy_1_3_1_fu_130 when (sel_tmp_reg_1345(0) = '1') else 
        b_0_Dout_A;
    b_copy_2_3_14_fu_577_p3 <= 
        b_copy_2_3_8_fu_138 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_2_3_9_fu_569_p3;
    b_copy_2_3_15_fu_585_p3 <= 
        b_1_Dout_A when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_2_3_11_fu_134;
    b_copy_2_3_16_fu_600_p3 <= 
        b_copy_2_3_7_fu_561_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_12_fu_142;
    b_copy_2_3_17_fu_607_p3 <= 
        b_copy_2_3_14_fu_577_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_8_fu_138;
    b_copy_2_3_18_fu_614_p3 <= 
        b_copy_2_3_15_fu_585_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_11_fu_134;
    b_copy_2_3_2_fu_537_p3 <= 
        b_copy_2_3_1_fu_146 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_2_3_4_fu_529_p3;
    b_copy_2_3_3_fu_593_p3 <= 
        b_copy_2_3_2_fu_537_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_1_fu_146;
    b_copy_2_3_4_fu_529_p3 <= 
        b_copy_2_3_1_fu_146 when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_2_3_fu_521_p3;
    b_copy_2_3_5_fu_545_p3 <= 
        b_1_Dout_A when (sel_tmp_fu_434_p2(0) = '1') else 
        b_copy_2_3_12_fu_142;
    b_copy_2_3_6_fu_553_p3 <= 
        b_copy_2_3_12_fu_142 when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_2_3_5_fu_545_p3;
    b_copy_2_3_7_fu_561_p3 <= 
        b_copy_2_3_12_fu_142 when (sel_tmp4_fu_460_p2(0) = '1') else 
        b_copy_2_3_6_fu_553_p3;
    b_copy_2_3_9_fu_569_p3 <= 
        b_1_Dout_A when (sel_tmp2_fu_447_p2(0) = '1') else 
        b_copy_2_3_8_fu_138;
    b_copy_2_3_fu_521_p3 <= 
        b_copy_2_3_1_fu_146 when (sel_tmp_fu_434_p2(0) = '1') else 
        b_1_Dout_A;
    b_copy_3_3_14_fu_894_p3 <= 
        b_copy_3_3_8_fu_154 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_3_3_9_fu_887_p3;
    b_copy_3_3_15_fu_901_p3 <= 
        b_1_Dout_A when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_3_3_11_fu_150;
    b_copy_3_3_16_fu_915_p3 <= 
        b_copy_3_3_7_fu_880_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_12_fu_158;
    b_copy_3_3_17_fu_922_p3 <= 
        b_copy_3_3_14_fu_894_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_8_fu_154;
    b_copy_3_3_18_fu_929_p3 <= 
        b_copy_3_3_15_fu_901_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_11_fu_150;
    b_copy_3_3_2_fu_859_p3 <= 
        b_copy_3_3_1_fu_162 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_3_3_4_fu_852_p3;
    b_copy_3_3_3_fu_908_p3 <= 
        b_copy_3_3_2_fu_859_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_1_fu_162;
    b_copy_3_3_4_fu_852_p3 <= 
        b_copy_3_3_1_fu_162 when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_3_3_fu_845_p3;
    b_copy_3_3_5_fu_866_p3 <= 
        b_1_Dout_A when (sel_tmp_reg_1345(0) = '1') else 
        b_copy_3_3_12_fu_158;
    b_copy_3_3_6_fu_873_p3 <= 
        b_copy_3_3_12_fu_158 when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_3_3_5_fu_866_p3;
    b_copy_3_3_7_fu_880_p3 <= 
        b_copy_3_3_12_fu_158 when (sel_tmp4_reg_1363(0) = '1') else 
        b_copy_3_3_6_fu_873_p3;
    b_copy_3_3_9_fu_887_p3 <= 
        b_1_Dout_A when (sel_tmp2_reg_1353(0) = '1') else 
        b_copy_3_3_8_fu_154;
    b_copy_3_3_fu_845_p3 <= 
        b_copy_3_3_1_fu_162 when (sel_tmp_reg_1345(0) = '1') else 
        b_1_Dout_A;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_15_cast_fu_1088_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= std_logic_vector(unsigned(tmp9_fu_1093_p2) + unsigned(tmp2_fu_1097_p2));

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1228, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1228 = ap_const_lv1_0)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_291_p2 <= "1" when (indvar_flatten_phi_fu_262_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_309_p2 <= "1" when (j_phi_fu_284_p4 = ap_const_lv3_4) else "0";
    grp_fu_964_p1 <= 
        a_row_0_reg_1325 when (tmp_3_reg_1317(0) = '1') else 
        a_row_0_2_fu_86;
    grp_fu_982_p1 <= 
        a_row_2_reg_1330 when (tmp_3_reg_1317(0) = '1') else 
        a_row_2_2_fu_94;
    i_1_fu_303_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_273_p4));

    i_phi_fu_273_p4_assign_proc : process(i_reg_269, exitcond_flatten_reg_1228, ap_CS_fsm_pp0_stage0, tmp_1_mid2_v_reg_1265, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_273_p4 <= tmp_1_mid2_v_reg_1265;
        else 
            i_phi_fu_273_p4 <= i_reg_269;
        end if; 
    end process;

    indvar_flatten_next_fu_297_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_262_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_262_p4_assign_proc : process(indvar_flatten_reg_258, exitcond_flatten_reg_1228, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1232, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_262_p4 <= indvar_flatten_next_reg_1232;
        else 
            indvar_flatten_phi_fu_262_p4 <= indvar_flatten_reg_258;
        end if; 
    end process;

    j_1_fu_675_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_1237));
    j_mid2_fu_315_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_309_p2(0) = '1') else 
        j_phi_fu_284_p4;

    j_phi_fu_284_p4_assign_proc : process(j_reg_280, exitcond_flatten_reg_1228, ap_CS_fsm_pp0_stage0, j_1_reg_1385, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1228 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_284_p4 <= j_1_reg_1385;
        else 
            j_phi_fu_284_p4 <= j_reg_280;
        end if; 
    end process;

    sel_tmp2_fu_447_p2 <= "1" when (tmp_reg_1296 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_460_p2 <= "1" when (tmp_reg_1296 = ap_const_lv2_0) else "0";
    sel_tmp_fu_434_p2 <= "1" when (tmp_reg_1296 = ap_const_lv2_2) else "0";
    tmp1_fu_329_p2 <= "1" when (i_phi_fu_273_p4 = ap_const_lv3_0) else "0";
    tmp2_fu_1097_p2 <= std_logic_vector(unsigned(tmp_2_3_reg_1435) + unsigned(tmp_2_2_reg_1425));
    tmp9_fu_1093_p2 <= std_logic_vector(unsigned(tmp_2_1_reg_1430) + unsigned(tmp_s_reg_1420));
    tmp_10_fu_399_p2 <= (tmp_1_reg_1271 or ap_const_lv4_1);
    tmp_11_fu_404_p3 <= (ap_const_lv60_0 & tmp_10_fu_399_p2);
    tmp_12_fu_1068_p3 <= (ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1265 & ap_const_lv2_0);
    tmp_13_cast_fu_1075_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_1068_p3),6));
    tmp_13_fu_422_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_6_cast_fu_419_p1));
    tmp_14_cast_fu_428_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_422_p2),64));
    tmp_14_fu_1082_p2 <= std_logic_vector(unsigned(tmp_13_cast_fu_1075_p1) + unsigned(tmp_6_cast5_fu_1079_p1));
    tmp_15_cast_fu_1088_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_1082_p2),64));
    tmp_1_fu_351_p3 <= (tmp_1_mid2_v_fu_343_p3 & ap_const_lv1_0);
    tmp_1_mid2_v_fu_343_p3 <= 
        i_1_fu_303_p2 when (exitcond_fu_309_p2(0) = '1') else 
        i_phi_fu_273_p4;
    tmp_3_fu_414_p2 <= "1" when (j_mid2_reg_1237 = ap_const_lv3_0) else "0";
    tmp_4_fu_649_p1 <= 
        b_copy_0_3_15_fu_513_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_11_fu_102;
    tmp_4_fu_649_p2 <= 
        b_copy_0_3_14_fu_505_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_8_fu_106;
    tmp_4_fu_649_p3 <= 
        b_copy_0_3_7_fu_489_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_12_fu_110;
    tmp_4_fu_649_p4 <= 
        b_copy_0_3_2_fu_465_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_0_3_1_fu_114;
    tmp_5_fu_969_p1 <= 
        b_copy_1_3_15_fu_838_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_11_fu_118;
    tmp_5_fu_969_p2 <= 
        b_copy_1_3_14_fu_831_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_8_fu_122;
    tmp_5_fu_969_p3 <= 
        b_copy_1_3_7_fu_817_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_12_fu_126;
    tmp_5_fu_969_p4 <= 
        b_copy_1_3_2_fu_796_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_1_3_1_fu_130;
    tmp_6_cast5_fu_1079_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_j_mid2_reg_1237),6));
    tmp_6_cast_fu_419_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1237),4));
    tmp_6_fu_365_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_315_p3),64));
    tmp_7_fu_662_p1 <= 
        b_copy_2_3_15_fu_585_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_11_fu_134;
    tmp_7_fu_662_p2 <= 
        b_copy_2_3_14_fu_577_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_8_fu_138;
    tmp_7_fu_662_p3 <= 
        b_copy_2_3_7_fu_561_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_12_fu_142;
    tmp_7_fu_662_p4 <= 
        b_copy_2_3_2_fu_537_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_2_3_1_fu_146;
    tmp_8_fu_987_p1 <= 
        b_copy_3_3_15_fu_901_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_11_fu_150;
    tmp_8_fu_987_p2 <= 
        b_copy_3_3_14_fu_894_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_8_fu_154;
    tmp_8_fu_987_p3 <= 
        b_copy_3_3_7_fu_880_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_12_fu_158;
    tmp_8_fu_987_p4 <= 
        b_copy_3_3_2_fu_859_p3 when (tmp_mid2_reg_1245(0) = '1') else 
        b_copy_3_3_1_fu_162;
    tmp_9_fu_359_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_351_p3),64));
    tmp_fu_371_p1 <= j_mid2_fu_315_p3(2 - 1 downto 0);
    tmp_mid1_fu_323_p2 <= "1" when (i_1_fu_303_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_335_p3 <= 
        tmp_mid1_fu_323_p2 when (exitcond_fu_309_p2(0) = '1') else 
        tmp1_fu_329_p2;
end behav;
