// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmul_hw_HH_
#define _matmul_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmul_hw_mul_32sbkb.h"

namespace ap_rtl {

struct matmul_hw : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > a_Addr_A;
    sc_out< sc_logic > a_EN_A;
    sc_out< sc_lv<4> > a_WEN_A;
    sc_out< sc_lv<32> > a_Din_A;
    sc_in< sc_lv<32> > a_Dout_A;
    sc_out< sc_logic > a_Clk_A;
    sc_out< sc_logic > a_Rst_A;
    sc_out< sc_lv<32> > b_Addr_A;
    sc_out< sc_logic > b_EN_A;
    sc_out< sc_lv<4> > b_WEN_A;
    sc_out< sc_lv<32> > b_Din_A;
    sc_in< sc_lv<32> > b_Dout_A;
    sc_out< sc_logic > b_Clk_A;
    sc_out< sc_logic > b_Rst_A;
    sc_out< sc_lv<32> > c_Addr_A;
    sc_out< sc_logic > c_EN_A;
    sc_out< sc_lv<4> > c_WEN_A;
    sc_out< sc_lv<32> > c_Din_A;
    sc_in< sc_lv<32> > c_Dout_A;
    sc_out< sc_logic > c_Clk_A;
    sc_out< sc_logic > c_Rst_A;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matmul_hw(sc_module_name name);
    SC_HAS_PROCESS(matmul_hw);

    ~matmul_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matmul_hw_mul_32sbkb<1,6,32,32,32>* matmul_hw_mul_32sbkb_U1;
    matmul_hw_mul_32sbkb<1,6,32,32,32>* matmul_hw_mul_32sbkb_U2;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_146;
    sc_signal< sc_lv<2> > i_reg_157;
    sc_signal< sc_lv<2> > j_reg_168;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_179_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_496;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_496;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_496;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_496;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_496;
    sc_signal< sc_lv<3> > indvar_flatten_next_fu_185_p2;
    sc_signal< sc_lv<3> > indvar_flatten_next_reg_500;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > j_mid2_fu_203_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_505;
    sc_signal< sc_lv<1> > tmp_mid2_fu_223_p3;
    sc_signal< sc_lv<1> > tmp_mid2_reg_513;
    sc_signal< sc_lv<2> > tmp_1_mid2_v_fu_231_p3;
    sc_signal< sc_lv<2> > tmp_1_mid2_v_reg_521;
    sc_signal< sc_lv<3> > tmp_1_fu_239_p3;
    sc_signal< sc_lv<3> > tmp_1_reg_526;
    sc_signal< sc_lv<1> > tmp_fu_257_p1;
    sc_signal< sc_lv<1> > tmp_reg_542;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_lv<1> > tmp_3_fu_284_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_557;
    sc_signal< sc_lv<32> > a_row_0_reg_563;
    sc_signal< sc_lv<4> > tmp_9_fu_306_p2;
    sc_signal< sc_lv<4> > tmp_9_reg_573;
    sc_signal< sc_lv<4> > ap_pipeline_reg_pp0_iter1_tmp_9_reg_573;
    sc_signal< sc_lv<4> > ap_pipeline_reg_pp0_iter2_tmp_9_reg_573;
    sc_signal< sc_lv<4> > ap_pipeline_reg_pp0_iter3_tmp_9_reg_573;
    sc_signal< sc_lv<32> > b_copy_load_0_phi_fu_340_p3;
    sc_signal< sc_lv<32> > b_copy_load_0_phi_reg_578;
    sc_signal< sc_lv<2> > j_1_fu_347_p2;
    sc_signal< sc_lv<2> > j_1_reg_583;
    sc_signal< sc_lv<32> > a_row_1_1_fu_374_p3;
    sc_signal< sc_lv<32> > a_row_1_1_reg_588;
    sc_signal< sc_lv<32> > a_row_0_1_fu_381_p3;
    sc_signal< sc_lv<32> > b_copy_load_1_phi_fu_420_p3;
    sc_signal< sc_lv<32> > b_copy_load_1_phi_reg_598;
    sc_signal< sc_lv<32> > grp_fu_415_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_603;
    sc_signal< sc_lv<32> > grp_fu_447_p2;
    sc_signal< sc_lv<32> > tmp_2_1_reg_608;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<3> > indvar_flatten_phi_fu_150_p4;
    sc_signal< sc_lv<2> > i_phi_fu_161_p4;
    sc_signal< sc_lv<2> > j_phi_fu_172_p4;
    sc_signal< sc_lv<64> > tmp_4_fu_247_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_252_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_275_p3;
    sc_signal< sc_lv<64> > tmp_8_cast_fu_301_p1;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_451_p1;
    sc_signal< sc_lv<32> > a_row_0_2_fu_70;
    sc_signal< sc_lv<32> > a_row_1_2_fu_74;
    sc_signal< sc_lv<32> > b_copy_0_1_fu_78;
    sc_signal< sc_lv<32> > b_copy_0_1_4_fu_333_p3;
    sc_signal< sc_lv<32> > b_copy_0_1_5_fu_82;
    sc_signal< sc_lv<32> > b_copy_0_1_3_fu_326_p3;
    sc_signal< sc_lv<32> > b_copy_1_1_fu_86;
    sc_signal< sc_lv<32> > b_copy_1_1_4_fu_408_p3;
    sc_signal< sc_lv<32> > b_copy_1_1_5_fu_90;
    sc_signal< sc_lv<32> > b_copy_1_1_3_fu_401_p3;
    sc_signal< sc_lv<32> > a_Addr_A_orig;
    sc_signal< sc_lv<32> > b_Addr_A_orig;
    sc_signal< sc_lv<32> > c_Addr_A_orig;
    sc_signal< sc_lv<1> > exitcond_fu_197_p2;
    sc_signal< sc_lv<2> > i_1_fu_191_p2;
    sc_signal< sc_lv<1> > tmp_mid1_fu_211_p2;
    sc_signal< sc_lv<1> > tmp1_fu_217_p2;
    sc_signal< sc_lv<3> > tmp_5_fu_270_p2;
    sc_signal< sc_lv<3> > tmp_6_cast_fu_292_p1;
    sc_signal< sc_lv<3> > tmp_8_fu_295_p2;
    sc_signal< sc_lv<4> > tmp_4_cast_fu_267_p1;
    sc_signal< sc_lv<4> > tmp_6_cast5_fu_289_p1;
    sc_signal< sc_lv<32> > b_copy_0_1_1_fu_312_p3;
    sc_signal< sc_lv<32> > b_copy_0_1_2_fu_319_p3;
    sc_signal< sc_lv<32> > b_copy_1_1_1_fu_387_p3;
    sc_signal< sc_lv<32> > b_copy_1_1_2_fu_394_p3;
    sc_signal< sc_lv<32> > grp_fu_415_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<61> ap_const_lv61_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_Addr_A();
    void thread_a_Addr_A_orig();
    void thread_a_Clk_A();
    void thread_a_Din_A();
    void thread_a_EN_A();
    void thread_a_Rst_A();
    void thread_a_WEN_A();
    void thread_a_row_0_1_fu_381_p3();
    void thread_a_row_1_1_fu_374_p3();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_Addr_A();
    void thread_b_Addr_A_orig();
    void thread_b_Clk_A();
    void thread_b_Din_A();
    void thread_b_EN_A();
    void thread_b_Rst_A();
    void thread_b_WEN_A();
    void thread_b_copy_0_1_1_fu_312_p3();
    void thread_b_copy_0_1_2_fu_319_p3();
    void thread_b_copy_0_1_3_fu_326_p3();
    void thread_b_copy_0_1_4_fu_333_p3();
    void thread_b_copy_1_1_1_fu_387_p3();
    void thread_b_copy_1_1_2_fu_394_p3();
    void thread_b_copy_1_1_3_fu_401_p3();
    void thread_b_copy_1_1_4_fu_408_p3();
    void thread_b_copy_load_0_phi_fu_340_p3();
    void thread_b_copy_load_1_phi_fu_420_p3();
    void thread_c_Addr_A();
    void thread_c_Addr_A_orig();
    void thread_c_Clk_A();
    void thread_c_Din_A();
    void thread_c_EN_A();
    void thread_c_Rst_A();
    void thread_c_WEN_A();
    void thread_exitcond_flatten_fu_179_p2();
    void thread_exitcond_fu_197_p2();
    void thread_grp_fu_415_p1();
    void thread_i_1_fu_191_p2();
    void thread_i_phi_fu_161_p4();
    void thread_indvar_flatten_next_fu_185_p2();
    void thread_indvar_flatten_phi_fu_150_p4();
    void thread_j_1_fu_347_p2();
    void thread_j_mid2_fu_203_p3();
    void thread_j_phi_fu_172_p4();
    void thread_tmp1_fu_217_p2();
    void thread_tmp_1_fu_239_p3();
    void thread_tmp_1_mid2_v_fu_231_p3();
    void thread_tmp_3_fu_284_p2();
    void thread_tmp_4_cast_fu_267_p1();
    void thread_tmp_4_fu_247_p1();
    void thread_tmp_5_fu_270_p2();
    void thread_tmp_6_cast5_fu_289_p1();
    void thread_tmp_6_cast_fu_292_p1();
    void thread_tmp_6_fu_252_p1();
    void thread_tmp_7_fu_275_p3();
    void thread_tmp_8_cast_fu_301_p1();
    void thread_tmp_8_fu_295_p2();
    void thread_tmp_9_cast_fu_451_p1();
    void thread_tmp_9_fu_306_p2();
    void thread_tmp_fu_257_p1();
    void thread_tmp_mid1_fu_211_p2();
    void thread_tmp_mid2_fu_223_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
