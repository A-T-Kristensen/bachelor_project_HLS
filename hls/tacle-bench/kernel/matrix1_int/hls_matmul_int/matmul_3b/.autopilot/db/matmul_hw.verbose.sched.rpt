

================================================================
== Vivado HLS Report for 'matmul_hw'
================================================================
* Date:           Thu Apr 20 16:55:31 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul_int
* Solution:       matmul_3b
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.05|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   17|   17|   18|   18|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- L_col   |   15|   15|        10|          2|          1|     4|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 12
* Pipeline: 1
  Pipeline-0: II = 2, D = 10, States = { 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	12  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	2  / true
12 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_0_2 (4)  [1/1] 0.00ns
:0  %a_row_0_2 = alloca i32

ST_1: a_row_1_2 (5)  [1/1] 0.00ns
:1  %a_row_1_2 = alloca i32

ST_1: b_copy_0_1 (6)  [1/1] 0.00ns
:2  %b_copy_0_1 = alloca i32

ST_1: b_copy_0_1_5 (7)  [1/1] 0.00ns
:3  %b_copy_0_1_5 = alloca i32

ST_1: b_copy_1_1 (8)  [1/1] 0.00ns
:4  %b_copy_1_1 = alloca i32

ST_1: b_copy_1_1_5 (9)  [1/1] 0.00ns
:5  %b_copy_1_1_5 = alloca i32

ST_1: StgValue_19 (10)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %a) nounwind, !map !7

ST_1: StgValue_20 (11)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %b) nounwind, !map !13

ST_1: StgValue_21 (12)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %c) nounwind, !map !17

ST_1: StgValue_22 (13)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matmul_hw_str) nounwind

ST_1: StgValue_23 (14)  [1/1] 0.00ns  loc: matmul.c:6
:10  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_24 (15)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface([4 x i32]* %a, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_25 (16)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecMemCore([4 x i32]* %a, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_26 (17)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface([4 x i32]* %b, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_27 (18)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecMemCore([4 x i32]* %b, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_28 (19)  [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecInterface([4 x i32]* %c, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_29 (20)  [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecMemCore([4 x i32]* %c, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_30 (21)  [1/1] 1.57ns  loc: matmul.c:23
:17  br label %.preheader7


 <State 2>: 5.30ns
ST_2: indvar_flatten (23)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i3 [ 0, %0 ], [ %indvar_flatten_next, %.preheader7.preheader ]

ST_2: i (24)  [1/1] 0.00ns  loc: matmul.c:48
.preheader7:1  %i = phi i2 [ 0, %0 ], [ %tmp_1_mid2_v, %.preheader7.preheader ]

ST_2: j (25)  [1/1] 0.00ns
.preheader7:2  %j = phi i2 [ 0, %0 ], [ %j_1, %.preheader7.preheader ]

ST_2: exitcond_flatten (26)  [1/1] 1.94ns
.preheader7:3  %exitcond_flatten = icmp eq i3 %indvar_flatten, -4

ST_2: indvar_flatten_next (27)  [1/1] 0.75ns
.preheader7:4  %indvar_flatten_next = add i3 %indvar_flatten, 1

ST_2: StgValue_36 (28)  [1/1] 0.00ns
.preheader7:5  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (36)  [1/1] 0.75ns  loc: matmul.c:23
.preheader7.preheader:6  %i_1 = add i2 1, %i

ST_2: exitcond (39)  [1/1] 1.54ns  loc: matmul.c:25
.preheader7.preheader:9  %exitcond = icmp eq i2 %j, -2

ST_2: j_mid2 (40)  [1/1] 1.37ns  loc: matmul.c:25
.preheader7.preheader:10  %j_mid2 = select i1 %exitcond, i2 0, i2 %j

ST_2: tmp_mid1 (41)  [1/1] 1.54ns  loc: matmul.c:38
.preheader7.preheader:11  %tmp_mid1 = icmp eq i2 %i_1, 0

ST_2: tmp1 (42)  [1/1] 1.54ns  loc: matmul.c:38
.preheader7.preheader:12  %tmp1 = icmp eq i2 %i, 0

ST_2: tmp_mid2 (43)  [1/1] 1.37ns  loc: matmul.c:38
.preheader7.preheader:13  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp1

ST_2: tmp_1_mid2_v (44)  [1/1] 1.37ns  loc: matmul.c:48
.preheader7.preheader:14  %tmp_1_mid2_v = select i1 %exitcond, i2 %i_1, i2 %i

ST_2: tmp_1 (45)  [1/1] 0.00ns  loc: matmul.c:48
.preheader7.preheader:15  %tmp_1 = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %tmp_1_mid2_v, i1 false)

ST_2: tmp_4 (46)  [1/1] 0.00ns  loc: matmul.c:34
.preheader7.preheader:16  %tmp_4 = zext i3 %tmp_1 to i64

ST_2: a_addr (48)  [1/1] 0.00ns  loc: matmul.c:34
.preheader7.preheader:18  %a_addr = getelementptr [4 x i32]* %a, i64 0, i64 %tmp_4

ST_2: a_row_0 (56)  [2/2] 2.39ns  loc: matmul.c:34
.preheader7.preheader:26  %a_row_0 = load i32* %a_addr, align 4

ST_2: tmp_6 (60)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:30  %tmp_6 = zext i2 %j_mid2 to i64

ST_2: b_addr (63)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:33  %b_addr = getelementptr [4 x i32]* %b, i64 0, i64 %tmp_6

ST_2: b_copy_0_0 (70)  [2/2] 2.39ns  loc: matmul.c:40
.preheader7.preheader:40  %b_copy_0_0 = load i32* %b_addr, align 4

ST_2: tmp (71)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:41  %tmp = trunc i2 %j_mid2 to i1


 <State 3>: 5.13ns
ST_3: b_copy_0_1_load (32)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:2  %b_copy_0_1_load = load i32* %b_copy_0_1

ST_3: b_copy_0_1_5_load (33)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:3  %b_copy_0_1_5_load = load i32* %b_copy_0_1_5

ST_3: tmp_4_cast (47)  [1/1] 0.00ns  loc: matmul.c:34
.preheader7.preheader:17  %tmp_4_cast = zext i3 %tmp_1 to i4

ST_3: tmp_5 (49)  [1/1] 0.00ns  loc: matmul.c:48
.preheader7.preheader:19  %tmp_5 = or i3 %tmp_1, 1

ST_3: tmp_7 (50)  [1/1] 0.00ns  loc: matmul.c:34
.preheader7.preheader:20  %tmp_7 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 0, i3 %tmp_5)

ST_3: a_addr_1 (51)  [1/1] 0.00ns  loc: matmul.c:34
.preheader7.preheader:21  %a_addr_1 = getelementptr [4 x i32]* %a, i64 0, i64 %tmp_7

ST_3: tmp_3 (55)  [1/1] 1.54ns  loc: matmul.c:32
.preheader7.preheader:25  %tmp_3 = icmp eq i2 %j_mid2, 0

ST_3: a_row_0 (56)  [1/2] 2.39ns  loc: matmul.c:34
.preheader7.preheader:26  %a_row_0 = load i32* %a_addr, align 4

ST_3: a_row_1 (57)  [2/2] 2.39ns  loc: matmul.c:34
.preheader7.preheader:27  %a_row_1 = load i32* %a_addr_1, align 4

ST_3: tmp_6_cast5 (61)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:31  %tmp_6_cast5 = zext i2 %j_mid2 to i4

ST_3: tmp_6_cast (62)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:32  %tmp_6_cast = zext i2 %j_mid2 to i3

ST_3: tmp_8 (64)  [1/1] 0.75ns  loc: matmul.c:40
.preheader7.preheader:34  %tmp_8 = add i3 2, %tmp_6_cast

ST_3: tmp_8_cast (65)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:35  %tmp_8_cast = zext i3 %tmp_8 to i64

ST_3: b_addr_1 (66)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:36  %b_addr_1 = getelementptr [4 x i32]* %b, i64 0, i64 %tmp_8_cast

ST_3: tmp_9 (67)  [1/1] 0.75ns  loc: matmul.c:48
.preheader7.preheader:37  %tmp_9 = add i4 %tmp_4_cast, %tmp_6_cast5

ST_3: b_copy_0_0 (70)  [1/2] 2.39ns  loc: matmul.c:40
.preheader7.preheader:40  %b_copy_0_0 = load i32* %b_addr, align 4

ST_3: b_copy_0_1_1 (72)  [1/1] 0.00ns  loc: matmul.c:40 (grouped into LUT with out node b_copy_0_1_3)
.preheader7.preheader:42  %b_copy_0_1_1 = select i1 %tmp, i32 %b_copy_0_0, i32 %b_copy_0_1_5_load

ST_3: b_copy_0_1_2 (73)  [1/1] 0.00ns  loc: matmul.c:40 (grouped into LUT with out node b_copy_0_1_4)
.preheader7.preheader:43  %b_copy_0_1_2 = select i1 %tmp, i32 %b_copy_0_1_load, i32 %b_copy_0_0

ST_3: b_copy_1_0 (74)  [2/2] 2.39ns  loc: matmul.c:40
.preheader7.preheader:44  %b_copy_1_0 = load i32* %b_addr_1, align 4

ST_3: b_copy_0_1_3 (79)  [1/1] 1.37ns  loc: matmul.c:38 (out node of the LUT)
.preheader7.preheader:49  %b_copy_0_1_3 = select i1 %tmp_mid2, i32 %b_copy_0_1_1, i32 %b_copy_0_1_5_load

ST_3: b_copy_0_1_4 (80)  [1/1] 1.37ns  loc: matmul.c:38 (out node of the LUT)
.preheader7.preheader:50  %b_copy_0_1_4 = select i1 %tmp_mid2, i32 %b_copy_0_1_2, i32 %b_copy_0_1_load

ST_3: b_copy_load_0_phi (81)  [1/1] 1.37ns  loc: matmul.c:45
.preheader7.preheader:51  %b_copy_load_0_phi = select i1 %tmp, i32 %b_copy_0_1_3, i32 %b_copy_0_1_4

ST_3: j_1 (88)  [1/1] 0.75ns  loc: matmul.c:25
.preheader7.preheader:58  %j_1 = add i2 1, %j_mid2

ST_3: StgValue_75 (91)  [1/1] 0.00ns  loc: matmul.c:38
.preheader7.preheader:61  store i32 %b_copy_0_1_3, i32* %b_copy_0_1_5

ST_3: StgValue_76 (92)  [1/1] 0.00ns  loc: matmul.c:38
.preheader7.preheader:62  store i32 %b_copy_0_1_4, i32* %b_copy_0_1


 <State 4>: 8.05ns
ST_4: a_row_0_2_load (30)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_0_2_load = load i32* %a_row_0_2

ST_4: a_row_1_2_load (31)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_1_2_load = load i32* %a_row_1_2

ST_4: b_copy_1_1_load (34)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:4  %b_copy_1_1_load = load i32* %b_copy_1_1

ST_4: b_copy_1_1_5_load (35)  [1/1] 0.00ns  loc: matmul.c:40
.preheader7.preheader:5  %b_copy_1_1_5_load = load i32* %b_copy_1_1_5

ST_4: a_row_1 (57)  [1/2] 2.39ns  loc: matmul.c:34
.preheader7.preheader:27  %a_row_1 = load i32* %a_addr_1, align 4

ST_4: a_row_1_1 (58)  [1/1] 1.37ns  loc: matmul.c:32
.preheader7.preheader:28  %a_row_1_1 = select i1 %tmp_3, i32 %a_row_1, i32 %a_row_1_2_load

ST_4: a_row_0_1 (59)  [1/1] 1.37ns  loc: matmul.c:32
.preheader7.preheader:29  %a_row_0_1 = select i1 %tmp_3, i32 %a_row_0, i32 %a_row_0_2_load

ST_4: b_copy_1_0 (74)  [1/2] 2.39ns  loc: matmul.c:40
.preheader7.preheader:44  %b_copy_1_0 = load i32* %b_addr_1, align 4

ST_4: b_copy_1_1_1 (75)  [1/1] 0.00ns  loc: matmul.c:40 (grouped into LUT with out node b_copy_1_1_3)
.preheader7.preheader:45  %b_copy_1_1_1 = select i1 %tmp, i32 %b_copy_1_0, i32 %b_copy_1_1_5_load

ST_4: b_copy_1_1_2 (76)  [1/1] 0.00ns  loc: matmul.c:40 (grouped into LUT with out node b_copy_1_1_4)
.preheader7.preheader:46  %b_copy_1_1_2 = select i1 %tmp, i32 %b_copy_1_1_load, i32 %b_copy_1_0

ST_4: b_copy_1_1_3 (77)  [1/1] 1.37ns  loc: matmul.c:38 (out node of the LUT)
.preheader7.preheader:47  %b_copy_1_1_3 = select i1 %tmp_mid2, i32 %b_copy_1_1_1, i32 %b_copy_1_1_5_load

ST_4: b_copy_1_1_4 (78)  [1/1] 1.37ns  loc: matmul.c:38 (out node of the LUT)
.preheader7.preheader:48  %b_copy_1_1_4 = select i1 %tmp_mid2, i32 %b_copy_1_1_2, i32 %b_copy_1_1_load

ST_4: tmp_s (82)  [6/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_4: b_copy_load_1_phi (83)  [1/1] 1.37ns  loc: matmul.c:45
.preheader7.preheader:53  %b_copy_load_1_phi = select i1 %tmp, i32 %b_copy_1_1_3, i32 %b_copy_1_1_4

ST_4: StgValue_91 (89)  [1/1] 0.00ns  loc: matmul.c:38
.preheader7.preheader:59  store i32 %b_copy_1_1_3, i32* %b_copy_1_1_5

ST_4: StgValue_92 (90)  [1/1] 0.00ns  loc: matmul.c:38
.preheader7.preheader:60  store i32 %b_copy_1_1_4, i32* %b_copy_1_1

ST_4: StgValue_93 (93)  [1/1] 0.00ns  loc: matmul.c:32
.preheader7.preheader:63  store i32 %a_row_1_1, i32* %a_row_1_2

ST_4: StgValue_94 (94)  [1/1] 0.00ns  loc: matmul.c:32
.preheader7.preheader:64  store i32 %a_row_0_1, i32* %a_row_0_2


 <State 5>: 6.68ns
ST_5: tmp_s (82)  [5/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_5: tmp_2_1 (84)  [6/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 6>: 6.68ns
ST_6: tmp_s (82)  [4/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_6: tmp_2_1 (84)  [5/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 7>: 6.68ns
ST_7: tmp_s (82)  [3/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_7: tmp_2_1 (84)  [4/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 8>: 6.68ns
ST_8: tmp_s (82)  [2/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_8: tmp_2_1 (84)  [3/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 9>: 6.68ns
ST_9: tmp_s (82)  [1/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:52  %tmp_s = mul nsw i32 %b_copy_load_0_phi, %a_row_0_1

ST_9: tmp_2_1 (84)  [2/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 10>: 6.68ns
ST_10: tmp_2_1 (84)  [1/6] 6.68ns  loc: matmul.c:45
.preheader7.preheader:54  %tmp_2_1 = mul nsw i32 %b_copy_load_1_phi, %a_row_1_1


 <State 11>: 4.78ns
ST_11: StgValue_106 (37)  [1/1] 0.00ns
.preheader7.preheader:7  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_11: empty (38)  [1/1] 0.00ns
.preheader7.preheader:8  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind

ST_11: StgValue_108 (52)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:22  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_11: tmp_2 (53)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:23  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_11: StgValue_110 (54)  [1/1] 0.00ns  loc: matmul.c:27
.preheader7.preheader:24  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_11: tmp_9_cast (68)  [1/1] 0.00ns  loc: matmul.c:48
.preheader7.preheader:38  %tmp_9_cast = zext i4 %tmp_9 to i64

ST_11: c_addr (69)  [1/1] 0.00ns  loc: matmul.c:48
.preheader7.preheader:39  %c_addr = getelementptr [4 x i32]* %c, i64 0, i64 %tmp_9_cast

ST_11: tmp_5_1 (85)  [1/1] 2.39ns  loc: matmul.c:45
.preheader7.preheader:55  %tmp_5_1 = add nsw i32 %tmp_2_1, %tmp_s

ST_11: StgValue_114 (86)  [1/1] 2.39ns  loc: matmul.c:48
.preheader7.preheader:56  store i32 %tmp_5_1, i32* %c_addr, align 4

ST_11: empty_3 (87)  [1/1] 0.00ns  loc: matmul.c:49
.preheader7.preheader:57  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_11: StgValue_116 (95)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:65  br label %.preheader7


 <State 12>: 0.00ns
ST_12: StgValue_117 (97)  [1/1] 0.00ns  loc: matmul.c:51
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [23]  (1.57 ns)

 <State 2>: 5.3ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.c:25) [25]  (0 ns)
	'icmp' operation ('exitcond', matmul.c:25) [39]  (1.54 ns)
	'select' operation ('tmp_1_mid2_v', matmul.c:48) [44]  (1.37 ns)
	'getelementptr' operation ('a_addr', matmul.c:34) [48]  (0 ns)
	'load' operation ('a_row[0]', matmul.c:34) on array 'a' [56]  (2.39 ns)

 <State 3>: 5.13ns
The critical path consists of the following:
	'load' operation ('b_copy[0][0]', matmul.c:40) on array 'b' [70]  (2.39 ns)
	'select' operation ('b_copy[0][1]', matmul.c:40) [72]  (0 ns)
	'select' operation ('b_copy[0][1]', matmul.c:38) [79]  (1.37 ns)
	'select' operation ('b_copy_load_0_phi', matmul.c:45) [81]  (1.37 ns)

 <State 4>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_0_2_load') on local variable 'a_row[0]' [30]  (0 ns)
	'select' operation ('a_row[0]', matmul.c:32) [59]  (1.37 ns)
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 5>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 6>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 7>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 8>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 9>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:45) [82]  (6.68 ns)

 <State 10>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_1', matmul.c:45) [84]  (6.68 ns)

 <State 11>: 4.78ns
The critical path consists of the following:
	'add' operation ('tmp_5_1', matmul.c:45) [85]  (2.39 ns)
	'store' operation (matmul.c:48) of variable 'tmp_5_1', matmul.c:45 on array 'c' [86]  (2.39 ns)

 <State 12>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
