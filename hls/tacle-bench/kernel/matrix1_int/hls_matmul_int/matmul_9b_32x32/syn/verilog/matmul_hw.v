// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.150000,HLS_SYN_LAT=8202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=2971,HLS_SYN_LUT=1769}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        a_2_Addr_A,
        a_2_EN_A,
        a_2_WEN_A,
        a_2_Din_A,
        a_2_Dout_A,
        a_2_Clk_A,
        a_2_Rst_A,
        a_3_Addr_A,
        a_3_EN_A,
        a_3_WEN_A,
        a_3_Din_A,
        a_3_Dout_A,
        a_3_Clk_A,
        a_3_Rst_A,
        b_0_Addr_A,
        b_0_EN_A,
        b_0_WEN_A,
        b_0_Din_A,
        b_0_Dout_A,
        b_0_Clk_A,
        b_0_Rst_A,
        b_1_Addr_A,
        b_1_EN_A,
        b_1_WEN_A,
        b_1_Din_A,
        b_1_Dout_A,
        b_1_Clk_A,
        b_1_Rst_A,
        b_2_Addr_A,
        b_2_EN_A,
        b_2_WEN_A,
        b_2_Din_A,
        b_2_Dout_A,
        b_2_Clk_A,
        b_2_Rst_A,
        b_3_Addr_A,
        b_3_EN_A,
        b_3_WEN_A,
        b_3_Din_A,
        b_3_Dout_A,
        b_3_Clk_A,
        b_3_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_pp0_stage0 = 10'b10;
parameter    ap_ST_fsm_pp0_stage1 = 10'b100;
parameter    ap_ST_fsm_pp0_stage2 = 10'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 10'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 10'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 10'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 10'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 10'b100000000;
parameter    ap_ST_fsm_state19 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv55_0 = 55'b0000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_20 = 7'b100000;
parameter    ap_const_lv9_2 = 9'b10;
parameter    ap_const_lv58_1 = 58'b1;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv8_60 = 8'b1100000;
parameter    ap_const_lv9_4 = 9'b100;
parameter    ap_const_lv58_2 = 58'b10;
parameter    ap_const_lv9_5 = 9'b101;
parameter    ap_const_lv8_A0 = 8'b10100000;
parameter    ap_const_lv9_6 = 9'b110;
parameter    ap_const_lv58_3 = 58'b11;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv9_E0 = 9'b11100000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_9 = 32'b1001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] a_2_Addr_A;
output   a_2_EN_A;
output  [3:0] a_2_WEN_A;
output  [31:0] a_2_Din_A;
input  [31:0] a_2_Dout_A;
output   a_2_Clk_A;
output   a_2_Rst_A;
output  [31:0] a_3_Addr_A;
output   a_3_EN_A;
output  [3:0] a_3_WEN_A;
output  [31:0] a_3_Din_A;
input  [31:0] a_3_Dout_A;
output   a_3_Clk_A;
output   a_3_Rst_A;
output  [31:0] b_0_Addr_A;
output   b_0_EN_A;
output  [3:0] b_0_WEN_A;
output  [31:0] b_0_Din_A;
input  [31:0] b_0_Dout_A;
output   b_0_Clk_A;
output   b_0_Rst_A;
output  [31:0] b_1_Addr_A;
output   b_1_EN_A;
output  [3:0] b_1_WEN_A;
output  [31:0] b_1_Din_A;
input  [31:0] b_1_Dout_A;
output   b_1_Clk_A;
output   b_1_Rst_A;
output  [31:0] b_2_Addr_A;
output   b_2_EN_A;
output  [3:0] b_2_WEN_A;
output  [31:0] b_2_Din_A;
input  [31:0] b_2_Dout_A;
output   b_2_Clk_A;
output   b_2_Rst_A;
output  [31:0] b_3_Addr_A;
output   b_3_EN_A;
output  [3:0] b_3_WEN_A;
output  [31:0] b_3_Din_A;
input  [31:0] b_3_Dout_A;
output   b_3_Clk_A;
output   b_3_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg a_2_EN_A;
reg a_3_EN_A;
reg b_0_EN_A;
reg b_1_EN_A;
reg b_2_EN_A;
reg b_3_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_676;
reg   [5:0] i_reg_687;
reg   [5:0] j_reg_698;
wire   [31:0] grp_fu_710_p2;
reg   [31:0] reg_870;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1355;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [31:0] grp_fu_712_p2;
reg   [31:0] reg_874;
wire   [31:0] grp_fu_709_p2;
reg   [31:0] reg_878;
wire   [31:0] grp_fu_711_p2;
reg   [31:0] reg_882;
reg   [31:0] reg_886;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage4;
reg   [31:0] reg_890;
reg   [31:0] reg_894;
reg   [31:0] reg_898;
reg   [31:0] reg_902;
wire   [0:0] ap_CS_fsm_pp0_stage5;
reg   [31:0] reg_906;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] exitcond_flatten_fu_946_p2;
wire   [10:0] indvar_flatten_next_fu_952_p2;
reg   [10:0] indvar_flatten_next_reg_1359;
wire   [5:0] j_mid2_fu_970_p3;
reg   [5:0] j_mid2_reg_1364;
reg   [5:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364;
wire   [5:0] tmp_mid2_v_fu_978_p3;
reg   [5:0] tmp_mid2_v_reg_1376;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376;
wire   [8:0] tmp_fu_986_p3;
reg   [8:0] tmp_reg_1382;
reg  signed [31:0] a_0_load_reg_1473;
reg  signed [31:0] b_0_load_reg_1478;
reg  signed [31:0] a_1_load_reg_1483;
reg  signed [31:0] b_1_load_reg_1488;
reg  signed [31:0] a_2_load_reg_1493;
reg  signed [31:0] b_2_load_reg_1498;
reg  signed [31:0] a_3_load_reg_1503;
reg  signed [31:0] b_3_load_reg_1508;
reg  signed [31:0] a_0_load_1_reg_1553;
reg  signed [31:0] b_0_load_1_reg_1558;
reg  signed [31:0] a_1_load_1_reg_1563;
reg  signed [31:0] b_1_load_1_reg_1568;
reg  signed [31:0] a_2_load_1_reg_1573;
reg  signed [31:0] b_2_load_1_reg_1578;
reg  signed [31:0] a_3_load_1_reg_1583;
reg  signed [31:0] b_3_load_1_reg_1588;
wire   [7:0] tmp_2_cast3_fu_1089_p1;
reg   [7:0] tmp_2_cast3_reg_1613;
reg  signed [31:0] a_0_load_2_reg_1638;
reg  signed [31:0] b_0_load_2_reg_1643;
reg  signed [31:0] a_1_load_2_reg_1648;
reg  signed [31:0] b_1_load_2_reg_1653;
reg  signed [31:0] a_2_load_2_reg_1658;
reg  signed [31:0] b_2_load_2_reg_1663;
reg  signed [31:0] a_3_load_2_reg_1668;
reg  signed [31:0] b_3_load_2_reg_1673;
reg  signed [31:0] a_0_load_3_reg_1718;
reg  signed [31:0] b_0_load_3_reg_1723;
reg  signed [31:0] a_1_load_3_reg_1728;
reg  signed [31:0] b_1_load_3_reg_1733;
reg  signed [31:0] a_2_load_3_reg_1738;
reg  signed [31:0] b_2_load_3_reg_1743;
reg  signed [31:0] a_3_load_3_reg_1748;
reg  signed [31:0] b_3_load_3_reg_1753;
reg  signed [31:0] a_0_load_4_reg_1798;
reg  signed [31:0] b_0_load_4_reg_1803;
reg  signed [31:0] a_1_load_4_reg_1808;
reg  signed [31:0] b_1_load_4_reg_1813;
reg  signed [31:0] a_2_load_4_reg_1818;
reg  signed [31:0] b_2_load_4_reg_1823;
reg  signed [31:0] a_3_load_4_reg_1828;
reg  signed [31:0] b_3_load_4_reg_1833;
reg  signed [31:0] a_0_load_5_reg_1878;
reg  signed [31:0] b_0_load_5_reg_1883;
reg  signed [31:0] a_1_load_5_reg_1888;
reg  signed [31:0] b_1_load_5_reg_1893;
reg  signed [31:0] a_2_load_5_reg_1898;
reg  signed [31:0] b_2_load_5_reg_1903;
reg  signed [31:0] a_3_load_5_reg_1908;
reg  signed [31:0] b_3_load_5_reg_1913;
reg  signed [31:0] a_0_load_6_reg_1958;
reg  signed [31:0] b_0_load_6_reg_1963;
reg  signed [31:0] a_1_load_6_reg_1968;
reg  signed [31:0] b_1_load_6_reg_1973;
reg  signed [31:0] a_2_load_6_reg_1978;
reg  signed [31:0] b_2_load_6_reg_1983;
reg  signed [31:0] a_3_load_6_reg_1988;
reg  signed [31:0] b_3_load_6_reg_1993;
wire   [5:0] j_1_fu_1226_p2;
reg   [5:0] j_1_reg_1998;
reg  signed [31:0] a_0_load_7_reg_2003;
reg  signed [31:0] b_0_load_7_reg_2008;
reg  signed [31:0] a_1_load_7_reg_2013;
reg  signed [31:0] b_1_load_7_reg_2018;
reg  signed [31:0] a_2_load_7_reg_2023;
reg  signed [31:0] b_2_load_7_reg_2028;
reg  signed [31:0] a_3_load_7_reg_2033;
reg  signed [31:0] b_3_load_7_reg_2038;
wire   [31:0] grp_fu_910_p2;
reg   [31:0] tmp4_reg_2043;
wire   [31:0] grp_fu_916_p2;
reg   [31:0] tmp11_reg_2048;
wire   [31:0] grp_fu_922_p2;
reg   [31:0] tmp26_reg_2053;
reg   [31:0] tmp5_reg_2058;
reg   [31:0] tmp12_reg_2063;
wire   [31:0] grp_fu_940_p2;
reg   [31:0] tmp18_reg_2068;
reg   [31:0] tmp27_reg_2073;
reg   [31:0] tmp_6_6_reg_2078;
reg   [31:0] tmp_6_13_reg_2083;
reg   [31:0] tmp_6_29_reg_2088;
reg   [31:0] tmp_6_7_reg_2093;
reg   [31:0] tmp_6_14_reg_2098;
reg   [31:0] tmp_6_30_reg_2103;
wire   [31:0] tmp2_fu_1251_p2;
reg   [31:0] tmp2_reg_2108;
wire   [31:0] tmp9_fu_1277_p2;
reg   [31:0] tmp9_reg_2113;
wire   [31:0] tmp16_fu_1314_p2;
reg   [31:0] tmp16_reg_2118;
reg    ap_enable_reg_pp0_iter2;
reg   [10:0] indvar_flatten_phi_fu_680_p4;
reg   [5:0] i_phi_fu_691_p4;
reg   [5:0] j_phi_fu_702_p4;
wire   [63:0] tmp_3_fu_994_p1;
wire   [63:0] tmp_2_fu_1002_p1;
wire   [63:0] tmp_5_fu_1015_p3;
wire   [63:0] tmp_21_cast_fu_1036_p1;
wire   [63:0] tmp_8_fu_1049_p3;
wire   [63:0] tmp_20_fu_1061_p3;
wire   [63:0] tmp_s_fu_1077_p3;
wire   [63:0] tmp_23_cast_fu_1098_p1;
wire   [63:0] tmp_11_fu_1111_p3;
wire   [63:0] tmp_22_fu_1123_p3;
wire   [63:0] tmp_13_fu_1139_p3;
wire   [63:0] tmp_25_cast_fu_1156_p1;
wire   [63:0] tmp_15_fu_1169_p3;
wire   [63:0] tmp_24_fu_1181_p3;
wire   [63:0] tmp_17_fu_1197_p3;
wire   [63:0] tmp_27_cast_fu_1218_p1;
wire   [63:0] tmp_28_cast_fu_1340_p1;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] b_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] b_1_Addr_A_orig;
reg   [31:0] a_2_Addr_A_orig;
reg   [31:0] b_2_Addr_A_orig;
reg   [31:0] a_3_Addr_A_orig;
reg   [31:0] b_3_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg  signed [31:0] grp_fu_709_p0;
reg  signed [31:0] grp_fu_709_p1;
reg  signed [31:0] grp_fu_710_p0;
reg  signed [31:0] grp_fu_710_p1;
reg  signed [31:0] grp_fu_711_p0;
reg  signed [31:0] grp_fu_711_p1;
reg  signed [31:0] grp_fu_712_p0;
reg  signed [31:0] grp_fu_712_p1;
wire   [31:0] grp_fu_934_p2;
wire   [31:0] grp_fu_928_p2;
wire   [0:0] exitcond_fu_964_p2;
wire   [5:0] i_1_fu_958_p2;
wire   [8:0] tmp_4_fu_1010_p2;
wire   [6:0] tmp_2_cast_fu_1027_p1;
wire   [6:0] tmp_19_fu_1030_p2;
wire   [8:0] tmp_7_fu_1044_p2;
wire   [8:0] tmp_9_fu_1072_p2;
wire   [7:0] tmp_21_fu_1092_p2;
wire   [8:0] tmp_10_fu_1106_p2;
wire   [8:0] tmp_12_fu_1134_p2;
wire   [7:0] tmp_23_fu_1151_p2;
wire   [8:0] tmp_14_fu_1164_p2;
wire   [8:0] tmp_16_fu_1192_p2;
wire   [8:0] tmp_2_cast4_fu_1209_p1;
wire   [8:0] tmp_25_fu_1212_p2;
wire   [31:0] tmp8_fu_1241_p2;
wire   [31:0] tmp7_fu_1235_p2;
wire   [31:0] tmp6_fu_1245_p2;
wire   [31:0] tmp3_fu_1231_p2;
wire   [31:0] tmp15_fu_1267_p2;
wire   [31:0] tmp14_fu_1261_p2;
wire   [31:0] tmp13_fu_1271_p2;
wire   [31:0] tmp10_fu_1257_p2;
wire   [31:0] tmp30_fu_1298_p2;
wire   [31:0] tmp29_fu_1292_p2;
wire   [31:0] tmp28_fu_1302_p2;
wire   [31:0] tmp25_fu_1288_p2;
wire   [31:0] tmp24_fu_1308_p2;
wire   [31:0] tmp17_fu_1283_p2;
wire   [10:0] tmp_18_fu_1320_p3;
wire   [11:0] tmp_2_cast5_fu_1331_p1;
wire   [11:0] tmp_20_cast_fu_1327_p1;
wire   [11:0] tmp_26_fu_1334_p2;
wire   [31:0] tmp1_fu_1345_p2;
wire   [0:0] ap_CS_fsm_state19;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matmul_hw_mul_32sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sdEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_709_p0),
    .din1(grp_fu_709_p1),
    .ce(1'b1),
    .dout(grp_fu_709_p2)
);

matmul_hw_mul_32sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sdEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_710_p0),
    .din1(grp_fu_710_p1),
    .ce(1'b1),
    .dout(grp_fu_710_p2)
);

matmul_hw_mul_32sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_711_p0),
    .din1(grp_fu_711_p1),
    .ce(1'b1),
    .dout(grp_fu_711_p2)
);

matmul_hw_mul_32sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sdEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_712_p0),
    .din1(grp_fu_712_p1),
    .ce(1'b1),
    .dout(grp_fu_712_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_946_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1355 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & ~(exitcond_flatten_reg_1355 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_687 <= tmp_mid2_v_reg_1376;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_687 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_676 <= indvar_flatten_next_reg_1359;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_676 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_698 <= j_1_reg_1998;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_698 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_0_load_1_reg_1553 <= a_0_Dout_A;
        a_1_load_1_reg_1563 <= a_1_Dout_A;
        a_2_load_1_reg_1573 <= a_2_Dout_A;
        a_3_load_1_reg_1583 <= a_3_Dout_A;
        b_0_load_1_reg_1558 <= b_0_Dout_A;
        b_1_load_1_reg_1568 <= b_1_Dout_A;
        b_2_load_1_reg_1578 <= b_2_Dout_A;
        b_3_load_1_reg_1588 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_0_load_2_reg_1638 <= a_0_Dout_A;
        a_1_load_2_reg_1648 <= a_1_Dout_A;
        a_2_load_2_reg_1658 <= a_2_Dout_A;
        a_3_load_2_reg_1668 <= a_3_Dout_A;
        b_0_load_2_reg_1643 <= b_0_Dout_A;
        b_1_load_2_reg_1653 <= b_1_Dout_A;
        b_2_load_2_reg_1663 <= b_2_Dout_A;
        b_3_load_2_reg_1673 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_0_load_3_reg_1718 <= a_0_Dout_A;
        a_1_load_3_reg_1728 <= a_1_Dout_A;
        a_2_load_3_reg_1738 <= a_2_Dout_A;
        a_3_load_3_reg_1748 <= a_3_Dout_A;
        b_0_load_3_reg_1723 <= b_0_Dout_A;
        b_1_load_3_reg_1733 <= b_1_Dout_A;
        b_2_load_3_reg_1743 <= b_2_Dout_A;
        b_3_load_3_reg_1753 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_0_load_4_reg_1798 <= a_0_Dout_A;
        a_1_load_4_reg_1808 <= a_1_Dout_A;
        a_2_load_4_reg_1818 <= a_2_Dout_A;
        a_3_load_4_reg_1828 <= a_3_Dout_A;
        b_0_load_4_reg_1803 <= b_0_Dout_A;
        b_1_load_4_reg_1813 <= b_1_Dout_A;
        b_2_load_4_reg_1823 <= b_2_Dout_A;
        b_3_load_4_reg_1833 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_0_load_5_reg_1878 <= a_0_Dout_A;
        a_1_load_5_reg_1888 <= a_1_Dout_A;
        a_2_load_5_reg_1898 <= a_2_Dout_A;
        a_3_load_5_reg_1908 <= a_3_Dout_A;
        b_0_load_5_reg_1883 <= b_0_Dout_A;
        b_1_load_5_reg_1893 <= b_1_Dout_A;
        b_2_load_5_reg_1903 <= b_2_Dout_A;
        b_3_load_5_reg_1913 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0))) begin
        a_0_load_6_reg_1958 <= a_0_Dout_A;
        a_1_load_6_reg_1968 <= a_1_Dout_A;
        a_2_load_6_reg_1978 <= a_2_Dout_A;
        a_3_load_6_reg_1988 <= a_3_Dout_A;
        b_0_load_6_reg_1963 <= b_0_Dout_A;
        b_1_load_6_reg_1973 <= b_1_Dout_A;
        b_2_load_6_reg_1983 <= b_2_Dout_A;
        b_3_load_6_reg_1993 <= b_3_Dout_A;
        j_1_reg_1998 <= j_1_fu_1226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_load_7_reg_2003 <= a_0_Dout_A;
        a_1_load_7_reg_2013 <= a_1_Dout_A;
        a_2_load_7_reg_2023 <= a_2_Dout_A;
        a_3_load_7_reg_2033 <= a_3_Dout_A;
        b_0_load_7_reg_2008 <= b_0_Dout_A;
        b_1_load_7_reg_2018 <= b_1_Dout_A;
        b_2_load_7_reg_2028 <= b_2_Dout_A;
        b_3_load_7_reg_2038 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_0_load_reg_1473 <= a_0_Dout_A;
        a_1_load_reg_1483 <= a_1_Dout_A;
        a_2_load_reg_1493 <= a_2_Dout_A;
        a_3_load_reg_1503 <= a_3_Dout_A;
        b_0_load_reg_1478 <= b_0_Dout_A;
        b_1_load_reg_1488 <= b_1_Dout_A;
        b_2_load_reg_1498 <= b_2_Dout_A;
        b_3_load_reg_1508 <= b_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355 <= exitcond_flatten_reg_1355;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364 <= j_mid2_reg_1364;
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 <= tmp_mid2_v_reg_1376;
        exitcond_flatten_reg_1355 <= exitcond_flatten_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1359 <= indvar_flatten_next_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_946_p2))) begin
        j_mid2_reg_1364 <= j_mid2_fu_970_p3;
        tmp_reg_1382[8 : 3] <= tmp_fu_986_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_870 <= grp_fu_710_p2;
        reg_874 <= grp_fu_712_p2;
        reg_882 <= grp_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1355 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_878 <= grp_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_886 <= grp_fu_710_p2;
        reg_890 <= grp_fu_712_p2;
        reg_898 <= grp_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_894 <= grp_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_902 <= grp_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_906 <= grp_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355))) begin
        tmp11_reg_2048 <= grp_fu_916_p2;
        tmp26_reg_2053 <= grp_fu_922_p2;
        tmp4_reg_2043 <= grp_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp12_reg_2063 <= grp_fu_916_p2;
        tmp18_reg_2068 <= grp_fu_940_p2;
        tmp27_reg_2073 <= grp_fu_922_p2;
        tmp5_reg_2058 <= grp_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355))) begin
        tmp16_reg_2118 <= tmp16_fu_1314_p2;
        tmp2_reg_2108 <= tmp2_fu_1251_p2;
        tmp9_reg_2113 <= tmp9_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_2_cast3_reg_1613[5 : 0] <= tmp_2_cast3_fu_1089_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_6_13_reg_2083 <= grp_fu_712_p2;
        tmp_6_29_reg_2088 <= grp_fu_711_p2;
        tmp_6_6_reg_2078 <= grp_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_6_14_reg_2098 <= grp_fu_712_p2;
        tmp_6_30_reg_2103 <= grp_fu_711_p2;
        tmp_6_7_reg_2093 <= grp_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_946_p2))) begin
        tmp_mid2_v_reg_1376 <= tmp_mid2_v_fu_978_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_0_Addr_A_orig = tmp_17_fu_1197_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_0_Addr_A_orig = tmp_15_fu_1169_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_13_fu_1139_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_11_fu_1111_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_s_fu_1077_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_8_fu_1049_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_5_fu_1015_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_3_fu_994_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_1_Addr_A_orig = tmp_17_fu_1197_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_1_Addr_A_orig = tmp_15_fu_1169_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_1_Addr_A_orig = tmp_13_fu_1139_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_1_Addr_A_orig = tmp_11_fu_1111_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_s_fu_1077_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_8_fu_1049_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_5_fu_1015_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_3_fu_994_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_2_Addr_A_orig = tmp_17_fu_1197_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_2_Addr_A_orig = tmp_15_fu_1169_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_2_Addr_A_orig = tmp_13_fu_1139_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_2_Addr_A_orig = tmp_11_fu_1111_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_2_Addr_A_orig = tmp_s_fu_1077_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_2_Addr_A_orig = tmp_8_fu_1049_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_2_Addr_A_orig = tmp_5_fu_1015_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_2_Addr_A_orig = tmp_3_fu_994_p1;
        end else begin
            a_2_Addr_A_orig = 'bx;
        end
    end else begin
        a_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_2_EN_A = 1'b1;
    end else begin
        a_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_3_Addr_A_orig = tmp_17_fu_1197_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_3_Addr_A_orig = tmp_15_fu_1169_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_3_Addr_A_orig = tmp_13_fu_1139_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_3_Addr_A_orig = tmp_11_fu_1111_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_3_Addr_A_orig = tmp_s_fu_1077_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_3_Addr_A_orig = tmp_8_fu_1049_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_3_Addr_A_orig = tmp_5_fu_1015_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_3_Addr_A_orig = tmp_3_fu_994_p1;
        end else begin
            a_3_Addr_A_orig = 'bx;
        end
    end else begin
        a_3_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_3_EN_A = 1'b1;
    end else begin
        a_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_0_Addr_A_orig = tmp_27_cast_fu_1218_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_0_Addr_A_orig = tmp_24_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_0_Addr_A_orig = tmp_25_cast_fu_1156_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_0_Addr_A_orig = tmp_22_fu_1123_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_0_Addr_A_orig = tmp_23_cast_fu_1098_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_0_Addr_A_orig = tmp_20_fu_1061_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_0_Addr_A_orig = tmp_21_cast_fu_1036_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_0_Addr_A_orig = tmp_2_fu_1002_p1;
        end else begin
            b_0_Addr_A_orig = 'bx;
        end
    end else begin
        b_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_0_EN_A = 1'b1;
    end else begin
        b_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_1_Addr_A_orig = tmp_27_cast_fu_1218_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_1_Addr_A_orig = tmp_24_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_1_Addr_A_orig = tmp_25_cast_fu_1156_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_1_Addr_A_orig = tmp_22_fu_1123_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_1_Addr_A_orig = tmp_23_cast_fu_1098_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_1_Addr_A_orig = tmp_20_fu_1061_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_1_Addr_A_orig = tmp_21_cast_fu_1036_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_1_Addr_A_orig = tmp_2_fu_1002_p1;
        end else begin
            b_1_Addr_A_orig = 'bx;
        end
    end else begin
        b_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_1_EN_A = 1'b1;
    end else begin
        b_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_2_Addr_A_orig = tmp_27_cast_fu_1218_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_2_Addr_A_orig = tmp_24_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_2_Addr_A_orig = tmp_25_cast_fu_1156_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_2_Addr_A_orig = tmp_22_fu_1123_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_2_Addr_A_orig = tmp_23_cast_fu_1098_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_2_Addr_A_orig = tmp_20_fu_1061_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_2_Addr_A_orig = tmp_21_cast_fu_1036_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_2_Addr_A_orig = tmp_2_fu_1002_p1;
        end else begin
            b_2_Addr_A_orig = 'bx;
        end
    end else begin
        b_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_2_EN_A = 1'b1;
    end else begin
        b_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_3_Addr_A_orig = tmp_27_cast_fu_1218_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_3_Addr_A_orig = tmp_24_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_3_Addr_A_orig = tmp_25_cast_fu_1156_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_3_Addr_A_orig = tmp_22_fu_1123_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_3_Addr_A_orig = tmp_23_cast_fu_1098_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_3_Addr_A_orig = tmp_20_fu_1061_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_3_Addr_A_orig = tmp_21_cast_fu_1036_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_3_Addr_A_orig = tmp_2_fu_1002_p1;
        end else begin
            b_3_Addr_A_orig = 'bx;
        end
    end else begin
        b_3_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_3_EN_A = 1'b1;
    end else begin
        b_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_709_p0 = a_2_load_7_reg_2023;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_709_p0 = a_2_load_6_reg_1978;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_709_p0 = a_2_load_5_reg_1898;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_709_p0 = a_2_load_4_reg_1818;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_709_p0 = a_2_load_3_reg_1738;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_709_p0 = a_2_load_2_reg_1658;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_709_p0 = a_2_load_1_reg_1573;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_709_p0 = a_2_load_reg_1493;
    end else begin
        grp_fu_709_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_709_p1 = b_2_load_7_reg_2028;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_709_p1 = b_2_load_6_reg_1983;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_709_p1 = b_2_load_5_reg_1903;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_709_p1 = b_2_load_4_reg_1823;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_709_p1 = b_2_load_3_reg_1743;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_709_p1 = b_2_load_2_reg_1663;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_709_p1 = b_2_load_1_reg_1578;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_709_p1 = b_2_load_reg_1498;
    end else begin
        grp_fu_709_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_710_p0 = a_0_load_7_reg_2003;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_710_p0 = a_0_load_6_reg_1958;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_710_p0 = a_0_load_5_reg_1878;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_710_p0 = a_0_load_4_reg_1798;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_710_p0 = a_0_load_3_reg_1718;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_710_p0 = a_0_load_2_reg_1638;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_710_p0 = a_0_load_1_reg_1553;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_710_p0 = a_0_load_reg_1473;
    end else begin
        grp_fu_710_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_710_p1 = b_0_load_7_reg_2008;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_710_p1 = b_0_load_6_reg_1963;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_710_p1 = b_0_load_5_reg_1883;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_710_p1 = b_0_load_4_reg_1803;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_710_p1 = b_0_load_3_reg_1723;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_710_p1 = b_0_load_2_reg_1643;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_710_p1 = b_0_load_1_reg_1558;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_710_p1 = b_0_load_reg_1478;
    end else begin
        grp_fu_710_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_711_p0 = a_3_load_7_reg_2033;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_711_p0 = a_3_load_6_reg_1988;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_711_p0 = a_3_load_5_reg_1908;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_711_p0 = a_3_load_4_reg_1828;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_711_p0 = a_3_load_3_reg_1748;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_711_p0 = a_3_load_2_reg_1668;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_711_p0 = a_3_load_1_reg_1583;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_711_p0 = a_3_load_reg_1503;
    end else begin
        grp_fu_711_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_711_p1 = b_3_load_7_reg_2038;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_711_p1 = b_3_load_6_reg_1993;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_711_p1 = b_3_load_5_reg_1913;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_711_p1 = b_3_load_4_reg_1833;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_711_p1 = b_3_load_3_reg_1753;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_711_p1 = b_3_load_2_reg_1673;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_711_p1 = b_3_load_1_reg_1588;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_711_p1 = b_3_load_reg_1508;
    end else begin
        grp_fu_711_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_712_p0 = a_1_load_7_reg_2013;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_712_p0 = a_1_load_6_reg_1968;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_712_p0 = a_1_load_5_reg_1888;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_712_p0 = a_1_load_4_reg_1808;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_712_p0 = a_1_load_3_reg_1728;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_712_p0 = a_1_load_2_reg_1648;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_712_p0 = a_1_load_1_reg_1563;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_712_p0 = a_1_load_reg_1483;
    end else begin
        grp_fu_712_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_712_p1 = b_1_load_7_reg_2018;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_712_p1 = b_1_load_6_reg_1973;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_712_p1 = b_1_load_5_reg_1893;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_712_p1 = b_1_load_4_reg_1813;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_712_p1 = b_1_load_3_reg_1733;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_712_p1 = b_1_load_2_reg_1653;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_712_p1 = b_1_load_1_reg_1568;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_712_p1 = b_1_load_reg_1488;
    end else begin
        grp_fu_712_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_691_p4 = tmp_mid2_v_reg_1376;
    end else begin
        i_phi_fu_691_p4 = i_reg_687;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_680_p4 = indvar_flatten_next_reg_1359;
    end else begin
        indvar_flatten_phi_fu_680_p4 = indvar_flatten_reg_676;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1355 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_702_p4 = j_1_reg_1998;
    end else begin
        j_phi_fu_702_p4 = j_reg_698;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_946_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_946_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign a_2_Addr_A = a_2_Addr_A_orig << ap_const_lv32_2;

assign a_2_Clk_A = ap_clk;

assign a_2_Din_A = ap_const_lv32_0;

assign a_2_Rst_A = ap_rst;

assign a_2_WEN_A = ap_const_lv4_0;

assign a_3_Addr_A = a_3_Addr_A_orig << ap_const_lv32_2;

assign a_3_Clk_A = ap_clk;

assign a_3_Din_A = ap_const_lv32_0;

assign a_3_Rst_A = ap_rst;

assign a_3_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_9];

assign b_0_Addr_A = b_0_Addr_A_orig << ap_const_lv32_2;

assign b_0_Clk_A = ap_clk;

assign b_0_Din_A = ap_const_lv32_0;

assign b_0_Rst_A = ap_rst;

assign b_0_WEN_A = ap_const_lv4_0;

assign b_1_Addr_A = b_1_Addr_A_orig << ap_const_lv32_2;

assign b_1_Clk_A = ap_clk;

assign b_1_Din_A = ap_const_lv32_0;

assign b_1_Rst_A = ap_rst;

assign b_1_WEN_A = ap_const_lv4_0;

assign b_2_Addr_A = b_2_Addr_A_orig << ap_const_lv32_2;

assign b_2_Clk_A = ap_clk;

assign b_2_Din_A = ap_const_lv32_0;

assign b_2_Rst_A = ap_rst;

assign b_2_WEN_A = ap_const_lv4_0;

assign b_3_Addr_A = b_3_Addr_A_orig << ap_const_lv32_2;

assign b_3_Clk_A = ap_clk;

assign b_3_Din_A = ap_const_lv32_0;

assign b_3_Rst_A = ap_rst;

assign b_3_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_28_cast_fu_1340_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = (tmp16_reg_2118 + tmp1_fu_1345_p2);

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_946_p2 = ((indvar_flatten_phi_fu_680_p4 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_fu_964_p2 = ((j_phi_fu_702_p4 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign grp_fu_910_p2 = (reg_870 + reg_886);

assign grp_fu_916_p2 = (reg_874 + reg_890);

assign grp_fu_922_p2 = (reg_882 + reg_898);

assign grp_fu_928_p2 = (reg_878 + reg_894);

assign grp_fu_934_p2 = (reg_902 + reg_906);

assign grp_fu_940_p2 = (grp_fu_934_p2 + grp_fu_928_p2);

assign i_1_fu_958_p2 = (i_phi_fu_691_p4 + ap_const_lv6_1);

assign indvar_flatten_next_fu_952_p2 = (indvar_flatten_phi_fu_680_p4 + ap_const_lv11_1);

assign j_1_fu_1226_p2 = (j_mid2_reg_1364 + ap_const_lv6_1);

assign j_mid2_fu_970_p3 = ((exitcond_fu_964_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j_phi_fu_702_p4);

assign tmp10_fu_1257_p2 = (tmp12_reg_2063 + tmp11_reg_2048);

assign tmp13_fu_1271_p2 = (tmp15_fu_1267_p2 + tmp14_fu_1261_p2);

assign tmp14_fu_1261_p2 = (reg_874 + reg_890);

assign tmp15_fu_1267_p2 = (tmp_6_13_reg_2083 + tmp_6_14_reg_2098);

assign tmp16_fu_1314_p2 = (tmp24_fu_1308_p2 + tmp17_fu_1283_p2);

assign tmp17_fu_1283_p2 = (grp_fu_940_p2 + tmp18_reg_2068);

assign tmp1_fu_1345_p2 = (tmp9_reg_2113 + tmp2_reg_2108);

assign tmp24_fu_1308_p2 = (tmp28_fu_1302_p2 + tmp25_fu_1288_p2);

assign tmp25_fu_1288_p2 = (tmp27_reg_2073 + tmp26_reg_2053);

assign tmp28_fu_1302_p2 = (tmp30_fu_1298_p2 + tmp29_fu_1292_p2);

assign tmp29_fu_1292_p2 = (reg_882 + reg_898);

assign tmp2_fu_1251_p2 = (tmp6_fu_1245_p2 + tmp3_fu_1231_p2);

assign tmp30_fu_1298_p2 = (tmp_6_29_reg_2088 + tmp_6_30_reg_2103);

assign tmp3_fu_1231_p2 = (tmp5_reg_2058 + tmp4_reg_2043);

assign tmp6_fu_1245_p2 = (tmp8_fu_1241_p2 + tmp7_fu_1235_p2);

assign tmp7_fu_1235_p2 = (reg_870 + reg_886);

assign tmp8_fu_1241_p2 = (tmp_6_6_reg_2078 + tmp_6_7_reg_2093);

assign tmp9_fu_1277_p2 = (tmp13_fu_1271_p2 + tmp10_fu_1257_p2);

assign tmp_10_fu_1106_p2 = (tmp_reg_1382 | ap_const_lv9_4);

assign tmp_11_fu_1111_p3 = {{ap_const_lv55_0}, {tmp_10_fu_1106_p2}};

assign tmp_12_fu_1134_p2 = (tmp_reg_1382 | ap_const_lv9_5);

assign tmp_13_fu_1139_p3 = {{ap_const_lv55_0}, {tmp_12_fu_1134_p2}};

assign tmp_14_fu_1164_p2 = (tmp_reg_1382 | ap_const_lv9_6);

assign tmp_15_fu_1169_p3 = {{ap_const_lv55_0}, {tmp_14_fu_1164_p2}};

assign tmp_16_fu_1192_p2 = (tmp_reg_1382 | ap_const_lv9_7);

assign tmp_17_fu_1197_p3 = {{ap_const_lv55_0}, {tmp_16_fu_1192_p2}};

assign tmp_18_fu_1320_p3 = {{ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376}, {ap_const_lv5_0}};

assign tmp_19_fu_1030_p2 = (tmp_2_cast_fu_1027_p1 + ap_const_lv7_20);

assign tmp_20_cast_fu_1327_p1 = tmp_18_fu_1320_p3;

assign tmp_20_fu_1061_p3 = {{ap_const_lv58_1}, {j_mid2_reg_1364}};

assign tmp_21_cast_fu_1036_p1 = tmp_19_fu_1030_p2;

assign tmp_21_fu_1092_p2 = (tmp_2_cast3_fu_1089_p1 + ap_const_lv8_60);

assign tmp_22_fu_1123_p3 = {{ap_const_lv58_2}, {j_mid2_reg_1364}};

assign tmp_23_cast_fu_1098_p1 = tmp_21_fu_1092_p2;

assign tmp_23_fu_1151_p2 = ($signed(tmp_2_cast3_reg_1613) + $signed(ap_const_lv8_A0));

assign tmp_24_fu_1181_p3 = {{ap_const_lv58_3}, {j_mid2_reg_1364}};

assign tmp_25_cast_fu_1156_p1 = tmp_23_fu_1151_p2;

assign tmp_25_fu_1212_p2 = (tmp_2_cast4_fu_1209_p1 + ap_const_lv9_E0);

assign tmp_26_fu_1334_p2 = (tmp_2_cast5_fu_1331_p1 + tmp_20_cast_fu_1327_p1);

assign tmp_27_cast_fu_1218_p1 = tmp_25_fu_1212_p2;

assign tmp_28_cast_fu_1340_p1 = tmp_26_fu_1334_p2;

assign tmp_2_cast3_fu_1089_p1 = j_mid2_reg_1364;

assign tmp_2_cast4_fu_1209_p1 = j_mid2_reg_1364;

assign tmp_2_cast5_fu_1331_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364;

assign tmp_2_cast_fu_1027_p1 = j_mid2_reg_1364;

assign tmp_2_fu_1002_p1 = j_mid2_fu_970_p3;

assign tmp_3_fu_994_p1 = tmp_fu_986_p3;

assign tmp_4_fu_1010_p2 = (tmp_reg_1382 | ap_const_lv9_1);

assign tmp_5_fu_1015_p3 = {{ap_const_lv55_0}, {tmp_4_fu_1010_p2}};

assign tmp_7_fu_1044_p2 = (tmp_reg_1382 | ap_const_lv9_2);

assign tmp_8_fu_1049_p3 = {{ap_const_lv55_0}, {tmp_7_fu_1044_p2}};

assign tmp_9_fu_1072_p2 = (tmp_reg_1382 | ap_const_lv9_3);

assign tmp_fu_986_p3 = {{tmp_mid2_v_fu_978_p3}, {ap_const_lv3_0}};

assign tmp_mid2_v_fu_978_p3 = ((exitcond_fu_964_p2[0:0] === 1'b1) ? i_1_fu_958_p2 : i_phi_fu_691_p4);

assign tmp_s_fu_1077_p3 = {{ap_const_lv55_0}, {tmp_9_fu_1072_p2}};

always @ (posedge ap_clk) begin
    tmp_reg_1382[2:0] <= 3'b000;
    tmp_2_cast3_reg_1613[7:6] <= 2'b00;
end

endmodule //matmul_hw
