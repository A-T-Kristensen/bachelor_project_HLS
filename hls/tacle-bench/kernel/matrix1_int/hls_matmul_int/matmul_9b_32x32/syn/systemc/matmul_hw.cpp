// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_state19 = "1000000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_8 = "1000";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";
const sc_lv<32> matmul_hw::ap_const_lv32_7 = "111";
const sc_lv<11> matmul_hw::ap_const_lv11_0 = "00000000000";
const sc_lv<6> matmul_hw::ap_const_lv6_0 = "000000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<11> matmul_hw::ap_const_lv11_400 = "10000000000";
const sc_lv<11> matmul_hw::ap_const_lv11_1 = "1";
const sc_lv<6> matmul_hw::ap_const_lv6_1 = "1";
const sc_lv<6> matmul_hw::ap_const_lv6_20 = "100000";
const sc_lv<3> matmul_hw::ap_const_lv3_0 = "000";
const sc_lv<9> matmul_hw::ap_const_lv9_1 = "1";
const sc_lv<55> matmul_hw::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<7> matmul_hw::ap_const_lv7_20 = "100000";
const sc_lv<9> matmul_hw::ap_const_lv9_2 = "10";
const sc_lv<58> matmul_hw::ap_const_lv58_1 = "1";
const sc_lv<9> matmul_hw::ap_const_lv9_3 = "11";
const sc_lv<8> matmul_hw::ap_const_lv8_60 = "1100000";
const sc_lv<9> matmul_hw::ap_const_lv9_4 = "100";
const sc_lv<58> matmul_hw::ap_const_lv58_2 = "10";
const sc_lv<9> matmul_hw::ap_const_lv9_5 = "101";
const sc_lv<8> matmul_hw::ap_const_lv8_A0 = "10100000";
const sc_lv<9> matmul_hw::ap_const_lv9_6 = "110";
const sc_lv<58> matmul_hw::ap_const_lv58_3 = "11";
const sc_lv<9> matmul_hw::ap_const_lv9_7 = "111";
const sc_lv<9> matmul_hw::ap_const_lv9_E0 = "11100000";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<32> matmul_hw::ap_const_lv32_9 = "1001";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_mul_32sdEe_U1 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U1");
    matmul_hw_mul_32sdEe_U1->clk(ap_clk);
    matmul_hw_mul_32sdEe_U1->reset(ap_rst);
    matmul_hw_mul_32sdEe_U1->din0(grp_fu_709_p0);
    matmul_hw_mul_32sdEe_U1->din1(grp_fu_709_p1);
    matmul_hw_mul_32sdEe_U1->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U1->dout(grp_fu_709_p2);
    matmul_hw_mul_32sdEe_U2 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U2");
    matmul_hw_mul_32sdEe_U2->clk(ap_clk);
    matmul_hw_mul_32sdEe_U2->reset(ap_rst);
    matmul_hw_mul_32sdEe_U2->din0(grp_fu_710_p0);
    matmul_hw_mul_32sdEe_U2->din1(grp_fu_710_p1);
    matmul_hw_mul_32sdEe_U2->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U2->dout(grp_fu_710_p2);
    matmul_hw_mul_32sdEe_U3 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U3");
    matmul_hw_mul_32sdEe_U3->clk(ap_clk);
    matmul_hw_mul_32sdEe_U3->reset(ap_rst);
    matmul_hw_mul_32sdEe_U3->din0(grp_fu_711_p0);
    matmul_hw_mul_32sdEe_U3->din1(grp_fu_711_p1);
    matmul_hw_mul_32sdEe_U3->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U3->dout(grp_fu_711_p2);
    matmul_hw_mul_32sdEe_U4 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U4");
    matmul_hw_mul_32sdEe_U4->clk(ap_clk);
    matmul_hw_mul_32sdEe_U4->reset(ap_rst);
    matmul_hw_mul_32sdEe_U4->din0(grp_fu_712_p0);
    matmul_hw_mul_32sdEe_U4->din1(grp_fu_712_p1);
    matmul_hw_mul_32sdEe_U4->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U4->dout(grp_fu_712_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_Addr_A);
    sensitive << ( a_0_Addr_A_orig );

    SC_METHOD(thread_a_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_994_p1 );
    sensitive << ( tmp_5_fu_1015_p3 );
    sensitive << ( tmp_8_fu_1049_p3 );
    sensitive << ( tmp_s_fu_1077_p3 );
    sensitive << ( tmp_11_fu_1111_p3 );
    sensitive << ( tmp_13_fu_1139_p3 );
    sensitive << ( tmp_15_fu_1169_p3 );
    sensitive << ( tmp_17_fu_1197_p3 );

    SC_METHOD(thread_a_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_0_Din_A);

    SC_METHOD(thread_a_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_0_WEN_A);

    SC_METHOD(thread_a_1_Addr_A);
    sensitive << ( a_1_Addr_A_orig );

    SC_METHOD(thread_a_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_994_p1 );
    sensitive << ( tmp_5_fu_1015_p3 );
    sensitive << ( tmp_8_fu_1049_p3 );
    sensitive << ( tmp_s_fu_1077_p3 );
    sensitive << ( tmp_11_fu_1111_p3 );
    sensitive << ( tmp_13_fu_1139_p3 );
    sensitive << ( tmp_15_fu_1169_p3 );
    sensitive << ( tmp_17_fu_1197_p3 );

    SC_METHOD(thread_a_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_1_Din_A);

    SC_METHOD(thread_a_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_1_WEN_A);

    SC_METHOD(thread_a_2_Addr_A);
    sensitive << ( a_2_Addr_A_orig );

    SC_METHOD(thread_a_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_994_p1 );
    sensitive << ( tmp_5_fu_1015_p3 );
    sensitive << ( tmp_8_fu_1049_p3 );
    sensitive << ( tmp_s_fu_1077_p3 );
    sensitive << ( tmp_11_fu_1111_p3 );
    sensitive << ( tmp_13_fu_1139_p3 );
    sensitive << ( tmp_15_fu_1169_p3 );
    sensitive << ( tmp_17_fu_1197_p3 );

    SC_METHOD(thread_a_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_2_Din_A);

    SC_METHOD(thread_a_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_2_WEN_A);

    SC_METHOD(thread_a_3_Addr_A);
    sensitive << ( a_3_Addr_A_orig );

    SC_METHOD(thread_a_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_994_p1 );
    sensitive << ( tmp_5_fu_1015_p3 );
    sensitive << ( tmp_8_fu_1049_p3 );
    sensitive << ( tmp_s_fu_1077_p3 );
    sensitive << ( tmp_11_fu_1111_p3 );
    sensitive << ( tmp_13_fu_1139_p3 );
    sensitive << ( tmp_15_fu_1169_p3 );
    sensitive << ( tmp_17_fu_1197_p3 );

    SC_METHOD(thread_a_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_3_Din_A);

    SC_METHOD(thread_a_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_3_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_b_0_Addr_A);
    sensitive << ( b_0_Addr_A_orig );

    SC_METHOD(thread_b_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_1002_p1 );
    sensitive << ( tmp_21_cast_fu_1036_p1 );
    sensitive << ( tmp_20_fu_1061_p3 );
    sensitive << ( tmp_23_cast_fu_1098_p1 );
    sensitive << ( tmp_22_fu_1123_p3 );
    sensitive << ( tmp_25_cast_fu_1156_p1 );
    sensitive << ( tmp_24_fu_1181_p3 );
    sensitive << ( tmp_27_cast_fu_1218_p1 );

    SC_METHOD(thread_b_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_0_Din_A);

    SC_METHOD(thread_b_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_0_WEN_A);

    SC_METHOD(thread_b_1_Addr_A);
    sensitive << ( b_1_Addr_A_orig );

    SC_METHOD(thread_b_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_1002_p1 );
    sensitive << ( tmp_21_cast_fu_1036_p1 );
    sensitive << ( tmp_20_fu_1061_p3 );
    sensitive << ( tmp_23_cast_fu_1098_p1 );
    sensitive << ( tmp_22_fu_1123_p3 );
    sensitive << ( tmp_25_cast_fu_1156_p1 );
    sensitive << ( tmp_24_fu_1181_p3 );
    sensitive << ( tmp_27_cast_fu_1218_p1 );

    SC_METHOD(thread_b_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_1_Din_A);

    SC_METHOD(thread_b_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_1_WEN_A);

    SC_METHOD(thread_b_2_Addr_A);
    sensitive << ( b_2_Addr_A_orig );

    SC_METHOD(thread_b_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_1002_p1 );
    sensitive << ( tmp_21_cast_fu_1036_p1 );
    sensitive << ( tmp_20_fu_1061_p3 );
    sensitive << ( tmp_23_cast_fu_1098_p1 );
    sensitive << ( tmp_22_fu_1123_p3 );
    sensitive << ( tmp_25_cast_fu_1156_p1 );
    sensitive << ( tmp_24_fu_1181_p3 );
    sensitive << ( tmp_27_cast_fu_1218_p1 );

    SC_METHOD(thread_b_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_2_Din_A);

    SC_METHOD(thread_b_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_2_WEN_A);

    SC_METHOD(thread_b_3_Addr_A);
    sensitive << ( b_3_Addr_A_orig );

    SC_METHOD(thread_b_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_1002_p1 );
    sensitive << ( tmp_21_cast_fu_1036_p1 );
    sensitive << ( tmp_20_fu_1061_p3 );
    sensitive << ( tmp_23_cast_fu_1098_p1 );
    sensitive << ( tmp_22_fu_1123_p3 );
    sensitive << ( tmp_25_cast_fu_1156_p1 );
    sensitive << ( tmp_24_fu_1181_p3 );
    sensitive << ( tmp_27_cast_fu_1218_p1 );

    SC_METHOD(thread_b_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_3_Din_A);

    SC_METHOD(thread_b_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_3_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_28_cast_fu_1340_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp16_reg_2118 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp1_fu_1345_p2 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_exitcond_flatten_fu_946_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_680_p4 );

    SC_METHOD(thread_exitcond_fu_964_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_946_p2 );
    sensitive << ( j_phi_fu_702_p4 );

    SC_METHOD(thread_grp_fu_709_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_2_load_reg_1493 );
    sensitive << ( a_2_load_1_reg_1573 );
    sensitive << ( a_2_load_2_reg_1658 );
    sensitive << ( a_2_load_3_reg_1738 );
    sensitive << ( a_2_load_4_reg_1818 );
    sensitive << ( a_2_load_5_reg_1898 );
    sensitive << ( a_2_load_6_reg_1978 );
    sensitive << ( a_2_load_7_reg_2023 );

    SC_METHOD(thread_grp_fu_709_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_2_load_reg_1498 );
    sensitive << ( b_2_load_1_reg_1578 );
    sensitive << ( b_2_load_2_reg_1663 );
    sensitive << ( b_2_load_3_reg_1743 );
    sensitive << ( b_2_load_4_reg_1823 );
    sensitive << ( b_2_load_5_reg_1903 );
    sensitive << ( b_2_load_6_reg_1983 );
    sensitive << ( b_2_load_7_reg_2028 );

    SC_METHOD(thread_grp_fu_710_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_0_load_reg_1473 );
    sensitive << ( a_0_load_1_reg_1553 );
    sensitive << ( a_0_load_2_reg_1638 );
    sensitive << ( a_0_load_3_reg_1718 );
    sensitive << ( a_0_load_4_reg_1798 );
    sensitive << ( a_0_load_5_reg_1878 );
    sensitive << ( a_0_load_6_reg_1958 );
    sensitive << ( a_0_load_7_reg_2003 );

    SC_METHOD(thread_grp_fu_710_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_0_load_reg_1478 );
    sensitive << ( b_0_load_1_reg_1558 );
    sensitive << ( b_0_load_2_reg_1643 );
    sensitive << ( b_0_load_3_reg_1723 );
    sensitive << ( b_0_load_4_reg_1803 );
    sensitive << ( b_0_load_5_reg_1883 );
    sensitive << ( b_0_load_6_reg_1963 );
    sensitive << ( b_0_load_7_reg_2008 );

    SC_METHOD(thread_grp_fu_711_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_3_load_reg_1503 );
    sensitive << ( a_3_load_1_reg_1583 );
    sensitive << ( a_3_load_2_reg_1668 );
    sensitive << ( a_3_load_3_reg_1748 );
    sensitive << ( a_3_load_4_reg_1828 );
    sensitive << ( a_3_load_5_reg_1908 );
    sensitive << ( a_3_load_6_reg_1988 );
    sensitive << ( a_3_load_7_reg_2033 );

    SC_METHOD(thread_grp_fu_711_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_3_load_reg_1508 );
    sensitive << ( b_3_load_1_reg_1588 );
    sensitive << ( b_3_load_2_reg_1673 );
    sensitive << ( b_3_load_3_reg_1753 );
    sensitive << ( b_3_load_4_reg_1833 );
    sensitive << ( b_3_load_5_reg_1913 );
    sensitive << ( b_3_load_6_reg_1993 );
    sensitive << ( b_3_load_7_reg_2038 );

    SC_METHOD(thread_grp_fu_712_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_1_load_reg_1483 );
    sensitive << ( a_1_load_1_reg_1563 );
    sensitive << ( a_1_load_2_reg_1648 );
    sensitive << ( a_1_load_3_reg_1728 );
    sensitive << ( a_1_load_4_reg_1808 );
    sensitive << ( a_1_load_5_reg_1888 );
    sensitive << ( a_1_load_6_reg_1968 );
    sensitive << ( a_1_load_7_reg_2013 );

    SC_METHOD(thread_grp_fu_712_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_1_load_reg_1488 );
    sensitive << ( b_1_load_1_reg_1568 );
    sensitive << ( b_1_load_2_reg_1653 );
    sensitive << ( b_1_load_3_reg_1733 );
    sensitive << ( b_1_load_4_reg_1813 );
    sensitive << ( b_1_load_5_reg_1893 );
    sensitive << ( b_1_load_6_reg_1973 );
    sensitive << ( b_1_load_7_reg_2018 );

    SC_METHOD(thread_grp_fu_910_p2);
    sensitive << ( reg_870 );
    sensitive << ( reg_886 );

    SC_METHOD(thread_grp_fu_916_p2);
    sensitive << ( reg_874 );
    sensitive << ( reg_890 );

    SC_METHOD(thread_grp_fu_922_p2);
    sensitive << ( reg_882 );
    sensitive << ( reg_898 );

    SC_METHOD(thread_grp_fu_928_p2);
    sensitive << ( reg_878 );
    sensitive << ( reg_894 );

    SC_METHOD(thread_grp_fu_934_p2);
    sensitive << ( reg_902 );
    sensitive << ( reg_906 );

    SC_METHOD(thread_grp_fu_940_p2);
    sensitive << ( grp_fu_934_p2 );
    sensitive << ( grp_fu_928_p2 );

    SC_METHOD(thread_i_1_fu_958_p2);
    sensitive << ( i_phi_fu_691_p4 );

    SC_METHOD(thread_i_phi_fu_691_p4);
    sensitive << ( i_reg_687 );
    sensitive << ( exitcond_flatten_reg_1355 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_1376 );

    SC_METHOD(thread_indvar_flatten_next_fu_952_p2);
    sensitive << ( indvar_flatten_phi_fu_680_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_680_p4);
    sensitive << ( indvar_flatten_reg_676 );
    sensitive << ( exitcond_flatten_reg_1355 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_1359 );

    SC_METHOD(thread_j_1_fu_1226_p2);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_j_mid2_fu_970_p3);
    sensitive << ( j_phi_fu_702_p4 );
    sensitive << ( exitcond_fu_964_p2 );

    SC_METHOD(thread_j_phi_fu_702_p4);
    sensitive << ( j_reg_698 );
    sensitive << ( exitcond_flatten_reg_1355 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_1998 );

    SC_METHOD(thread_tmp10_fu_1257_p2);
    sensitive << ( tmp11_reg_2048 );
    sensitive << ( tmp12_reg_2063 );

    SC_METHOD(thread_tmp13_fu_1271_p2);
    sensitive << ( tmp15_fu_1267_p2 );
    sensitive << ( tmp14_fu_1261_p2 );

    SC_METHOD(thread_tmp14_fu_1261_p2);
    sensitive << ( reg_874 );
    sensitive << ( reg_890 );

    SC_METHOD(thread_tmp15_fu_1267_p2);
    sensitive << ( tmp_6_13_reg_2083 );
    sensitive << ( tmp_6_14_reg_2098 );

    SC_METHOD(thread_tmp16_fu_1314_p2);
    sensitive << ( tmp24_fu_1308_p2 );
    sensitive << ( tmp17_fu_1283_p2 );

    SC_METHOD(thread_tmp17_fu_1283_p2);
    sensitive << ( grp_fu_940_p2 );
    sensitive << ( tmp18_reg_2068 );

    SC_METHOD(thread_tmp1_fu_1345_p2);
    sensitive << ( tmp2_reg_2108 );
    sensitive << ( tmp9_reg_2113 );

    SC_METHOD(thread_tmp24_fu_1308_p2);
    sensitive << ( tmp28_fu_1302_p2 );
    sensitive << ( tmp25_fu_1288_p2 );

    SC_METHOD(thread_tmp25_fu_1288_p2);
    sensitive << ( tmp26_reg_2053 );
    sensitive << ( tmp27_reg_2073 );

    SC_METHOD(thread_tmp28_fu_1302_p2);
    sensitive << ( tmp30_fu_1298_p2 );
    sensitive << ( tmp29_fu_1292_p2 );

    SC_METHOD(thread_tmp29_fu_1292_p2);
    sensitive << ( reg_882 );
    sensitive << ( reg_898 );

    SC_METHOD(thread_tmp2_fu_1251_p2);
    sensitive << ( tmp6_fu_1245_p2 );
    sensitive << ( tmp3_fu_1231_p2 );

    SC_METHOD(thread_tmp30_fu_1298_p2);
    sensitive << ( tmp_6_29_reg_2088 );
    sensitive << ( tmp_6_30_reg_2103 );

    SC_METHOD(thread_tmp3_fu_1231_p2);
    sensitive << ( tmp4_reg_2043 );
    sensitive << ( tmp5_reg_2058 );

    SC_METHOD(thread_tmp6_fu_1245_p2);
    sensitive << ( tmp8_fu_1241_p2 );
    sensitive << ( tmp7_fu_1235_p2 );

    SC_METHOD(thread_tmp7_fu_1235_p2);
    sensitive << ( reg_870 );
    sensitive << ( reg_886 );

    SC_METHOD(thread_tmp8_fu_1241_p2);
    sensitive << ( tmp_6_6_reg_2078 );
    sensitive << ( tmp_6_7_reg_2093 );

    SC_METHOD(thread_tmp9_fu_1277_p2);
    sensitive << ( tmp13_fu_1271_p2 );
    sensitive << ( tmp10_fu_1257_p2 );

    SC_METHOD(thread_tmp_10_fu_1106_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_11_fu_1111_p3);
    sensitive << ( tmp_10_fu_1106_p2 );

    SC_METHOD(thread_tmp_12_fu_1134_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_13_fu_1139_p3);
    sensitive << ( tmp_12_fu_1134_p2 );

    SC_METHOD(thread_tmp_14_fu_1164_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_15_fu_1169_p3);
    sensitive << ( tmp_14_fu_1164_p2 );

    SC_METHOD(thread_tmp_16_fu_1192_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_17_fu_1197_p3);
    sensitive << ( tmp_16_fu_1192_p2 );

    SC_METHOD(thread_tmp_18_fu_1320_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 );

    SC_METHOD(thread_tmp_19_fu_1030_p2);
    sensitive << ( tmp_2_cast_fu_1027_p1 );

    SC_METHOD(thread_tmp_20_cast_fu_1327_p1);
    sensitive << ( tmp_18_fu_1320_p3 );

    SC_METHOD(thread_tmp_20_fu_1061_p3);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_21_cast_fu_1036_p1);
    sensitive << ( tmp_19_fu_1030_p2 );

    SC_METHOD(thread_tmp_21_fu_1092_p2);
    sensitive << ( tmp_2_cast3_fu_1089_p1 );

    SC_METHOD(thread_tmp_22_fu_1123_p3);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_23_cast_fu_1098_p1);
    sensitive << ( tmp_21_fu_1092_p2 );

    SC_METHOD(thread_tmp_23_fu_1151_p2);
    sensitive << ( tmp_2_cast3_reg_1613 );

    SC_METHOD(thread_tmp_24_fu_1181_p3);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_25_cast_fu_1156_p1);
    sensitive << ( tmp_23_fu_1151_p2 );

    SC_METHOD(thread_tmp_25_fu_1212_p2);
    sensitive << ( tmp_2_cast4_fu_1209_p1 );

    SC_METHOD(thread_tmp_26_fu_1334_p2);
    sensitive << ( tmp_2_cast5_fu_1331_p1 );
    sensitive << ( tmp_20_cast_fu_1327_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_1218_p1);
    sensitive << ( tmp_25_fu_1212_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_1340_p1);
    sensitive << ( tmp_26_fu_1334_p2 );

    SC_METHOD(thread_tmp_2_cast3_fu_1089_p1);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_2_cast4_fu_1209_p1);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_2_cast5_fu_1331_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_2_cast_fu_1027_p1);
    sensitive << ( j_mid2_reg_1364 );

    SC_METHOD(thread_tmp_2_fu_1002_p1);
    sensitive << ( j_mid2_fu_970_p3 );

    SC_METHOD(thread_tmp_3_fu_994_p1);
    sensitive << ( tmp_fu_986_p3 );

    SC_METHOD(thread_tmp_4_fu_1010_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_5_fu_1015_p3);
    sensitive << ( tmp_4_fu_1010_p2 );

    SC_METHOD(thread_tmp_7_fu_1044_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_8_fu_1049_p3);
    sensitive << ( tmp_7_fu_1044_p2 );

    SC_METHOD(thread_tmp_9_fu_1072_p2);
    sensitive << ( tmp_reg_1382 );

    SC_METHOD(thread_tmp_fu_986_p3);
    sensitive << ( tmp_mid2_v_fu_978_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_978_p3);
    sensitive << ( i_phi_fu_691_p4 );
    sensitive << ( exitcond_fu_964_p2 );
    sensitive << ( i_1_fu_958_p2 );

    SC_METHOD(thread_tmp_s_fu_1077_p3);
    sensitive << ( tmp_9_fu_1072_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_946_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_Addr_A, "(port)a_0_Addr_A");
    sc_trace(mVcdFile, a_0_EN_A, "(port)a_0_EN_A");
    sc_trace(mVcdFile, a_0_WEN_A, "(port)a_0_WEN_A");
    sc_trace(mVcdFile, a_0_Din_A, "(port)a_0_Din_A");
    sc_trace(mVcdFile, a_0_Dout_A, "(port)a_0_Dout_A");
    sc_trace(mVcdFile, a_0_Clk_A, "(port)a_0_Clk_A");
    sc_trace(mVcdFile, a_0_Rst_A, "(port)a_0_Rst_A");
    sc_trace(mVcdFile, a_1_Addr_A, "(port)a_1_Addr_A");
    sc_trace(mVcdFile, a_1_EN_A, "(port)a_1_EN_A");
    sc_trace(mVcdFile, a_1_WEN_A, "(port)a_1_WEN_A");
    sc_trace(mVcdFile, a_1_Din_A, "(port)a_1_Din_A");
    sc_trace(mVcdFile, a_1_Dout_A, "(port)a_1_Dout_A");
    sc_trace(mVcdFile, a_1_Clk_A, "(port)a_1_Clk_A");
    sc_trace(mVcdFile, a_1_Rst_A, "(port)a_1_Rst_A");
    sc_trace(mVcdFile, a_2_Addr_A, "(port)a_2_Addr_A");
    sc_trace(mVcdFile, a_2_EN_A, "(port)a_2_EN_A");
    sc_trace(mVcdFile, a_2_WEN_A, "(port)a_2_WEN_A");
    sc_trace(mVcdFile, a_2_Din_A, "(port)a_2_Din_A");
    sc_trace(mVcdFile, a_2_Dout_A, "(port)a_2_Dout_A");
    sc_trace(mVcdFile, a_2_Clk_A, "(port)a_2_Clk_A");
    sc_trace(mVcdFile, a_2_Rst_A, "(port)a_2_Rst_A");
    sc_trace(mVcdFile, a_3_Addr_A, "(port)a_3_Addr_A");
    sc_trace(mVcdFile, a_3_EN_A, "(port)a_3_EN_A");
    sc_trace(mVcdFile, a_3_WEN_A, "(port)a_3_WEN_A");
    sc_trace(mVcdFile, a_3_Din_A, "(port)a_3_Din_A");
    sc_trace(mVcdFile, a_3_Dout_A, "(port)a_3_Dout_A");
    sc_trace(mVcdFile, a_3_Clk_A, "(port)a_3_Clk_A");
    sc_trace(mVcdFile, a_3_Rst_A, "(port)a_3_Rst_A");
    sc_trace(mVcdFile, b_0_Addr_A, "(port)b_0_Addr_A");
    sc_trace(mVcdFile, b_0_EN_A, "(port)b_0_EN_A");
    sc_trace(mVcdFile, b_0_WEN_A, "(port)b_0_WEN_A");
    sc_trace(mVcdFile, b_0_Din_A, "(port)b_0_Din_A");
    sc_trace(mVcdFile, b_0_Dout_A, "(port)b_0_Dout_A");
    sc_trace(mVcdFile, b_0_Clk_A, "(port)b_0_Clk_A");
    sc_trace(mVcdFile, b_0_Rst_A, "(port)b_0_Rst_A");
    sc_trace(mVcdFile, b_1_Addr_A, "(port)b_1_Addr_A");
    sc_trace(mVcdFile, b_1_EN_A, "(port)b_1_EN_A");
    sc_trace(mVcdFile, b_1_WEN_A, "(port)b_1_WEN_A");
    sc_trace(mVcdFile, b_1_Din_A, "(port)b_1_Din_A");
    sc_trace(mVcdFile, b_1_Dout_A, "(port)b_1_Dout_A");
    sc_trace(mVcdFile, b_1_Clk_A, "(port)b_1_Clk_A");
    sc_trace(mVcdFile, b_1_Rst_A, "(port)b_1_Rst_A");
    sc_trace(mVcdFile, b_2_Addr_A, "(port)b_2_Addr_A");
    sc_trace(mVcdFile, b_2_EN_A, "(port)b_2_EN_A");
    sc_trace(mVcdFile, b_2_WEN_A, "(port)b_2_WEN_A");
    sc_trace(mVcdFile, b_2_Din_A, "(port)b_2_Din_A");
    sc_trace(mVcdFile, b_2_Dout_A, "(port)b_2_Dout_A");
    sc_trace(mVcdFile, b_2_Clk_A, "(port)b_2_Clk_A");
    sc_trace(mVcdFile, b_2_Rst_A, "(port)b_2_Rst_A");
    sc_trace(mVcdFile, b_3_Addr_A, "(port)b_3_Addr_A");
    sc_trace(mVcdFile, b_3_EN_A, "(port)b_3_EN_A");
    sc_trace(mVcdFile, b_3_WEN_A, "(port)b_3_WEN_A");
    sc_trace(mVcdFile, b_3_Din_A, "(port)b_3_Din_A");
    sc_trace(mVcdFile, b_3_Dout_A, "(port)b_3_Dout_A");
    sc_trace(mVcdFile, b_3_Clk_A, "(port)b_3_Clk_A");
    sc_trace(mVcdFile, b_3_Rst_A, "(port)b_3_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_676, "indvar_flatten_reg_676");
    sc_trace(mVcdFile, i_reg_687, "i_reg_687");
    sc_trace(mVcdFile, j_reg_698, "j_reg_698");
    sc_trace(mVcdFile, grp_fu_710_p2, "grp_fu_710_p2");
    sc_trace(mVcdFile, reg_870, "reg_870");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_flatten_reg_1355, "exitcond_flatten_reg_1355");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, grp_fu_712_p2, "grp_fu_712_p2");
    sc_trace(mVcdFile, reg_874, "reg_874");
    sc_trace(mVcdFile, grp_fu_709_p2, "grp_fu_709_p2");
    sc_trace(mVcdFile, reg_878, "reg_878");
    sc_trace(mVcdFile, grp_fu_711_p2, "grp_fu_711_p2");
    sc_trace(mVcdFile, reg_882, "reg_882");
    sc_trace(mVcdFile, reg_886, "reg_886");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, reg_890, "reg_890");
    sc_trace(mVcdFile, reg_894, "reg_894");
    sc_trace(mVcdFile, reg_898, "reg_898");
    sc_trace(mVcdFile, reg_902, "reg_902");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, reg_906, "reg_906");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, exitcond_flatten_fu_946_p2, "exitcond_flatten_fu_946_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_952_p2, "indvar_flatten_next_fu_952_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_1359, "indvar_flatten_next_reg_1359");
    sc_trace(mVcdFile, j_mid2_fu_970_p3, "j_mid2_fu_970_p3");
    sc_trace(mVcdFile, j_mid2_reg_1364, "j_mid2_reg_1364");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364, "ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364");
    sc_trace(mVcdFile, tmp_mid2_v_fu_978_p3, "tmp_mid2_v_fu_978_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_1376, "tmp_mid2_v_reg_1376");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376, "ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376");
    sc_trace(mVcdFile, tmp_fu_986_p3, "tmp_fu_986_p3");
    sc_trace(mVcdFile, tmp_reg_1382, "tmp_reg_1382");
    sc_trace(mVcdFile, a_0_load_reg_1473, "a_0_load_reg_1473");
    sc_trace(mVcdFile, b_0_load_reg_1478, "b_0_load_reg_1478");
    sc_trace(mVcdFile, a_1_load_reg_1483, "a_1_load_reg_1483");
    sc_trace(mVcdFile, b_1_load_reg_1488, "b_1_load_reg_1488");
    sc_trace(mVcdFile, a_2_load_reg_1493, "a_2_load_reg_1493");
    sc_trace(mVcdFile, b_2_load_reg_1498, "b_2_load_reg_1498");
    sc_trace(mVcdFile, a_3_load_reg_1503, "a_3_load_reg_1503");
    sc_trace(mVcdFile, b_3_load_reg_1508, "b_3_load_reg_1508");
    sc_trace(mVcdFile, a_0_load_1_reg_1553, "a_0_load_1_reg_1553");
    sc_trace(mVcdFile, b_0_load_1_reg_1558, "b_0_load_1_reg_1558");
    sc_trace(mVcdFile, a_1_load_1_reg_1563, "a_1_load_1_reg_1563");
    sc_trace(mVcdFile, b_1_load_1_reg_1568, "b_1_load_1_reg_1568");
    sc_trace(mVcdFile, a_2_load_1_reg_1573, "a_2_load_1_reg_1573");
    sc_trace(mVcdFile, b_2_load_1_reg_1578, "b_2_load_1_reg_1578");
    sc_trace(mVcdFile, a_3_load_1_reg_1583, "a_3_load_1_reg_1583");
    sc_trace(mVcdFile, b_3_load_1_reg_1588, "b_3_load_1_reg_1588");
    sc_trace(mVcdFile, tmp_2_cast3_fu_1089_p1, "tmp_2_cast3_fu_1089_p1");
    sc_trace(mVcdFile, tmp_2_cast3_reg_1613, "tmp_2_cast3_reg_1613");
    sc_trace(mVcdFile, a_0_load_2_reg_1638, "a_0_load_2_reg_1638");
    sc_trace(mVcdFile, b_0_load_2_reg_1643, "b_0_load_2_reg_1643");
    sc_trace(mVcdFile, a_1_load_2_reg_1648, "a_1_load_2_reg_1648");
    sc_trace(mVcdFile, b_1_load_2_reg_1653, "b_1_load_2_reg_1653");
    sc_trace(mVcdFile, a_2_load_2_reg_1658, "a_2_load_2_reg_1658");
    sc_trace(mVcdFile, b_2_load_2_reg_1663, "b_2_load_2_reg_1663");
    sc_trace(mVcdFile, a_3_load_2_reg_1668, "a_3_load_2_reg_1668");
    sc_trace(mVcdFile, b_3_load_2_reg_1673, "b_3_load_2_reg_1673");
    sc_trace(mVcdFile, a_0_load_3_reg_1718, "a_0_load_3_reg_1718");
    sc_trace(mVcdFile, b_0_load_3_reg_1723, "b_0_load_3_reg_1723");
    sc_trace(mVcdFile, a_1_load_3_reg_1728, "a_1_load_3_reg_1728");
    sc_trace(mVcdFile, b_1_load_3_reg_1733, "b_1_load_3_reg_1733");
    sc_trace(mVcdFile, a_2_load_3_reg_1738, "a_2_load_3_reg_1738");
    sc_trace(mVcdFile, b_2_load_3_reg_1743, "b_2_load_3_reg_1743");
    sc_trace(mVcdFile, a_3_load_3_reg_1748, "a_3_load_3_reg_1748");
    sc_trace(mVcdFile, b_3_load_3_reg_1753, "b_3_load_3_reg_1753");
    sc_trace(mVcdFile, a_0_load_4_reg_1798, "a_0_load_4_reg_1798");
    sc_trace(mVcdFile, b_0_load_4_reg_1803, "b_0_load_4_reg_1803");
    sc_trace(mVcdFile, a_1_load_4_reg_1808, "a_1_load_4_reg_1808");
    sc_trace(mVcdFile, b_1_load_4_reg_1813, "b_1_load_4_reg_1813");
    sc_trace(mVcdFile, a_2_load_4_reg_1818, "a_2_load_4_reg_1818");
    sc_trace(mVcdFile, b_2_load_4_reg_1823, "b_2_load_4_reg_1823");
    sc_trace(mVcdFile, a_3_load_4_reg_1828, "a_3_load_4_reg_1828");
    sc_trace(mVcdFile, b_3_load_4_reg_1833, "b_3_load_4_reg_1833");
    sc_trace(mVcdFile, a_0_load_5_reg_1878, "a_0_load_5_reg_1878");
    sc_trace(mVcdFile, b_0_load_5_reg_1883, "b_0_load_5_reg_1883");
    sc_trace(mVcdFile, a_1_load_5_reg_1888, "a_1_load_5_reg_1888");
    sc_trace(mVcdFile, b_1_load_5_reg_1893, "b_1_load_5_reg_1893");
    sc_trace(mVcdFile, a_2_load_5_reg_1898, "a_2_load_5_reg_1898");
    sc_trace(mVcdFile, b_2_load_5_reg_1903, "b_2_load_5_reg_1903");
    sc_trace(mVcdFile, a_3_load_5_reg_1908, "a_3_load_5_reg_1908");
    sc_trace(mVcdFile, b_3_load_5_reg_1913, "b_3_load_5_reg_1913");
    sc_trace(mVcdFile, a_0_load_6_reg_1958, "a_0_load_6_reg_1958");
    sc_trace(mVcdFile, b_0_load_6_reg_1963, "b_0_load_6_reg_1963");
    sc_trace(mVcdFile, a_1_load_6_reg_1968, "a_1_load_6_reg_1968");
    sc_trace(mVcdFile, b_1_load_6_reg_1973, "b_1_load_6_reg_1973");
    sc_trace(mVcdFile, a_2_load_6_reg_1978, "a_2_load_6_reg_1978");
    sc_trace(mVcdFile, b_2_load_6_reg_1983, "b_2_load_6_reg_1983");
    sc_trace(mVcdFile, a_3_load_6_reg_1988, "a_3_load_6_reg_1988");
    sc_trace(mVcdFile, b_3_load_6_reg_1993, "b_3_load_6_reg_1993");
    sc_trace(mVcdFile, j_1_fu_1226_p2, "j_1_fu_1226_p2");
    sc_trace(mVcdFile, j_1_reg_1998, "j_1_reg_1998");
    sc_trace(mVcdFile, a_0_load_7_reg_2003, "a_0_load_7_reg_2003");
    sc_trace(mVcdFile, b_0_load_7_reg_2008, "b_0_load_7_reg_2008");
    sc_trace(mVcdFile, a_1_load_7_reg_2013, "a_1_load_7_reg_2013");
    sc_trace(mVcdFile, b_1_load_7_reg_2018, "b_1_load_7_reg_2018");
    sc_trace(mVcdFile, a_2_load_7_reg_2023, "a_2_load_7_reg_2023");
    sc_trace(mVcdFile, b_2_load_7_reg_2028, "b_2_load_7_reg_2028");
    sc_trace(mVcdFile, a_3_load_7_reg_2033, "a_3_load_7_reg_2033");
    sc_trace(mVcdFile, b_3_load_7_reg_2038, "b_3_load_7_reg_2038");
    sc_trace(mVcdFile, grp_fu_910_p2, "grp_fu_910_p2");
    sc_trace(mVcdFile, tmp4_reg_2043, "tmp4_reg_2043");
    sc_trace(mVcdFile, grp_fu_916_p2, "grp_fu_916_p2");
    sc_trace(mVcdFile, tmp11_reg_2048, "tmp11_reg_2048");
    sc_trace(mVcdFile, grp_fu_922_p2, "grp_fu_922_p2");
    sc_trace(mVcdFile, tmp26_reg_2053, "tmp26_reg_2053");
    sc_trace(mVcdFile, tmp5_reg_2058, "tmp5_reg_2058");
    sc_trace(mVcdFile, tmp12_reg_2063, "tmp12_reg_2063");
    sc_trace(mVcdFile, grp_fu_940_p2, "grp_fu_940_p2");
    sc_trace(mVcdFile, tmp18_reg_2068, "tmp18_reg_2068");
    sc_trace(mVcdFile, tmp27_reg_2073, "tmp27_reg_2073");
    sc_trace(mVcdFile, tmp_6_6_reg_2078, "tmp_6_6_reg_2078");
    sc_trace(mVcdFile, tmp_6_13_reg_2083, "tmp_6_13_reg_2083");
    sc_trace(mVcdFile, tmp_6_29_reg_2088, "tmp_6_29_reg_2088");
    sc_trace(mVcdFile, tmp_6_7_reg_2093, "tmp_6_7_reg_2093");
    sc_trace(mVcdFile, tmp_6_14_reg_2098, "tmp_6_14_reg_2098");
    sc_trace(mVcdFile, tmp_6_30_reg_2103, "tmp_6_30_reg_2103");
    sc_trace(mVcdFile, tmp2_fu_1251_p2, "tmp2_fu_1251_p2");
    sc_trace(mVcdFile, tmp2_reg_2108, "tmp2_reg_2108");
    sc_trace(mVcdFile, tmp9_fu_1277_p2, "tmp9_fu_1277_p2");
    sc_trace(mVcdFile, tmp9_reg_2113, "tmp9_reg_2113");
    sc_trace(mVcdFile, tmp16_fu_1314_p2, "tmp16_fu_1314_p2");
    sc_trace(mVcdFile, tmp16_reg_2118, "tmp16_reg_2118");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_680_p4, "indvar_flatten_phi_fu_680_p4");
    sc_trace(mVcdFile, i_phi_fu_691_p4, "i_phi_fu_691_p4");
    sc_trace(mVcdFile, j_phi_fu_702_p4, "j_phi_fu_702_p4");
    sc_trace(mVcdFile, tmp_3_fu_994_p1, "tmp_3_fu_994_p1");
    sc_trace(mVcdFile, tmp_2_fu_1002_p1, "tmp_2_fu_1002_p1");
    sc_trace(mVcdFile, tmp_5_fu_1015_p3, "tmp_5_fu_1015_p3");
    sc_trace(mVcdFile, tmp_21_cast_fu_1036_p1, "tmp_21_cast_fu_1036_p1");
    sc_trace(mVcdFile, tmp_8_fu_1049_p3, "tmp_8_fu_1049_p3");
    sc_trace(mVcdFile, tmp_20_fu_1061_p3, "tmp_20_fu_1061_p3");
    sc_trace(mVcdFile, tmp_s_fu_1077_p3, "tmp_s_fu_1077_p3");
    sc_trace(mVcdFile, tmp_23_cast_fu_1098_p1, "tmp_23_cast_fu_1098_p1");
    sc_trace(mVcdFile, tmp_11_fu_1111_p3, "tmp_11_fu_1111_p3");
    sc_trace(mVcdFile, tmp_22_fu_1123_p3, "tmp_22_fu_1123_p3");
    sc_trace(mVcdFile, tmp_13_fu_1139_p3, "tmp_13_fu_1139_p3");
    sc_trace(mVcdFile, tmp_25_cast_fu_1156_p1, "tmp_25_cast_fu_1156_p1");
    sc_trace(mVcdFile, tmp_15_fu_1169_p3, "tmp_15_fu_1169_p3");
    sc_trace(mVcdFile, tmp_24_fu_1181_p3, "tmp_24_fu_1181_p3");
    sc_trace(mVcdFile, tmp_17_fu_1197_p3, "tmp_17_fu_1197_p3");
    sc_trace(mVcdFile, tmp_27_cast_fu_1218_p1, "tmp_27_cast_fu_1218_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_1340_p1, "tmp_28_cast_fu_1340_p1");
    sc_trace(mVcdFile, a_0_Addr_A_orig, "a_0_Addr_A_orig");
    sc_trace(mVcdFile, b_0_Addr_A_orig, "b_0_Addr_A_orig");
    sc_trace(mVcdFile, a_1_Addr_A_orig, "a_1_Addr_A_orig");
    sc_trace(mVcdFile, b_1_Addr_A_orig, "b_1_Addr_A_orig");
    sc_trace(mVcdFile, a_2_Addr_A_orig, "a_2_Addr_A_orig");
    sc_trace(mVcdFile, b_2_Addr_A_orig, "b_2_Addr_A_orig");
    sc_trace(mVcdFile, a_3_Addr_A_orig, "a_3_Addr_A_orig");
    sc_trace(mVcdFile, b_3_Addr_A_orig, "b_3_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_709_p0, "grp_fu_709_p0");
    sc_trace(mVcdFile, grp_fu_709_p1, "grp_fu_709_p1");
    sc_trace(mVcdFile, grp_fu_710_p0, "grp_fu_710_p0");
    sc_trace(mVcdFile, grp_fu_710_p1, "grp_fu_710_p1");
    sc_trace(mVcdFile, grp_fu_711_p0, "grp_fu_711_p0");
    sc_trace(mVcdFile, grp_fu_711_p1, "grp_fu_711_p1");
    sc_trace(mVcdFile, grp_fu_712_p0, "grp_fu_712_p0");
    sc_trace(mVcdFile, grp_fu_712_p1, "grp_fu_712_p1");
    sc_trace(mVcdFile, grp_fu_934_p2, "grp_fu_934_p2");
    sc_trace(mVcdFile, grp_fu_928_p2, "grp_fu_928_p2");
    sc_trace(mVcdFile, exitcond_fu_964_p2, "exitcond_fu_964_p2");
    sc_trace(mVcdFile, i_1_fu_958_p2, "i_1_fu_958_p2");
    sc_trace(mVcdFile, tmp_4_fu_1010_p2, "tmp_4_fu_1010_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_1027_p1, "tmp_2_cast_fu_1027_p1");
    sc_trace(mVcdFile, tmp_19_fu_1030_p2, "tmp_19_fu_1030_p2");
    sc_trace(mVcdFile, tmp_7_fu_1044_p2, "tmp_7_fu_1044_p2");
    sc_trace(mVcdFile, tmp_9_fu_1072_p2, "tmp_9_fu_1072_p2");
    sc_trace(mVcdFile, tmp_21_fu_1092_p2, "tmp_21_fu_1092_p2");
    sc_trace(mVcdFile, tmp_10_fu_1106_p2, "tmp_10_fu_1106_p2");
    sc_trace(mVcdFile, tmp_12_fu_1134_p2, "tmp_12_fu_1134_p2");
    sc_trace(mVcdFile, tmp_23_fu_1151_p2, "tmp_23_fu_1151_p2");
    sc_trace(mVcdFile, tmp_14_fu_1164_p2, "tmp_14_fu_1164_p2");
    sc_trace(mVcdFile, tmp_16_fu_1192_p2, "tmp_16_fu_1192_p2");
    sc_trace(mVcdFile, tmp_2_cast4_fu_1209_p1, "tmp_2_cast4_fu_1209_p1");
    sc_trace(mVcdFile, tmp_25_fu_1212_p2, "tmp_25_fu_1212_p2");
    sc_trace(mVcdFile, tmp8_fu_1241_p2, "tmp8_fu_1241_p2");
    sc_trace(mVcdFile, tmp7_fu_1235_p2, "tmp7_fu_1235_p2");
    sc_trace(mVcdFile, tmp6_fu_1245_p2, "tmp6_fu_1245_p2");
    sc_trace(mVcdFile, tmp3_fu_1231_p2, "tmp3_fu_1231_p2");
    sc_trace(mVcdFile, tmp15_fu_1267_p2, "tmp15_fu_1267_p2");
    sc_trace(mVcdFile, tmp14_fu_1261_p2, "tmp14_fu_1261_p2");
    sc_trace(mVcdFile, tmp13_fu_1271_p2, "tmp13_fu_1271_p2");
    sc_trace(mVcdFile, tmp10_fu_1257_p2, "tmp10_fu_1257_p2");
    sc_trace(mVcdFile, tmp30_fu_1298_p2, "tmp30_fu_1298_p2");
    sc_trace(mVcdFile, tmp29_fu_1292_p2, "tmp29_fu_1292_p2");
    sc_trace(mVcdFile, tmp28_fu_1302_p2, "tmp28_fu_1302_p2");
    sc_trace(mVcdFile, tmp25_fu_1288_p2, "tmp25_fu_1288_p2");
    sc_trace(mVcdFile, tmp24_fu_1308_p2, "tmp24_fu_1308_p2");
    sc_trace(mVcdFile, tmp17_fu_1283_p2, "tmp17_fu_1283_p2");
    sc_trace(mVcdFile, tmp_18_fu_1320_p3, "tmp_18_fu_1320_p3");
    sc_trace(mVcdFile, tmp_2_cast5_fu_1331_p1, "tmp_2_cast5_fu_1331_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_1327_p1, "tmp_20_cast_fu_1327_p1");
    sc_trace(mVcdFile, tmp_26_fu_1334_p2, "tmp_26_fu_1334_p2");
    sc_trace(mVcdFile, tmp1_fu_1345_p2, "tmp1_fu_1345_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_mul_32sdEe_U1;
    delete matmul_hw_mul_32sdEe_U2;
    delete matmul_hw_mul_32sdEe_U3;
    delete matmul_hw_mul_32sdEe_U4;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_946_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_reg_687 = tmp_mid2_v_reg_1376.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_687 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_reg_676 = indvar_flatten_next_reg_1359.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_676 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_reg_698 = j_1_reg_1998.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_698 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        a_0_load_1_reg_1553 = a_0_Dout_A.read();
        a_1_load_1_reg_1563 = a_1_Dout_A.read();
        a_2_load_1_reg_1573 = a_2_Dout_A.read();
        a_3_load_1_reg_1583 = a_3_Dout_A.read();
        b_0_load_1_reg_1558 = b_0_Dout_A.read();
        b_1_load_1_reg_1568 = b_1_Dout_A.read();
        b_2_load_1_reg_1578 = b_2_Dout_A.read();
        b_3_load_1_reg_1588 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        a_0_load_2_reg_1638 = a_0_Dout_A.read();
        a_1_load_2_reg_1648 = a_1_Dout_A.read();
        a_2_load_2_reg_1658 = a_2_Dout_A.read();
        a_3_load_2_reg_1668 = a_3_Dout_A.read();
        b_0_load_2_reg_1643 = b_0_Dout_A.read();
        b_1_load_2_reg_1653 = b_1_Dout_A.read();
        b_2_load_2_reg_1663 = b_2_Dout_A.read();
        b_3_load_2_reg_1673 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        a_0_load_3_reg_1718 = a_0_Dout_A.read();
        a_1_load_3_reg_1728 = a_1_Dout_A.read();
        a_2_load_3_reg_1738 = a_2_Dout_A.read();
        a_3_load_3_reg_1748 = a_3_Dout_A.read();
        b_0_load_3_reg_1723 = b_0_Dout_A.read();
        b_1_load_3_reg_1733 = b_1_Dout_A.read();
        b_2_load_3_reg_1743 = b_2_Dout_A.read();
        b_3_load_3_reg_1753 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        a_0_load_4_reg_1798 = a_0_Dout_A.read();
        a_1_load_4_reg_1808 = a_1_Dout_A.read();
        a_2_load_4_reg_1818 = a_2_Dout_A.read();
        a_3_load_4_reg_1828 = a_3_Dout_A.read();
        b_0_load_4_reg_1803 = b_0_Dout_A.read();
        b_1_load_4_reg_1813 = b_1_Dout_A.read();
        b_2_load_4_reg_1823 = b_2_Dout_A.read();
        b_3_load_4_reg_1833 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        a_0_load_5_reg_1878 = a_0_Dout_A.read();
        a_1_load_5_reg_1888 = a_1_Dout_A.read();
        a_2_load_5_reg_1898 = a_2_Dout_A.read();
        a_3_load_5_reg_1908 = a_3_Dout_A.read();
        b_0_load_5_reg_1883 = b_0_Dout_A.read();
        b_1_load_5_reg_1893 = b_1_Dout_A.read();
        b_2_load_5_reg_1903 = b_2_Dout_A.read();
        b_3_load_5_reg_1913 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0))) {
        a_0_load_6_reg_1958 = a_0_Dout_A.read();
        a_1_load_6_reg_1968 = a_1_Dout_A.read();
        a_2_load_6_reg_1978 = a_2_Dout_A.read();
        a_3_load_6_reg_1988 = a_3_Dout_A.read();
        b_0_load_6_reg_1963 = b_0_Dout_A.read();
        b_1_load_6_reg_1973 = b_1_Dout_A.read();
        b_2_load_6_reg_1983 = b_2_Dout_A.read();
        b_3_load_6_reg_1993 = b_3_Dout_A.read();
        j_1_reg_1998 = j_1_fu_1226_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        a_0_load_7_reg_2003 = a_0_Dout_A.read();
        a_1_load_7_reg_2013 = a_1_Dout_A.read();
        a_2_load_7_reg_2023 = a_2_Dout_A.read();
        a_3_load_7_reg_2033 = a_3_Dout_A.read();
        b_0_load_7_reg_2008 = b_0_Dout_A.read();
        b_1_load_7_reg_2018 = b_1_Dout_A.read();
        b_2_load_7_reg_2028 = b_2_Dout_A.read();
        b_3_load_7_reg_2038 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        a_0_load_reg_1473 = a_0_Dout_A.read();
        a_1_load_reg_1483 = a_1_Dout_A.read();
        a_2_load_reg_1493 = a_2_Dout_A.read();
        a_3_load_reg_1503 = a_3_Dout_A.read();
        b_0_load_reg_1478 = b_0_Dout_A.read();
        b_1_load_reg_1488 = b_1_Dout_A.read();
        b_2_load_reg_1498 = b_2_Dout_A.read();
        b_3_load_reg_1508 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355 = exitcond_flatten_reg_1355.read();
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364 = j_mid2_reg_1364.read();
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 = tmp_mid2_v_reg_1376.read();
        exitcond_flatten_reg_1355 = exitcond_flatten_fu_946_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_next_reg_1359 = indvar_flatten_next_fu_952_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_946_p2.read()))) {
        j_mid2_reg_1364 = j_mid2_fu_970_p3.read();
        tmp_reg_1382 = tmp_fu_986_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        reg_870 = grp_fu_710_p2.read();
        reg_874 = grp_fu_712_p2.read();
        reg_882 = grp_fu_711_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        reg_878 = grp_fu_709_p2.read();
    }
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())))) {
        reg_886 = grp_fu_710_p2.read();
        reg_890 = grp_fu_712_p2.read();
        reg_898 = grp_fu_711_p2.read();
    }
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())))) {
        reg_894 = grp_fu_709_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())))) {
        reg_902 = grp_fu_709_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        reg_906 = grp_fu_709_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()))) {
        tmp11_reg_2048 = grp_fu_916_p2.read();
        tmp26_reg_2053 = grp_fu_922_p2.read();
        tmp4_reg_2043 = grp_fu_910_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        tmp12_reg_2063 = grp_fu_916_p2.read();
        tmp18_reg_2068 = grp_fu_940_p2.read();
        tmp27_reg_2073 = grp_fu_922_p2.read();
        tmp5_reg_2058 = grp_fu_910_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()))) {
        tmp16_reg_2118 = tmp16_fu_1314_p2.read();
        tmp2_reg_2108 = tmp2_fu_1251_p2.read();
        tmp9_reg_2113 = tmp9_fu_1277_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        tmp_2_cast3_reg_1613 = tmp_2_cast3_fu_1089_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_6_13_reg_2083 = grp_fu_712_p2.read();
        tmp_6_29_reg_2088 = grp_fu_711_p2.read();
        tmp_6_6_reg_2078 = grp_fu_710_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        tmp_6_14_reg_2098 = grp_fu_712_p2.read();
        tmp_6_30_reg_2103 = grp_fu_711_p2.read();
        tmp_6_7_reg_2093 = grp_fu_710_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_946_p2.read()))) {
        tmp_mid2_v_reg_1376 = tmp_mid2_v_fu_978_p3.read();
    }
}

void matmul_hw::thread_a_0_Addr_A() {
    a_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_1197_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_1169_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_1139_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_1111_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_1077_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_1049_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_1015_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_994_p1.read());
        } else {
            a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_0_Clk_A() {
    a_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_0_Din_A() {
    a_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_0_EN_A = ap_const_logic_1;
    } else {
        a_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_0_Rst_A() {
    a_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_0_WEN_A() {
    a_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_1_Addr_A() {
    a_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_1197_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_1169_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_1139_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_1111_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_1077_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_1049_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_1015_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_994_p1.read());
        } else {
            a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_1_Clk_A() {
    a_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_1_Din_A() {
    a_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_1_EN_A = ap_const_logic_1;
    } else {
        a_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_1_Rst_A() {
    a_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_1_WEN_A() {
    a_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_2_Addr_A() {
    a_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_1197_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_1169_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_1139_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_1111_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_1077_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_1049_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_1015_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_994_p1.read());
        } else {
            a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_2_Clk_A() {
    a_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_2_Din_A() {
    a_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_2_EN_A = ap_const_logic_1;
    } else {
        a_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_2_Rst_A() {
    a_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_2_WEN_A() {
    a_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_3_Addr_A() {
    a_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_1197_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_1169_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_1139_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_1111_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_1077_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_1049_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_1015_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_994_p1.read());
        } else {
            a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_3_Clk_A() {
    a_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_3_Din_A() {
    a_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_3_EN_A = ap_const_logic_1;
    } else {
        a_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_3_Rst_A() {
    a_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_3_WEN_A() {
    a_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read().range(7, 7);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read().range(8, 8);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(9, 9);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Addr_A() {
    b_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_1218_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_1181_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_1156_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_1123_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_1098_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_1061_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_1036_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_1002_p1.read());
        } else {
            b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_0_Clk_A() {
    b_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_0_Din_A() {
    b_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_0_EN_A = ap_const_logic_1;
    } else {
        b_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Rst_A() {
    b_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_0_WEN_A() {
    b_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_1_Addr_A() {
    b_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_1218_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_1181_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_1156_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_1123_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_1098_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_1061_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_1036_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_1002_p1.read());
        } else {
            b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_1_Clk_A() {
    b_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_1_Din_A() {
    b_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_1_EN_A = ap_const_logic_1;
    } else {
        b_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_1_Rst_A() {
    b_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_1_WEN_A() {
    b_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_2_Addr_A() {
    b_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_1218_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_1181_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_1156_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_1123_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_1098_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_1061_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_1036_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_1002_p1.read());
        } else {
            b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_2_Clk_A() {
    b_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_2_Din_A() {
    b_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_2_EN_A = ap_const_logic_1;
    } else {
        b_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_2_Rst_A() {
    b_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_2_WEN_A() {
    b_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_3_Addr_A() {
    b_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_1218_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_1181_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_1156_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_1123_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_1098_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_1061_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_1036_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_1002_p1.read());
        } else {
            b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_3_Clk_A() {
    b_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_3_Din_A() {
    b_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_3_EN_A = ap_const_logic_1;
    } else {
        b_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_3_Rst_A() {
    b_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_3_WEN_A() {
    b_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_28_cast_fu_1340_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = (!tmp16_reg_2118.read().is_01() || !tmp1_fu_1345_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp16_reg_2118.read()) + sc_biguint<32>(tmp1_fu_1345_p2.read()));
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_946_p2() {
    exitcond_flatten_fu_946_p2 = (!indvar_flatten_phi_fu_680_p4.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_680_p4.read() == ap_const_lv11_400);
}

void matmul_hw::thread_exitcond_fu_964_p2() {
    exitcond_fu_964_p2 = (!j_phi_fu_702_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_702_p4.read() == ap_const_lv6_20);
}

void matmul_hw::thread_grp_fu_709_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_709_p0 = a_2_load_7_reg_2023.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_709_p0 = a_2_load_6_reg_1978.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_709_p0 = a_2_load_5_reg_1898.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_709_p0 = a_2_load_4_reg_1818.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_709_p0 = a_2_load_3_reg_1738.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_709_p0 = a_2_load_2_reg_1658.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_709_p0 = a_2_load_1_reg_1573.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_709_p0 = a_2_load_reg_1493.read();
    } else {
        grp_fu_709_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_709_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_709_p1 = b_2_load_7_reg_2028.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_709_p1 = b_2_load_6_reg_1983.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_709_p1 = b_2_load_5_reg_1903.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_709_p1 = b_2_load_4_reg_1823.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_709_p1 = b_2_load_3_reg_1743.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_709_p1 = b_2_load_2_reg_1663.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_709_p1 = b_2_load_1_reg_1578.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_709_p1 = b_2_load_reg_1498.read();
    } else {
        grp_fu_709_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_710_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_710_p0 = a_0_load_7_reg_2003.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_710_p0 = a_0_load_6_reg_1958.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_710_p0 = a_0_load_5_reg_1878.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_710_p0 = a_0_load_4_reg_1798.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_710_p0 = a_0_load_3_reg_1718.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_710_p0 = a_0_load_2_reg_1638.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_710_p0 = a_0_load_1_reg_1553.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_710_p0 = a_0_load_reg_1473.read();
    } else {
        grp_fu_710_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_710_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_710_p1 = b_0_load_7_reg_2008.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_710_p1 = b_0_load_6_reg_1963.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_710_p1 = b_0_load_5_reg_1883.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_710_p1 = b_0_load_4_reg_1803.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_710_p1 = b_0_load_3_reg_1723.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_710_p1 = b_0_load_2_reg_1643.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_710_p1 = b_0_load_1_reg_1558.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_710_p1 = b_0_load_reg_1478.read();
    } else {
        grp_fu_710_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_711_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_711_p0 = a_3_load_7_reg_2033.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_711_p0 = a_3_load_6_reg_1988.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_711_p0 = a_3_load_5_reg_1908.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_711_p0 = a_3_load_4_reg_1828.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_711_p0 = a_3_load_3_reg_1748.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_711_p0 = a_3_load_2_reg_1668.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_711_p0 = a_3_load_1_reg_1583.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_711_p0 = a_3_load_reg_1503.read();
    } else {
        grp_fu_711_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_711_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_711_p1 = b_3_load_7_reg_2038.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_711_p1 = b_3_load_6_reg_1993.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_711_p1 = b_3_load_5_reg_1913.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_711_p1 = b_3_load_4_reg_1833.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_711_p1 = b_3_load_3_reg_1753.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_711_p1 = b_3_load_2_reg_1673.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_711_p1 = b_3_load_1_reg_1588.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_711_p1 = b_3_load_reg_1508.read();
    } else {
        grp_fu_711_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_712_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_712_p0 = a_1_load_7_reg_2013.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_712_p0 = a_1_load_6_reg_1968.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_712_p0 = a_1_load_5_reg_1888.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_712_p0 = a_1_load_4_reg_1808.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_712_p0 = a_1_load_3_reg_1728.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_712_p0 = a_1_load_2_reg_1648.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_712_p0 = a_1_load_1_reg_1563.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_712_p0 = a_1_load_reg_1483.read();
    } else {
        grp_fu_712_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_712_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_712_p1 = b_1_load_7_reg_2018.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_712_p1 = b_1_load_6_reg_1973.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_712_p1 = b_1_load_5_reg_1893.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_712_p1 = b_1_load_4_reg_1813.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_712_p1 = b_1_load_3_reg_1733.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_712_p1 = b_1_load_2_reg_1653.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_712_p1 = b_1_load_1_reg_1568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_712_p1 = b_1_load_reg_1488.read();
    } else {
        grp_fu_712_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_910_p2() {
    grp_fu_910_p2 = (!reg_870.read().is_01() || !reg_886.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_870.read()) + sc_biguint<32>(reg_886.read()));
}

void matmul_hw::thread_grp_fu_916_p2() {
    grp_fu_916_p2 = (!reg_874.read().is_01() || !reg_890.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_874.read()) + sc_biguint<32>(reg_890.read()));
}

void matmul_hw::thread_grp_fu_922_p2() {
    grp_fu_922_p2 = (!reg_882.read().is_01() || !reg_898.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_882.read()) + sc_biguint<32>(reg_898.read()));
}

void matmul_hw::thread_grp_fu_928_p2() {
    grp_fu_928_p2 = (!reg_878.read().is_01() || !reg_894.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_878.read()) + sc_biguint<32>(reg_894.read()));
}

void matmul_hw::thread_grp_fu_934_p2() {
    grp_fu_934_p2 = (!reg_902.read().is_01() || !reg_906.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_902.read()) + sc_biguint<32>(reg_906.read()));
}

void matmul_hw::thread_grp_fu_940_p2() {
    grp_fu_940_p2 = (!grp_fu_934_p2.read().is_01() || !grp_fu_928_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_934_p2.read()) + sc_biguint<32>(grp_fu_928_p2.read()));
}

void matmul_hw::thread_i_1_fu_958_p2() {
    i_1_fu_958_p2 = (!i_phi_fu_691_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_phi_fu_691_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matmul_hw::thread_i_phi_fu_691_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_phi_fu_691_p4 = tmp_mid2_v_reg_1376.read();
    } else {
        i_phi_fu_691_p4 = i_reg_687.read();
    }
}

void matmul_hw::thread_indvar_flatten_next_fu_952_p2() {
    indvar_flatten_next_fu_952_p2 = (!indvar_flatten_phi_fu_680_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_flatten_phi_fu_680_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void matmul_hw::thread_indvar_flatten_phi_fu_680_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_phi_fu_680_p4 = indvar_flatten_next_reg_1359.read();
    } else {
        indvar_flatten_phi_fu_680_p4 = indvar_flatten_reg_676.read();
    }
}

void matmul_hw::thread_j_1_fu_1226_p2() {
    j_1_fu_1226_p2 = (!j_mid2_reg_1364.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_mid2_reg_1364.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matmul_hw::thread_j_mid2_fu_970_p3() {
    j_mid2_fu_970_p3 = (!exitcond_fu_964_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_964_p2.read()[0].to_bool())? ap_const_lv6_0: j_phi_fu_702_p4.read());
}

void matmul_hw::thread_j_phi_fu_702_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_1355.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_phi_fu_702_p4 = j_1_reg_1998.read();
    } else {
        j_phi_fu_702_p4 = j_reg_698.read();
    }
}

void matmul_hw::thread_tmp10_fu_1257_p2() {
    tmp10_fu_1257_p2 = (!tmp12_reg_2063.read().is_01() || !tmp11_reg_2048.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp12_reg_2063.read()) + sc_biguint<32>(tmp11_reg_2048.read()));
}

void matmul_hw::thread_tmp13_fu_1271_p2() {
    tmp13_fu_1271_p2 = (!tmp15_fu_1267_p2.read().is_01() || !tmp14_fu_1261_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp15_fu_1267_p2.read()) + sc_biguint<32>(tmp14_fu_1261_p2.read()));
}

void matmul_hw::thread_tmp14_fu_1261_p2() {
    tmp14_fu_1261_p2 = (!reg_874.read().is_01() || !reg_890.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_874.read()) + sc_biguint<32>(reg_890.read()));
}

void matmul_hw::thread_tmp15_fu_1267_p2() {
    tmp15_fu_1267_p2 = (!tmp_6_13_reg_2083.read().is_01() || !tmp_6_14_reg_2098.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_13_reg_2083.read()) + sc_biguint<32>(tmp_6_14_reg_2098.read()));
}

void matmul_hw::thread_tmp16_fu_1314_p2() {
    tmp16_fu_1314_p2 = (!tmp24_fu_1308_p2.read().is_01() || !tmp17_fu_1283_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp24_fu_1308_p2.read()) + sc_biguint<32>(tmp17_fu_1283_p2.read()));
}

void matmul_hw::thread_tmp17_fu_1283_p2() {
    tmp17_fu_1283_p2 = (!grp_fu_940_p2.read().is_01() || !tmp18_reg_2068.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_940_p2.read()) + sc_biguint<32>(tmp18_reg_2068.read()));
}

void matmul_hw::thread_tmp1_fu_1345_p2() {
    tmp1_fu_1345_p2 = (!tmp9_reg_2113.read().is_01() || !tmp2_reg_2108.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp9_reg_2113.read()) + sc_biguint<32>(tmp2_reg_2108.read()));
}

void matmul_hw::thread_tmp24_fu_1308_p2() {
    tmp24_fu_1308_p2 = (!tmp28_fu_1302_p2.read().is_01() || !tmp25_fu_1288_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp28_fu_1302_p2.read()) + sc_biguint<32>(tmp25_fu_1288_p2.read()));
}

void matmul_hw::thread_tmp25_fu_1288_p2() {
    tmp25_fu_1288_p2 = (!tmp27_reg_2073.read().is_01() || !tmp26_reg_2053.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp27_reg_2073.read()) + sc_biguint<32>(tmp26_reg_2053.read()));
}

void matmul_hw::thread_tmp28_fu_1302_p2() {
    tmp28_fu_1302_p2 = (!tmp30_fu_1298_p2.read().is_01() || !tmp29_fu_1292_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp30_fu_1298_p2.read()) + sc_biguint<32>(tmp29_fu_1292_p2.read()));
}

void matmul_hw::thread_tmp29_fu_1292_p2() {
    tmp29_fu_1292_p2 = (!reg_882.read().is_01() || !reg_898.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_882.read()) + sc_biguint<32>(reg_898.read()));
}

void matmul_hw::thread_tmp2_fu_1251_p2() {
    tmp2_fu_1251_p2 = (!tmp6_fu_1245_p2.read().is_01() || !tmp3_fu_1231_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_fu_1245_p2.read()) + sc_biguint<32>(tmp3_fu_1231_p2.read()));
}

void matmul_hw::thread_tmp30_fu_1298_p2() {
    tmp30_fu_1298_p2 = (!tmp_6_29_reg_2088.read().is_01() || !tmp_6_30_reg_2103.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_29_reg_2088.read()) + sc_biguint<32>(tmp_6_30_reg_2103.read()));
}

void matmul_hw::thread_tmp3_fu_1231_p2() {
    tmp3_fu_1231_p2 = (!tmp5_reg_2058.read().is_01() || !tmp4_reg_2043.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp5_reg_2058.read()) + sc_biguint<32>(tmp4_reg_2043.read()));
}

void matmul_hw::thread_tmp6_fu_1245_p2() {
    tmp6_fu_1245_p2 = (!tmp8_fu_1241_p2.read().is_01() || !tmp7_fu_1235_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_1241_p2.read()) + sc_biguint<32>(tmp7_fu_1235_p2.read()));
}

void matmul_hw::thread_tmp7_fu_1235_p2() {
    tmp7_fu_1235_p2 = (!reg_870.read().is_01() || !reg_886.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_870.read()) + sc_biguint<32>(reg_886.read()));
}

void matmul_hw::thread_tmp8_fu_1241_p2() {
    tmp8_fu_1241_p2 = (!tmp_6_6_reg_2078.read().is_01() || !tmp_6_7_reg_2093.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_6_reg_2078.read()) + sc_biguint<32>(tmp_6_7_reg_2093.read()));
}

void matmul_hw::thread_tmp9_fu_1277_p2() {
    tmp9_fu_1277_p2 = (!tmp13_fu_1271_p2.read().is_01() || !tmp10_fu_1257_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp13_fu_1271_p2.read()) + sc_biguint<32>(tmp10_fu_1257_p2.read()));
}

void matmul_hw::thread_tmp_10_fu_1106_p2() {
    tmp_10_fu_1106_p2 = (tmp_reg_1382.read() | ap_const_lv9_4);
}

void matmul_hw::thread_tmp_11_fu_1111_p3() {
    tmp_11_fu_1111_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_10_fu_1106_p2.read());
}

void matmul_hw::thread_tmp_12_fu_1134_p2() {
    tmp_12_fu_1134_p2 = (tmp_reg_1382.read() | ap_const_lv9_5);
}

void matmul_hw::thread_tmp_13_fu_1139_p3() {
    tmp_13_fu_1139_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_12_fu_1134_p2.read());
}

void matmul_hw::thread_tmp_14_fu_1164_p2() {
    tmp_14_fu_1164_p2 = (tmp_reg_1382.read() | ap_const_lv9_6);
}

void matmul_hw::thread_tmp_15_fu_1169_p3() {
    tmp_15_fu_1169_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_14_fu_1164_p2.read());
}

void matmul_hw::thread_tmp_16_fu_1192_p2() {
    tmp_16_fu_1192_p2 = (tmp_reg_1382.read() | ap_const_lv9_7);
}

void matmul_hw::thread_tmp_17_fu_1197_p3() {
    tmp_17_fu_1197_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_16_fu_1192_p2.read());
}

void matmul_hw::thread_tmp_18_fu_1320_p3() {
    tmp_18_fu_1320_p3 = esl_concat<6,5>(ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376.read(), ap_const_lv5_0);
}

void matmul_hw::thread_tmp_19_fu_1030_p2() {
    tmp_19_fu_1030_p2 = (!tmp_2_cast_fu_1027_p1.read().is_01() || !ap_const_lv7_20.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast_fu_1027_p1.read()) + sc_biguint<7>(ap_const_lv7_20));
}

void matmul_hw::thread_tmp_20_cast_fu_1327_p1() {
    tmp_20_cast_fu_1327_p1 = esl_zext<12,11>(tmp_18_fu_1320_p3.read());
}

void matmul_hw::thread_tmp_20_fu_1061_p3() {
    tmp_20_fu_1061_p3 = esl_concat<58,6>(ap_const_lv58_1, j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_21_cast_fu_1036_p1() {
    tmp_21_cast_fu_1036_p1 = esl_zext<64,7>(tmp_19_fu_1030_p2.read());
}

void matmul_hw::thread_tmp_21_fu_1092_p2() {
    tmp_21_fu_1092_p2 = (!tmp_2_cast3_fu_1089_p1.read().is_01() || !ap_const_lv8_60.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast3_fu_1089_p1.read()) + sc_biguint<8>(ap_const_lv8_60));
}

void matmul_hw::thread_tmp_22_fu_1123_p3() {
    tmp_22_fu_1123_p3 = esl_concat<58,6>(ap_const_lv58_2, j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_23_cast_fu_1098_p1() {
    tmp_23_cast_fu_1098_p1 = esl_zext<64,8>(tmp_21_fu_1092_p2.read());
}

void matmul_hw::thread_tmp_23_fu_1151_p2() {
    tmp_23_fu_1151_p2 = (!tmp_2_cast3_reg_1613.read().is_01() || !ap_const_lv8_A0.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast3_reg_1613.read()) + sc_bigint<8>(ap_const_lv8_A0));
}

void matmul_hw::thread_tmp_24_fu_1181_p3() {
    tmp_24_fu_1181_p3 = esl_concat<58,6>(ap_const_lv58_3, j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_25_cast_fu_1156_p1() {
    tmp_25_cast_fu_1156_p1 = esl_zext<64,8>(tmp_23_fu_1151_p2.read());
}

void matmul_hw::thread_tmp_25_fu_1212_p2() {
    tmp_25_fu_1212_p2 = (!tmp_2_cast4_fu_1209_p1.read().is_01() || !ap_const_lv9_E0.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_2_cast4_fu_1209_p1.read()) + sc_biguint<9>(ap_const_lv9_E0));
}

void matmul_hw::thread_tmp_26_fu_1334_p2() {
    tmp_26_fu_1334_p2 = (!tmp_2_cast5_fu_1331_p1.read().is_01() || !tmp_20_cast_fu_1327_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_2_cast5_fu_1331_p1.read()) + sc_biguint<12>(tmp_20_cast_fu_1327_p1.read()));
}

void matmul_hw::thread_tmp_27_cast_fu_1218_p1() {
    tmp_27_cast_fu_1218_p1 = esl_zext<64,9>(tmp_25_fu_1212_p2.read());
}

void matmul_hw::thread_tmp_28_cast_fu_1340_p1() {
    tmp_28_cast_fu_1340_p1 = esl_zext<64,12>(tmp_26_fu_1334_p2.read());
}

void matmul_hw::thread_tmp_2_cast3_fu_1089_p1() {
    tmp_2_cast3_fu_1089_p1 = esl_zext<8,6>(j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_1209_p1() {
    tmp_2_cast4_fu_1209_p1 = esl_zext<9,6>(j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_2_cast5_fu_1331_p1() {
    tmp_2_cast5_fu_1331_p1 = esl_zext<12,6>(ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_2_cast_fu_1027_p1() {
    tmp_2_cast_fu_1027_p1 = esl_zext<7,6>(j_mid2_reg_1364.read());
}

void matmul_hw::thread_tmp_2_fu_1002_p1() {
    tmp_2_fu_1002_p1 = esl_zext<64,6>(j_mid2_fu_970_p3.read());
}

void matmul_hw::thread_tmp_3_fu_994_p1() {
    tmp_3_fu_994_p1 = esl_zext<64,9>(tmp_fu_986_p3.read());
}

void matmul_hw::thread_tmp_4_fu_1010_p2() {
    tmp_4_fu_1010_p2 = (tmp_reg_1382.read() | ap_const_lv9_1);
}

void matmul_hw::thread_tmp_5_fu_1015_p3() {
    tmp_5_fu_1015_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_4_fu_1010_p2.read());
}

void matmul_hw::thread_tmp_7_fu_1044_p2() {
    tmp_7_fu_1044_p2 = (tmp_reg_1382.read() | ap_const_lv9_2);
}

void matmul_hw::thread_tmp_8_fu_1049_p3() {
    tmp_8_fu_1049_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_7_fu_1044_p2.read());
}

void matmul_hw::thread_tmp_9_fu_1072_p2() {
    tmp_9_fu_1072_p2 = (tmp_reg_1382.read() | ap_const_lv9_3);
}

void matmul_hw::thread_tmp_fu_986_p3() {
    tmp_fu_986_p3 = esl_concat<6,3>(tmp_mid2_v_fu_978_p3.read(), ap_const_lv3_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_978_p3() {
    tmp_mid2_v_fu_978_p3 = (!exitcond_fu_964_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_fu_964_p2.read()[0].to_bool())? i_1_fu_958_p2.read(): i_phi_fu_691_p4.read());
}

void matmul_hw::thread_tmp_s_fu_1077_p3() {
    tmp_s_fu_1077_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_9_fu_1072_p2.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_946_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_946_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Addr_A\" :  \"" << a_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_EN_A\" :  \"" << a_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_WEN_A\" :  \"" << a_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Din_A\" :  \"" << a_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_Dout_A\" :  \"" << a_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Clk_A\" :  \"" << a_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Rst_A\" :  \"" << a_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Addr_A\" :  \"" << a_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_EN_A\" :  \"" << a_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_WEN_A\" :  \"" << a_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Din_A\" :  \"" << a_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_Dout_A\" :  \"" << a_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Clk_A\" :  \"" << a_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Rst_A\" :  \"" << a_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Addr_A\" :  \"" << a_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_EN_A\" :  \"" << a_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_WEN_A\" :  \"" << a_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Din_A\" :  \"" << a_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_2_Dout_A\" :  \"" << a_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Clk_A\" :  \"" << a_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Rst_A\" :  \"" << a_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Addr_A\" :  \"" << a_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_EN_A\" :  \"" << a_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_WEN_A\" :  \"" << a_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Din_A\" :  \"" << a_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_3_Dout_A\" :  \"" << a_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Clk_A\" :  \"" << a_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Rst_A\" :  \"" << a_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Addr_A\" :  \"" << b_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_EN_A\" :  \"" << b_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_WEN_A\" :  \"" << b_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Din_A\" :  \"" << b_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_Dout_A\" :  \"" << b_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Clk_A\" :  \"" << b_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Rst_A\" :  \"" << b_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Addr_A\" :  \"" << b_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_EN_A\" :  \"" << b_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_WEN_A\" :  \"" << b_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Din_A\" :  \"" << b_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_Dout_A\" :  \"" << b_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Clk_A\" :  \"" << b_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Rst_A\" :  \"" << b_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Addr_A\" :  \"" << b_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_EN_A\" :  \"" << b_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_WEN_A\" :  \"" << b_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Din_A\" :  \"" << b_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_2_Dout_A\" :  \"" << b_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Clk_A\" :  \"" << b_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Rst_A\" :  \"" << b_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Addr_A\" :  \"" << b_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_EN_A\" :  \"" << b_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_WEN_A\" :  \"" << b_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Din_A\" :  \"" << b_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_3_Dout_A\" :  \"" << b_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Clk_A\" :  \"" << b_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Rst_A\" :  \"" << b_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

