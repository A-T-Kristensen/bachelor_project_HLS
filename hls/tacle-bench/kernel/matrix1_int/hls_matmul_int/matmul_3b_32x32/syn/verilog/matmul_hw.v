// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.680000,HLS_SYN_LAT=32778,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=888,HLS_SYN_LUT=1669}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        b_Addr_A,
        b_EN_A,
        b_WEN_A,
        b_Din_A,
        b_Dout_A,
        b_Clk_A,
        b_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 34'b1;
parameter    ap_ST_fsm_pp0_stage0 = 34'b10;
parameter    ap_ST_fsm_pp0_stage1 = 34'b100;
parameter    ap_ST_fsm_pp0_stage2 = 34'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 34'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 34'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 34'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 34'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 34'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 34'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 34'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 34'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 34'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 34'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 34'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 34'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 34'b10000000000000000;
parameter    ap_ST_fsm_pp0_stage16 = 34'b100000000000000000;
parameter    ap_ST_fsm_pp0_stage17 = 34'b1000000000000000000;
parameter    ap_ST_fsm_pp0_stage18 = 34'b10000000000000000000;
parameter    ap_ST_fsm_pp0_stage19 = 34'b100000000000000000000;
parameter    ap_ST_fsm_pp0_stage20 = 34'b1000000000000000000000;
parameter    ap_ST_fsm_pp0_stage21 = 34'b10000000000000000000000;
parameter    ap_ST_fsm_pp0_stage22 = 34'b100000000000000000000000;
parameter    ap_ST_fsm_pp0_stage23 = 34'b1000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage24 = 34'b10000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage25 = 34'b100000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage26 = 34'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage27 = 34'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage28 = 34'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage29 = 34'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage30 = 34'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage31 = 34'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 34'b1000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv53_0 = 53'b00000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_20 = 7'b100000;
parameter    ap_const_lv11_2 = 11'b10;
parameter    ap_const_lv58_1 = 58'b1;
parameter    ap_const_lv11_3 = 11'b11;
parameter    ap_const_lv8_60 = 8'b1100000;
parameter    ap_const_lv11_4 = 11'b100;
parameter    ap_const_lv58_2 = 58'b10;
parameter    ap_const_lv11_5 = 11'b101;
parameter    ap_const_lv8_A0 = 8'b10100000;
parameter    ap_const_lv11_6 = 11'b110;
parameter    ap_const_lv58_3 = 58'b11;
parameter    ap_const_lv11_7 = 11'b111;
parameter    ap_const_lv9_E0 = 9'b11100000;
parameter    ap_const_lv11_8 = 11'b1000;
parameter    ap_const_lv58_4 = 58'b100;
parameter    ap_const_lv11_9 = 11'b1001;
parameter    ap_const_lv9_120 = 9'b100100000;
parameter    ap_const_lv11_A = 11'b1010;
parameter    ap_const_lv58_5 = 58'b101;
parameter    ap_const_lv11_B = 11'b1011;
parameter    ap_const_lv9_160 = 9'b101100000;
parameter    ap_const_lv11_C = 11'b1100;
parameter    ap_const_lv58_6 = 58'b110;
parameter    ap_const_lv11_D = 11'b1101;
parameter    ap_const_lv11_E = 11'b1110;
parameter    ap_const_lv58_7 = 58'b111;
parameter    ap_const_lv11_F = 11'b1111;
parameter    ap_const_lv10_1E0 = 10'b111100000;
parameter    ap_const_lv11_10 = 11'b10000;
parameter    ap_const_lv58_8 = 58'b1000;
parameter    ap_const_lv11_11 = 11'b10001;
parameter    ap_const_lv10_220 = 10'b1000100000;
parameter    ap_const_lv11_12 = 11'b10010;
parameter    ap_const_lv58_9 = 58'b1001;
parameter    ap_const_lv11_13 = 11'b10011;
parameter    ap_const_lv10_260 = 10'b1001100000;
parameter    ap_const_lv11_14 = 11'b10100;
parameter    ap_const_lv58_A = 58'b1010;
parameter    ap_const_lv11_15 = 11'b10101;
parameter    ap_const_lv10_2A0 = 10'b1010100000;
parameter    ap_const_lv11_16 = 11'b10110;
parameter    ap_const_lv58_B = 58'b1011;
parameter    ap_const_lv11_17 = 11'b10111;
parameter    ap_const_lv10_2E0 = 10'b1011100000;
parameter    ap_const_lv11_18 = 11'b11000;
parameter    ap_const_lv58_C = 58'b1100;
parameter    ap_const_lv11_19 = 11'b11001;
parameter    ap_const_lv11_1A = 11'b11010;
parameter    ap_const_lv58_D = 58'b1101;
parameter    ap_const_lv11_1B = 11'b11011;
parameter    ap_const_lv11_1C = 11'b11100;
parameter    ap_const_lv58_E = 58'b1110;
parameter    ap_const_lv11_1D = 11'b11101;
parameter    ap_const_lv11_1E = 11'b11110;
parameter    ap_const_lv58_F = 58'b1111;
parameter    ap_const_lv11_1F = 11'b11111;
parameter    ap_const_lv11_3E0 = 11'b1111100000;
parameter    ap_const_lv32_21 = 32'b100001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] b_Addr_A;
output   b_EN_A;
output  [3:0] b_WEN_A;
output  [31:0] b_Din_A;
input  [31:0] b_Dout_A;
output   b_Clk_A;
output   b_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg b_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_720;
reg   [5:0] i_reg_731;
reg   [5:0] j_reg_742;
reg  signed [31:0] reg_857;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1795;
wire   [0:0] ap_CS_fsm_pp0_stage7;
wire   [0:0] ap_CS_fsm_pp0_stage13;
wire   [0:0] ap_CS_fsm_pp0_stage19;
wire   [0:0] ap_CS_fsm_pp0_stage25;
reg  signed [31:0] reg_862;
reg  signed [31:0] reg_867;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage14;
wire   [0:0] ap_CS_fsm_pp0_stage20;
wire   [0:0] ap_CS_fsm_pp0_stage26;
reg  signed [31:0] reg_872;
reg  signed [31:0] reg_877;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [0:0] ap_CS_fsm_pp0_stage21;
wire   [0:0] ap_CS_fsm_pp0_stage27;
reg  signed [31:0] reg_882;
reg  signed [31:0] reg_887;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage10;
wire   [0:0] ap_CS_fsm_pp0_stage16;
wire   [0:0] ap_CS_fsm_pp0_stage22;
wire   [0:0] ap_CS_fsm_pp0_stage28;
reg  signed [31:0] reg_892;
reg  signed [31:0] reg_897;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage17;
wire   [0:0] ap_CS_fsm_pp0_stage23;
wire   [0:0] ap_CS_fsm_pp0_stage29;
reg  signed [31:0] reg_902;
reg  signed [31:0] reg_907;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [0:0] ap_CS_fsm_pp0_stage18;
wire   [0:0] ap_CS_fsm_pp0_stage24;
wire   [0:0] ap_CS_fsm_pp0_stage30;
reg  signed [31:0] reg_912;
wire   [31:0] grp_fu_753_p2;
reg   [31:0] reg_917;
wire   [0:0] ap_CS_fsm_pp0_stage31;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795;
reg   [31:0] reg_921;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [31:0] grp_fu_925_p2;
reg   [31:0] reg_937;
wire   [31:0] grp_fu_941_p2;
reg   [31:0] reg_953;
wire   [31:0] grp_fu_957_p2;
reg   [31:0] reg_963;
wire   [0:0] exitcond_flatten_fu_967_p2;
wire   [10:0] indvar_flatten_next_fu_973_p2;
reg   [10:0] indvar_flatten_next_reg_1799;
wire   [5:0] j_mid2_fu_991_p3;
reg   [5:0] j_mid2_reg_1804;
wire   [5:0] tmp_mid2_v_fu_999_p3;
reg   [5:0] tmp_mid2_v_reg_1830;
wire   [10:0] tmp_fu_1007_p3;
reg   [10:0] tmp_reg_1835;
wire   [7:0] tmp_2_cast5_cast1_fu_1089_p1;
reg   [7:0] tmp_2_cast5_cast1_reg_1906;
wire   [7:0] tmp_70_fu_1139_p2;
reg   [7:0] tmp_70_reg_1931;
wire   [8:0] tmp_2_cast5_cast_fu_1185_p1;
reg   [8:0] tmp_2_cast5_cast_reg_1957;
wire   [8:0] tmp_74_fu_1235_p2;
reg   [8:0] tmp_74_reg_1983;
wire   [8:0] tmp_76_fu_1281_p2;
reg   [8:0] tmp_76_reg_2008;
wire   [9:0] tmp_2_cast5_fu_1371_p1;
reg   [9:0] tmp_2_cast5_reg_2053;
wire   [31:0] tmp1_fu_1575_p2;
reg   [31:0] tmp1_reg_2146;
wire   [11:0] tmp_93_fu_1769_p2;
reg   [11:0] tmp_93_reg_2231;
reg  signed [31:0] a_load_30_reg_2236;
reg  signed [31:0] b_load_30_reg_2241;
wire   [5:0] j_1_fu_1775_p2;
reg   [5:0] j_1_reg_2246;
reg  signed [31:0] a_load_31_reg_2251;
reg  signed [31:0] b_load_31_reg_2256;
reg   [31:0] tmp24_reg_2261;
reg   [10:0] indvar_flatten_phi_fu_724_p4;
reg   [5:0] i_phi_fu_735_p4;
reg   [5:0] j_phi_fu_746_p4;
wire   [63:0] tmp_3_fu_1015_p1;
wire   [63:0] tmp_2_fu_1020_p1;
wire   [63:0] tmp_5_fu_1030_p3;
wire   [63:0] tmp_67_cast_fu_1048_p1;
wire   [63:0] tmp_8_fu_1058_p3;
wire   [63:0] tmp_67_fu_1067_p3;
wire   [63:0] tmp_s_fu_1080_p3;
wire   [63:0] tmp_69_cast_fu_1098_p1;
wire   [63:0] tmp_11_fu_1108_p3;
wire   [63:0] tmp_69_fu_1117_p3;
wire   [63:0] tmp_13_fu_1130_p3;
wire   [63:0] tmp_71_cast_fu_1144_p1;
wire   [63:0] tmp_15_fu_1154_p3;
wire   [63:0] tmp_71_fu_1163_p3;
wire   [63:0] tmp_17_fu_1176_p3;
wire   [63:0] tmp_73_cast_fu_1194_p1;
wire   [63:0] tmp_19_fu_1204_p3;
wire   [63:0] tmp_73_fu_1213_p3;
wire   [63:0] tmp_21_fu_1226_p3;
wire   [63:0] tmp_75_cast_fu_1240_p1;
wire   [63:0] tmp_23_fu_1250_p3;
wire   [63:0] tmp_75_fu_1259_p3;
wire   [63:0] tmp_25_fu_1272_p3;
wire   [63:0] tmp_77_cast_fu_1286_p1;
wire   [63:0] tmp_27_fu_1296_p3;
wire   [63:0] tmp_77_fu_1305_p3;
wire   [63:0] tmp_29_fu_1318_p3;
wire   [63:0] tmp_79_cast_fu_1330_p1;
wire   [63:0] tmp_31_fu_1340_p3;
wire   [63:0] tmp_78_fu_1349_p3;
wire   [63:0] tmp_33_fu_1362_p3;
wire   [63:0] tmp_81_cast_fu_1380_p1;
wire   [63:0] tmp_35_fu_1390_p3;
wire   [63:0] tmp_80_fu_1399_p3;
wire   [63:0] tmp_37_fu_1412_p3;
wire   [63:0] tmp_83_cast_fu_1426_p1;
wire   [63:0] tmp_39_fu_1436_p3;
wire   [63:0] tmp_82_fu_1445_p3;
wire   [63:0] tmp_41_fu_1458_p3;
wire   [63:0] tmp_85_cast_fu_1472_p1;
wire   [63:0] tmp_43_fu_1482_p3;
wire   [63:0] tmp_84_fu_1491_p3;
wire   [63:0] tmp_45_fu_1504_p3;
wire   [63:0] tmp_87_cast_fu_1518_p1;
wire   [63:0] tmp_47_fu_1528_p3;
wire   [63:0] tmp_86_fu_1537_p3;
wire   [63:0] tmp_49_fu_1550_p3;
wire   [63:0] tmp_89_cast_fu_1564_p1;
wire   [63:0] tmp_51_fu_1586_p3;
wire   [63:0] tmp_88_fu_1595_p3;
wire   [63:0] tmp_53_fu_1608_p3;
wire   [63:0] tmp_91_cast_fu_1620_p1;
wire   [63:0] tmp_55_fu_1630_p3;
wire   [63:0] tmp_89_fu_1639_p3;
wire   [63:0] tmp_57_fu_1652_p3;
wire   [63:0] tmp_93_cast_fu_1664_p1;
wire   [63:0] tmp_59_fu_1674_p3;
wire   [63:0] tmp_90_fu_1683_p3;
wire   [63:0] tmp_61_fu_1696_p3;
wire   [63:0] tmp_95_cast_fu_1708_p1;
wire   [63:0] tmp_63_fu_1718_p3;
wire   [63:0] tmp_91_fu_1727_p3;
wire   [63:0] tmp_65_fu_1743_p3;
wire   [63:0] tmp_97_cast_fu_1764_p1;
wire   [63:0] tmp_98_cast_fu_1780_p1;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] b_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg  signed [31:0] grp_fu_753_p0;
reg  signed [31:0] grp_fu_753_p1;
wire   [31:0] grp_fu_931_p2;
wire   [31:0] grp_fu_947_p2;
wire   [0:0] exitcond_fu_985_p2;
wire   [5:0] i_1_fu_979_p2;
wire   [10:0] tmp_4_fu_1025_p2;
wire   [6:0] tmp_2_cast_fu_1039_p1;
wire   [6:0] tmp_66_fu_1042_p2;
wire   [10:0] tmp_7_fu_1053_p2;
wire   [10:0] tmp_9_fu_1075_p2;
wire   [7:0] tmp_68_fu_1092_p2;
wire   [10:0] tmp_10_fu_1103_p2;
wire   [10:0] tmp_12_fu_1125_p2;
wire   [10:0] tmp_14_fu_1149_p2;
wire   [10:0] tmp_16_fu_1171_p2;
wire   [8:0] tmp_72_fu_1188_p2;
wire   [10:0] tmp_18_fu_1199_p2;
wire   [10:0] tmp_20_fu_1221_p2;
wire   [10:0] tmp_22_fu_1245_p2;
wire   [10:0] tmp_24_fu_1267_p2;
wire   [10:0] tmp_26_fu_1291_p2;
wire   [10:0] tmp_28_fu_1313_p2;
wire  signed [8:0] tmp_79_cast1_fu_1327_p1;
wire   [10:0] tmp_30_fu_1335_p2;
wire   [10:0] tmp_32_fu_1357_p2;
wire   [9:0] tmp_79_fu_1374_p2;
wire   [10:0] tmp_34_fu_1385_p2;
wire   [10:0] tmp_36_fu_1407_p2;
wire   [9:0] tmp_81_fu_1421_p2;
wire   [10:0] tmp_38_fu_1431_p2;
wire   [10:0] tmp_40_fu_1453_p2;
wire   [9:0] tmp_83_fu_1467_p2;
wire   [10:0] tmp_42_fu_1477_p2;
wire   [10:0] tmp_44_fu_1499_p2;
wire   [9:0] tmp_85_fu_1513_p2;
wire   [10:0] tmp_46_fu_1523_p2;
wire   [10:0] tmp_48_fu_1545_p2;
wire   [9:0] tmp_87_fu_1559_p2;
wire   [31:0] tmp9_fu_1569_p2;
wire   [10:0] tmp_50_fu_1581_p2;
wire   [10:0] tmp_52_fu_1603_p2;
wire  signed [9:0] tmp_91_cast1_fu_1617_p1;
wire   [10:0] tmp_54_fu_1625_p2;
wire   [10:0] tmp_56_fu_1647_p2;
wire  signed [9:0] tmp_93_cast9_fu_1661_p1;
wire   [10:0] tmp_58_fu_1669_p2;
wire   [10:0] tmp_60_fu_1691_p2;
wire  signed [9:0] tmp_95_cast8_fu_1705_p1;
wire   [10:0] tmp_62_fu_1713_p2;
wire   [10:0] tmp_64_fu_1738_p2;
wire   [10:0] tmp_2_cast6_fu_1755_p1;
wire   [10:0] tmp_92_fu_1758_p2;
wire   [11:0] tmp_3_cast_fu_1735_p1;
wire   [11:0] tmp_2_cast7_fu_1752_p1;
wire   [31:0] tmp16_fu_1784_p2;
wire   [0:0] ap_CS_fsm_state43;
reg   [33:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_753_p0),
    .din1(grp_fu_753_p1),
    .ce(1'b1),
    .dout(grp_fu_753_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_967_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & ~(exitcond_flatten_reg_1795 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_731 <= tmp_mid2_v_reg_1830;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_731 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_720 <= indvar_flatten_next_reg_1799;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_720 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_742 <= j_1_reg_2246;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_742 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        a_load_30_reg_2236 <= a_Dout_A;
        b_load_30_reg_2241 <= b_Dout_A;
        j_1_reg_2246 <= j_1_fu_1775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_load_31_reg_2251 <= a_Dout_A;
        b_load_31_reg_2256 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795 <= exitcond_flatten_reg_1795;
        exitcond_flatten_reg_1795 <= exitcond_flatten_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1799 <= indvar_flatten_next_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_967_p2))) begin
        j_mid2_reg_1804 <= j_mid2_fu_991_p3;
        tmp_reg_1835[10 : 5] <= tmp_fu_1007_p3[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage25)))) begin
        reg_857 <= a_Dout_A;
        reg_862 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        reg_867 <= a_Dout_A;
        reg_872 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage27)))) begin
        reg_877 <= a_Dout_A;
        reg_882 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage28)))) begin
        reg_887 <= a_Dout_A;
        reg_892 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage29)))) begin
        reg_897 <= a_Dout_A;
        reg_902 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage30)))) begin
        reg_907 <= a_Dout_A;
        reg_912 <= b_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)))) begin
        reg_917 <= grp_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)))) begin
        reg_921 <= grp_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)))) begin
        reg_937 <= grp_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795)))) begin
        reg_953 <= grp_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        reg_963 <= grp_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp1_reg_2146 <= tmp1_fu_1575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795))) begin
        tmp24_reg_2261 <= grp_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_2_cast5_cast1_reg_1906[5 : 0] <= tmp_2_cast5_cast1_fu_1089_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_2_cast5_cast_reg_1957[5 : 0] <= tmp_2_cast5_cast_fu_1185_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_2_cast5_reg_2053[5 : 0] <= tmp_2_cast5_fu_1371_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_70_reg_1931 <= tmp_70_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_74_reg_1983 <= tmp_74_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_76_reg_2008 <= tmp_76_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        tmp_93_reg_2231 <= tmp_93_fu_1769_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_967_p2))) begin
        tmp_mid2_v_reg_1830 <= tmp_mid2_v_fu_999_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage31)) begin
            a_Addr_A_orig = tmp_65_fu_1743_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage30)) begin
            a_Addr_A_orig = tmp_63_fu_1718_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage29)) begin
            a_Addr_A_orig = tmp_61_fu_1696_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage28)) begin
            a_Addr_A_orig = tmp_59_fu_1674_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage27)) begin
            a_Addr_A_orig = tmp_57_fu_1652_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage26)) begin
            a_Addr_A_orig = tmp_55_fu_1630_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage25)) begin
            a_Addr_A_orig = tmp_53_fu_1608_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage24)) begin
            a_Addr_A_orig = tmp_51_fu_1586_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage23)) begin
            a_Addr_A_orig = tmp_49_fu_1550_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            a_Addr_A_orig = tmp_47_fu_1528_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage21)) begin
            a_Addr_A_orig = tmp_45_fu_1504_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            a_Addr_A_orig = tmp_43_fu_1482_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage19)) begin
            a_Addr_A_orig = tmp_41_fu_1458_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            a_Addr_A_orig = tmp_39_fu_1436_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage17)) begin
            a_Addr_A_orig = tmp_37_fu_1412_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            a_Addr_A_orig = tmp_35_fu_1390_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            a_Addr_A_orig = tmp_33_fu_1362_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            a_Addr_A_orig = tmp_31_fu_1340_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            a_Addr_A_orig = tmp_29_fu_1318_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            a_Addr_A_orig = tmp_27_fu_1296_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            a_Addr_A_orig = tmp_25_fu_1272_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            a_Addr_A_orig = tmp_23_fu_1250_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            a_Addr_A_orig = tmp_21_fu_1226_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            a_Addr_A_orig = tmp_19_fu_1204_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_Addr_A_orig = tmp_17_fu_1176_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_Addr_A_orig = tmp_15_fu_1154_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_Addr_A_orig = tmp_13_fu_1130_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_Addr_A_orig = tmp_11_fu_1108_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_Addr_A_orig = tmp_s_fu_1080_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_Addr_A_orig = tmp_8_fu_1058_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_Addr_A_orig = tmp_5_fu_1030_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_Addr_A_orig = tmp_3_fu_1015_p1;
        end else begin
            a_Addr_A_orig = 'bx;
        end
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage31)) begin
            b_Addr_A_orig = tmp_97_cast_fu_1764_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage30)) begin
            b_Addr_A_orig = tmp_91_fu_1727_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage29)) begin
            b_Addr_A_orig = tmp_95_cast_fu_1708_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage28)) begin
            b_Addr_A_orig = tmp_90_fu_1683_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage27)) begin
            b_Addr_A_orig = tmp_93_cast_fu_1664_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage26)) begin
            b_Addr_A_orig = tmp_89_fu_1639_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage25)) begin
            b_Addr_A_orig = tmp_91_cast_fu_1620_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage24)) begin
            b_Addr_A_orig = tmp_88_fu_1595_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage23)) begin
            b_Addr_A_orig = tmp_89_cast_fu_1564_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage22)) begin
            b_Addr_A_orig = tmp_86_fu_1537_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage21)) begin
            b_Addr_A_orig = tmp_87_cast_fu_1518_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage20)) begin
            b_Addr_A_orig = tmp_84_fu_1491_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage19)) begin
            b_Addr_A_orig = tmp_85_cast_fu_1472_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage18)) begin
            b_Addr_A_orig = tmp_82_fu_1445_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage17)) begin
            b_Addr_A_orig = tmp_83_cast_fu_1426_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage16)) begin
            b_Addr_A_orig = tmp_80_fu_1399_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_Addr_A_orig = tmp_81_cast_fu_1380_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_Addr_A_orig = tmp_78_fu_1349_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_Addr_A_orig = tmp_79_cast_fu_1330_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_Addr_A_orig = tmp_77_fu_1305_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_Addr_A_orig = tmp_77_cast_fu_1286_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_Addr_A_orig = tmp_75_fu_1259_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_Addr_A_orig = tmp_75_cast_fu_1240_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_Addr_A_orig = tmp_73_fu_1213_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_Addr_A_orig = tmp_73_cast_fu_1194_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_Addr_A_orig = tmp_71_fu_1163_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_Addr_A_orig = tmp_71_cast_fu_1144_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_Addr_A_orig = tmp_69_fu_1117_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_Addr_A_orig = tmp_69_cast_fu_1098_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_Addr_A_orig = tmp_67_fu_1067_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_Addr_A_orig = tmp_67_cast_fu_1048_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_Addr_A_orig = tmp_2_fu_1020_p1;
        end else begin
            b_Addr_A_orig = 'bx;
        end
    end else begin
        b_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_EN_A = 1'b1;
    end else begin
        b_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1795))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_753_p0 = b_load_31_reg_2256;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_753_p0 = b_load_30_reg_2241;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        grp_fu_753_p0 = reg_912;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)))) begin
        grp_fu_753_p0 = reg_902;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)))) begin
        grp_fu_753_p0 = reg_892;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)))) begin
        grp_fu_753_p0 = reg_882;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)))) begin
        grp_fu_753_p0 = reg_872;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        grp_fu_753_p0 = reg_862;
    end else begin
        grp_fu_753_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_753_p1 = a_load_31_reg_2251;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_753_p1 = a_load_30_reg_2236;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31)))) begin
        grp_fu_753_p1 = reg_907;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30)))) begin
        grp_fu_753_p1 = reg_897;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29)))) begin
        grp_fu_753_p1 = reg_887;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28)))) begin
        grp_fu_753_p1 = reg_877;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27)))) begin
        grp_fu_753_p1 = reg_867;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        grp_fu_753_p1 = reg_857;
    end else begin
        grp_fu_753_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_735_p4 = tmp_mid2_v_reg_1830;
    end else begin
        i_phi_fu_735_p4 = i_reg_731;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_724_p4 = indvar_flatten_next_reg_1799;
    end else begin
        indvar_flatten_phi_fu_724_p4 = indvar_flatten_reg_720;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1795 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_746_p4 = j_1_reg_2246;
    end else begin
        j_phi_fu_746_p4 = j_reg_742;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_967_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
        end
        ap_ST_fsm_pp0_stage8 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage16;
        end
        ap_ST_fsm_pp0_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage17;
        end
        ap_ST_fsm_pp0_stage17 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage18;
        end
        ap_ST_fsm_pp0_stage18 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage19;
        end
        ap_ST_fsm_pp0_stage19 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage20;
        end
        ap_ST_fsm_pp0_stage20 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage21;
        end
        ap_ST_fsm_pp0_stage21 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage22;
        end
        ap_ST_fsm_pp0_stage22 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage23;
        end
        ap_ST_fsm_pp0_stage23 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage24;
        end
        ap_ST_fsm_pp0_stage24 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage25;
        end
        ap_ST_fsm_pp0_stage25 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage26;
        end
        ap_ST_fsm_pp0_stage26 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage27;
        end
        ap_ST_fsm_pp0_stage27 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage28;
        end
        ap_ST_fsm_pp0_stage28 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage29;
        end
        ap_ST_fsm_pp0_stage29 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage30;
        end
        ap_ST_fsm_pp0_stage30 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage31;
        end
        ap_ST_fsm_pp0_stage31 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = ap_const_lv32_0;

assign a_Rst_A = ap_rst;

assign a_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_21];

assign b_Addr_A = b_Addr_A_orig << ap_const_lv32_2;

assign b_Clk_A = ap_clk;

assign b_Din_A = ap_const_lv32_0;

assign b_Rst_A = ap_rst;

assign b_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_98_cast_fu_1780_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = (tmp1_reg_2146 + tmp16_fu_1784_p2);

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_967_p2 = ((indvar_flatten_phi_fu_724_p4 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_fu_985_p2 = ((j_phi_fu_746_p4 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign grp_fu_925_p2 = (reg_921 + reg_917);

assign grp_fu_931_p2 = (reg_921 + reg_917);

assign grp_fu_941_p2 = (reg_937 + grp_fu_931_p2);

assign grp_fu_947_p2 = (reg_937 + grp_fu_925_p2);

assign grp_fu_957_p2 = (reg_953 + grp_fu_947_p2);

assign i_1_fu_979_p2 = (i_phi_fu_735_p4 + ap_const_lv6_1);

assign indvar_flatten_next_fu_973_p2 = (indvar_flatten_phi_fu_724_p4 + ap_const_lv11_1);

assign j_1_fu_1775_p2 = (j_mid2_reg_1804 + ap_const_lv6_1);

assign j_mid2_fu_991_p3 = ((exitcond_fu_985_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j_phi_fu_746_p4);

assign tmp16_fu_1784_p2 = (reg_963 + tmp24_reg_2261);

assign tmp1_fu_1575_p2 = (reg_963 + tmp9_fu_1569_p2);

assign tmp9_fu_1569_p2 = (reg_953 + grp_fu_941_p2);

assign tmp_10_fu_1103_p2 = (tmp_reg_1835 | ap_const_lv11_4);

assign tmp_11_fu_1108_p3 = {{ap_const_lv53_0}, {tmp_10_fu_1103_p2}};

assign tmp_12_fu_1125_p2 = (tmp_reg_1835 | ap_const_lv11_5);

assign tmp_13_fu_1130_p3 = {{ap_const_lv53_0}, {tmp_12_fu_1125_p2}};

assign tmp_14_fu_1149_p2 = (tmp_reg_1835 | ap_const_lv11_6);

assign tmp_15_fu_1154_p3 = {{ap_const_lv53_0}, {tmp_14_fu_1149_p2}};

assign tmp_16_fu_1171_p2 = (tmp_reg_1835 | ap_const_lv11_7);

assign tmp_17_fu_1176_p3 = {{ap_const_lv53_0}, {tmp_16_fu_1171_p2}};

assign tmp_18_fu_1199_p2 = (tmp_reg_1835 | ap_const_lv11_8);

assign tmp_19_fu_1204_p3 = {{ap_const_lv53_0}, {tmp_18_fu_1199_p2}};

assign tmp_20_fu_1221_p2 = (tmp_reg_1835 | ap_const_lv11_9);

assign tmp_21_fu_1226_p3 = {{ap_const_lv53_0}, {tmp_20_fu_1221_p2}};

assign tmp_22_fu_1245_p2 = (tmp_reg_1835 | ap_const_lv11_A);

assign tmp_23_fu_1250_p3 = {{ap_const_lv53_0}, {tmp_22_fu_1245_p2}};

assign tmp_24_fu_1267_p2 = (tmp_reg_1835 | ap_const_lv11_B);

assign tmp_25_fu_1272_p3 = {{ap_const_lv53_0}, {tmp_24_fu_1267_p2}};

assign tmp_26_fu_1291_p2 = (tmp_reg_1835 | ap_const_lv11_C);

assign tmp_27_fu_1296_p3 = {{ap_const_lv53_0}, {tmp_26_fu_1291_p2}};

assign tmp_28_fu_1313_p2 = (tmp_reg_1835 | ap_const_lv11_D);

assign tmp_29_fu_1318_p3 = {{ap_const_lv53_0}, {tmp_28_fu_1313_p2}};

assign tmp_2_cast5_cast1_fu_1089_p1 = j_mid2_reg_1804;

assign tmp_2_cast5_cast_fu_1185_p1 = j_mid2_reg_1804;

assign tmp_2_cast5_fu_1371_p1 = j_mid2_reg_1804;

assign tmp_2_cast6_fu_1755_p1 = j_mid2_reg_1804;

assign tmp_2_cast7_fu_1752_p1 = j_mid2_reg_1804;

assign tmp_2_cast_fu_1039_p1 = j_mid2_reg_1804;

assign tmp_2_fu_1020_p1 = j_mid2_fu_991_p3;

assign tmp_30_fu_1335_p2 = (tmp_reg_1835 | ap_const_lv11_E);

assign tmp_31_fu_1340_p3 = {{ap_const_lv53_0}, {tmp_30_fu_1335_p2}};

assign tmp_32_fu_1357_p2 = (tmp_reg_1835 | ap_const_lv11_F);

assign tmp_33_fu_1362_p3 = {{ap_const_lv53_0}, {tmp_32_fu_1357_p2}};

assign tmp_34_fu_1385_p2 = (tmp_reg_1835 | ap_const_lv11_10);

assign tmp_35_fu_1390_p3 = {{ap_const_lv53_0}, {tmp_34_fu_1385_p2}};

assign tmp_36_fu_1407_p2 = (tmp_reg_1835 | ap_const_lv11_11);

assign tmp_37_fu_1412_p3 = {{ap_const_lv53_0}, {tmp_36_fu_1407_p2}};

assign tmp_38_fu_1431_p2 = (tmp_reg_1835 | ap_const_lv11_12);

assign tmp_39_fu_1436_p3 = {{ap_const_lv53_0}, {tmp_38_fu_1431_p2}};

assign tmp_3_cast_fu_1735_p1 = tmp_reg_1835;

assign tmp_3_fu_1015_p1 = tmp_fu_1007_p3;

assign tmp_40_fu_1453_p2 = (tmp_reg_1835 | ap_const_lv11_13);

assign tmp_41_fu_1458_p3 = {{ap_const_lv53_0}, {tmp_40_fu_1453_p2}};

assign tmp_42_fu_1477_p2 = (tmp_reg_1835 | ap_const_lv11_14);

assign tmp_43_fu_1482_p3 = {{ap_const_lv53_0}, {tmp_42_fu_1477_p2}};

assign tmp_44_fu_1499_p2 = (tmp_reg_1835 | ap_const_lv11_15);

assign tmp_45_fu_1504_p3 = {{ap_const_lv53_0}, {tmp_44_fu_1499_p2}};

assign tmp_46_fu_1523_p2 = (tmp_reg_1835 | ap_const_lv11_16);

assign tmp_47_fu_1528_p3 = {{ap_const_lv53_0}, {tmp_46_fu_1523_p2}};

assign tmp_48_fu_1545_p2 = (tmp_reg_1835 | ap_const_lv11_17);

assign tmp_49_fu_1550_p3 = {{ap_const_lv53_0}, {tmp_48_fu_1545_p2}};

assign tmp_4_fu_1025_p2 = (tmp_reg_1835 | ap_const_lv11_1);

assign tmp_50_fu_1581_p2 = (tmp_reg_1835 | ap_const_lv11_18);

assign tmp_51_fu_1586_p3 = {{ap_const_lv53_0}, {tmp_50_fu_1581_p2}};

assign tmp_52_fu_1603_p2 = (tmp_reg_1835 | ap_const_lv11_19);

assign tmp_53_fu_1608_p3 = {{ap_const_lv53_0}, {tmp_52_fu_1603_p2}};

assign tmp_54_fu_1625_p2 = (tmp_reg_1835 | ap_const_lv11_1A);

assign tmp_55_fu_1630_p3 = {{ap_const_lv53_0}, {tmp_54_fu_1625_p2}};

assign tmp_56_fu_1647_p2 = (tmp_reg_1835 | ap_const_lv11_1B);

assign tmp_57_fu_1652_p3 = {{ap_const_lv53_0}, {tmp_56_fu_1647_p2}};

assign tmp_58_fu_1669_p2 = (tmp_reg_1835 | ap_const_lv11_1C);

assign tmp_59_fu_1674_p3 = {{ap_const_lv53_0}, {tmp_58_fu_1669_p2}};

assign tmp_5_fu_1030_p3 = {{ap_const_lv53_0}, {tmp_4_fu_1025_p2}};

assign tmp_60_fu_1691_p2 = (tmp_reg_1835 | ap_const_lv11_1D);

assign tmp_61_fu_1696_p3 = {{ap_const_lv53_0}, {tmp_60_fu_1691_p2}};

assign tmp_62_fu_1713_p2 = (tmp_reg_1835 | ap_const_lv11_1E);

assign tmp_63_fu_1718_p3 = {{ap_const_lv53_0}, {tmp_62_fu_1713_p2}};

assign tmp_64_fu_1738_p2 = (tmp_reg_1835 | ap_const_lv11_1F);

assign tmp_65_fu_1743_p3 = {{ap_const_lv53_0}, {tmp_64_fu_1738_p2}};

assign tmp_66_fu_1042_p2 = (tmp_2_cast_fu_1039_p1 + ap_const_lv7_20);

assign tmp_67_cast_fu_1048_p1 = tmp_66_fu_1042_p2;

assign tmp_67_fu_1067_p3 = {{ap_const_lv58_1}, {j_mid2_reg_1804}};

assign tmp_68_fu_1092_p2 = (tmp_2_cast5_cast1_fu_1089_p1 + ap_const_lv8_60);

assign tmp_69_cast_fu_1098_p1 = tmp_68_fu_1092_p2;

assign tmp_69_fu_1117_p3 = {{ap_const_lv58_2}, {j_mid2_reg_1804}};

assign tmp_70_fu_1139_p2 = ($signed(tmp_2_cast5_cast1_reg_1906) + $signed(ap_const_lv8_A0));

assign tmp_71_cast_fu_1144_p1 = tmp_70_fu_1139_p2;

assign tmp_71_fu_1163_p3 = {{ap_const_lv58_3}, {j_mid2_reg_1804}};

assign tmp_72_fu_1188_p2 = (tmp_2_cast5_cast_fu_1185_p1 + ap_const_lv9_E0);

assign tmp_73_cast_fu_1194_p1 = tmp_72_fu_1188_p2;

assign tmp_73_fu_1213_p3 = {{ap_const_lv58_4}, {j_mid2_reg_1804}};

assign tmp_74_fu_1235_p2 = ($signed(tmp_2_cast5_cast_reg_1957) + $signed(ap_const_lv9_120));

assign tmp_75_cast_fu_1240_p1 = tmp_74_fu_1235_p2;

assign tmp_75_fu_1259_p3 = {{ap_const_lv58_5}, {j_mid2_reg_1804}};

assign tmp_76_fu_1281_p2 = ($signed(tmp_2_cast5_cast_reg_1957) + $signed(ap_const_lv9_160));

assign tmp_77_cast_fu_1286_p1 = tmp_76_fu_1281_p2;

assign tmp_77_fu_1305_p3 = {{ap_const_lv58_6}, {j_mid2_reg_1804}};

assign tmp_78_fu_1349_p3 = {{ap_const_lv58_7}, {j_mid2_reg_1804}};

assign tmp_79_cast1_fu_1327_p1 = $signed(tmp_70_reg_1931);

assign tmp_79_cast_fu_1330_p1 = $unsigned(tmp_79_cast1_fu_1327_p1);

assign tmp_79_fu_1374_p2 = (tmp_2_cast5_fu_1371_p1 + ap_const_lv10_1E0);

assign tmp_7_fu_1053_p2 = (tmp_reg_1835 | ap_const_lv11_2);

assign tmp_80_fu_1399_p3 = {{ap_const_lv58_8}, {j_mid2_reg_1804}};

assign tmp_81_cast_fu_1380_p1 = tmp_79_fu_1374_p2;

assign tmp_81_fu_1421_p2 = ($signed(tmp_2_cast5_reg_2053) + $signed(ap_const_lv10_220));

assign tmp_82_fu_1445_p3 = {{ap_const_lv58_9}, {j_mid2_reg_1804}};

assign tmp_83_cast_fu_1426_p1 = tmp_81_fu_1421_p2;

assign tmp_83_fu_1467_p2 = ($signed(tmp_2_cast5_reg_2053) + $signed(ap_const_lv10_260));

assign tmp_84_fu_1491_p3 = {{ap_const_lv58_A}, {j_mid2_reg_1804}};

assign tmp_85_cast_fu_1472_p1 = tmp_83_fu_1467_p2;

assign tmp_85_fu_1513_p2 = ($signed(tmp_2_cast5_reg_2053) + $signed(ap_const_lv10_2A0));

assign tmp_86_fu_1537_p3 = {{ap_const_lv58_B}, {j_mid2_reg_1804}};

assign tmp_87_cast_fu_1518_p1 = tmp_85_fu_1513_p2;

assign tmp_87_fu_1559_p2 = ($signed(tmp_2_cast5_reg_2053) + $signed(ap_const_lv10_2E0));

assign tmp_88_fu_1595_p3 = {{ap_const_lv58_C}, {j_mid2_reg_1804}};

assign tmp_89_cast_fu_1564_p1 = tmp_87_fu_1559_p2;

assign tmp_89_fu_1639_p3 = {{ap_const_lv58_D}, {j_mid2_reg_1804}};

assign tmp_8_fu_1058_p3 = {{ap_const_lv53_0}, {tmp_7_fu_1053_p2}};

assign tmp_90_fu_1683_p3 = {{ap_const_lv58_E}, {j_mid2_reg_1804}};

assign tmp_91_cast1_fu_1617_p1 = $signed(tmp_74_reg_1983);

assign tmp_91_cast_fu_1620_p1 = $unsigned(tmp_91_cast1_fu_1617_p1);

assign tmp_91_fu_1727_p3 = {{ap_const_lv58_F}, {j_mid2_reg_1804}};

assign tmp_92_fu_1758_p2 = (tmp_2_cast6_fu_1755_p1 + ap_const_lv11_3E0);

assign tmp_93_cast9_fu_1661_p1 = $signed(tmp_76_reg_2008);

assign tmp_93_cast_fu_1664_p1 = $unsigned(tmp_93_cast9_fu_1661_p1);

assign tmp_93_fu_1769_p2 = (tmp_3_cast_fu_1735_p1 + tmp_2_cast7_fu_1752_p1);

assign tmp_95_cast8_fu_1705_p1 = $signed(tmp_70_reg_1931);

assign tmp_95_cast_fu_1708_p1 = $unsigned(tmp_95_cast8_fu_1705_p1);

assign tmp_97_cast_fu_1764_p1 = tmp_92_fu_1758_p2;

assign tmp_98_cast_fu_1780_p1 = tmp_93_reg_2231;

assign tmp_9_fu_1075_p2 = (tmp_reg_1835 | ap_const_lv11_3);

assign tmp_fu_1007_p3 = {{tmp_mid2_v_fu_999_p3}, {ap_const_lv5_0}};

assign tmp_mid2_v_fu_999_p3 = ((exitcond_fu_985_p2[0:0] === 1'b1) ? i_1_fu_979_p2 : i_phi_fu_735_p4);

assign tmp_s_fu_1080_p3 = {{ap_const_lv53_0}, {tmp_9_fu_1075_p2}};

always @ (posedge ap_clk) begin
    tmp_reg_1835[4:0] <= 5'b00000;
    tmp_2_cast5_cast1_reg_1906[7:6] <= 2'b00;
    tmp_2_cast5_cast_reg_1957[8:6] <= 3'b000;
    tmp_2_cast5_reg_2053[9:6] <= 4'b0000;
end

endmodule //matmul_hw
