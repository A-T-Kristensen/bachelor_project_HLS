-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.680000,HLS_SYN_LAT=16394,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1776,HLS_SYN_LUT=1542}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv58_1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv58_2 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv58_3 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv9_E0 : STD_LOGIC_VECTOR (8 downto 0) := "011100000";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv58_4 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv58_5 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv9_160 : STD_LOGIC_VECTOR (8 downto 0) := "101100000";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv58_6 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv58_7 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv10_1E0 : STD_LOGIC_VECTOR (9 downto 0) := "0111100000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_682 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_693 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_704 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal reg_857 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_867 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_887 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_947 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_968_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1000_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1022 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1038_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_next_reg_1549 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_fu_1056_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_mid2_reg_1554 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_1064_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_reg_1571 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1072_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_1577 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_cast4_cast_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast4_cast_reg_1666 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_1215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_reg_1711 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast4_fu_1265_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast4_reg_1756 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_0_load_12_reg_1892 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_12_reg_1897 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_12_reg_1902 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_12_reg_1907 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_13_reg_1932 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_13_reg_1937 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_13_reg_1942 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_13_reg_1947 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_14_reg_1972 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_14_reg_1977 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_14_reg_1982 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_14_reg_1987 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_1992 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1026_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1997 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_1494_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_2002 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_0_load_15_reg_2007 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_15_reg_2012 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_15_reg_2017 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_15_reg_2022 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_2027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_reg_2032 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_phi_fu_686_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_phi_fu_697_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_phi_fu_708_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1097_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_cast_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1127_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1137_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1151_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_cast_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1181_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1191_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1205_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_cast_fu_1220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1231_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1241_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1255_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_cast_fu_1274_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1285_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1295_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1309_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_cast_fu_1324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1335_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_1359_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_cast_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1385_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1409_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_cast_fu_1422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1433_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1443_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1457_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_cast_fu_1476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_1530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_715_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_716_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_980_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1044_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_1092_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_cast_fu_1107_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_35_fu_1110_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_1122_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1146_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_1164_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1176_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_1200_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_1226_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_1250_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_fu_1268_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1280_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_1304_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_fu_1319_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_1330_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_1354_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_1369_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_fu_1380_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_1404_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_49_cast7_fu_1419_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_fu_1428_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_32_fu_1452_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_cast5_fu_1467_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_48_fu_1470_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp6_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1510_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_36_cast_fu_1517_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_cast6_fu_1521_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_1524_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp16_fu_1535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component matmul_hw_mul_32scud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_mul_32scud_U1 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_715_p0,
        din1 => grp_fu_715_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_715_p2);

    matmul_hw_mul_32scud_U2 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_716_p0,
        din1 => grp_fu_716_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_716_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1032_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((exitcond_flatten_reg_1545 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_693 <= tmp_mid2_v_reg_1571;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_693 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_682 <= indvar_flatten_next_reg_1549;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_682 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_reg_704_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_704 <= j_1_reg_2002;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_704 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                a_0_load_12_reg_1892 <= a_0_Dout_A;
                a_1_load_12_reg_1902 <= a_1_Dout_A;
                b_0_load_12_reg_1897 <= b_0_Dout_A;
                b_1_load_12_reg_1907 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                a_0_load_13_reg_1932 <= a_0_Dout_A;
                a_1_load_13_reg_1942 <= a_1_Dout_A;
                b_0_load_13_reg_1937 <= b_0_Dout_A;
                b_1_load_13_reg_1947 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                a_0_load_14_reg_1972 <= a_0_Dout_A;
                a_1_load_14_reg_1982 <= a_1_Dout_A;
                b_0_load_14_reg_1977 <= b_0_Dout_A;
                b_1_load_14_reg_1987 <= b_1_Dout_A;
                j_1_reg_2002 <= j_1_fu_1494_p2;
                tmp17_reg_1997 <= grp_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_0_load_15_reg_2007 <= a_0_Dout_A;
                a_1_load_15_reg_2017 <= a_1_Dout_A;
                b_0_load_15_reg_2012 <= b_0_Dout_A;
                b_1_load_15_reg_2022 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545 <= exitcond_flatten_reg_1545;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554 <= j_mid2_reg_1554;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571 <= tmp_mid2_v_reg_1571;
                exitcond_flatten_reg_1545 <= exitcond_flatten_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1549 <= indvar_flatten_next_fu_1038_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_1032_p2))) then
                j_mid2_reg_1554 <= j_mid2_fu_1056_p3;
                    tmp_reg_1577(9 downto 4) <= tmp_fu_1072_p3(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) then
                reg_1018 <= grp_fu_1000_p2;
                reg_1022 <= grp_fu_1006_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_832 <= a_0_Dout_A;
                reg_837 <= b_0_Dout_A;
                reg_842 <= a_1_Dout_A;
                reg_847 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_852 <= a_0_Dout_A;
                reg_857 <= b_0_Dout_A;
                reg_862 <= a_1_Dout_A;
                reg_867 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_872 <= a_0_Dout_A;
                reg_877 <= b_0_Dout_A;
                reg_882 <= a_1_Dout_A;
                reg_887 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then
                reg_892 <= a_0_Dout_A;
                reg_897 <= b_0_Dout_A;
                reg_902 <= a_1_Dout_A;
                reg_907 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then
                reg_912 <= a_0_Dout_A;
                reg_917 <= b_0_Dout_A;
                reg_922 <= a_1_Dout_A;
                reg_927 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then
                reg_932 <= a_0_Dout_A;
                reg_937 <= b_0_Dout_A;
                reg_942 <= a_1_Dout_A;
                reg_947 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) then
                reg_952 <= grp_fu_715_p2;
                reg_956 <= grp_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) then
                reg_960 <= grp_fu_715_p2;
                reg_964 <= grp_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) then
                reg_992 <= grp_fu_968_p2;
                reg_996 <= grp_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545))) then
                tmp1_reg_2027 <= tmp1_fu_1505_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545))) then
                tmp24_reg_2032 <= grp_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                tmp2_reg_1992 <= tmp2_fu_1488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    tmp_2_cast4_cast_reg_1666(5 downto 0) <= tmp_2_cast4_cast_fu_1161_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                    tmp_2_cast4_reg_1756(5 downto 0) <= tmp_2_cast4_fu_1265_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_39_reg_1711 <= tmp_39_fu_1215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_1032_p2))) then
                tmp_mid2_v_reg_1571 <= tmp_mid2_v_fu_1064_p3;
            end if;
        end if;
    end process;
    tmp_reg_1577(3 downto 0) <= "0000";
    tmp_2_cast4_cast_reg_1666(7 downto 6) <= "00";
    tmp_2_cast4_reg_1756(8 downto 6) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_enable_reg_pp0_iter1, exitcond_flatten_fu_1032_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1032_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_3_fu_1080_p1, tmp_5_fu_1097_p3, tmp_8_fu_1127_p3, tmp_s_fu_1151_p3, tmp_11_fu_1181_p3, tmp_13_fu_1205_p3, tmp_15_fu_1231_p3, tmp_17_fu_1255_p3, tmp_19_fu_1285_p3, tmp_21_fu_1309_p3, tmp_23_fu_1335_p3, tmp_25_fu_1359_p3, tmp_27_fu_1385_p3, tmp_29_fu_1409_p3, tmp_31_fu_1433_p3, tmp_33_fu_1457_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_0_Addr_A_orig <= tmp_33_fu_1457_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_0_Addr_A_orig <= tmp_31_fu_1433_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_0_Addr_A_orig <= tmp_29_fu_1409_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_0_Addr_A_orig <= tmp_27_fu_1385_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_0_Addr_A_orig <= tmp_25_fu_1359_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_0_Addr_A_orig <= tmp_23_fu_1335_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_0_Addr_A_orig <= tmp_21_fu_1309_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_0_Addr_A_orig <= tmp_19_fu_1285_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_17_fu_1255_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_15_fu_1231_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_13_fu_1205_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_11_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_s_fu_1151_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_8_fu_1127_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_5_fu_1097_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_1080_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_3_fu_1080_p1, tmp_5_fu_1097_p3, tmp_8_fu_1127_p3, tmp_s_fu_1151_p3, tmp_11_fu_1181_p3, tmp_13_fu_1205_p3, tmp_15_fu_1231_p3, tmp_17_fu_1255_p3, tmp_19_fu_1285_p3, tmp_21_fu_1309_p3, tmp_23_fu_1335_p3, tmp_25_fu_1359_p3, tmp_27_fu_1385_p3, tmp_29_fu_1409_p3, tmp_31_fu_1433_p3, tmp_33_fu_1457_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_1_Addr_A_orig <= tmp_33_fu_1457_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_1_Addr_A_orig <= tmp_31_fu_1433_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_1_Addr_A_orig <= tmp_29_fu_1409_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_1_Addr_A_orig <= tmp_27_fu_1385_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_1_Addr_A_orig <= tmp_25_fu_1359_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_1_Addr_A_orig <= tmp_23_fu_1335_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_1_Addr_A_orig <= tmp_21_fu_1309_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_1_Addr_A_orig <= tmp_19_fu_1285_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_17_fu_1255_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_15_fu_1231_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_13_fu_1205_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_11_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_s_fu_1151_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_8_fu_1127_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_5_fu_1097_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_3_fu_1080_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state27 <= ap_CS_fsm(17 downto 17);

    ap_done_assign_proc : process(ap_CS_fsm_state27)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state27)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_2_fu_1086_p1, tmp_37_cast_fu_1116_p1, tmp_36_fu_1137_p3, tmp_39_cast_fu_1170_p1, tmp_38_fu_1191_p3, tmp_41_cast_fu_1220_p1, tmp_40_fu_1241_p3, tmp_43_cast_fu_1274_p1, tmp_42_fu_1295_p3, tmp_45_cast_fu_1324_p1, tmp_44_fu_1345_p3, tmp_47_cast_fu_1374_p1, tmp_46_fu_1395_p3, tmp_49_cast_fu_1422_p1, tmp_47_fu_1443_p3, tmp_51_cast_fu_1476_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_0_Addr_A_orig <= tmp_51_cast_fu_1476_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_0_Addr_A_orig <= tmp_47_fu_1443_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_0_Addr_A_orig <= tmp_49_cast_fu_1422_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_0_Addr_A_orig <= tmp_46_fu_1395_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_0_Addr_A_orig <= tmp_47_cast_fu_1374_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_0_Addr_A_orig <= tmp_44_fu_1345_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_0_Addr_A_orig <= tmp_45_cast_fu_1324_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_0_Addr_A_orig <= tmp_42_fu_1295_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_0_Addr_A_orig <= tmp_43_cast_fu_1274_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_0_Addr_A_orig <= tmp_40_fu_1241_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_0_Addr_A_orig <= tmp_41_cast_fu_1220_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_0_Addr_A_orig <= tmp_38_fu_1191_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_0_Addr_A_orig <= tmp_39_cast_fu_1170_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_0_Addr_A_orig <= tmp_36_fu_1137_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_37_cast_fu_1116_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_2_fu_1086_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, tmp_2_fu_1086_p1, tmp_37_cast_fu_1116_p1, tmp_36_fu_1137_p3, tmp_39_cast_fu_1170_p1, tmp_38_fu_1191_p3, tmp_41_cast_fu_1220_p1, tmp_40_fu_1241_p3, tmp_43_cast_fu_1274_p1, tmp_42_fu_1295_p3, tmp_45_cast_fu_1324_p1, tmp_44_fu_1345_p3, tmp_47_cast_fu_1374_p1, tmp_46_fu_1395_p3, tmp_49_cast_fu_1422_p1, tmp_47_fu_1443_p3, tmp_51_cast_fu_1476_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_1_Addr_A_orig <= tmp_51_cast_fu_1476_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_1_Addr_A_orig <= tmp_47_fu_1443_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_1_Addr_A_orig <= tmp_49_cast_fu_1422_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_1_Addr_A_orig <= tmp_46_fu_1395_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_1_Addr_A_orig <= tmp_47_cast_fu_1374_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_1_Addr_A_orig <= tmp_44_fu_1345_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_1_Addr_A_orig <= tmp_45_cast_fu_1324_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_1_Addr_A_orig <= tmp_42_fu_1295_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_1_Addr_A_orig <= tmp_43_cast_fu_1274_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_Addr_A_orig <= tmp_40_fu_1241_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_Addr_A_orig <= tmp_41_cast_fu_1220_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_Addr_A_orig <= tmp_38_fu_1191_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_Addr_A_orig <= tmp_39_cast_fu_1170_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_Addr_A_orig <= tmp_36_fu_1137_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_37_cast_fu_1116_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_2_fu_1086_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_52_cast_fu_1530_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= std_logic_vector(unsigned(tmp1_reg_2027) + unsigned(tmp16_fu_1535_p2));

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_1032_p2 <= "1" when (indvar_flatten_phi_fu_686_p4 = ap_const_lv11_400) else "0";
    exitcond_fu_1050_p2 <= "1" when (j_phi_fu_708_p4 = ap_const_lv6_20) else "0";
    grp_fu_1000_p2 <= std_logic_vector(unsigned(reg_992) + unsigned(grp_fu_980_p2));
    grp_fu_1006_p2 <= std_logic_vector(unsigned(reg_996) + unsigned(grp_fu_986_p2));
    grp_fu_1012_p2 <= std_logic_vector(unsigned(reg_996) + unsigned(grp_fu_974_p2));
    grp_fu_1026_p2 <= std_logic_vector(unsigned(reg_1022) + unsigned(grp_fu_1012_p2));

    grp_fu_715_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, reg_837, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, reg_857, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, reg_877, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, reg_897, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, reg_917, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, reg_937, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, b_0_load_12_reg_1897, b_0_load_13_reg_1937, b_0_load_14_reg_1977, b_0_load_15_reg_2012)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_715_p0 <= b_0_load_15_reg_2012;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_715_p0 <= b_0_load_14_reg_1977;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_715_p0 <= b_0_load_13_reg_1937;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_715_p0 <= b_0_load_12_reg_1897;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_fu_715_p0 <= reg_937;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_715_p0 <= reg_917;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_715_p0 <= reg_897;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            grp_fu_715_p0 <= reg_877;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            grp_fu_715_p0 <= reg_857;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_715_p0 <= reg_837;
        else 
            grp_fu_715_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_715_p1_assign_proc : process(reg_832, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, reg_852, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, reg_872, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, reg_892, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, reg_912, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, reg_932, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, a_0_load_12_reg_1892, a_0_load_13_reg_1932, a_0_load_14_reg_1972, a_0_load_15_reg_2007)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_715_p1 <= a_0_load_15_reg_2007;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_715_p1 <= a_0_load_14_reg_1972;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_715_p1 <= a_0_load_13_reg_1932;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_715_p1 <= a_0_load_12_reg_1892;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_fu_715_p1 <= reg_932;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_715_p1 <= reg_912;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_715_p1 <= reg_892;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            grp_fu_715_p1 <= reg_872;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            grp_fu_715_p1 <= reg_852;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_715_p1 <= reg_832;
        else 
            grp_fu_715_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_716_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, reg_847, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, reg_867, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, reg_887, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, reg_907, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, reg_927, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, reg_947, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, b_1_load_12_reg_1907, b_1_load_13_reg_1947, b_1_load_14_reg_1987, b_1_load_15_reg_2022)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_716_p0 <= b_1_load_15_reg_2022;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_716_p0 <= b_1_load_14_reg_1987;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_716_p0 <= b_1_load_13_reg_1947;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_716_p0 <= b_1_load_12_reg_1907;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_fu_716_p0 <= reg_947;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_716_p0 <= reg_927;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_716_p0 <= reg_907;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            grp_fu_716_p0 <= reg_887;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            grp_fu_716_p0 <= reg_867;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_716_p0 <= reg_847;
        else 
            grp_fu_716_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_716_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, reg_842, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, reg_862, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, reg_882, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, reg_902, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, reg_922, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage12, reg_942, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage0, a_1_load_12_reg_1902, a_1_load_13_reg_1942, a_1_load_14_reg_1982, a_1_load_15_reg_2017)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_716_p1 <= a_1_load_15_reg_2017;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_716_p1 <= a_1_load_14_reg_1982;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_716_p1 <= a_1_load_13_reg_1942;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_716_p1 <= a_1_load_12_reg_1902;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_fu_716_p1 <= reg_942;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_716_p1 <= reg_922;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_716_p1 <= reg_902;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then 
            grp_fu_716_p1 <= reg_882;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then 
            grp_fu_716_p1 <= reg_862;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_716_p1 <= reg_842;
        else 
            grp_fu_716_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_968_p2 <= std_logic_vector(unsigned(reg_960) + unsigned(reg_952));
    grp_fu_974_p2 <= std_logic_vector(unsigned(reg_964) + unsigned(reg_956));
    grp_fu_980_p2 <= std_logic_vector(unsigned(reg_960) + unsigned(reg_952));
    grp_fu_986_p2 <= std_logic_vector(unsigned(reg_964) + unsigned(reg_956));
    i_1_fu_1044_p2 <= std_logic_vector(unsigned(i_phi_fu_697_p4) + unsigned(ap_const_lv6_1));

    i_phi_fu_697_p4_assign_proc : process(i_reg_693, exitcond_flatten_reg_1545, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_1571)
    begin
        if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_697_p4 <= tmp_mid2_v_reg_1571;
        else 
            i_phi_fu_697_p4 <= i_reg_693;
        end if; 
    end process;

    indvar_flatten_next_fu_1038_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_686_p4) + unsigned(ap_const_lv11_1));

    indvar_flatten_phi_fu_686_p4_assign_proc : process(indvar_flatten_reg_682, exitcond_flatten_reg_1545, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1549)
    begin
        if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_686_p4 <= indvar_flatten_next_reg_1549;
        else 
            indvar_flatten_phi_fu_686_p4 <= indvar_flatten_reg_682;
        end if; 
    end process;

    j_1_fu_1494_p2 <= std_logic_vector(unsigned(j_mid2_reg_1554) + unsigned(ap_const_lv6_1));
    j_mid2_fu_1056_p3 <= 
        ap_const_lv6_0 when (exitcond_fu_1050_p2(0) = '1') else 
        j_phi_fu_708_p4;

    j_phi_fu_708_p4_assign_proc : process(j_reg_704, exitcond_flatten_reg_1545, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j_1_reg_2002)
    begin
        if (((exitcond_flatten_reg_1545 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_708_p4 <= j_1_reg_2002;
        else 
            j_phi_fu_708_p4 <= j_reg_704;
        end if; 
    end process;

    tmp16_fu_1535_p2 <= std_logic_vector(unsigned(tmp17_reg_1997) + unsigned(tmp24_reg_2032));
    tmp1_fu_1505_p2 <= std_logic_vector(unsigned(tmp2_reg_1992) + unsigned(tmp9_fu_1499_p2));
    tmp2_fu_1488_p2 <= std_logic_vector(unsigned(reg_1018) + unsigned(tmp6_fu_1482_p2));
    tmp6_fu_1482_p2 <= std_logic_vector(unsigned(reg_992) + unsigned(grp_fu_968_p2));
    tmp9_fu_1499_p2 <= std_logic_vector(unsigned(reg_1018) + unsigned(grp_fu_1000_p2));
    tmp_10_fu_1176_p2 <= (tmp_reg_1577 or ap_const_lv10_4);
    tmp_11_fu_1181_p3 <= (ap_const_lv54_0 & tmp_10_fu_1176_p2);
    tmp_12_fu_1200_p2 <= (tmp_reg_1577 or ap_const_lv10_5);
    tmp_13_fu_1205_p3 <= (ap_const_lv54_0 & tmp_12_fu_1200_p2);
    tmp_14_fu_1226_p2 <= (tmp_reg_1577 or ap_const_lv10_6);
    tmp_15_fu_1231_p3 <= (ap_const_lv54_0 & tmp_14_fu_1226_p2);
    tmp_16_fu_1250_p2 <= (tmp_reg_1577 or ap_const_lv10_7);
    tmp_17_fu_1255_p3 <= (ap_const_lv54_0 & tmp_16_fu_1250_p2);
    tmp_18_fu_1280_p2 <= (tmp_reg_1577 or ap_const_lv10_8);
    tmp_19_fu_1285_p3 <= (ap_const_lv54_0 & tmp_18_fu_1280_p2);
    tmp_20_fu_1304_p2 <= (tmp_reg_1577 or ap_const_lv10_9);
    tmp_21_fu_1309_p3 <= (ap_const_lv54_0 & tmp_20_fu_1304_p2);
    tmp_22_fu_1330_p2 <= (tmp_reg_1577 or ap_const_lv10_A);
    tmp_23_fu_1335_p3 <= (ap_const_lv54_0 & tmp_22_fu_1330_p2);
    tmp_24_fu_1354_p2 <= (tmp_reg_1577 or ap_const_lv10_B);
    tmp_25_fu_1359_p3 <= (ap_const_lv54_0 & tmp_24_fu_1354_p2);
    tmp_26_fu_1380_p2 <= (tmp_reg_1577 or ap_const_lv10_C);
    tmp_27_fu_1385_p3 <= (ap_const_lv54_0 & tmp_26_fu_1380_p2);
    tmp_28_fu_1404_p2 <= (tmp_reg_1577 or ap_const_lv10_D);
    tmp_29_fu_1409_p3 <= (ap_const_lv54_0 & tmp_28_fu_1404_p2);
    tmp_2_cast4_cast_fu_1161_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1554),8));
    tmp_2_cast4_fu_1265_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1554),9));
    tmp_2_cast5_fu_1467_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1554),10));
    tmp_2_cast6_fu_1521_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554),12));
    tmp_2_cast_fu_1107_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1554),7));
    tmp_2_fu_1086_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_1056_p3),64));
    tmp_30_fu_1428_p2 <= (tmp_reg_1577 or ap_const_lv10_E);
    tmp_31_fu_1433_p3 <= (ap_const_lv54_0 & tmp_30_fu_1428_p2);
    tmp_32_fu_1452_p2 <= (tmp_reg_1577 or ap_const_lv10_F);
    tmp_33_fu_1457_p3 <= (ap_const_lv54_0 & tmp_32_fu_1452_p2);
    tmp_34_fu_1510_p3 <= (ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571 & ap_const_lv5_0);
    tmp_35_fu_1110_p2 <= std_logic_vector(unsigned(tmp_2_cast_fu_1107_p1) + unsigned(ap_const_lv7_20));
    tmp_36_cast_fu_1517_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_1510_p3),12));
    tmp_36_fu_1137_p3 <= (ap_const_lv58_1 & j_mid2_reg_1554);
    tmp_37_cast_fu_1116_p1 <= std_logic_vector(resize(unsigned(tmp_35_fu_1110_p2),64));
    tmp_37_fu_1164_p2 <= std_logic_vector(unsigned(tmp_2_cast4_cast_fu_1161_p1) + unsigned(ap_const_lv8_60));
    tmp_38_fu_1191_p3 <= (ap_const_lv58_2 & j_mid2_reg_1554);
    tmp_39_cast_fu_1170_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_1164_p2),64));
    tmp_39_fu_1215_p2 <= std_logic_vector(unsigned(tmp_2_cast4_cast_reg_1666) + unsigned(ap_const_lv8_A0));
    tmp_3_fu_1080_p1 <= std_logic_vector(resize(unsigned(tmp_fu_1072_p3),64));
    tmp_40_fu_1241_p3 <= (ap_const_lv58_3 & j_mid2_reg_1554);
    tmp_41_cast_fu_1220_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_1215_p2),64));
    tmp_41_fu_1268_p2 <= std_logic_vector(unsigned(tmp_2_cast4_fu_1265_p1) + unsigned(ap_const_lv9_E0));
    tmp_42_fu_1295_p3 <= (ap_const_lv58_4 & j_mid2_reg_1554);
    tmp_43_cast_fu_1274_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_1268_p2),64));
    tmp_43_fu_1319_p2 <= std_logic_vector(unsigned(tmp_2_cast4_reg_1756) + unsigned(ap_const_lv9_120));
    tmp_44_fu_1345_p3 <= (ap_const_lv58_5 & j_mid2_reg_1554);
    tmp_45_cast_fu_1324_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_1319_p2),64));
    tmp_45_fu_1369_p2 <= std_logic_vector(unsigned(tmp_2_cast4_reg_1756) + unsigned(ap_const_lv9_160));
    tmp_46_fu_1395_p3 <= (ap_const_lv58_6 & j_mid2_reg_1554);
    tmp_47_cast_fu_1374_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_1369_p2),64));
    tmp_47_fu_1443_p3 <= (ap_const_lv58_7 & j_mid2_reg_1554);
    tmp_48_fu_1470_p2 <= std_logic_vector(unsigned(tmp_2_cast5_fu_1467_p1) + unsigned(ap_const_lv10_1E0));
        tmp_49_cast7_fu_1419_p1 <= std_logic_vector(resize(signed(tmp_39_reg_1711),9));

    tmp_49_cast_fu_1422_p1 <= std_logic_vector(resize(unsigned(tmp_49_cast7_fu_1419_p1),64));
    tmp_49_fu_1524_p2 <= std_logic_vector(unsigned(tmp_36_cast_fu_1517_p1) + unsigned(tmp_2_cast6_fu_1521_p1));
    tmp_4_fu_1092_p2 <= (tmp_reg_1577 or ap_const_lv10_1);
    tmp_51_cast_fu_1476_p1 <= std_logic_vector(resize(unsigned(tmp_48_fu_1470_p2),64));
    tmp_52_cast_fu_1530_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_1524_p2),64));
    tmp_5_fu_1097_p3 <= (ap_const_lv54_0 & tmp_4_fu_1092_p2);
    tmp_7_fu_1122_p2 <= (tmp_reg_1577 or ap_const_lv10_2);
    tmp_8_fu_1127_p3 <= (ap_const_lv54_0 & tmp_7_fu_1122_p2);
    tmp_9_fu_1146_p2 <= (tmp_reg_1577 or ap_const_lv10_3);
    tmp_fu_1072_p3 <= (tmp_mid2_v_fu_1064_p3 & ap_const_lv4_0);
    tmp_mid2_v_fu_1064_p3 <= 
        i_1_fu_1044_p2 when (exitcond_fu_1050_p2(0) = '1') else 
        i_phi_fu_697_p4;
    tmp_s_fu_1151_p3 <= (ap_const_lv54_0 & tmp_9_fu_1146_p2);
end behav;
