// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.680000,HLS_SYN_LAT=16394,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1776,HLS_SYN_LUT=1542}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        b_0_Addr_A,
        b_0_EN_A,
        b_0_WEN_A,
        b_0_Din_A,
        b_0_Dout_A,
        b_0_Clk_A,
        b_0_Rst_A,
        b_1_Addr_A,
        b_1_EN_A,
        b_1_WEN_A,
        b_1_Din_A,
        b_1_Dout_A,
        b_1_Clk_A,
        b_1_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 18'b1;
parameter    ap_ST_fsm_pp0_stage0 = 18'b10;
parameter    ap_ST_fsm_pp0_stage1 = 18'b100;
parameter    ap_ST_fsm_pp0_stage2 = 18'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 18'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 18'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 18'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 18'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 18'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 18'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 18'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 18'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 18'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 18'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 18'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 18'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 18'b10000000000000000;
parameter    ap_ST_fsm_state27 = 18'b100000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_20 = 7'b100000;
parameter    ap_const_lv10_2 = 10'b10;
parameter    ap_const_lv58_1 = 58'b1;
parameter    ap_const_lv10_3 = 10'b11;
parameter    ap_const_lv8_60 = 8'b1100000;
parameter    ap_const_lv10_4 = 10'b100;
parameter    ap_const_lv58_2 = 58'b10;
parameter    ap_const_lv10_5 = 10'b101;
parameter    ap_const_lv8_A0 = 8'b10100000;
parameter    ap_const_lv10_6 = 10'b110;
parameter    ap_const_lv58_3 = 58'b11;
parameter    ap_const_lv10_7 = 10'b111;
parameter    ap_const_lv9_E0 = 9'b11100000;
parameter    ap_const_lv10_8 = 10'b1000;
parameter    ap_const_lv58_4 = 58'b100;
parameter    ap_const_lv10_9 = 10'b1001;
parameter    ap_const_lv9_120 = 9'b100100000;
parameter    ap_const_lv10_A = 10'b1010;
parameter    ap_const_lv58_5 = 58'b101;
parameter    ap_const_lv10_B = 10'b1011;
parameter    ap_const_lv9_160 = 9'b101100000;
parameter    ap_const_lv10_C = 10'b1100;
parameter    ap_const_lv58_6 = 58'b110;
parameter    ap_const_lv10_D = 10'b1101;
parameter    ap_const_lv10_E = 10'b1110;
parameter    ap_const_lv58_7 = 58'b111;
parameter    ap_const_lv10_F = 10'b1111;
parameter    ap_const_lv10_1E0 = 10'b111100000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_11 = 32'b10001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] b_0_Addr_A;
output   b_0_EN_A;
output  [3:0] b_0_WEN_A;
output  [31:0] b_0_Din_A;
input  [31:0] b_0_Dout_A;
output   b_0_Clk_A;
output   b_0_Rst_A;
output  [31:0] b_1_Addr_A;
output   b_1_EN_A;
output  [3:0] b_1_WEN_A;
output  [31:0] b_1_Din_A;
input  [31:0] b_1_Dout_A;
output   b_1_Clk_A;
output   b_1_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg b_0_EN_A;
reg b_1_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_682;
reg   [5:0] i_reg_693;
reg   [5:0] j_reg_704;
reg  signed [31:0] reg_832;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1545;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg  signed [31:0] reg_837;
reg  signed [31:0] reg_842;
reg  signed [31:0] reg_847;
reg  signed [31:0] reg_852;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage8;
reg  signed [31:0] reg_857;
reg  signed [31:0] reg_862;
reg  signed [31:0] reg_867;
reg  signed [31:0] reg_872;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage9;
reg  signed [31:0] reg_877;
reg  signed [31:0] reg_882;
reg  signed [31:0] reg_887;
reg  signed [31:0] reg_892;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage10;
reg  signed [31:0] reg_897;
reg  signed [31:0] reg_902;
reg  signed [31:0] reg_907;
reg  signed [31:0] reg_912;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage11;
reg  signed [31:0] reg_917;
reg  signed [31:0] reg_922;
reg  signed [31:0] reg_927;
reg  signed [31:0] reg_932;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage12;
reg  signed [31:0] reg_937;
reg  signed [31:0] reg_942;
reg  signed [31:0] reg_947;
wire   [31:0] grp_fu_715_p2;
reg   [31:0] reg_952;
wire   [0:0] ap_CS_fsm_pp0_stage13;
wire   [0:0] ap_CS_fsm_pp0_stage15;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545;
wire   [31:0] grp_fu_716_p2;
reg   [31:0] reg_956;
reg   [31:0] reg_960;
wire   [0:0] ap_CS_fsm_pp0_stage14;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [31:0] reg_964;
wire   [31:0] grp_fu_968_p2;
reg   [31:0] reg_992;
wire   [31:0] grp_fu_974_p2;
reg   [31:0] reg_996;
wire   [31:0] grp_fu_1000_p2;
reg   [31:0] reg_1018;
wire   [31:0] grp_fu_1006_p2;
reg   [31:0] reg_1022;
wire   [0:0] exitcond_flatten_fu_1032_p2;
wire   [10:0] indvar_flatten_next_fu_1038_p2;
reg   [10:0] indvar_flatten_next_reg_1549;
wire   [5:0] j_mid2_fu_1056_p3;
reg   [5:0] j_mid2_reg_1554;
reg   [5:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554;
wire   [5:0] tmp_mid2_v_fu_1064_p3;
reg   [5:0] tmp_mid2_v_reg_1571;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571;
wire   [9:0] tmp_fu_1072_p3;
reg   [9:0] tmp_reg_1577;
wire   [7:0] tmp_2_cast4_cast_fu_1161_p1;
reg   [7:0] tmp_2_cast4_cast_reg_1666;
wire   [7:0] tmp_39_fu_1215_p2;
reg   [7:0] tmp_39_reg_1711;
wire   [8:0] tmp_2_cast4_fu_1265_p1;
reg   [8:0] tmp_2_cast4_reg_1756;
reg  signed [31:0] a_0_load_12_reg_1892;
reg  signed [31:0] b_0_load_12_reg_1897;
reg  signed [31:0] a_1_load_12_reg_1902;
reg  signed [31:0] b_1_load_12_reg_1907;
reg  signed [31:0] a_0_load_13_reg_1932;
reg  signed [31:0] b_0_load_13_reg_1937;
reg  signed [31:0] a_1_load_13_reg_1942;
reg  signed [31:0] b_1_load_13_reg_1947;
reg  signed [31:0] a_0_load_14_reg_1972;
reg  signed [31:0] b_0_load_14_reg_1977;
reg  signed [31:0] a_1_load_14_reg_1982;
reg  signed [31:0] b_1_load_14_reg_1987;
wire   [31:0] tmp2_fu_1488_p2;
reg   [31:0] tmp2_reg_1992;
wire   [31:0] grp_fu_1026_p2;
reg   [31:0] tmp17_reg_1997;
wire   [5:0] j_1_fu_1494_p2;
reg   [5:0] j_1_reg_2002;
reg  signed [31:0] a_0_load_15_reg_2007;
reg  signed [31:0] b_0_load_15_reg_2012;
reg  signed [31:0] a_1_load_15_reg_2017;
reg  signed [31:0] b_1_load_15_reg_2022;
wire   [31:0] tmp1_fu_1505_p2;
reg   [31:0] tmp1_reg_2027;
reg   [31:0] tmp24_reg_2032;
reg   [10:0] indvar_flatten_phi_fu_686_p4;
reg   [5:0] i_phi_fu_697_p4;
reg   [5:0] j_phi_fu_708_p4;
wire   [63:0] tmp_3_fu_1080_p1;
wire   [63:0] tmp_2_fu_1086_p1;
wire   [63:0] tmp_5_fu_1097_p3;
wire   [63:0] tmp_37_cast_fu_1116_p1;
wire   [63:0] tmp_8_fu_1127_p3;
wire   [63:0] tmp_36_fu_1137_p3;
wire   [63:0] tmp_s_fu_1151_p3;
wire   [63:0] tmp_39_cast_fu_1170_p1;
wire   [63:0] tmp_11_fu_1181_p3;
wire   [63:0] tmp_38_fu_1191_p3;
wire   [63:0] tmp_13_fu_1205_p3;
wire   [63:0] tmp_41_cast_fu_1220_p1;
wire   [63:0] tmp_15_fu_1231_p3;
wire   [63:0] tmp_40_fu_1241_p3;
wire   [63:0] tmp_17_fu_1255_p3;
wire   [63:0] tmp_43_cast_fu_1274_p1;
wire   [63:0] tmp_19_fu_1285_p3;
wire   [63:0] tmp_42_fu_1295_p3;
wire   [63:0] tmp_21_fu_1309_p3;
wire   [63:0] tmp_45_cast_fu_1324_p1;
wire   [63:0] tmp_23_fu_1335_p3;
wire   [63:0] tmp_44_fu_1345_p3;
wire   [63:0] tmp_25_fu_1359_p3;
wire   [63:0] tmp_47_cast_fu_1374_p1;
wire   [63:0] tmp_27_fu_1385_p3;
wire   [63:0] tmp_46_fu_1395_p3;
wire   [63:0] tmp_29_fu_1409_p3;
wire   [63:0] tmp_49_cast_fu_1422_p1;
wire   [63:0] tmp_31_fu_1433_p3;
wire   [63:0] tmp_47_fu_1443_p3;
wire   [63:0] tmp_33_fu_1457_p3;
wire   [63:0] tmp_51_cast_fu_1476_p1;
wire   [63:0] tmp_52_cast_fu_1530_p1;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] b_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] b_1_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg  signed [31:0] grp_fu_715_p0;
reg  signed [31:0] grp_fu_715_p1;
reg  signed [31:0] grp_fu_716_p0;
reg  signed [31:0] grp_fu_716_p1;
wire   [31:0] grp_fu_980_p2;
wire   [31:0] grp_fu_986_p2;
wire   [31:0] grp_fu_1012_p2;
wire   [0:0] exitcond_fu_1050_p2;
wire   [5:0] i_1_fu_1044_p2;
wire   [9:0] tmp_4_fu_1092_p2;
wire   [6:0] tmp_2_cast_fu_1107_p1;
wire   [6:0] tmp_35_fu_1110_p2;
wire   [9:0] tmp_7_fu_1122_p2;
wire   [9:0] tmp_9_fu_1146_p2;
wire   [7:0] tmp_37_fu_1164_p2;
wire   [9:0] tmp_10_fu_1176_p2;
wire   [9:0] tmp_12_fu_1200_p2;
wire   [9:0] tmp_14_fu_1226_p2;
wire   [9:0] tmp_16_fu_1250_p2;
wire   [8:0] tmp_41_fu_1268_p2;
wire   [9:0] tmp_18_fu_1280_p2;
wire   [9:0] tmp_20_fu_1304_p2;
wire   [8:0] tmp_43_fu_1319_p2;
wire   [9:0] tmp_22_fu_1330_p2;
wire   [9:0] tmp_24_fu_1354_p2;
wire   [8:0] tmp_45_fu_1369_p2;
wire   [9:0] tmp_26_fu_1380_p2;
wire   [9:0] tmp_28_fu_1404_p2;
wire  signed [8:0] tmp_49_cast7_fu_1419_p1;
wire   [9:0] tmp_30_fu_1428_p2;
wire   [9:0] tmp_32_fu_1452_p2;
wire   [9:0] tmp_2_cast5_fu_1467_p1;
wire   [9:0] tmp_48_fu_1470_p2;
wire   [31:0] tmp6_fu_1482_p2;
wire   [31:0] tmp9_fu_1499_p2;
wire   [10:0] tmp_34_fu_1510_p3;
wire   [11:0] tmp_36_cast_fu_1517_p1;
wire   [11:0] tmp_2_cast6_fu_1521_p1;
wire   [11:0] tmp_49_fu_1524_p2;
wire   [31:0] tmp16_fu_1535_p2;
wire   [0:0] ap_CS_fsm_state27;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_715_p0),
    .din1(grp_fu_715_p1),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_716_p0),
    .din1(grp_fu_716_p1),
    .ce(1'b1),
    .dout(grp_fu_716_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_1032_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & ~(exitcond_flatten_reg_1545 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_693 <= tmp_mid2_v_reg_1571;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_693 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_682 <= indvar_flatten_next_reg_1549;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_682 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_704 <= j_1_reg_2002;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_704 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        a_0_load_12_reg_1892 <= a_0_Dout_A;
        a_1_load_12_reg_1902 <= a_1_Dout_A;
        b_0_load_12_reg_1897 <= b_0_Dout_A;
        b_1_load_12_reg_1907 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        a_0_load_13_reg_1932 <= a_0_Dout_A;
        a_1_load_13_reg_1942 <= a_1_Dout_A;
        b_0_load_13_reg_1937 <= b_0_Dout_A;
        b_1_load_13_reg_1947 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        a_0_load_14_reg_1972 <= a_0_Dout_A;
        a_1_load_14_reg_1982 <= a_1_Dout_A;
        b_0_load_14_reg_1977 <= b_0_Dout_A;
        b_1_load_14_reg_1987 <= b_1_Dout_A;
        j_1_reg_2002 <= j_1_fu_1494_p2;
        tmp17_reg_1997 <= grp_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_load_15_reg_2007 <= a_0_Dout_A;
        a_1_load_15_reg_2017 <= a_1_Dout_A;
        b_0_load_15_reg_2012 <= b_0_Dout_A;
        b_1_load_15_reg_2022 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545 <= exitcond_flatten_reg_1545;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554 <= j_mid2_reg_1554;
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571 <= tmp_mid2_v_reg_1571;
        exitcond_flatten_reg_1545 <= exitcond_flatten_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1549 <= indvar_flatten_next_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_1032_p2))) begin
        j_mid2_reg_1554 <= j_mid2_fu_1056_p3;
        tmp_reg_1577[9 : 4] <= tmp_fu_1072_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) begin
        reg_1018 <= grp_fu_1000_p2;
        reg_1022 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_832 <= a_0_Dout_A;
        reg_837 <= b_0_Dout_A;
        reg_842 <= a_1_Dout_A;
        reg_847 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_852 <= a_0_Dout_A;
        reg_857 <= b_0_Dout_A;
        reg_862 <= a_1_Dout_A;
        reg_867 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_872 <= a_0_Dout_A;
        reg_877 <= b_0_Dout_A;
        reg_882 <= a_1_Dout_A;
        reg_887 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_892 <= a_0_Dout_A;
        reg_897 <= b_0_Dout_A;
        reg_902 <= a_1_Dout_A;
        reg_907 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        reg_912 <= a_0_Dout_A;
        reg_917 <= b_0_Dout_A;
        reg_922 <= a_1_Dout_A;
        reg_927 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_932 <= a_0_Dout_A;
        reg_937 <= b_0_Dout_A;
        reg_942 <= a_1_Dout_A;
        reg_947 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) begin
        reg_952 <= grp_fu_715_p2;
        reg_956 <= grp_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) begin
        reg_960 <= grp_fu_715_p2;
        reg_964 <= grp_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545)))) begin
        reg_992 <= grp_fu_968_p2;
        reg_996 <= grp_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545))) begin
        tmp1_reg_2027 <= tmp1_fu_1505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545))) begin
        tmp24_reg_2032 <= grp_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp2_reg_1992 <= tmp2_fu_1488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_2_cast4_cast_reg_1666[5 : 0] <= tmp_2_cast4_cast_fu_1161_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_2_cast4_reg_1756[5 : 0] <= tmp_2_cast4_fu_1265_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_39_reg_1711 <= tmp_39_fu_1215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_1032_p2))) begin
        tmp_mid2_v_reg_1571 <= tmp_mid2_v_fu_1064_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            a_0_Addr_A_orig = tmp_33_fu_1457_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            a_0_Addr_A_orig = tmp_31_fu_1433_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            a_0_Addr_A_orig = tmp_29_fu_1409_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            a_0_Addr_A_orig = tmp_27_fu_1385_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            a_0_Addr_A_orig = tmp_25_fu_1359_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            a_0_Addr_A_orig = tmp_23_fu_1335_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            a_0_Addr_A_orig = tmp_21_fu_1309_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            a_0_Addr_A_orig = tmp_19_fu_1285_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_0_Addr_A_orig = tmp_17_fu_1255_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_0_Addr_A_orig = tmp_15_fu_1231_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_13_fu_1205_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_11_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_s_fu_1151_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_8_fu_1127_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_5_fu_1097_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_3_fu_1080_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            a_1_Addr_A_orig = tmp_33_fu_1457_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            a_1_Addr_A_orig = tmp_31_fu_1433_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            a_1_Addr_A_orig = tmp_29_fu_1409_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            a_1_Addr_A_orig = tmp_27_fu_1385_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            a_1_Addr_A_orig = tmp_25_fu_1359_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            a_1_Addr_A_orig = tmp_23_fu_1335_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            a_1_Addr_A_orig = tmp_21_fu_1309_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            a_1_Addr_A_orig = tmp_19_fu_1285_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_1_Addr_A_orig = tmp_17_fu_1255_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_1_Addr_A_orig = tmp_15_fu_1231_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_1_Addr_A_orig = tmp_13_fu_1205_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_1_Addr_A_orig = tmp_11_fu_1181_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_s_fu_1151_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_8_fu_1127_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_5_fu_1097_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_3_fu_1080_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_0_Addr_A_orig = tmp_51_cast_fu_1476_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_0_Addr_A_orig = tmp_47_fu_1443_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_0_Addr_A_orig = tmp_49_cast_fu_1422_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_0_Addr_A_orig = tmp_46_fu_1395_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_0_Addr_A_orig = tmp_47_cast_fu_1374_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_0_Addr_A_orig = tmp_44_fu_1345_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_0_Addr_A_orig = tmp_45_cast_fu_1324_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_0_Addr_A_orig = tmp_42_fu_1295_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_0_Addr_A_orig = tmp_43_cast_fu_1274_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_0_Addr_A_orig = tmp_40_fu_1241_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_0_Addr_A_orig = tmp_41_cast_fu_1220_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_0_Addr_A_orig = tmp_38_fu_1191_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_0_Addr_A_orig = tmp_39_cast_fu_1170_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_0_Addr_A_orig = tmp_36_fu_1137_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_0_Addr_A_orig = tmp_37_cast_fu_1116_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_0_Addr_A_orig = tmp_2_fu_1086_p1;
        end else begin
            b_0_Addr_A_orig = 'bx;
        end
    end else begin
        b_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_0_EN_A = 1'b1;
    end else begin
        b_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_1_Addr_A_orig = tmp_51_cast_fu_1476_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_1_Addr_A_orig = tmp_47_fu_1443_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_1_Addr_A_orig = tmp_49_cast_fu_1422_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_1_Addr_A_orig = tmp_46_fu_1395_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_1_Addr_A_orig = tmp_47_cast_fu_1374_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_1_Addr_A_orig = tmp_44_fu_1345_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_1_Addr_A_orig = tmp_45_cast_fu_1324_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_1_Addr_A_orig = tmp_42_fu_1295_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_1_Addr_A_orig = tmp_43_cast_fu_1274_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_1_Addr_A_orig = tmp_40_fu_1241_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_1_Addr_A_orig = tmp_41_cast_fu_1220_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_1_Addr_A_orig = tmp_38_fu_1191_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_1_Addr_A_orig = tmp_39_cast_fu_1170_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_1_Addr_A_orig = tmp_36_fu_1137_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_1_Addr_A_orig = tmp_37_cast_fu_1116_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_1_Addr_A_orig = tmp_2_fu_1086_p1;
        end else begin
            b_1_Addr_A_orig = 'bx;
        end
    end else begin
        b_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_1_EN_A = 1'b1;
    end else begin
        b_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1545))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_715_p0 = b_0_load_15_reg_2012;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_715_p0 = b_0_load_14_reg_1977;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_715_p0 = b_0_load_13_reg_1937;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_715_p0 = b_0_load_12_reg_1897;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_715_p0 = reg_937;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_715_p0 = reg_917;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_715_p0 = reg_897;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_715_p0 = reg_877;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_715_p0 = reg_857;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_fu_715_p0 = reg_837;
    end else begin
        grp_fu_715_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_715_p1 = a_0_load_15_reg_2007;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_715_p1 = a_0_load_14_reg_1972;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_715_p1 = a_0_load_13_reg_1932;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_715_p1 = a_0_load_12_reg_1892;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_715_p1 = reg_932;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_715_p1 = reg_912;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_715_p1 = reg_892;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_715_p1 = reg_872;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_715_p1 = reg_852;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_fu_715_p1 = reg_832;
    end else begin
        grp_fu_715_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_716_p0 = b_1_load_15_reg_2022;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_716_p0 = b_1_load_14_reg_1987;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_716_p0 = b_1_load_13_reg_1947;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_716_p0 = b_1_load_12_reg_1907;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_716_p0 = reg_947;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_716_p0 = reg_927;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_716_p0 = reg_907;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_716_p0 = reg_887;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_716_p0 = reg_867;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_fu_716_p0 = reg_847;
    end else begin
        grp_fu_716_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_716_p1 = a_1_load_15_reg_2017;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_716_p1 = a_1_load_14_reg_1982;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_716_p1 = a_1_load_13_reg_1942;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_716_p1 = a_1_load_12_reg_1902;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        grp_fu_716_p1 = reg_942;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_716_p1 = reg_922;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_716_p1 = reg_902;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_716_p1 = reg_882;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_716_p1 = reg_862;
    end else if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_fu_716_p1 = reg_842;
    end else begin
        grp_fu_716_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_697_p4 = tmp_mid2_v_reg_1571;
    end else begin
        i_phi_fu_697_p4 = i_reg_693;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_686_p4 = indvar_flatten_next_reg_1549;
    end else begin
        indvar_flatten_phi_fu_686_p4 = indvar_flatten_reg_682;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1545 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_708_p4 = j_1_reg_2002;
    end else begin
        j_phi_fu_708_p4 = j_reg_704;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_1032_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
        end
        ap_ST_fsm_pp0_stage8 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_11];

assign b_0_Addr_A = b_0_Addr_A_orig << ap_const_lv32_2;

assign b_0_Clk_A = ap_clk;

assign b_0_Din_A = ap_const_lv32_0;

assign b_0_Rst_A = ap_rst;

assign b_0_WEN_A = ap_const_lv4_0;

assign b_1_Addr_A = b_1_Addr_A_orig << ap_const_lv32_2;

assign b_1_Clk_A = ap_clk;

assign b_1_Din_A = ap_const_lv32_0;

assign b_1_Rst_A = ap_rst;

assign b_1_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_52_cast_fu_1530_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = (tmp1_reg_2027 + tmp16_fu_1535_p2);

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_1032_p2 = ((indvar_flatten_phi_fu_686_p4 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_fu_1050_p2 = ((j_phi_fu_708_p4 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign grp_fu_1000_p2 = (reg_992 + grp_fu_980_p2);

assign grp_fu_1006_p2 = (reg_996 + grp_fu_986_p2);

assign grp_fu_1012_p2 = (reg_996 + grp_fu_974_p2);

assign grp_fu_1026_p2 = (reg_1022 + grp_fu_1012_p2);

assign grp_fu_968_p2 = (reg_960 + reg_952);

assign grp_fu_974_p2 = (reg_964 + reg_956);

assign grp_fu_980_p2 = (reg_960 + reg_952);

assign grp_fu_986_p2 = (reg_964 + reg_956);

assign i_1_fu_1044_p2 = (i_phi_fu_697_p4 + ap_const_lv6_1);

assign indvar_flatten_next_fu_1038_p2 = (indvar_flatten_phi_fu_686_p4 + ap_const_lv11_1);

assign j_1_fu_1494_p2 = (j_mid2_reg_1554 + ap_const_lv6_1);

assign j_mid2_fu_1056_p3 = ((exitcond_fu_1050_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j_phi_fu_708_p4);

assign tmp16_fu_1535_p2 = (tmp17_reg_1997 + tmp24_reg_2032);

assign tmp1_fu_1505_p2 = (tmp2_reg_1992 + tmp9_fu_1499_p2);

assign tmp2_fu_1488_p2 = (reg_1018 + tmp6_fu_1482_p2);

assign tmp6_fu_1482_p2 = (reg_992 + grp_fu_968_p2);

assign tmp9_fu_1499_p2 = (reg_1018 + grp_fu_1000_p2);

assign tmp_10_fu_1176_p2 = (tmp_reg_1577 | ap_const_lv10_4);

assign tmp_11_fu_1181_p3 = {{ap_const_lv54_0}, {tmp_10_fu_1176_p2}};

assign tmp_12_fu_1200_p2 = (tmp_reg_1577 | ap_const_lv10_5);

assign tmp_13_fu_1205_p3 = {{ap_const_lv54_0}, {tmp_12_fu_1200_p2}};

assign tmp_14_fu_1226_p2 = (tmp_reg_1577 | ap_const_lv10_6);

assign tmp_15_fu_1231_p3 = {{ap_const_lv54_0}, {tmp_14_fu_1226_p2}};

assign tmp_16_fu_1250_p2 = (tmp_reg_1577 | ap_const_lv10_7);

assign tmp_17_fu_1255_p3 = {{ap_const_lv54_0}, {tmp_16_fu_1250_p2}};

assign tmp_18_fu_1280_p2 = (tmp_reg_1577 | ap_const_lv10_8);

assign tmp_19_fu_1285_p3 = {{ap_const_lv54_0}, {tmp_18_fu_1280_p2}};

assign tmp_20_fu_1304_p2 = (tmp_reg_1577 | ap_const_lv10_9);

assign tmp_21_fu_1309_p3 = {{ap_const_lv54_0}, {tmp_20_fu_1304_p2}};

assign tmp_22_fu_1330_p2 = (tmp_reg_1577 | ap_const_lv10_A);

assign tmp_23_fu_1335_p3 = {{ap_const_lv54_0}, {tmp_22_fu_1330_p2}};

assign tmp_24_fu_1354_p2 = (tmp_reg_1577 | ap_const_lv10_B);

assign tmp_25_fu_1359_p3 = {{ap_const_lv54_0}, {tmp_24_fu_1354_p2}};

assign tmp_26_fu_1380_p2 = (tmp_reg_1577 | ap_const_lv10_C);

assign tmp_27_fu_1385_p3 = {{ap_const_lv54_0}, {tmp_26_fu_1380_p2}};

assign tmp_28_fu_1404_p2 = (tmp_reg_1577 | ap_const_lv10_D);

assign tmp_29_fu_1409_p3 = {{ap_const_lv54_0}, {tmp_28_fu_1404_p2}};

assign tmp_2_cast4_cast_fu_1161_p1 = j_mid2_reg_1554;

assign tmp_2_cast4_fu_1265_p1 = j_mid2_reg_1554;

assign tmp_2_cast5_fu_1467_p1 = j_mid2_reg_1554;

assign tmp_2_cast6_fu_1521_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_1554;

assign tmp_2_cast_fu_1107_p1 = j_mid2_reg_1554;

assign tmp_2_fu_1086_p1 = j_mid2_fu_1056_p3;

assign tmp_30_fu_1428_p2 = (tmp_reg_1577 | ap_const_lv10_E);

assign tmp_31_fu_1433_p3 = {{ap_const_lv54_0}, {tmp_30_fu_1428_p2}};

assign tmp_32_fu_1452_p2 = (tmp_reg_1577 | ap_const_lv10_F);

assign tmp_33_fu_1457_p3 = {{ap_const_lv54_0}, {tmp_32_fu_1452_p2}};

assign tmp_34_fu_1510_p3 = {{ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1571}, {ap_const_lv5_0}};

assign tmp_35_fu_1110_p2 = (tmp_2_cast_fu_1107_p1 + ap_const_lv7_20);

assign tmp_36_cast_fu_1517_p1 = tmp_34_fu_1510_p3;

assign tmp_36_fu_1137_p3 = {{ap_const_lv58_1}, {j_mid2_reg_1554}};

assign tmp_37_cast_fu_1116_p1 = tmp_35_fu_1110_p2;

assign tmp_37_fu_1164_p2 = (tmp_2_cast4_cast_fu_1161_p1 + ap_const_lv8_60);

assign tmp_38_fu_1191_p3 = {{ap_const_lv58_2}, {j_mid2_reg_1554}};

assign tmp_39_cast_fu_1170_p1 = tmp_37_fu_1164_p2;

assign tmp_39_fu_1215_p2 = ($signed(tmp_2_cast4_cast_reg_1666) + $signed(ap_const_lv8_A0));

assign tmp_3_fu_1080_p1 = tmp_fu_1072_p3;

assign tmp_40_fu_1241_p3 = {{ap_const_lv58_3}, {j_mid2_reg_1554}};

assign tmp_41_cast_fu_1220_p1 = tmp_39_fu_1215_p2;

assign tmp_41_fu_1268_p2 = (tmp_2_cast4_fu_1265_p1 + ap_const_lv9_E0);

assign tmp_42_fu_1295_p3 = {{ap_const_lv58_4}, {j_mid2_reg_1554}};

assign tmp_43_cast_fu_1274_p1 = tmp_41_fu_1268_p2;

assign tmp_43_fu_1319_p2 = ($signed(tmp_2_cast4_reg_1756) + $signed(ap_const_lv9_120));

assign tmp_44_fu_1345_p3 = {{ap_const_lv58_5}, {j_mid2_reg_1554}};

assign tmp_45_cast_fu_1324_p1 = tmp_43_fu_1319_p2;

assign tmp_45_fu_1369_p2 = ($signed(tmp_2_cast4_reg_1756) + $signed(ap_const_lv9_160));

assign tmp_46_fu_1395_p3 = {{ap_const_lv58_6}, {j_mid2_reg_1554}};

assign tmp_47_cast_fu_1374_p1 = tmp_45_fu_1369_p2;

assign tmp_47_fu_1443_p3 = {{ap_const_lv58_7}, {j_mid2_reg_1554}};

assign tmp_48_fu_1470_p2 = (tmp_2_cast5_fu_1467_p1 + ap_const_lv10_1E0);

assign tmp_49_cast7_fu_1419_p1 = $signed(tmp_39_reg_1711);

assign tmp_49_cast_fu_1422_p1 = $unsigned(tmp_49_cast7_fu_1419_p1);

assign tmp_49_fu_1524_p2 = (tmp_36_cast_fu_1517_p1 + tmp_2_cast6_fu_1521_p1);

assign tmp_4_fu_1092_p2 = (tmp_reg_1577 | ap_const_lv10_1);

assign tmp_51_cast_fu_1476_p1 = tmp_48_fu_1470_p2;

assign tmp_52_cast_fu_1530_p1 = tmp_49_fu_1524_p2;

assign tmp_5_fu_1097_p3 = {{ap_const_lv54_0}, {tmp_4_fu_1092_p2}};

assign tmp_7_fu_1122_p2 = (tmp_reg_1577 | ap_const_lv10_2);

assign tmp_8_fu_1127_p3 = {{ap_const_lv54_0}, {tmp_7_fu_1122_p2}};

assign tmp_9_fu_1146_p2 = (tmp_reg_1577 | ap_const_lv10_3);

assign tmp_fu_1072_p3 = {{tmp_mid2_v_fu_1064_p3}, {ap_const_lv4_0}};

assign tmp_mid2_v_fu_1064_p3 = ((exitcond_fu_1050_p2[0:0] === 1'b1) ? i_1_fu_1044_p2 : i_phi_fu_697_p4);

assign tmp_s_fu_1151_p3 = {{ap_const_lv54_0}, {tmp_9_fu_1146_p2}};

always @ (posedge ap_clk) begin
    tmp_reg_1577[3:0] <= 4'b0000;
    tmp_2_cast4_cast_reg_1666[7:6] <= 2'b00;
    tmp_2_cast4_reg_1756[8:6] <= 3'b000;
end

endmodule //matmul_hw
