

================================================================
== Vivado HLS Report for 'matmul_hw'
================================================================
* Date:           Wed Apr 26 10:09:43 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul_int
* Solution:       matmul_7b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.15|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1548|  1548|  1549|  1549|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- L_col   |  1546|  1546|        17|          6|          1|   256|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 1
  Pipeline-0: II = 6, D = 17, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	19  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	2  / true
19 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_0_2 (8)  [1/1] 0.00ns
:0  %a_row_0_2 = alloca i32

ST_1: a_row_1_2 (9)  [1/1] 0.00ns
:1  %a_row_1_2 = alloca i32

ST_1: a_row_2_2 (10)  [1/1] 0.00ns
:2  %a_row_2_2 = alloca i32

ST_1: a_row_3_2 (11)  [1/1] 0.00ns
:3  %a_row_3_2 = alloca i32

ST_1: a_row_4_2 (12)  [1/1] 0.00ns
:4  %a_row_4_2 = alloca i32

ST_1: a_row_5_2 (13)  [1/1] 0.00ns
:5  %a_row_5_2 = alloca i32

ST_1: a_row_6_2 (14)  [1/1] 0.00ns
:6  %a_row_6_2 = alloca i32

ST_1: a_row_7_2 (15)  [1/1] 0.00ns
:7  %a_row_7_2 = alloca i32

ST_1: a_row_8_2 (16)  [1/1] 0.00ns
:8  %a_row_8_2 = alloca i32

ST_1: a_row_9_2 (17)  [1/1] 0.00ns
:9  %a_row_9_2 = alloca i32

ST_1: a_row_10_2 (18)  [1/1] 0.00ns
:10  %a_row_10_2 = alloca i32

ST_1: a_row_11_2 (19)  [1/1] 0.00ns
:11  %a_row_11_2 = alloca i32

ST_1: a_row_12_2 (20)  [1/1] 0.00ns
:12  %a_row_12_2 = alloca i32

ST_1: a_row_13_2 (21)  [1/1] 0.00ns
:13  %a_row_13_2 = alloca i32

ST_1: a_row_14_2 (22)  [1/1] 0.00ns
:14  %a_row_14_2 = alloca i32

ST_1: a_row_15_2 (23)  [1/1] 0.00ns
:15  %a_row_15_2 = alloca i32

ST_1: StgValue_36 (24)  [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %a_2), !map !7

ST_1: StgValue_37 (25)  [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap([96 x i32]* %a_1), !map !14

ST_1: StgValue_38 (26)  [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap([96 x i32]* %a_0), !map !20

ST_1: StgValue_39 (27)  [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %b_2), !map !26

ST_1: StgValue_40 (28)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([96 x i32]* %b_1), !map !31

ST_1: StgValue_41 (29)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap([96 x i32]* %b_0), !map !36

ST_1: StgValue_42 (30)  [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %c), !map !41

ST_1: StgValue_43 (31)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matmul_hw_str) nounwind

ST_1: b_copy_0 (32)  [1/1] 0.00ns  loc: matmul.c:18
:24  %b_copy_0 = alloca [16 x i32], align 16

ST_1: b_copy_1 (33)  [1/1] 0.00ns  loc: matmul.c:18
:25  %b_copy_1 = alloca [16 x i32], align 16

ST_1: b_copy_2 (34)  [1/1] 0.00ns  loc: matmul.c:18
:26  %b_copy_2 = alloca [16 x i32], align 16

ST_1: b_copy_3 (35)  [1/1] 0.00ns  loc: matmul.c:18
:27  %b_copy_3 = alloca [16 x i32], align 16

ST_1: b_copy_4 (36)  [1/1] 0.00ns  loc: matmul.c:18
:28  %b_copy_4 = alloca [16 x i32], align 16

ST_1: b_copy_5 (37)  [1/1] 0.00ns  loc: matmul.c:18
:29  %b_copy_5 = alloca [16 x i32], align 16

ST_1: b_copy_6 (38)  [1/1] 0.00ns  loc: matmul.c:18
:30  %b_copy_6 = alloca [16 x i32], align 16

ST_1: b_copy_7 (39)  [1/1] 0.00ns  loc: matmul.c:18
:31  %b_copy_7 = alloca [16 x i32], align 16

ST_1: b_copy_8 (40)  [1/1] 0.00ns  loc: matmul.c:18
:32  %b_copy_8 = alloca [16 x i32], align 16

ST_1: b_copy_9 (41)  [1/1] 0.00ns  loc: matmul.c:18
:33  %b_copy_9 = alloca [16 x i32], align 16

ST_1: b_copy_10 (42)  [1/1] 0.00ns  loc: matmul.c:18
:34  %b_copy_10 = alloca [16 x i32], align 16

ST_1: b_copy_11 (43)  [1/1] 0.00ns  loc: matmul.c:18
:35  %b_copy_11 = alloca [16 x i32], align 16

ST_1: b_copy_12 (44)  [1/1] 0.00ns  loc: matmul.c:18
:36  %b_copy_12 = alloca [16 x i32], align 16

ST_1: b_copy_13 (45)  [1/1] 0.00ns  loc: matmul.c:18
:37  %b_copy_13 = alloca [16 x i32], align 16

ST_1: b_copy_14 (46)  [1/1] 0.00ns  loc: matmul.c:18
:38  %b_copy_14 = alloca [16 x i32], align 16

ST_1: b_copy_15 (47)  [1/1] 0.00ns  loc: matmul.c:18
:39  %b_copy_15 = alloca [16 x i32], align 16

ST_1: StgValue_60 (48)  [1/1] 0.00ns  loc: matmul.c:6
:40  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_61 (49)  [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecInterface([96 x i32]* %a_0, [96 x i32]* %a_1, [64 x i32]* %a_2, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_62 (50)  [1/1] 0.00ns
:42  call void (...)* @_ssdm_op_SpecMemCore([96 x i32]* %a_0, [96 x i32]* %a_1, [64 x i32]* %a_2, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_63 (51)  [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecInterface([96 x i32]* %b_0, [96 x i32]* %b_1, [64 x i32]* %b_2, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_64 (52)  [1/1] 0.00ns
:44  call void (...)* @_ssdm_op_SpecMemCore([96 x i32]* %b_0, [96 x i32]* %b_1, [64 x i32]* %b_2, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_65 (53)  [1/1] 0.00ns
:45  call void (...)* @_ssdm_op_SpecInterface([256 x i32]* %c, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_66 (54)  [1/1] 0.00ns
:46  call void (...)* @_ssdm_op_SpecMemCore([256 x i32]* %c, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_67 (55)  [1/1] 1.57ns  loc: matmul.c:21
:47  br label %.preheader7


 <State 2>: 8.12ns
ST_2: indvar_flatten (57)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i9 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit ]

ST_2: i (58)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7:1  %i = phi i5 [ 0, %0 ], [ %tmp_1_mid2_v, %.loopexit ]

ST_2: j (59)  [1/1] 0.00ns
.preheader7:2  %j = phi i5 [ 0, %0 ], [ %j_1, %.loopexit ]

ST_2: exitcond_flatten (60)  [1/1] 2.51ns
.preheader7:3  %exitcond_flatten = icmp eq i9 %indvar_flatten, -256

ST_2: indvar_flatten_next (61)  [1/1] 1.79ns
.preheader7:4  %indvar_flatten_next = add i9 %indvar_flatten, 1

ST_2: StgValue_73 (62)  [1/1] 0.00ns
.preheader7:5  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (80)  [1/1] 1.67ns  loc: matmul.c:21
.preheader7.preheader:16  %i_1 = add i5 %i, 1

ST_2: exitcond (83)  [1/1] 2.37ns  loc: matmul.c:23
.preheader7.preheader:19  %exitcond = icmp eq i5 %j, -16

ST_2: j_mid2 (84)  [1/1] 1.37ns  loc: matmul.c:23
.preheader7.preheader:20  %j_mid2 = select i1 %exitcond, i5 0, i5 %j

ST_2: tmp_mid1 (85)  [1/1] 2.37ns  loc: matmul.c:36
.preheader7.preheader:21  %tmp_mid1 = icmp eq i5 %i_1, 0

ST_2: tmp (86)  [1/1] 2.37ns  loc: matmul.c:36
.preheader7.preheader:22  %tmp = icmp eq i5 %i, 0

ST_2: tmp_mid2 (87)  [1/1] 1.37ns  loc: matmul.c:36
.preheader7.preheader:23  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp

ST_2: tmp_1_mid2_v (88)  [1/1] 1.37ns  loc: matmul.c:46
.preheader7.preheader:24  %tmp_1_mid2_v = select i1 %exitcond, i5 %i_1, i5 %i

ST_2: tmp_1 (89)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:25  %tmp_1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_1_mid2_v, i3 0)

ST_2: tmp_4 (90)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:26  %tmp_4 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %tmp_1_mid2_v, i1 false)

ST_2: p_shl1_cast (91)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:27  %p_shl1_cast = zext i6 %tmp_4 to i8

ST_2: tmp_5 (92)  [1/1] 1.67ns  loc: matmul.c:46
.preheader7.preheader:28  %tmp_5 = sub i8 %tmp_1, %p_shl1_cast

ST_2: tmp_5_cast (93)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:29  %tmp_5_cast = sext i8 %tmp_5 to i64

ST_2: a_0_addr (94)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:30  %a_0_addr = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_5_cast

ST_2: a_1_addr (110)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:46  %a_1_addr = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_5_cast

ST_2: tmp_13 (116)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:52  %tmp_13 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_1_mid2_v, i2 0)

ST_2: tmp_14 (117)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:53  %tmp_14 = zext i7 %tmp_13 to i64

ST_2: a_2_addr (118)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:54  %a_2_addr = getelementptr [64 x i32]* %a_2, i64 0, i64 %tmp_14

ST_2: a_row_0 (134)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:70  %a_row_0 = load i32* %a_0_addr, align 4

ST_2: a_row_6 (140)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:76  %a_row_6 = load i32* %a_1_addr, align 4

ST_2: a_row_12 (146)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:82  %a_row_12 = load i32* %a_2_addr, align 4

ST_2: StgValue_94 (182)  [1/1] 0.00ns  loc: matmul.c:36
.preheader7.preheader:118  br i1 %tmp_mid2, label %.preheader.preheader, label %.loopexit

ST_2: tmp_6 (184)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:0  %tmp_6 = zext i5 %j_mid2 to i64

ST_2: b_0_addr (187)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:3  %b_0_addr = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_6

ST_2: b_1_addr (201)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:17  %b_1_addr = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_6

ST_2: b_2_addr (207)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:23  %b_2_addr = getelementptr [64 x i32]* %b_2, i64 0, i64 %tmp_6

ST_2: b_0_load (211)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:27  %b_0_load = load i32* %b_0_addr, align 4

ST_2: b_1_load (229)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:45  %b_1_load = load i32* %b_1_addr, align 4

ST_2: b_2_load (247)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:63  %b_2_load = load i32* %b_2_addr, align 4


 <State 3>: 5.10ns
ST_3: tmp_7 (95)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:31  %tmp_7 = or i8 %tmp_5, 1

ST_3: tmp_7_cast (96)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:32  %tmp_7_cast = zext i8 %tmp_7 to i64

ST_3: a_0_addr_1 (97)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:33  %a_0_addr_1 = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_7_cast

ST_3: a_1_addr_1 (111)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:47  %a_1_addr_1 = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_7_cast

ST_3: tmp_15 (119)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:55  %tmp_15 = or i7 %tmp_13, 1

ST_3: tmp_16 (120)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:56  %tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_15)

ST_3: a_2_addr_1 (121)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:57  %a_2_addr_1 = getelementptr [64 x i32]* %a_2, i64 0, i64 %tmp_16

ST_3: a_row_0 (134)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:70  %a_row_0 = load i32* %a_0_addr, align 4

ST_3: a_row_1 (135)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:71  %a_row_1 = load i32* %a_0_addr_1, align 4

ST_3: a_row_6 (140)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:76  %a_row_6 = load i32* %a_1_addr, align 4

ST_3: a_row_7 (141)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:77  %a_row_7 = load i32* %a_1_addr_1, align 4

ST_3: a_row_12 (146)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:82  %a_row_12 = load i32* %a_2_addr, align 4

ST_3: a_row_13 (147)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:83  %a_row_13 = load i32* %a_2_addr_1, align 4

ST_3: tmp_6_cast (186)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:2  %tmp_6_cast = zext i5 %j_mid2 to i6

ST_3: tmp_22 (188)  [1/1] 1.67ns  loc: matmul.c:23
.preheader.preheader:4  %tmp_22 = add i6 %tmp_6_cast, 16

ST_3: tmp_23_cast (189)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:5  %tmp_23_cast = zext i6 %tmp_22 to i64

ST_3: b_0_addr_1 (190)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:6  %b_0_addr_1 = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_23_cast

ST_3: b_1_addr_1 (202)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:18  %b_1_addr_1 = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_23_cast

ST_3: b_2_addr_1 (208)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:24  %b_2_addr_1 = getelementptr [64 x i32]* %b_2, i64 0, i64 %tmp_23_cast

ST_3: b_0_load (211)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:27  %b_0_load = load i32* %b_0_addr, align 4

ST_3: b_copy_0_addr (212)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:28  %b_copy_0_addr = getelementptr [16 x i32]* %b_copy_0, i64 0, i64 %tmp_6

ST_3: StgValue_123 (213)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:29  store i32 %b_0_load, i32* %b_copy_0_addr, align 4

ST_3: b_0_load_1 (214)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:30  %b_0_load_1 = load i32* %b_0_addr_1, align 4

ST_3: b_1_load (229)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:45  %b_1_load = load i32* %b_1_addr, align 4

ST_3: b_copy_6_addr (230)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:46  %b_copy_6_addr = getelementptr [16 x i32]* %b_copy_6, i64 0, i64 %tmp_6

ST_3: StgValue_127 (231)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:47  store i32 %b_1_load, i32* %b_copy_6_addr, align 4

ST_3: b_1_load_1 (232)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:48  %b_1_load_1 = load i32* %b_1_addr_1, align 4

ST_3: b_2_load (247)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:63  %b_2_load = load i32* %b_2_addr, align 4

ST_3: b_copy_12_addr (248)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:64  %b_copy_12_addr = getelementptr [16 x i32]* %b_copy_12, i64 0, i64 %tmp_6

ST_3: StgValue_131 (249)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:65  store i32 %b_2_load, i32* %b_copy_12_addr, align 4

ST_3: b_2_load_1 (250)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:66  %b_2_load_1 = load i32* %b_2_addr_1, align 4


 <State 4>: 5.10ns
ST_4: tmp_8 (98)  [1/1] 1.67ns  loc: matmul.c:46
.preheader7.preheader:34  %tmp_8 = add i8 %tmp_5, 2

ST_4: tmp_8_cast (99)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:35  %tmp_8_cast = sext i8 %tmp_8 to i64

ST_4: a_0_addr_2 (100)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:36  %a_0_addr_2 = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_8_cast

ST_4: a_1_addr_2 (112)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:48  %a_1_addr_2 = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_8_cast

ST_4: tmp_17 (122)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:58  %tmp_17 = or i7 %tmp_13, 2

ST_4: tmp_18 (123)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:59  %tmp_18 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_17)

ST_4: a_2_addr_2 (124)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:60  %a_2_addr_2 = getelementptr [64 x i32]* %a_2, i64 0, i64 %tmp_18

ST_4: a_row_1 (135)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:71  %a_row_1 = load i32* %a_0_addr_1, align 4

ST_4: a_row_2 (136)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:72  %a_row_2 = load i32* %a_0_addr_2, align 4

ST_4: a_row_7 (141)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:77  %a_row_7 = load i32* %a_1_addr_1, align 4

ST_4: a_row_8 (142)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:78  %a_row_8 = load i32* %a_1_addr_2, align 4

ST_4: a_row_13 (147)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:83  %a_row_13 = load i32* %a_2_addr_1, align 4

ST_4: a_row_14 (148)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:84  %a_row_14 = load i32* %a_2_addr_2, align 4

ST_4: tmp_23 (191)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:7  %tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 1, i5 %j_mid2)

ST_4: b_0_addr_2 (192)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:8  %b_0_addr_2 = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_23

ST_4: b_1_addr_2 (203)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:19  %b_1_addr_2 = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_23

ST_4: b_2_addr_2 (209)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:25  %b_2_addr_2 = getelementptr [64 x i32]* %b_2, i64 0, i64 %tmp_23

ST_4: b_0_load_1 (214)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:30  %b_0_load_1 = load i32* %b_0_addr_1, align 4

ST_4: b_copy_1_addr (215)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:31  %b_copy_1_addr = getelementptr [16 x i32]* %b_copy_1, i64 0, i64 %tmp_6

ST_4: StgValue_152 (216)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:32  store i32 %b_0_load_1, i32* %b_copy_1_addr, align 4

ST_4: b_0_load_2 (217)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:33  %b_0_load_2 = load i32* %b_0_addr_2, align 4

ST_4: b_1_load_1 (232)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:48  %b_1_load_1 = load i32* %b_1_addr_1, align 4

ST_4: b_copy_7_addr (233)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:49  %b_copy_7_addr = getelementptr [16 x i32]* %b_copy_7, i64 0, i64 %tmp_6

ST_4: StgValue_156 (234)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:50  store i32 %b_1_load_1, i32* %b_copy_7_addr, align 4

ST_4: b_1_load_2 (235)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:51  %b_1_load_2 = load i32* %b_1_addr_2, align 4

ST_4: b_2_load_1 (250)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:66  %b_2_load_1 = load i32* %b_2_addr_1, align 4

ST_4: b_copy_13_addr (251)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:67  %b_copy_13_addr = getelementptr [16 x i32]* %b_copy_13, i64 0, i64 %tmp_6

ST_4: StgValue_160 (252)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:68  store i32 %b_2_load_1, i32* %b_copy_13_addr, align 4

ST_4: b_2_load_2 (253)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:69  %b_2_load_2 = load i32* %b_2_addr_2, align 4

ST_4: tmp_9 (261)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:0  %tmp_9 = zext i5 %j_mid2 to i64

ST_4: b_copy_0_addr_1 (266)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:5  %b_copy_0_addr_1 = getelementptr [16 x i32]* %b_copy_0, i64 0, i64 %tmp_9

ST_4: b_copy_0_load (267)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:6  %b_copy_0_load = load i32* %b_copy_0_addr_1, align 4

ST_4: b_copy_6_addr_1 (284)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:23  %b_copy_6_addr_1 = getelementptr [16 x i32]* %b_copy_6, i64 0, i64 %tmp_9

ST_4: b_copy_6_load (285)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:24  %b_copy_6_load = load i32* %b_copy_6_addr_1, align 4

ST_4: b_copy_12_addr_1 (302)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:41  %b_copy_12_addr_1 = getelementptr [16 x i32]* %b_copy_12, i64 0, i64 %tmp_9

ST_4: b_copy_12_load (303)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:42  %b_copy_12_load = load i32* %b_copy_12_addr_1, align 4


 <State 5>: 5.10ns
ST_5: tmp_10 (101)  [1/1] 1.67ns  loc: matmul.c:46
.preheader7.preheader:37  %tmp_10 = add i8 %tmp_5, 3

ST_5: tmp_10_cast (102)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:38  %tmp_10_cast = sext i8 %tmp_10 to i64

ST_5: a_0_addr_3 (103)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:39  %a_0_addr_3 = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_10_cast

ST_5: a_1_addr_3 (113)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:49  %a_1_addr_3 = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_10_cast

ST_5: tmp_19 (125)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:61  %tmp_19 = or i7 %tmp_13, 3

ST_5: tmp_20 (126)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:62  %tmp_20 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_19)

ST_5: a_2_addr_3 (127)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:63  %a_2_addr_3 = getelementptr [64 x i32]* %a_2, i64 0, i64 %tmp_20

ST_5: tmp_3 (133)  [1/1] 2.37ns  loc: matmul.c:30
.preheader7.preheader:69  %tmp_3 = icmp eq i5 %j_mid2, 0

ST_5: a_row_2 (136)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:72  %a_row_2 = load i32* %a_0_addr_2, align 4

ST_5: a_row_3 (137)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:73  %a_row_3 = load i32* %a_0_addr_3, align 4

ST_5: a_row_8 (142)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:78  %a_row_8 = load i32* %a_1_addr_2, align 4

ST_5: a_row_9 (143)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:79  %a_row_9 = load i32* %a_1_addr_3, align 4

ST_5: a_row_14 (148)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:84  %a_row_14 = load i32* %a_2_addr_2, align 4

ST_5: a_row_15 (149)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:85  %a_row_15 = load i32* %a_2_addr_3, align 4

ST_5: tmp_6_cast1 (185)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:1  %tmp_6_cast1 = zext i5 %j_mid2 to i7

ST_5: tmp_24 (193)  [1/1] 1.67ns  loc: matmul.c:23
.preheader.preheader:9  %tmp_24 = add i7 %tmp_6_cast1, 48

ST_5: tmp_25_cast (194)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:10  %tmp_25_cast = zext i7 %tmp_24 to i64

ST_5: b_0_addr_3 (195)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:11  %b_0_addr_3 = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_25_cast

ST_5: b_1_addr_3 (204)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:20  %b_1_addr_3 = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_25_cast

ST_5: b_2_addr_3 (210)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:26  %b_2_addr_3 = getelementptr [64 x i32]* %b_2, i64 0, i64 %tmp_25_cast

ST_5: b_0_load_2 (217)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:33  %b_0_load_2 = load i32* %b_0_addr_2, align 4

ST_5: b_copy_2_addr (218)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:34  %b_copy_2_addr = getelementptr [16 x i32]* %b_copy_2, i64 0, i64 %tmp_6

ST_5: StgValue_191 (219)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:35  store i32 %b_0_load_2, i32* %b_copy_2_addr, align 4

ST_5: b_0_load_3 (220)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:36  %b_0_load_3 = load i32* %b_0_addr_3, align 4

ST_5: b_1_load_2 (235)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:51  %b_1_load_2 = load i32* %b_1_addr_2, align 4

ST_5: b_copy_8_addr (236)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:52  %b_copy_8_addr = getelementptr [16 x i32]* %b_copy_8, i64 0, i64 %tmp_6

ST_5: StgValue_195 (237)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:53  store i32 %b_1_load_2, i32* %b_copy_8_addr, align 4

ST_5: b_1_load_3 (238)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:54  %b_1_load_3 = load i32* %b_1_addr_3, align 4

ST_5: b_2_load_2 (253)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:69  %b_2_load_2 = load i32* %b_2_addr_2, align 4

ST_5: b_copy_14_addr (254)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:70  %b_copy_14_addr = getelementptr [16 x i32]* %b_copy_14, i64 0, i64 %tmp_6

ST_5: StgValue_199 (255)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:71  store i32 %b_2_load_2, i32* %b_copy_14_addr, align 4

ST_5: b_2_load_3 (256)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:72  %b_2_load_3 = load i32* %b_2_addr_3, align 4

ST_5: b_copy_0_load (267)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:6  %b_copy_0_load = load i32* %b_copy_0_addr_1, align 4

ST_5: b_copy_1_addr_1 (269)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:8  %b_copy_1_addr_1 = getelementptr [16 x i32]* %b_copy_1, i64 0, i64 %tmp_9

ST_5: b_copy_1_load (270)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:9  %b_copy_1_load = load i32* %b_copy_1_addr_1, align 4

ST_5: b_copy_6_load (285)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:24  %b_copy_6_load = load i32* %b_copy_6_addr_1, align 4

ST_5: b_copy_7_addr_1 (287)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:26  %b_copy_7_addr_1 = getelementptr [16 x i32]* %b_copy_7, i64 0, i64 %tmp_9

ST_5: b_copy_7_load (288)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:27  %b_copy_7_load = load i32* %b_copy_7_addr_1, align 4

ST_5: b_copy_12_load (303)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:42  %b_copy_12_load = load i32* %b_copy_12_addr_1, align 4

ST_5: b_copy_13_addr_1 (305)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:44  %b_copy_13_addr_1 = getelementptr [16 x i32]* %b_copy_13, i64 0, i64 %tmp_9

ST_5: b_copy_13_load (306)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:45  %b_copy_13_load = load i32* %b_copy_13_addr_1, align 4


 <State 6>: 8.05ns
ST_6: a_row_0_2_load (64)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_0_2_load = load i32* %a_row_0_2

ST_6: a_row_6_2_load (70)  [1/1] 0.00ns
.preheader7.preheader:6  %a_row_6_2_load = load i32* %a_row_6_2

ST_6: a_row_12_2_load (76)  [1/1] 0.00ns
.preheader7.preheader:12  %a_row_12_2_load = load i32* %a_row_12_2

ST_6: tmp_11 (104)  [1/1] 1.67ns  loc: matmul.c:46
.preheader7.preheader:40  %tmp_11 = add i8 %tmp_5, 4

ST_6: tmp_11_cast (105)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:41  %tmp_11_cast = sext i8 %tmp_11 to i64

ST_6: a_0_addr_4 (106)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:42  %a_0_addr_4 = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_11_cast

ST_6: a_1_addr_4 (114)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:50  %a_1_addr_4 = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_11_cast

ST_6: a_row_3 (137)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:73  %a_row_3 = load i32* %a_0_addr_3, align 4

ST_6: a_row_4 (138)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:74  %a_row_4 = load i32* %a_0_addr_4, align 4

ST_6: a_row_9 (143)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:79  %a_row_9 = load i32* %a_1_addr_3, align 4

ST_6: a_row_10 (144)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:80  %a_row_10 = load i32* %a_1_addr_4, align 4

ST_6: a_row_15 (149)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:85  %a_row_15 = load i32* %a_2_addr_3, align 4

ST_6: a_row_12_1 (153)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:89  %a_row_12_1 = select i1 %tmp_3, i32 %a_row_12, i32 %a_row_12_2_load

ST_6: a_row_6_1 (159)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:95  %a_row_6_1 = select i1 %tmp_3, i32 %a_row_6, i32 %a_row_6_2_load

ST_6: a_row_0_1 (165)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:101  %a_row_0_1 = select i1 %tmp_3, i32 %a_row_0, i32 %a_row_0_2_load

ST_6: StgValue_225 (169)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:105  store i32 %a_row_12_1, i32* %a_row_12_2

ST_6: StgValue_226 (175)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:111  store i32 %a_row_6_1, i32* %a_row_6_2

ST_6: StgValue_227 (181)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:117  store i32 %a_row_0_1, i32* %a_row_0_2

ST_6: tmp_25 (196)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:12  %tmp_25 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 2, i5 %j_mid2)

ST_6: b_0_addr_4 (197)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:13  %b_0_addr_4 = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_25

ST_6: b_1_addr_4 (205)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:21  %b_1_addr_4 = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_25

ST_6: b_0_load_3 (220)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:36  %b_0_load_3 = load i32* %b_0_addr_3, align 4

ST_6: b_copy_3_addr (221)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:37  %b_copy_3_addr = getelementptr [16 x i32]* %b_copy_3, i64 0, i64 %tmp_6

ST_6: StgValue_233 (222)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:38  store i32 %b_0_load_3, i32* %b_copy_3_addr, align 4

ST_6: b_0_load_4 (223)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:39  %b_0_load_4 = load i32* %b_0_addr_4, align 4

ST_6: b_1_load_3 (238)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:54  %b_1_load_3 = load i32* %b_1_addr_3, align 4

ST_6: b_copy_9_addr (239)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:55  %b_copy_9_addr = getelementptr [16 x i32]* %b_copy_9, i64 0, i64 %tmp_6

ST_6: StgValue_237 (240)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:56  store i32 %b_1_load_3, i32* %b_copy_9_addr, align 4

ST_6: b_1_load_4 (241)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:57  %b_1_load_4 = load i32* %b_1_addr_4, align 4

ST_6: b_2_load_3 (256)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:72  %b_2_load_3 = load i32* %b_2_addr_3, align 4

ST_6: b_copy_15_addr (257)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:73  %b_copy_15_addr = getelementptr [16 x i32]* %b_copy_15, i64 0, i64 %tmp_6

ST_6: StgValue_241 (258)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:74  store i32 %b_2_load_3, i32* %b_copy_15_addr, align 4

ST_6: tmp_s (268)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_6: b_copy_1_load (270)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:9  %b_copy_1_load = load i32* %b_copy_1_addr_1, align 4

ST_6: b_copy_2_addr_1 (272)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:11  %b_copy_2_addr_1 = getelementptr [16 x i32]* %b_copy_2, i64 0, i64 %tmp_9

ST_6: b_copy_2_load (273)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:12  %b_copy_2_load = load i32* %b_copy_2_addr_1, align 4

ST_6: tmp_2_6 (286)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_6: b_copy_7_load (288)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:27  %b_copy_7_load = load i32* %b_copy_7_addr_1, align 4

ST_6: b_copy_8_addr_1 (290)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:29  %b_copy_8_addr_1 = getelementptr [16 x i32]* %b_copy_8, i64 0, i64 %tmp_9

ST_6: b_copy_8_load (291)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:30  %b_copy_8_load = load i32* %b_copy_8_addr_1, align 4

ST_6: tmp_2_11 (304)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_6: b_copy_13_load (306)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:45  %b_copy_13_load = load i32* %b_copy_13_addr_1, align 4

ST_6: b_copy_14_addr_1 (308)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:47  %b_copy_14_addr_1 = getelementptr [16 x i32]* %b_copy_14, i64 0, i64 %tmp_9

ST_6: b_copy_14_load (309)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:48  %b_copy_14_load = load i32* %b_copy_14_addr_1, align 4


 <State 7>: 8.05ns
ST_7: a_row_1_2_load (65)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_1_2_load = load i32* %a_row_1_2

ST_7: a_row_7_2_load (71)  [1/1] 0.00ns
.preheader7.preheader:7  %a_row_7_2_load = load i32* %a_row_7_2

ST_7: a_row_13_2_load (77)  [1/1] 0.00ns
.preheader7.preheader:13  %a_row_13_2_load = load i32* %a_row_13_2

ST_7: tmp_12 (107)  [1/1] 1.67ns  loc: matmul.c:46
.preheader7.preheader:43  %tmp_12 = add i8 %tmp_5, 5

ST_7: tmp_12_cast (108)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:44  %tmp_12_cast = sext i8 %tmp_12 to i64

ST_7: a_0_addr_5 (109)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:45  %a_0_addr_5 = getelementptr [96 x i32]* %a_0, i64 0, i64 %tmp_12_cast

ST_7: a_1_addr_5 (115)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:51  %a_1_addr_5 = getelementptr [96 x i32]* %a_1, i64 0, i64 %tmp_12_cast

ST_7: a_row_4 (138)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:74  %a_row_4 = load i32* %a_0_addr_4, align 4

ST_7: a_row_5 (139)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:75  %a_row_5 = load i32* %a_0_addr_5, align 4

ST_7: a_row_10 (144)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:80  %a_row_10 = load i32* %a_1_addr_4, align 4

ST_7: a_row_11 (145)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:81  %a_row_11 = load i32* %a_1_addr_5, align 4

ST_7: a_row_13_1 (152)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:88  %a_row_13_1 = select i1 %tmp_3, i32 %a_row_13, i32 %a_row_13_2_load

ST_7: a_row_7_1 (158)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:94  %a_row_7_1 = select i1 %tmp_3, i32 %a_row_7, i32 %a_row_7_2_load

ST_7: a_row_1_1 (164)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:100  %a_row_1_1 = select i1 %tmp_3, i32 %a_row_1, i32 %a_row_1_2_load

ST_7: StgValue_268 (168)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:104  store i32 %a_row_13_1, i32* %a_row_13_2

ST_7: StgValue_269 (174)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:110  store i32 %a_row_7_1, i32* %a_row_7_2

ST_7: StgValue_270 (180)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:116  store i32 %a_row_1_1, i32* %a_row_1_2

ST_7: tmp_26 (198)  [1/1] 1.67ns  loc: matmul.c:23
.preheader.preheader:14  %tmp_26 = add i7 %tmp_6_cast1, -48

ST_7: tmp_27_cast (199)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:15  %tmp_27_cast = zext i7 %tmp_26 to i64

ST_7: b_0_addr_5 (200)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:16  %b_0_addr_5 = getelementptr [96 x i32]* %b_0, i64 0, i64 %tmp_27_cast

ST_7: b_1_addr_5 (206)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:22  %b_1_addr_5 = getelementptr [96 x i32]* %b_1, i64 0, i64 %tmp_27_cast

ST_7: b_0_load_4 (223)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:39  %b_0_load_4 = load i32* %b_0_addr_4, align 4

ST_7: b_copy_4_addr (224)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:40  %b_copy_4_addr = getelementptr [16 x i32]* %b_copy_4, i64 0, i64 %tmp_6

ST_7: StgValue_277 (225)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:41  store i32 %b_0_load_4, i32* %b_copy_4_addr, align 4

ST_7: b_0_load_5 (226)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:42  %b_0_load_5 = load i32* %b_0_addr_5, align 4

ST_7: b_1_load_4 (241)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:57  %b_1_load_4 = load i32* %b_1_addr_4, align 4

ST_7: b_copy_10_addr (242)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:58  %b_copy_10_addr = getelementptr [16 x i32]* %b_copy_10, i64 0, i64 %tmp_6

ST_7: StgValue_281 (243)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:59  store i32 %b_1_load_4, i32* %b_copy_10_addr, align 4

ST_7: b_1_load_5 (244)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:60  %b_1_load_5 = load i32* %b_1_addr_5, align 4

ST_7: tmp_s (268)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_7: tmp_2_1 (271)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_7: b_copy_2_load (273)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:12  %b_copy_2_load = load i32* %b_copy_2_addr_1, align 4

ST_7: b_copy_3_addr_1 (275)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:14  %b_copy_3_addr_1 = getelementptr [16 x i32]* %b_copy_3, i64 0, i64 %tmp_9

ST_7: b_copy_3_load (276)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:15  %b_copy_3_load = load i32* %b_copy_3_addr_1, align 4

ST_7: tmp_2_6 (286)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_7: tmp_2_7 (289)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_7: b_copy_8_load (291)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:30  %b_copy_8_load = load i32* %b_copy_8_addr_1, align 4

ST_7: b_copy_9_addr_1 (293)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:32  %b_copy_9_addr_1 = getelementptr [16 x i32]* %b_copy_9, i64 0, i64 %tmp_9

ST_7: b_copy_9_load (294)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:33  %b_copy_9_load = load i32* %b_copy_9_addr_1, align 4

ST_7: tmp_2_11 (304)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_7: tmp_2_12 (307)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_7: b_copy_14_load (309)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:48  %b_copy_14_load = load i32* %b_copy_14_addr_1, align 4

ST_7: b_copy_15_addr_1 (311)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:50  %b_copy_15_addr_1 = getelementptr [16 x i32]* %b_copy_15, i64 0, i64 %tmp_9

ST_7: b_copy_15_load (312)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:51  %b_copy_15_load = load i32* %b_copy_15_addr_1, align 4

ST_7: j_1 (331)  [1/1] 1.67ns  loc: matmul.c:23
.loopexit:70  %j_1 = add i5 %j_mid2, 1


 <State 8>: 8.05ns
ST_8: a_row_2_2_load (66)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_2_2_load = load i32* %a_row_2_2

ST_8: a_row_3_2_load (67)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_3_2_load = load i32* %a_row_3_2

ST_8: a_row_4_2_load (68)  [1/1] 0.00ns
.preheader7.preheader:4  %a_row_4_2_load = load i32* %a_row_4_2

ST_8: a_row_5_2_load (69)  [1/1] 0.00ns
.preheader7.preheader:5  %a_row_5_2_load = load i32* %a_row_5_2

ST_8: a_row_8_2_load (72)  [1/1] 0.00ns
.preheader7.preheader:8  %a_row_8_2_load = load i32* %a_row_8_2

ST_8: a_row_9_2_load (73)  [1/1] 0.00ns
.preheader7.preheader:9  %a_row_9_2_load = load i32* %a_row_9_2

ST_8: a_row_10_2_load (74)  [1/1] 0.00ns
.preheader7.preheader:10  %a_row_10_2_load = load i32* %a_row_10_2

ST_8: a_row_11_2_load (75)  [1/1] 0.00ns
.preheader7.preheader:11  %a_row_11_2_load = load i32* %a_row_11_2

ST_8: a_row_14_2_load (78)  [1/1] 0.00ns
.preheader7.preheader:14  %a_row_14_2_load = load i32* %a_row_14_2

ST_8: a_row_15_2_load (79)  [1/1] 0.00ns
.preheader7.preheader:15  %a_row_15_2_load = load i32* %a_row_15_2

ST_8: StgValue_309 (81)  [1/1] 0.00ns
.preheader7.preheader:17  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_8: empty_3 (82)  [1/1] 0.00ns
.preheader7.preheader:18  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_8: tmp_21 (128)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:64  %tmp_21 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %tmp_1_mid2_v, i4 0)

ST_8: tmp_22_cast (129)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:65  %tmp_22_cast = zext i9 %tmp_21 to i10

ST_8: StgValue_313 (130)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:66  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_8: tmp_2 (131)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:67  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_8: StgValue_315 (132)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:68  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: a_row_5 (139)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:75  %a_row_5 = load i32* %a_0_addr_5, align 4

ST_8: a_row_11 (145)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:81  %a_row_11 = load i32* %a_1_addr_5, align 4

ST_8: a_row_15_1 (150)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:86  %a_row_15_1 = select i1 %tmp_3, i32 %a_row_15, i32 %a_row_15_2_load

ST_8: a_row_14_1 (151)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:87  %a_row_14_1 = select i1 %tmp_3, i32 %a_row_14, i32 %a_row_14_2_load

ST_8: a_row_11_1 (154)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:90  %a_row_11_1 = select i1 %tmp_3, i32 %a_row_11, i32 %a_row_11_2_load

ST_8: a_row_10_1 (155)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:91  %a_row_10_1 = select i1 %tmp_3, i32 %a_row_10, i32 %a_row_10_2_load

ST_8: a_row_9_1 (156)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:92  %a_row_9_1 = select i1 %tmp_3, i32 %a_row_9, i32 %a_row_9_2_load

ST_8: a_row_8_1 (157)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:93  %a_row_8_1 = select i1 %tmp_3, i32 %a_row_8, i32 %a_row_8_2_load

ST_8: a_row_5_1 (160)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:96  %a_row_5_1 = select i1 %tmp_3, i32 %a_row_5, i32 %a_row_5_2_load

ST_8: a_row_4_1 (161)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:97  %a_row_4_1 = select i1 %tmp_3, i32 %a_row_4, i32 %a_row_4_2_load

ST_8: a_row_3_1 (162)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:98  %a_row_3_1 = select i1 %tmp_3, i32 %a_row_3, i32 %a_row_3_2_load

ST_8: a_row_2_1 (163)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:99  %a_row_2_1 = select i1 %tmp_3, i32 %a_row_2, i32 %a_row_2_2_load

ST_8: StgValue_328 (166)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:102  store i32 %a_row_15_1, i32* %a_row_15_2

ST_8: StgValue_329 (167)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:103  store i32 %a_row_14_1, i32* %a_row_14_2

ST_8: StgValue_330 (170)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:106  store i32 %a_row_11_1, i32* %a_row_11_2

ST_8: StgValue_331 (171)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:107  store i32 %a_row_10_1, i32* %a_row_10_2

ST_8: StgValue_332 (172)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:108  store i32 %a_row_9_1, i32* %a_row_9_2

ST_8: StgValue_333 (173)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:109  store i32 %a_row_8_1, i32* %a_row_8_2

ST_8: StgValue_334 (176)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:112  store i32 %a_row_5_1, i32* %a_row_5_2

ST_8: StgValue_335 (177)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:113  store i32 %a_row_4_1, i32* %a_row_4_2

ST_8: StgValue_336 (178)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:114  store i32 %a_row_3_1, i32* %a_row_3_2

ST_8: StgValue_337 (179)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:115  store i32 %a_row_2_1, i32* %a_row_2_2

ST_8: b_0_load_5 (226)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:42  %b_0_load_5 = load i32* %b_0_addr_5, align 4

ST_8: b_copy_5_addr (227)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:43  %b_copy_5_addr = getelementptr [16 x i32]* %b_copy_5, i64 0, i64 %tmp_6

ST_8: StgValue_340 (228)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:44  store i32 %b_0_load_5, i32* %b_copy_5_addr, align 4

ST_8: b_1_load_5 (244)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:60  %b_1_load_5 = load i32* %b_1_addr_5, align 4

ST_8: b_copy_11_addr (245)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:61  %b_copy_11_addr = getelementptr [16 x i32]* %b_copy_11, i64 0, i64 %tmp_6

ST_8: StgValue_343 (246)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:62  store i32 %b_1_load_5, i32* %b_copy_11_addr, align 4

ST_8: StgValue_344 (259)  [1/1] 0.00ns
.preheader.preheader:75  br label %.loopexit

ST_8: tmp_9_cast (262)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:1  %tmp_9_cast = zext i5 %j_mid2 to i10

ST_8: tmp_27 (263)  [1/1] 1.79ns  loc: matmul.c:46
.loopexit:2  %tmp_27 = add i10 %tmp_22_cast, %tmp_9_cast

ST_8: tmp_s (268)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_8: tmp_2_1 (271)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_8: tmp_2_2 (274)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_8: b_copy_3_load (276)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:15  %b_copy_3_load = load i32* %b_copy_3_addr_1, align 4

ST_8: b_copy_4_addr_1 (278)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:17  %b_copy_4_addr_1 = getelementptr [16 x i32]* %b_copy_4, i64 0, i64 %tmp_9

ST_8: b_copy_4_load (279)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:18  %b_copy_4_load = load i32* %b_copy_4_addr_1, align 4

ST_8: tmp_2_6 (286)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_8: tmp_2_7 (289)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_8: tmp_2_8 (292)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_8: b_copy_9_load (294)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:33  %b_copy_9_load = load i32* %b_copy_9_addr_1, align 4

ST_8: b_copy_10_addr_1 (296)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:35  %b_copy_10_addr_1 = getelementptr [16 x i32]* %b_copy_10, i64 0, i64 %tmp_9

ST_8: b_copy_10_load (297)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:36  %b_copy_10_load = load i32* %b_copy_10_addr_1, align 4

ST_8: tmp_2_11 (304)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_8: tmp_2_12 (307)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_8: tmp_2_13 (310)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_8: b_copy_15_load (312)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:51  %b_copy_15_load = load i32* %b_copy_15_addr_1, align 4


 <State 9>: 6.68ns
ST_9: tmp_s (268)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_9: tmp_2_1 (271)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_9: tmp_2_2 (274)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_9: tmp_2_3 (277)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_9: b_copy_4_load (279)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:18  %b_copy_4_load = load i32* %b_copy_4_addr_1, align 4

ST_9: b_copy_5_addr_1 (281)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:20  %b_copy_5_addr_1 = getelementptr [16 x i32]* %b_copy_5, i64 0, i64 %tmp_9

ST_9: b_copy_5_load (282)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:21  %b_copy_5_load = load i32* %b_copy_5_addr_1, align 4

ST_9: tmp_2_6 (286)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_9: tmp_2_7 (289)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_9: tmp_2_8 (292)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_9: tmp_2_9 (295)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_9: b_copy_10_load (297)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:36  %b_copy_10_load = load i32* %b_copy_10_addr_1, align 4

ST_9: b_copy_11_addr_1 (299)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:38  %b_copy_11_addr_1 = getelementptr [16 x i32]* %b_copy_11, i64 0, i64 %tmp_9

ST_9: b_copy_11_load (300)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:39  %b_copy_11_load = load i32* %b_copy_11_addr_1, align 4

ST_9: tmp_2_11 (304)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_9: tmp_2_12 (307)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_9: tmp_2_13 (310)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_9: tmp_2_14 (313)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load


 <State 10>: 6.68ns
ST_10: tmp_s (268)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_10: tmp_2_1 (271)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_10: tmp_2_2 (274)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_10: tmp_2_3 (277)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_10: tmp_2_4 (280)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_10: b_copy_5_load (282)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:21  %b_copy_5_load = load i32* %b_copy_5_addr_1, align 4

ST_10: tmp_2_6 (286)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_10: tmp_2_7 (289)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_10: tmp_2_8 (292)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_10: tmp_2_9 (295)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_10: tmp_2_s (298)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_10: b_copy_11_load (300)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:39  %b_copy_11_load = load i32* %b_copy_11_addr_1, align 4

ST_10: tmp_2_11 (304)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_10: tmp_2_12 (307)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_10: tmp_2_13 (310)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_10: tmp_2_14 (313)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load


 <State 11>: 6.68ns
ST_11: tmp_s (268)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:7  %tmp_s = mul nsw i32 %a_row_0_1, %b_copy_0_load

ST_11: tmp_2_1 (271)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_11: tmp_2_2 (274)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_11: tmp_2_3 (277)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_11: tmp_2_4 (280)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_11: tmp_2_5 (283)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_11: tmp_2_6 (286)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:25  %tmp_2_6 = mul nsw i32 %a_row_6_1, %b_copy_6_load

ST_11: tmp_2_7 (289)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_11: tmp_2_8 (292)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_11: tmp_2_9 (295)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_11: tmp_2_s (298)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_11: tmp_2_10 (301)  [6/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_11: tmp_2_11 (304)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:43  %tmp_2_11 = mul nsw i32 %a_row_12_1, %b_copy_12_load

ST_11: tmp_2_12 (307)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_11: tmp_2_13 (310)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_11: tmp_2_14 (313)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load


 <State 12>: 6.68ns
ST_12: tmp_2_1 (271)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:10  %tmp_2_1 = mul nsw i32 %a_row_1_1, %b_copy_1_load

ST_12: tmp_2_2 (274)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_12: tmp_2_3 (277)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_12: tmp_2_4 (280)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_12: tmp_2_5 (283)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_12: tmp_2_7 (289)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:28  %tmp_2_7 = mul nsw i32 %a_row_7_1, %b_copy_7_load

ST_12: tmp_2_8 (292)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_12: tmp_2_9 (295)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_12: tmp_2_s (298)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_12: tmp_2_10 (301)  [5/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_12: tmp_2_12 (307)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:46  %tmp_2_12 = mul nsw i32 %a_row_13_1, %b_copy_13_load

ST_12: tmp_2_13 (310)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_12: tmp_2_14 (313)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load


 <State 13>: 6.68ns
ST_13: tmp_2_2 (274)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:13  %tmp_2_2 = mul nsw i32 %a_row_2_1, %b_copy_2_load

ST_13: tmp_2_3 (277)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_13: tmp_2_4 (280)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_13: tmp_2_5 (283)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_13: tmp_2_8 (292)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:31  %tmp_2_8 = mul nsw i32 %a_row_8_1, %b_copy_8_load

ST_13: tmp_2_9 (295)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_13: tmp_2_s (298)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_13: tmp_2_10 (301)  [4/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_13: tmp_2_13 (310)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:49  %tmp_2_13 = mul nsw i32 %a_row_14_1, %b_copy_14_load

ST_13: tmp_2_14 (313)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load

ST_13: tmp3 (314)  [1/1] 2.39ns  loc: matmul.c:43
.loopexit:53  %tmp3 = add i32 %tmp_2_1, %tmp_s

ST_13: tmp7 (318)  [1/1] 2.39ns  loc: matmul.c:43
.loopexit:57  %tmp7 = add i32 %tmp_2_7, %tmp_2_6

ST_13: tmp13 (324)  [1/1] 2.39ns  loc: matmul.c:43
.loopexit:63  %tmp13 = add i32 %tmp_2_12, %tmp_2_11


 <State 14>: 6.68ns
ST_14: tmp_2_3 (277)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:16  %tmp_2_3 = mul nsw i32 %a_row_3_1, %b_copy_3_load

ST_14: tmp_2_4 (280)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_14: tmp_2_5 (283)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_14: tmp_2_9 (295)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:34  %tmp_2_9 = mul nsw i32 %a_row_9_1, %b_copy_9_load

ST_14: tmp_2_s (298)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_14: tmp_2_10 (301)  [3/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_14: tmp_2_14 (313)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:52  %tmp_2_14 = mul nsw i32 %a_row_15_1, %b_copy_15_load


 <State 15>: 6.68ns
ST_15: tmp_2_4 (280)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:19  %tmp_2_4 = mul nsw i32 %a_row_4_1, %b_copy_4_load

ST_15: tmp_2_5 (283)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_15: tmp_2_s (298)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:37  %tmp_2_s = mul nsw i32 %a_row_10_1, %b_copy_10_load

ST_15: tmp_2_10 (301)  [2/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load

ST_15: tmp4 (315)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:54  %tmp4 = add i32 %tmp_2_3, %tmp_2_2

ST_15: tmp2 (316)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:55  %tmp2 = add i32 %tmp3, %tmp4

ST_15: tmp10 (321)  [1/1] 2.39ns  loc: matmul.c:43
.loopexit:60  %tmp10 = add i32 %tmp_2_9, %tmp_2_8

ST_15: tmp14 (325)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:64  %tmp14 = add i32 %tmp_2_14, %tmp_2_13

ST_15: tmp12 (326)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:65  %tmp12 = add i32 %tmp13, %tmp14


 <State 16>: 6.68ns
ST_16: tmp_2_5 (283)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:22  %tmp_2_5 = mul nsw i32 %a_row_5_1, %b_copy_5_load

ST_16: tmp_2_10 (301)  [1/6] 6.68ns  loc: matmul.c:43
.loopexit:40  %tmp_2_10 = mul nsw i32 %a_row_11_1, %b_copy_11_load


 <State 17>: 8.15ns
ST_17: tmp6 (317)  [1/1] 2.39ns  loc: matmul.c:43
.loopexit:56  %tmp6 = add i32 %tmp_2_5, %tmp_2_4

ST_17: tmp5 (319)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:58  %tmp5 = add i32 %tmp6, %tmp7

ST_17: tmp1 (320)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:59  %tmp1 = add i32 %tmp2, %tmp5

ST_17: tmp11 (322)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:61  %tmp11 = add i32 %tmp_2_10, %tmp_2_s

ST_17: tmp9 (323)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:62  %tmp9 = add i32 %tmp10, %tmp11

ST_17: tmp8 (327)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:66  %tmp8 = add i32 %tmp9, %tmp12

ST_17: tmp_5_s (328)  [1/1] 1.92ns  loc: matmul.c:43
.loopexit:67  %tmp_5_s = add nsw i32 %tmp1, %tmp8


 <State 18>: 2.71ns
ST_18: tmp_28_cast (264)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:3  %tmp_28_cast = zext i10 %tmp_27 to i64

ST_18: c_addr (265)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:4  %c_addr = getelementptr [256 x i32]* %c, i64 0, i64 %tmp_28_cast

ST_18: StgValue_466 (329)  [1/1] 2.71ns  loc: matmul.c:46
.loopexit:68  store i32 %tmp_5_s, i32* %c_addr, align 4

ST_18: empty (330)  [1/1] 0.00ns  loc: matmul.c:47
.loopexit:69  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_18: StgValue_468 (332)  [1/1] 0.00ns  loc: matmul.c:23
.loopexit:71  br label %.preheader7


 <State 19>: 0.00ns
ST_19: StgValue_469 (334)  [1/1] 0.00ns  loc: matmul.c:49
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [57]  (1.57 ns)

 <State 2>: 8.12ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.c:23) [59]  (0 ns)
	'icmp' operation ('exitcond', matmul.c:23) [83]  (2.37 ns)
	'select' operation ('tmp_1_mid2_v', matmul.c:46) [88]  (1.37 ns)
	'sub' operation ('tmp_5', matmul.c:46) [92]  (1.67 ns)
	'getelementptr' operation ('a_0_addr', matmul.c:46) [94]  (0 ns)
	'load' operation ('a_row[0]', matmul.c:32) on array 'a_0' [134]  (2.71 ns)

 <State 3>: 5.1ns
The critical path consists of the following:
	'load' operation ('b_0_load', matmul.c:38) on array 'b_0' [211]  (2.71 ns)
	'store' operation (matmul.c:38) of variable 'b_0_load', matmul.c:38 on array 'b_copy[0]', matmul.c:18 [213]  (2.39 ns)

 <State 4>: 5.1ns
The critical path consists of the following:
	'load' operation ('b_0_load_1', matmul.c:38) on array 'b_0' [214]  (2.71 ns)
	'store' operation (matmul.c:38) of variable 'b_0_load_1', matmul.c:38 on array 'b_copy[1]', matmul.c:18 [216]  (2.39 ns)

 <State 5>: 5.1ns
The critical path consists of the following:
	'load' operation ('b_0_load_2', matmul.c:38) on array 'b_0' [217]  (2.71 ns)
	'store' operation (matmul.c:38) of variable 'b_0_load_2', matmul.c:38 on array 'b_copy[2]', matmul.c:18 [219]  (2.39 ns)

 <State 6>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_0_2_load') on local variable 'a_row[0]' [64]  (0 ns)
	'select' operation ('a_row[0]', matmul.c:30) [165]  (1.37 ns)
	'mul' operation ('tmp_s', matmul.c:43) [268]  (6.68 ns)

 <State 7>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_1_2_load') on local variable 'a_row[1]' [65]  (0 ns)
	'select' operation ('a_row[1]', matmul.c:30) [164]  (1.37 ns)
	'mul' operation ('tmp_2_1', matmul.c:43) [271]  (6.68 ns)

 <State 8>: 8.05ns
The critical path consists of the following:
	'load' operation ('a_row_2_2_load') on local variable 'a_row[2]' [66]  (0 ns)
	'select' operation ('a_row[2]', matmul.c:30) [163]  (1.37 ns)
	'mul' operation ('tmp_2_2', matmul.c:43) [274]  (6.68 ns)

 <State 9>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:43) [268]  (6.68 ns)

 <State 10>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:43) [268]  (6.68 ns)

 <State 11>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_s', matmul.c:43) [268]  (6.68 ns)

 <State 12>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_1', matmul.c:43) [271]  (6.68 ns)

 <State 13>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_2', matmul.c:43) [274]  (6.68 ns)

 <State 14>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_3', matmul.c:43) [277]  (6.68 ns)

 <State 15>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_4', matmul.c:43) [280]  (6.68 ns)

 <State 16>: 6.68ns
The critical path consists of the following:
	'mul' operation ('tmp_2_5', matmul.c:43) [283]  (6.68 ns)

 <State 17>: 8.15ns
The critical path consists of the following:
	'add' operation ('tmp6', matmul.c:43) [317]  (2.39 ns)
	'add' operation ('tmp5', matmul.c:43) [319]  (1.92 ns)
	'add' operation ('tmp1', matmul.c:43) [320]  (1.92 ns)
	'add' operation ('tmp_5_s', matmul.c:43) [328]  (1.92 ns)

 <State 18>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('c_addr', matmul.c:46) [265]  (0 ns)
	'store' operation (matmul.c:46) of variable 'tmp_5_s', matmul.c:43 on array 'c' [329]  (2.71 ns)

 <State 19>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
