// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.150000,HLS_SYN_LAT=2058,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1486,HLS_SYN_LUT=941}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        b_0_Addr_A,
        b_0_EN_A,
        b_0_WEN_A,
        b_0_Din_A,
        b_0_Dout_A,
        b_0_Clk_A,
        b_0_Rst_A,
        b_1_Addr_A,
        b_1_EN_A,
        b_1_WEN_A,
        b_1_Din_A,
        b_1_Dout_A,
        b_1_Clk_A,
        b_1_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_pp0_stage0 = 10'b10;
parameter    ap_ST_fsm_pp0_stage1 = 10'b100;
parameter    ap_ST_fsm_pp0_stage2 = 10'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 10'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 10'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 10'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 10'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 10'b100000000;
parameter    ap_ST_fsm_state19 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv56_0 = 56'b00000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv59_1 = 59'b1;
parameter    ap_const_lv8_3 = 8'b11;
parameter    ap_const_lv7_30 = 7'b110000;
parameter    ap_const_lv8_4 = 8'b100;
parameter    ap_const_lv59_2 = 59'b10;
parameter    ap_const_lv8_5 = 8'b101;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv8_6 = 8'b110;
parameter    ap_const_lv59_3 = 59'b11;
parameter    ap_const_lv8_7 = 8'b111;
parameter    ap_const_lv8_70 = 8'b1110000;
parameter    ap_const_lv32_9 = 32'b1001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] b_0_Addr_A;
output   b_0_EN_A;
output  [3:0] b_0_WEN_A;
output  [31:0] b_0_Din_A;
input  [31:0] b_0_Dout_A;
output   b_0_Clk_A;
output   b_0_Rst_A;
output  [31:0] b_1_Addr_A;
output   b_1_EN_A;
output  [3:0] b_1_WEN_A;
output  [31:0] b_1_Din_A;
input  [31:0] b_1_Dout_A;
output   b_1_Clk_A;
output   b_1_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg b_0_EN_A;
reg b_1_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_396;
reg   [4:0] i_reg_407;
reg   [4:0] j_reg_418;
wire   [31:0] grp_fu_429_p2;
reg   [31:0] reg_498;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_861;
wire   [0:0] ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] reg_502;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg   [31:0] reg_506;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire   [0:0] ap_CS_fsm_pp0_stage4;
reg   [31:0] reg_510;
wire   [0:0] ap_CS_fsm_pp0_stage2;
reg   [31:0] reg_514;
wire   [0:0] ap_CS_fsm_pp0_stage5;
reg   [31:0] reg_518;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] exitcond_flatten_fu_546_p2;
wire   [8:0] indvar_flatten_next_fu_552_p2;
reg   [8:0] indvar_flatten_next_reg_865;
wire   [4:0] j_mid2_fu_570_p3;
reg   [4:0] j_mid2_reg_870;
reg   [4:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_870;
wire   [4:0] tmp_mid2_v_fu_578_p3;
reg   [4:0] tmp_mid2_v_reg_882;
reg   [4:0] ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882;
wire   [7:0] tmp_fu_586_p3;
reg   [7:0] tmp_reg_888;
reg  signed [31:0] a_0_load_reg_939;
reg  signed [31:0] b_0_load_reg_944;
reg  signed [31:0] a_1_load_reg_949;
reg  signed [31:0] b_1_load_reg_954;
reg  signed [31:0] a_0_load_1_reg_979;
reg  signed [31:0] b_0_load_1_reg_984;
reg  signed [31:0] a_1_load_1_reg_989;
reg  signed [31:0] b_1_load_1_reg_994;
wire   [6:0] tmp_2_cast3_fu_675_p1;
reg   [6:0] tmp_2_cast3_reg_1009;
reg  signed [31:0] a_0_load_2_reg_1024;
reg  signed [31:0] b_0_load_2_reg_1029;
reg  signed [31:0] a_1_load_2_reg_1034;
reg  signed [31:0] b_1_load_2_reg_1039;
reg  signed [31:0] a_0_load_3_reg_1064;
reg  signed [31:0] b_0_load_3_reg_1069;
reg  signed [31:0] a_1_load_3_reg_1074;
reg  signed [31:0] b_1_load_3_reg_1079;
reg  signed [31:0] a_0_load_4_reg_1104;
reg  signed [31:0] b_0_load_4_reg_1109;
reg  signed [31:0] a_1_load_4_reg_1114;
reg  signed [31:0] b_1_load_4_reg_1119;
reg  signed [31:0] a_0_load_5_reg_1144;
reg  signed [31:0] b_0_load_5_reg_1149;
reg  signed [31:0] a_1_load_5_reg_1154;
reg  signed [31:0] b_1_load_5_reg_1159;
reg  signed [31:0] a_0_load_6_reg_1184;
reg  signed [31:0] b_0_load_6_reg_1189;
reg  signed [31:0] a_1_load_6_reg_1194;
reg  signed [31:0] b_1_load_6_reg_1199;
wire   [4:0] j_1_fu_794_p2;
reg   [4:0] j_1_reg_1204;
reg  signed [31:0] a_0_load_7_reg_1209;
reg  signed [31:0] b_0_load_7_reg_1214;
reg  signed [31:0] a_1_load_7_reg_1219;
reg  signed [31:0] b_1_load_7_reg_1224;
wire   [31:0] grp_fu_522_p2;
reg   [31:0] tmp10_reg_1229;
wire   [31:0] grp_fu_540_p2;
reg   [31:0] tmp2_reg_1234;
reg   [31:0] tmp11_reg_1239;
reg   [31:0] tmp_6_13_reg_1244;
reg   [31:0] tmp_6_14_reg_1249;
wire   [31:0] tmp_1_s_fu_830_p2;
reg   [31:0] tmp_1_s_reg_1254;
reg    ap_enable_reg_pp0_iter2;
reg   [8:0] indvar_flatten_phi_fu_400_p4;
reg   [4:0] i_phi_fu_411_p4;
reg   [4:0] j_phi_fu_422_p4;
wire   [63:0] tmp_3_fu_594_p1;
wire   [63:0] tmp_2_fu_600_p1;
wire   [63:0] tmp_5_fu_611_p3;
wire   [63:0] tmp_21_cast_fu_630_p1;
wire   [63:0] tmp_8_fu_641_p3;
wire   [63:0] tmp_20_fu_651_p3;
wire   [63:0] tmp_s_fu_665_p3;
wire   [63:0] tmp_23_cast_fu_684_p1;
wire   [63:0] tmp_11_fu_695_p3;
wire   [63:0] tmp_22_fu_705_p3;
wire   [63:0] tmp_13_fu_719_p3;
wire   [63:0] tmp_25_cast_fu_734_p1;
wire   [63:0] tmp_15_fu_745_p3;
wire   [63:0] tmp_24_fu_755_p3;
wire   [63:0] tmp_17_fu_769_p3;
wire   [63:0] tmp_27_cast_fu_788_p1;
wire   [63:0] tmp_28_cast_fu_856_p1;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] b_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] b_1_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg  signed [31:0] grp_fu_429_p0;
reg  signed [31:0] grp_fu_429_p1;
reg  signed [31:0] grp_fu_430_p0;
reg  signed [31:0] grp_fu_430_p1;
wire   [31:0] grp_fu_534_p2;
wire   [31:0] grp_fu_528_p2;
wire   [0:0] exitcond_fu_564_p2;
wire   [4:0] i_1_fu_558_p2;
wire   [7:0] tmp_4_fu_606_p2;
wire   [5:0] tmp_2_cast_fu_621_p1;
wire   [5:0] tmp_19_fu_624_p2;
wire   [7:0] tmp_7_fu_636_p2;
wire   [7:0] tmp_9_fu_660_p2;
wire   [6:0] tmp_21_fu_678_p2;
wire   [7:0] tmp_10_fu_690_p2;
wire   [7:0] tmp_12_fu_714_p2;
wire   [6:0] tmp_23_fu_729_p2;
wire   [7:0] tmp_14_fu_740_p2;
wire   [7:0] tmp_16_fu_764_p2;
wire   [7:0] tmp_2_cast4_fu_779_p1;
wire   [7:0] tmp_25_fu_782_p2;
wire   [31:0] tmp14_fu_814_p2;
wire   [31:0] tmp13_fu_808_p2;
wire   [31:0] tmp12_fu_818_p2;
wire   [31:0] tmp9_fu_804_p2;
wire   [31:0] tmp8_fu_824_p2;
wire   [31:0] tmp1_fu_799_p2;
wire   [8:0] tmp_18_fu_836_p3;
wire   [9:0] tmp_2_cast5_fu_847_p1;
wire   [9:0] tmp_20_cast_fu_843_p1;
wire   [9:0] tmp_26_fu_850_p2;
wire   [0:0] ap_CS_fsm_state19;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .ce(1'b1),
    .dout(grp_fu_429_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_430_p0),
    .din1(grp_fu_430_p1),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_546_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_861 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & ~(exitcond_flatten_reg_861 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_407 <= tmp_mid2_v_reg_882;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_407 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_396 <= indvar_flatten_next_reg_865;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_396 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_418 <= j_1_reg_1204;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_418 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_0_load_1_reg_979 <= a_0_Dout_A;
        a_1_load_1_reg_989 <= a_1_Dout_A;
        b_0_load_1_reg_984 <= b_0_Dout_A;
        b_1_load_1_reg_994 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_0_load_2_reg_1024 <= a_0_Dout_A;
        a_1_load_2_reg_1034 <= a_1_Dout_A;
        b_0_load_2_reg_1029 <= b_0_Dout_A;
        b_1_load_2_reg_1039 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_0_load_3_reg_1064 <= a_0_Dout_A;
        a_1_load_3_reg_1074 <= a_1_Dout_A;
        b_0_load_3_reg_1069 <= b_0_Dout_A;
        b_1_load_3_reg_1079 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_0_load_4_reg_1104 <= a_0_Dout_A;
        a_1_load_4_reg_1114 <= a_1_Dout_A;
        b_0_load_4_reg_1109 <= b_0_Dout_A;
        b_1_load_4_reg_1119 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_0_load_5_reg_1144 <= a_0_Dout_A;
        a_1_load_5_reg_1154 <= a_1_Dout_A;
        b_0_load_5_reg_1149 <= b_0_Dout_A;
        b_1_load_5_reg_1159 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0))) begin
        a_0_load_6_reg_1184 <= a_0_Dout_A;
        a_1_load_6_reg_1194 <= a_1_Dout_A;
        b_0_load_6_reg_1189 <= b_0_Dout_A;
        b_1_load_6_reg_1199 <= b_1_Dout_A;
        j_1_reg_1204 <= j_1_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_load_7_reg_1209 <= a_0_Dout_A;
        a_1_load_7_reg_1219 <= a_1_Dout_A;
        b_0_load_7_reg_1214 <= b_0_Dout_A;
        b_1_load_7_reg_1224 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_0_load_reg_939 <= a_0_Dout_A;
        a_1_load_reg_949 <= a_1_Dout_A;
        b_0_load_reg_944 <= b_0_Dout_A;
        b_1_load_reg_954 <= b_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861 <= exitcond_flatten_reg_861;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_870 <= j_mid2_reg_870;
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 <= tmp_mid2_v_reg_882;
        exitcond_flatten_reg_861 <= exitcond_flatten_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_865 <= indvar_flatten_next_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_546_p2))) begin
        j_mid2_reg_870 <= j_mid2_fu_570_p3;
        tmp_reg_888[7 : 3] <= tmp_fu_586_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861)))) begin
        reg_498 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_861 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_502 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_506 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_510 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_514 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_518 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp10_reg_1229 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861))) begin
        tmp11_reg_1239 <= grp_fu_522_p2;
        tmp2_reg_1234 <= grp_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861))) begin
        tmp_1_s_reg_1254 <= tmp_1_s_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_2_cast3_reg_1009[4 : 0] <= tmp_2_cast3_fu_675_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_6_13_reg_1244 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_6_14_reg_1249 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_546_p2))) begin
        tmp_mid2_v_reg_882 <= tmp_mid2_v_fu_578_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_0_Addr_A_orig = tmp_17_fu_769_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_0_Addr_A_orig = tmp_15_fu_745_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_13_fu_719_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_11_fu_695_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_s_fu_665_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_8_fu_641_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_5_fu_611_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_3_fu_594_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_1_Addr_A_orig = tmp_17_fu_769_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_1_Addr_A_orig = tmp_15_fu_745_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_1_Addr_A_orig = tmp_13_fu_719_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_1_Addr_A_orig = tmp_11_fu_695_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_s_fu_665_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_8_fu_641_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_5_fu_611_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_3_fu_594_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_0_Addr_A_orig = tmp_27_cast_fu_788_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_0_Addr_A_orig = tmp_24_fu_755_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_0_Addr_A_orig = tmp_25_cast_fu_734_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_0_Addr_A_orig = tmp_22_fu_705_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_0_Addr_A_orig = tmp_23_cast_fu_684_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_0_Addr_A_orig = tmp_20_fu_651_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_0_Addr_A_orig = tmp_21_cast_fu_630_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_0_Addr_A_orig = tmp_2_fu_600_p1;
        end else begin
            b_0_Addr_A_orig = 'bx;
        end
    end else begin
        b_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_0_EN_A = 1'b1;
    end else begin
        b_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_1_Addr_A_orig = tmp_27_cast_fu_788_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_1_Addr_A_orig = tmp_24_fu_755_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_1_Addr_A_orig = tmp_25_cast_fu_734_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_1_Addr_A_orig = tmp_22_fu_705_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_1_Addr_A_orig = tmp_23_cast_fu_684_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_1_Addr_A_orig = tmp_20_fu_651_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_1_Addr_A_orig = tmp_21_cast_fu_630_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_1_Addr_A_orig = tmp_2_fu_600_p1;
        end else begin
            b_1_Addr_A_orig = 'bx;
        end
    end else begin
        b_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_1_EN_A = 1'b1;
    end else begin
        b_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_429_p0 = a_0_load_7_reg_1209;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_429_p0 = a_0_load_6_reg_1184;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_429_p0 = a_0_load_5_reg_1144;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_429_p0 = a_0_load_4_reg_1104;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_429_p0 = a_0_load_3_reg_1064;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_429_p0 = a_0_load_2_reg_1024;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_429_p0 = a_0_load_1_reg_979;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_429_p0 = a_0_load_reg_939;
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_429_p1 = b_0_load_7_reg_1214;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_429_p1 = b_0_load_6_reg_1189;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_429_p1 = b_0_load_5_reg_1149;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_429_p1 = b_0_load_4_reg_1109;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_429_p1 = b_0_load_3_reg_1069;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_429_p1 = b_0_load_2_reg_1029;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_429_p1 = b_0_load_1_reg_984;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_429_p1 = b_0_load_reg_944;
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_430_p0 = a_1_load_7_reg_1219;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_430_p0 = a_1_load_6_reg_1194;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_430_p0 = a_1_load_5_reg_1154;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_430_p0 = a_1_load_4_reg_1114;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_430_p0 = a_1_load_3_reg_1074;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_430_p0 = a_1_load_2_reg_1034;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_430_p0 = a_1_load_1_reg_989;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_430_p0 = a_1_load_reg_949;
    end else begin
        grp_fu_430_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_430_p1 = b_1_load_7_reg_1224;
    end else if (((1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_430_p1 = b_1_load_6_reg_1199;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        grp_fu_430_p1 = b_1_load_5_reg_1159;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_430_p1 = b_1_load_4_reg_1119;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_430_p1 = b_1_load_3_reg_1079;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_430_p1 = b_1_load_2_reg_1039;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_430_p1 = b_1_load_1_reg_994;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_430_p1 = b_1_load_reg_954;
    end else begin
        grp_fu_430_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_phi_fu_411_p4 = tmp_mid2_v_reg_882;
    end else begin
        i_phi_fu_411_p4 = i_reg_407;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_phi_fu_400_p4 = indvar_flatten_next_reg_865;
    end else begin
        indvar_flatten_phi_fu_400_p4 = indvar_flatten_reg_396;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_861 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_phi_fu_422_p4 = j_1_reg_1204;
    end else begin
        j_phi_fu_422_p4 = j_reg_418;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_546_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_546_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_9];

assign b_0_Addr_A = b_0_Addr_A_orig << ap_const_lv32_2;

assign b_0_Clk_A = ap_clk;

assign b_0_Din_A = ap_const_lv32_0;

assign b_0_Rst_A = ap_rst;

assign b_0_WEN_A = ap_const_lv4_0;

assign b_1_Addr_A = b_1_Addr_A_orig << ap_const_lv32_2;

assign b_1_Clk_A = ap_clk;

assign b_1_Din_A = ap_const_lv32_0;

assign b_1_Rst_A = ap_rst;

assign b_1_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_28_cast_fu_856_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = tmp_1_s_reg_1254;

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_546_p2 = ((indvar_flatten_phi_fu_400_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_564_p2 = ((j_phi_fu_422_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_fu_522_p2 = (reg_502 + reg_510);

assign grp_fu_528_p2 = (reg_498 + reg_506);

assign grp_fu_534_p2 = (reg_514 + reg_518);

assign grp_fu_540_p2 = (grp_fu_534_p2 + grp_fu_528_p2);

assign i_1_fu_558_p2 = (i_phi_fu_411_p4 + ap_const_lv5_1);

assign indvar_flatten_next_fu_552_p2 = (indvar_flatten_phi_fu_400_p4 + ap_const_lv9_1);

assign j_1_fu_794_p2 = (j_mid2_reg_870 + ap_const_lv5_1);

assign j_mid2_fu_570_p3 = ((exitcond_fu_564_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_phi_fu_422_p4);

assign tmp12_fu_818_p2 = (tmp14_fu_814_p2 + tmp13_fu_808_p2);

assign tmp13_fu_808_p2 = (reg_502 + reg_510);

assign tmp14_fu_814_p2 = (tmp_6_13_reg_1244 + tmp_6_14_reg_1249);

assign tmp1_fu_799_p2 = (grp_fu_540_p2 + tmp2_reg_1234);

assign tmp8_fu_824_p2 = (tmp12_fu_818_p2 + tmp9_fu_804_p2);

assign tmp9_fu_804_p2 = (tmp11_reg_1239 + tmp10_reg_1229);

assign tmp_10_fu_690_p2 = (tmp_reg_888 | ap_const_lv8_4);

assign tmp_11_fu_695_p3 = {{ap_const_lv56_0}, {tmp_10_fu_690_p2}};

assign tmp_12_fu_714_p2 = (tmp_reg_888 | ap_const_lv8_5);

assign tmp_13_fu_719_p3 = {{ap_const_lv56_0}, {tmp_12_fu_714_p2}};

assign tmp_14_fu_740_p2 = (tmp_reg_888 | ap_const_lv8_6);

assign tmp_15_fu_745_p3 = {{ap_const_lv56_0}, {tmp_14_fu_740_p2}};

assign tmp_16_fu_764_p2 = (tmp_reg_888 | ap_const_lv8_7);

assign tmp_17_fu_769_p3 = {{ap_const_lv56_0}, {tmp_16_fu_764_p2}};

assign tmp_18_fu_836_p3 = {{ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882}, {ap_const_lv4_0}};

assign tmp_19_fu_624_p2 = (tmp_2_cast_fu_621_p1 + ap_const_lv6_10);

assign tmp_1_s_fu_830_p2 = (tmp8_fu_824_p2 + tmp1_fu_799_p2);

assign tmp_20_cast_fu_843_p1 = tmp_18_fu_836_p3;

assign tmp_20_fu_651_p3 = {{ap_const_lv59_1}, {j_mid2_reg_870}};

assign tmp_21_cast_fu_630_p1 = tmp_19_fu_624_p2;

assign tmp_21_fu_678_p2 = (tmp_2_cast3_fu_675_p1 + ap_const_lv7_30);

assign tmp_22_fu_705_p3 = {{ap_const_lv59_2}, {j_mid2_reg_870}};

assign tmp_23_cast_fu_684_p1 = tmp_21_fu_678_p2;

assign tmp_23_fu_729_p2 = ($signed(tmp_2_cast3_reg_1009) + $signed(ap_const_lv7_50));

assign tmp_24_fu_755_p3 = {{ap_const_lv59_3}, {j_mid2_reg_870}};

assign tmp_25_cast_fu_734_p1 = tmp_23_fu_729_p2;

assign tmp_25_fu_782_p2 = (tmp_2_cast4_fu_779_p1 + ap_const_lv8_70);

assign tmp_26_fu_850_p2 = (tmp_2_cast5_fu_847_p1 + tmp_20_cast_fu_843_p1);

assign tmp_27_cast_fu_788_p1 = tmp_25_fu_782_p2;

assign tmp_28_cast_fu_856_p1 = tmp_26_fu_850_p2;

assign tmp_2_cast3_fu_675_p1 = j_mid2_reg_870;

assign tmp_2_cast4_fu_779_p1 = j_mid2_reg_870;

assign tmp_2_cast5_fu_847_p1 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_870;

assign tmp_2_cast_fu_621_p1 = j_mid2_reg_870;

assign tmp_2_fu_600_p1 = j_mid2_fu_570_p3;

assign tmp_3_fu_594_p1 = tmp_fu_586_p3;

assign tmp_4_fu_606_p2 = (tmp_reg_888 | ap_const_lv8_1);

assign tmp_5_fu_611_p3 = {{ap_const_lv56_0}, {tmp_4_fu_606_p2}};

assign tmp_7_fu_636_p2 = (tmp_reg_888 | ap_const_lv8_2);

assign tmp_8_fu_641_p3 = {{ap_const_lv56_0}, {tmp_7_fu_636_p2}};

assign tmp_9_fu_660_p2 = (tmp_reg_888 | ap_const_lv8_3);

assign tmp_fu_586_p3 = {{tmp_mid2_v_fu_578_p3}, {ap_const_lv3_0}};

assign tmp_mid2_v_fu_578_p3 = ((exitcond_fu_564_p2[0:0] === 1'b1) ? i_1_fu_558_p2 : i_phi_fu_411_p4);

assign tmp_s_fu_665_p3 = {{ap_const_lv56_0}, {tmp_9_fu_660_p2}};

always @ (posedge ap_clk) begin
    tmp_reg_888[2:0] <= 3'b000;
    tmp_2_cast3_reg_1009[6:5] <= 2'b00;
end

endmodule //matmul_hw
