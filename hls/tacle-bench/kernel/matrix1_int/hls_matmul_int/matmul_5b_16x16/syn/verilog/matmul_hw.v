// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.150000,HLS_SYN_LAT=2060,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=3267,HLS_SYN_LUT=1493}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        b_0_Addr_A,
        b_0_EN_A,
        b_0_WEN_A,
        b_0_Din_A,
        b_0_Dout_A,
        b_0_Clk_A,
        b_0_Rst_A,
        b_1_Addr_A,
        b_1_EN_A,
        b_1_WEN_A,
        b_1_Din_A,
        b_1_Dout_A,
        b_1_Clk_A,
        b_1_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 10'b1;
parameter    ap_ST_fsm_pp0_stage0 = 10'b10;
parameter    ap_ST_fsm_pp0_stage1 = 10'b100;
parameter    ap_ST_fsm_pp0_stage2 = 10'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 10'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 10'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 10'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 10'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 10'b100000000;
parameter    ap_ST_fsm_state21 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv56_0 = 56'b00000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv8_2 = 8'b10;
parameter    ap_const_lv59_1 = 59'b1;
parameter    ap_const_lv8_3 = 8'b11;
parameter    ap_const_lv7_30 = 7'b110000;
parameter    ap_const_lv8_4 = 8'b100;
parameter    ap_const_lv59_2 = 59'b10;
parameter    ap_const_lv8_5 = 8'b101;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv8_6 = 8'b110;
parameter    ap_const_lv59_3 = 59'b11;
parameter    ap_const_lv8_7 = 8'b111;
parameter    ap_const_lv8_70 = 8'b1110000;
parameter    ap_const_lv32_9 = 32'b1001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] b_0_Addr_A;
output   b_0_EN_A;
output  [3:0] b_0_WEN_A;
output  [31:0] b_0_Din_A;
input  [31:0] b_0_Dout_A;
output   b_0_Clk_A;
output   b_0_Rst_A;
output  [31:0] b_1_Addr_A;
output   b_1_EN_A;
output  [3:0] b_1_WEN_A;
output  [31:0] b_1_Din_A;
input  [31:0] b_1_Dout_A;
output   b_1_Clk_A;
output   b_1_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg b_0_EN_A;
reg b_1_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_824;
reg   [4:0] i_reg_835;
reg   [4:0] j_reg_846;
reg   [31:0] reg_857;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1666;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg   [0:0] tmp_3_reg_1828;
reg   [31:0] reg_861;
reg   [31:0] reg_865;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage5;
reg   [31:0] reg_869;
reg   [31:0] reg_873;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage6;
reg   [31:0] reg_877;
wire   [0:0] exitcond_flatten_fu_881_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1666;
wire   [8:0] indvar_flatten_next_fu_887_p2;
reg   [8:0] indvar_flatten_next_reg_1670;
wire   [4:0] j_mid2_fu_905_p3;
reg   [4:0] j_mid2_reg_1675;
wire   [0:0] tmp_mid2_fu_925_p3;
reg   [0:0] tmp_mid2_reg_1689;
wire   [4:0] tmp_1_mid2_v_fu_933_p3;
reg   [4:0] tmp_1_mid2_v_reg_1693;
wire   [7:0] tmp_1_fu_941_p3;
reg   [7:0] tmp_1_reg_1699;
wire   [63:0] tmp_6_fu_955_p1;
reg   [63:0] tmp_6_reg_1720;
wire   [63:0] tmp_9_fu_1015_p1;
reg   [63:0] tmp_9_reg_1790;
wire   [0:0] tmp_3_fu_1035_p2;
wire   [6:0] tmp_6_cast2_fu_1040_p1;
reg   [6:0] tmp_6_cast2_reg_1848;
wire   [31:0] b_copy_0_q0;
reg  signed [31:0] b_copy_0_load_reg_1863;
wire   [31:0] b_copy_8_q0;
reg  signed [31:0] b_copy_8_load_reg_1873;
wire  signed [31:0] a_row_8_1_fu_1076_p3;
wire  signed [31:0] a_row_0_1_fu_1083_p3;
wire   [31:0] b_copy_1_q0;
reg  signed [31:0] b_copy_1_load_reg_1913;
wire   [31:0] b_copy_9_q0;
reg  signed [31:0] b_copy_9_load_reg_1923;
wire  signed [31:0] a_row_9_1_fu_1140_p3;
wire  signed [31:0] a_row_1_1_fu_1147_p3;
wire   [31:0] b_copy_2_q0;
reg  signed [31:0] b_copy_2_load_reg_1963;
wire   [31:0] b_copy_10_q0;
reg  signed [31:0] b_copy_10_load_reg_1973;
wire  signed [31:0] a_row_10_1_fu_1206_p3;
wire  signed [31:0] a_row_2_1_fu_1213_p3;
wire   [31:0] b_copy_3_q0;
reg  signed [31:0] b_copy_3_load_reg_2013;
wire   [31:0] b_copy_11_q0;
reg  signed [31:0] b_copy_11_load_reg_2023;
wire  signed [31:0] a_row_11_1_fu_1270_p3;
wire  signed [31:0] a_row_3_1_fu_1277_p3;
wire   [31:0] b_copy_4_q0;
reg  signed [31:0] b_copy_4_load_reg_2063;
wire   [31:0] b_copy_12_q0;
reg  signed [31:0] b_copy_12_load_reg_2073;
wire   [4:0] j_1_fu_1319_p2;
reg   [4:0] j_1_reg_2083;
wire  signed [31:0] a_row_15_1_fu_1359_p3;
reg  signed [31:0] a_row_15_1_reg_2088;
wire  signed [31:0] a_row_14_1_fu_1366_p3;
reg  signed [31:0] a_row_14_1_reg_2093;
wire  signed [31:0] a_row_13_1_fu_1373_p3;
reg  signed [31:0] a_row_13_1_reg_2098;
wire  signed [31:0] a_row_12_1_fu_1380_p3;
wire  signed [31:0] a_row_7_1_fu_1387_p3;
reg  signed [31:0] a_row_7_1_reg_2108;
wire  signed [31:0] a_row_6_1_fu_1394_p3;
reg  signed [31:0] a_row_6_1_reg_2113;
wire  signed [31:0] a_row_5_1_fu_1401_p3;
reg  signed [31:0] a_row_5_1_reg_2118;
wire  signed [31:0] a_row_4_1_fu_1408_p3;
wire   [9:0] tmp_29_fu_1458_p2;
reg   [9:0] tmp_29_reg_2128;
reg   [9:0] ap_pipeline_reg_pp0_iter2_tmp_29_reg_2128;
wire   [31:0] b_copy_5_q0;
reg  signed [31:0] b_copy_5_load_reg_2133;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] b_copy_13_q0;
reg  signed [31:0] b_copy_13_load_reg_2143;
wire   [31:0] grp_fu_1109_p2;
reg   [31:0] tmp_s_reg_2153;
wire   [31:0] b_copy_6_q0;
reg  signed [31:0] b_copy_6_load_reg_2158;
wire   [31:0] grp_fu_1114_p2;
reg   [31:0] tmp_2_8_reg_2168;
wire   [31:0] b_copy_14_q0;
reg  signed [31:0] b_copy_14_load_reg_2173;
wire   [31:0] grp_fu_1175_p2;
reg   [31:0] tmp_2_1_reg_2183;
wire   [31:0] b_copy_7_q0;
reg  signed [31:0] b_copy_7_load_reg_2188;
wire   [31:0] grp_fu_1180_p2;
reg   [31:0] tmp_2_9_reg_2193;
wire   [31:0] b_copy_15_q0;
reg  signed [31:0] b_copy_15_load_reg_2198;
wire   [31:0] grp_fu_1239_p2;
reg   [31:0] tmp_2_2_reg_2203;
wire   [31:0] grp_fu_1244_p2;
reg   [31:0] tmp_2_s_reg_2208;
wire   [31:0] tmp3_fu_1498_p2;
reg   [31:0] tmp3_reg_2213;
wire   [31:0] tmp10_fu_1502_p2;
reg   [31:0] tmp10_reg_2218;
wire   [31:0] grp_fu_1309_p2;
reg   [31:0] tmp_2_3_reg_2223;
wire   [31:0] grp_fu_1314_p2;
reg   [31:0] tmp_2_10_reg_2228;
wire   [31:0] grp_fu_1464_p2;
reg   [31:0] tmp_2_4_reg_2233;
wire   [31:0] grp_fu_1469_p2;
reg   [31:0] tmp_2_11_reg_2238;
wire   [31:0] tmp2_fu_1510_p2;
reg   [31:0] tmp2_reg_2243;
wire   [31:0] tmp9_fu_1519_p2;
reg   [31:0] tmp9_reg_2248;
wire   [31:0] grp_fu_1474_p2;
reg   [31:0] tmp_2_5_reg_2253;
wire   [31:0] grp_fu_1478_p2;
reg   [31:0] tmp_2_12_reg_2258;
wire   [31:0] grp_fu_1482_p2;
reg   [31:0] tmp_2_6_reg_2263;
wire   [31:0] grp_fu_1486_p2;
reg   [31:0] tmp_2_13_reg_2268;
wire   [31:0] tmp6_fu_1524_p2;
reg   [31:0] tmp6_reg_2273;
wire   [31:0] tmp13_fu_1528_p2;
reg   [31:0] tmp13_reg_2278;
wire   [31:0] grp_fu_1490_p2;
reg   [31:0] tmp_2_7_reg_2283;
wire   [31:0] grp_fu_1494_p2;
reg   [31:0] tmp_2_14_reg_2288;
wire   [31:0] tmp_5_s_fu_1560_p2;
reg   [31:0] tmp_5_s_reg_2293;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] b_copy_0_address0;
reg    b_copy_0_ce0;
reg    b_copy_0_we0;
reg   [3:0] b_copy_1_address0;
reg    b_copy_1_ce0;
reg    b_copy_1_we0;
reg   [3:0] b_copy_2_address0;
reg    b_copy_2_ce0;
reg    b_copy_2_we0;
reg   [3:0] b_copy_3_address0;
reg    b_copy_3_ce0;
reg    b_copy_3_we0;
reg   [3:0] b_copy_4_address0;
reg    b_copy_4_ce0;
reg    b_copy_4_we0;
reg   [3:0] b_copy_5_address0;
reg    b_copy_5_ce0;
reg    b_copy_5_we0;
reg   [3:0] b_copy_6_address0;
reg    b_copy_6_ce0;
reg    b_copy_6_we0;
reg   [3:0] b_copy_7_address0;
reg    b_copy_7_ce0;
reg    b_copy_7_we0;
reg   [3:0] b_copy_8_address0;
reg    b_copy_8_ce0;
reg    b_copy_8_we0;
reg   [3:0] b_copy_9_address0;
reg    b_copy_9_ce0;
reg    b_copy_9_we0;
reg   [3:0] b_copy_10_address0;
reg    b_copy_10_ce0;
reg    b_copy_10_we0;
reg   [3:0] b_copy_11_address0;
reg    b_copy_11_ce0;
reg    b_copy_11_we0;
reg   [3:0] b_copy_12_address0;
reg    b_copy_12_ce0;
reg    b_copy_12_we0;
reg   [3:0] b_copy_13_address0;
reg    b_copy_13_ce0;
reg    b_copy_13_we0;
reg   [3:0] b_copy_14_address0;
reg    b_copy_14_ce0;
reg    b_copy_14_we0;
reg   [3:0] b_copy_15_address0;
reg    b_copy_15_ce0;
reg    b_copy_15_we0;
reg   [8:0] indvar_flatten_phi_fu_828_p4;
reg   [4:0] i_phi_fu_839_p4;
reg   [4:0] j_phi_fu_850_p4;
wire   [63:0] tmp_4_fu_949_p1;
wire   [63:0] tmp_7_fu_966_p3;
wire   [63:0] tmp_23_cast_fu_985_p1;
wire   [63:0] tmp_10_fu_996_p3;
wire   [63:0] tmp_23_fu_1006_p3;
wire   [63:0] tmp_12_fu_1025_p3;
wire   [63:0] tmp_25_cast_fu_1049_p1;
wire   [63:0] tmp_14_fu_1066_p3;
wire   [63:0] tmp_25_fu_1100_p3;
wire   [63:0] tmp_16_fu_1130_p3;
wire   [63:0] tmp_27_cast_fu_1169_p1;
wire   [63:0] tmp_18_fu_1196_p3;
wire   [63:0] tmp_27_fu_1230_p3;
wire   [63:0] tmp_20_fu_1260_p3;
wire   [63:0] tmp_29_cast_fu_1303_p1;
wire   [63:0] tmp_30_cast_fu_1566_p1;
reg   [31:0] a_row_0_2_fu_108;
reg   [31:0] a_row_1_2_fu_112;
reg   [31:0] a_row_2_2_fu_116;
reg   [31:0] a_row_3_2_fu_120;
reg   [31:0] a_row_4_2_fu_124;
reg   [31:0] a_row_5_2_fu_128;
reg   [31:0] a_row_6_2_fu_132;
reg   [31:0] a_row_7_2_fu_136;
reg   [31:0] a_row_8_2_fu_140;
reg   [31:0] a_row_9_2_fu_144;
reg   [31:0] a_row_10_2_fu_148;
reg   [31:0] a_row_11_2_fu_152;
reg   [31:0] a_row_12_2_fu_156;
reg   [31:0] a_row_13_2_fu_160;
reg   [31:0] a_row_14_2_fu_164;
reg   [31:0] a_row_15_2_fu_168;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] b_0_Addr_A_orig;
reg   [31:0] b_1_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
wire   [0:0] exitcond_fu_899_p2;
wire   [4:0] i_1_fu_893_p2;
wire   [0:0] tmp_mid1_fu_913_p2;
wire   [0:0] tmp_fu_919_p2;
wire   [7:0] tmp_5_fu_961_p2;
wire   [5:0] tmp_6_cast_fu_976_p1;
wire   [5:0] tmp_22_fu_979_p2;
wire   [7:0] tmp_8_fu_991_p2;
wire   [7:0] tmp_11_fu_1020_p2;
wire   [6:0] tmp_24_fu_1043_p2;
wire   [7:0] tmp_13_fu_1061_p2;
wire  signed [31:0] grp_fu_1109_p0;
wire  signed [31:0] grp_fu_1114_p0;
wire   [7:0] tmp_15_fu_1125_p2;
wire   [6:0] tmp_26_fu_1164_p2;
wire  signed [31:0] grp_fu_1175_p0;
wire  signed [31:0] grp_fu_1180_p0;
wire   [7:0] tmp_17_fu_1191_p2;
wire  signed [31:0] grp_fu_1239_p0;
wire  signed [31:0] grp_fu_1244_p0;
wire   [7:0] tmp_19_fu_1255_p2;
wire   [7:0] tmp_6_cast1_fu_1294_p1;
wire   [7:0] tmp_28_fu_1297_p2;
wire  signed [31:0] grp_fu_1309_p0;
wire  signed [31:0] grp_fu_1314_p0;
wire   [8:0] tmp_21_fu_1348_p3;
wire   [9:0] tmp_22_cast_fu_1355_p1;
wire   [9:0] tmp_9_cast_fu_1455_p1;
wire  signed [31:0] grp_fu_1464_p0;
wire  signed [31:0] grp_fu_1469_p0;
wire   [31:0] tmp4_fu_1506_p2;
wire   [31:0] tmp11_fu_1515_p2;
wire   [31:0] tmp7_fu_1532_p2;
wire   [31:0] tmp5_fu_1536_p2;
wire   [31:0] tmp14_fu_1546_p2;
wire   [31:0] tmp12_fu_1550_p2;
wire   [31:0] tmp1_fu_1541_p2;
wire   [31:0] tmp8_fu_1555_p2;
wire   [0:0] ap_CS_fsm_state21;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_0_address0),
    .ce0(b_copy_0_ce0),
    .we0(b_copy_0_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_0_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_1_address0),
    .ce0(b_copy_1_ce0),
    .we0(b_copy_1_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_1_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_2_address0),
    .ce0(b_copy_2_ce0),
    .we0(b_copy_2_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_2_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_3_address0),
    .ce0(b_copy_3_ce0),
    .we0(b_copy_3_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_3_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_4_address0),
    .ce0(b_copy_4_ce0),
    .we0(b_copy_4_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_4_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_5_address0),
    .ce0(b_copy_5_ce0),
    .we0(b_copy_5_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_5_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_6_address0),
    .ce0(b_copy_6_ce0),
    .we0(b_copy_6_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_6_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_7_address0),
    .ce0(b_copy_7_ce0),
    .we0(b_copy_7_we0),
    .d0(b_0_Dout_A),
    .q0(b_copy_7_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_8_address0),
    .ce0(b_copy_8_ce0),
    .we0(b_copy_8_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_8_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_9_address0),
    .ce0(b_copy_9_ce0),
    .we0(b_copy_9_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_9_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_10_address0),
    .ce0(b_copy_10_ce0),
    .we0(b_copy_10_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_10_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_11_address0),
    .ce0(b_copy_11_ce0),
    .we0(b_copy_11_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_11_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_12_address0),
    .ce0(b_copy_12_ce0),
    .we0(b_copy_12_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_12_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_13_address0),
    .ce0(b_copy_13_ce0),
    .we0(b_copy_13_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_13_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_14_address0),
    .ce0(b_copy_14_ce0),
    .we0(b_copy_14_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_14_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_15_address0),
    .ce0(b_copy_15_ce0),
    .we0(b_copy_15_we0),
    .d0(b_1_Dout_A),
    .q0(b_copy_15_q0)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1109_p0),
    .din1(b_copy_0_load_reg_1863),
    .ce(1'b1),
    .dout(grp_fu_1109_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1114_p0),
    .din1(b_copy_8_load_reg_1873),
    .ce(1'b1),
    .dout(grp_fu_1114_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1175_p0),
    .din1(b_copy_1_load_reg_1913),
    .ce(1'b1),
    .dout(grp_fu_1175_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1180_p0),
    .din1(b_copy_9_load_reg_1923),
    .ce(1'b1),
    .dout(grp_fu_1180_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1239_p0),
    .din1(b_copy_2_load_reg_1963),
    .ce(1'b1),
    .dout(grp_fu_1239_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1244_p0),
    .din1(b_copy_10_load_reg_1973),
    .ce(1'b1),
    .dout(grp_fu_1244_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1309_p0),
    .din1(b_copy_3_load_reg_2013),
    .ce(1'b1),
    .dout(grp_fu_1309_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1314_p0),
    .din1(b_copy_11_load_reg_2023),
    .ce(1'b1),
    .dout(grp_fu_1314_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1464_p0),
    .din1(b_copy_4_load_reg_2063),
    .ce(1'b1),
    .dout(grp_fu_1464_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1469_p0),
    .din1(b_copy_12_load_reg_2073),
    .ce(1'b1),
    .dout(grp_fu_1469_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_5_1_reg_2118),
    .din1(b_copy_5_load_reg_2133),
    .ce(1'b1),
    .dout(grp_fu_1474_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_13_1_reg_2098),
    .din1(b_copy_13_load_reg_2143),
    .ce(1'b1),
    .dout(grp_fu_1478_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_6_1_reg_2113),
    .din1(b_copy_6_load_reg_2158),
    .ce(1'b1),
    .dout(grp_fu_1482_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_14_1_reg_2093),
    .din1(b_copy_14_load_reg_2173),
    .ce(1'b1),
    .dout(grp_fu_1486_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_7_1_reg_2108),
    .din1(b_copy_7_load_reg_2188),
    .ce(1'b1),
    .dout(grp_fu_1490_p2)
);

matmul_hw_mul_32scud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32scud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_15_1_reg_2088),
    .din1(b_copy_15_load_reg_2198),
    .ce(1'b1),
    .dout(grp_fu_1494_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_881_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & ~(exitcond_flatten_reg_1666 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_835 <= tmp_1_mid2_v_reg_1693;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_835 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_824 <= indvar_flatten_next_reg_1670;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_824 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_846 <= j_1_reg_2083;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_846 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_2_fu_108 <= a_row_0_1_fu_1083_p3;
        a_row_8_2_fu_140 <= a_row_8_1_fu_1076_p3;
        b_copy_1_load_reg_1913 <= b_copy_1_q0;
        b_copy_9_load_reg_1923 <= b_copy_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_row_10_2_fu_148 <= a_row_10_1_fu_1206_p3;
        a_row_2_2_fu_116 <= a_row_2_1_fu_1213_p3;
        b_copy_11_load_reg_2023 <= b_copy_11_q0;
        b_copy_3_load_reg_2013 <= b_copy_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_row_11_2_fu_152 <= a_row_11_1_fu_1270_p3;
        a_row_3_2_fu_120 <= a_row_3_1_fu_1277_p3;
        b_copy_12_load_reg_2073 <= b_copy_12_q0;
        b_copy_4_load_reg_2063 <= b_copy_4_q0;
        j_1_reg_2083 <= j_1_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_12_2_fu_156 <= a_row_12_1_fu_1380_p3;
        a_row_13_2_fu_160 <= a_row_13_1_fu_1373_p3;
        a_row_14_2_fu_164 <= a_row_14_1_fu_1366_p3;
        a_row_15_2_fu_168 <= a_row_15_1_fu_1359_p3;
        a_row_4_2_fu_124 <= a_row_4_1_fu_1408_p3;
        a_row_5_2_fu_128 <= a_row_5_1_fu_1401_p3;
        a_row_6_2_fu_132 <= a_row_6_1_fu_1394_p3;
        a_row_7_2_fu_136 <= a_row_7_1_fu_1387_p3;
        b_copy_13_load_reg_2143 <= b_copy_13_q0;
        b_copy_5_load_reg_2133 <= b_copy_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_row_13_1_reg_2098 <= a_row_13_1_fu_1373_p3;
        a_row_14_1_reg_2093 <= a_row_14_1_fu_1366_p3;
        a_row_15_1_reg_2088 <= a_row_15_1_fu_1359_p3;
        a_row_5_1_reg_2118 <= a_row_5_1_fu_1401_p3;
        a_row_6_1_reg_2113 <= a_row_6_1_fu_1394_p3;
        a_row_7_1_reg_2108 <= a_row_7_1_fu_1387_p3;
        tmp_29_reg_2128 <= tmp_29_fu_1458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_row_1_2_fu_112 <= a_row_1_1_fu_1147_p3;
        a_row_9_2_fu_144 <= a_row_9_1_fu_1140_p3;
        b_copy_10_load_reg_1973 <= b_copy_10_q0;
        b_copy_2_load_reg_1963 <= b_copy_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666 <= exitcond_flatten_reg_1666;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1666 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666;
        ap_pipeline_reg_pp0_iter2_tmp_29_reg_2128 <= tmp_29_reg_2128;
        exitcond_flatten_reg_1666 <= exitcond_flatten_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_copy_0_load_reg_1863 <= b_copy_0_q0;
        b_copy_8_load_reg_1873 <= b_copy_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        b_copy_14_load_reg_2173 <= b_copy_14_q0;
        b_copy_6_load_reg_2158 <= b_copy_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        b_copy_15_load_reg_2198 <= b_copy_15_q0;
        b_copy_7_load_reg_2188 <= b_copy_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1670 <= indvar_flatten_next_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2))) begin
        j_mid2_reg_1675 <= j_mid2_fu_905_p3;
        tmp_1_reg_1699[7 : 3] <= tmp_1_fu_941_p3[7 : 3];
        tmp_mid2_reg_1689 <= tmp_mid2_fu_925_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_3_reg_1828)))) begin
        reg_857 <= a_0_Dout_A;
        reg_861 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & ~(1'b0 == tmp_3_reg_1828) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_865 <= a_0_Dout_A;
        reg_869 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & ~(1'b0 == tmp_3_reg_1828) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_873 <= a_0_Dout_A;
        reg_877 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp10_reg_2218 <= tmp10_fu_1502_p2;
        tmp3_reg_2213 <= tmp3_fu_1498_p2;
        tmp_2_2_reg_2203 <= grp_fu_1239_p2;
        tmp_2_s_reg_2208 <= grp_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp13_reg_2278 <= tmp13_fu_1528_p2;
        tmp6_reg_2273 <= tmp6_fu_1524_p2;
        tmp_2_13_reg_2268 <= grp_fu_1486_p2;
        tmp_2_6_reg_2263 <= grp_fu_1482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp2_reg_2243 <= tmp2_fu_1510_p2;
        tmp9_reg_2248 <= tmp9_fu_1519_p2;
        tmp_2_11_reg_2238 <= grp_fu_1469_p2;
        tmp_2_4_reg_2233 <= grp_fu_1464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2))) begin
        tmp_1_mid2_v_reg_1693 <= tmp_1_mid2_v_fu_933_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp_2_10_reg_2228 <= grp_fu_1314_p2;
        tmp_2_3_reg_2223 <= grp_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp_2_12_reg_2258 <= grp_fu_1478_p2;
        tmp_2_5_reg_2253 <= grp_fu_1474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp_2_14_reg_2288 <= grp_fu_1494_p2;
        tmp_2_7_reg_2283 <= grp_fu_1490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp_2_1_reg_2183 <= grp_fu_1175_p2;
        tmp_2_9_reg_2193 <= grp_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1666))) begin
        tmp_2_8_reg_2168 <= grp_fu_1114_p2;
        tmp_s_reg_2153 <= grp_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_3_reg_1828 <= tmp_3_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1666))) begin
        tmp_5_s_reg_2293 <= tmp_5_s_fu_1560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        tmp_6_cast2_reg_1848[4 : 0] <= tmp_6_cast2_fu_1040_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2) & ~(1'b0 == tmp_mid2_fu_925_p3))) begin
        tmp_6_reg_1720[4 : 0] <= tmp_6_fu_955_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_9_reg_1790[4 : 0] <= tmp_9_fu_1015_p1[4 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_0_Addr_A_orig = tmp_20_fu_1260_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_0_Addr_A_orig = tmp_18_fu_1196_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_0_Addr_A_orig = tmp_16_fu_1130_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_0_Addr_A_orig = tmp_14_fu_1066_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_0_Addr_A_orig = tmp_12_fu_1025_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_0_Addr_A_orig = tmp_10_fu_996_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_7_fu_966_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_4_fu_949_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_1_Addr_A_orig = tmp_20_fu_1260_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_1_Addr_A_orig = tmp_18_fu_1196_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_1_Addr_A_orig = tmp_16_fu_1130_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_1_Addr_A_orig = tmp_14_fu_1066_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_1_Addr_A_orig = tmp_12_fu_1025_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_1_Addr_A_orig = tmp_10_fu_996_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_7_fu_966_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_4_fu_949_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_0_Addr_A_orig = tmp_29_cast_fu_1303_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_0_Addr_A_orig = tmp_27_fu_1230_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_0_Addr_A_orig = tmp_27_cast_fu_1169_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_0_Addr_A_orig = tmp_25_fu_1100_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_0_Addr_A_orig = tmp_25_cast_fu_1049_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_0_Addr_A_orig = tmp_23_fu_1006_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_0_Addr_A_orig = tmp_23_cast_fu_985_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_0_Addr_A_orig = tmp_6_fu_955_p1;
        end else begin
            b_0_Addr_A_orig = 'bx;
        end
    end else begin
        b_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_0_EN_A = 1'b1;
    end else begin
        b_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_1_Addr_A_orig = tmp_29_cast_fu_1303_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_1_Addr_A_orig = tmp_27_fu_1230_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_1_Addr_A_orig = tmp_27_cast_fu_1169_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_1_Addr_A_orig = tmp_25_fu_1100_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_1_Addr_A_orig = tmp_25_cast_fu_1049_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_1_Addr_A_orig = tmp_23_fu_1006_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_1_Addr_A_orig = tmp_23_cast_fu_985_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_1_Addr_A_orig = tmp_6_fu_955_p1;
        end else begin
            b_1_Addr_A_orig = 'bx;
        end
    end else begin
        b_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_1_EN_A = 1'b1;
    end else begin
        b_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_0_address0 = tmp_9_fu_1015_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_0_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_0_address0 = 'bx;
        end
    end else begin
        b_copy_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        b_copy_0_ce0 = 1'b1;
    end else begin
        b_copy_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_0_we0 = 1'b1;
    end else begin
        b_copy_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_10_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_10_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_10_address0 = 'bx;
        end
    end else begin
        b_copy_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_10_ce0 = 1'b1;
    end else begin
        b_copy_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_10_we0 = 1'b1;
    end else begin
        b_copy_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_11_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_11_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_11_address0 = 'bx;
        end
    end else begin
        b_copy_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_11_ce0 = 1'b1;
    end else begin
        b_copy_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_11_we0 = 1'b1;
    end else begin
        b_copy_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_12_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_12_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_12_address0 = 'bx;
        end
    end else begin
        b_copy_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_12_ce0 = 1'b1;
    end else begin
        b_copy_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_12_we0 = 1'b1;
    end else begin
        b_copy_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_13_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_13_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_13_address0 = 'bx;
        end
    end else begin
        b_copy_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_13_ce0 = 1'b1;
    end else begin
        b_copy_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_13_we0 = 1'b1;
    end else begin
        b_copy_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_14_address0 = tmp_9_reg_1790;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_copy_14_address0 = tmp_6_reg_1720;
    end else begin
        b_copy_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_14_ce0 = 1'b1;
    end else begin
        b_copy_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_14_we0 = 1'b1;
    end else begin
        b_copy_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_15_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_copy_15_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_15_address0 = 'bx;
        end
    end else begin
        b_copy_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_15_ce0 = 1'b1;
    end else begin
        b_copy_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_mid2_reg_1689) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_15_we0 = 1'b1;
    end else begin
        b_copy_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_1_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_1_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_1_address0 = 'bx;
        end
    end else begin
        b_copy_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_1_ce0 = 1'b1;
    end else begin
        b_copy_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_1_we0 = 1'b1;
    end else begin
        b_copy_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_2_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_2_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_2_address0 = 'bx;
        end
    end else begin
        b_copy_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_2_ce0 = 1'b1;
    end else begin
        b_copy_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_2_we0 = 1'b1;
    end else begin
        b_copy_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_3_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_3_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_3_address0 = 'bx;
        end
    end else begin
        b_copy_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_3_ce0 = 1'b1;
    end else begin
        b_copy_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_3_we0 = 1'b1;
    end else begin
        b_copy_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_4_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_4_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_4_address0 = 'bx;
        end
    end else begin
        b_copy_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_4_ce0 = 1'b1;
    end else begin
        b_copy_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_4_we0 = 1'b1;
    end else begin
        b_copy_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_5_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_5_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_5_address0 = 'bx;
        end
    end else begin
        b_copy_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_5_ce0 = 1'b1;
    end else begin
        b_copy_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_5_we0 = 1'b1;
    end else begin
        b_copy_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_6_address0 = tmp_9_reg_1790;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        b_copy_6_address0 = tmp_6_reg_1720;
    end else begin
        b_copy_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_6_ce0 = 1'b1;
    end else begin
        b_copy_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_6_we0 = 1'b1;
    end else begin
        b_copy_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_7_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_copy_7_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_7_address0 = 'bx;
        end
    end else begin
        b_copy_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_7_ce0 = 1'b1;
    end else begin
        b_copy_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_mid2_reg_1689) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_7_we0 = 1'b1;
    end else begin
        b_copy_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_8_address0 = tmp_9_fu_1015_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_8_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_8_address0 = 'bx;
        end
    end else begin
        b_copy_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        b_copy_8_ce0 = 1'b1;
    end else begin
        b_copy_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_8_we0 = 1'b1;
    end else begin
        b_copy_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_9_address0 = tmp_9_reg_1790;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_9_address0 = tmp_6_reg_1720;
        end else begin
            b_copy_9_address0 = 'bx;
        end
    end else begin
        b_copy_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_9_ce0 = 1'b1;
    end else begin
        b_copy_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & ~(1'b0 == tmp_mid2_reg_1689))) begin
        b_copy_9_we0 = 1'b1;
    end else begin
        b_copy_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1666) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_839_p4 = tmp_1_mid2_v_reg_1693;
    end else begin
        i_phi_fu_839_p4 = i_reg_835;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_828_p4 = indvar_flatten_next_reg_1670;
    end else begin
        indvar_flatten_phi_fu_828_p4 = indvar_flatten_reg_824;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1666 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_850_p4 = j_1_reg_2083;
    end else begin
        j_phi_fu_850_p4 = j_reg_846;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_881_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign a_row_0_1_fu_1083_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_857 : a_row_0_2_fu_108);

assign a_row_10_1_fu_1206_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_877 : a_row_10_2_fu_148);

assign a_row_11_1_fu_1270_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_861 : a_row_11_2_fu_152);

assign a_row_12_1_fu_1380_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_869 : a_row_12_2_fu_156);

assign a_row_13_1_fu_1373_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_877 : a_row_13_2_fu_160);

assign a_row_14_1_fu_1366_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_861 : a_row_14_2_fu_164);

assign a_row_15_1_fu_1359_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? a_1_Dout_A : a_row_15_2_fu_168);

assign a_row_1_1_fu_1147_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_865 : a_row_1_2_fu_112);

assign a_row_2_1_fu_1213_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_873 : a_row_2_2_fu_116);

assign a_row_3_1_fu_1277_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_857 : a_row_3_2_fu_120);

assign a_row_4_1_fu_1408_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_865 : a_row_4_2_fu_124);

assign a_row_5_1_fu_1401_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_873 : a_row_5_2_fu_128);

assign a_row_6_1_fu_1394_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_857 : a_row_6_2_fu_132);

assign a_row_7_1_fu_1387_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? a_0_Dout_A : a_row_7_2_fu_136);

assign a_row_8_1_fu_1076_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_861 : a_row_8_2_fu_140);

assign a_row_9_1_fu_1140_p3 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_869 : a_row_9_2_fu_144);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_9];

assign b_0_Addr_A = b_0_Addr_A_orig << ap_const_lv32_2;

assign b_0_Clk_A = ap_clk;

assign b_0_Din_A = ap_const_lv32_0;

assign b_0_Rst_A = ap_rst;

assign b_0_WEN_A = ap_const_lv4_0;

assign b_1_Addr_A = b_1_Addr_A_orig << ap_const_lv32_2;

assign b_1_Clk_A = ap_clk;

assign b_1_Din_A = ap_const_lv32_0;

assign b_1_Rst_A = ap_rst;

assign b_1_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_30_cast_fu_1566_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = tmp_5_s_reg_2293;

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_881_p2 = ((indvar_flatten_phi_fu_828_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_899_p2 = ((j_phi_fu_850_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_fu_1109_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_857 : a_row_0_2_fu_108);

assign grp_fu_1114_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_861 : a_row_8_2_fu_140);

assign grp_fu_1175_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_865 : a_row_1_2_fu_112);

assign grp_fu_1180_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_869 : a_row_9_2_fu_144);

assign grp_fu_1239_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_873 : a_row_2_2_fu_116);

assign grp_fu_1244_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_877 : a_row_10_2_fu_148);

assign grp_fu_1309_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_857 : a_row_3_2_fu_120);

assign grp_fu_1314_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_861 : a_row_11_2_fu_152);

assign grp_fu_1464_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_865 : a_row_4_2_fu_124);

assign grp_fu_1469_p0 = ((tmp_3_reg_1828[0:0] === 1'b1) ? reg_869 : a_row_12_2_fu_156);

assign i_1_fu_893_p2 = (i_phi_fu_839_p4 + ap_const_lv5_1);

assign indvar_flatten_next_fu_887_p2 = (indvar_flatten_phi_fu_828_p4 + ap_const_lv9_1);

assign j_1_fu_1319_p2 = (j_mid2_reg_1675 + ap_const_lv5_1);

assign j_mid2_fu_905_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_phi_fu_850_p4);

assign tmp10_fu_1502_p2 = (tmp_2_9_reg_2193 + tmp_2_8_reg_2168);

assign tmp11_fu_1515_p2 = (tmp_2_10_reg_2228 + tmp_2_s_reg_2208);

assign tmp12_fu_1550_p2 = (tmp13_reg_2278 + tmp14_fu_1546_p2);

assign tmp13_fu_1528_p2 = (tmp_2_12_reg_2258 + tmp_2_11_reg_2238);

assign tmp14_fu_1546_p2 = (tmp_2_14_reg_2288 + tmp_2_13_reg_2268);

assign tmp1_fu_1541_p2 = (tmp2_reg_2243 + tmp5_fu_1536_p2);

assign tmp2_fu_1510_p2 = (tmp3_reg_2213 + tmp4_fu_1506_p2);

assign tmp3_fu_1498_p2 = (tmp_2_1_reg_2183 + tmp_s_reg_2153);

assign tmp4_fu_1506_p2 = (tmp_2_3_reg_2223 + tmp_2_2_reg_2203);

assign tmp5_fu_1536_p2 = (tmp6_reg_2273 + tmp7_fu_1532_p2);

assign tmp6_fu_1524_p2 = (tmp_2_5_reg_2253 + tmp_2_4_reg_2233);

assign tmp7_fu_1532_p2 = (tmp_2_7_reg_2283 + tmp_2_6_reg_2263);

assign tmp8_fu_1555_p2 = (tmp9_reg_2248 + tmp12_fu_1550_p2);

assign tmp9_fu_1519_p2 = (tmp10_reg_2218 + tmp11_fu_1515_p2);

assign tmp_10_fu_996_p3 = {{ap_const_lv56_0}, {tmp_8_fu_991_p2}};

assign tmp_11_fu_1020_p2 = (tmp_1_reg_1699 | ap_const_lv8_3);

assign tmp_12_fu_1025_p3 = {{ap_const_lv56_0}, {tmp_11_fu_1020_p2}};

assign tmp_13_fu_1061_p2 = (tmp_1_reg_1699 | ap_const_lv8_4);

assign tmp_14_fu_1066_p3 = {{ap_const_lv56_0}, {tmp_13_fu_1061_p2}};

assign tmp_15_fu_1125_p2 = (tmp_1_reg_1699 | ap_const_lv8_5);

assign tmp_16_fu_1130_p3 = {{ap_const_lv56_0}, {tmp_15_fu_1125_p2}};

assign tmp_17_fu_1191_p2 = (tmp_1_reg_1699 | ap_const_lv8_6);

assign tmp_18_fu_1196_p3 = {{ap_const_lv56_0}, {tmp_17_fu_1191_p2}};

assign tmp_19_fu_1255_p2 = (tmp_1_reg_1699 | ap_const_lv8_7);

assign tmp_1_fu_941_p3 = {{tmp_1_mid2_v_fu_933_p3}, {ap_const_lv3_0}};

assign tmp_1_mid2_v_fu_933_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? i_1_fu_893_p2 : i_phi_fu_839_p4);

assign tmp_20_fu_1260_p3 = {{ap_const_lv56_0}, {tmp_19_fu_1255_p2}};

assign tmp_21_fu_1348_p3 = {{tmp_1_mid2_v_reg_1693}, {ap_const_lv4_0}};

assign tmp_22_cast_fu_1355_p1 = tmp_21_fu_1348_p3;

assign tmp_22_fu_979_p2 = (tmp_6_cast_fu_976_p1 + ap_const_lv6_10);

assign tmp_23_cast_fu_985_p1 = tmp_22_fu_979_p2;

assign tmp_23_fu_1006_p3 = {{ap_const_lv59_1}, {j_mid2_reg_1675}};

assign tmp_24_fu_1043_p2 = (tmp_6_cast2_fu_1040_p1 + ap_const_lv7_30);

assign tmp_25_cast_fu_1049_p1 = tmp_24_fu_1043_p2;

assign tmp_25_fu_1100_p3 = {{ap_const_lv59_2}, {j_mid2_reg_1675}};

assign tmp_26_fu_1164_p2 = ($signed(tmp_6_cast2_reg_1848) + $signed(ap_const_lv7_50));

assign tmp_27_cast_fu_1169_p1 = tmp_26_fu_1164_p2;

assign tmp_27_fu_1230_p3 = {{ap_const_lv59_3}, {j_mid2_reg_1675}};

assign tmp_28_fu_1297_p2 = (tmp_6_cast1_fu_1294_p1 + ap_const_lv8_70);

assign tmp_29_cast_fu_1303_p1 = tmp_28_fu_1297_p2;

assign tmp_29_fu_1458_p2 = (tmp_22_cast_fu_1355_p1 + tmp_9_cast_fu_1455_p1);

assign tmp_30_cast_fu_1566_p1 = ap_pipeline_reg_pp0_iter2_tmp_29_reg_2128;

assign tmp_3_fu_1035_p2 = ((j_mid2_reg_1675 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_949_p1 = tmp_1_fu_941_p3;

assign tmp_5_fu_961_p2 = (tmp_1_reg_1699 | ap_const_lv8_1);

assign tmp_5_s_fu_1560_p2 = (tmp1_fu_1541_p2 + tmp8_fu_1555_p2);

assign tmp_6_cast1_fu_1294_p1 = j_mid2_reg_1675;

assign tmp_6_cast2_fu_1040_p1 = j_mid2_reg_1675;

assign tmp_6_cast_fu_976_p1 = j_mid2_reg_1675;

assign tmp_6_fu_955_p1 = j_mid2_fu_905_p3;

assign tmp_7_fu_966_p3 = {{ap_const_lv56_0}, {tmp_5_fu_961_p2}};

assign tmp_8_fu_991_p2 = (tmp_1_reg_1699 | ap_const_lv8_2);

assign tmp_9_cast_fu_1455_p1 = j_mid2_reg_1675;

assign tmp_9_fu_1015_p1 = j_mid2_reg_1675;

assign tmp_fu_919_p2 = ((i_phi_fu_839_p4 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_913_p2 = ((i_1_fu_893_p2 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_925_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? tmp_mid1_fu_913_p2 : tmp_fu_919_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1699[2:0] <= 3'b000;
    tmp_6_reg_1720[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_9_reg_1790[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_6_cast2_reg_1848[6:5] <= 2'b00;
end

endmodule //matmul_hw
