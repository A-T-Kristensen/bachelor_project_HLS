-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.150000,HLS_SYN_LAT=2058,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1486,HLS_SYN_LUT=941}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_396 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_407 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_418 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_429_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal exitcond_flatten_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_552_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_865 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_fu_570_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_870 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_870 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_fu_578_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_882 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_586_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_888 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_0_load_reg_939 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_1_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_1_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_1_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_1_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast3_fu_675_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_cast3_reg_1009 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_0_load_2_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_2_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_2_reg_1034 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_2_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_3_reg_1064 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_3_reg_1069 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_3_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_3_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_4_reg_1104 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_4_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_4_reg_1114 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_4_reg_1119 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_5_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_5_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_5_reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_5_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_6_reg_1184 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_6_reg_1189 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_6_reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_6_reg_1199 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_794_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_1204 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_0_load_7_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_7_reg_1214 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_7_reg_1219 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_7_reg_1224 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_1229 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_1234 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_reg_1239 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_13_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_14_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_s_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_s_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_400_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_411_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_422_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_611_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_641_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_651_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_665_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_cast_fu_684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_695_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_705_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_719_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_745_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_755_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_769_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_429_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_528_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_558_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_606_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast_fu_621_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_624_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_636_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_660_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_678_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_10_fu_690_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_714_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_729_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_740_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast4_fu_779_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_782_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp14_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_818_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_836_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast5_fu_847_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_cast_fu_843_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_850_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);

    component matmul_hw_mul_32scud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_mul_32scud_U1 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_429_p0,
        din1 => grp_fu_429_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_429_p2);

    matmul_hw_mul_32scud_U2 : component matmul_hw_mul_32scud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_430_p0,
        din1 => grp_fu_430_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_430_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_546_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_861 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((exitcond_flatten_reg_861 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_407 <= tmp_mid2_v_reg_882;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_407 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_396 <= indvar_flatten_next_reg_865;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_396 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_418 <= j_1_reg_1204;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_418 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                a_0_load_1_reg_979 <= a_0_Dout_A;
                a_1_load_1_reg_989 <= a_1_Dout_A;
                b_0_load_1_reg_984 <= b_0_Dout_A;
                b_1_load_1_reg_994 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_0_load_2_reg_1024 <= a_0_Dout_A;
                a_1_load_2_reg_1034 <= a_1_Dout_A;
                b_0_load_2_reg_1029 <= b_0_Dout_A;
                b_1_load_2_reg_1039 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_0_load_3_reg_1064 <= a_0_Dout_A;
                a_1_load_3_reg_1074 <= a_1_Dout_A;
                b_0_load_3_reg_1069 <= b_0_Dout_A;
                b_1_load_3_reg_1079 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_0_load_4_reg_1104 <= a_0_Dout_A;
                a_1_load_4_reg_1114 <= a_1_Dout_A;
                b_0_load_4_reg_1109 <= b_0_Dout_A;
                b_1_load_4_reg_1119 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_0_load_5_reg_1144 <= a_0_Dout_A;
                a_1_load_5_reg_1154 <= a_1_Dout_A;
                b_0_load_5_reg_1149 <= b_0_Dout_A;
                b_1_load_5_reg_1159 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0))) then
                a_0_load_6_reg_1184 <= a_0_Dout_A;
                a_1_load_6_reg_1194 <= a_1_Dout_A;
                b_0_load_6_reg_1189 <= b_0_Dout_A;
                b_1_load_6_reg_1199 <= b_1_Dout_A;
                j_1_reg_1204 <= j_1_fu_794_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_0_load_7_reg_1209 <= a_0_Dout_A;
                a_1_load_7_reg_1219 <= a_1_Dout_A;
                b_0_load_7_reg_1214 <= b_0_Dout_A;
                b_1_load_7_reg_1224 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                a_0_load_reg_939 <= a_0_Dout_A;
                a_1_load_reg_949 <= a_1_Dout_A;
                b_0_load_reg_944 <= b_0_Dout_A;
                b_1_load_reg_954 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861 <= exitcond_flatten_reg_861;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_870 <= j_mid2_reg_870;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 <= tmp_mid2_v_reg_882;
                exitcond_flatten_reg_861 <= exitcond_flatten_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_865 <= indvar_flatten_next_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_546_p2))) then
                j_mid2_reg_870 <= j_mid2_fu_570_p3;
                    tmp_reg_888(7 downto 3) <= tmp_fu_586_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861)))) then
                reg_498 <= grp_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_861 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_502 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_506 <= grp_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_510 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_514 <= grp_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_518 <= grp_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                tmp10_reg_1229 <= grp_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861))) then
                tmp11_reg_1239 <= grp_fu_522_p2;
                tmp2_reg_1234 <= grp_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861))) then
                tmp_1_s_reg_1254 <= tmp_1_s_fu_830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    tmp_2_cast3_reg_1009(4 downto 0) <= tmp_2_cast3_fu_675_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_6_13_reg_1244 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_6_14_reg_1249 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_546_p2))) then
                tmp_mid2_v_reg_882 <= tmp_mid2_v_fu_578_p3;
            end if;
        end if;
    end process;
    tmp_reg_888(2 downto 0) <= "000";
    tmp_2_cast3_reg_1009(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, exitcond_flatten_fu_546_p2, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_546_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_546_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_594_p1, tmp_5_fu_611_p3, tmp_8_fu_641_p3, tmp_s_fu_665_p3, tmp_11_fu_695_p3, tmp_13_fu_719_p3, tmp_15_fu_745_p3, tmp_17_fu_769_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_17_fu_769_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_15_fu_745_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_13_fu_719_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_11_fu_695_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_s_fu_665_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_8_fu_641_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_5_fu_611_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_594_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_594_p1, tmp_5_fu_611_p3, tmp_8_fu_641_p3, tmp_s_fu_665_p3, tmp_11_fu_695_p3, tmp_13_fu_719_p3, tmp_15_fu_745_p3, tmp_17_fu_769_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_17_fu_769_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_15_fu_745_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_13_fu_719_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_11_fu_695_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_s_fu_665_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_8_fu_641_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_5_fu_611_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_3_fu_594_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state19 <= ap_CS_fsm(9 downto 9);

    ap_done_assign_proc : process(ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_600_p1, tmp_21_cast_fu_630_p1, tmp_20_fu_651_p3, tmp_23_cast_fu_684_p1, tmp_22_fu_705_p3, tmp_25_cast_fu_734_p1, tmp_24_fu_755_p3, tmp_27_cast_fu_788_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_0_Addr_A_orig <= tmp_27_cast_fu_788_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_0_Addr_A_orig <= tmp_24_fu_755_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_0_Addr_A_orig <= tmp_25_cast_fu_734_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_0_Addr_A_orig <= tmp_22_fu_705_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_0_Addr_A_orig <= tmp_23_cast_fu_684_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_0_Addr_A_orig <= tmp_20_fu_651_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_21_cast_fu_630_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_2_fu_600_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_600_p1, tmp_21_cast_fu_630_p1, tmp_20_fu_651_p3, tmp_23_cast_fu_684_p1, tmp_22_fu_705_p3, tmp_25_cast_fu_734_p1, tmp_24_fu_755_p3, tmp_27_cast_fu_788_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_1_Addr_A_orig <= tmp_27_cast_fu_788_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_Addr_A_orig <= tmp_24_fu_755_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_Addr_A_orig <= tmp_25_cast_fu_734_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_Addr_A_orig <= tmp_22_fu_705_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_Addr_A_orig <= tmp_23_cast_fu_684_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_Addr_A_orig <= tmp_20_fu_651_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_21_cast_fu_630_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_2_fu_600_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_28_cast_fu_856_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= tmp_1_s_reg_1254;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_546_p2 <= "1" when (indvar_flatten_phi_fu_400_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_564_p2 <= "1" when (j_phi_fu_422_p4 = ap_const_lv5_10) else "0";

    grp_fu_429_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_0_load_reg_939, a_0_load_1_reg_979, a_0_load_2_reg_1024, a_0_load_3_reg_1064, a_0_load_4_reg_1104, a_0_load_5_reg_1144, a_0_load_6_reg_1184, a_0_load_7_reg_1209)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_429_p0 <= a_0_load_7_reg_1209;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_429_p0 <= a_0_load_6_reg_1184;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_429_p0 <= a_0_load_5_reg_1144;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_429_p0 <= a_0_load_4_reg_1104;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_429_p0 <= a_0_load_3_reg_1064;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_429_p0 <= a_0_load_2_reg_1024;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_429_p0 <= a_0_load_1_reg_979;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_429_p0 <= a_0_load_reg_939;
        else 
            grp_fu_429_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_429_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_0_load_reg_944, b_0_load_1_reg_984, b_0_load_2_reg_1029, b_0_load_3_reg_1069, b_0_load_4_reg_1109, b_0_load_5_reg_1149, b_0_load_6_reg_1189, b_0_load_7_reg_1214)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_429_p1 <= b_0_load_7_reg_1214;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_429_p1 <= b_0_load_6_reg_1189;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_429_p1 <= b_0_load_5_reg_1149;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_429_p1 <= b_0_load_4_reg_1109;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_429_p1 <= b_0_load_3_reg_1069;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_429_p1 <= b_0_load_2_reg_1029;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_429_p1 <= b_0_load_1_reg_984;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_429_p1 <= b_0_load_reg_944;
        else 
            grp_fu_429_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_430_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_1_load_reg_949, a_1_load_1_reg_989, a_1_load_2_reg_1034, a_1_load_3_reg_1074, a_1_load_4_reg_1114, a_1_load_5_reg_1154, a_1_load_6_reg_1194, a_1_load_7_reg_1219)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_430_p0 <= a_1_load_7_reg_1219;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_p0 <= a_1_load_6_reg_1194;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_430_p0 <= a_1_load_5_reg_1154;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_430_p0 <= a_1_load_4_reg_1114;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_430_p0 <= a_1_load_3_reg_1074;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_430_p0 <= a_1_load_2_reg_1034;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_430_p0 <= a_1_load_1_reg_989;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_430_p0 <= a_1_load_reg_949;
        else 
            grp_fu_430_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_430_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_1_load_reg_954, b_1_load_1_reg_994, b_1_load_2_reg_1039, b_1_load_3_reg_1079, b_1_load_4_reg_1119, b_1_load_5_reg_1159, b_1_load_6_reg_1199, b_1_load_7_reg_1224)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_430_p1 <= b_1_load_7_reg_1224;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_p1 <= b_1_load_6_reg_1199;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_430_p1 <= b_1_load_5_reg_1159;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_430_p1 <= b_1_load_4_reg_1119;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_430_p1 <= b_1_load_3_reg_1079;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_430_p1 <= b_1_load_2_reg_1039;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_430_p1 <= b_1_load_1_reg_994;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_430_p1 <= b_1_load_reg_954;
        else 
            grp_fu_430_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_522_p2 <= std_logic_vector(unsigned(reg_502) + unsigned(reg_510));
    grp_fu_528_p2 <= std_logic_vector(unsigned(reg_498) + unsigned(reg_506));
    grp_fu_534_p2 <= std_logic_vector(unsigned(reg_514) + unsigned(reg_518));
    grp_fu_540_p2 <= std_logic_vector(unsigned(grp_fu_534_p2) + unsigned(grp_fu_528_p2));
    i_1_fu_558_p2 <= std_logic_vector(unsigned(i_phi_fu_411_p4) + unsigned(ap_const_lv5_1));

    i_phi_fu_411_p4_assign_proc : process(i_reg_407, exitcond_flatten_reg_861, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_882)
    begin
        if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_411_p4 <= tmp_mid2_v_reg_882;
        else 
            i_phi_fu_411_p4 <= i_reg_407;
        end if; 
    end process;

    indvar_flatten_next_fu_552_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_400_p4) + unsigned(ap_const_lv9_1));

    indvar_flatten_phi_fu_400_p4_assign_proc : process(indvar_flatten_reg_396, exitcond_flatten_reg_861, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_865)
    begin
        if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_400_p4 <= indvar_flatten_next_reg_865;
        else 
            indvar_flatten_phi_fu_400_p4 <= indvar_flatten_reg_396;
        end if; 
    end process;

    j_1_fu_794_p2 <= std_logic_vector(unsigned(j_mid2_reg_870) + unsigned(ap_const_lv5_1));
    j_mid2_fu_570_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_564_p2(0) = '1') else 
        j_phi_fu_422_p4;

    j_phi_fu_422_p4_assign_proc : process(j_reg_418, exitcond_flatten_reg_861, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j_1_reg_1204)
    begin
        if (((exitcond_flatten_reg_861 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_422_p4 <= j_1_reg_1204;
        else 
            j_phi_fu_422_p4 <= j_reg_418;
        end if; 
    end process;

    tmp12_fu_818_p2 <= std_logic_vector(unsigned(tmp14_fu_814_p2) + unsigned(tmp13_fu_808_p2));
    tmp13_fu_808_p2 <= std_logic_vector(unsigned(reg_502) + unsigned(reg_510));
    tmp14_fu_814_p2 <= std_logic_vector(unsigned(tmp_6_13_reg_1244) + unsigned(tmp_6_14_reg_1249));
    tmp1_fu_799_p2 <= std_logic_vector(unsigned(grp_fu_540_p2) + unsigned(tmp2_reg_1234));
    tmp8_fu_824_p2 <= std_logic_vector(unsigned(tmp12_fu_818_p2) + unsigned(tmp9_fu_804_p2));
    tmp9_fu_804_p2 <= std_logic_vector(unsigned(tmp11_reg_1239) + unsigned(tmp10_reg_1229));
    tmp_10_fu_690_p2 <= (tmp_reg_888 or ap_const_lv8_4);
    tmp_11_fu_695_p3 <= (ap_const_lv56_0 & tmp_10_fu_690_p2);
    tmp_12_fu_714_p2 <= (tmp_reg_888 or ap_const_lv8_5);
    tmp_13_fu_719_p3 <= (ap_const_lv56_0 & tmp_12_fu_714_p2);
    tmp_14_fu_740_p2 <= (tmp_reg_888 or ap_const_lv8_6);
    tmp_15_fu_745_p3 <= (ap_const_lv56_0 & tmp_14_fu_740_p2);
    tmp_16_fu_764_p2 <= (tmp_reg_888 or ap_const_lv8_7);
    tmp_17_fu_769_p3 <= (ap_const_lv56_0 & tmp_16_fu_764_p2);
    tmp_18_fu_836_p3 <= (ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 & ap_const_lv4_0);
    tmp_19_fu_624_p2 <= std_logic_vector(unsigned(tmp_2_cast_fu_621_p1) + unsigned(ap_const_lv6_10));
    tmp_1_s_fu_830_p2 <= std_logic_vector(unsigned(tmp8_fu_824_p2) + unsigned(tmp1_fu_799_p2));
    tmp_20_cast_fu_843_p1 <= std_logic_vector(resize(unsigned(tmp_18_fu_836_p3),10));
    tmp_20_fu_651_p3 <= (ap_const_lv59_1 & j_mid2_reg_870);
    tmp_21_cast_fu_630_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_624_p2),64));
    tmp_21_fu_678_p2 <= std_logic_vector(unsigned(tmp_2_cast3_fu_675_p1) + unsigned(ap_const_lv7_30));
    tmp_22_fu_705_p3 <= (ap_const_lv59_2 & j_mid2_reg_870);
    tmp_23_cast_fu_684_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_678_p2),64));
    tmp_23_fu_729_p2 <= std_logic_vector(unsigned(tmp_2_cast3_reg_1009) + unsigned(ap_const_lv7_50));
    tmp_24_fu_755_p3 <= (ap_const_lv59_3 & j_mid2_reg_870);
    tmp_25_cast_fu_734_p1 <= std_logic_vector(resize(unsigned(tmp_23_fu_729_p2),64));
    tmp_25_fu_782_p2 <= std_logic_vector(unsigned(tmp_2_cast4_fu_779_p1) + unsigned(ap_const_lv8_70));
    tmp_26_fu_850_p2 <= std_logic_vector(unsigned(tmp_2_cast5_fu_847_p1) + unsigned(tmp_20_cast_fu_843_p1));
    tmp_27_cast_fu_788_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_782_p2),64));
    tmp_28_cast_fu_856_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_850_p2),64));
    tmp_2_cast3_fu_675_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_870),7));
    tmp_2_cast4_fu_779_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_870),8));
    tmp_2_cast5_fu_847_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_j_mid2_reg_870),10));
    tmp_2_cast_fu_621_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_870),6));
    tmp_2_fu_600_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_570_p3),64));
    tmp_3_fu_594_p1 <= std_logic_vector(resize(unsigned(tmp_fu_586_p3),64));
    tmp_4_fu_606_p2 <= (tmp_reg_888 or ap_const_lv8_1);
    tmp_5_fu_611_p3 <= (ap_const_lv56_0 & tmp_4_fu_606_p2);
    tmp_7_fu_636_p2 <= (tmp_reg_888 or ap_const_lv8_2);
    tmp_8_fu_641_p3 <= (ap_const_lv56_0 & tmp_7_fu_636_p2);
    tmp_9_fu_660_p2 <= (tmp_reg_888 or ap_const_lv8_3);
    tmp_fu_586_p3 <= (tmp_mid2_v_fu_578_p3 & ap_const_lv3_0);
    tmp_mid2_v_fu_578_p3 <= 
        i_1_fu_558_p2 when (exitcond_fu_564_p2(0) = '1') else 
        i_phi_fu_411_p4;
    tmp_s_fu_665_p3 <= (ap_const_lv56_0 & tmp_9_fu_660_p2);
end behav;
