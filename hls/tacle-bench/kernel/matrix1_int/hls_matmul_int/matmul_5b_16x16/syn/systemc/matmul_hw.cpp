// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> matmul_hw::ap_ST_fsm_state19 = "1000000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_8 = "1000";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";
const sc_lv<32> matmul_hw::ap_const_lv32_7 = "111";
const sc_lv<9> matmul_hw::ap_const_lv9_0 = "000000000";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<9> matmul_hw::ap_const_lv9_100 = "100000000";
const sc_lv<9> matmul_hw::ap_const_lv9_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<3> matmul_hw::ap_const_lv3_0 = "000";
const sc_lv<8> matmul_hw::ap_const_lv8_1 = "1";
const sc_lv<56> matmul_hw::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_lv<6> matmul_hw::ap_const_lv6_10 = "10000";
const sc_lv<8> matmul_hw::ap_const_lv8_2 = "10";
const sc_lv<59> matmul_hw::ap_const_lv59_1 = "1";
const sc_lv<8> matmul_hw::ap_const_lv8_3 = "11";
const sc_lv<7> matmul_hw::ap_const_lv7_30 = "110000";
const sc_lv<8> matmul_hw::ap_const_lv8_4 = "100";
const sc_lv<59> matmul_hw::ap_const_lv59_2 = "10";
const sc_lv<8> matmul_hw::ap_const_lv8_5 = "101";
const sc_lv<7> matmul_hw::ap_const_lv7_50 = "1010000";
const sc_lv<8> matmul_hw::ap_const_lv8_6 = "110";
const sc_lv<59> matmul_hw::ap_const_lv59_3 = "11";
const sc_lv<8> matmul_hw::ap_const_lv8_7 = "111";
const sc_lv<8> matmul_hw::ap_const_lv8_70 = "1110000";
const sc_lv<32> matmul_hw::ap_const_lv32_9 = "1001";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_mul_32scud_U1 = new matmul_hw_mul_32scud<1,6,32,32,32>("matmul_hw_mul_32scud_U1");
    matmul_hw_mul_32scud_U1->clk(ap_clk);
    matmul_hw_mul_32scud_U1->reset(ap_rst);
    matmul_hw_mul_32scud_U1->din0(grp_fu_429_p0);
    matmul_hw_mul_32scud_U1->din1(grp_fu_429_p1);
    matmul_hw_mul_32scud_U1->ce(ap_var_for_const0);
    matmul_hw_mul_32scud_U1->dout(grp_fu_429_p2);
    matmul_hw_mul_32scud_U2 = new matmul_hw_mul_32scud<1,6,32,32,32>("matmul_hw_mul_32scud_U2");
    matmul_hw_mul_32scud_U2->clk(ap_clk);
    matmul_hw_mul_32scud_U2->reset(ap_rst);
    matmul_hw_mul_32scud_U2->din0(grp_fu_430_p0);
    matmul_hw_mul_32scud_U2->din1(grp_fu_430_p1);
    matmul_hw_mul_32scud_U2->ce(ap_var_for_const0);
    matmul_hw_mul_32scud_U2->dout(grp_fu_430_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_Addr_A);
    sensitive << ( a_0_Addr_A_orig );

    SC_METHOD(thread_a_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_594_p1 );
    sensitive << ( tmp_5_fu_611_p3 );
    sensitive << ( tmp_8_fu_641_p3 );
    sensitive << ( tmp_s_fu_665_p3 );
    sensitive << ( tmp_11_fu_695_p3 );
    sensitive << ( tmp_13_fu_719_p3 );
    sensitive << ( tmp_15_fu_745_p3 );
    sensitive << ( tmp_17_fu_769_p3 );

    SC_METHOD(thread_a_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_0_Din_A);

    SC_METHOD(thread_a_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_0_WEN_A);

    SC_METHOD(thread_a_1_Addr_A);
    sensitive << ( a_1_Addr_A_orig );

    SC_METHOD(thread_a_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_3_fu_594_p1 );
    sensitive << ( tmp_5_fu_611_p3 );
    sensitive << ( tmp_8_fu_641_p3 );
    sensitive << ( tmp_s_fu_665_p3 );
    sensitive << ( tmp_11_fu_695_p3 );
    sensitive << ( tmp_13_fu_719_p3 );
    sensitive << ( tmp_15_fu_745_p3 );
    sensitive << ( tmp_17_fu_769_p3 );

    SC_METHOD(thread_a_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_1_Din_A);

    SC_METHOD(thread_a_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_a_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_1_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_b_0_Addr_A);
    sensitive << ( b_0_Addr_A_orig );

    SC_METHOD(thread_b_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_600_p1 );
    sensitive << ( tmp_21_cast_fu_630_p1 );
    sensitive << ( tmp_20_fu_651_p3 );
    sensitive << ( tmp_23_cast_fu_684_p1 );
    sensitive << ( tmp_22_fu_705_p3 );
    sensitive << ( tmp_25_cast_fu_734_p1 );
    sensitive << ( tmp_24_fu_755_p3 );
    sensitive << ( tmp_27_cast_fu_788_p1 );

    SC_METHOD(thread_b_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_0_Din_A);

    SC_METHOD(thread_b_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_0_WEN_A);

    SC_METHOD(thread_b_1_Addr_A);
    sensitive << ( b_1_Addr_A_orig );

    SC_METHOD(thread_b_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_2_fu_600_p1 );
    sensitive << ( tmp_21_cast_fu_630_p1 );
    sensitive << ( tmp_20_fu_651_p3 );
    sensitive << ( tmp_23_cast_fu_684_p1 );
    sensitive << ( tmp_22_fu_705_p3 );
    sensitive << ( tmp_25_cast_fu_734_p1 );
    sensitive << ( tmp_24_fu_755_p3 );
    sensitive << ( tmp_27_cast_fu_788_p1 );

    SC_METHOD(thread_b_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_1_Din_A);

    SC_METHOD(thread_b_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );

    SC_METHOD(thread_b_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_1_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_28_cast_fu_856_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_s_reg_1254 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_exitcond_flatten_fu_546_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_400_p4 );

    SC_METHOD(thread_exitcond_fu_564_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_546_p2 );
    sensitive << ( j_phi_fu_422_p4 );

    SC_METHOD(thread_grp_fu_429_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_0_load_reg_939 );
    sensitive << ( a_0_load_1_reg_979 );
    sensitive << ( a_0_load_2_reg_1024 );
    sensitive << ( a_0_load_3_reg_1064 );
    sensitive << ( a_0_load_4_reg_1104 );
    sensitive << ( a_0_load_5_reg_1144 );
    sensitive << ( a_0_load_6_reg_1184 );
    sensitive << ( a_0_load_7_reg_1209 );

    SC_METHOD(thread_grp_fu_429_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_0_load_reg_944 );
    sensitive << ( b_0_load_1_reg_984 );
    sensitive << ( b_0_load_2_reg_1029 );
    sensitive << ( b_0_load_3_reg_1069 );
    sensitive << ( b_0_load_4_reg_1109 );
    sensitive << ( b_0_load_5_reg_1149 );
    sensitive << ( b_0_load_6_reg_1189 );
    sensitive << ( b_0_load_7_reg_1214 );

    SC_METHOD(thread_grp_fu_430_p0);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( a_1_load_reg_949 );
    sensitive << ( a_1_load_1_reg_989 );
    sensitive << ( a_1_load_2_reg_1034 );
    sensitive << ( a_1_load_3_reg_1074 );
    sensitive << ( a_1_load_4_reg_1114 );
    sensitive << ( a_1_load_5_reg_1154 );
    sensitive << ( a_1_load_6_reg_1194 );
    sensitive << ( a_1_load_7_reg_1219 );

    SC_METHOD(thread_grp_fu_430_p1);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( b_1_load_reg_954 );
    sensitive << ( b_1_load_1_reg_994 );
    sensitive << ( b_1_load_2_reg_1039 );
    sensitive << ( b_1_load_3_reg_1079 );
    sensitive << ( b_1_load_4_reg_1119 );
    sensitive << ( b_1_load_5_reg_1159 );
    sensitive << ( b_1_load_6_reg_1199 );
    sensitive << ( b_1_load_7_reg_1224 );

    SC_METHOD(thread_grp_fu_522_p2);
    sensitive << ( reg_502 );
    sensitive << ( reg_510 );

    SC_METHOD(thread_grp_fu_528_p2);
    sensitive << ( reg_498 );
    sensitive << ( reg_506 );

    SC_METHOD(thread_grp_fu_534_p2);
    sensitive << ( reg_514 );
    sensitive << ( reg_518 );

    SC_METHOD(thread_grp_fu_540_p2);
    sensitive << ( grp_fu_534_p2 );
    sensitive << ( grp_fu_528_p2 );

    SC_METHOD(thread_i_1_fu_558_p2);
    sensitive << ( i_phi_fu_411_p4 );

    SC_METHOD(thread_i_phi_fu_411_p4);
    sensitive << ( i_reg_407 );
    sensitive << ( exitcond_flatten_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_882 );

    SC_METHOD(thread_indvar_flatten_next_fu_552_p2);
    sensitive << ( indvar_flatten_phi_fu_400_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_400_p4);
    sensitive << ( indvar_flatten_reg_396 );
    sensitive << ( exitcond_flatten_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_865 );

    SC_METHOD(thread_j_1_fu_794_p2);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_j_mid2_fu_570_p3);
    sensitive << ( j_phi_fu_422_p4 );
    sensitive << ( exitcond_fu_564_p2 );

    SC_METHOD(thread_j_phi_fu_422_p4);
    sensitive << ( j_reg_418 );
    sensitive << ( exitcond_flatten_reg_861 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_1204 );

    SC_METHOD(thread_tmp12_fu_818_p2);
    sensitive << ( tmp14_fu_814_p2 );
    sensitive << ( tmp13_fu_808_p2 );

    SC_METHOD(thread_tmp13_fu_808_p2);
    sensitive << ( reg_502 );
    sensitive << ( reg_510 );

    SC_METHOD(thread_tmp14_fu_814_p2);
    sensitive << ( tmp_6_13_reg_1244 );
    sensitive << ( tmp_6_14_reg_1249 );

    SC_METHOD(thread_tmp1_fu_799_p2);
    sensitive << ( grp_fu_540_p2 );
    sensitive << ( tmp2_reg_1234 );

    SC_METHOD(thread_tmp8_fu_824_p2);
    sensitive << ( tmp12_fu_818_p2 );
    sensitive << ( tmp9_fu_804_p2 );

    SC_METHOD(thread_tmp9_fu_804_p2);
    sensitive << ( tmp10_reg_1229 );
    sensitive << ( tmp11_reg_1239 );

    SC_METHOD(thread_tmp_10_fu_690_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_11_fu_695_p3);
    sensitive << ( tmp_10_fu_690_p2 );

    SC_METHOD(thread_tmp_12_fu_714_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_13_fu_719_p3);
    sensitive << ( tmp_12_fu_714_p2 );

    SC_METHOD(thread_tmp_14_fu_740_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_15_fu_745_p3);
    sensitive << ( tmp_14_fu_740_p2 );

    SC_METHOD(thread_tmp_16_fu_764_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_17_fu_769_p3);
    sensitive << ( tmp_16_fu_764_p2 );

    SC_METHOD(thread_tmp_18_fu_836_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 );

    SC_METHOD(thread_tmp_19_fu_624_p2);
    sensitive << ( tmp_2_cast_fu_621_p1 );

    SC_METHOD(thread_tmp_1_s_fu_830_p2);
    sensitive << ( tmp8_fu_824_p2 );
    sensitive << ( tmp1_fu_799_p2 );

    SC_METHOD(thread_tmp_20_cast_fu_843_p1);
    sensitive << ( tmp_18_fu_836_p3 );

    SC_METHOD(thread_tmp_20_fu_651_p3);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_21_cast_fu_630_p1);
    sensitive << ( tmp_19_fu_624_p2 );

    SC_METHOD(thread_tmp_21_fu_678_p2);
    sensitive << ( tmp_2_cast3_fu_675_p1 );

    SC_METHOD(thread_tmp_22_fu_705_p3);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_23_cast_fu_684_p1);
    sensitive << ( tmp_21_fu_678_p2 );

    SC_METHOD(thread_tmp_23_fu_729_p2);
    sensitive << ( tmp_2_cast3_reg_1009 );

    SC_METHOD(thread_tmp_24_fu_755_p3);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_25_cast_fu_734_p1);
    sensitive << ( tmp_23_fu_729_p2 );

    SC_METHOD(thread_tmp_25_fu_782_p2);
    sensitive << ( tmp_2_cast4_fu_779_p1 );

    SC_METHOD(thread_tmp_26_fu_850_p2);
    sensitive << ( tmp_2_cast5_fu_847_p1 );
    sensitive << ( tmp_20_cast_fu_843_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_788_p1);
    sensitive << ( tmp_25_fu_782_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_856_p1);
    sensitive << ( tmp_26_fu_850_p2 );

    SC_METHOD(thread_tmp_2_cast3_fu_675_p1);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_2_cast4_fu_779_p1);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_2_cast5_fu_847_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter1_j_mid2_reg_870 );

    SC_METHOD(thread_tmp_2_cast_fu_621_p1);
    sensitive << ( j_mid2_reg_870 );

    SC_METHOD(thread_tmp_2_fu_600_p1);
    sensitive << ( j_mid2_fu_570_p3 );

    SC_METHOD(thread_tmp_3_fu_594_p1);
    sensitive << ( tmp_fu_586_p3 );

    SC_METHOD(thread_tmp_4_fu_606_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_5_fu_611_p3);
    sensitive << ( tmp_4_fu_606_p2 );

    SC_METHOD(thread_tmp_7_fu_636_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_8_fu_641_p3);
    sensitive << ( tmp_7_fu_636_p2 );

    SC_METHOD(thread_tmp_9_fu_660_p2);
    sensitive << ( tmp_reg_888 );

    SC_METHOD(thread_tmp_fu_586_p3);
    sensitive << ( tmp_mid2_v_fu_578_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_578_p3);
    sensitive << ( i_phi_fu_411_p4 );
    sensitive << ( exitcond_fu_564_p2 );
    sensitive << ( i_1_fu_558_p2 );

    SC_METHOD(thread_tmp_s_fu_665_p3);
    sensitive << ( tmp_9_fu_660_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_546_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_Addr_A, "(port)a_0_Addr_A");
    sc_trace(mVcdFile, a_0_EN_A, "(port)a_0_EN_A");
    sc_trace(mVcdFile, a_0_WEN_A, "(port)a_0_WEN_A");
    sc_trace(mVcdFile, a_0_Din_A, "(port)a_0_Din_A");
    sc_trace(mVcdFile, a_0_Dout_A, "(port)a_0_Dout_A");
    sc_trace(mVcdFile, a_0_Clk_A, "(port)a_0_Clk_A");
    sc_trace(mVcdFile, a_0_Rst_A, "(port)a_0_Rst_A");
    sc_trace(mVcdFile, a_1_Addr_A, "(port)a_1_Addr_A");
    sc_trace(mVcdFile, a_1_EN_A, "(port)a_1_EN_A");
    sc_trace(mVcdFile, a_1_WEN_A, "(port)a_1_WEN_A");
    sc_trace(mVcdFile, a_1_Din_A, "(port)a_1_Din_A");
    sc_trace(mVcdFile, a_1_Dout_A, "(port)a_1_Dout_A");
    sc_trace(mVcdFile, a_1_Clk_A, "(port)a_1_Clk_A");
    sc_trace(mVcdFile, a_1_Rst_A, "(port)a_1_Rst_A");
    sc_trace(mVcdFile, b_0_Addr_A, "(port)b_0_Addr_A");
    sc_trace(mVcdFile, b_0_EN_A, "(port)b_0_EN_A");
    sc_trace(mVcdFile, b_0_WEN_A, "(port)b_0_WEN_A");
    sc_trace(mVcdFile, b_0_Din_A, "(port)b_0_Din_A");
    sc_trace(mVcdFile, b_0_Dout_A, "(port)b_0_Dout_A");
    sc_trace(mVcdFile, b_0_Clk_A, "(port)b_0_Clk_A");
    sc_trace(mVcdFile, b_0_Rst_A, "(port)b_0_Rst_A");
    sc_trace(mVcdFile, b_1_Addr_A, "(port)b_1_Addr_A");
    sc_trace(mVcdFile, b_1_EN_A, "(port)b_1_EN_A");
    sc_trace(mVcdFile, b_1_WEN_A, "(port)b_1_WEN_A");
    sc_trace(mVcdFile, b_1_Din_A, "(port)b_1_Din_A");
    sc_trace(mVcdFile, b_1_Dout_A, "(port)b_1_Dout_A");
    sc_trace(mVcdFile, b_1_Clk_A, "(port)b_1_Clk_A");
    sc_trace(mVcdFile, b_1_Rst_A, "(port)b_1_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_396, "indvar_flatten_reg_396");
    sc_trace(mVcdFile, i_reg_407, "i_reg_407");
    sc_trace(mVcdFile, j_reg_418, "j_reg_418");
    sc_trace(mVcdFile, grp_fu_429_p2, "grp_fu_429_p2");
    sc_trace(mVcdFile, reg_498, "reg_498");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_flatten_reg_861, "exitcond_flatten_reg_861");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861");
    sc_trace(mVcdFile, grp_fu_430_p2, "grp_fu_430_p2");
    sc_trace(mVcdFile, reg_502, "reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, reg_506, "reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, reg_510, "reg_510");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, reg_514, "reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, reg_518, "reg_518");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, exitcond_flatten_fu_546_p2, "exitcond_flatten_fu_546_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_552_p2, "indvar_flatten_next_fu_552_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_865, "indvar_flatten_next_reg_865");
    sc_trace(mVcdFile, j_mid2_fu_570_p3, "j_mid2_fu_570_p3");
    sc_trace(mVcdFile, j_mid2_reg_870, "j_mid2_reg_870");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_j_mid2_reg_870, "ap_pipeline_reg_pp0_iter1_j_mid2_reg_870");
    sc_trace(mVcdFile, tmp_mid2_v_fu_578_p3, "tmp_mid2_v_fu_578_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_882, "tmp_mid2_v_reg_882");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882, "ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882");
    sc_trace(mVcdFile, tmp_fu_586_p3, "tmp_fu_586_p3");
    sc_trace(mVcdFile, tmp_reg_888, "tmp_reg_888");
    sc_trace(mVcdFile, a_0_load_reg_939, "a_0_load_reg_939");
    sc_trace(mVcdFile, b_0_load_reg_944, "b_0_load_reg_944");
    sc_trace(mVcdFile, a_1_load_reg_949, "a_1_load_reg_949");
    sc_trace(mVcdFile, b_1_load_reg_954, "b_1_load_reg_954");
    sc_trace(mVcdFile, a_0_load_1_reg_979, "a_0_load_1_reg_979");
    sc_trace(mVcdFile, b_0_load_1_reg_984, "b_0_load_1_reg_984");
    sc_trace(mVcdFile, a_1_load_1_reg_989, "a_1_load_1_reg_989");
    sc_trace(mVcdFile, b_1_load_1_reg_994, "b_1_load_1_reg_994");
    sc_trace(mVcdFile, tmp_2_cast3_fu_675_p1, "tmp_2_cast3_fu_675_p1");
    sc_trace(mVcdFile, tmp_2_cast3_reg_1009, "tmp_2_cast3_reg_1009");
    sc_trace(mVcdFile, a_0_load_2_reg_1024, "a_0_load_2_reg_1024");
    sc_trace(mVcdFile, b_0_load_2_reg_1029, "b_0_load_2_reg_1029");
    sc_trace(mVcdFile, a_1_load_2_reg_1034, "a_1_load_2_reg_1034");
    sc_trace(mVcdFile, b_1_load_2_reg_1039, "b_1_load_2_reg_1039");
    sc_trace(mVcdFile, a_0_load_3_reg_1064, "a_0_load_3_reg_1064");
    sc_trace(mVcdFile, b_0_load_3_reg_1069, "b_0_load_3_reg_1069");
    sc_trace(mVcdFile, a_1_load_3_reg_1074, "a_1_load_3_reg_1074");
    sc_trace(mVcdFile, b_1_load_3_reg_1079, "b_1_load_3_reg_1079");
    sc_trace(mVcdFile, a_0_load_4_reg_1104, "a_0_load_4_reg_1104");
    sc_trace(mVcdFile, b_0_load_4_reg_1109, "b_0_load_4_reg_1109");
    sc_trace(mVcdFile, a_1_load_4_reg_1114, "a_1_load_4_reg_1114");
    sc_trace(mVcdFile, b_1_load_4_reg_1119, "b_1_load_4_reg_1119");
    sc_trace(mVcdFile, a_0_load_5_reg_1144, "a_0_load_5_reg_1144");
    sc_trace(mVcdFile, b_0_load_5_reg_1149, "b_0_load_5_reg_1149");
    sc_trace(mVcdFile, a_1_load_5_reg_1154, "a_1_load_5_reg_1154");
    sc_trace(mVcdFile, b_1_load_5_reg_1159, "b_1_load_5_reg_1159");
    sc_trace(mVcdFile, a_0_load_6_reg_1184, "a_0_load_6_reg_1184");
    sc_trace(mVcdFile, b_0_load_6_reg_1189, "b_0_load_6_reg_1189");
    sc_trace(mVcdFile, a_1_load_6_reg_1194, "a_1_load_6_reg_1194");
    sc_trace(mVcdFile, b_1_load_6_reg_1199, "b_1_load_6_reg_1199");
    sc_trace(mVcdFile, j_1_fu_794_p2, "j_1_fu_794_p2");
    sc_trace(mVcdFile, j_1_reg_1204, "j_1_reg_1204");
    sc_trace(mVcdFile, a_0_load_7_reg_1209, "a_0_load_7_reg_1209");
    sc_trace(mVcdFile, b_0_load_7_reg_1214, "b_0_load_7_reg_1214");
    sc_trace(mVcdFile, a_1_load_7_reg_1219, "a_1_load_7_reg_1219");
    sc_trace(mVcdFile, b_1_load_7_reg_1224, "b_1_load_7_reg_1224");
    sc_trace(mVcdFile, grp_fu_522_p2, "grp_fu_522_p2");
    sc_trace(mVcdFile, tmp10_reg_1229, "tmp10_reg_1229");
    sc_trace(mVcdFile, grp_fu_540_p2, "grp_fu_540_p2");
    sc_trace(mVcdFile, tmp2_reg_1234, "tmp2_reg_1234");
    sc_trace(mVcdFile, tmp11_reg_1239, "tmp11_reg_1239");
    sc_trace(mVcdFile, tmp_6_13_reg_1244, "tmp_6_13_reg_1244");
    sc_trace(mVcdFile, tmp_6_14_reg_1249, "tmp_6_14_reg_1249");
    sc_trace(mVcdFile, tmp_1_s_fu_830_p2, "tmp_1_s_fu_830_p2");
    sc_trace(mVcdFile, tmp_1_s_reg_1254, "tmp_1_s_reg_1254");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_400_p4, "indvar_flatten_phi_fu_400_p4");
    sc_trace(mVcdFile, i_phi_fu_411_p4, "i_phi_fu_411_p4");
    sc_trace(mVcdFile, j_phi_fu_422_p4, "j_phi_fu_422_p4");
    sc_trace(mVcdFile, tmp_3_fu_594_p1, "tmp_3_fu_594_p1");
    sc_trace(mVcdFile, tmp_2_fu_600_p1, "tmp_2_fu_600_p1");
    sc_trace(mVcdFile, tmp_5_fu_611_p3, "tmp_5_fu_611_p3");
    sc_trace(mVcdFile, tmp_21_cast_fu_630_p1, "tmp_21_cast_fu_630_p1");
    sc_trace(mVcdFile, tmp_8_fu_641_p3, "tmp_8_fu_641_p3");
    sc_trace(mVcdFile, tmp_20_fu_651_p3, "tmp_20_fu_651_p3");
    sc_trace(mVcdFile, tmp_s_fu_665_p3, "tmp_s_fu_665_p3");
    sc_trace(mVcdFile, tmp_23_cast_fu_684_p1, "tmp_23_cast_fu_684_p1");
    sc_trace(mVcdFile, tmp_11_fu_695_p3, "tmp_11_fu_695_p3");
    sc_trace(mVcdFile, tmp_22_fu_705_p3, "tmp_22_fu_705_p3");
    sc_trace(mVcdFile, tmp_13_fu_719_p3, "tmp_13_fu_719_p3");
    sc_trace(mVcdFile, tmp_25_cast_fu_734_p1, "tmp_25_cast_fu_734_p1");
    sc_trace(mVcdFile, tmp_15_fu_745_p3, "tmp_15_fu_745_p3");
    sc_trace(mVcdFile, tmp_24_fu_755_p3, "tmp_24_fu_755_p3");
    sc_trace(mVcdFile, tmp_17_fu_769_p3, "tmp_17_fu_769_p3");
    sc_trace(mVcdFile, tmp_27_cast_fu_788_p1, "tmp_27_cast_fu_788_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_856_p1, "tmp_28_cast_fu_856_p1");
    sc_trace(mVcdFile, a_0_Addr_A_orig, "a_0_Addr_A_orig");
    sc_trace(mVcdFile, b_0_Addr_A_orig, "b_0_Addr_A_orig");
    sc_trace(mVcdFile, a_1_Addr_A_orig, "a_1_Addr_A_orig");
    sc_trace(mVcdFile, b_1_Addr_A_orig, "b_1_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_429_p0, "grp_fu_429_p0");
    sc_trace(mVcdFile, grp_fu_429_p1, "grp_fu_429_p1");
    sc_trace(mVcdFile, grp_fu_430_p0, "grp_fu_430_p0");
    sc_trace(mVcdFile, grp_fu_430_p1, "grp_fu_430_p1");
    sc_trace(mVcdFile, grp_fu_534_p2, "grp_fu_534_p2");
    sc_trace(mVcdFile, grp_fu_528_p2, "grp_fu_528_p2");
    sc_trace(mVcdFile, exitcond_fu_564_p2, "exitcond_fu_564_p2");
    sc_trace(mVcdFile, i_1_fu_558_p2, "i_1_fu_558_p2");
    sc_trace(mVcdFile, tmp_4_fu_606_p2, "tmp_4_fu_606_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_621_p1, "tmp_2_cast_fu_621_p1");
    sc_trace(mVcdFile, tmp_19_fu_624_p2, "tmp_19_fu_624_p2");
    sc_trace(mVcdFile, tmp_7_fu_636_p2, "tmp_7_fu_636_p2");
    sc_trace(mVcdFile, tmp_9_fu_660_p2, "tmp_9_fu_660_p2");
    sc_trace(mVcdFile, tmp_21_fu_678_p2, "tmp_21_fu_678_p2");
    sc_trace(mVcdFile, tmp_10_fu_690_p2, "tmp_10_fu_690_p2");
    sc_trace(mVcdFile, tmp_12_fu_714_p2, "tmp_12_fu_714_p2");
    sc_trace(mVcdFile, tmp_23_fu_729_p2, "tmp_23_fu_729_p2");
    sc_trace(mVcdFile, tmp_14_fu_740_p2, "tmp_14_fu_740_p2");
    sc_trace(mVcdFile, tmp_16_fu_764_p2, "tmp_16_fu_764_p2");
    sc_trace(mVcdFile, tmp_2_cast4_fu_779_p1, "tmp_2_cast4_fu_779_p1");
    sc_trace(mVcdFile, tmp_25_fu_782_p2, "tmp_25_fu_782_p2");
    sc_trace(mVcdFile, tmp14_fu_814_p2, "tmp14_fu_814_p2");
    sc_trace(mVcdFile, tmp13_fu_808_p2, "tmp13_fu_808_p2");
    sc_trace(mVcdFile, tmp12_fu_818_p2, "tmp12_fu_818_p2");
    sc_trace(mVcdFile, tmp9_fu_804_p2, "tmp9_fu_804_p2");
    sc_trace(mVcdFile, tmp8_fu_824_p2, "tmp8_fu_824_p2");
    sc_trace(mVcdFile, tmp1_fu_799_p2, "tmp1_fu_799_p2");
    sc_trace(mVcdFile, tmp_18_fu_836_p3, "tmp_18_fu_836_p3");
    sc_trace(mVcdFile, tmp_2_cast5_fu_847_p1, "tmp_2_cast5_fu_847_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_843_p1, "tmp_20_cast_fu_843_p1");
    sc_trace(mVcdFile, tmp_26_fu_850_p2, "tmp_26_fu_850_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_mul_32scud_U1;
    delete matmul_hw_mul_32scud_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_546_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_reg_407 = tmp_mid2_v_reg_882.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_407 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_reg_396 = indvar_flatten_next_reg_865.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_396 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_reg_418 = j_1_reg_1204.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_418 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        a_0_load_1_reg_979 = a_0_Dout_A.read();
        a_1_load_1_reg_989 = a_1_Dout_A.read();
        b_0_load_1_reg_984 = b_0_Dout_A.read();
        b_1_load_1_reg_994 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        a_0_load_2_reg_1024 = a_0_Dout_A.read();
        a_1_load_2_reg_1034 = a_1_Dout_A.read();
        b_0_load_2_reg_1029 = b_0_Dout_A.read();
        b_1_load_2_reg_1039 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        a_0_load_3_reg_1064 = a_0_Dout_A.read();
        a_1_load_3_reg_1074 = a_1_Dout_A.read();
        b_0_load_3_reg_1069 = b_0_Dout_A.read();
        b_1_load_3_reg_1079 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        a_0_load_4_reg_1104 = a_0_Dout_A.read();
        a_1_load_4_reg_1114 = a_1_Dout_A.read();
        b_0_load_4_reg_1109 = b_0_Dout_A.read();
        b_1_load_4_reg_1119 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        a_0_load_5_reg_1144 = a_0_Dout_A.read();
        a_1_load_5_reg_1154 = a_1_Dout_A.read();
        b_0_load_5_reg_1149 = b_0_Dout_A.read();
        b_1_load_5_reg_1159 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0))) {
        a_0_load_6_reg_1184 = a_0_Dout_A.read();
        a_1_load_6_reg_1194 = a_1_Dout_A.read();
        b_0_load_6_reg_1189 = b_0_Dout_A.read();
        b_1_load_6_reg_1199 = b_1_Dout_A.read();
        j_1_reg_1204 = j_1_fu_794_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        a_0_load_7_reg_1209 = a_0_Dout_A.read();
        a_1_load_7_reg_1219 = a_1_Dout_A.read();
        b_0_load_7_reg_1214 = b_0_Dout_A.read();
        b_1_load_7_reg_1224 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        a_0_load_reg_939 = a_0_Dout_A.read();
        a_1_load_reg_949 = a_1_Dout_A.read();
        b_0_load_reg_944 = b_0_Dout_A.read();
        b_1_load_reg_954 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861 = exitcond_flatten_reg_861.read();
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_870 = j_mid2_reg_870.read();
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882 = tmp_mid2_v_reg_882.read();
        exitcond_flatten_reg_861 = exitcond_flatten_fu_546_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_next_reg_865 = indvar_flatten_next_fu_552_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_546_p2.read()))) {
        j_mid2_reg_870 = j_mid2_fu_570_p3.read();
        tmp_reg_888 = tmp_fu_586_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read())))) {
        reg_498 = grp_fu_429_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())))) {
        reg_502 = grp_fu_430_p2.read();
    }
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())))) {
        reg_506 = grp_fu_429_p2.read();
    }
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        reg_510 = grp_fu_430_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())))) {
        reg_514 = grp_fu_429_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        reg_518 = grp_fu_429_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        tmp10_reg_1229 = grp_fu_522_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()))) {
        tmp11_reg_1239 = grp_fu_522_p2.read();
        tmp2_reg_1234 = grp_fu_540_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()))) {
        tmp_1_s_reg_1254 = tmp_1_s_fu_830_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        tmp_2_cast3_reg_1009 = tmp_2_cast3_fu_675_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_6_13_reg_1244 = grp_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        tmp_6_14_reg_1249 = grp_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_546_p2.read()))) {
        tmp_mid2_v_reg_882 = tmp_mid2_v_fu_578_p3.read();
    }
}

void matmul_hw::thread_a_0_Addr_A() {
    a_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_769_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_745_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_719_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_665_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_641_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_611_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_594_p1.read());
        } else {
            a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_0_Clk_A() {
    a_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_0_Din_A() {
    a_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_0_EN_A = ap_const_logic_1;
    } else {
        a_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_0_Rst_A() {
    a_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_0_WEN_A() {
    a_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_1_Addr_A() {
    a_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_769_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_15_fu_745_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_719_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_11_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_665_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_641_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_611_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_594_p1.read());
        } else {
            a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_1_Clk_A() {
    a_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_1_Din_A() {
    a_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        a_1_EN_A = ap_const_logic_1;
    } else {
        a_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_1_Rst_A() {
    a_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_1_WEN_A() {
    a_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read().range(7, 7);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read().range(8, 8);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(9, 9);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Addr_A() {
    b_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_788_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_755_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_734_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_705_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_684_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_651_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_630_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_600_p1.read());
        } else {
            b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_0_Clk_A() {
    b_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_0_Din_A() {
    b_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_0_EN_A = ap_const_logic_1;
    } else {
        b_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Rst_A() {
    b_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_0_WEN_A() {
    b_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_1_Addr_A() {
    b_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_788_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_755_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_25_cast_fu_734_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_705_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_23_cast_fu_684_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_651_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_21_cast_fu_630_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_600_p1.read());
        } else {
            b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_1_Clk_A() {
    b_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_1_Din_A() {
    b_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())))) {
        b_1_EN_A = ap_const_logic_1;
    } else {
        b_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_1_Rst_A() {
    b_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_1_WEN_A() {
    b_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_28_cast_fu_856_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = tmp_1_s_reg_1254.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_861.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_546_p2() {
    exitcond_flatten_fu_546_p2 = (!indvar_flatten_phi_fu_400_p4.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_400_p4.read() == ap_const_lv9_100);
}

void matmul_hw::thread_exitcond_fu_564_p2() {
    exitcond_fu_564_p2 = (!j_phi_fu_422_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_422_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_grp_fu_429_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_429_p0 = a_0_load_7_reg_1209.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_429_p0 = a_0_load_6_reg_1184.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_429_p0 = a_0_load_5_reg_1144.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_429_p0 = a_0_load_4_reg_1104.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_429_p0 = a_0_load_3_reg_1064.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_429_p0 = a_0_load_2_reg_1024.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_429_p0 = a_0_load_1_reg_979.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_429_p0 = a_0_load_reg_939.read();
    } else {
        grp_fu_429_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_429_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_429_p1 = b_0_load_7_reg_1214.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_429_p1 = b_0_load_6_reg_1189.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_429_p1 = b_0_load_5_reg_1149.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_429_p1 = b_0_load_4_reg_1109.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_429_p1 = b_0_load_3_reg_1069.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_429_p1 = b_0_load_2_reg_1029.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_429_p1 = b_0_load_1_reg_984.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_429_p1 = b_0_load_reg_944.read();
    } else {
        grp_fu_429_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_430_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_430_p0 = a_1_load_7_reg_1219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_430_p0 = a_1_load_6_reg_1194.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_430_p0 = a_1_load_5_reg_1154.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_430_p0 = a_1_load_4_reg_1114.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_430_p0 = a_1_load_3_reg_1074.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_430_p0 = a_1_load_2_reg_1034.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_430_p0 = a_1_load_1_reg_989.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_430_p0 = a_1_load_reg_949.read();
    } else {
        grp_fu_430_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_430_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_430_p1 = b_1_load_7_reg_1224.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_430_p1 = b_1_load_6_reg_1199.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_430_p1 = b_1_load_5_reg_1159.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_430_p1 = b_1_load_4_reg_1119.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_430_p1 = b_1_load_3_reg_1079.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_430_p1 = b_1_load_2_reg_1039.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_430_p1 = b_1_load_1_reg_994.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_430_p1 = b_1_load_reg_954.read();
    } else {
        grp_fu_430_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_522_p2() {
    grp_fu_522_p2 = (!reg_502.read().is_01() || !reg_510.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_502.read()) + sc_biguint<32>(reg_510.read()));
}

void matmul_hw::thread_grp_fu_528_p2() {
    grp_fu_528_p2 = (!reg_498.read().is_01() || !reg_506.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_498.read()) + sc_biguint<32>(reg_506.read()));
}

void matmul_hw::thread_grp_fu_534_p2() {
    grp_fu_534_p2 = (!reg_514.read().is_01() || !reg_518.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_514.read()) + sc_biguint<32>(reg_518.read()));
}

void matmul_hw::thread_grp_fu_540_p2() {
    grp_fu_540_p2 = (!grp_fu_534_p2.read().is_01() || !grp_fu_528_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_534_p2.read()) + sc_biguint<32>(grp_fu_528_p2.read()));
}

void matmul_hw::thread_i_1_fu_558_p2() {
    i_1_fu_558_p2 = (!i_phi_fu_411_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_phi_fu_411_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_i_phi_fu_411_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_phi_fu_411_p4 = tmp_mid2_v_reg_882.read();
    } else {
        i_phi_fu_411_p4 = i_reg_407.read();
    }
}

void matmul_hw::thread_indvar_flatten_next_fu_552_p2() {
    indvar_flatten_next_fu_552_p2 = (!indvar_flatten_phi_fu_400_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(indvar_flatten_phi_fu_400_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void matmul_hw::thread_indvar_flatten_phi_fu_400_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_phi_fu_400_p4 = indvar_flatten_next_reg_865.read();
    } else {
        indvar_flatten_phi_fu_400_p4 = indvar_flatten_reg_396.read();
    }
}

void matmul_hw::thread_j_1_fu_794_p2() {
    j_1_fu_794_p2 = (!j_mid2_reg_870.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_mid2_reg_870.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_j_mid2_fu_570_p3() {
    j_mid2_fu_570_p3 = (!exitcond_fu_564_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_564_p2.read()[0].to_bool())? ap_const_lv5_0: j_phi_fu_422_p4.read());
}

void matmul_hw::thread_j_phi_fu_422_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_861.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_phi_fu_422_p4 = j_1_reg_1204.read();
    } else {
        j_phi_fu_422_p4 = j_reg_418.read();
    }
}

void matmul_hw::thread_tmp12_fu_818_p2() {
    tmp12_fu_818_p2 = (!tmp14_fu_814_p2.read().is_01() || !tmp13_fu_808_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp14_fu_814_p2.read()) + sc_biguint<32>(tmp13_fu_808_p2.read()));
}

void matmul_hw::thread_tmp13_fu_808_p2() {
    tmp13_fu_808_p2 = (!reg_502.read().is_01() || !reg_510.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_502.read()) + sc_biguint<32>(reg_510.read()));
}

void matmul_hw::thread_tmp14_fu_814_p2() {
    tmp14_fu_814_p2 = (!tmp_6_13_reg_1244.read().is_01() || !tmp_6_14_reg_1249.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_13_reg_1244.read()) + sc_biguint<32>(tmp_6_14_reg_1249.read()));
}

void matmul_hw::thread_tmp1_fu_799_p2() {
    tmp1_fu_799_p2 = (!grp_fu_540_p2.read().is_01() || !tmp2_reg_1234.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_540_p2.read()) + sc_biguint<32>(tmp2_reg_1234.read()));
}

void matmul_hw::thread_tmp8_fu_824_p2() {
    tmp8_fu_824_p2 = (!tmp12_fu_818_p2.read().is_01() || !tmp9_fu_804_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp12_fu_818_p2.read()) + sc_biguint<32>(tmp9_fu_804_p2.read()));
}

void matmul_hw::thread_tmp9_fu_804_p2() {
    tmp9_fu_804_p2 = (!tmp11_reg_1239.read().is_01() || !tmp10_reg_1229.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp11_reg_1239.read()) + sc_biguint<32>(tmp10_reg_1229.read()));
}

void matmul_hw::thread_tmp_10_fu_690_p2() {
    tmp_10_fu_690_p2 = (tmp_reg_888.read() | ap_const_lv8_4);
}

void matmul_hw::thread_tmp_11_fu_695_p3() {
    tmp_11_fu_695_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_10_fu_690_p2.read());
}

void matmul_hw::thread_tmp_12_fu_714_p2() {
    tmp_12_fu_714_p2 = (tmp_reg_888.read() | ap_const_lv8_5);
}

void matmul_hw::thread_tmp_13_fu_719_p3() {
    tmp_13_fu_719_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_12_fu_714_p2.read());
}

void matmul_hw::thread_tmp_14_fu_740_p2() {
    tmp_14_fu_740_p2 = (tmp_reg_888.read() | ap_const_lv8_6);
}

void matmul_hw::thread_tmp_15_fu_745_p3() {
    tmp_15_fu_745_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_14_fu_740_p2.read());
}

void matmul_hw::thread_tmp_16_fu_764_p2() {
    tmp_16_fu_764_p2 = (tmp_reg_888.read() | ap_const_lv8_7);
}

void matmul_hw::thread_tmp_17_fu_769_p3() {
    tmp_17_fu_769_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_16_fu_764_p2.read());
}

void matmul_hw::thread_tmp_18_fu_836_p3() {
    tmp_18_fu_836_p3 = esl_concat<5,4>(ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_882.read(), ap_const_lv4_0);
}

void matmul_hw::thread_tmp_19_fu_624_p2() {
    tmp_19_fu_624_p2 = (!tmp_2_cast_fu_621_p1.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_2_cast_fu_621_p1.read()) + sc_biguint<6>(ap_const_lv6_10));
}

void matmul_hw::thread_tmp_1_s_fu_830_p2() {
    tmp_1_s_fu_830_p2 = (!tmp8_fu_824_p2.read().is_01() || !tmp1_fu_799_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_824_p2.read()) + sc_biguint<32>(tmp1_fu_799_p2.read()));
}

void matmul_hw::thread_tmp_20_cast_fu_843_p1() {
    tmp_20_cast_fu_843_p1 = esl_zext<10,9>(tmp_18_fu_836_p3.read());
}

void matmul_hw::thread_tmp_20_fu_651_p3() {
    tmp_20_fu_651_p3 = esl_concat<59,5>(ap_const_lv59_1, j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_21_cast_fu_630_p1() {
    tmp_21_cast_fu_630_p1 = esl_zext<64,6>(tmp_19_fu_624_p2.read());
}

void matmul_hw::thread_tmp_21_fu_678_p2() {
    tmp_21_fu_678_p2 = (!tmp_2_cast3_fu_675_p1.read().is_01() || !ap_const_lv7_30.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast3_fu_675_p1.read()) + sc_biguint<7>(ap_const_lv7_30));
}

void matmul_hw::thread_tmp_22_fu_705_p3() {
    tmp_22_fu_705_p3 = esl_concat<59,5>(ap_const_lv59_2, j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_23_cast_fu_684_p1() {
    tmp_23_cast_fu_684_p1 = esl_zext<64,7>(tmp_21_fu_678_p2.read());
}

void matmul_hw::thread_tmp_23_fu_729_p2() {
    tmp_23_fu_729_p2 = (!tmp_2_cast3_reg_1009.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast3_reg_1009.read()) + sc_bigint<7>(ap_const_lv7_50));
}

void matmul_hw::thread_tmp_24_fu_755_p3() {
    tmp_24_fu_755_p3 = esl_concat<59,5>(ap_const_lv59_3, j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_25_cast_fu_734_p1() {
    tmp_25_cast_fu_734_p1 = esl_zext<64,7>(tmp_23_fu_729_p2.read());
}

void matmul_hw::thread_tmp_25_fu_782_p2() {
    tmp_25_fu_782_p2 = (!tmp_2_cast4_fu_779_p1.read().is_01() || !ap_const_lv8_70.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast4_fu_779_p1.read()) + sc_biguint<8>(ap_const_lv8_70));
}

void matmul_hw::thread_tmp_26_fu_850_p2() {
    tmp_26_fu_850_p2 = (!tmp_2_cast5_fu_847_p1.read().is_01() || !tmp_20_cast_fu_843_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_2_cast5_fu_847_p1.read()) + sc_biguint<10>(tmp_20_cast_fu_843_p1.read()));
}

void matmul_hw::thread_tmp_27_cast_fu_788_p1() {
    tmp_27_cast_fu_788_p1 = esl_zext<64,8>(tmp_25_fu_782_p2.read());
}

void matmul_hw::thread_tmp_28_cast_fu_856_p1() {
    tmp_28_cast_fu_856_p1 = esl_zext<64,10>(tmp_26_fu_850_p2.read());
}

void matmul_hw::thread_tmp_2_cast3_fu_675_p1() {
    tmp_2_cast3_fu_675_p1 = esl_zext<7,5>(j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_779_p1() {
    tmp_2_cast4_fu_779_p1 = esl_zext<8,5>(j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_2_cast5_fu_847_p1() {
    tmp_2_cast5_fu_847_p1 = esl_zext<10,5>(ap_pipeline_reg_pp0_iter1_j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_2_cast_fu_621_p1() {
    tmp_2_cast_fu_621_p1 = esl_zext<6,5>(j_mid2_reg_870.read());
}

void matmul_hw::thread_tmp_2_fu_600_p1() {
    tmp_2_fu_600_p1 = esl_zext<64,5>(j_mid2_fu_570_p3.read());
}

void matmul_hw::thread_tmp_3_fu_594_p1() {
    tmp_3_fu_594_p1 = esl_zext<64,8>(tmp_fu_586_p3.read());
}

void matmul_hw::thread_tmp_4_fu_606_p2() {
    tmp_4_fu_606_p2 = (tmp_reg_888.read() | ap_const_lv8_1);
}

void matmul_hw::thread_tmp_5_fu_611_p3() {
    tmp_5_fu_611_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_4_fu_606_p2.read());
}

void matmul_hw::thread_tmp_7_fu_636_p2() {
    tmp_7_fu_636_p2 = (tmp_reg_888.read() | ap_const_lv8_2);
}

void matmul_hw::thread_tmp_8_fu_641_p3() {
    tmp_8_fu_641_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_7_fu_636_p2.read());
}

void matmul_hw::thread_tmp_9_fu_660_p2() {
    tmp_9_fu_660_p2 = (tmp_reg_888.read() | ap_const_lv8_3);
}

void matmul_hw::thread_tmp_fu_586_p3() {
    tmp_fu_586_p3 = esl_concat<5,3>(tmp_mid2_v_fu_578_p3.read(), ap_const_lv3_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_578_p3() {
    tmp_mid2_v_fu_578_p3 = (!exitcond_fu_564_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_564_p2.read()[0].to_bool())? i_1_fu_558_p2.read(): i_phi_fu_411_p4.read());
}

void matmul_hw::thread_tmp_s_fu_665_p3() {
    tmp_s_fu_665_p3 = esl_concat<56,8>(ap_const_lv56_0, tmp_9_fu_660_p2.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_546_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_546_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Addr_A\" :  \"" << a_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_EN_A\" :  \"" << a_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_WEN_A\" :  \"" << a_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Din_A\" :  \"" << a_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_Dout_A\" :  \"" << a_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Clk_A\" :  \"" << a_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Rst_A\" :  \"" << a_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Addr_A\" :  \"" << a_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_EN_A\" :  \"" << a_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_WEN_A\" :  \"" << a_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Din_A\" :  \"" << a_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_Dout_A\" :  \"" << a_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Clk_A\" :  \"" << a_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Rst_A\" :  \"" << a_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Addr_A\" :  \"" << b_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_EN_A\" :  \"" << b_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_WEN_A\" :  \"" << b_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Din_A\" :  \"" << b_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_Dout_A\" :  \"" << b_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Clk_A\" :  \"" << b_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Rst_A\" :  \"" << b_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Addr_A\" :  \"" << b_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_EN_A\" :  \"" << b_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_WEN_A\" :  \"" << b_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Din_A\" :  \"" << b_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_Dout_A\" :  \"" << b_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Clk_A\" :  \"" << b_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Rst_A\" :  \"" << b_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

