// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmul_hw_HH_
#define _matmul_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmul_hw_mul_32sdEe.h"

namespace ap_rtl {

struct matmul_hw : public sc_module {
    // Port declarations 69
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > a_0_Addr_A;
    sc_out< sc_logic > a_0_EN_A;
    sc_out< sc_lv<4> > a_0_WEN_A;
    sc_out< sc_lv<32> > a_0_Din_A;
    sc_in< sc_lv<32> > a_0_Dout_A;
    sc_out< sc_logic > a_0_Clk_A;
    sc_out< sc_logic > a_0_Rst_A;
    sc_out< sc_lv<32> > a_1_Addr_A;
    sc_out< sc_logic > a_1_EN_A;
    sc_out< sc_lv<4> > a_1_WEN_A;
    sc_out< sc_lv<32> > a_1_Din_A;
    sc_in< sc_lv<32> > a_1_Dout_A;
    sc_out< sc_logic > a_1_Clk_A;
    sc_out< sc_logic > a_1_Rst_A;
    sc_out< sc_lv<32> > a_2_Addr_A;
    sc_out< sc_logic > a_2_EN_A;
    sc_out< sc_lv<4> > a_2_WEN_A;
    sc_out< sc_lv<32> > a_2_Din_A;
    sc_in< sc_lv<32> > a_2_Dout_A;
    sc_out< sc_logic > a_2_Clk_A;
    sc_out< sc_logic > a_2_Rst_A;
    sc_out< sc_lv<32> > a_3_Addr_A;
    sc_out< sc_logic > a_3_EN_A;
    sc_out< sc_lv<4> > a_3_WEN_A;
    sc_out< sc_lv<32> > a_3_Din_A;
    sc_in< sc_lv<32> > a_3_Dout_A;
    sc_out< sc_logic > a_3_Clk_A;
    sc_out< sc_logic > a_3_Rst_A;
    sc_out< sc_lv<32> > b_0_Addr_A;
    sc_out< sc_logic > b_0_EN_A;
    sc_out< sc_lv<4> > b_0_WEN_A;
    sc_out< sc_lv<32> > b_0_Din_A;
    sc_in< sc_lv<32> > b_0_Dout_A;
    sc_out< sc_logic > b_0_Clk_A;
    sc_out< sc_logic > b_0_Rst_A;
    sc_out< sc_lv<32> > b_1_Addr_A;
    sc_out< sc_logic > b_1_EN_A;
    sc_out< sc_lv<4> > b_1_WEN_A;
    sc_out< sc_lv<32> > b_1_Din_A;
    sc_in< sc_lv<32> > b_1_Dout_A;
    sc_out< sc_logic > b_1_Clk_A;
    sc_out< sc_logic > b_1_Rst_A;
    sc_out< sc_lv<32> > b_2_Addr_A;
    sc_out< sc_logic > b_2_EN_A;
    sc_out< sc_lv<4> > b_2_WEN_A;
    sc_out< sc_lv<32> > b_2_Din_A;
    sc_in< sc_lv<32> > b_2_Dout_A;
    sc_out< sc_logic > b_2_Clk_A;
    sc_out< sc_logic > b_2_Rst_A;
    sc_out< sc_lv<32> > b_3_Addr_A;
    sc_out< sc_logic > b_3_EN_A;
    sc_out< sc_lv<4> > b_3_WEN_A;
    sc_out< sc_lv<32> > b_3_Din_A;
    sc_in< sc_lv<32> > b_3_Dout_A;
    sc_out< sc_logic > b_3_Clk_A;
    sc_out< sc_logic > b_3_Rst_A;
    sc_out< sc_lv<32> > c_Addr_A;
    sc_out< sc_logic > c_EN_A;
    sc_out< sc_lv<4> > c_WEN_A;
    sc_out< sc_lv<32> > c_Din_A;
    sc_in< sc_lv<32> > c_Dout_A;
    sc_out< sc_logic > c_Clk_A;
    sc_out< sc_logic > c_Rst_A;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matmul_hw(sc_module_name name);
    SC_HAS_PROCESS(matmul_hw);

    ~matmul_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matmul_hw_mul_32sdEe<1,6,32,32,32>* matmul_hw_mul_32sdEe_U1;
    matmul_hw_mul_32sdEe<1,6,32,32,32>* matmul_hw_mul_32sdEe_U2;
    matmul_hw_mul_32sdEe<1,6,32,32,32>* matmul_hw_mul_32sdEe_U3;
    matmul_hw_mul_32sdEe<1,6,32,32,32>* matmul_hw_mul_32sdEe_U4;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > indvar_flatten_reg_404;
    sc_signal< sc_lv<5> > i_reg_415;
    sc_signal< sc_lv<5> > j_reg_426;
    sc_signal< sc_lv<32> > grp_fu_437_p2;
    sc_signal< sc_lv<32> > reg_550;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_819;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819;
    sc_signal< sc_lv<32> > reg_554;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_564_p2;
    sc_signal< sc_lv<9> > indvar_flatten_next_fu_570_p2;
    sc_signal< sc_lv<9> > indvar_flatten_next_reg_823;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > j_mid2_fu_588_p3;
    sc_signal< sc_lv<5> > j_mid2_reg_828;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp0_iter1_j_mid2_reg_828;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp0_iter2_j_mid2_reg_828;
    sc_signal< sc_lv<5> > tmp_mid2_v_fu_596_p3;
    sc_signal< sc_lv<5> > tmp_mid2_v_reg_837;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_837;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837;
    sc_signal< sc_lv<7> > tmp_fu_604_p3;
    sc_signal< sc_lv<7> > tmp_reg_843;
    sc_signal< sc_lv<32> > a_0_load_reg_930;
    sc_signal< sc_lv<32> > b_0_load_reg_935;
    sc_signal< sc_lv<32> > a_1_load_reg_940;
    sc_signal< sc_lv<32> > b_1_load_reg_945;
    sc_signal< sc_lv<32> > a_2_load_reg_950;
    sc_signal< sc_lv<32> > b_2_load_reg_955;
    sc_signal< sc_lv<32> > a_3_load_reg_960;
    sc_signal< sc_lv<32> > b_3_load_reg_965;
    sc_signal< sc_lv<32> > a_0_load_1_reg_1010;
    sc_signal< sc_lv<32> > b_0_load_1_reg_1015;
    sc_signal< sc_lv<32> > a_1_load_1_reg_1020;
    sc_signal< sc_lv<32> > b_1_load_1_reg_1025;
    sc_signal< sc_lv<32> > a_2_load_1_reg_1030;
    sc_signal< sc_lv<32> > b_2_load_1_reg_1035;
    sc_signal< sc_lv<32> > a_3_load_1_reg_1040;
    sc_signal< sc_lv<32> > b_3_load_1_reg_1045;
    sc_signal< sc_lv<32> > a_0_load_2_reg_1090;
    sc_signal< sc_lv<32> > b_0_load_2_reg_1095;
    sc_signal< sc_lv<32> > a_1_load_2_reg_1100;
    sc_signal< sc_lv<32> > b_1_load_2_reg_1105;
    sc_signal< sc_lv<32> > a_2_load_2_reg_1110;
    sc_signal< sc_lv<32> > b_2_load_2_reg_1115;
    sc_signal< sc_lv<32> > a_3_load_2_reg_1120;
    sc_signal< sc_lv<32> > b_3_load_2_reg_1125;
    sc_signal< sc_lv<5> > j_1_fu_724_p2;
    sc_signal< sc_lv<5> > j_1_reg_1130;
    sc_signal< sc_lv<32> > a_0_load_3_reg_1135;
    sc_signal< sc_lv<32> > b_0_load_3_reg_1140;
    sc_signal< sc_lv<32> > a_1_load_3_reg_1145;
    sc_signal< sc_lv<32> > b_1_load_3_reg_1150;
    sc_signal< sc_lv<32> > a_2_load_3_reg_1155;
    sc_signal< sc_lv<32> > b_2_load_3_reg_1160;
    sc_signal< sc_lv<32> > a_3_load_3_reg_1165;
    sc_signal< sc_lv<32> > b_3_load_3_reg_1170;
    sc_signal< sc_lv<32> > grp_fu_438_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_1175;
    sc_signal< sc_lv<32> > grp_fu_440_p2;
    sc_signal< sc_lv<32> > tmp_6_4_reg_1180;
    sc_signal< sc_lv<32> > grp_fu_439_p2;
    sc_signal< sc_lv<32> > tmp_6_11_reg_1185;
    sc_signal< sc_lv<32> > tmp_6_1_reg_1190;
    sc_signal< sc_lv<32> > tmp_6_5_reg_1195;
    sc_signal< sc_lv<32> > tmp_6_12_reg_1200;
    sc_signal< sc_lv<32> > tmp_6_2_reg_1205;
    sc_signal< sc_lv<32> > tmp_6_6_reg_1210;
    sc_signal< sc_lv<32> > tmp_6_13_reg_1215;
    sc_signal< sc_lv<32> > grp_fu_558_p2;
    sc_signal< sc_lv<32> > tmp10_reg_1220;
    sc_signal< sc_lv<32> > tmp_6_3_reg_1225;
    sc_signal< sc_lv<32> > tmp_6_7_reg_1230;
    sc_signal< sc_lv<32> > tmp_6_14_reg_1235;
    sc_signal< sc_lv<32> > tmp_1_s_fu_788_p2;
    sc_signal< sc_lv<32> > tmp_1_s_reg_1240;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<9> > indvar_flatten_phi_fu_408_p4;
    sc_signal< sc_lv<5> > i_phi_fu_419_p4;
    sc_signal< sc_lv<5> > j_phi_fu_430_p4;
    sc_signal< sc_lv<64> > tmp_3_fu_612_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_620_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_633_p3;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_654_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_667_p3;
    sc_signal< sc_lv<64> > tmp_12_fu_679_p3;
    sc_signal< sc_lv<64> > tmp_s_fu_695_p3;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_716_p1;
    sc_signal< sc_lv<64> > tmp_16_cast_fu_814_p1;
    sc_signal< sc_lv<32> > a_0_Addr_A_orig;
    sc_signal< sc_lv<32> > b_0_Addr_A_orig;
    sc_signal< sc_lv<32> > a_1_Addr_A_orig;
    sc_signal< sc_lv<32> > b_1_Addr_A_orig;
    sc_signal< sc_lv<32> > a_2_Addr_A_orig;
    sc_signal< sc_lv<32> > b_2_Addr_A_orig;
    sc_signal< sc_lv<32> > a_3_Addr_A_orig;
    sc_signal< sc_lv<32> > b_3_Addr_A_orig;
    sc_signal< sc_lv<32> > c_Addr_A_orig;
    sc_signal< sc_lv<32> > grp_fu_437_p0;
    sc_signal< sc_lv<32> > grp_fu_437_p1;
    sc_signal< sc_lv<32> > grp_fu_438_p0;
    sc_signal< sc_lv<32> > grp_fu_438_p1;
    sc_signal< sc_lv<32> > grp_fu_439_p0;
    sc_signal< sc_lv<32> > grp_fu_439_p1;
    sc_signal< sc_lv<32> > grp_fu_440_p0;
    sc_signal< sc_lv<32> > grp_fu_440_p1;
    sc_signal< sc_lv<1> > exitcond_fu_582_p2;
    sc_signal< sc_lv<5> > i_1_fu_576_p2;
    sc_signal< sc_lv<7> > tmp_4_fu_628_p2;
    sc_signal< sc_lv<6> > tmp_2_cast_fu_645_p1;
    sc_signal< sc_lv<6> > tmp_11_fu_648_p2;
    sc_signal< sc_lv<7> > tmp_7_fu_662_p2;
    sc_signal< sc_lv<7> > tmp_9_fu_690_p2;
    sc_signal< sc_lv<7> > tmp_2_cast3_fu_707_p1;
    sc_signal< sc_lv<7> > tmp_13_fu_710_p2;
    sc_signal< sc_lv<32> > tmp4_fu_733_p2;
    sc_signal< sc_lv<32> > tmp3_fu_729_p2;
    sc_signal< sc_lv<32> > tmp7_fu_747_p2;
    sc_signal< sc_lv<32> > tmp6_fu_743_p2;
    sc_signal< sc_lv<32> > tmp5_fu_751_p2;
    sc_signal< sc_lv<32> > tmp2_fu_737_p2;
    sc_signal< sc_lv<32> > tmp14_fu_772_p2;
    sc_signal< sc_lv<32> > tmp13_fu_768_p2;
    sc_signal< sc_lv<32> > tmp12_fu_776_p2;
    sc_signal< sc_lv<32> > tmp9_fu_763_p2;
    sc_signal< sc_lv<32> > tmp8_fu_782_p2;
    sc_signal< sc_lv<32> > tmp1_fu_757_p2;
    sc_signal< sc_lv<9> > tmp_10_fu_794_p3;
    sc_signal< sc_lv<10> > tmp_2_cast4_fu_805_p1;
    sc_signal< sc_lv<10> > tmp_12_cast_fu_801_p1;
    sc_signal< sc_lv<10> > tmp_14_fu_808_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state15;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<57> ap_const_lv57_0;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<59> ap_const_lv59_1;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_30;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_0_Addr_A();
    void thread_a_0_Addr_A_orig();
    void thread_a_0_Clk_A();
    void thread_a_0_Din_A();
    void thread_a_0_EN_A();
    void thread_a_0_Rst_A();
    void thread_a_0_WEN_A();
    void thread_a_1_Addr_A();
    void thread_a_1_Addr_A_orig();
    void thread_a_1_Clk_A();
    void thread_a_1_Din_A();
    void thread_a_1_EN_A();
    void thread_a_1_Rst_A();
    void thread_a_1_WEN_A();
    void thread_a_2_Addr_A();
    void thread_a_2_Addr_A_orig();
    void thread_a_2_Clk_A();
    void thread_a_2_Din_A();
    void thread_a_2_EN_A();
    void thread_a_2_Rst_A();
    void thread_a_2_WEN_A();
    void thread_a_3_Addr_A();
    void thread_a_3_Addr_A_orig();
    void thread_a_3_Clk_A();
    void thread_a_3_Din_A();
    void thread_a_3_EN_A();
    void thread_a_3_Rst_A();
    void thread_a_3_WEN_A();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state15();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_0_Addr_A();
    void thread_b_0_Addr_A_orig();
    void thread_b_0_Clk_A();
    void thread_b_0_Din_A();
    void thread_b_0_EN_A();
    void thread_b_0_Rst_A();
    void thread_b_0_WEN_A();
    void thread_b_1_Addr_A();
    void thread_b_1_Addr_A_orig();
    void thread_b_1_Clk_A();
    void thread_b_1_Din_A();
    void thread_b_1_EN_A();
    void thread_b_1_Rst_A();
    void thread_b_1_WEN_A();
    void thread_b_2_Addr_A();
    void thread_b_2_Addr_A_orig();
    void thread_b_2_Clk_A();
    void thread_b_2_Din_A();
    void thread_b_2_EN_A();
    void thread_b_2_Rst_A();
    void thread_b_2_WEN_A();
    void thread_b_3_Addr_A();
    void thread_b_3_Addr_A_orig();
    void thread_b_3_Clk_A();
    void thread_b_3_Din_A();
    void thread_b_3_EN_A();
    void thread_b_3_Rst_A();
    void thread_b_3_WEN_A();
    void thread_c_Addr_A();
    void thread_c_Addr_A_orig();
    void thread_c_Clk_A();
    void thread_c_Din_A();
    void thread_c_EN_A();
    void thread_c_Rst_A();
    void thread_c_WEN_A();
    void thread_exitcond_flatten_fu_564_p2();
    void thread_exitcond_fu_582_p2();
    void thread_grp_fu_437_p0();
    void thread_grp_fu_437_p1();
    void thread_grp_fu_438_p0();
    void thread_grp_fu_438_p1();
    void thread_grp_fu_439_p0();
    void thread_grp_fu_439_p1();
    void thread_grp_fu_440_p0();
    void thread_grp_fu_440_p1();
    void thread_grp_fu_558_p2();
    void thread_i_1_fu_576_p2();
    void thread_i_phi_fu_419_p4();
    void thread_indvar_flatten_next_fu_570_p2();
    void thread_indvar_flatten_phi_fu_408_p4();
    void thread_j_1_fu_724_p2();
    void thread_j_mid2_fu_588_p3();
    void thread_j_phi_fu_430_p4();
    void thread_tmp12_fu_776_p2();
    void thread_tmp13_fu_768_p2();
    void thread_tmp14_fu_772_p2();
    void thread_tmp1_fu_757_p2();
    void thread_tmp2_fu_737_p2();
    void thread_tmp3_fu_729_p2();
    void thread_tmp4_fu_733_p2();
    void thread_tmp5_fu_751_p2();
    void thread_tmp6_fu_743_p2();
    void thread_tmp7_fu_747_p2();
    void thread_tmp8_fu_782_p2();
    void thread_tmp9_fu_763_p2();
    void thread_tmp_10_fu_794_p3();
    void thread_tmp_11_fu_648_p2();
    void thread_tmp_12_cast_fu_801_p1();
    void thread_tmp_12_fu_679_p3();
    void thread_tmp_13_cast_fu_654_p1();
    void thread_tmp_13_fu_710_p2();
    void thread_tmp_14_fu_808_p2();
    void thread_tmp_15_cast_fu_716_p1();
    void thread_tmp_16_cast_fu_814_p1();
    void thread_tmp_1_s_fu_788_p2();
    void thread_tmp_2_cast3_fu_707_p1();
    void thread_tmp_2_cast4_fu_805_p1();
    void thread_tmp_2_cast_fu_645_p1();
    void thread_tmp_2_fu_620_p1();
    void thread_tmp_3_fu_612_p1();
    void thread_tmp_4_fu_628_p2();
    void thread_tmp_5_fu_633_p3();
    void thread_tmp_7_fu_662_p2();
    void thread_tmp_8_fu_667_p3();
    void thread_tmp_9_fu_690_p2();
    void thread_tmp_fu_604_p3();
    void thread_tmp_mid2_v_fu_596_p3();
    void thread_tmp_s_fu_695_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
