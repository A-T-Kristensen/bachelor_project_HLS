// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<6> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> matmul_hw::ap_ST_fsm_state15 = "100000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<9> matmul_hw::ap_const_lv9_0 = "000000000";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<9> matmul_hw::ap_const_lv9_100 = "100000000";
const sc_lv<9> matmul_hw::ap_const_lv9_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<2> matmul_hw::ap_const_lv2_0 = "00";
const sc_lv<7> matmul_hw::ap_const_lv7_1 = "1";
const sc_lv<57> matmul_hw::ap_const_lv57_0 = "000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> matmul_hw::ap_const_lv6_10 = "10000";
const sc_lv<7> matmul_hw::ap_const_lv7_2 = "10";
const sc_lv<59> matmul_hw::ap_const_lv59_1 = "1";
const sc_lv<7> matmul_hw::ap_const_lv7_3 = "11";
const sc_lv<7> matmul_hw::ap_const_lv7_30 = "110000";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_mul_32sdEe_U1 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U1");
    matmul_hw_mul_32sdEe_U1->clk(ap_clk);
    matmul_hw_mul_32sdEe_U1->reset(ap_rst);
    matmul_hw_mul_32sdEe_U1->din0(grp_fu_437_p0);
    matmul_hw_mul_32sdEe_U1->din1(grp_fu_437_p1);
    matmul_hw_mul_32sdEe_U1->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U1->dout(grp_fu_437_p2);
    matmul_hw_mul_32sdEe_U2 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U2");
    matmul_hw_mul_32sdEe_U2->clk(ap_clk);
    matmul_hw_mul_32sdEe_U2->reset(ap_rst);
    matmul_hw_mul_32sdEe_U2->din0(grp_fu_438_p0);
    matmul_hw_mul_32sdEe_U2->din1(grp_fu_438_p1);
    matmul_hw_mul_32sdEe_U2->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U2->dout(grp_fu_438_p2);
    matmul_hw_mul_32sdEe_U3 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U3");
    matmul_hw_mul_32sdEe_U3->clk(ap_clk);
    matmul_hw_mul_32sdEe_U3->reset(ap_rst);
    matmul_hw_mul_32sdEe_U3->din0(grp_fu_439_p0);
    matmul_hw_mul_32sdEe_U3->din1(grp_fu_439_p1);
    matmul_hw_mul_32sdEe_U3->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U3->dout(grp_fu_439_p2);
    matmul_hw_mul_32sdEe_U4 = new matmul_hw_mul_32sdEe<1,6,32,32,32>("matmul_hw_mul_32sdEe_U4");
    matmul_hw_mul_32sdEe_U4->clk(ap_clk);
    matmul_hw_mul_32sdEe_U4->reset(ap_rst);
    matmul_hw_mul_32sdEe_U4->din0(grp_fu_440_p0);
    matmul_hw_mul_32sdEe_U4->din1(grp_fu_440_p1);
    matmul_hw_mul_32sdEe_U4->ce(ap_var_for_const0);
    matmul_hw_mul_32sdEe_U4->dout(grp_fu_440_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_Addr_A);
    sensitive << ( a_0_Addr_A_orig );

    SC_METHOD(thread_a_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_fu_612_p1 );
    sensitive << ( tmp_5_fu_633_p3 );
    sensitive << ( tmp_8_fu_667_p3 );
    sensitive << ( tmp_s_fu_695_p3 );

    SC_METHOD(thread_a_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_0_Din_A);

    SC_METHOD(thread_a_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_a_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_0_WEN_A);

    SC_METHOD(thread_a_1_Addr_A);
    sensitive << ( a_1_Addr_A_orig );

    SC_METHOD(thread_a_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_fu_612_p1 );
    sensitive << ( tmp_5_fu_633_p3 );
    sensitive << ( tmp_8_fu_667_p3 );
    sensitive << ( tmp_s_fu_695_p3 );

    SC_METHOD(thread_a_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_1_Din_A);

    SC_METHOD(thread_a_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_a_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_1_WEN_A);

    SC_METHOD(thread_a_2_Addr_A);
    sensitive << ( a_2_Addr_A_orig );

    SC_METHOD(thread_a_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_fu_612_p1 );
    sensitive << ( tmp_5_fu_633_p3 );
    sensitive << ( tmp_8_fu_667_p3 );
    sensitive << ( tmp_s_fu_695_p3 );

    SC_METHOD(thread_a_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_2_Din_A);

    SC_METHOD(thread_a_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_a_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_2_WEN_A);

    SC_METHOD(thread_a_3_Addr_A);
    sensitive << ( a_3_Addr_A_orig );

    SC_METHOD(thread_a_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_fu_612_p1 );
    sensitive << ( tmp_5_fu_633_p3 );
    sensitive << ( tmp_8_fu_667_p3 );
    sensitive << ( tmp_s_fu_695_p3 );

    SC_METHOD(thread_a_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_3_Din_A);

    SC_METHOD(thread_a_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_a_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_3_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_b_0_Addr_A);
    sensitive << ( b_0_Addr_A_orig );

    SC_METHOD(thread_b_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_620_p1 );
    sensitive << ( tmp_13_cast_fu_654_p1 );
    sensitive << ( tmp_12_fu_679_p3 );
    sensitive << ( tmp_15_cast_fu_716_p1 );

    SC_METHOD(thread_b_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_0_Din_A);

    SC_METHOD(thread_b_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_b_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_0_WEN_A);

    SC_METHOD(thread_b_1_Addr_A);
    sensitive << ( b_1_Addr_A_orig );

    SC_METHOD(thread_b_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_620_p1 );
    sensitive << ( tmp_13_cast_fu_654_p1 );
    sensitive << ( tmp_12_fu_679_p3 );
    sensitive << ( tmp_15_cast_fu_716_p1 );

    SC_METHOD(thread_b_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_1_Din_A);

    SC_METHOD(thread_b_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_b_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_1_WEN_A);

    SC_METHOD(thread_b_2_Addr_A);
    sensitive << ( b_2_Addr_A_orig );

    SC_METHOD(thread_b_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_620_p1 );
    sensitive << ( tmp_13_cast_fu_654_p1 );
    sensitive << ( tmp_12_fu_679_p3 );
    sensitive << ( tmp_15_cast_fu_716_p1 );

    SC_METHOD(thread_b_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_2_Din_A);

    SC_METHOD(thread_b_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_b_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_2_WEN_A);

    SC_METHOD(thread_b_3_Addr_A);
    sensitive << ( b_3_Addr_A_orig );

    SC_METHOD(thread_b_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_620_p1 );
    sensitive << ( tmp_13_cast_fu_654_p1 );
    sensitive << ( tmp_12_fu_679_p3 );
    sensitive << ( tmp_15_cast_fu_716_p1 );

    SC_METHOD(thread_b_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_3_Din_A);

    SC_METHOD(thread_b_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_b_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_3_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_16_cast_fu_814_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_s_reg_1240 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_exitcond_flatten_fu_564_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_phi_fu_408_p4 );

    SC_METHOD(thread_exitcond_fu_582_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_564_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_phi_fu_430_p4 );

    SC_METHOD(thread_grp_fu_437_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( a_2_load_reg_950 );
    sensitive << ( a_2_load_1_reg_1030 );
    sensitive << ( a_2_load_2_reg_1110 );
    sensitive << ( a_2_load_3_reg_1155 );

    SC_METHOD(thread_grp_fu_437_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( b_2_load_reg_955 );
    sensitive << ( b_2_load_1_reg_1035 );
    sensitive << ( b_2_load_2_reg_1115 );
    sensitive << ( b_2_load_3_reg_1160 );

    SC_METHOD(thread_grp_fu_438_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( a_0_load_reg_930 );
    sensitive << ( a_0_load_1_reg_1010 );
    sensitive << ( a_0_load_2_reg_1090 );
    sensitive << ( a_0_load_3_reg_1135 );

    SC_METHOD(thread_grp_fu_438_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( b_0_load_reg_935 );
    sensitive << ( b_0_load_1_reg_1015 );
    sensitive << ( b_0_load_2_reg_1095 );
    sensitive << ( b_0_load_3_reg_1140 );

    SC_METHOD(thread_grp_fu_439_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( a_3_load_reg_960 );
    sensitive << ( a_3_load_1_reg_1040 );
    sensitive << ( a_3_load_2_reg_1120 );
    sensitive << ( a_3_load_3_reg_1165 );

    SC_METHOD(thread_grp_fu_439_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( b_3_load_reg_965 );
    sensitive << ( b_3_load_1_reg_1045 );
    sensitive << ( b_3_load_2_reg_1125 );
    sensitive << ( b_3_load_3_reg_1170 );

    SC_METHOD(thread_grp_fu_440_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( a_1_load_reg_940 );
    sensitive << ( a_1_load_1_reg_1020 );
    sensitive << ( a_1_load_2_reg_1100 );
    sensitive << ( a_1_load_3_reg_1145 );

    SC_METHOD(thread_grp_fu_440_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( b_1_load_reg_945 );
    sensitive << ( b_1_load_1_reg_1025 );
    sensitive << ( b_1_load_2_reg_1105 );
    sensitive << ( b_1_load_3_reg_1150 );

    SC_METHOD(thread_grp_fu_558_p2);
    sensitive << ( reg_550 );
    sensitive << ( reg_554 );

    SC_METHOD(thread_i_1_fu_576_p2);
    sensitive << ( i_phi_fu_419_p4 );

    SC_METHOD(thread_i_phi_fu_419_p4);
    sensitive << ( i_reg_415 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_819 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_837 );

    SC_METHOD(thread_indvar_flatten_next_fu_570_p2);
    sensitive << ( indvar_flatten_phi_fu_408_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_408_p4);
    sensitive << ( indvar_flatten_reg_404 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_819 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_823 );

    SC_METHOD(thread_j_1_fu_724_p2);
    sensitive << ( j_mid2_reg_828 );

    SC_METHOD(thread_j_mid2_fu_588_p3);
    sensitive << ( j_phi_fu_430_p4 );
    sensitive << ( exitcond_fu_582_p2 );

    SC_METHOD(thread_j_phi_fu_430_p4);
    sensitive << ( j_reg_426 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_819 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_1130 );

    SC_METHOD(thread_tmp12_fu_776_p2);
    sensitive << ( tmp14_fu_772_p2 );
    sensitive << ( tmp13_fu_768_p2 );

    SC_METHOD(thread_tmp13_fu_768_p2);
    sensitive << ( tmp_6_11_reg_1185 );
    sensitive << ( tmp_6_12_reg_1200 );

    SC_METHOD(thread_tmp14_fu_772_p2);
    sensitive << ( tmp_6_13_reg_1215 );
    sensitive << ( tmp_6_14_reg_1235 );

    SC_METHOD(thread_tmp1_fu_757_p2);
    sensitive << ( tmp5_fu_751_p2 );
    sensitive << ( tmp2_fu_737_p2 );

    SC_METHOD(thread_tmp2_fu_737_p2);
    sensitive << ( tmp4_fu_733_p2 );
    sensitive << ( tmp3_fu_729_p2 );

    SC_METHOD(thread_tmp3_fu_729_p2);
    sensitive << ( tmp_6_reg_1175 );
    sensitive << ( tmp_6_1_reg_1190 );

    SC_METHOD(thread_tmp4_fu_733_p2);
    sensitive << ( tmp_6_2_reg_1205 );
    sensitive << ( tmp_6_3_reg_1225 );

    SC_METHOD(thread_tmp5_fu_751_p2);
    sensitive << ( tmp7_fu_747_p2 );
    sensitive << ( tmp6_fu_743_p2 );

    SC_METHOD(thread_tmp6_fu_743_p2);
    sensitive << ( tmp_6_4_reg_1180 );
    sensitive << ( tmp_6_5_reg_1195 );

    SC_METHOD(thread_tmp7_fu_747_p2);
    sensitive << ( tmp_6_6_reg_1210 );
    sensitive << ( tmp_6_7_reg_1230 );

    SC_METHOD(thread_tmp8_fu_782_p2);
    sensitive << ( tmp12_fu_776_p2 );
    sensitive << ( tmp9_fu_763_p2 );

    SC_METHOD(thread_tmp9_fu_763_p2);
    sensitive << ( grp_fu_558_p2 );
    sensitive << ( tmp10_reg_1220 );

    SC_METHOD(thread_tmp_10_fu_794_p3);
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837 );

    SC_METHOD(thread_tmp_11_fu_648_p2);
    sensitive << ( tmp_2_cast_fu_645_p1 );

    SC_METHOD(thread_tmp_12_cast_fu_801_p1);
    sensitive << ( tmp_10_fu_794_p3 );

    SC_METHOD(thread_tmp_12_fu_679_p3);
    sensitive << ( j_mid2_reg_828 );

    SC_METHOD(thread_tmp_13_cast_fu_654_p1);
    sensitive << ( tmp_11_fu_648_p2 );

    SC_METHOD(thread_tmp_13_fu_710_p2);
    sensitive << ( tmp_2_cast3_fu_707_p1 );

    SC_METHOD(thread_tmp_14_fu_808_p2);
    sensitive << ( tmp_2_cast4_fu_805_p1 );
    sensitive << ( tmp_12_cast_fu_801_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_716_p1);
    sensitive << ( tmp_13_fu_710_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_814_p1);
    sensitive << ( tmp_14_fu_808_p2 );

    SC_METHOD(thread_tmp_1_s_fu_788_p2);
    sensitive << ( tmp8_fu_782_p2 );
    sensitive << ( tmp1_fu_757_p2 );

    SC_METHOD(thread_tmp_2_cast3_fu_707_p1);
    sensitive << ( j_mid2_reg_828 );

    SC_METHOD(thread_tmp_2_cast4_fu_805_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter2_j_mid2_reg_828 );

    SC_METHOD(thread_tmp_2_cast_fu_645_p1);
    sensitive << ( j_mid2_reg_828 );

    SC_METHOD(thread_tmp_2_fu_620_p1);
    sensitive << ( j_mid2_fu_588_p3 );

    SC_METHOD(thread_tmp_3_fu_612_p1);
    sensitive << ( tmp_fu_604_p3 );

    SC_METHOD(thread_tmp_4_fu_628_p2);
    sensitive << ( tmp_reg_843 );

    SC_METHOD(thread_tmp_5_fu_633_p3);
    sensitive << ( tmp_4_fu_628_p2 );

    SC_METHOD(thread_tmp_7_fu_662_p2);
    sensitive << ( tmp_reg_843 );

    SC_METHOD(thread_tmp_8_fu_667_p3);
    sensitive << ( tmp_7_fu_662_p2 );

    SC_METHOD(thread_tmp_9_fu_690_p2);
    sensitive << ( tmp_reg_843 );

    SC_METHOD(thread_tmp_fu_604_p3);
    sensitive << ( tmp_mid2_v_fu_596_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_596_p3);
    sensitive << ( i_phi_fu_419_p4 );
    sensitive << ( exitcond_fu_582_p2 );
    sensitive << ( i_1_fu_576_p2 );

    SC_METHOD(thread_tmp_s_fu_695_p3);
    sensitive << ( tmp_9_fu_690_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_564_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_Addr_A, "(port)a_0_Addr_A");
    sc_trace(mVcdFile, a_0_EN_A, "(port)a_0_EN_A");
    sc_trace(mVcdFile, a_0_WEN_A, "(port)a_0_WEN_A");
    sc_trace(mVcdFile, a_0_Din_A, "(port)a_0_Din_A");
    sc_trace(mVcdFile, a_0_Dout_A, "(port)a_0_Dout_A");
    sc_trace(mVcdFile, a_0_Clk_A, "(port)a_0_Clk_A");
    sc_trace(mVcdFile, a_0_Rst_A, "(port)a_0_Rst_A");
    sc_trace(mVcdFile, a_1_Addr_A, "(port)a_1_Addr_A");
    sc_trace(mVcdFile, a_1_EN_A, "(port)a_1_EN_A");
    sc_trace(mVcdFile, a_1_WEN_A, "(port)a_1_WEN_A");
    sc_trace(mVcdFile, a_1_Din_A, "(port)a_1_Din_A");
    sc_trace(mVcdFile, a_1_Dout_A, "(port)a_1_Dout_A");
    sc_trace(mVcdFile, a_1_Clk_A, "(port)a_1_Clk_A");
    sc_trace(mVcdFile, a_1_Rst_A, "(port)a_1_Rst_A");
    sc_trace(mVcdFile, a_2_Addr_A, "(port)a_2_Addr_A");
    sc_trace(mVcdFile, a_2_EN_A, "(port)a_2_EN_A");
    sc_trace(mVcdFile, a_2_WEN_A, "(port)a_2_WEN_A");
    sc_trace(mVcdFile, a_2_Din_A, "(port)a_2_Din_A");
    sc_trace(mVcdFile, a_2_Dout_A, "(port)a_2_Dout_A");
    sc_trace(mVcdFile, a_2_Clk_A, "(port)a_2_Clk_A");
    sc_trace(mVcdFile, a_2_Rst_A, "(port)a_2_Rst_A");
    sc_trace(mVcdFile, a_3_Addr_A, "(port)a_3_Addr_A");
    sc_trace(mVcdFile, a_3_EN_A, "(port)a_3_EN_A");
    sc_trace(mVcdFile, a_3_WEN_A, "(port)a_3_WEN_A");
    sc_trace(mVcdFile, a_3_Din_A, "(port)a_3_Din_A");
    sc_trace(mVcdFile, a_3_Dout_A, "(port)a_3_Dout_A");
    sc_trace(mVcdFile, a_3_Clk_A, "(port)a_3_Clk_A");
    sc_trace(mVcdFile, a_3_Rst_A, "(port)a_3_Rst_A");
    sc_trace(mVcdFile, b_0_Addr_A, "(port)b_0_Addr_A");
    sc_trace(mVcdFile, b_0_EN_A, "(port)b_0_EN_A");
    sc_trace(mVcdFile, b_0_WEN_A, "(port)b_0_WEN_A");
    sc_trace(mVcdFile, b_0_Din_A, "(port)b_0_Din_A");
    sc_trace(mVcdFile, b_0_Dout_A, "(port)b_0_Dout_A");
    sc_trace(mVcdFile, b_0_Clk_A, "(port)b_0_Clk_A");
    sc_trace(mVcdFile, b_0_Rst_A, "(port)b_0_Rst_A");
    sc_trace(mVcdFile, b_1_Addr_A, "(port)b_1_Addr_A");
    sc_trace(mVcdFile, b_1_EN_A, "(port)b_1_EN_A");
    sc_trace(mVcdFile, b_1_WEN_A, "(port)b_1_WEN_A");
    sc_trace(mVcdFile, b_1_Din_A, "(port)b_1_Din_A");
    sc_trace(mVcdFile, b_1_Dout_A, "(port)b_1_Dout_A");
    sc_trace(mVcdFile, b_1_Clk_A, "(port)b_1_Clk_A");
    sc_trace(mVcdFile, b_1_Rst_A, "(port)b_1_Rst_A");
    sc_trace(mVcdFile, b_2_Addr_A, "(port)b_2_Addr_A");
    sc_trace(mVcdFile, b_2_EN_A, "(port)b_2_EN_A");
    sc_trace(mVcdFile, b_2_WEN_A, "(port)b_2_WEN_A");
    sc_trace(mVcdFile, b_2_Din_A, "(port)b_2_Din_A");
    sc_trace(mVcdFile, b_2_Dout_A, "(port)b_2_Dout_A");
    sc_trace(mVcdFile, b_2_Clk_A, "(port)b_2_Clk_A");
    sc_trace(mVcdFile, b_2_Rst_A, "(port)b_2_Rst_A");
    sc_trace(mVcdFile, b_3_Addr_A, "(port)b_3_Addr_A");
    sc_trace(mVcdFile, b_3_EN_A, "(port)b_3_EN_A");
    sc_trace(mVcdFile, b_3_WEN_A, "(port)b_3_WEN_A");
    sc_trace(mVcdFile, b_3_Din_A, "(port)b_3_Din_A");
    sc_trace(mVcdFile, b_3_Dout_A, "(port)b_3_Dout_A");
    sc_trace(mVcdFile, b_3_Clk_A, "(port)b_3_Clk_A");
    sc_trace(mVcdFile, b_3_Rst_A, "(port)b_3_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_404, "indvar_flatten_reg_404");
    sc_trace(mVcdFile, i_reg_415, "i_reg_415");
    sc_trace(mVcdFile, j_reg_426, "j_reg_426");
    sc_trace(mVcdFile, grp_fu_437_p2, "grp_fu_437_p2");
    sc_trace(mVcdFile, reg_550, "reg_550");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond_flatten_reg_819, "exitcond_flatten_reg_819");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819");
    sc_trace(mVcdFile, reg_554, "reg_554");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, exitcond_flatten_fu_564_p2, "exitcond_flatten_fu_564_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_570_p2, "indvar_flatten_next_fu_570_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_823, "indvar_flatten_next_reg_823");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, j_mid2_fu_588_p3, "j_mid2_fu_588_p3");
    sc_trace(mVcdFile, j_mid2_reg_828, "j_mid2_reg_828");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_j_mid2_reg_828, "ap_pipeline_reg_pp0_iter1_j_mid2_reg_828");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_j_mid2_reg_828, "ap_pipeline_reg_pp0_iter2_j_mid2_reg_828");
    sc_trace(mVcdFile, tmp_mid2_v_fu_596_p3, "tmp_mid2_v_fu_596_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_837, "tmp_mid2_v_reg_837");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_837, "ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_837");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837, "ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837");
    sc_trace(mVcdFile, tmp_fu_604_p3, "tmp_fu_604_p3");
    sc_trace(mVcdFile, tmp_reg_843, "tmp_reg_843");
    sc_trace(mVcdFile, a_0_load_reg_930, "a_0_load_reg_930");
    sc_trace(mVcdFile, b_0_load_reg_935, "b_0_load_reg_935");
    sc_trace(mVcdFile, a_1_load_reg_940, "a_1_load_reg_940");
    sc_trace(mVcdFile, b_1_load_reg_945, "b_1_load_reg_945");
    sc_trace(mVcdFile, a_2_load_reg_950, "a_2_load_reg_950");
    sc_trace(mVcdFile, b_2_load_reg_955, "b_2_load_reg_955");
    sc_trace(mVcdFile, a_3_load_reg_960, "a_3_load_reg_960");
    sc_trace(mVcdFile, b_3_load_reg_965, "b_3_load_reg_965");
    sc_trace(mVcdFile, a_0_load_1_reg_1010, "a_0_load_1_reg_1010");
    sc_trace(mVcdFile, b_0_load_1_reg_1015, "b_0_load_1_reg_1015");
    sc_trace(mVcdFile, a_1_load_1_reg_1020, "a_1_load_1_reg_1020");
    sc_trace(mVcdFile, b_1_load_1_reg_1025, "b_1_load_1_reg_1025");
    sc_trace(mVcdFile, a_2_load_1_reg_1030, "a_2_load_1_reg_1030");
    sc_trace(mVcdFile, b_2_load_1_reg_1035, "b_2_load_1_reg_1035");
    sc_trace(mVcdFile, a_3_load_1_reg_1040, "a_3_load_1_reg_1040");
    sc_trace(mVcdFile, b_3_load_1_reg_1045, "b_3_load_1_reg_1045");
    sc_trace(mVcdFile, a_0_load_2_reg_1090, "a_0_load_2_reg_1090");
    sc_trace(mVcdFile, b_0_load_2_reg_1095, "b_0_load_2_reg_1095");
    sc_trace(mVcdFile, a_1_load_2_reg_1100, "a_1_load_2_reg_1100");
    sc_trace(mVcdFile, b_1_load_2_reg_1105, "b_1_load_2_reg_1105");
    sc_trace(mVcdFile, a_2_load_2_reg_1110, "a_2_load_2_reg_1110");
    sc_trace(mVcdFile, b_2_load_2_reg_1115, "b_2_load_2_reg_1115");
    sc_trace(mVcdFile, a_3_load_2_reg_1120, "a_3_load_2_reg_1120");
    sc_trace(mVcdFile, b_3_load_2_reg_1125, "b_3_load_2_reg_1125");
    sc_trace(mVcdFile, j_1_fu_724_p2, "j_1_fu_724_p2");
    sc_trace(mVcdFile, j_1_reg_1130, "j_1_reg_1130");
    sc_trace(mVcdFile, a_0_load_3_reg_1135, "a_0_load_3_reg_1135");
    sc_trace(mVcdFile, b_0_load_3_reg_1140, "b_0_load_3_reg_1140");
    sc_trace(mVcdFile, a_1_load_3_reg_1145, "a_1_load_3_reg_1145");
    sc_trace(mVcdFile, b_1_load_3_reg_1150, "b_1_load_3_reg_1150");
    sc_trace(mVcdFile, a_2_load_3_reg_1155, "a_2_load_3_reg_1155");
    sc_trace(mVcdFile, b_2_load_3_reg_1160, "b_2_load_3_reg_1160");
    sc_trace(mVcdFile, a_3_load_3_reg_1165, "a_3_load_3_reg_1165");
    sc_trace(mVcdFile, b_3_load_3_reg_1170, "b_3_load_3_reg_1170");
    sc_trace(mVcdFile, grp_fu_438_p2, "grp_fu_438_p2");
    sc_trace(mVcdFile, tmp_6_reg_1175, "tmp_6_reg_1175");
    sc_trace(mVcdFile, grp_fu_440_p2, "grp_fu_440_p2");
    sc_trace(mVcdFile, tmp_6_4_reg_1180, "tmp_6_4_reg_1180");
    sc_trace(mVcdFile, grp_fu_439_p2, "grp_fu_439_p2");
    sc_trace(mVcdFile, tmp_6_11_reg_1185, "tmp_6_11_reg_1185");
    sc_trace(mVcdFile, tmp_6_1_reg_1190, "tmp_6_1_reg_1190");
    sc_trace(mVcdFile, tmp_6_5_reg_1195, "tmp_6_5_reg_1195");
    sc_trace(mVcdFile, tmp_6_12_reg_1200, "tmp_6_12_reg_1200");
    sc_trace(mVcdFile, tmp_6_2_reg_1205, "tmp_6_2_reg_1205");
    sc_trace(mVcdFile, tmp_6_6_reg_1210, "tmp_6_6_reg_1210");
    sc_trace(mVcdFile, tmp_6_13_reg_1215, "tmp_6_13_reg_1215");
    sc_trace(mVcdFile, grp_fu_558_p2, "grp_fu_558_p2");
    sc_trace(mVcdFile, tmp10_reg_1220, "tmp10_reg_1220");
    sc_trace(mVcdFile, tmp_6_3_reg_1225, "tmp_6_3_reg_1225");
    sc_trace(mVcdFile, tmp_6_7_reg_1230, "tmp_6_7_reg_1230");
    sc_trace(mVcdFile, tmp_6_14_reg_1235, "tmp_6_14_reg_1235");
    sc_trace(mVcdFile, tmp_1_s_fu_788_p2, "tmp_1_s_fu_788_p2");
    sc_trace(mVcdFile, tmp_1_s_reg_1240, "tmp_1_s_reg_1240");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_408_p4, "indvar_flatten_phi_fu_408_p4");
    sc_trace(mVcdFile, i_phi_fu_419_p4, "i_phi_fu_419_p4");
    sc_trace(mVcdFile, j_phi_fu_430_p4, "j_phi_fu_430_p4");
    sc_trace(mVcdFile, tmp_3_fu_612_p1, "tmp_3_fu_612_p1");
    sc_trace(mVcdFile, tmp_2_fu_620_p1, "tmp_2_fu_620_p1");
    sc_trace(mVcdFile, tmp_5_fu_633_p3, "tmp_5_fu_633_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_654_p1, "tmp_13_cast_fu_654_p1");
    sc_trace(mVcdFile, tmp_8_fu_667_p3, "tmp_8_fu_667_p3");
    sc_trace(mVcdFile, tmp_12_fu_679_p3, "tmp_12_fu_679_p3");
    sc_trace(mVcdFile, tmp_s_fu_695_p3, "tmp_s_fu_695_p3");
    sc_trace(mVcdFile, tmp_15_cast_fu_716_p1, "tmp_15_cast_fu_716_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_814_p1, "tmp_16_cast_fu_814_p1");
    sc_trace(mVcdFile, a_0_Addr_A_orig, "a_0_Addr_A_orig");
    sc_trace(mVcdFile, b_0_Addr_A_orig, "b_0_Addr_A_orig");
    sc_trace(mVcdFile, a_1_Addr_A_orig, "a_1_Addr_A_orig");
    sc_trace(mVcdFile, b_1_Addr_A_orig, "b_1_Addr_A_orig");
    sc_trace(mVcdFile, a_2_Addr_A_orig, "a_2_Addr_A_orig");
    sc_trace(mVcdFile, b_2_Addr_A_orig, "b_2_Addr_A_orig");
    sc_trace(mVcdFile, a_3_Addr_A_orig, "a_3_Addr_A_orig");
    sc_trace(mVcdFile, b_3_Addr_A_orig, "b_3_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_437_p0, "grp_fu_437_p0");
    sc_trace(mVcdFile, grp_fu_437_p1, "grp_fu_437_p1");
    sc_trace(mVcdFile, grp_fu_438_p0, "grp_fu_438_p0");
    sc_trace(mVcdFile, grp_fu_438_p1, "grp_fu_438_p1");
    sc_trace(mVcdFile, grp_fu_439_p0, "grp_fu_439_p0");
    sc_trace(mVcdFile, grp_fu_439_p1, "grp_fu_439_p1");
    sc_trace(mVcdFile, grp_fu_440_p0, "grp_fu_440_p0");
    sc_trace(mVcdFile, grp_fu_440_p1, "grp_fu_440_p1");
    sc_trace(mVcdFile, exitcond_fu_582_p2, "exitcond_fu_582_p2");
    sc_trace(mVcdFile, i_1_fu_576_p2, "i_1_fu_576_p2");
    sc_trace(mVcdFile, tmp_4_fu_628_p2, "tmp_4_fu_628_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_645_p1, "tmp_2_cast_fu_645_p1");
    sc_trace(mVcdFile, tmp_11_fu_648_p2, "tmp_11_fu_648_p2");
    sc_trace(mVcdFile, tmp_7_fu_662_p2, "tmp_7_fu_662_p2");
    sc_trace(mVcdFile, tmp_9_fu_690_p2, "tmp_9_fu_690_p2");
    sc_trace(mVcdFile, tmp_2_cast3_fu_707_p1, "tmp_2_cast3_fu_707_p1");
    sc_trace(mVcdFile, tmp_13_fu_710_p2, "tmp_13_fu_710_p2");
    sc_trace(mVcdFile, tmp4_fu_733_p2, "tmp4_fu_733_p2");
    sc_trace(mVcdFile, tmp3_fu_729_p2, "tmp3_fu_729_p2");
    sc_trace(mVcdFile, tmp7_fu_747_p2, "tmp7_fu_747_p2");
    sc_trace(mVcdFile, tmp6_fu_743_p2, "tmp6_fu_743_p2");
    sc_trace(mVcdFile, tmp5_fu_751_p2, "tmp5_fu_751_p2");
    sc_trace(mVcdFile, tmp2_fu_737_p2, "tmp2_fu_737_p2");
    sc_trace(mVcdFile, tmp14_fu_772_p2, "tmp14_fu_772_p2");
    sc_trace(mVcdFile, tmp13_fu_768_p2, "tmp13_fu_768_p2");
    sc_trace(mVcdFile, tmp12_fu_776_p2, "tmp12_fu_776_p2");
    sc_trace(mVcdFile, tmp9_fu_763_p2, "tmp9_fu_763_p2");
    sc_trace(mVcdFile, tmp8_fu_782_p2, "tmp8_fu_782_p2");
    sc_trace(mVcdFile, tmp1_fu_757_p2, "tmp1_fu_757_p2");
    sc_trace(mVcdFile, tmp_10_fu_794_p3, "tmp_10_fu_794_p3");
    sc_trace(mVcdFile, tmp_2_cast4_fu_805_p1, "tmp_2_cast4_fu_805_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_801_p1, "tmp_12_cast_fu_801_p1");
    sc_trace(mVcdFile, tmp_14_fu_808_p2, "tmp_14_fu_808_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_mul_32sdEe_U1;
    delete matmul_hw_mul_32sdEe_U2;
    delete matmul_hw_mul_32sdEe_U3;
    delete matmul_hw_mul_32sdEe_U4;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_564_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        i_reg_415 = tmp_mid2_v_reg_837.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_415 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_404 = indvar_flatten_next_reg_823.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_404 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        j_reg_426 = j_1_reg_1130.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_426 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        a_0_load_1_reg_1010 = a_0_Dout_A.read();
        a_1_load_1_reg_1020 = a_1_Dout_A.read();
        a_2_load_1_reg_1030 = a_2_Dout_A.read();
        a_3_load_1_reg_1040 = a_3_Dout_A.read();
        b_0_load_1_reg_1015 = b_0_Dout_A.read();
        b_1_load_1_reg_1025 = b_1_Dout_A.read();
        b_2_load_1_reg_1035 = b_2_Dout_A.read();
        b_3_load_1_reg_1045 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        a_0_load_2_reg_1090 = a_0_Dout_A.read();
        a_1_load_2_reg_1100 = a_1_Dout_A.read();
        a_2_load_2_reg_1110 = a_2_Dout_A.read();
        a_3_load_2_reg_1120 = a_3_Dout_A.read();
        b_0_load_2_reg_1095 = b_0_Dout_A.read();
        b_1_load_2_reg_1105 = b_1_Dout_A.read();
        b_2_load_2_reg_1115 = b_2_Dout_A.read();
        b_3_load_2_reg_1125 = b_3_Dout_A.read();
        j_1_reg_1130 = j_1_fu_724_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        a_0_load_3_reg_1135 = a_0_Dout_A.read();
        a_1_load_3_reg_1145 = a_1_Dout_A.read();
        a_2_load_3_reg_1155 = a_2_Dout_A.read();
        a_3_load_3_reg_1165 = a_3_Dout_A.read();
        b_0_load_3_reg_1140 = b_0_Dout_A.read();
        b_1_load_3_reg_1150 = b_1_Dout_A.read();
        b_2_load_3_reg_1160 = b_2_Dout_A.read();
        b_3_load_3_reg_1170 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        a_0_load_reg_930 = a_0_Dout_A.read();
        a_1_load_reg_940 = a_1_Dout_A.read();
        a_2_load_reg_950 = a_2_Dout_A.read();
        a_3_load_reg_960 = a_3_Dout_A.read();
        b_0_load_reg_935 = b_0_Dout_A.read();
        b_1_load_reg_945 = b_1_Dout_A.read();
        b_2_load_reg_955 = b_2_Dout_A.read();
        b_3_load_reg_965 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819 = exitcond_flatten_reg_819.read();
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_828 = j_mid2_reg_828.read();
        ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_837 = tmp_mid2_v_reg_837.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819.read();
        ap_pipeline_reg_pp0_iter2_j_mid2_reg_828 = ap_pipeline_reg_pp0_iter1_j_mid2_reg_828.read();
        ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837 = ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_837.read();
        exitcond_flatten_reg_819 = exitcond_flatten_fu_564_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_823 = indvar_flatten_next_fu_570_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_564_p2.read()))) {
        j_mid2_reg_828 = j_mid2_fu_588_p3.read();
        tmp_reg_843 = tmp_fu_604_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read())))) {
        reg_550 = grp_fu_437_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        reg_554 = grp_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read()))) {
        tmp10_reg_1220 = grp_fu_558_p2.read();
        tmp_6_13_reg_1215 = grp_fu_439_p2.read();
        tmp_6_2_reg_1205 = grp_fu_438_p2.read();
        tmp_6_6_reg_1210 = grp_fu_440_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read()))) {
        tmp_1_s_reg_1240 = tmp_1_s_fu_788_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        tmp_6_11_reg_1185 = grp_fu_439_p2.read();
        tmp_6_4_reg_1180 = grp_fu_440_p2.read();
        tmp_6_reg_1175 = grp_fu_438_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_819.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        tmp_6_12_reg_1200 = grp_fu_439_p2.read();
        tmp_6_1_reg_1190 = grp_fu_438_p2.read();
        tmp_6_5_reg_1195 = grp_fu_440_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        tmp_6_14_reg_1235 = grp_fu_439_p2.read();
        tmp_6_3_reg_1225 = grp_fu_438_p2.read();
        tmp_6_7_reg_1230 = grp_fu_440_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_564_p2.read()))) {
        tmp_mid2_v_reg_837 = tmp_mid2_v_fu_596_p3.read();
    }
}

void matmul_hw::thread_a_0_Addr_A() {
    a_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_667_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_633_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_612_p1.read());
        } else {
            a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_0_Clk_A() {
    a_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_0_Din_A() {
    a_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        a_0_EN_A = ap_const_logic_1;
    } else {
        a_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_0_Rst_A() {
    a_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_0_WEN_A() {
    a_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_1_Addr_A() {
    a_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_667_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_633_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_612_p1.read());
        } else {
            a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_1_Clk_A() {
    a_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_1_Din_A() {
    a_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        a_1_EN_A = ap_const_logic_1;
    } else {
        a_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_1_Rst_A() {
    a_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_1_WEN_A() {
    a_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_2_Addr_A() {
    a_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_667_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_633_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_612_p1.read());
        } else {
            a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_2_Clk_A() {
    a_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_2_Din_A() {
    a_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        a_2_EN_A = ap_const_logic_1;
    } else {
        a_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_2_Rst_A() {
    a_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_2_WEN_A() {
    a_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_3_Addr_A() {
    a_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_695_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_667_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_633_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_612_p1.read());
        } else {
            a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_3_Clk_A() {
    a_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_3_Din_A() {
    a_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        a_3_EN_A = ap_const_logic_1;
    } else {
        a_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_3_Rst_A() {
    a_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_3_WEN_A() {
    a_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Addr_A() {
    b_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_716_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_679_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_654_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_620_p1.read());
        } else {
            b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_0_Clk_A() {
    b_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_0_Din_A() {
    b_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        b_0_EN_A = ap_const_logic_1;
    } else {
        b_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Rst_A() {
    b_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_0_WEN_A() {
    b_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_1_Addr_A() {
    b_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_716_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_679_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_654_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_620_p1.read());
        } else {
            b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_1_Clk_A() {
    b_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_1_Din_A() {
    b_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        b_1_EN_A = ap_const_logic_1;
    } else {
        b_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_1_Rst_A() {
    b_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_1_WEN_A() {
    b_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_2_Addr_A() {
    b_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_716_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_679_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_654_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_620_p1.read());
        } else {
            b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_2_Clk_A() {
    b_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_2_Din_A() {
    b_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        b_2_EN_A = ap_const_logic_1;
    } else {
        b_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_2_Rst_A() {
    b_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_2_WEN_A() {
    b_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_3_Addr_A() {
    b_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_716_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_679_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_654_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_620_p1.read());
        } else {
            b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_3_Clk_A() {
    b_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_3_Din_A() {
    b_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        b_3_EN_A = ap_const_logic_1;
    } else {
        b_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_3_Rst_A() {
    b_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_3_WEN_A() {
    b_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_16_cast_fu_814_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = tmp_1_s_reg_1240.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_819.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_564_p2() {
    exitcond_flatten_fu_564_p2 = (!indvar_flatten_phi_fu_408_p4.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_408_p4.read() == ap_const_lv9_100);
}

void matmul_hw::thread_exitcond_fu_582_p2() {
    exitcond_fu_582_p2 = (!j_phi_fu_430_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_430_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_grp_fu_437_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_437_p0 = a_2_load_3_reg_1155.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_437_p0 = a_2_load_2_reg_1110.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_437_p0 = a_2_load_1_reg_1030.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_437_p0 = a_2_load_reg_950.read();
    } else {
        grp_fu_437_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_437_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_437_p1 = b_2_load_3_reg_1160.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_437_p1 = b_2_load_2_reg_1115.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_437_p1 = b_2_load_1_reg_1035.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_437_p1 = b_2_load_reg_955.read();
    } else {
        grp_fu_437_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_438_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_438_p0 = a_0_load_3_reg_1135.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_438_p0 = a_0_load_2_reg_1090.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_438_p0 = a_0_load_1_reg_1010.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_438_p0 = a_0_load_reg_930.read();
    } else {
        grp_fu_438_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_438_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_438_p1 = b_0_load_3_reg_1140.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_438_p1 = b_0_load_2_reg_1095.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_438_p1 = b_0_load_1_reg_1015.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_438_p1 = b_0_load_reg_935.read();
    } else {
        grp_fu_438_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_439_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_439_p0 = a_3_load_3_reg_1165.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_439_p0 = a_3_load_2_reg_1120.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_439_p0 = a_3_load_1_reg_1040.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_439_p0 = a_3_load_reg_960.read();
    } else {
        grp_fu_439_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_439_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_439_p1 = b_3_load_3_reg_1170.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_439_p1 = b_3_load_2_reg_1125.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_439_p1 = b_3_load_1_reg_1045.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_439_p1 = b_3_load_reg_965.read();
    } else {
        grp_fu_439_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_440_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_440_p0 = a_1_load_3_reg_1145.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_440_p0 = a_1_load_2_reg_1100.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_440_p0 = a_1_load_1_reg_1020.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_440_p0 = a_1_load_reg_940.read();
    } else {
        grp_fu_440_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_440_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_440_p1 = b_1_load_3_reg_1150.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_440_p1 = b_1_load_2_reg_1105.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_440_p1 = b_1_load_1_reg_1025.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_440_p1 = b_1_load_reg_945.read();
    } else {
        grp_fu_440_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_558_p2() {
    grp_fu_558_p2 = (!reg_550.read().is_01() || !reg_554.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_550.read()) + sc_biguint<32>(reg_554.read()));
}

void matmul_hw::thread_i_1_fu_576_p2() {
    i_1_fu_576_p2 = (!i_phi_fu_419_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_phi_fu_419_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_i_phi_fu_419_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        i_phi_fu_419_p4 = tmp_mid2_v_reg_837.read();
    } else {
        i_phi_fu_419_p4 = i_reg_415.read();
    }
}

void matmul_hw::thread_indvar_flatten_next_fu_570_p2() {
    indvar_flatten_next_fu_570_p2 = (!indvar_flatten_phi_fu_408_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(indvar_flatten_phi_fu_408_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void matmul_hw::thread_indvar_flatten_phi_fu_408_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        indvar_flatten_phi_fu_408_p4 = indvar_flatten_next_reg_823.read();
    } else {
        indvar_flatten_phi_fu_408_p4 = indvar_flatten_reg_404.read();
    }
}

void matmul_hw::thread_j_1_fu_724_p2() {
    j_1_fu_724_p2 = (!j_mid2_reg_828.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_mid2_reg_828.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_j_mid2_fu_588_p3() {
    j_mid2_fu_588_p3 = (!exitcond_fu_582_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_582_p2.read()[0].to_bool())? ap_const_lv5_0: j_phi_fu_430_p4.read());
}

void matmul_hw::thread_j_phi_fu_430_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_819.read(), ap_const_lv1_0))) {
        j_phi_fu_430_p4 = j_1_reg_1130.read();
    } else {
        j_phi_fu_430_p4 = j_reg_426.read();
    }
}

void matmul_hw::thread_tmp12_fu_776_p2() {
    tmp12_fu_776_p2 = (!tmp14_fu_772_p2.read().is_01() || !tmp13_fu_768_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp14_fu_772_p2.read()) + sc_biguint<32>(tmp13_fu_768_p2.read()));
}

void matmul_hw::thread_tmp13_fu_768_p2() {
    tmp13_fu_768_p2 = (!tmp_6_11_reg_1185.read().is_01() || !tmp_6_12_reg_1200.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_11_reg_1185.read()) + sc_biguint<32>(tmp_6_12_reg_1200.read()));
}

void matmul_hw::thread_tmp14_fu_772_p2() {
    tmp14_fu_772_p2 = (!tmp_6_13_reg_1215.read().is_01() || !tmp_6_14_reg_1235.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_13_reg_1215.read()) + sc_biguint<32>(tmp_6_14_reg_1235.read()));
}

void matmul_hw::thread_tmp1_fu_757_p2() {
    tmp1_fu_757_p2 = (!tmp5_fu_751_p2.read().is_01() || !tmp2_fu_737_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp5_fu_751_p2.read()) + sc_biguint<32>(tmp2_fu_737_p2.read()));
}

void matmul_hw::thread_tmp2_fu_737_p2() {
    tmp2_fu_737_p2 = (!tmp4_fu_733_p2.read().is_01() || !tmp3_fu_729_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_fu_733_p2.read()) + sc_biguint<32>(tmp3_fu_729_p2.read()));
}

void matmul_hw::thread_tmp3_fu_729_p2() {
    tmp3_fu_729_p2 = (!tmp_6_reg_1175.read().is_01() || !tmp_6_1_reg_1190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_1175.read()) + sc_biguint<32>(tmp_6_1_reg_1190.read()));
}

void matmul_hw::thread_tmp4_fu_733_p2() {
    tmp4_fu_733_p2 = (!tmp_6_2_reg_1205.read().is_01() || !tmp_6_3_reg_1225.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_2_reg_1205.read()) + sc_biguint<32>(tmp_6_3_reg_1225.read()));
}

void matmul_hw::thread_tmp5_fu_751_p2() {
    tmp5_fu_751_p2 = (!tmp7_fu_747_p2.read().is_01() || !tmp6_fu_743_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_747_p2.read()) + sc_biguint<32>(tmp6_fu_743_p2.read()));
}

void matmul_hw::thread_tmp6_fu_743_p2() {
    tmp6_fu_743_p2 = (!tmp_6_4_reg_1180.read().is_01() || !tmp_6_5_reg_1195.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_4_reg_1180.read()) + sc_biguint<32>(tmp_6_5_reg_1195.read()));
}

void matmul_hw::thread_tmp7_fu_747_p2() {
    tmp7_fu_747_p2 = (!tmp_6_6_reg_1210.read().is_01() || !tmp_6_7_reg_1230.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_6_reg_1210.read()) + sc_biguint<32>(tmp_6_7_reg_1230.read()));
}

void matmul_hw::thread_tmp8_fu_782_p2() {
    tmp8_fu_782_p2 = (!tmp12_fu_776_p2.read().is_01() || !tmp9_fu_763_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp12_fu_776_p2.read()) + sc_biguint<32>(tmp9_fu_763_p2.read()));
}

void matmul_hw::thread_tmp9_fu_763_p2() {
    tmp9_fu_763_p2 = (!grp_fu_558_p2.read().is_01() || !tmp10_reg_1220.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_558_p2.read()) + sc_biguint<32>(tmp10_reg_1220.read()));
}

void matmul_hw::thread_tmp_10_fu_794_p3() {
    tmp_10_fu_794_p3 = esl_concat<5,4>(ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_837.read(), ap_const_lv4_0);
}

void matmul_hw::thread_tmp_11_fu_648_p2() {
    tmp_11_fu_648_p2 = (!tmp_2_cast_fu_645_p1.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_2_cast_fu_645_p1.read()) + sc_biguint<6>(ap_const_lv6_10));
}

void matmul_hw::thread_tmp_12_cast_fu_801_p1() {
    tmp_12_cast_fu_801_p1 = esl_zext<10,9>(tmp_10_fu_794_p3.read());
}

void matmul_hw::thread_tmp_12_fu_679_p3() {
    tmp_12_fu_679_p3 = esl_concat<59,5>(ap_const_lv59_1, j_mid2_reg_828.read());
}

void matmul_hw::thread_tmp_13_cast_fu_654_p1() {
    tmp_13_cast_fu_654_p1 = esl_zext<64,6>(tmp_11_fu_648_p2.read());
}

void matmul_hw::thread_tmp_13_fu_710_p2() {
    tmp_13_fu_710_p2 = (!tmp_2_cast3_fu_707_p1.read().is_01() || !ap_const_lv7_30.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast3_fu_707_p1.read()) + sc_biguint<7>(ap_const_lv7_30));
}

void matmul_hw::thread_tmp_14_fu_808_p2() {
    tmp_14_fu_808_p2 = (!tmp_2_cast4_fu_805_p1.read().is_01() || !tmp_12_cast_fu_801_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_2_cast4_fu_805_p1.read()) + sc_biguint<10>(tmp_12_cast_fu_801_p1.read()));
}

void matmul_hw::thread_tmp_15_cast_fu_716_p1() {
    tmp_15_cast_fu_716_p1 = esl_zext<64,7>(tmp_13_fu_710_p2.read());
}

void matmul_hw::thread_tmp_16_cast_fu_814_p1() {
    tmp_16_cast_fu_814_p1 = esl_zext<64,10>(tmp_14_fu_808_p2.read());
}

void matmul_hw::thread_tmp_1_s_fu_788_p2() {
    tmp_1_s_fu_788_p2 = (!tmp8_fu_782_p2.read().is_01() || !tmp1_fu_757_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_782_p2.read()) + sc_biguint<32>(tmp1_fu_757_p2.read()));
}

void matmul_hw::thread_tmp_2_cast3_fu_707_p1() {
    tmp_2_cast3_fu_707_p1 = esl_zext<7,5>(j_mid2_reg_828.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_805_p1() {
    tmp_2_cast4_fu_805_p1 = esl_zext<10,5>(ap_pipeline_reg_pp0_iter2_j_mid2_reg_828.read());
}

void matmul_hw::thread_tmp_2_cast_fu_645_p1() {
    tmp_2_cast_fu_645_p1 = esl_zext<6,5>(j_mid2_reg_828.read());
}

void matmul_hw::thread_tmp_2_fu_620_p1() {
    tmp_2_fu_620_p1 = esl_zext<64,5>(j_mid2_fu_588_p3.read());
}

void matmul_hw::thread_tmp_3_fu_612_p1() {
    tmp_3_fu_612_p1 = esl_zext<64,7>(tmp_fu_604_p3.read());
}

void matmul_hw::thread_tmp_4_fu_628_p2() {
    tmp_4_fu_628_p2 = (tmp_reg_843.read() | ap_const_lv7_1);
}

void matmul_hw::thread_tmp_5_fu_633_p3() {
    tmp_5_fu_633_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_4_fu_628_p2.read());
}

void matmul_hw::thread_tmp_7_fu_662_p2() {
    tmp_7_fu_662_p2 = (tmp_reg_843.read() | ap_const_lv7_2);
}

void matmul_hw::thread_tmp_8_fu_667_p3() {
    tmp_8_fu_667_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_7_fu_662_p2.read());
}

void matmul_hw::thread_tmp_9_fu_690_p2() {
    tmp_9_fu_690_p2 = (tmp_reg_843.read() | ap_const_lv7_3);
}

void matmul_hw::thread_tmp_fu_604_p3() {
    tmp_fu_604_p3 = esl_concat<5,2>(tmp_mid2_v_fu_596_p3.read(), ap_const_lv2_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_596_p3() {
    tmp_mid2_v_fu_596_p3 = (!exitcond_fu_582_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_582_p2.read()[0].to_bool())? i_1_fu_576_p2.read(): i_phi_fu_419_p4.read());
}

void matmul_hw::thread_tmp_s_fu_695_p3() {
    tmp_s_fu_695_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_9_fu_690_p2.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_564_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_564_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Addr_A\" :  \"" << a_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_EN_A\" :  \"" << a_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_WEN_A\" :  \"" << a_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Din_A\" :  \"" << a_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_Dout_A\" :  \"" << a_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Clk_A\" :  \"" << a_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Rst_A\" :  \"" << a_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Addr_A\" :  \"" << a_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_EN_A\" :  \"" << a_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_WEN_A\" :  \"" << a_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Din_A\" :  \"" << a_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_Dout_A\" :  \"" << a_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Clk_A\" :  \"" << a_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Rst_A\" :  \"" << a_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Addr_A\" :  \"" << a_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_EN_A\" :  \"" << a_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_WEN_A\" :  \"" << a_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Din_A\" :  \"" << a_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_2_Dout_A\" :  \"" << a_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Clk_A\" :  \"" << a_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Rst_A\" :  \"" << a_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Addr_A\" :  \"" << a_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_EN_A\" :  \"" << a_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_WEN_A\" :  \"" << a_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Din_A\" :  \"" << a_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_3_Dout_A\" :  \"" << a_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Clk_A\" :  \"" << a_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Rst_A\" :  \"" << a_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Addr_A\" :  \"" << b_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_EN_A\" :  \"" << b_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_WEN_A\" :  \"" << b_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Din_A\" :  \"" << b_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_Dout_A\" :  \"" << b_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Clk_A\" :  \"" << b_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Rst_A\" :  \"" << b_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Addr_A\" :  \"" << b_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_EN_A\" :  \"" << b_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_WEN_A\" :  \"" << b_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Din_A\" :  \"" << b_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_Dout_A\" :  \"" << b_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Clk_A\" :  \"" << b_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Rst_A\" :  \"" << b_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Addr_A\" :  \"" << b_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_EN_A\" :  \"" << b_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_WEN_A\" :  \"" << b_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Din_A\" :  \"" << b_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_2_Dout_A\" :  \"" << b_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Clk_A\" :  \"" << b_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Rst_A\" :  \"" << b_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Addr_A\" :  \"" << b_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_EN_A\" :  \"" << b_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_WEN_A\" :  \"" << b_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Din_A\" :  \"" << b_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_3_Dout_A\" :  \"" << b_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Clk_A\" :  \"" << b_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Rst_A\" :  \"" << b_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

