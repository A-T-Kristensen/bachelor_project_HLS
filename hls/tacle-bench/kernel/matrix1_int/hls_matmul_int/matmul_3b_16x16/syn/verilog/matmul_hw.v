// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.050000,HLS_SYN_LAT=4108,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=3117,HLS_SYN_LUT=1702}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        b_Addr_A,
        b_EN_A,
        b_WEN_A,
        b_Din_A,
        b_Dout_A,
        b_Clk_A,
        b_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 18'b1;
parameter    ap_ST_fsm_pp0_stage0 = 18'b10;
parameter    ap_ST_fsm_pp0_stage1 = 18'b100;
parameter    ap_ST_fsm_pp0_stage2 = 18'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 18'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 18'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 18'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 18'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 18'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 18'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 18'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 18'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 18'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 18'b10000000000000;
parameter    ap_ST_fsm_pp0_stage13 = 18'b100000000000000;
parameter    ap_ST_fsm_pp0_stage14 = 18'b1000000000000000;
parameter    ap_ST_fsm_pp0_stage15 = 18'b10000000000000000;
parameter    ap_ST_fsm_state29 = 18'b100000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv55_0 = 55'b0000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv9_2 = 9'b10;
parameter    ap_const_lv59_1 = 59'b1;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv7_30 = 7'b110000;
parameter    ap_const_lv9_4 = 9'b100;
parameter    ap_const_lv59_2 = 59'b10;
parameter    ap_const_lv9_5 = 9'b101;
parameter    ap_const_lv7_50 = 7'b1010000;
parameter    ap_const_lv9_6 = 9'b110;
parameter    ap_const_lv59_3 = 59'b11;
parameter    ap_const_lv9_7 = 9'b111;
parameter    ap_const_lv8_70 = 8'b1110000;
parameter    ap_const_lv9_8 = 9'b1000;
parameter    ap_const_lv59_4 = 59'b100;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv8_90 = 8'b10010000;
parameter    ap_const_lv9_A = 9'b1010;
parameter    ap_const_lv59_5 = 59'b101;
parameter    ap_const_lv9_B = 9'b1011;
parameter    ap_const_lv8_B0 = 8'b10110000;
parameter    ap_const_lv9_C = 9'b1100;
parameter    ap_const_lv59_6 = 59'b110;
parameter    ap_const_lv9_D = 9'b1101;
parameter    ap_const_lv9_E = 9'b1110;
parameter    ap_const_lv59_7 = 59'b111;
parameter    ap_const_lv9_F = 9'b1111;
parameter    ap_const_lv9_F0 = 9'b11110000;
parameter    ap_const_lv32_11 = 32'b10001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] b_Addr_A;
output   b_EN_A;
output  [3:0] b_WEN_A;
output  [31:0] b_Din_A;
input  [31:0] b_Dout_A;
output   b_Clk_A;
output   b_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg b_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [8:0] indvar_flatten_reg_836;
reg   [4:0] i_reg_847;
reg   [4:0] j_reg_858;
reg   [31:0] reg_869;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond_flatten_reg_1829;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage7;
reg   [0:0] tmp_3_reg_1965;
wire   [0:0] ap_CS_fsm_pp0_stage10;
wire   [0:0] ap_CS_fsm_pp0_stage13;
reg   [31:0] reg_873;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage14;
reg   [31:0] reg_877;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [0:0] ap_CS_fsm_pp0_stage15;
wire   [0:0] exitcond_flatten_fu_881_p2;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829;
wire   [8:0] indvar_flatten_next_fu_887_p2;
reg   [8:0] indvar_flatten_next_reg_1833;
wire   [4:0] j_mid2_fu_905_p3;
reg   [4:0] j_mid2_reg_1838;
wire   [0:0] tmp_mid2_fu_925_p3;
reg   [0:0] tmp_mid2_reg_1857;
wire   [4:0] tmp_1_mid2_v_fu_933_p3;
reg   [4:0] tmp_1_mid2_v_reg_1861;
wire   [8:0] tmp_1_fu_941_p3;
reg   [8:0] tmp_1_reg_1866;
wire   [63:0] tmp_6_fu_954_p1;
reg   [63:0] tmp_6_reg_1891;
wire   [63:0] tmp_9_fu_1009_p1;
reg   [63:0] tmp_9_reg_1936;
wire   [0:0] tmp_3_fu_1027_p2;
wire   [6:0] tmp_6_cast20_cast_fu_1032_p1;
reg   [6:0] tmp_6_cast20_cast_reg_1985;
wire   [31:0] b_copy_0_q0;
reg  signed [31:0] b_copy_0_load_reg_1995;
wire  signed [31:0] a_row_0_1_fu_1063_p3;
wire   [31:0] b_copy_1_q0;
reg  signed [31:0] b_copy_1_load_reg_2020;
wire  signed [31:0] a_row_1_1_fu_1105_p3;
wire   [6:0] tmp_41_fu_1117_p2;
reg   [6:0] tmp_41_reg_2040;
wire   [31:0] b_copy_2_q0;
reg  signed [31:0] b_copy_2_load_reg_2050;
wire  signed [31:0] a_row_2_1_fu_1149_p3;
wire   [31:0] b_copy_3_q0;
reg  signed [31:0] b_copy_3_load_reg_2075;
wire  signed [31:0] a_row_3_1_fu_1191_p3;
wire   [7:0] tmp_6_cast2_fu_1203_p1;
reg   [7:0] tmp_6_cast2_reg_2095;
wire   [31:0] b_copy_4_q0;
reg  signed [31:0] b_copy_4_load_reg_2106;
wire  signed [31:0] a_row_4_1_fu_1239_p3;
wire   [31:0] b_copy_5_q0;
reg  signed [31:0] b_copy_5_load_reg_2131;
wire  signed [31:0] a_row_5_1_fu_1281_p3;
wire   [31:0] grp_fu_1083_p2;
reg   [31:0] tmp_s_reg_2156;
wire   [31:0] b_copy_6_q0;
reg  signed [31:0] b_copy_6_load_reg_2161;
wire  signed [31:0] a_row_6_1_fu_1325_p3;
wire   [31:0] grp_fu_1127_p2;
reg   [31:0] tmp_2_1_reg_2186;
wire   [31:0] b_copy_7_q0;
reg  signed [31:0] b_copy_7_load_reg_2191;
wire  signed [31:0] a_row_7_1_fu_1367_p3;
wire   [31:0] grp_fu_1169_p2;
reg   [31:0] tmp_2_2_reg_2216;
wire   [31:0] b_copy_8_q0;
reg  signed [31:0] b_copy_8_load_reg_2221;
wire   [31:0] tmp3_fu_1394_p2;
reg   [31:0] tmp3_reg_2231;
wire  signed [31:0] a_row_8_1_fu_1415_p3;
wire   [31:0] grp_fu_1217_p2;
reg   [31:0] tmp_2_3_reg_2251;
wire   [31:0] b_copy_9_q0;
reg  signed [31:0] b_copy_9_load_reg_2256;
wire  signed [31:0] a_row_9_1_fu_1457_p3;
wire   [31:0] grp_fu_1259_p2;
reg   [31:0] tmp_2_4_reg_2281;
wire   [31:0] b_copy_10_q0;
reg  signed [31:0] b_copy_10_load_reg_2286;
wire   [31:0] tmp2_fu_1486_p2;
reg   [31:0] tmp2_reg_2296;
wire  signed [31:0] a_row_10_1_fu_1508_p3;
wire   [31:0] grp_fu_1303_p2;
reg   [31:0] tmp_2_5_reg_2316;
wire   [31:0] b_copy_11_q0;
reg  signed [31:0] b_copy_11_load_reg_2321;
wire  signed [31:0] a_row_11_1_fu_1553_p3;
wire   [9:0] tmp_51_fu_1582_p2;
reg   [9:0] tmp_51_reg_2346;
wire   [31:0] grp_fu_1345_p2;
reg   [31:0] tmp_2_6_reg_2351;
wire   [31:0] b_copy_12_q0;
reg  signed [31:0] b_copy_12_load_reg_2356;
wire   [31:0] tmp6_fu_1593_p2;
reg   [31:0] tmp6_reg_2366;
wire   [4:0] j_1_fu_1597_p2;
reg   [4:0] j_1_reg_2371;
wire  signed [31:0] a_row_15_1_fu_1614_p3;
reg  signed [31:0] a_row_15_1_reg_2376;
wire  signed [31:0] a_row_14_1_fu_1621_p3;
reg  signed [31:0] a_row_14_1_reg_2381;
wire  signed [31:0] a_row_13_1_fu_1628_p3;
reg  signed [31:0] a_row_13_1_reg_2386;
wire  signed [31:0] a_row_12_1_fu_1635_p3;
wire   [31:0] grp_fu_1389_p2;
reg   [31:0] tmp_2_7_reg_2396;
wire   [31:0] b_copy_13_q0;
reg  signed [31:0] b_copy_13_load_reg_2401;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] grp_fu_1435_p2;
reg   [31:0] tmp_2_8_reg_2411;
wire   [31:0] b_copy_14_q0;
reg  signed [31:0] b_copy_14_load_reg_2416;
wire   [31:0] tmp1_fu_1680_p2;
reg   [31:0] tmp1_reg_2426;
wire   [31:0] grp_fu_1477_p2;
reg   [31:0] tmp_2_9_reg_2431;
wire   [31:0] b_copy_15_q0;
reg  signed [31:0] b_copy_15_load_reg_2436;
wire   [31:0] grp_fu_1528_p2;
reg   [31:0] tmp_2_s_reg_2441;
wire   [31:0] tmp10_fu_1693_p2;
reg   [31:0] tmp10_reg_2446;
wire   [31:0] grp_fu_1588_p2;
reg   [31:0] tmp_2_10_reg_2451;
wire   [31:0] grp_fu_1662_p2;
reg   [31:0] tmp_2_11_reg_2456;
wire   [31:0] tmp9_fu_1701_p2;
reg   [31:0] tmp9_reg_2461;
wire   [31:0] grp_fu_1667_p2;
reg   [31:0] tmp_2_12_reg_2466;
wire   [31:0] grp_fu_1685_p2;
reg   [31:0] tmp_2_13_reg_2471;
wire   [31:0] tmp13_fu_1706_p2;
reg   [31:0] tmp13_reg_2476;
wire   [31:0] grp_fu_1689_p2;
reg   [31:0] tmp_2_14_reg_2481;
wire   [31:0] tmp_5_s_fu_1724_p2;
reg   [31:0] tmp_5_s_reg_2486;
reg   [3:0] b_copy_0_address0;
reg    b_copy_0_ce0;
reg    b_copy_0_we0;
reg   [3:0] b_copy_1_address0;
reg    b_copy_1_ce0;
reg    b_copy_1_we0;
reg   [3:0] b_copy_2_address0;
reg    b_copy_2_ce0;
reg    b_copy_2_we0;
reg   [3:0] b_copy_3_address0;
reg    b_copy_3_ce0;
reg    b_copy_3_we0;
reg   [3:0] b_copy_4_address0;
reg    b_copy_4_ce0;
reg    b_copy_4_we0;
reg   [3:0] b_copy_5_address0;
reg    b_copy_5_ce0;
reg    b_copy_5_we0;
reg   [3:0] b_copy_6_address0;
reg    b_copy_6_ce0;
reg    b_copy_6_we0;
reg   [3:0] b_copy_7_address0;
reg    b_copy_7_ce0;
reg    b_copy_7_we0;
reg   [3:0] b_copy_8_address0;
reg    b_copy_8_ce0;
reg    b_copy_8_we0;
reg   [3:0] b_copy_9_address0;
reg    b_copy_9_ce0;
reg    b_copy_9_we0;
reg   [3:0] b_copy_10_address0;
reg    b_copy_10_ce0;
reg    b_copy_10_we0;
reg   [3:0] b_copy_11_address0;
reg    b_copy_11_ce0;
reg    b_copy_11_we0;
reg   [3:0] b_copy_12_address0;
reg    b_copy_12_ce0;
reg    b_copy_12_we0;
reg   [3:0] b_copy_13_address0;
reg    b_copy_13_ce0;
reg    b_copy_13_we0;
reg   [3:0] b_copy_14_address0;
reg    b_copy_14_ce0;
reg    b_copy_14_we0;
reg   [3:0] b_copy_15_address0;
reg    b_copy_15_ce0;
reg    b_copy_15_we0;
reg   [8:0] indvar_flatten_phi_fu_840_p4;
reg   [4:0] i_phi_fu_851_p4;
reg   [4:0] j_phi_fu_862_p4;
wire   [63:0] tmp_4_fu_949_p1;
wire   [63:0] tmp_7_fu_964_p3;
wire   [63:0] tmp_37_cast_fu_982_p1;
wire   [63:0] tmp_10_fu_992_p3;
wire   [63:0] tmp_38_fu_1001_p3;
wire   [63:0] tmp_12_fu_1018_p3;
wire   [63:0] tmp_39_cast_fu_1041_p1;
wire   [63:0] tmp_14_fu_1054_p3;
wire   [63:0] tmp_40_fu_1075_p3;
wire   [63:0] tmp_16_fu_1096_p3;
wire   [63:0] tmp_41_cast_fu_1122_p1;
wire   [63:0] tmp_18_fu_1140_p3;
wire   [63:0] tmp_42_fu_1161_p3;
wire   [63:0] tmp_20_fu_1182_p3;
wire   [63:0] tmp_43_cast_fu_1212_p1;
wire   [63:0] tmp_22_fu_1230_p3;
wire   [63:0] tmp_44_fu_1251_p3;
wire   [63:0] tmp_24_fu_1272_p3;
wire   [63:0] tmp_45_cast_fu_1298_p1;
wire   [63:0] tmp_26_fu_1316_p3;
wire   [63:0] tmp_46_fu_1337_p3;
wire   [63:0] tmp_28_fu_1358_p3;
wire   [63:0] tmp_47_cast_fu_1384_p1;
wire   [63:0] tmp_30_fu_1406_p3;
wire   [63:0] tmp_48_fu_1427_p3;
wire   [63:0] tmp_32_fu_1448_p3;
wire   [63:0] tmp_49_cast_fu_1472_p1;
wire   [63:0] tmp_34_fu_1499_p3;
wire   [63:0] tmp_49_fu_1520_p3;
wire   [63:0] tmp_36_fu_1544_p3;
wire   [63:0] tmp_51_cast_fu_1574_p1;
wire   [63:0] tmp_52_cast_fu_1729_p1;
reg   [31:0] a_row_0_2_fu_128;
reg   [31:0] a_row_1_2_fu_132;
reg   [31:0] a_row_2_2_fu_136;
reg   [31:0] a_row_3_2_fu_140;
reg   [31:0] a_row_4_2_fu_144;
reg   [31:0] a_row_5_2_fu_148;
reg   [31:0] a_row_6_2_fu_152;
reg   [31:0] a_row_7_2_fu_156;
reg   [31:0] a_row_8_2_fu_160;
reg   [31:0] a_row_9_2_fu_164;
reg   [31:0] a_row_10_2_fu_168;
reg   [31:0] a_row_11_2_fu_172;
reg   [31:0] a_row_12_2_fu_176;
reg   [31:0] a_row_13_2_fu_180;
reg   [31:0] a_row_14_2_fu_184;
reg   [31:0] a_row_15_2_fu_188;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] b_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
wire   [0:0] exitcond_fu_899_p2;
wire   [4:0] i_1_fu_893_p2;
wire   [0:0] tmp_mid1_fu_913_p2;
wire   [0:0] tmp_fu_919_p2;
wire   [8:0] tmp_5_fu_959_p2;
wire   [5:0] tmp_6_cast_fu_973_p1;
wire   [5:0] tmp_37_fu_976_p2;
wire   [8:0] tmp_8_fu_987_p2;
wire   [8:0] tmp_11_fu_1013_p2;
wire   [6:0] tmp_39_fu_1035_p2;
wire   [8:0] tmp_13_fu_1049_p2;
wire  signed [31:0] grp_fu_1083_p0;
wire   [8:0] tmp_15_fu_1091_p2;
wire  signed [31:0] grp_fu_1127_p0;
wire   [8:0] tmp_17_fu_1135_p2;
wire  signed [31:0] grp_fu_1169_p0;
wire   [8:0] tmp_19_fu_1177_p2;
wire   [7:0] tmp_43_fu_1206_p2;
wire  signed [31:0] grp_fu_1217_p0;
wire   [8:0] tmp_21_fu_1225_p2;
wire  signed [31:0] grp_fu_1259_p0;
wire   [8:0] tmp_23_fu_1267_p2;
wire   [7:0] tmp_45_fu_1293_p2;
wire  signed [31:0] grp_fu_1303_p0;
wire   [8:0] tmp_25_fu_1311_p2;
wire  signed [31:0] grp_fu_1345_p0;
wire   [8:0] tmp_27_fu_1353_p2;
wire   [7:0] tmp_47_fu_1379_p2;
wire  signed [31:0] grp_fu_1389_p0;
wire   [8:0] tmp_29_fu_1401_p2;
wire  signed [31:0] grp_fu_1435_p0;
wire   [8:0] tmp_31_fu_1443_p2;
wire  signed [7:0] tmp_49_cast1_fu_1469_p1;
wire  signed [31:0] grp_fu_1477_p0;
wire   [31:0] tmp4_fu_1482_p2;
wire   [8:0] tmp_33_fu_1494_p2;
wire  signed [31:0] grp_fu_1528_p0;
wire   [8:0] tmp_35_fu_1539_p2;
wire   [8:0] tmp_6_cast1_fu_1565_p1;
wire   [8:0] tmp_50_fu_1568_p2;
wire   [9:0] tmp_4_cast_fu_1536_p1;
wire   [9:0] tmp_9_cast_fu_1579_p1;
wire  signed [31:0] grp_fu_1588_p0;
wire  signed [31:0] grp_fu_1662_p0;
wire   [31:0] tmp7_fu_1671_p2;
wire   [31:0] tmp5_fu_1675_p2;
wire   [31:0] tmp11_fu_1697_p2;
wire   [31:0] tmp14_fu_1710_p2;
wire   [31:0] tmp12_fu_1714_p2;
wire   [31:0] tmp8_fu_1719_p2;
wire   [0:0] ap_CS_fsm_state29;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_0_address0),
    .ce0(b_copy_0_ce0),
    .we0(b_copy_0_we0),
    .d0(b_Dout_A),
    .q0(b_copy_0_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_1_address0),
    .ce0(b_copy_1_ce0),
    .we0(b_copy_1_we0),
    .d0(b_Dout_A),
    .q0(b_copy_1_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_2_address0),
    .ce0(b_copy_2_ce0),
    .we0(b_copy_2_we0),
    .d0(b_Dout_A),
    .q0(b_copy_2_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_3_address0),
    .ce0(b_copy_3_ce0),
    .we0(b_copy_3_we0),
    .d0(b_Dout_A),
    .q0(b_copy_3_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_4_address0),
    .ce0(b_copy_4_ce0),
    .we0(b_copy_4_we0),
    .d0(b_Dout_A),
    .q0(b_copy_4_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_5_address0),
    .ce0(b_copy_5_ce0),
    .we0(b_copy_5_we0),
    .d0(b_Dout_A),
    .q0(b_copy_5_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_6_address0),
    .ce0(b_copy_6_ce0),
    .we0(b_copy_6_we0),
    .d0(b_Dout_A),
    .q0(b_copy_6_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_7_address0),
    .ce0(b_copy_7_ce0),
    .we0(b_copy_7_we0),
    .d0(b_Dout_A),
    .q0(b_copy_7_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_8_address0),
    .ce0(b_copy_8_ce0),
    .we0(b_copy_8_we0),
    .d0(b_Dout_A),
    .q0(b_copy_8_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_9_address0),
    .ce0(b_copy_9_ce0),
    .we0(b_copy_9_we0),
    .d0(b_Dout_A),
    .q0(b_copy_9_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_10_address0),
    .ce0(b_copy_10_ce0),
    .we0(b_copy_10_we0),
    .d0(b_Dout_A),
    .q0(b_copy_10_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_11_address0),
    .ce0(b_copy_11_ce0),
    .we0(b_copy_11_we0),
    .d0(b_Dout_A),
    .q0(b_copy_11_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_12_address0),
    .ce0(b_copy_12_ce0),
    .we0(b_copy_12_we0),
    .d0(b_Dout_A),
    .q0(b_copy_12_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_13_address0),
    .ce0(b_copy_13_ce0),
    .we0(b_copy_13_we0),
    .d0(b_Dout_A),
    .q0(b_copy_13_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_14_address0),
    .ce0(b_copy_14_ce0),
    .we0(b_copy_14_we0),
    .d0(b_Dout_A),
    .q0(b_copy_14_q0)
);

matmul_hw_b_copy_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_copy_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_copy_15_address0),
    .ce0(b_copy_15_ce0),
    .we0(b_copy_15_we0),
    .d0(b_Dout_A),
    .q0(b_copy_15_q0)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1083_p0),
    .din1(b_copy_0_load_reg_1995),
    .ce(1'b1),
    .dout(grp_fu_1083_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1127_p0),
    .din1(b_copy_1_load_reg_2020),
    .ce(1'b1),
    .dout(grp_fu_1127_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1169_p0),
    .din1(b_copy_2_load_reg_2050),
    .ce(1'b1),
    .dout(grp_fu_1169_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1217_p0),
    .din1(b_copy_3_load_reg_2075),
    .ce(1'b1),
    .dout(grp_fu_1217_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1259_p0),
    .din1(b_copy_4_load_reg_2106),
    .ce(1'b1),
    .dout(grp_fu_1259_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1303_p0),
    .din1(b_copy_5_load_reg_2131),
    .ce(1'b1),
    .dout(grp_fu_1303_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1345_p0),
    .din1(b_copy_6_load_reg_2161),
    .ce(1'b1),
    .dout(grp_fu_1345_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1389_p0),
    .din1(b_copy_7_load_reg_2191),
    .ce(1'b1),
    .dout(grp_fu_1389_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1435_p0),
    .din1(b_copy_8_load_reg_2221),
    .ce(1'b1),
    .dout(grp_fu_1435_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1477_p0),
    .din1(b_copy_9_load_reg_2256),
    .ce(1'b1),
    .dout(grp_fu_1477_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1528_p0),
    .din1(b_copy_10_load_reg_2286),
    .ce(1'b1),
    .dout(grp_fu_1528_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1588_p0),
    .din1(b_copy_11_load_reg_2321),
    .ce(1'b1),
    .dout(grp_fu_1588_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1662_p0),
    .din1(b_copy_12_load_reg_2356),
    .ce(1'b1),
    .dout(grp_fu_1662_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_13_1_reg_2386),
    .din1(b_copy_13_load_reg_2401),
    .ce(1'b1),
    .dout(grp_fu_1667_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_14_1_reg_2381),
    .din1(b_copy_14_load_reg_2416),
    .ce(1'b1),
    .dout(grp_fu_1685_p2)
);

matmul_hw_mul_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_mul_32sbkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_row_15_1_reg_2376),
    .din1(b_copy_15_load_reg_2436),
    .ce(1'b1),
    .dout(grp_fu_1689_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond_flatten_fu_881_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & ~(exitcond_flatten_reg_1829 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_847 <= tmp_1_mid2_v_reg_1861;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_847 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_836 <= indvar_flatten_next_reg_1833;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_836 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_858 <= j_1_reg_2371;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_858 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_row_0_2_fu_128 <= a_row_0_1_fu_1063_p3;
        b_copy_1_load_reg_2020 <= b_copy_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        a_row_10_2_fu_168 <= a_row_10_1_fu_1508_p3;
        b_copy_11_load_reg_2321 <= b_copy_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        a_row_11_2_fu_172 <= a_row_11_1_fu_1553_p3;
        b_copy_12_load_reg_2356 <= b_copy_12_q0;
        j_1_reg_2371 <= j_1_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_12_2_fu_176 <= a_row_12_1_fu_1635_p3;
        a_row_13_2_fu_180 <= a_row_13_1_fu_1628_p3;
        a_row_14_2_fu_184 <= a_row_14_1_fu_1621_p3;
        a_row_15_2_fu_188 <= a_row_15_1_fu_1614_p3;
        b_copy_13_load_reg_2401 <= b_copy_13_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_row_13_1_reg_2386 <= a_row_13_1_fu_1628_p3;
        a_row_14_1_reg_2381 <= a_row_14_1_fu_1621_p3;
        a_row_15_1_reg_2376 <= a_row_15_1_fu_1614_p3;
        tmp_2_7_reg_2396 <= grp_fu_1389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        a_row_1_2_fu_132 <= a_row_1_1_fu_1105_p3;
        b_copy_2_load_reg_2050 <= b_copy_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        a_row_2_2_fu_136 <= a_row_2_1_fu_1149_p3;
        b_copy_3_load_reg_2075 <= b_copy_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        a_row_3_2_fu_140 <= a_row_3_1_fu_1191_p3;
        b_copy_4_load_reg_2106 <= b_copy_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        a_row_4_2_fu_144 <= a_row_4_1_fu_1239_p3;
        b_copy_5_load_reg_2131 <= b_copy_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        a_row_5_2_fu_148 <= a_row_5_1_fu_1281_p3;
        b_copy_6_load_reg_2161 <= b_copy_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_row_6_2_fu_152 <= a_row_6_1_fu_1325_p3;
        b_copy_7_load_reg_2191 <= b_copy_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        a_row_7_2_fu_156 <= a_row_7_1_fu_1367_p3;
        b_copy_8_load_reg_2221 <= b_copy_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        a_row_8_2_fu_160 <= a_row_8_1_fu_1415_p3;
        b_copy_9_load_reg_2256 <= b_copy_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        a_row_9_2_fu_164 <= a_row_9_1_fu_1457_p3;
        b_copy_10_load_reg_2286 <= b_copy_10_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829 <= exitcond_flatten_reg_1829;
        exitcond_flatten_reg_1829 <= exitcond_flatten_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        b_copy_0_load_reg_1995 <= b_copy_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        b_copy_14_load_reg_2416 <= b_copy_14_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        b_copy_15_load_reg_2436 <= b_copy_15_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1833 <= indvar_flatten_next_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2))) begin
        j_mid2_reg_1838 <= j_mid2_fu_905_p3;
        tmp_1_reg_1866[8 : 4] <= tmp_1_fu_941_p3[8 : 4];
        tmp_mid2_reg_1857 <= tmp_mid2_fu_925_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_3_reg_1965)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        reg_869 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        reg_873 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_3_reg_1965) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        reg_877 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp10_reg_2446 <= tmp10_fu_1693_p2;
        tmp_2_s_reg_2441 <= grp_fu_1528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp13_reg_2476 <= tmp13_fu_1706_p2;
        tmp_2_13_reg_2471 <= grp_fu_1685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp1_reg_2426 <= tmp1_fu_1680_p2;
        tmp_2_8_reg_2411 <= grp_fu_1435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp2_reg_2296 <= tmp2_fu_1486_p2;
        tmp_2_4_reg_2281 <= grp_fu_1259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp3_reg_2231 <= tmp3_fu_1394_p2;
        tmp_2_2_reg_2216 <= grp_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp6_reg_2366 <= tmp6_fu_1593_p2;
        tmp_2_6_reg_2351 <= grp_fu_1345_p2;
        tmp_51_reg_2346 <= tmp_51_fu_1582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp9_reg_2461 <= tmp9_fu_1701_p2;
        tmp_2_11_reg_2456 <= grp_fu_1662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2))) begin
        tmp_1_mid2_v_reg_1861 <= tmp_1_mid2_v_fu_933_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp_2_10_reg_2451 <= grp_fu_1588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp_2_12_reg_2466 <= grp_fu_1667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp_2_14_reg_2481 <= grp_fu_1689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_2_1_reg_2186 <= grp_fu_1127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_2_3_reg_2251 <= grp_fu_1217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_2_5_reg_2316 <= grp_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp_2_9_reg_2431 <= grp_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_3_reg_1965 <= tmp_3_fu_1027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        tmp_41_reg_2040 <= tmp_41_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        tmp_5_s_reg_2486 <= tmp_5_s_fu_1724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        tmp_6_cast20_cast_reg_1985[4 : 0] <= tmp_6_cast20_cast_fu_1032_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        tmp_6_cast2_reg_2095[4 : 0] <= tmp_6_cast2_fu_1203_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond_flatten_fu_881_p2) & ~(1'b0 == tmp_mid2_fu_925_p3))) begin
        tmp_6_reg_1891[4 : 0] <= tmp_6_fu_954_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_9_reg_1936[4 : 0] <= tmp_9_fu_1009_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_s_reg_2156 <= grp_fu_1083_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            a_Addr_A_orig = tmp_36_fu_1544_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            a_Addr_A_orig = tmp_34_fu_1499_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            a_Addr_A_orig = tmp_32_fu_1448_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            a_Addr_A_orig = tmp_30_fu_1406_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            a_Addr_A_orig = tmp_28_fu_1358_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            a_Addr_A_orig = tmp_26_fu_1316_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            a_Addr_A_orig = tmp_24_fu_1272_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            a_Addr_A_orig = tmp_22_fu_1230_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            a_Addr_A_orig = tmp_20_fu_1182_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            a_Addr_A_orig = tmp_18_fu_1140_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            a_Addr_A_orig = tmp_16_fu_1096_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            a_Addr_A_orig = tmp_14_fu_1054_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_Addr_A_orig = tmp_12_fu_1018_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_Addr_A_orig = tmp_10_fu_992_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_Addr_A_orig = tmp_7_fu_964_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_Addr_A_orig = tmp_4_fu_949_p1;
        end else begin
            a_Addr_A_orig = 'bx;
        end
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_Addr_A_orig = tmp_51_cast_fu_1574_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_Addr_A_orig = tmp_49_fu_1520_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_Addr_A_orig = tmp_49_cast_fu_1472_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_Addr_A_orig = tmp_48_fu_1427_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_Addr_A_orig = tmp_47_cast_fu_1384_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_Addr_A_orig = tmp_46_fu_1337_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_Addr_A_orig = tmp_45_cast_fu_1298_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_Addr_A_orig = tmp_44_fu_1251_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_Addr_A_orig = tmp_43_cast_fu_1212_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_Addr_A_orig = tmp_42_fu_1161_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_Addr_A_orig = tmp_41_cast_fu_1122_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_Addr_A_orig = tmp_40_fu_1075_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_Addr_A_orig = tmp_39_cast_fu_1041_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_Addr_A_orig = tmp_38_fu_1001_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_Addr_A_orig = tmp_37_cast_fu_982_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_Addr_A_orig = tmp_6_fu_954_p1;
        end else begin
            b_Addr_A_orig = 'bx;
        end
    end else begin
        b_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_EN_A = 1'b1;
    end else begin
        b_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_0_address0 = tmp_9_fu_1009_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_0_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_0_address0 = 'bx;
        end
    end else begin
        b_copy_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        b_copy_0_ce0 = 1'b1;
    end else begin
        b_copy_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_0_we0 = 1'b1;
    end else begin
        b_copy_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_copy_10_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_copy_10_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_10_address0 = 'bx;
        end
    end else begin
        b_copy_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        b_copy_10_ce0 = 1'b1;
    end else begin
        b_copy_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_10_we0 = 1'b1;
    end else begin
        b_copy_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_copy_11_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            b_copy_11_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_11_address0 = 'bx;
        end
    end else begin
        b_copy_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        b_copy_11_ce0 = 1'b1;
    end else begin
        b_copy_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_11_we0 = 1'b1;
    end else begin
        b_copy_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_copy_12_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            b_copy_12_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_12_address0 = 'bx;
        end
    end else begin
        b_copy_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        b_copy_12_ce0 = 1'b1;
    end else begin
        b_copy_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_12_we0 = 1'b1;
    end else begin
        b_copy_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            b_copy_13_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            b_copy_13_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_13_address0 = 'bx;
        end
    end else begin
        b_copy_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        b_copy_13_ce0 = 1'b1;
    end else begin
        b_copy_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_13_we0 = 1'b1;
    end else begin
        b_copy_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_14_address0 = tmp_9_reg_1936;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        b_copy_14_address0 = tmp_6_reg_1891;
    end else begin
        b_copy_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_14_ce0 = 1'b1;
    end else begin
        b_copy_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_14_we0 = 1'b1;
    end else begin
        b_copy_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_copy_15_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_copy_15_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_15_address0 = 'bx;
        end
    end else begin
        b_copy_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        b_copy_15_ce0 = 1'b1;
    end else begin
        b_copy_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_mid2_reg_1857) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        b_copy_15_we0 = 1'b1;
    end else begin
        b_copy_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_1_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_copy_1_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_1_address0 = 'bx;
        end
    end else begin
        b_copy_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_1_ce0 = 1'b1;
    end else begin
        b_copy_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_1_we0 = 1'b1;
    end else begin
        b_copy_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_2_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_copy_2_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_2_address0 = 'bx;
        end
    end else begin
        b_copy_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_copy_2_ce0 = 1'b1;
    end else begin
        b_copy_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_2_we0 = 1'b1;
    end else begin
        b_copy_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_3_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            b_copy_3_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_3_address0 = 'bx;
        end
    end else begin
        b_copy_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        b_copy_3_ce0 = 1'b1;
    end else begin
        b_copy_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_3_we0 = 1'b1;
    end else begin
        b_copy_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_4_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            b_copy_4_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_4_address0 = 'bx;
        end
    end else begin
        b_copy_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_4_ce0 = 1'b1;
    end else begin
        b_copy_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_4_we0 = 1'b1;
    end else begin
        b_copy_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_5_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            b_copy_5_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_5_address0 = 'bx;
        end
    end else begin
        b_copy_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        b_copy_5_ce0 = 1'b1;
    end else begin
        b_copy_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_5_we0 = 1'b1;
    end else begin
        b_copy_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_6_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            b_copy_6_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_6_address0 = 'bx;
        end
    end else begin
        b_copy_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        b_copy_6_ce0 = 1'b1;
    end else begin
        b_copy_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_6_we0 = 1'b1;
    end else begin
        b_copy_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_copy_7_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            b_copy_7_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_7_address0 = 'bx;
        end
    end else begin
        b_copy_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        b_copy_7_ce0 = 1'b1;
    end else begin
        b_copy_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_7_we0 = 1'b1;
    end else begin
        b_copy_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_copy_8_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            b_copy_8_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_8_address0 = 'bx;
        end
    end else begin
        b_copy_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        b_copy_8_ce0 = 1'b1;
    end else begin
        b_copy_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_8_we0 = 1'b1;
    end else begin
        b_copy_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            b_copy_9_address0 = tmp_9_reg_1936;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            b_copy_9_address0 = tmp_6_reg_1891;
        end else begin
            b_copy_9_address0 = 'bx;
        end
    end else begin
        b_copy_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        b_copy_9_ce0 = 1'b1;
    end else begin
        b_copy_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~(1'b0 == tmp_mid2_reg_1857))) begin
        b_copy_9_we0 = 1'b1;
    end else begin
        b_copy_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1829))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_851_p4 = tmp_1_mid2_v_reg_1861;
    end else begin
        i_phi_fu_851_p4 = i_reg_847;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_840_p4 = indvar_flatten_next_reg_1833;
    end else begin
        indvar_flatten_phi_fu_840_p4 = indvar_flatten_reg_836;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1829 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_862_p4 = j_1_reg_2371;
    end else begin
        j_phi_fu_862_p4 = j_reg_858;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_881_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
        end
        ap_ST_fsm_pp0_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
        end
        ap_ST_fsm_pp0_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
        end
        ap_ST_fsm_pp0_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
        end
        ap_ST_fsm_pp0_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
        end
        ap_ST_fsm_pp0_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
        end
        ap_ST_fsm_pp0_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
        end
        ap_ST_fsm_pp0_stage10 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_enable_reg_pp0_iter1) & ~(1'b1 == ap_enable_reg_pp0_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
        end
        ap_ST_fsm_pp0_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
        end
        ap_ST_fsm_pp0_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
        end
        ap_ST_fsm_pp0_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
        end
        ap_ST_fsm_pp0_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = ap_const_lv32_0;

assign a_Rst_A = ap_rst;

assign a_WEN_A = ap_const_lv4_0;

assign a_row_0_1_fu_1063_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_0_2_fu_128);

assign a_row_10_1_fu_1508_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_10_2_fu_168);

assign a_row_11_1_fu_1553_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_11_2_fu_172);

assign a_row_12_1_fu_1635_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_12_2_fu_176);

assign a_row_13_1_fu_1628_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_13_2_fu_180);

assign a_row_14_1_fu_1621_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_14_2_fu_184);

assign a_row_15_1_fu_1614_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? a_Dout_A : a_row_15_2_fu_188);

assign a_row_1_1_fu_1105_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_1_2_fu_132);

assign a_row_2_1_fu_1149_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_2_2_fu_136);

assign a_row_3_1_fu_1191_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_3_2_fu_140);

assign a_row_4_1_fu_1239_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_4_2_fu_144);

assign a_row_5_1_fu_1281_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_5_2_fu_148);

assign a_row_6_1_fu_1325_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_6_2_fu_152);

assign a_row_7_1_fu_1367_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_7_2_fu_156);

assign a_row_8_1_fu_1415_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_8_2_fu_160);

assign a_row_9_1_fu_1457_p3 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_9_2_fu_164);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_11];

assign b_Addr_A = b_Addr_A_orig << ap_const_lv32_2;

assign b_Clk_A = ap_clk;

assign b_Din_A = ap_const_lv32_0;

assign b_Rst_A = ap_rst;

assign b_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_52_cast_fu_1729_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = tmp_5_s_reg_2486;

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_881_p2 = ((indvar_flatten_phi_fu_840_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_899_p2 = ((j_phi_fu_862_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign grp_fu_1083_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_0_2_fu_128);

assign grp_fu_1127_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_1_2_fu_132);

assign grp_fu_1169_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_2_2_fu_136);

assign grp_fu_1217_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_3_2_fu_140);

assign grp_fu_1259_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_4_2_fu_144);

assign grp_fu_1303_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_5_2_fu_148);

assign grp_fu_1345_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_6_2_fu_152);

assign grp_fu_1389_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_7_2_fu_156);

assign grp_fu_1435_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_8_2_fu_160);

assign grp_fu_1477_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_9_2_fu_164);

assign grp_fu_1528_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_873 : a_row_10_2_fu_168);

assign grp_fu_1588_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_877 : a_row_11_2_fu_172);

assign grp_fu_1662_p0 = ((tmp_3_reg_1965[0:0] === 1'b1) ? reg_869 : a_row_12_2_fu_176);

assign i_1_fu_893_p2 = (i_phi_fu_851_p4 + ap_const_lv5_1);

assign indvar_flatten_next_fu_887_p2 = (indvar_flatten_phi_fu_840_p4 + ap_const_lv9_1);

assign j_1_fu_1597_p2 = (j_mid2_reg_1838 + ap_const_lv5_1);

assign j_mid2_fu_905_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_phi_fu_862_p4);

assign tmp10_fu_1693_p2 = (tmp_2_9_reg_2431 + tmp_2_8_reg_2411);

assign tmp11_fu_1697_p2 = (tmp_2_10_reg_2451 + tmp_2_s_reg_2441);

assign tmp12_fu_1714_p2 = (tmp13_reg_2476 + tmp14_fu_1710_p2);

assign tmp13_fu_1706_p2 = (tmp_2_12_reg_2466 + tmp_2_11_reg_2456);

assign tmp14_fu_1710_p2 = (tmp_2_14_reg_2481 + tmp_2_13_reg_2471);

assign tmp1_fu_1680_p2 = (tmp2_reg_2296 + tmp5_fu_1675_p2);

assign tmp2_fu_1486_p2 = (tmp3_reg_2231 + tmp4_fu_1482_p2);

assign tmp3_fu_1394_p2 = (tmp_2_1_reg_2186 + tmp_s_reg_2156);

assign tmp4_fu_1482_p2 = (tmp_2_3_reg_2251 + tmp_2_2_reg_2216);

assign tmp5_fu_1675_p2 = (tmp6_reg_2366 + tmp7_fu_1671_p2);

assign tmp6_fu_1593_p2 = (tmp_2_5_reg_2316 + tmp_2_4_reg_2281);

assign tmp7_fu_1671_p2 = (tmp_2_7_reg_2396 + tmp_2_6_reg_2351);

assign tmp8_fu_1719_p2 = (tmp9_reg_2461 + tmp12_fu_1714_p2);

assign tmp9_fu_1701_p2 = (tmp10_reg_2446 + tmp11_fu_1697_p2);

assign tmp_10_fu_992_p3 = {{ap_const_lv55_0}, {tmp_8_fu_987_p2}};

assign tmp_11_fu_1013_p2 = (tmp_1_reg_1866 | ap_const_lv9_3);

assign tmp_12_fu_1018_p3 = {{ap_const_lv55_0}, {tmp_11_fu_1013_p2}};

assign tmp_13_fu_1049_p2 = (tmp_1_reg_1866 | ap_const_lv9_4);

assign tmp_14_fu_1054_p3 = {{ap_const_lv55_0}, {tmp_13_fu_1049_p2}};

assign tmp_15_fu_1091_p2 = (tmp_1_reg_1866 | ap_const_lv9_5);

assign tmp_16_fu_1096_p3 = {{ap_const_lv55_0}, {tmp_15_fu_1091_p2}};

assign tmp_17_fu_1135_p2 = (tmp_1_reg_1866 | ap_const_lv9_6);

assign tmp_18_fu_1140_p3 = {{ap_const_lv55_0}, {tmp_17_fu_1135_p2}};

assign tmp_19_fu_1177_p2 = (tmp_1_reg_1866 | ap_const_lv9_7);

assign tmp_1_fu_941_p3 = {{tmp_1_mid2_v_fu_933_p3}, {ap_const_lv4_0}};

assign tmp_1_mid2_v_fu_933_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? i_1_fu_893_p2 : i_phi_fu_851_p4);

assign tmp_20_fu_1182_p3 = {{ap_const_lv55_0}, {tmp_19_fu_1177_p2}};

assign tmp_21_fu_1225_p2 = (tmp_1_reg_1866 | ap_const_lv9_8);

assign tmp_22_fu_1230_p3 = {{ap_const_lv55_0}, {tmp_21_fu_1225_p2}};

assign tmp_23_fu_1267_p2 = (tmp_1_reg_1866 | ap_const_lv9_9);

assign tmp_24_fu_1272_p3 = {{ap_const_lv55_0}, {tmp_23_fu_1267_p2}};

assign tmp_25_fu_1311_p2 = (tmp_1_reg_1866 | ap_const_lv9_A);

assign tmp_26_fu_1316_p3 = {{ap_const_lv55_0}, {tmp_25_fu_1311_p2}};

assign tmp_27_fu_1353_p2 = (tmp_1_reg_1866 | ap_const_lv9_B);

assign tmp_28_fu_1358_p3 = {{ap_const_lv55_0}, {tmp_27_fu_1353_p2}};

assign tmp_29_fu_1401_p2 = (tmp_1_reg_1866 | ap_const_lv9_C);

assign tmp_30_fu_1406_p3 = {{ap_const_lv55_0}, {tmp_29_fu_1401_p2}};

assign tmp_31_fu_1443_p2 = (tmp_1_reg_1866 | ap_const_lv9_D);

assign tmp_32_fu_1448_p3 = {{ap_const_lv55_0}, {tmp_31_fu_1443_p2}};

assign tmp_33_fu_1494_p2 = (tmp_1_reg_1866 | ap_const_lv9_E);

assign tmp_34_fu_1499_p3 = {{ap_const_lv55_0}, {tmp_33_fu_1494_p2}};

assign tmp_35_fu_1539_p2 = (tmp_1_reg_1866 | ap_const_lv9_F);

assign tmp_36_fu_1544_p3 = {{ap_const_lv55_0}, {tmp_35_fu_1539_p2}};

assign tmp_37_cast_fu_982_p1 = tmp_37_fu_976_p2;

assign tmp_37_fu_976_p2 = (tmp_6_cast_fu_973_p1 + ap_const_lv6_10);

assign tmp_38_fu_1001_p3 = {{ap_const_lv59_1}, {j_mid2_reg_1838}};

assign tmp_39_cast_fu_1041_p1 = tmp_39_fu_1035_p2;

assign tmp_39_fu_1035_p2 = (tmp_6_cast20_cast_fu_1032_p1 + ap_const_lv7_30);

assign tmp_3_fu_1027_p2 = ((j_mid2_reg_1838 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_40_fu_1075_p3 = {{ap_const_lv59_2}, {j_mid2_reg_1838}};

assign tmp_41_cast_fu_1122_p1 = tmp_41_fu_1117_p2;

assign tmp_41_fu_1117_p2 = ($signed(tmp_6_cast20_cast_reg_1985) + $signed(ap_const_lv7_50));

assign tmp_42_fu_1161_p3 = {{ap_const_lv59_3}, {j_mid2_reg_1838}};

assign tmp_43_cast_fu_1212_p1 = tmp_43_fu_1206_p2;

assign tmp_43_fu_1206_p2 = (tmp_6_cast2_fu_1203_p1 + ap_const_lv8_70);

assign tmp_44_fu_1251_p3 = {{ap_const_lv59_4}, {j_mid2_reg_1838}};

assign tmp_45_cast_fu_1298_p1 = tmp_45_fu_1293_p2;

assign tmp_45_fu_1293_p2 = ($signed(tmp_6_cast2_reg_2095) + $signed(ap_const_lv8_90));

assign tmp_46_fu_1337_p3 = {{ap_const_lv59_5}, {j_mid2_reg_1838}};

assign tmp_47_cast_fu_1384_p1 = tmp_47_fu_1379_p2;

assign tmp_47_fu_1379_p2 = ($signed(tmp_6_cast2_reg_2095) + $signed(ap_const_lv8_B0));

assign tmp_48_fu_1427_p3 = {{ap_const_lv59_6}, {j_mid2_reg_1838}};

assign tmp_49_cast1_fu_1469_p1 = $signed(tmp_41_reg_2040);

assign tmp_49_cast_fu_1472_p1 = $unsigned(tmp_49_cast1_fu_1469_p1);

assign tmp_49_fu_1520_p3 = {{ap_const_lv59_7}, {j_mid2_reg_1838}};

assign tmp_4_cast_fu_1536_p1 = tmp_1_reg_1866;

assign tmp_4_fu_949_p1 = tmp_1_fu_941_p3;

assign tmp_50_fu_1568_p2 = (tmp_6_cast1_fu_1565_p1 + ap_const_lv9_F0);

assign tmp_51_cast_fu_1574_p1 = tmp_50_fu_1568_p2;

assign tmp_51_fu_1582_p2 = (tmp_4_cast_fu_1536_p1 + tmp_9_cast_fu_1579_p1);

assign tmp_52_cast_fu_1729_p1 = tmp_51_reg_2346;

assign tmp_5_fu_959_p2 = (tmp_1_reg_1866 | ap_const_lv9_1);

assign tmp_5_s_fu_1724_p2 = (tmp1_reg_2426 + tmp8_fu_1719_p2);

assign tmp_6_cast1_fu_1565_p1 = j_mid2_reg_1838;

assign tmp_6_cast20_cast_fu_1032_p1 = j_mid2_reg_1838;

assign tmp_6_cast2_fu_1203_p1 = j_mid2_reg_1838;

assign tmp_6_cast_fu_973_p1 = j_mid2_reg_1838;

assign tmp_6_fu_954_p1 = j_mid2_fu_905_p3;

assign tmp_7_fu_964_p3 = {{ap_const_lv55_0}, {tmp_5_fu_959_p2}};

assign tmp_8_fu_987_p2 = (tmp_1_reg_1866 | ap_const_lv9_2);

assign tmp_9_cast_fu_1579_p1 = j_mid2_reg_1838;

assign tmp_9_fu_1009_p1 = j_mid2_reg_1838;

assign tmp_fu_919_p2 = ((i_phi_fu_851_p4 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_913_p2 = ((i_1_fu_893_p2 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_925_p3 = ((exitcond_fu_899_p2[0:0] === 1'b1) ? tmp_mid1_fu_913_p2 : tmp_fu_919_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1866[3:0] <= 4'b0000;
    tmp_6_reg_1891[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_9_reg_1936[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_6_cast20_cast_reg_1985[6:5] <= 2'b00;
    tmp_6_cast2_reg_2095[7:5] <= 3'b000;
end

endmodule //matmul_hw
