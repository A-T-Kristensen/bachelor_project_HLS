

================================================================
== Vivado HLS Report for 'minver_minver_hwa'
================================================================
* Date:           Wed Apr 19 15:31:29 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      9.64|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+---------+-----------+-----------+-----------+---------+----------+
        |                 |    Latency    | Iteration |  Initiation Interval  |   Trip  |          |
        |    Loop Name    | min |   max   |  Latency  |  achieved |   target  |  Count  | Pipelined|
        +-----------------+-----+---------+-----------+-----------+-----------+---------+----------+
        |- Loop 1         |    2|      500|          1|          -|          -| 2 ~ 500 |    no    |
        |- Loop 2         |    ?|        ?|          ?|          -|          -|        ?|    no    |
        | + Loop 2.1      |    ?|        ?|          5|          1|          1|        ?|    yes   |
        | + Loop 2.2      |    5|     1001|          4|          2|          1| 2 ~ 500 |    yes   |
        | + Loop 2.3      |   34|      532|         34|          1|          1| 2 ~ 500 |    yes   |
        | + Loop 2.4      |    4|  3768000|  2 ~ 7536 |          -|          -| 2 ~ 500 |    no    |
        |  ++ Loop 2.4.1  |    4|     7500|   2 ~ 15  |          -|          -| 2 ~ 500 |    no    |
        |- Loop 3         |    ?|        ?|          ?|          -|          -| 2 ~ 500 |    no    |
        | + Loop 3.1      |    ?|        ?| 12 ~ 1506 |          -|          -|        ?|    no    |
        |  ++ Loop 3.1.1  |    6|     1500|          3|          3|          1| 2 ~ 500 |    yes   |
        +-----------------+-----+---------+-----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5
  * Pipeline-1: initiation interval (II) = 2, depth = 4
  * Pipeline-2: initiation interval (II) = 1, depth = 34
  * Pipeline-3: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 146
* Pipeline: 4
  Pipeline-0: II = 1, D = 5, States = { 5 6 7 8 9 }
  Pipeline-1: II = 2, D = 4, States = { 16 17 18 19 }
  Pipeline-2: II = 1, D = 34, States = { 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 }
  Pipeline-3: II = 3, D = 3, States = { 142 143 144 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	146  / (!or_cond7)
	3  / (or_cond7)
3 --> 
	3  / (!exitcond6)
	4  / (exitcond6)
4 --> 
	5  / (tmp_3)
	137  / (!tmp_3)
5 --> 
	10  / (!tmp_5)
	6  / (tmp_5)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	5  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (!tmp_59 & !tmp_9)
	20  / (!tmp_59 & tmp_9)
	146  / (tmp_59)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	20  / (exitcond5)
	17  / (!exitcond5)
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	16  / true
20 --> 
	21  / true
21 --> 
	55  / (exitcond4)
	22  / (!exitcond4)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	21  / true
55 --> 
	56  / true
56 --> 
	106  / (exitcond3)
	57  / (!exitcond3 & !tmp_16)
	105  / (!exitcond3 & tmp_16)
57 --> 
	58  / true
58 --> 
	105  / (tmp_64)
	59  / (!tmp_64)
59 --> 
	74  / (exitcond2)
	60  / (!exitcond2 & !tmp_21)
	73  / (!exitcond2 & tmp_21)
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	59  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	56  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	4  / true
137 --> 
	138  / (!exitcond1)
	146  / (exitcond1)
138 --> 
	139  / true
139 --> 
	140  / (!tmp_10)
	137  / (tmp_10)
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	145  / (exitcond)
	143  / (!exitcond)
143 --> 
	144  / true
144 --> 
	142  / true
145 --> 
	138  / true
146 --> 
* FSM state operations: 

 <State 1>: 6.90ns
ST_1: eps_read (9)  [1/1] 0.00ns
:5  %eps_read = call double @_ssdm_op_Read.ap_auto.double(double %eps) nounwind

ST_1: work (11)  [1/1] 0.00ns  loc: minver.c:42
:7  %work = alloca [500 x i9], align 2

ST_1: tmp_12 (23)  [1/1] 6.90ns  loc: minver.c:47
:19  %tmp_12 = fcmp ole double %eps_read, 0.000000e+00


 <State 2>: 7.51ns
ST_2: StgValue_150 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([9 x double]* %minver_a) nounwind, !map !17

ST_2: StgValue_151 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %side) nounwind, !map !23

ST_2: StgValue_152 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(double %eps) nounwind, !map !29

ST_2: StgValue_153 (7)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !33

ST_2: StgValue_154 (8)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([18 x i8]* @minver_minver_hwa_st) nounwind

ST_2: side_read (10)  [1/1] 0.00ns
:6  %side_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %side) nounwind

ST_2: StgValue_156 (12)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([9 x double]* %minver_a, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_2: StgValue_157 (13)  [1/1] 0.00ns  loc: minver.c:40
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: tmp_2 (14)  [1/1] 0.00ns  loc: minver.c:47
:10  %tmp_2 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %side_read, i32 1, i32 31)

ST_2: icmp (15)  [1/1] 2.92ns  loc: minver.c:47
:11  %icmp = icmp sgt i31 %tmp_2, 0

ST_2: notrhs (16)  [1/1] 2.93ns  loc: minver.c:47
:12  %notrhs = icmp slt i32 %side_read, 501

ST_2: eps_to_int (17)  [1/1] 0.00ns
:13  %eps_to_int = bitcast double %eps_read to i64

ST_2: tmp (18)  [1/1] 0.00ns
:14  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %eps_to_int, i32 52, i32 62)

ST_2: tmp_6 (19)  [1/1] 0.00ns
:15  %tmp_6 = trunc i64 %eps_to_int to i52

ST_2: notlhs1 (20)  [1/1] 2.58ns
:16  %notlhs1 = icmp ne i11 %tmp, -1

ST_2: notrhs1 (21)  [1/1] 3.19ns
:17  %notrhs1 = icmp eq i52 %tmp_6, 0

ST_2: tmp_8 (22)  [1/1] 1.37ns
:18  %tmp_8 = or i1 %notrhs1, %notlhs1

ST_2: tmp_13 (24)  [1/1] 0.00ns  loc: minver.c:47 (grouped into LUT with out node or_cond7)
:20  %tmp_13 = and i1 %tmp_8, %tmp_12

ST_2: tmp_17 (25)  [1/1] 0.00ns  loc: minver.c:47 (grouped into LUT with out node or_cond7)
:21  %tmp_17 = xor i1 %tmp_13, true

ST_2: tmp2 (26)  [1/1] 0.00ns  loc: minver.c:47 (grouped into LUT with out node or_cond7)
:22  %tmp2 = and i1 %icmp, %tmp_17

ST_2: or_cond7 (27)  [1/1] 1.37ns  loc: minver.c:47 (out node of the LUT)
:23  %or_cond7 = and i1 %tmp2, %notrhs

ST_2: StgValue_171 (28)  [1/1] 1.57ns  loc: minver.c:47
:24  br i1 %or_cond7, label %.preheader16.preheader, label %.loopexit9

ST_2: StgValue_172 (30)  [1/1] 1.57ns  loc: minver.c:51
.preheader16.preheader:0  br label %.preheader16


 <State 3>: 2.93ns
ST_3: i (32)  [1/1] 0.00ns
.preheader16:0  %i = phi i9 [ %i_1, %1 ], [ 0, %.preheader16.preheader ]

ST_3: i_cast (33)  [1/1] 0.00ns  loc: minver.c:51
.preheader16:1  %i_cast = zext i9 %i to i32

ST_3: exitcond6 (34)  [1/1] 2.93ns  loc: minver.c:51
.preheader16:2  %exitcond6 = icmp eq i32 %i_cast, %side_read

ST_3: empty (35)  [1/1] 0.00ns
.preheader16:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_3: i_1 (36)  [1/1] 1.79ns  loc: minver.c:51
.preheader16:4  %i_1 = add i9 %i, 1

ST_3: StgValue_178 (37)  [1/1] 0.00ns  loc: minver.c:51
.preheader16:5  br i1 %exitcond6, label %.preheader14.preheader, label %1

ST_3: tmp_1 (39)  [1/1] 0.00ns  loc: minver.c:52
:0  %tmp_1 = zext i9 %i to i64

ST_3: work_addr (40)  [1/1] 0.00ns  loc: minver.c:52
:1  %work_addr = getelementptr [500 x i9]* %work, i64 0, i64 %tmp_1

ST_3: StgValue_181 (41)  [1/1] 2.71ns  loc: minver.c:52
:2  store i9 %i, i9* %work_addr, align 2

ST_3: StgValue_182 (42)  [1/1] 0.00ns  loc: minver.c:51
:3  br label %.preheader16

ST_3: r (44)  [1/1] 0.00ns
.preheader14.preheader:0  %r = alloca i32

ST_3: StgValue_184 (45)  [1/1] 1.57ns
.preheader14.preheader:1  store i32 0, i32* %r

ST_3: StgValue_185 (46)  [1/1] 1.57ns  loc: minver.c:57
.preheader14.preheader:2  br label %.preheader14


 <State 4>: 2.93ns
ST_4: i_5 (48)  [1/1] 0.00ns
.preheader14:0  %i_5 = phi i9 [ %k, %13 ], [ 0, %.preheader14.preheader ]

ST_4: i_5_cast (49)  [1/1] 0.00ns  loc: minver.c:57
.preheader14:1  %i_5_cast = zext i9 %i_5 to i32

ST_4: tmp_3 (50)  [1/1] 2.93ns  loc: minver.c:55
.preheader14:2  %tmp_3 = icmp slt i32 %i_5_cast, %side_read

ST_4: k (51)  [1/1] 1.79ns  loc: minver.c:55
.preheader14:3  %k = add i9 %i_5, 1

ST_4: StgValue_190 (52)  [1/1] 0.00ns  loc: minver.c:55
.preheader14:4  br i1 %tmp_3, label %.preheader13.preheader, label %.preheader8.preheader

ST_4: tmp_4 (54)  [1/1] 0.00ns  loc: minver.c:59
.preheader13.preheader:0  %tmp_4 = zext i9 %i_5 to i64

ST_4: tmp_18 (55)  [1/1] 0.00ns  loc: minver.c:55
.preheader13.preheader:1  %tmp_18 = trunc i9 %i_5 to i5

ST_4: tmp_22 (56)  [1/1] 0.00ns  loc: minver.c:55
.preheader13.preheader:2  %tmp_22 = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %i_5, i2 0)

ST_4: p_shl (57)  [1/1] 0.00ns  loc: minver.c:80
.preheader13.preheader:3  %p_shl = zext i11 %tmp_22 to i64

ST_4: tmp_30 (58)  [1/1] 0.00ns  loc: minver.c:55
.preheader13.preheader:4  %tmp_30 = trunc i9 %i_5 to i3

ST_4: p_shl_cast (59)  [1/1] 0.00ns  loc: minver.c:80
.preheader13.preheader:5  %p_shl_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_30, i2 0)

ST_4: tmp_31 (60)  [1/1] 1.67ns  loc: minver.c:80
.preheader13.preheader:6  %tmp_31 = sub i5 %p_shl_cast, %tmp_18

ST_4: minver_a_addr_7 (61)  [1/1] 0.00ns  loc: minver.c:103
.preheader13.preheader:7  %minver_a_addr_7 = getelementptr [9 x double]* %minver_a, i64 0, i64 %p_shl

ST_4: StgValue_199 (62)  [1/1] 1.57ns  loc: minver.c:57
.preheader13.preheader:8  br label %.preheader13

ST_4: StgValue_200 (279)  [1/1] 1.57ns  loc: minver.c:107
.preheader8.preheader:0  br label %.preheader8


 <State 5>: 4.91ns
ST_5: r_1 (64)  [1/1] 0.00ns
.preheader13:0  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast, %.preheader13.preheader ]

ST_5: wmax (65)  [1/1] 0.00ns
.preheader13:1  %wmax = phi double [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader13.preheader ]

ST_5: tmp_5 (66)  [1/1] 2.93ns  loc: minver.c:57
.preheader13:2  %tmp_5 = icmp slt i32 %r_1, %side_read

ST_5: StgValue_204 (67)  [1/1] 0.00ns  loc: minver.c:57
.preheader13:3  br i1 %tmp_5, label %_ifconv, label %_ifconv1

ST_5: tmp_33 (72)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:3  %tmp_33 = trunc i32 %r_1 to i5

ST_5: tmp_38 (73)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:4  %tmp_38 = trunc i32 %r_1 to i3

ST_5: p_shl2_cast (74)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:5  %p_shl2_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_38, i2 0)

ST_5: tmp_40 (75)  [1/1] 1.26ns  loc: minver.c:59
_ifconv:6  %tmp_40 = sub i5 %p_shl2_cast, %tmp_33

ST_5: tmp_47 (76)  [1/1] 1.26ns  loc: minver.c:59
_ifconv:7  %tmp_47 = add i5 %tmp_18, %tmp_40

ST_5: tmp_66_cast (77)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:8  %tmp_66_cast = sext i5 %tmp_47 to i64

ST_5: minver_a_addr (78)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:9  %minver_a_addr = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_66_cast

ST_5: minver_a_load_1 (79)  [2/2] 2.39ns  loc: minver.c:59
_ifconv:10  %minver_a_load_1 = load double* %minver_a_addr, align 8

ST_5: i_6 (109)  [1/1] 2.39ns  loc: minver.c:57
_ifconv:40  %i_6 = add nsw i32 1, %r_1


 <State 6>: 2.39ns
ST_6: minver_a_load_1 (79)  [1/2] 2.39ns  loc: minver.c:59
_ifconv:10  %minver_a_load_1 = load double* %minver_a_addr, align 8


 <State 7>: 8.27ns
ST_7: n_assign_to_int (80)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:11  %n_assign_to_int = bitcast double %minver_a_load_1 to i64

ST_7: tmp_32 (81)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:12  %tmp_32 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %n_assign_to_int, i32 52, i32 62)

ST_7: tmp_52 (82)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:13  %tmp_52 = trunc i64 %n_assign_to_int to i52

ST_7: notlhs2 (83)  [1/1] 2.58ns  loc: minver.c:59
_ifconv:14  %notlhs2 = icmp ne i11 %tmp_32, -1

ST_7: notrhs2 (84)  [1/1] 3.19ns  loc: minver.c:59
_ifconv:15  %notrhs2 = icmp eq i52 %tmp_52, 0

ST_7: tmp_34 (85)  [1/1] 0.00ns  loc: minver.c:59 (grouped into LUT with out node w_4)
_ifconv:16  %tmp_34 = or i1 %notrhs2, %notlhs2

ST_7: tmp_35 (86)  [1/1] 6.90ns  loc: minver_lib.c:11->minver.c:59
_ifconv:17  %tmp_35 = fcmp oge double %minver_a_load_1, 0.000000e+00

ST_7: tmp_36 (87)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:18  %tmp_36 = and i1 %tmp_34, %tmp_35

ST_7: f_neg_i (88)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:19  %f_neg_i = xor i64 %n_assign_to_int, -9223372036854775808

ST_7: f (89)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:20  %f = bitcast i64 %f_neg_i to double

ST_7: w_4 (90)  [1/1] 1.37ns  loc: minver.c:61 (out node of the LUT)
_ifconv:21  %w_4 = select i1 %tmp_36, double %minver_a_load_1, double %f


 <State 8>: 9.64ns
ST_8: w_4_to_int (91)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:22  %w_4_to_int = bitcast double %w_4 to i64

ST_8: tmp_37 (92)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:23  %tmp_37 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %w_4_to_int, i32 52, i32 62)

ST_8: tmp_53 (93)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:24  %tmp_53 = trunc i64 %w_4_to_int to i52

ST_8: wmax_to_int (94)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:25  %wmax_to_int = bitcast double %wmax to i64

ST_8: tmp_39 (95)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:26  %tmp_39 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %wmax_to_int, i32 52, i32 62)

ST_8: tmp_54 (96)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:27  %tmp_54 = trunc i64 %wmax_to_int to i52

ST_8: notlhs3 (97)  [1/1] 2.58ns  loc: minver.c:61
_ifconv:28  %notlhs3 = icmp ne i11 %tmp_37, -1

ST_8: notrhs3 (98)  [1/1] 3.19ns  loc: minver.c:61
_ifconv:29  %notrhs3 = icmp eq i52 %tmp_53, 0

ST_8: tmp_41 (99)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node tmp_45)
_ifconv:30  %tmp_41 = or i1 %notrhs3, %notlhs3

ST_8: notlhs4 (100)  [1/1] 2.58ns  loc: minver.c:60
_ifconv:31  %notlhs4 = icmp ne i11 %tmp_39, -1

ST_8: notrhs4 (101)  [1/1] 3.19ns  loc: minver.c:60
_ifconv:32  %notrhs4 = icmp eq i52 %tmp_54, 0

ST_8: tmp_42 (102)  [1/1] 0.00ns  loc: minver.c:60 (grouped into LUT with out node tmp_45)
_ifconv:33  %tmp_42 = or i1 %notrhs4, %notlhs4

ST_8: tmp_43 (103)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node tmp_45)
_ifconv:34  %tmp_43 = and i1 %tmp_41, %tmp_42

ST_8: tmp_44 (104)  [1/1] 6.90ns  loc: minver.c:60
_ifconv:35  %tmp_44 = fcmp ogt double %w_4, %wmax

ST_8: tmp_45 (105)  [1/1] 1.37ns  loc: minver.c:60 (out node of the LUT)
_ifconv:36  %tmp_45 = and i1 %tmp_43, %tmp_44

ST_8: wmax_1 (107)  [1/1] 1.37ns  loc: minver.c:60
_ifconv:38  %wmax_1 = select i1 %tmp_45, double %w_4, double %wmax


 <State 9>: 2.94ns
ST_9: r_load_1 (69)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:0  %r_load_1 = load i32* %r

ST_9: tmp_25 (70)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3) nounwind

ST_9: StgValue_244 (71)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_9: r_2 (106)  [1/1] 1.37ns  loc: minver.c:60
_ifconv:37  %r_2 = select i1 %tmp_45, i32 %r_1, i32 %r_load_1

ST_9: empty_7 (108)  [1/1] 0.00ns  loc: minver.c:64
_ifconv:39  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_25) nounwind

ST_9: StgValue_247 (110)  [1/1] 1.57ns  loc: minver.c:60
_ifconv:41  store i32 %r_2, i32* %r

ST_9: StgValue_248 (111)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:42  br label %.preheader13


 <State 10>: 5.73ns
ST_10: r_load (113)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_10: tmp_56 (115)  [1/1] 0.00ns
_ifconv1:2  %tmp_56 = trunc i32 %r_load to i5

ST_10: tmp_61 (116)  [1/1] 0.00ns
_ifconv1:3  %tmp_61 = trunc i32 %r_load to i3

ST_10: p_shl3_cast (117)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:4  %p_shl3_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_61, i2 0)

ST_10: tmp_65 (118)  [1/1] 1.67ns  loc: minver.c:66
_ifconv1:5  %tmp_65 = sub i5 %p_shl3_cast, %tmp_56

ST_10: tmp_66 (119)  [1/1] 1.67ns  loc: minver.c:66
_ifconv1:6  %tmp_66 = add i5 %tmp_18, %tmp_65

ST_10: tmp_69_cast (120)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:7  %tmp_69_cast = sext i5 %tmp_66 to i64

ST_10: minver_a_addr_1 (121)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:8  %minver_a_addr_1 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_69_cast

ST_10: pivot (122)  [2/2] 2.39ns  loc: minver.c:66
_ifconv1:9  %pivot = load double* %minver_a_addr_1, align 8


 <State 11>: 2.39ns
ST_11: pivot (122)  [1/2] 2.39ns  loc: minver.c:66
_ifconv1:9  %pivot = load double* %minver_a_addr_1, align 8


 <State 12>: 8.27ns
ST_12: pivot_to_int (123)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:10  %pivot_to_int = bitcast double %pivot to i64

ST_12: tmp_46 (124)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:11  %tmp_46 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %pivot_to_int, i32 52, i32 62)

ST_12: tmp_67 (125)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:12  %tmp_67 = trunc i64 %pivot_to_int to i52

ST_12: notlhs5 (126)  [1/1] 2.58ns  loc: minver.c:66
_ifconv1:13  %notlhs5 = icmp ne i11 %tmp_46, -1

ST_12: notrhs5 (127)  [1/1] 3.19ns  loc: minver.c:66
_ifconv1:14  %notrhs5 = icmp eq i52 %tmp_67, 0

ST_12: tmp_48 (128)  [1/1] 0.00ns  loc: minver.c:66 (grouped into LUT with out node api)
_ifconv1:15  %tmp_48 = or i1 %notrhs5, %notlhs5

ST_12: tmp_49 (129)  [1/1] 6.90ns  loc: minver_lib.c:11->minver.c:67
_ifconv1:16  %tmp_49 = fcmp oge double %pivot, 0.000000e+00

ST_12: tmp_50 (130)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:67 (grouped into LUT with out node api)
_ifconv1:17  %tmp_50 = and i1 %tmp_48, %tmp_49

ST_12: f_neg_i1 (131)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:67 (grouped into LUT with out node api)
_ifconv1:18  %f_neg_i1 = xor i64 %pivot_to_int, -9223372036854775808

ST_12: f_1 (132)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:67 (grouped into LUT with out node api)
_ifconv1:19  %f_1 = bitcast i64 %f_neg_i1 to double

ST_12: api (133)  [1/1] 1.37ns  loc: minver.c:67 (out node of the LUT)
_ifconv1:20  %api = select i1 %tmp_50, double %pivot, double %f_1


 <State 13>: 8.27ns
ST_13: tmp_s (114)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:1  %tmp_s = sext i32 %r_load to i64

ST_13: api_to_int (134)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:21  %api_to_int = bitcast double %api to i64

ST_13: tmp_51 (135)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:22  %tmp_51 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %api_to_int, i32 52, i32 62)

ST_13: tmp_68 (136)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:23  %tmp_68 = trunc i64 %api_to_int to i52

ST_13: notlhs6 (137)  [1/1] 2.58ns  loc: minver.c:67
_ifconv1:24  %notlhs6 = icmp ne i11 %tmp_51, -1

ST_13: notrhs6 (138)  [1/1] 3.19ns  loc: minver.c:67
_ifconv1:25  %notrhs6 = icmp eq i52 %tmp_68, 0

ST_13: tmp_55 (139)  [1/1] 0.00ns  loc: minver.c:67 (grouped into LUT with out node tmp_59)
_ifconv1:26  %tmp_55 = or i1 %notrhs6, %notlhs6

ST_13: tmp_57 (140)  [1/1] 0.00ns  loc: minver.c:67 (grouped into LUT with out node tmp_59)
_ifconv1:27  %tmp_57 = and i1 %tmp_55, %tmp_8

ST_13: tmp_58 (141)  [1/1] 6.90ns  loc: minver.c:68
_ifconv1:28  %tmp_58 = fcmp ole double %api, %eps_read

ST_13: tmp_59 (142)  [1/1] 1.37ns  loc: minver.c:68 (out node of the LUT)
_ifconv1:29  %tmp_59 = and i1 %tmp_57, %tmp_58

ST_13: StgValue_280 (143)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:30  br i1 %tmp_59, label %.loopexit9.loopexit24, label %2

ST_13: tmp_9 (145)  [1/1] 2.93ns  loc: minver.c:73
:0  %tmp_9 = icmp eq i32 %r_load, %i_5_cast

ST_13: StgValue_282 (146)  [1/1] 0.00ns  loc: minver.c:73
:1  br i1 %tmp_9, label %.loopexit12, label %3

ST_13: work_addr_2 (148)  [1/1] 0.00ns  loc: minver.c:75
:0  %work_addr_2 = getelementptr [500 x i9]* %work, i64 0, i64 %tmp_4

ST_13: work_load_1 (149)  [2/2] 2.71ns  loc: minver.c:75
:1  %work_load_1 = load i9* %work_addr_2, align 2

ST_13: work_addr_3 (150)  [1/1] 0.00ns  loc: minver.c:76
:2  %work_addr_3 = getelementptr [500 x i9]* %work, i64 0, i64 %tmp_s

ST_13: work_load_2 (151)  [2/2] 2.71ns  loc: minver.c:76
:3  %work_load_2 = load i9* %work_addr_3, align 2

ST_13: StgValue_287 (277)  [1/1] 1.57ns
.loopexit9.loopexit24:0  br label %.loopexit9


 <State 14>: 5.42ns
ST_14: work_load_1 (149)  [1/2] 2.71ns  loc: minver.c:75
:1  %work_load_1 = load i9* %work_addr_2, align 2

ST_14: work_load_2 (151)  [1/2] 2.71ns  loc: minver.c:76
:3  %work_load_2 = load i9* %work_addr_3, align 2

ST_14: StgValue_290 (152)  [1/1] 2.71ns  loc: minver.c:76
:4  store i9 %work_load_2, i9* %work_addr_2, align 2


 <State 15>: 2.71ns
ST_15: StgValue_291 (153)  [1/1] 2.71ns  loc: minver.c:77
:5  store i9 %work_load_1, i9* %work_addr_3, align 2

ST_15: StgValue_292 (154)  [1/1] 1.57ns  loc: minver.c:78
:6  br label %4


 <State 16>: 4.06ns
ST_16: j (156)  [1/1] 0.00ns
:0  %j = phi i9 [ 0, %3 ], [ %j_3, %5 ]

ST_16: j_cast (157)  [1/1] 0.00ns  loc: minver.c:78
:1  %j_cast = zext i9 %j to i32

ST_16: exitcond5 (158)  [1/1] 2.93ns  loc: minver.c:78
:2  %exitcond5 = icmp eq i32 %j_cast, %side_read

ST_16: j_3 (159)  [1/1] 1.79ns  loc: minver.c:78
:3  %j_3 = add i9 %j, 1

ST_16: StgValue_297 (160)  [1/1] 0.00ns  loc: minver.c:78
:4  br i1 %exitcond5, label %.loopexit12.loopexit, label %5

ST_16: tmp_82 (165)  [1/1] 0.00ns  loc: minver.c:80
:3  %tmp_82 = trunc i9 %j to i5

ST_16: tmp_73 (166)  [1/1] 1.67ns  loc: minver.c:80
:4  %tmp_73 = add i5 %tmp_31, %tmp_82

ST_16: tmp_73_cast (167)  [1/1] 0.00ns  loc: minver.c:80
:5  %tmp_73_cast = sext i5 %tmp_73 to i64

ST_16: minver_a_addr_4 (168)  [1/1] 0.00ns  loc: minver.c:80
:6  %minver_a_addr_4 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_73_cast

ST_16: tmp_74 (169)  [1/1] 1.67ns  loc: minver.c:81
:7  %tmp_74 = add i5 %tmp_65, %tmp_82

ST_16: tmp_74_cast (170)  [1/1] 0.00ns  loc: minver.c:81
:8  %tmp_74_cast = sext i5 %tmp_74 to i64

ST_16: minver_a_addr_5 (171)  [1/1] 0.00ns  loc: minver.c:81
:9  %minver_a_addr_5 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_74_cast

ST_16: w (172)  [2/2] 2.39ns  loc: minver.c:80
:10  %w = load double* %minver_a_addr_4, align 8

ST_16: minver_a_load_2 (173)  [2/2] 2.39ns  loc: minver.c:81
:11  %minver_a_load_2 = load double* %minver_a_addr_5, align 8


 <State 17>: 4.78ns
ST_17: w (172)  [1/2] 2.39ns  loc: minver.c:80
:10  %w = load double* %minver_a_addr_4, align 8

ST_17: minver_a_load_2 (173)  [1/2] 2.39ns  loc: minver.c:81
:11  %minver_a_load_2 = load double* %minver_a_addr_5, align 8

ST_17: StgValue_309 (174)  [1/1] 2.39ns  loc: minver.c:81
:12  store double %minver_a_load_2, double* %minver_a_addr_4, align 8


 <State 18>: 0.00ns

 <State 19>: 2.39ns
ST_19: empty_8 (162)  [1/1] 0.00ns
:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_19: tmp_27 (163)  [1/1] 0.00ns  loc: minver.c:78
:1  %tmp_27 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_19: StgValue_312 (164)  [1/1] 0.00ns  loc: minver.c:79
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_19: StgValue_313 (175)  [1/1] 2.39ns  loc: minver.c:82
:13  store double %w, double* %minver_a_addr_5, align 8

ST_19: empty_9 (176)  [1/1] 0.00ns  loc: minver.c:83
:14  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_27) nounwind

ST_19: StgValue_315 (177)  [1/1] 0.00ns  loc: minver.c:78
:15  br label %4


 <State 20>: 1.57ns
ST_20: StgValue_316 (179)  [1/1] 0.00ns
.loopexit12.loopexit:0  br label %.loopexit12

ST_20: StgValue_317 (181)  [1/1] 1.57ns  loc: minver.c:86
.loopexit12:0  br label %6


 <State 21>: 4.06ns
ST_21: i_2 (183)  [1/1] 0.00ns
:0  %i_2 = phi i9 [ 0, %.loopexit12 ], [ %i_8, %7 ]

ST_21: i_2_cast (184)  [1/1] 0.00ns  loc: minver.c:86
:1  %i_2_cast = zext i9 %i_2 to i32

ST_21: exitcond4 (185)  [1/1] 2.93ns  loc: minver.c:86
:2  %exitcond4 = icmp eq i32 %i_2_cast, %side_read

ST_21: i_8 (186)  [1/1] 1.79ns  loc: minver.c:86
:3  %i_8 = add i9 %i_2, 1

ST_21: StgValue_322 (187)  [1/1] 0.00ns  loc: minver.c:86
:4  br i1 %exitcond4, label %.preheader11.preheader, label %7

ST_21: tmp_83 (192)  [1/1] 0.00ns  loc: minver.c:88
:3  %tmp_83 = trunc i9 %i_2 to i5

ST_21: tmp_75 (193)  [1/1] 1.67ns  loc: minver.c:88
:4  %tmp_75 = add i5 %tmp_31, %tmp_83

ST_21: tmp_75_cast (194)  [1/1] 0.00ns  loc: minver.c:88
:5  %tmp_75_cast = sext i5 %tmp_75 to i64

ST_21: minver_a_addr_6 (195)  [1/1] 0.00ns  loc: minver.c:88
:6  %minver_a_addr_6 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_75_cast

ST_21: minver_a_load_3 (196)  [2/2] 2.39ns  loc: minver.c:88
:7  %minver_a_load_3 = load double* %minver_a_addr_6, align 8


 <State 22>: 2.39ns
ST_22: minver_a_load_3 (196)  [1/2] 2.39ns  loc: minver.c:88
:7  %minver_a_load_3 = load double* %minver_a_addr_6, align 8


 <State 23>: 8.66ns
ST_23: tmp_14 (197)  [31/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 24>: 8.66ns
ST_24: tmp_14 (197)  [30/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 25>: 8.66ns
ST_25: tmp_14 (197)  [29/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 26>: 8.66ns
ST_26: tmp_14 (197)  [28/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 27>: 8.66ns
ST_27: tmp_14 (197)  [27/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 28>: 8.66ns
ST_28: tmp_14 (197)  [26/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 29>: 8.66ns
ST_29: tmp_14 (197)  [25/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 30>: 8.66ns
ST_30: tmp_14 (197)  [24/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 31>: 8.66ns
ST_31: tmp_14 (197)  [23/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 32>: 8.66ns
ST_32: tmp_14 (197)  [22/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 33>: 8.66ns
ST_33: tmp_14 (197)  [21/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 34>: 8.66ns
ST_34: tmp_14 (197)  [20/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 35>: 8.66ns
ST_35: tmp_14 (197)  [19/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 36>: 8.66ns
ST_36: tmp_14 (197)  [18/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 37>: 8.66ns
ST_37: tmp_14 (197)  [17/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 38>: 8.66ns
ST_38: tmp_14 (197)  [16/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 39>: 8.66ns
ST_39: tmp_14 (197)  [15/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 40>: 8.66ns
ST_40: tmp_14 (197)  [14/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 41>: 8.66ns
ST_41: tmp_14 (197)  [13/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 42>: 8.66ns
ST_42: tmp_14 (197)  [12/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 43>: 8.66ns
ST_43: tmp_14 (197)  [11/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 44>: 8.66ns
ST_44: tmp_14 (197)  [10/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 45>: 8.66ns
ST_45: tmp_14 (197)  [9/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 46>: 8.66ns
ST_46: tmp_14 (197)  [8/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 47>: 8.66ns
ST_47: tmp_14 (197)  [7/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 48>: 8.66ns
ST_48: tmp_14 (197)  [6/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 49>: 8.66ns
ST_49: tmp_14 (197)  [5/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 50>: 8.66ns
ST_50: tmp_14 (197)  [4/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 51>: 8.66ns
ST_51: tmp_14 (197)  [3/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 52>: 8.66ns
ST_52: tmp_14 (197)  [2/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 53>: 8.66ns
ST_53: tmp_14 (197)  [1/31] 8.66ns  loc: minver.c:88
:8  %tmp_14 = fdiv double %minver_a_load_3, %pivot


 <State 54>: 2.39ns
ST_54: empty_10 (189)  [1/1] 0.00ns
:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_54: tmp_28 (190)  [1/1] 0.00ns  loc: minver.c:86
:1  %tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_54: StgValue_362 (191)  [1/1] 0.00ns  loc: minver.c:87
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_54: StgValue_363 (198)  [1/1] 2.39ns  loc: minver.c:88
:9  store double %tmp_14, double* %minver_a_addr_6, align 8

ST_54: empty_11 (199)  [1/1] 0.00ns  loc: minver.c:89
:10  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_28) nounwind

ST_54: StgValue_365 (200)  [1/1] 0.00ns  loc: minver.c:86
:11  br label %6


 <State 55>: 1.57ns
ST_55: StgValue_366 (202)  [1/1] 1.57ns  loc: minver.c:91
.preheader11.preheader:0  br label %.preheader11


 <State 56>: 8.66ns
ST_56: i_3 (204)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i9 [ %i_9, %._crit_edge ], [ 0, %.preheader11.preheader ]

ST_56: i_3_cast (205)  [1/1] 0.00ns  loc: minver.c:91
.preheader11:1  %i_3_cast = zext i9 %i_3 to i32

ST_56: exitcond3 (206)  [1/1] 2.93ns  loc: minver.c:91
.preheader11:2  %exitcond3 = icmp eq i32 %i_3_cast, %side_read

ST_56: i_9 (207)  [1/1] 1.79ns  loc: minver.c:91
.preheader11:3  %i_9 = add i9 %i_3, 1

ST_56: StgValue_371 (208)  [1/1] 0.00ns  loc: minver.c:91
.preheader11:4  br i1 %exitcond3, label %13, label %8

ST_56: empty_12 (210)  [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_56: tmp_29 (211)  [1/1] 0.00ns  loc: minver.c:91
:1  %tmp_29 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_56: StgValue_374 (212)  [1/1] 0.00ns  loc: minver.c:92
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_56: tmp_16 (213)  [1/1] 2.51ns  loc: minver.c:93
:3  %tmp_16 = icmp eq i9 %i_3, %i_5

ST_56: StgValue_376 (214)  [1/1] 0.00ns  loc: minver.c:93
:4  br i1 %tmp_16, label %._crit_edge, label %9

ST_56: tmp_84 (216)  [1/1] 0.00ns  loc: minver.c:91
:0  %tmp_84 = trunc i9 %i_3 to i5

ST_56: tmp_85 (217)  [1/1] 0.00ns  loc: minver.c:91
:1  %tmp_85 = trunc i9 %i_3 to i3

ST_56: p_shl4_cast (218)  [1/1] 0.00ns  loc: minver.c:94
:2  %p_shl4_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_85, i2 0)

ST_56: tmp_77 (219)  [1/1] 1.67ns  loc: minver.c:94
:3  %tmp_77 = sub i5 %p_shl4_cast, %tmp_84

ST_56: tmp_78 (220)  [1/1] 1.67ns  loc: minver.c:94
:4  %tmp_78 = add i5 %tmp_18, %tmp_77

ST_56: tmp_78_cast (221)  [1/1] 0.00ns  loc: minver.c:94
:5  %tmp_78_cast = sext i5 %tmp_78 to i64

ST_56: minver_a_addr_8 (222)  [1/1] 0.00ns  loc: minver.c:94
:6  %minver_a_addr_8 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_78_cast

ST_56: w_3 (223)  [2/2] 2.39ns  loc: minver.c:94
:7  %w_3 = load double* %minver_a_addr_8, align 8

ST_56: tmp_15 (273)  [31/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 57>: 2.39ns
ST_57: w_3 (223)  [1/2] 2.39ns  loc: minver.c:94
:7  %w_3 = load double* %minver_a_addr_8, align 8


 <State 58>: 8.27ns
ST_58: w_3_to_int (224)  [1/1] 0.00ns  loc: minver.c:94
:8  %w_3_to_int = bitcast double %w_3 to i64

ST_58: tmp_60 (225)  [1/1] 0.00ns  loc: minver.c:94
:9  %tmp_60 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %w_3_to_int, i32 52, i32 62)

ST_58: tmp_86 (226)  [1/1] 0.00ns  loc: minver.c:94
:10  %tmp_86 = trunc i64 %w_3_to_int to i52

ST_58: notlhs8 (227)  [1/1] 2.58ns  loc: minver.c:94
:11  %notlhs8 = icmp ne i11 %tmp_60, -1

ST_58: notrhs8 (228)  [1/1] 3.19ns  loc: minver.c:94
:12  %notrhs8 = icmp eq i52 %tmp_86, 0

ST_58: tmp_62 (229)  [1/1] 0.00ns  loc: minver.c:94 (grouped into LUT with out node tmp_64)
:13  %tmp_62 = or i1 %notrhs8, %notlhs8

ST_58: tmp_63 (230)  [1/1] 6.90ns  loc: minver.c:95
:14  %tmp_63 = fcmp oeq double %w_3, 0.000000e+00

ST_58: tmp_64 (231)  [1/1] 1.37ns  loc: minver.c:95 (out node of the LUT)
:15  %tmp_64 = and i1 %tmp_62, %tmp_63

ST_58: StgValue_395 (232)  [1/1] 0.00ns  loc: minver.c:95
:16  br i1 %tmp_64, label %._crit_edge20, label %.preheader10.preheader

ST_58: StgValue_396 (234)  [1/1] 1.57ns  loc: minver.c:96
.preheader10.preheader:0  br label %.preheader10


 <State 59>: 4.06ns
ST_59: j_1 (236)  [1/1] 0.00ns
.preheader10:0  %j_1 = phi i9 [ %j_5, %._crit_edge21 ], [ 0, %.preheader10.preheader ]

ST_59: j_1_cast (237)  [1/1] 0.00ns  loc: minver.c:96
.preheader10:1  %j_1_cast = zext i9 %j_1 to i32

ST_59: exitcond2 (238)  [1/1] 2.93ns  loc: minver.c:96
.preheader10:2  %exitcond2 = icmp eq i32 %j_1_cast, %side_read

ST_59: empty_13 (239)  [1/1] 0.00ns
.preheader10:3  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_59: j_5 (240)  [1/1] 1.79ns  loc: minver.c:96
.preheader10:4  %j_5 = add i9 %j_1, 1

ST_59: StgValue_402 (241)  [1/1] 0.00ns  loc: minver.c:96
.preheader10:5  br i1 %exitcond2, label %12, label %10

ST_59: tmp_21 (243)  [1/1] 2.51ns  loc: minver.c:97
:0  %tmp_21 = icmp eq i9 %j_1, %i_5

ST_59: StgValue_404 (244)  [1/1] 0.00ns  loc: minver.c:97
:1  br i1 %tmp_21, label %._crit_edge21, label %11

ST_59: tmp_87 (246)  [1/1] 0.00ns  loc: minver.c:97
:0  %tmp_87 = trunc i9 %j_1 to i5

ST_59: tmp_79 (247)  [1/1] 1.67ns  loc: minver.c:97
:1  %tmp_79 = add i5 %tmp_31, %tmp_87

ST_59: tmp_79_cast (248)  [1/1] 0.00ns  loc: minver.c:97
:2  %tmp_79_cast = sext i5 %tmp_79 to i64

ST_59: minver_a_addr_9 (249)  [1/1] 0.00ns  loc: minver.c:97
:3  %minver_a_addr_9 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_79_cast

ST_59: tmp_80 (250)  [1/1] 1.67ns  loc: minver.c:97
:4  %tmp_80 = add i5 %tmp_77, %tmp_87

ST_59: tmp_80_cast (251)  [1/1] 0.00ns  loc: minver.c:97
:5  %tmp_80_cast = sext i5 %tmp_80 to i64

ST_59: minver_a_addr_10 (252)  [1/1] 0.00ns  loc: minver.c:97
:6  %minver_a_addr_10 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_80_cast

ST_59: minver_a_load_5 (253)  [2/2] 2.39ns  loc: minver.c:97
:7  %minver_a_load_5 = load double* %minver_a_addr_9, align 8

ST_59: tmp_19_neg (262)  [1/1] 1.37ns  loc: minver.c:99
:0  %tmp_19_neg = xor i64 %w_3_to_int, -9223372036854775808


 <State 60>: 2.39ns
ST_60: minver_a_load_5 (253)  [1/2] 2.39ns  loc: minver.c:97
:7  %minver_a_load_5 = load double* %minver_a_addr_9, align 8


 <State 61>: 7.79ns
ST_61: tmp_23 (254)  [6/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5


 <State 62>: 7.79ns
ST_62: tmp_23 (254)  [5/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5


 <State 63>: 7.79ns
ST_63: tmp_23 (254)  [4/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5


 <State 64>: 7.79ns
ST_64: tmp_23 (254)  [3/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5


 <State 65>: 7.79ns
ST_65: tmp_23 (254)  [2/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5

ST_65: minver_a_load_6 (255)  [2/2] 2.39ns  loc: minver.c:97
:9  %minver_a_load_6 = load double* %minver_a_addr_10, align 8


 <State 66>: 7.79ns
ST_66: tmp_23 (254)  [1/6] 7.79ns  loc: minver.c:97
:8  %tmp_23 = fmul double %w_3, %minver_a_load_5

ST_66: minver_a_load_6 (255)  [1/2] 2.39ns  loc: minver.c:97
:9  %minver_a_load_6 = load double* %minver_a_addr_10, align 8


 <State 67>: 8.39ns
ST_67: tmp_24 (256)  [6/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 68>: 8.39ns
ST_68: tmp_24 (256)  [5/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 69>: 8.39ns
ST_69: tmp_24 (256)  [4/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 70>: 8.39ns
ST_70: tmp_24 (256)  [3/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 71>: 8.39ns
ST_71: tmp_24 (256)  [2/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 72>: 8.39ns
ST_72: tmp_24 (256)  [1/6] 8.39ns  loc: minver.c:97
:10  %tmp_24 = fsub double %minver_a_load_6, %tmp_23


 <State 73>: 2.39ns
ST_73: StgValue_429 (257)  [1/1] 2.39ns  loc: minver.c:97
:11  store double %tmp_24, double* %minver_a_addr_10, align 8

ST_73: StgValue_430 (258)  [1/1] 0.00ns  loc: minver.c:97
:12  br label %._crit_edge21

ST_73: StgValue_431 (260)  [1/1] 0.00ns  loc: minver.c:96
._crit_edge21:0  br label %.preheader10


 <State 74>: 8.66ns
ST_74: tmp_19 (263)  [1/1] 0.00ns  loc: minver.c:99
:1  %tmp_19 = bitcast i64 %tmp_19_neg to double

ST_74: tmp_20 (264)  [31/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 75>: 8.66ns
ST_75: tmp_20 (264)  [30/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 76>: 8.66ns
ST_76: tmp_20 (264)  [29/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 77>: 8.66ns
ST_77: tmp_20 (264)  [28/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 78>: 8.66ns
ST_78: tmp_20 (264)  [27/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 79>: 8.66ns
ST_79: tmp_20 (264)  [26/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 80>: 8.66ns
ST_80: tmp_20 (264)  [25/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 81>: 8.66ns
ST_81: tmp_20 (264)  [24/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 82>: 8.66ns
ST_82: tmp_20 (264)  [23/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 83>: 8.66ns
ST_83: tmp_20 (264)  [22/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 84>: 8.66ns
ST_84: tmp_20 (264)  [21/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 85>: 8.66ns
ST_85: tmp_20 (264)  [20/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 86>: 8.66ns
ST_86: tmp_20 (264)  [19/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 87>: 8.66ns
ST_87: tmp_20 (264)  [18/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 88>: 8.66ns
ST_88: tmp_20 (264)  [17/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 89>: 8.66ns
ST_89: tmp_20 (264)  [16/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 90>: 8.66ns
ST_90: tmp_20 (264)  [15/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 91>: 8.66ns
ST_91: tmp_20 (264)  [14/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 92>: 8.66ns
ST_92: tmp_20 (264)  [13/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 93>: 8.66ns
ST_93: tmp_20 (264)  [12/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 94>: 8.66ns
ST_94: tmp_20 (264)  [11/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 95>: 8.66ns
ST_95: tmp_20 (264)  [10/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 96>: 8.66ns
ST_96: tmp_20 (264)  [9/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 97>: 8.66ns
ST_97: tmp_20 (264)  [8/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 98>: 8.66ns
ST_98: tmp_20 (264)  [7/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 99>: 8.66ns
ST_99: tmp_20 (264)  [6/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 100>: 8.66ns
ST_100: tmp_20 (264)  [5/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 101>: 8.66ns
ST_101: tmp_20 (264)  [4/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 102>: 8.66ns
ST_102: tmp_20 (264)  [3/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 103>: 8.66ns
ST_103: tmp_20 (264)  [2/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 104>: 8.66ns
ST_104: tmp_20 (264)  [1/31] 8.66ns  loc: minver.c:99
:2  %tmp_20 = fdiv double %tmp_19, %pivot


 <State 105>: 2.39ns
ST_105: StgValue_464 (265)  [1/1] 2.39ns  loc: minver.c:99
:3  store double %tmp_20, double* %minver_a_addr_8, align 8

ST_105: StgValue_465 (266)  [1/1] 0.00ns  loc: minver.c:100
:4  br label %._crit_edge20

ST_105: StgValue_466 (268)  [1/1] 0.00ns  loc: minver.c:101
._crit_edge20:0  br label %._crit_edge

ST_105: empty_14 (270)  [1/1] 0.00ns  loc: minver.c:102
._crit_edge:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_29) nounwind

ST_105: StgValue_468 (271)  [1/1] 0.00ns  loc: minver.c:91
._crit_edge:1  br label %.preheader11


 <State 106>: 8.66ns
ST_106: tmp_15 (273)  [30/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 107>: 8.66ns
ST_107: tmp_15 (273)  [29/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 108>: 8.66ns
ST_108: tmp_15 (273)  [28/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 109>: 8.66ns
ST_109: tmp_15 (273)  [27/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 110>: 8.66ns
ST_110: tmp_15 (273)  [26/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 111>: 8.66ns
ST_111: tmp_15 (273)  [25/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 112>: 8.66ns
ST_112: tmp_15 (273)  [24/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 113>: 8.66ns
ST_113: tmp_15 (273)  [23/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 114>: 8.66ns
ST_114: tmp_15 (273)  [22/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 115>: 8.66ns
ST_115: tmp_15 (273)  [21/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 116>: 8.66ns
ST_116: tmp_15 (273)  [20/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 117>: 8.66ns
ST_117: tmp_15 (273)  [19/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 118>: 8.66ns
ST_118: tmp_15 (273)  [18/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 119>: 8.66ns
ST_119: tmp_15 (273)  [17/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 120>: 8.66ns
ST_120: tmp_15 (273)  [16/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 121>: 8.66ns
ST_121: tmp_15 (273)  [15/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 122>: 8.66ns
ST_122: tmp_15 (273)  [14/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 123>: 8.66ns
ST_123: tmp_15 (273)  [13/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 124>: 8.66ns
ST_124: tmp_15 (273)  [12/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 125>: 8.66ns
ST_125: tmp_15 (273)  [11/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 126>: 8.66ns
ST_126: tmp_15 (273)  [10/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 127>: 8.66ns
ST_127: tmp_15 (273)  [9/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 128>: 8.66ns
ST_128: tmp_15 (273)  [8/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 129>: 8.66ns
ST_129: tmp_15 (273)  [7/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 130>: 8.66ns
ST_130: tmp_15 (273)  [6/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 131>: 8.66ns
ST_131: tmp_15 (273)  [5/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 132>: 8.66ns
ST_132: tmp_15 (273)  [4/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 133>: 8.66ns
ST_133: tmp_15 (273)  [3/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 134>: 8.66ns
ST_134: tmp_15 (273)  [2/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 135>: 8.66ns
ST_135: tmp_15 (273)  [1/31] 8.66ns  loc: minver.c:103
:0  %tmp_15 = fdiv double 1.000000e+00, %pivot


 <State 136>: 2.39ns
ST_136: StgValue_499 (274)  [1/1] 2.39ns  loc: minver.c:103
:1  store double %tmp_15, double* %minver_a_addr_7, align 8

ST_136: StgValue_500 (275)  [1/1] 0.00ns  loc: minver.c:55
:2  br label %.preheader14


 <State 137>: 2.93ns
ST_137: i_4 (281)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i9 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_137: i_4_cast (282)  [1/1] 0.00ns  loc: minver.c:107
.preheader8:1  %i_4_cast = zext i9 %i_4 to i32

ST_137: exitcond1 (283)  [1/1] 2.93ns  loc: minver.c:107
.preheader8:2  %exitcond1 = icmp eq i32 %i_4_cast, %side_read

ST_137: i_7 (284)  [1/1] 1.79ns  loc: minver.c:127
.preheader8:3  %i_7 = add i9 %i_4, 1

ST_137: StgValue_505 (285)  [1/1] 0.00ns  loc: minver.c:107
.preheader8:4  br i1 %exitcond1, label %.loopexit9.loopexit, label %.preheader.preheader

ST_137: empty_15 (287)  [1/1] 0.00ns
.preheader.preheader:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_137: tmp_7 (288)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:1  %tmp_7 = zext i9 %i_4 to i64

ST_137: tmp_69 (289)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:2  %tmp_69 = trunc i9 %i_4 to i5

ST_137: work_addr_1 (290)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i9]* %work, i64 0, i64 %tmp_7

ST_137: StgValue_510 (291)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:4  br label %.preheader

ST_137: StgValue_511 (334)  [1/1] 1.57ns
.loopexit9.loopexit:0  br label %.loopexit9


 <State 138>: 2.71ns
ST_138: work_load (293)  [2/2] 2.71ns  loc: minver.c:111
.preheader:0  %work_load = load i9* %work_addr_1, align 2


 <State 139>: 5.42ns
ST_139: work_load (293)  [1/2] 2.71ns  loc: minver.c:111
.preheader:0  %work_load = load i9* %work_addr_1, align 2

ST_139: tmp_10 (294)  [1/1] 2.51ns  loc: minver.c:113
.preheader:1  %tmp_10 = icmp eq i9 %work_load, %i_4

ST_139: StgValue_515 (295)  [1/1] 0.00ns  loc: minver.c:113
.preheader:2  br i1 %tmp_10, label %.preheader8.loopexit, label %14

ST_139: tmp_11 (297)  [1/1] 0.00ns  loc: minver.c:115
:0  %tmp_11 = zext i9 %work_load to i64

ST_139: tmp_70 (298)  [1/1] 0.00ns  loc: minver.c:111
:1  %tmp_70 = trunc i9 %work_load to i5

ST_139: tmp_81 (301)  [1/1] 0.00ns  loc: minver.c:111
:4  %tmp_81 = trunc i9 %work_load to i3

ST_139: p_shl5_cast (302)  [1/1] 0.00ns  loc: minver.c:121
:5  %p_shl5_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_81, i2 0)

ST_139: tmp_71 (303)  [1/1] 1.26ns  loc: minver.c:121
:6  %tmp_71 = sub i5 %p_shl5_cast, %tmp_70

ST_139: tmp_72 (304)  [1/1] 1.26ns  loc: minver.c:121
:7  %tmp_72 = add i5 %tmp_71, %tmp_69

ST_139: tmp_72_cast (305)  [1/1] 0.00ns  loc: minver.c:121
:8  %tmp_72_cast = sext i5 %tmp_72 to i64

ST_139: minver_a_addr_2 (306)  [1/1] 0.00ns  loc: minver.c:121
:9  %minver_a_addr_2 = getelementptr [9 x double]* %minver_a, i64 0, i64 %tmp_72_cast

ST_139: work_addr_4 (308)  [1/1] 0.00ns  loc: minver.c:115
:11  %work_addr_4 = getelementptr [500 x i9]* %work, i64 0, i64 %tmp_11

ST_139: work_load_3 (309)  [2/2] 2.71ns  loc: minver.c:115
:12  %work_load_3 = load i9* %work_addr_4, align 2

ST_139: StgValue_526 (332)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8


 <State 140>: 2.71ns
ST_140: tmp_76 (299)  [1/1] 0.00ns  loc: minver.c:111
:2  %tmp_76 = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %work_load, i2 0)

ST_140: p_shl5 (300)  [1/1] 0.00ns  loc: minver.c:121
:3  %p_shl5 = zext i11 %tmp_76 to i64

ST_140: minver_a_addr_3 (307)  [1/1] 0.00ns  loc: minver.c:122
:10  %minver_a_addr_3 = getelementptr [9 x double]* %minver_a, i64 0, i64 %p_shl5

ST_140: work_load_3 (309)  [1/2] 2.71ns  loc: minver.c:115
:12  %work_load_3 = load i9* %work_addr_4, align 2

ST_140: StgValue_531 (310)  [1/1] 2.71ns  loc: minver.c:116
:13  store i9 %work_load, i9* %work_addr_4, align 2


 <State 141>: 2.71ns
ST_141: StgValue_532 (311)  [1/1] 2.71ns  loc: minver.c:117
:14  store i9 %work_load_3, i9* %work_addr_1, align 2

ST_141: StgValue_533 (312)  [1/1] 1.57ns  loc: minver.c:119
:15  br label %15


 <State 142>: 2.93ns
ST_142: j_2 (314)  [1/1] 0.00ns
:0  %j_2 = phi i9 [ 0, %14 ], [ %j_4, %16 ]

ST_142: j_2_cast (315)  [1/1] 0.00ns  loc: minver.c:119
:1  %j_2_cast = zext i9 %j_2 to i32

ST_142: exitcond (316)  [1/1] 2.93ns  loc: minver.c:119
:2  %exitcond = icmp eq i32 %j_2_cast, %side_read

ST_142: j_4 (317)  [1/1] 1.79ns  loc: minver.c:119
:3  %j_4 = add i9 %j_2, 1

ST_142: StgValue_538 (318)  [1/1] 0.00ns  loc: minver.c:119
:4  br i1 %exitcond, label %.preheader.loopexit, label %16

ST_142: w_2 (323)  [2/2] 2.39ns  loc: minver.c:121
:3  %w_2 = load double* %minver_a_addr_2, align 8

ST_142: minver_a_load (324)  [2/2] 2.39ns  loc: minver.c:122
:4  %minver_a_load = load double* %minver_a_addr_3, align 8


 <State 143>: 4.78ns
ST_143: w_2 (323)  [1/2] 2.39ns  loc: minver.c:121
:3  %w_2 = load double* %minver_a_addr_2, align 8

ST_143: minver_a_load (324)  [1/2] 2.39ns  loc: minver.c:122
:4  %minver_a_load = load double* %minver_a_addr_3, align 8

ST_143: StgValue_543 (325)  [1/1] 2.39ns  loc: minver.c:122
:5  store double %minver_a_load, double* %minver_a_addr_2, align 8


 <State 144>: 2.39ns
ST_144: empty_16 (320)  [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 500, i64 0) nounwind

ST_144: tmp_26 (321)  [1/1] 0.00ns  loc: minver.c:119
:1  %tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_144: StgValue_546 (322)  [1/1] 0.00ns  loc: minver.c:120
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_144: StgValue_547 (326)  [1/1] 2.39ns  loc: minver.c:123
:6  store double %w_2, double* %minver_a_addr_3, align 8

ST_144: empty_17 (327)  [1/1] 0.00ns  loc: minver.c:124
:7  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_26) nounwind

ST_144: StgValue_549 (328)  [1/1] 0.00ns  loc: minver.c:119
:8  br label %15


 <State 145>: 0.00ns
ST_145: StgValue_550 (330)  [1/1] 0.00ns
.preheader.loopexit:0  br label %.preheader


 <State 146>: 0.00ns
ST_146: p_0 (336)  [1/1] 0.00ns
.loopexit9:0  %p_0 = phi i12 [ 999, %0 ], [ undef, %.loopexit9.loopexit ], [ 1, %.loopexit9.loopexit24 ]

ST_146: p_0_cast (337)  [1/1] 0.00ns  loc: minver.c:131
.loopexit9:1  %p_0_cast = sext i12 %p_0 to i32

ST_146: StgValue_553 (338)  [1/1] 0.00ns  loc: minver.c:131
.loopexit9:2  ret i32 %p_0_cast



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.9ns
The critical path consists of the following:
	wire read on port 'eps' [9]  (0 ns)
	'dcmp' operation ('tmp_12', minver.c:47) [23]  (6.9 ns)

 <State 2>: 7.51ns
The critical path consists of the following:
	'icmp' operation ('notrhs1') [21]  (3.19 ns)
	'or' operation ('tmp_8') [22]  (1.37 ns)
	'and' operation ('tmp_13', minver.c:47) [24]  (0 ns)
	'xor' operation ('tmp_17', minver.c:47) [25]  (0 ns)
	'and' operation ('tmp2', minver.c:47) [26]  (0 ns)
	'and' operation ('or_cond7', minver.c:47) [27]  (1.37 ns)
	multiplexor before 'phi' operation ('p_0') [336]  (1.57 ns)

 <State 3>: 2.93ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:51) [32]  (0 ns)
	'icmp' operation ('exitcond6', minver.c:51) [34]  (2.93 ns)

 <State 4>: 2.93ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:55) [48]  (0 ns)
	'icmp' operation ('tmp_3', minver.c:55) [50]  (2.93 ns)

 <State 5>: 4.91ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast', minver.c:57) ('i', minver.c:57) [64]  (0 ns)
	'sub' operation ('tmp_40', minver.c:59) [75]  (1.26 ns)
	'add' operation ('tmp_47', minver.c:59) [76]  (1.26 ns)
	'getelementptr' operation ('minver_a_addr', minver.c:59) [78]  (0 ns)
	'load' operation ('n', minver.c:59) on array 'minver_a' [79]  (2.39 ns)

 <State 6>: 2.39ns
The critical path consists of the following:
	'load' operation ('n', minver.c:59) on array 'minver_a' [79]  (2.39 ns)

 <State 7>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_35', minver_lib.c:11->minver.c:59) [86]  (6.9 ns)
	'and' operation ('tmp_36', minver_lib.c:11->minver.c:59) [87]  (0 ns)
	'select' operation ('w', minver.c:61) [90]  (1.37 ns)

 <State 8>: 9.64ns
The critical path consists of the following:
	'dcmp' operation ('tmp_44', minver.c:60) [104]  (6.9 ns)
	'and' operation ('tmp_45', minver.c:60) [105]  (1.37 ns)
	'select' operation ('wmax', minver.c:60) [107]  (1.37 ns)

 <State 9>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:60) on local variable 'r' [69]  (0 ns)
	'select' operation ('r', minver.c:60) [106]  (1.37 ns)
	'store' operation (minver.c:60) of variable 'r', minver.c:60 on local variable 'r' [110]  (1.57 ns)

 <State 10>: 5.73ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [113]  (0 ns)
	'sub' operation ('tmp_65', minver.c:66) [118]  (1.67 ns)
	'add' operation ('tmp_66', minver.c:66) [119]  (1.67 ns)
	'getelementptr' operation ('minver_a_addr_1', minver.c:66) [121]  (0 ns)
	'load' operation ('pivot', minver.c:66) on array 'minver_a' [122]  (2.39 ns)

 <State 11>: 2.39ns
The critical path consists of the following:
	'load' operation ('pivot', minver.c:66) on array 'minver_a' [122]  (2.39 ns)

 <State 12>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_49', minver_lib.c:11->minver.c:67) [129]  (6.9 ns)
	'and' operation ('tmp_50', minver_lib.c:11->minver.c:67) [130]  (0 ns)
	'select' operation ('api', minver.c:67) [133]  (1.37 ns)

 <State 13>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_58', minver.c:68) [141]  (6.9 ns)
	'and' operation ('tmp_59', minver.c:68) [142]  (1.37 ns)

 <State 14>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_2', minver.c:76) on array 'work', minver.c:42 [151]  (2.71 ns)
	'store' operation (minver.c:76) of variable 'work_load_2', minver.c:76 on array 'work', minver.c:42 [152]  (2.71 ns)

 <State 15>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:77) of variable 'work_load_1', minver.c:75 on array 'work', minver.c:42 [153]  (2.71 ns)

 <State 16>: 4.06ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:78) [156]  (0 ns)
	'add' operation ('tmp_73', minver.c:80) [166]  (1.67 ns)
	'getelementptr' operation ('minver_a_addr_4', minver.c:80) [168]  (0 ns)
	'load' operation ('w', minver.c:80) on array 'minver_a' [172]  (2.39 ns)

 <State 17>: 4.78ns
The critical path consists of the following:
	'load' operation ('minver_a_load_2', minver.c:81) on array 'minver_a' [173]  (2.39 ns)
	'store' operation (minver.c:81) of variable 'minver_a_load_2', minver.c:81 on array 'minver_a' [174]  (2.39 ns)

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:82) of variable 'w', minver.c:80 on array 'minver_a' [175]  (2.39 ns)

 <State 20>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:86) [183]  (1.57 ns)

 <State 21>: 4.06ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:86) [183]  (0 ns)
	'add' operation ('tmp_75', minver.c:88) [193]  (1.67 ns)
	'getelementptr' operation ('minver_a_addr_6', minver.c:88) [195]  (0 ns)
	'load' operation ('minver_a_load_3', minver.c:88) on array 'minver_a' [196]  (2.39 ns)

 <State 22>: 2.39ns
The critical path consists of the following:
	'load' operation ('minver_a_load_3', minver.c:88) on array 'minver_a' [196]  (2.39 ns)

 <State 23>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 24>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 25>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 26>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 27>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 28>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 29>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 30>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 31>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 32>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 33>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 34>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 35>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 36>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 37>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 38>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 39>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 40>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 41>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 42>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 43>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 44>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 45>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 46>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 47>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 48>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 49>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 50>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 51>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 52>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 53>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_14', minver.c:88) [197]  (8.66 ns)

 <State 54>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:88) of variable 'tmp_14', minver.c:88 on array 'minver_a' [198]  (2.39 ns)

 <State 55>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:91) [204]  (1.57 ns)

 <State 56>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 57>: 2.39ns
The critical path consists of the following:
	'load' operation ('w', minver.c:94) on array 'minver_a' [223]  (2.39 ns)

 <State 58>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_63', minver.c:95) [230]  (6.9 ns)
	'and' operation ('tmp_64', minver.c:95) [231]  (1.37 ns)

 <State 59>: 4.06ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:96) [236]  (0 ns)
	'add' operation ('tmp_79', minver.c:97) [247]  (1.67 ns)
	'getelementptr' operation ('minver_a_addr_9', minver.c:97) [249]  (0 ns)
	'load' operation ('minver_a_load_5', minver.c:97) on array 'minver_a' [253]  (2.39 ns)

 <State 60>: 2.39ns
The critical path consists of the following:
	'load' operation ('minver_a_load_5', minver.c:97) on array 'minver_a' [253]  (2.39 ns)

 <State 61>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 62>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 63>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 64>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 65>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 66>: 7.79ns
The critical path consists of the following:
	'dmul' operation ('tmp_23', minver.c:97) [254]  (7.79 ns)

 <State 67>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 68>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 69>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 70>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 71>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 72>: 8.39ns
The critical path consists of the following:
	'dsub' operation ('tmp_24', minver.c:97) [256]  (8.39 ns)

 <State 73>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:97) of variable 'tmp_24', minver.c:97 on array 'minver_a' [257]  (2.39 ns)

 <State 74>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 75>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 76>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 77>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 78>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 79>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 80>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 81>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 82>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 83>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 84>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 85>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 86>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 87>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 88>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 89>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 90>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 91>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 92>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 93>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 94>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 95>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 96>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 97>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 98>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 99>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 100>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 101>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 102>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 103>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 104>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_20', minver.c:99) [264]  (8.66 ns)

 <State 105>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_20', minver.c:99 on array 'minver_a' [265]  (2.39 ns)

 <State 106>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 107>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 108>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 109>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 110>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 111>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 112>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 113>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 114>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 115>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 116>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 117>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 118>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 119>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 120>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 121>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 122>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 123>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 124>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 125>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 126>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 127>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 128>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 129>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 130>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 131>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 132>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 133>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 134>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 135>: 8.66ns
The critical path consists of the following:
	'ddiv' operation ('tmp_15', minver.c:103) [273]  (8.66 ns)

 <State 136>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:103) of variable 'tmp_15', minver.c:103 on array 'minver_a' [274]  (2.39 ns)

 <State 137>: 2.93ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:127) [281]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:107) [283]  (2.93 ns)

 <State 138>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:111) on array 'work', minver.c:42 [293]  (2.71 ns)

 <State 139>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:111) on array 'work', minver.c:42 [293]  (2.71 ns)
	'getelementptr' operation ('work_addr_4', minver.c:115) [308]  (0 ns)
	'load' operation ('work_load_3', minver.c:115) on array 'work', minver.c:42 [309]  (2.71 ns)

 <State 140>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:115) on array 'work', minver.c:42 [309]  (2.71 ns)

 <State 141>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:117) of variable 'work_load_3', minver.c:115 on array 'work', minver.c:42 [311]  (2.71 ns)

 <State 142>: 2.93ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:119) [314]  (0 ns)
	'icmp' operation ('exitcond', minver.c:119) [316]  (2.93 ns)

 <State 143>: 4.78ns
The critical path consists of the following:
	'load' operation ('minver_a_load', minver.c:122) on array 'minver_a' [324]  (2.39 ns)
	'store' operation (minver.c:122) of variable 'minver_a_load', minver.c:122 on array 'minver_a' [325]  (2.39 ns)

 <State 144>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:123) of variable 'w', minver.c:121 on array 'minver_a' [326]  (2.39 ns)

 <State 145>: 0ns
The critical path consists of the following:

 <State 146>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
