-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_EN_A : OUT STD_LOGIC;
    a_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_Clk_A : OUT STD_LOGIC;
    a_Rst_A : OUT STD_LOGIC;
    b_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_EN_A : OUT STD_LOGIC;
    b_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_Clk_A : OUT STD_LOGIC;
    b_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=91,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1142,HLS_SYN_LUT=1102}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv61_1 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_176 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_187 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_198 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_sel_tmp_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sel_tmp2_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_sel_tmp4_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_240_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_773 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_258_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_778 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_v_fu_266_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_v_reg_787 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_274_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_792 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_load_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_load_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_1_reg_849 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_load_1_reg_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_464_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_47_reg_873 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp2_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_sel_tmp2_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sel_tmp2_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_2_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_load_2_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_558_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_897 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal sel_tmp4_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sel_tmp4_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sel_tmp4_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sel_tmp4_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_3_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_load_3_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_1_reg_926 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_9_1_reg_926 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_sel_tmp6_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_2_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_9_2_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_9_2_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_9_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_9_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_9_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_9_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_739_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_946 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_s_reg_946 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_fu_746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_fu_752_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_180_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_191_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_202_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_297_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_325_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_334_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_438_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_cast_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_cast_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_209_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_225_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_246_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_292_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_cast_fu_306_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_41_fu_309_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_fu_320_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_load_to_int_fu_342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_345_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_load_to_int_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_386_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_396_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_433_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_cast3_fu_450_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_46_fu_453_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_45_cast_fu_430_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_cast4_fu_447_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_load_1_to_int_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_473_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_483_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_load_1_to_int_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_514_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_524_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_2_to_int_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_566_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_fu_576_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_load_2_to_int_fu_604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_607_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_617_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_3_to_int_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_654_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_664_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs6_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_load_3_to_int_fu_692_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_695_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_705_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs7_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs7_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component matmul_hw_fadd_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fcmp_32dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    matmul_hw_fadd_32bkb_U1 : component matmul_hw_fadd_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_209_p0,
        din1 => grp_fu_209_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_209_p2);

    matmul_hw_fmul_32cud_U2 : component matmul_hw_fmul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_Dout_A,
        din1 => b_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_214_p2);

    matmul_hw_fcmp_32dEe_U3 : component matmul_hw_fcmp_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_220_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => grp_fu_220_p2);

    matmul_hw_fcmp_32dEe_U4 : component matmul_hw_fcmp_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_225_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => grp_fu_225_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_234_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_flatten_reg_769 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_187 <= tmp_mid2_v_reg_787;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_187 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_176 <= indvar_flatten_next_reg_773;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_176 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_198 <= j_1_reg_897;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_198 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                a_load_1_reg_849 <= a_Dout_A;
                b_load_1_reg_856 <= b_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                a_load_2_reg_883 <= a_Dout_A;
                b_load_2_reg_890 <= b_Dout_A;
                j_1_reg_897 <= j_1_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_load_3_reg_912 <= a_Dout_A;
                b_load_3_reg_919 <= b_Dout_A;
                tmp_9_reg_902 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                a_load_reg_820 <= a_Dout_A;
                b_load_reg_827 <= b_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769 <= exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter2_sel_tmp4_reg_907 <= sel_tmp4_reg_907;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter3_sel_tmp4_reg_907 <= ap_pipeline_reg_pp0_iter2_sel_tmp4_reg_907;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter4_sel_tmp4_reg_907 <= ap_pipeline_reg_pp0_iter3_sel_tmp4_reg_907;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter5_sel_tmp4_reg_907 <= ap_pipeline_reg_pp0_iter4_sel_tmp4_reg_907;
                ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_952 <= tmp_1_1_reg_952;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_769;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_769 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_769;
                exitcond_flatten_reg_769 <= exitcond_flatten_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter1_sel_tmp2_reg_878 <= sel_tmp2_reg_878;
                ap_pipeline_reg_pp0_iter1_tmp_47_reg_873 <= tmp_47_reg_873;
                ap_pipeline_reg_pp0_iter2_sel_tmp2_reg_878 <= ap_pipeline_reg_pp0_iter1_sel_tmp2_reg_878;
                ap_pipeline_reg_pp0_iter2_tmp_47_reg_873 <= ap_pipeline_reg_pp0_iter1_tmp_47_reg_873;
                ap_pipeline_reg_pp0_iter2_tmp_9_3_reg_941 <= tmp_9_3_reg_941;
                ap_pipeline_reg_pp0_iter3_sel_tmp2_reg_878 <= ap_pipeline_reg_pp0_iter2_sel_tmp2_reg_878;
                ap_pipeline_reg_pp0_iter3_tmp_47_reg_873 <= ap_pipeline_reg_pp0_iter2_tmp_47_reg_873;
                ap_pipeline_reg_pp0_iter3_tmp_9_3_reg_941 <= ap_pipeline_reg_pp0_iter2_tmp_9_3_reg_941;
                ap_pipeline_reg_pp0_iter4_tmp_47_reg_873 <= ap_pipeline_reg_pp0_iter3_tmp_47_reg_873;
                ap_pipeline_reg_pp0_iter4_tmp_9_3_reg_941 <= ap_pipeline_reg_pp0_iter3_tmp_9_3_reg_941;
                ap_pipeline_reg_pp0_iter5_tmp_47_reg_873 <= ap_pipeline_reg_pp0_iter4_tmp_47_reg_873;
                ap_pipeline_reg_pp0_iter5_tmp_9_3_reg_941 <= ap_pipeline_reg_pp0_iter4_tmp_9_3_reg_941;
                ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_958 <= tmp_1_2_reg_958;
                ap_pipeline_reg_pp0_iter6_tmp_47_reg_873 <= ap_pipeline_reg_pp0_iter5_tmp_47_reg_873;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter1_sel_tmp_reg_844 <= sel_tmp_reg_844;
                ap_pipeline_reg_pp0_iter2_tmp_9_2_reg_936 <= tmp_9_2_reg_936;
                ap_pipeline_reg_pp0_iter3_tmp_9_2_reg_936 <= ap_pipeline_reg_pp0_iter2_tmp_9_2_reg_936;
                ap_pipeline_reg_pp0_iter3_tmp_s_reg_946 <= tmp_s_reg_946;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_sel_tmp6_reg_931 <= sel_tmp6_reg_931;
                ap_pipeline_reg_pp0_iter2_tmp_9_1_reg_926 <= tmp_9_1_reg_926;
                ap_pipeline_reg_pp0_iter3_sel_tmp6_reg_931 <= ap_pipeline_reg_pp0_iter2_sel_tmp6_reg_931;
                ap_pipeline_reg_pp0_iter4_sel_tmp6_reg_931 <= ap_pipeline_reg_pp0_iter3_sel_tmp6_reg_931;
                ap_pipeline_reg_pp0_iter5_sel_tmp6_reg_931 <= ap_pipeline_reg_pp0_iter4_sel_tmp6_reg_931;
                ap_pipeline_reg_pp0_iter6_sel_tmp6_reg_931 <= ap_pipeline_reg_pp0_iter5_sel_tmp6_reg_931;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_773 <= indvar_flatten_next_fu_240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_234_p2))) then
                j_mid2_reg_778 <= j_mid2_fu_258_p3;
                    tmp_reg_792(4 downto 2) <= tmp_fu_274_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_sel_tmp_reg_844)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_769) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_sel_tmp2_reg_878)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_769) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_sel_tmp4_reg_907)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_769) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_sel_tmp6_reg_931)))) then
                reg_230 <= grp_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                sel_tmp2_reg_878 <= sel_tmp2_fu_552_p2;
                tmp_47_reg_873 <= tmp_47_fu_464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                sel_tmp4_reg_907 <= sel_tmp4_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769))) then
                sel_tmp6_reg_931 <= sel_tmp6_fu_733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_769 = ap_const_lv1_0))) then
                sel_tmp_reg_844 <= sel_tmp_fu_424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_769) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_1_reg_952 <= tmp_1_1_fu_746_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_769))) then
                tmp_1_2_reg_958 <= tmp_1_2_fu_752_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769))) then
                tmp_9_1_reg_926 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769))) then
                tmp_9_2_reg_936 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_769))) then
                tmp_9_3_reg_941 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_234_p2))) then
                tmp_mid2_v_reg_787 <= tmp_mid2_v_fu_266_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_s_reg_946 <= tmp_s_fu_739_p3;
            end if;
        end if;
    end process;
    tmp_reg_792(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter7, exitcond_flatten_fu_234_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_234_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter6))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    a_Addr_A <= std_logic_vector(shift_left(unsigned(a_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_5_fu_282_p1, tmp_16_fu_297_p3, tmp_26_fu_325_p3, tmp_36_fu_438_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_Addr_A_orig <= tmp_36_fu_438_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_Addr_A_orig <= tmp_26_fu_325_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_Addr_A_orig <= tmp_16_fu_297_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_Addr_A_orig <= tmp_5_fu_282_p1(32 - 1 downto 0);
            else 
                a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_Clk_A <= ap_clk;
    a_Din_A <= ap_const_lv32_0;

    a_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)))) then 
            a_EN_A <= ap_const_logic_1;
        else 
            a_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_Rst_A <= ap_rst;
    a_WEN_A <= ap_const_lv4_0;
    a_load_1_to_int_fu_470_p1 <= a_load_1_reg_849;
    a_load_2_to_int_fu_563_p1 <= a_load_2_reg_883;
    a_load_3_to_int_fu_651_p1 <= a_load_3_reg_912;
    a_load_to_int_fu_342_p1 <= a_load_reg_820;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state32 <= ap_CS_fsm(5 downto 5);

    ap_done_assign_proc : process(ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_Addr_A <= std_logic_vector(shift_left(unsigned(b_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_3_fu_287_p1, tmp_52_cast_fu_315_p1, tmp_45_fu_334_p3, tmp_54_cast_fu_459_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_Addr_A_orig <= tmp_54_cast_fu_459_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_Addr_A_orig <= tmp_45_fu_334_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_Addr_A_orig <= tmp_52_cast_fu_315_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_Addr_A_orig <= tmp_3_fu_287_p1(32 - 1 downto 0);
            else 
                b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_Clk_A <= ap_clk;
    b_Din_A <= ap_const_lv32_0;

    b_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)))) then 
            b_EN_A <= ap_const_logic_1;
        else 
            b_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_Rst_A <= ap_rst;
    b_WEN_A <= ap_const_lv4_0;
    b_load_1_to_int_fu_511_p1 <= b_load_1_reg_856;
    b_load_2_to_int_fu_604_p1 <= b_load_2_reg_890;
    b_load_3_to_int_fu_692_p1 <= b_load_3_reg_919;
    b_load_to_int_fu_383_p1 <= b_load_reg_827;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_55_cast_fu_758_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= 
        ap_pipeline_reg_pp0_iter6_tmp_1_2_reg_958 when (ap_pipeline_reg_pp0_iter6_sel_tmp6_reg_931(0) = '1') else 
        reg_230;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_769)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_769)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_234_p2 <= "1" when (indvar_flatten_phi_fu_180_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_252_p2 <= "1" when (j_phi_fu_202_p4 = ap_const_lv3_4) else "0";

    grp_fu_209_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, tmp_9_reg_902, ap_enable_reg_pp0_iter1, tmp_s_reg_946, tmp_1_1_reg_952, tmp_1_2_reg_958, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_209_p0 <= tmp_1_2_reg_958;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_209_p0 <= tmp_1_1_reg_952;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_209_p0 <= tmp_s_reg_946;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_209_p0 <= tmp_9_reg_902;
        else 
            grp_fu_209_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_209_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter2_tmp_9_1_reg_926, ap_pipeline_reg_pp0_iter3_tmp_9_2_reg_936, ap_pipeline_reg_pp0_iter5_tmp_9_3_reg_941, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_209_p1 <= ap_pipeline_reg_pp0_iter5_tmp_9_3_reg_941;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_209_p1 <= ap_pipeline_reg_pp0_iter3_tmp_9_2_reg_936;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_209_p1 <= ap_pipeline_reg_pp0_iter2_tmp_9_1_reg_926;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_209_p1 <= ap_const_lv32_0;
        else 
            grp_fu_209_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_220_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, a_load_reg_820, a_load_1_reg_849, a_load_2_reg_883, ap_enable_reg_pp0_iter1, a_load_3_reg_912)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_220_p0 <= a_load_3_reg_912;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_220_p0 <= a_load_2_reg_883;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_220_p0 <= a_load_1_reg_849;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_220_p0 <= a_load_reg_820;
        else 
            grp_fu_220_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_225_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, b_load_reg_827, b_load_1_reg_856, b_load_2_reg_890, ap_enable_reg_pp0_iter1, b_load_3_reg_919)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_225_p0 <= b_load_3_reg_919;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_225_p0 <= b_load_2_reg_890;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_225_p0 <= b_load_1_reg_856;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_225_p0 <= b_load_reg_827;
        else 
            grp_fu_225_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_246_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_191_p4));

    i_phi_fu_191_p4_assign_proc : process(i_reg_187, exitcond_flatten_reg_769, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_787, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_191_p4 <= tmp_mid2_v_reg_787;
        else 
            i_phi_fu_191_p4 <= i_reg_187;
        end if; 
    end process;

    indvar_flatten_next_fu_240_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_180_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_180_p4_assign_proc : process(indvar_flatten_reg_176, exitcond_flatten_reg_769, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_773, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_180_p4 <= indvar_flatten_next_reg_773;
        else 
            indvar_flatten_phi_fu_180_p4 <= indvar_flatten_reg_176;
        end if; 
    end process;

    j_1_fu_558_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_778));
    j_mid2_fu_258_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_252_p2(0) = '1') else 
        j_phi_fu_202_p4;

    j_phi_fu_202_p4_assign_proc : process(j_reg_198, exitcond_flatten_reg_769, ap_CS_fsm_pp0_stage0, j_1_reg_897, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_769 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_202_p4 <= j_1_reg_897;
        else 
            j_phi_fu_202_p4 <= j_reg_198;
        end if; 
    end process;

    notlhs1_fu_400_p2 <= "0" when (tmp_10_fu_386_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_487_p2 <= "0" when (tmp_15_fu_473_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_528_p2 <= "0" when (tmp_20_fu_514_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_580_p2 <= "0" when (tmp_25_fu_566_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_621_p2 <= "0" when (tmp_30_fu_607_p4 = ap_const_lv8_FF) else "1";
    notlhs6_fu_668_p2 <= "0" when (tmp_35_fu_654_p4 = ap_const_lv8_FF) else "1";
    notlhs7_fu_709_p2 <= "0" when (tmp_40_fu_695_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_359_p2 <= "0" when (tmp_4_fu_345_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_406_p2 <= "1" when (tmp_49_fu_396_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_493_p2 <= "1" when (tmp_50_fu_483_p1 = ap_const_lv23_0) else "0";
    notrhs3_fu_534_p2 <= "1" when (tmp_51_fu_524_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_586_p2 <= "1" when (tmp_52_fu_576_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_627_p2 <= "1" when (tmp_53_fu_617_p1 = ap_const_lv23_0) else "0";
    notrhs6_fu_674_p2 <= "1" when (tmp_54_fu_664_p1 = ap_const_lv23_0) else "0";
    notrhs7_fu_715_p2 <= "1" when (tmp_55_fu_705_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_365_p2 <= "1" when (tmp_48_fu_355_p1 = ap_const_lv23_0) else "0";
    sel_tmp2_fu_552_p2 <= (tmp_19_fu_505_p2 or tmp_24_fu_546_p2);
    sel_tmp4_fu_645_p2 <= (tmp_29_fu_598_p2 or tmp_34_fu_639_p2);
    sel_tmp6_fu_733_p2 <= (tmp_39_fu_686_p2 or tmp_44_fu_727_p2);
    sel_tmp_fu_424_p2 <= (tmp_8_fu_377_p2 or tmp_14_fu_418_p2);
    tmp_10_fu_386_p4 <= b_load_to_int_fu_383_p1(30 downto 23);
    tmp_11_fu_292_p2 <= (tmp_reg_792 or ap_const_lv5_1);
    tmp_12_fu_412_p2 <= (notrhs1_fu_406_p2 or notlhs1_fu_400_p2);
    tmp_14_fu_418_p2 <= (tmp_12_fu_412_p2 and grp_fu_225_p2);
    tmp_15_fu_473_p4 <= a_load_1_to_int_fu_470_p1(30 downto 23);
    tmp_16_fu_297_p3 <= (ap_const_lv59_0 & tmp_11_fu_292_p2);
    tmp_17_fu_499_p2 <= (notrhs2_fu_493_p2 or notlhs2_fu_487_p2);
    tmp_19_fu_505_p2 <= (tmp_17_fu_499_p2 and grp_fu_220_p2);
    tmp_1_1_fu_746_p3 <= 
        ap_pipeline_reg_pp0_iter3_tmp_s_reg_946 when (ap_pipeline_reg_pp0_iter3_sel_tmp2_reg_878(0) = '1') else 
        reg_230;
    tmp_1_2_fu_752_p3 <= 
        ap_pipeline_reg_pp0_iter5_tmp_1_1_reg_952 when (ap_pipeline_reg_pp0_iter5_sel_tmp4_reg_907(0) = '1') else 
        reg_230;
    tmp_20_fu_514_p4 <= b_load_1_to_int_fu_511_p1(30 downto 23);
    tmp_21_fu_320_p2 <= (tmp_reg_792 or ap_const_lv5_2);
    tmp_22_fu_540_p2 <= (notrhs3_fu_534_p2 or notlhs3_fu_528_p2);
    tmp_24_fu_546_p2 <= (tmp_22_fu_540_p2 and grp_fu_225_p2);
    tmp_25_fu_566_p4 <= a_load_2_to_int_fu_563_p1(30 downto 23);
    tmp_26_fu_325_p3 <= (ap_const_lv59_0 & tmp_21_fu_320_p2);
    tmp_27_fu_592_p2 <= (notrhs4_fu_586_p2 or notlhs4_fu_580_p2);
    tmp_29_fu_598_p2 <= (tmp_27_fu_592_p2 and grp_fu_220_p2);
    tmp_30_fu_607_p4 <= b_load_2_to_int_fu_604_p1(30 downto 23);
    tmp_31_fu_433_p2 <= (tmp_reg_792 or ap_const_lv5_3);
    tmp_32_fu_633_p2 <= (notrhs5_fu_627_p2 or notlhs5_fu_621_p2);
    tmp_34_fu_639_p2 <= (tmp_32_fu_633_p2 and grp_fu_225_p2);
    tmp_35_fu_654_p4 <= a_load_3_to_int_fu_651_p1(30 downto 23);
    tmp_36_fu_438_p3 <= (ap_const_lv59_0 & tmp_31_fu_433_p2);
    tmp_37_fu_680_p2 <= (notrhs6_fu_674_p2 or notlhs6_fu_668_p2);
    tmp_39_fu_686_p2 <= (tmp_37_fu_680_p2 and grp_fu_220_p2);
    tmp_3_cast3_fu_450_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_778),5));
    tmp_3_cast4_fu_447_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_778),6));
    tmp_3_cast_fu_306_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_778),4));
    tmp_3_fu_287_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_258_p3),64));
    tmp_40_fu_695_p4 <= b_load_3_to_int_fu_692_p1(30 downto 23);
    tmp_41_fu_309_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_3_cast_fu_306_p1));
    tmp_42_fu_721_p2 <= (notrhs7_fu_715_p2 or notlhs7_fu_709_p2);
    tmp_44_fu_727_p2 <= (tmp_42_fu_721_p2 and grp_fu_225_p2);
    tmp_45_cast_fu_430_p1 <= std_logic_vector(resize(unsigned(tmp_reg_792),6));
    tmp_45_fu_334_p3 <= (ap_const_lv61_1 & j_mid2_reg_778);
    tmp_46_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_3_cast3_fu_450_p1));
    tmp_47_fu_464_p2 <= std_logic_vector(unsigned(tmp_45_cast_fu_430_p1) + unsigned(tmp_3_cast4_fu_447_p1));
    tmp_48_fu_355_p1 <= a_load_to_int_fu_342_p1(23 - 1 downto 0);
    tmp_49_fu_396_p1 <= b_load_to_int_fu_383_p1(23 - 1 downto 0);
    tmp_4_fu_345_p4 <= a_load_to_int_fu_342_p1(30 downto 23);
    tmp_50_fu_483_p1 <= a_load_1_to_int_fu_470_p1(23 - 1 downto 0);
    tmp_51_fu_524_p1 <= b_load_1_to_int_fu_511_p1(23 - 1 downto 0);
    tmp_52_cast_fu_315_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_309_p2),64));
    tmp_52_fu_576_p1 <= a_load_2_to_int_fu_563_p1(23 - 1 downto 0);
    tmp_53_fu_617_p1 <= b_load_2_to_int_fu_604_p1(23 - 1 downto 0);
    tmp_54_cast_fu_459_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_453_p2),64));
    tmp_54_fu_664_p1 <= a_load_3_to_int_fu_651_p1(23 - 1 downto 0);
    tmp_55_cast_fu_758_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter6_tmp_47_reg_873),64));
    tmp_55_fu_705_p1 <= b_load_3_to_int_fu_692_p1(23 - 1 downto 0);
    tmp_5_fu_282_p1 <= std_logic_vector(resize(unsigned(tmp_fu_274_p3),64));
    tmp_6_fu_371_p2 <= (notrhs_fu_365_p2 or notlhs_fu_359_p2);
    tmp_8_fu_377_p2 <= (tmp_6_fu_371_p2 and grp_fu_220_p2);
    tmp_fu_274_p3 <= (tmp_mid2_v_fu_266_p3 & ap_const_lv2_0);
    tmp_mid2_v_fu_266_p3 <= 
        i_1_fu_246_p2 when (exitcond_fu_252_p2(0) = '1') else 
        i_phi_fu_191_p4;
    tmp_s_fu_739_p3 <= 
        ap_const_lv32_0 when (ap_pipeline_reg_pp0_iter1_sel_tmp_reg_844(0) = '1') else 
        reg_230;
end behav;
