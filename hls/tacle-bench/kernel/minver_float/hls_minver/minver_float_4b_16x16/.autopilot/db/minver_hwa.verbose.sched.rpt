

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Fri Apr 28 10:47:35 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver
* Solution:       minver_float_4b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     11.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+
        |                 |   Latency   |  Iteration |  Initiation Interval  |  Trip  |          |
        |    Loop Name    | min |  max  |   Latency  |  achieved |   target  |  Count | Pipelined|
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+
        |- Loop 1         |   16|     16|           1|          -|          -|      16|    no    |
        |- Loop 2         |  336|  65318| 336 ~ 4082 |          -|          -| 1 ~ 16 |    no    |
        | + Loop 2.1      |    5|     20|           6|          1|          1| 1 ~ 16 |    yes   |
        | + Loop 2.2      |   96|     96|           7|          6|          1|      16|    yes   |
        | + Loop 2.3      |  272|    272|          18|         17|          1|      16|    yes   |
        | + Loop 2.4      |   32|   3664|   2 ~ 229  |          -|          -|      16|    no    |
        |  ++ Loop 2.4.1  |   32|    208|   2 ~ 13   |          -|          -|      16|    no    |
        |- Loop 3         |    ?|      ?|           ?|          -|          -|      16|    no    |
        | + Loop 3.1      |    ?|      ?|         102|          -|          -|       ?|    no    |
        |  ++ Loop 3.1.1  |   96|     96|           7|          6|          1|      16|    yes   |
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6
  * Pipeline-1: initiation interval (II) = 6, depth = 7
  * Pipeline-2: initiation interval (II) = 17, depth = 18
  * Pipeline-3: initiation interval (II) = 6, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 105
* Pipeline: 4
  Pipeline-0: II = 1, D = 6, States = { 4 5 6 7 8 9 }
  Pipeline-1: II = 6, D = 7, States = { 17 18 19 20 21 22 23 }
  Pipeline-2: II = 17, D = 18, States = { 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 }
  Pipeline-3: II = 6, D = 7, States = { 98 99 100 101 102 103 104 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond7)
	3  / (exitcond7)
3 --> 
	4  / (!tmp_2)
	93  / (tmp_2)
4 --> 
	10  / (exitcond6)
	5  / (!exitcond6)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	4  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / (!tmp_2 & !tmp_31 & !tmp_1)
	24  / (!tmp_2 & !tmp_31 & tmp_1)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	24  / (exitcond5)
	18  / (!exitcond5)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	17  / true
24 --> 
	25  / true
25 --> 
	43  / (exitcond4)
	26  / (!exitcond4)
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	25  / true
43 --> 
	44  / true
44 --> 
	77  / (exitcond3)
	45  / (!exitcond3 & !tmp_14)
	76  / (!exitcond3 & tmp_14)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	76  / (tmp_59)
	48  / (!tmp_59)
48 --> 
	61  / (exitcond2)
	49  / (!exitcond2 & !tmp_19)
	60  / (!exitcond2 & tmp_19)
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	48  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	44  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	3  / true
93 --> 
	94  / (!exitcond1)
	14  / (exitcond1)
94 --> 
	95  / true
95 --> 
	96  / (!tmp_8)
	93  / (tmp_8)
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	105  / (exitcond)
	99  / (!exitcond)
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	98  / true
105 --> 
	94  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_106 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_3), !map !17

ST_1: StgValue_107 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_2), !map !24

ST_1: StgValue_108 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_1), !map !30

ST_1: StgValue_109 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_0), !map !36

ST_1: StgValue_110 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !42

ST_1: StgValue_111 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (11)  [1/1] 0.00ns  loc: minver.c:41
:6  %work = alloca [500 x i5], align 1

ST_1: StgValue_113 (12)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecMemCore([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_114 (13)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_115 (14)  [1/1] 0.00ns  loc: minver.c:39
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_116 (15)  [1/1] 1.57ns  loc: minver.c:50
:10  br label %1


 <State 2>: 2.71ns
ST_2: i (17)  [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (18)  [1/1] 2.37ns  loc: minver.c:50
:1  %exitcond7 = icmp eq i5 %i, -16

ST_2: empty (19)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: i_1 (20)  [1/1] 1.67ns  loc: minver.c:50
:3  %i_1 = add i5 %i, 1

ST_2: StgValue_121 (21)  [1/1] 0.00ns  loc: minver.c:50
:4  br i1 %exitcond7, label %.preheader14.preheader, label %2

ST_2: tmp (23)  [1/1] 0.00ns  loc: minver.c:51
:0  %tmp = zext i5 %i to i64

ST_2: work_addr (24)  [1/1] 0.00ns  loc: minver.c:51
:1  %work_addr = getelementptr [500 x i5]* %work, i64 0, i64 %tmp

ST_2: StgValue_124 (25)  [1/1] 2.71ns  loc: minver.c:51
:2  store i5 %i, i5* %work_addr, align 1

ST_2: StgValue_125 (26)  [1/1] 0.00ns  loc: minver.c:50
:3  br label %1

ST_2: r (28)  [1/1] 0.00ns
.preheader14.preheader:0  %r = alloca i32

ST_2: StgValue_127 (29)  [1/1] 1.57ns
.preheader14.preheader:1  store i32 0, i32* %r

ST_2: StgValue_128 (30)  [1/1] 1.57ns  loc: minver.c:54
.preheader14.preheader:2  br label %.preheader14


 <State 3>: 1.67ns
ST_3: i_5 (32)  [1/1] 0.00ns
.preheader14:0  %i_5 = phi i5 [ %k, %20 ], [ 0, %.preheader14.preheader ]

ST_3: tmp_2 (33)  [1/1] 0.00ns  loc: minver.c:54
.preheader14:1  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_5, i32 4)

ST_3: k (34)  [1/1] 1.67ns  loc: minver.c:54
.preheader14:2  %k = add i5 %i_5, 1

ST_3: StgValue_132 (35)  [1/1] 0.00ns  loc: minver.c:54
.preheader14:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader13.preheader

ST_3: i_5_cast (37)  [1/1] 0.00ns  loc: minver.c:56
.preheader13.preheader:0  %i_5_cast = zext i5 %i_5 to i32

ST_3: empty_15 (38)  [1/1] 0.00ns
.preheader13.preheader:1  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 8) nounwind

ST_3: tmp_3 (39)  [1/1] 0.00ns  loc: minver.c:58
.preheader13.preheader:2  %tmp_3 = zext i5 %i_5 to i64

ST_3: tmp_3_cast (40)  [1/1] 0.00ns  loc: minver.c:54
.preheader13.preheader:3  %tmp_3_cast = zext i5 %i_5 to i7

ST_3: StgValue_137 (41)  [1/1] 1.57ns  loc: minver.c:56
.preheader13.preheader:4  br label %.preheader13

ST_3: StgValue_138 (351)  [1/1] 1.57ns  loc: minver.c:105
.preheader8.preheader:0  br label %.preheader8


 <State 4>: 2.93ns
ST_4: wmax (43)  [1/1] 0.00ns
.preheader13:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader13.preheader ]

ST_4: r_1 (44)  [1/1] 0.00ns
.preheader13:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast, %.preheader13.preheader ]

ST_4: exitcond6 (45)  [1/1] 2.93ns  loc: minver.c:56
.preheader13:2  %exitcond6 = icmp eq i32 %r_1, 16

ST_4: StgValue_142 (46)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_4: i_6 (84)  [1/1] 2.39ns  loc: minver.c:56
_ifconv:36  %i_6 = add nsw i32 1, %r_1


 <State 5>: 4.85ns
ST_5: tmp_32 (52)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:4  %tmp_32 = trunc i32 %r_1 to i2

ST_5: arrayNo1_cast (53)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:5  %arrayNo1_cast = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %r_1, i32 2, i32 31)

ST_5: n_assign_s (54)  [2/2] 4.85ns  loc: minver.c:56
_ifconv:6  %n_assign_s = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo1_cast, i2 %tmp_32, i7 %tmp_3_cast)


 <State 6>: 5.45ns
ST_6: n_assign_s (54)  [1/2] 5.45ns  loc: minver.c:56
_ifconv:6  %n_assign_s = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo1_cast, i2 %tmp_32, i7 %tmp_3_cast)


 <State 7>: 7.74ns
ST_7: n_assign_1_to_int (55)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:7  %n_assign_1_to_int = bitcast float %n_assign_s to i32

ST_7: tmp_33 (56)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:8  %tmp_33 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_7: tmp_34 (57)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:9  %tmp_34 = trunc i32 %n_assign_1_to_int to i23

ST_7: notlhs (58)  [1/1] 2.47ns  loc: minver.c:56
_ifconv:10  %notlhs = icmp ne i8 %tmp_33, -1

ST_7: notrhs (59)  [1/1] 2.84ns  loc: minver.c:56
_ifconv:11  %notrhs = icmp eq i23 %tmp_34, 0

ST_7: tmp_35 (60)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node w_4)
_ifconv:12  %tmp_35 = or i1 %notrhs, %notlhs

ST_7: tmp_36 (61)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:58
_ifconv:13  %tmp_36 = fcmp oge float %n_assign_s, 0.000000e+00

ST_7: tmp_37 (62)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:58 (grouped into LUT with out node w_4)
_ifconv:14  %tmp_37 = and i1 %tmp_35, %tmp_36

ST_7: f_neg_i (63)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:58 (grouped into LUT with out node w_4)
_ifconv:15  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_7: f_1 (64)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:58 (grouped into LUT with out node w_4)
_ifconv:16  %f_1 = bitcast i32 %f_neg_i to float

ST_7: w_4 (65)  [1/1] 1.37ns  loc: minver.c:60 (out node of the LUT)
_ifconv:17  %w_4 = select i1 %tmp_37, float %n_assign_s, float %f_1


 <State 8>: 7.74ns
ST_8: w_4_to_int (66)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:18  %w_4_to_int = bitcast float %w_4 to i32

ST_8: tmp_38 (67)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:19  %tmp_38 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_4_to_int, i32 23, i32 30)

ST_8: tmp_39 (68)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:20  %tmp_39 = trunc i32 %w_4_to_int to i23

ST_8: wmax_to_int (69)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:21  %wmax_to_int = bitcast float %wmax to i32

ST_8: tmp_40 (70)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:22  %tmp_40 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_8: tmp_41 (71)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:23  %tmp_41 = trunc i32 %wmax_to_int to i23

ST_8: notlhs3 (72)  [1/1] 2.47ns  loc: minver.c:60
_ifconv:24  %notlhs3 = icmp ne i8 %tmp_38, -1

ST_8: notrhs3 (73)  [1/1] 2.84ns  loc: minver.c:60
_ifconv:25  %notrhs3 = icmp eq i23 %tmp_39, 0

ST_8: tmp_42 (74)  [1/1] 0.00ns  loc: minver.c:60 (grouped into LUT with out node tmp_46)
_ifconv:26  %tmp_42 = or i1 %notrhs3, %notlhs3

ST_8: notlhs4 (75)  [1/1] 2.47ns  loc: minver.c:59
_ifconv:27  %notlhs4 = icmp ne i8 %tmp_40, -1

ST_8: notrhs4 (76)  [1/1] 2.84ns  loc: minver.c:59
_ifconv:28  %notrhs4 = icmp eq i23 %tmp_41, 0

ST_8: tmp_43 (77)  [1/1] 0.00ns  loc: minver.c:59 (grouped into LUT with out node tmp_46)
_ifconv:29  %tmp_43 = or i1 %notrhs4, %notlhs4

ST_8: tmp_44 (78)  [1/1] 0.00ns  loc: minver.c:60 (grouped into LUT with out node tmp_46)
_ifconv:30  %tmp_44 = and i1 %tmp_42, %tmp_43

ST_8: tmp_45 (79)  [1/1] 6.37ns  loc: minver.c:59
_ifconv:31  %tmp_45 = fcmp ogt float %w_4, %wmax

ST_8: tmp_46 (80)  [1/1] 1.37ns  loc: minver.c:59 (out node of the LUT)
_ifconv:32  %tmp_46 = and i1 %tmp_44, %tmp_45


 <State 9>: 2.94ns
ST_9: r_load_1 (48)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:0  %r_load_1 = load i32* %r

ST_9: empty_16 (49)  [1/1] 0.00ns
_ifconv:1  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 0) nounwind

ST_9: tmp_16 (50)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:2  %tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_9: StgValue_177 (51)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_9: wmax_1 (81)  [1/1] 1.37ns  loc: minver.c:59
_ifconv:33  %wmax_1 = select i1 %tmp_46, float %w_4, float %wmax

ST_9: r_2 (82)  [1/1] 1.37ns  loc: minver.c:59
_ifconv:34  %r_2 = select i1 %tmp_46, i32 %r_1, i32 %r_load_1

ST_9: empty_17 (83)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:35  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_16) nounwind

ST_9: StgValue_181 (85)  [1/1] 1.57ns  loc: minver.c:59
_ifconv:37  store i32 %r_2, i32* %r

ST_9: StgValue_182 (86)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:38  br label %.preheader13


 <State 10>: 4.85ns
ST_10: r_load (88)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_10: arrayNo_cast (90)  [1/1] 0.00ns
_ifconv1:2  %arrayNo_cast = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %r_load, i32 2, i32 31)

ST_10: tmp_9 (91)  [1/1] 0.00ns
_ifconv1:3  %tmp_9 = trunc i32 %r_load to i2

ST_10: pivot (94)  [2/2] 4.85ns  loc: minver.c:54
_ifconv1:6  %pivot = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo_cast, i2 %tmp_9, i7 %tmp_3_cast)


 <State 11>: 5.45ns
ST_11: pivot (94)  [1/2] 5.45ns  loc: minver.c:54
_ifconv1:6  %pivot = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo_cast, i2 %tmp_9, i7 %tmp_3_cast)


 <State 12>: 7.74ns
ST_12: pivot_to_int (95)  [1/1] 0.00ns  loc: minver.c:54
_ifconv1:7  %pivot_to_int = bitcast float %pivot to i32

ST_12: tmp_6 (96)  [1/1] 0.00ns  loc: minver.c:54
_ifconv1:8  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_12: tmp_11 (97)  [1/1] 0.00ns  loc: minver.c:54
_ifconv1:9  %tmp_11 = trunc i32 %pivot_to_int to i23

ST_12: notlhs1 (98)  [1/1] 2.47ns  loc: minver.c:54
_ifconv1:10  %notlhs1 = icmp ne i8 %tmp_6, -1

ST_12: notrhs1 (99)  [1/1] 2.84ns  loc: minver.c:54
_ifconv1:11  %notrhs1 = icmp eq i23 %tmp_11, 0

ST_12: tmp_15 (100)  [1/1] 0.00ns  loc: minver.c:54 (grouped into LUT with out node api)
_ifconv1:12  %tmp_15 = or i1 %notrhs1, %notlhs1

ST_12: tmp_20 (101)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:66
_ifconv1:13  %tmp_20 = fcmp oge float %pivot, 0.000000e+00

ST_12: tmp_23 (102)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:66 (grouped into LUT with out node api)
_ifconv1:14  %tmp_23 = and i1 %tmp_15, %tmp_20

ST_12: f_neg_i1 (103)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:66 (grouped into LUT with out node api)
_ifconv1:15  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_12: f (104)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:66 (grouped into LUT with out node api)
_ifconv1:16  %f = bitcast i32 %f_neg_i1 to float

ST_12: api (105)  [1/1] 1.37ns  loc: minver.c:66 (out node of the LUT)
_ifconv1:17  %api = select i1 %tmp_23, float %pivot, float %f


 <State 13>: 5.12ns
ST_13: tmp_5 (106)  [1/1] 5.12ns  loc: minver.c:67
_ifconv1:18  %tmp_5 = fpext float %api to double


 <State 14>: 8.27ns
ST_14: tmp_4 (89)  [1/1] 0.00ns  loc: minver.c:65
_ifconv1:1  %tmp_4 = sext i32 %r_load to i64

ST_14: tmp_10 (92)  [1/1] 0.00ns
_ifconv1:4  %tmp_10 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_9, i4 0)

ST_14: tmp_29_cast (93)  [1/1] 0.00ns
_ifconv1:5  %tmp_29_cast = zext i6 %tmp_10 to i7

ST_14: tmp_5_to_int (107)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:19  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_14: tmp_25 (108)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:20  %tmp_25 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_14: tmp_27 (109)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:21  %tmp_27 = trunc i64 %tmp_5_to_int to i52

ST_14: notlhs2 (110)  [1/1] 2.58ns  loc: minver.c:67
_ifconv1:22  %notlhs2 = icmp ne i11 %tmp_25, -1

ST_14: notrhs2 (111)  [1/1] 3.19ns  loc: minver.c:67
_ifconv1:23  %notrhs2 = icmp eq i52 %tmp_27, 0

ST_14: tmp_29 (112)  [1/1] 0.00ns  loc: minver.c:67 (grouped into LUT with out node tmp_31)
_ifconv1:24  %tmp_29 = or i1 %notrhs2, %notlhs2

ST_14: tmp_30 (113)  [1/1] 6.90ns  loc: minver.c:67
_ifconv1:25  %tmp_30 = fcmp ole double %tmp_5, 1.000000e-06

ST_14: tmp_31 (114)  [1/1] 1.37ns  loc: minver.c:67 (out node of the LUT)
_ifconv1:26  %tmp_31 = and i1 %tmp_29, %tmp_30

ST_14: StgValue_211 (115)  [1/1] 0.00ns  loc: minver.c:67
_ifconv1:27  br i1 %tmp_31, label %.loopexit9.loopexit38, label %3

ST_14: tmp_1 (117)  [1/1] 2.93ns  loc: minver.c:72
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast

ST_14: StgValue_213 (118)  [1/1] 0.00ns  loc: minver.c:72
:1  br i1 %tmp_1, label %.loopexit12, label %4

ST_14: work_addr_3 (120)  [1/1] 0.00ns  loc: minver.c:74
:0  %work_addr_3 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_3

ST_14: work_load_2 (121)  [2/2] 2.71ns  loc: minver.c:74
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_14: work_addr_4 (122)  [1/1] 0.00ns  loc: minver.c:75
:2  %work_addr_4 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_4

ST_14: work_load_3 (123)  [2/2] 2.71ns  loc: minver.c:75
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_14: StgValue_218 (349)  [1/1] 0.00ns
.loopexit9.loopexit38:0  br label %.loopexit9

ST_14: StgValue_219 (430)  [1/1] 0.00ns  loc: minver.c:129
.loopexit9:0  ret i32 1


 <State 15>: 5.42ns
ST_15: work_load_2 (121)  [1/2] 2.71ns  loc: minver.c:74
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_15: work_load_3 (123)  [1/2] 2.71ns  loc: minver.c:75
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_15: StgValue_222 (124)  [1/1] 2.71ns  loc: minver.c:75
:4  store i5 %work_load_3, i5* %work_addr_3, align 1


 <State 16>: 2.71ns
ST_16: StgValue_223 (125)  [1/1] 2.71ns  loc: minver.c:76
:5  store i5 %work_load_2, i5* %work_addr_4, align 1

ST_16: arrayNo2 (126)  [1/1] 0.00ns  loc: minver.c:54
:6  %arrayNo2 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_5, i32 2, i32 4)

ST_16: tmp_54 (127)  [1/1] 0.00ns  loc: minver.c:54
:7  %tmp_54 = trunc i5 %i_5 to i2

ST_16: tmp_51 (128)  [1/1] 0.00ns  loc: minver.c:54
:8  %tmp_51 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_54, i4 0)

ST_16: tmp_52_cast (129)  [1/1] 0.00ns  loc: minver.c:54
:9  %tmp_52_cast = zext i6 %tmp_51 to i7

ST_16: arrayNo2_cast_cast (130)  [1/1] 0.00ns  loc: minver.c:54
:10  %arrayNo2_cast_cast = zext i3 %arrayNo2 to i30

ST_16: StgValue_229 (131)  [1/1] 1.57ns  loc: minver.c:77
:11  br label %5


 <State 17>: 2.37ns
ST_17: j (133)  [1/1] 0.00ns
:0  %j = phi i5 [ 0, %4 ], [ %j_3, %8 ]

ST_17: exitcond5 (134)  [1/1] 2.37ns  loc: minver.c:77
:1  %exitcond5 = icmp eq i5 %j, -16

ST_17: j_3 (135)  [1/1] 1.67ns  loc: minver.c:77
:2  %j_3 = add i5 %j, 1

ST_17: StgValue_233 (136)  [1/1] 0.00ns  loc: minver.c:77
:3  br i1 %exitcond5, label %.loopexit12.loopexit, label %6

ST_17: tmp_26 (139)  [1/1] 0.00ns  loc: minver.c:77
:1  %tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_17: tmp_10_cast (141)  [1/1] 0.00ns  loc: minver.c:79
:3  %tmp_10_cast = zext i5 %j to i7

ST_17: StgValue_236 (156)  [1/1] 2.33ns  loc: minver.c:80
:18  switch i3 %arrayNo2, label %branch31 [
    i3 0, label %branch28
    i3 1, label %branch29
    i3 2, label %branch30
  ]

ST_17: StgValue_237 (170)  [1/1] 2.33ns  loc: minver.c:81
:0  switch i30 %arrayNo_cast, label %branch27 [
    i30 0, label %branch24
    i30 1, label %branch25
    i30 2, label %branch26
  ]

ST_17: empty_19 (184)  [1/1] 0.00ns  loc: minver.c:82
:0  %empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_26) nounwind

ST_17: StgValue_239 (185)  [1/1] 0.00ns  loc: minver.c:77
:1  br label %5


 <State 18>: 4.85ns
ST_18: w (154)  [2/2] 4.85ns  loc: minver.c:54
:16  %w = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo2_cast_cast, i2 %tmp_54, i7 %tmp_10_cast)


 <State 19>: 5.45ns
ST_19: w (154)  [1/2] 5.45ns  loc: minver.c:54
:16  %w = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo2_cast_cast, i2 %tmp_54, i7 %tmp_10_cast)


 <State 20>: 4.85ns
ST_20: tmp_62 (155)  [2/2] 4.85ns  loc: minver.c:79
:17  %tmp_62 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo_cast, i2 %tmp_9, i7 %tmp_10_cast)


 <State 21>: 5.45ns
ST_21: tmp_62 (155)  [1/2] 5.45ns  loc: minver.c:79
:17  %tmp_62 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo_cast, i2 %tmp_9, i7 %tmp_10_cast)


 <State 22>: 4.38ns
ST_22: tmp_60 (142)  [1/1] 1.67ns  loc: minver.c:79
:4  %tmp_60 = add i7 %tmp_52_cast, %tmp_10_cast

ST_22: tmp_65_cast (143)  [1/1] 0.00ns  loc: minver.c:79
:5  %tmp_65_cast = zext i7 %tmp_60 to i64

ST_22: a_0_addr_2 (144)  [1/1] 0.00ns  loc: minver.c:79
:6  %a_0_addr_2 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_65_cast

ST_22: tmp_61 (145)  [1/1] 1.67ns  loc: minver.c:80
:7  %tmp_61 = add i7 %tmp_29_cast, %tmp_10_cast

ST_22: a_1_addr_2 (148)  [1/1] 0.00ns  loc: minver.c:79
:10  %a_1_addr_2 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_65_cast

ST_22: a_2_addr_2 (150)  [1/1] 0.00ns  loc: minver.c:79
:12  %a_2_addr_2 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_65_cast

ST_22: a_3_addr_2 (152)  [1/1] 0.00ns  loc: minver.c:79
:14  %a_3_addr_2 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_65_cast

ST_22: StgValue_251 (158)  [1/1] 2.71ns  loc: minver.c:80
branch30:0  store float %tmp_62, float* %a_2_addr_2, align 4

ST_22: StgValue_252 (159)  [1/1] 0.00ns  loc: minver.c:80
branch30:1  br label %7

ST_22: StgValue_253 (161)  [1/1] 2.71ns  loc: minver.c:80
branch29:0  store float %tmp_62, float* %a_1_addr_2, align 4

ST_22: StgValue_254 (162)  [1/1] 0.00ns  loc: minver.c:80
branch29:1  br label %7

ST_22: StgValue_255 (164)  [1/1] 2.71ns  loc: minver.c:80
branch28:0  store float %tmp_62, float* %a_0_addr_2, align 4

ST_22: StgValue_256 (165)  [1/1] 0.00ns  loc: minver.c:80
branch28:1  br label %7

ST_22: StgValue_257 (167)  [1/1] 2.71ns  loc: minver.c:80
branch31:0  store float %tmp_62, float* %a_3_addr_2, align 4

ST_22: StgValue_258 (168)  [1/1] 0.00ns  loc: minver.c:80
branch31:1  br label %7


 <State 23>: 2.71ns
ST_23: empty_18 (138)  [1/1] 0.00ns
:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_23: StgValue_260 (140)  [1/1] 0.00ns  loc: minver.c:78
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_23: tmp_66_cast (146)  [1/1] 0.00ns  loc: minver.c:80
:8  %tmp_66_cast = zext i7 %tmp_61 to i64

ST_23: a_0_addr_3 (147)  [1/1] 0.00ns  loc: minver.c:80
:9  %a_0_addr_3 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_66_cast

ST_23: a_1_addr_3 (149)  [1/1] 0.00ns  loc: minver.c:80
:11  %a_1_addr_3 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_66_cast

ST_23: a_2_addr_3 (151)  [1/1] 0.00ns  loc: minver.c:80
:13  %a_2_addr_3 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_66_cast

ST_23: a_3_addr_3 (153)  [1/1] 0.00ns  loc: minver.c:80
:15  %a_3_addr_3 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_66_cast

ST_23: StgValue_266 (172)  [1/1] 2.71ns  loc: minver.c:81
branch26:0  store float %w, float* %a_2_addr_3, align 4

ST_23: StgValue_267 (173)  [1/1] 0.00ns  loc: minver.c:81
branch26:1  br label %8

ST_23: StgValue_268 (175)  [1/1] 2.71ns  loc: minver.c:81
branch25:0  store float %w, float* %a_1_addr_3, align 4

ST_23: StgValue_269 (176)  [1/1] 0.00ns  loc: minver.c:81
branch25:1  br label %8

ST_23: StgValue_270 (178)  [1/1] 2.71ns  loc: minver.c:81
branch24:0  store float %w, float* %a_0_addr_3, align 4

ST_23: StgValue_271 (179)  [1/1] 0.00ns  loc: minver.c:81
branch24:1  br label %8

ST_23: StgValue_272 (181)  [1/1] 2.71ns  loc: minver.c:81
branch27:0  store float %w, float* %a_3_addr_3, align 4

ST_23: StgValue_273 (182)  [1/1] 0.00ns  loc: minver.c:81
branch27:1  br label %8


 <State 24>: 1.67ns
ST_24: StgValue_274 (187)  [1/1] 0.00ns
.loopexit12.loopexit:0  br label %.loopexit12

ST_24: arrayNo3 (189)  [1/1] 0.00ns  loc: minver.c:54
.loopexit12:0  %arrayNo3 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_5, i32 2, i32 4)

ST_24: tmp_63 (190)  [1/1] 0.00ns  loc: minver.c:54
.loopexit12:1  %tmp_63 = trunc i5 %i_5 to i2

ST_24: tmp_64 (191)  [1/1] 0.00ns  loc: minver.c:54
.loopexit12:2  %tmp_64 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_63, i4 0)

ST_24: tmp_71_cast (192)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:3  %tmp_71_cast = zext i6 %tmp_64 to i7

ST_24: tmp_65 (193)  [1/1] 1.67ns  loc: minver.c:101
.loopexit12:4  %tmp_65 = add i7 %tmp_71_cast, %tmp_3_cast

ST_24: tmp_72_cast (194)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:5  %tmp_72_cast = zext i7 %tmp_65 to i64

ST_24: a_0_addr_5 (195)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:6  %a_0_addr_5 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_72_cast

ST_24: a_1_addr_5 (196)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:7  %a_1_addr_5 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_72_cast

ST_24: a_2_addr_5 (197)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:8  %a_2_addr_5 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_72_cast

ST_24: a_3_addr_5 (198)  [1/1] 0.00ns  loc: minver.c:101
.loopexit12:9  %a_3_addr_5 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_72_cast

ST_24: arrayNo3_cast_cast1 (199)  [1/1] 0.00ns  loc: minver.c:54
.loopexit12:10  %arrayNo3_cast_cast1 = zext i3 %arrayNo3 to i30

ST_24: StgValue_286 (200)  [1/1] 1.57ns  loc: minver.c:85
.loopexit12:11  br label %9


 <State 25>: 2.37ns
ST_25: i_2 (202)  [1/1] 0.00ns
:0  %i_2 = phi i5 [ 0, %.loopexit12 ], [ %i_8, %11 ]

ST_25: exitcond4 (203)  [1/1] 2.37ns  loc: minver.c:85
:1  %exitcond4 = icmp eq i5 %i_2, -16

ST_25: i_8 (204)  [1/1] 1.67ns  loc: minver.c:85
:2  %i_8 = add i5 %i_2, 1

ST_25: StgValue_290 (205)  [1/1] 0.00ns  loc: minver.c:85
:3  br i1 %exitcond4, label %.preheader11.preheader, label %10

ST_25: tmp_28 (208)  [1/1] 0.00ns  loc: minver.c:85
:1  %tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_25: tmp_11_cast (210)  [1/1] 0.00ns  loc: minver.c:87
:3  %tmp_11_cast = zext i5 %i_2 to i7

ST_25: empty_21 (233)  [1/1] 0.00ns  loc: minver.c:88
:0  %empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_28) nounwind

ST_25: StgValue_294 (234)  [1/1] 0.00ns  loc: minver.c:85
:1  br label %9


 <State 26>: 4.85ns
ST_26: tmp_66 (211)  [1/1] 1.67ns  loc: minver.c:87
:4  %tmp_66 = add i7 %tmp_71_cast, %tmp_11_cast

ST_26: tmp_67 (217)  [2/2] 4.85ns  loc: minver.c:54
:10  %tmp_67 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo3_cast_cast1, i2 %tmp_63, i7 %tmp_11_cast)


 <State 27>: 11.75ns
ST_27: tmp_67 (217)  [1/2] 5.45ns  loc: minver.c:54
:10  %tmp_67 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo3_cast_cast1, i2 %tmp_63, i7 %tmp_11_cast)

ST_27: tmp_12 (218)  [16/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 28>: 6.30ns
ST_28: tmp_12 (218)  [15/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 29>: 6.30ns
ST_29: tmp_12 (218)  [14/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 30>: 6.30ns
ST_30: tmp_12 (218)  [13/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 31>: 6.30ns
ST_31: tmp_12 (218)  [12/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 32>: 6.30ns
ST_32: tmp_12 (218)  [11/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 33>: 6.30ns
ST_33: tmp_12 (218)  [10/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 34>: 6.30ns
ST_34: tmp_12 (218)  [9/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 35>: 6.30ns
ST_35: tmp_12 (218)  [8/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 36>: 6.30ns
ST_36: tmp_12 (218)  [7/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 37>: 6.30ns
ST_37: tmp_12 (218)  [6/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 38>: 6.30ns
ST_38: tmp_12 (218)  [5/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 39>: 6.30ns
ST_39: tmp_12 (218)  [4/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 40>: 6.30ns
ST_40: tmp_12 (218)  [3/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 41>: 6.30ns
ST_41: tmp_12 (218)  [2/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot


 <State 42>: 9.01ns
ST_42: empty_20 (207)  [1/1] 0.00ns
:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_42: StgValue_314 (209)  [1/1] 0.00ns  loc: minver.c:86
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_42: tmp_73_cast (212)  [1/1] 0.00ns  loc: minver.c:87
:5  %tmp_73_cast = zext i7 %tmp_66 to i64

ST_42: a_0_addr_4 (213)  [1/1] 0.00ns  loc: minver.c:87
:6  %a_0_addr_4 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_73_cast

ST_42: a_1_addr_4 (214)  [1/1] 0.00ns  loc: minver.c:87
:7  %a_1_addr_4 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_73_cast

ST_42: a_2_addr_4 (215)  [1/1] 0.00ns  loc: minver.c:87
:8  %a_2_addr_4 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_73_cast

ST_42: a_3_addr_4 (216)  [1/1] 0.00ns  loc: minver.c:87
:9  %a_3_addr_4 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_73_cast

ST_42: tmp_12 (218)  [1/16] 6.30ns  loc: minver.c:87
:11  %tmp_12 = fdiv float %tmp_67, %pivot

ST_42: StgValue_321 (219)  [1/1] 2.33ns  loc: minver.c:87
:12  switch i3 %arrayNo3, label %branch23 [
    i3 0, label %branch20
    i3 1, label %branch21
    i3 2, label %branch22
  ]

ST_42: StgValue_322 (221)  [1/1] 2.71ns  loc: minver.c:87
branch22:0  store float %tmp_12, float* %a_2_addr_4, align 4

ST_42: StgValue_323 (222)  [1/1] 0.00ns  loc: minver.c:87
branch22:1  br label %11

ST_42: StgValue_324 (224)  [1/1] 2.71ns  loc: minver.c:87
branch21:0  store float %tmp_12, float* %a_1_addr_4, align 4

ST_42: StgValue_325 (225)  [1/1] 0.00ns  loc: minver.c:87
branch21:1  br label %11

ST_42: StgValue_326 (227)  [1/1] 2.71ns  loc: minver.c:87
branch20:0  store float %tmp_12, float* %a_0_addr_4, align 4

ST_42: StgValue_327 (228)  [1/1] 0.00ns  loc: minver.c:87
branch20:1  br label %11

ST_42: StgValue_328 (230)  [1/1] 2.71ns  loc: minver.c:87
branch23:0  store float %tmp_12, float* %a_3_addr_4, align 4

ST_42: StgValue_329 (231)  [1/1] 0.00ns  loc: minver.c:87
branch23:1  br label %11


 <State 43>: 1.57ns
ST_43: StgValue_330 (236)  [1/1] 1.57ns  loc: minver.c:90
.preheader11.preheader:0  br label %.preheader11


 <State 44>: 6.30ns
ST_44: i_3 (238)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i5 [ %i_9, %._crit_edge ], [ 0, %.preheader11.preheader ]

ST_44: exitcond3 (239)  [1/1] 2.37ns  loc: minver.c:90
.preheader11:1  %exitcond3 = icmp eq i5 %i_3, -16

ST_44: empty_22 (240)  [1/1] 0.00ns
.preheader11:2  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_44: i_9 (241)  [1/1] 1.67ns  loc: minver.c:90
.preheader11:3  %i_9 = add i5 %i_3, 1

ST_44: StgValue_335 (242)  [1/1] 0.00ns  loc: minver.c:90
.preheader11:4  br i1 %exitcond3, label %19, label %12

ST_44: tmp_14 (244)  [1/1] 2.37ns  loc: minver.c:91
:0  %tmp_14 = icmp eq i5 %i_3, %i_5

ST_44: StgValue_337 (245)  [1/1] 0.00ns  loc: minver.c:91
:1  br i1 %tmp_14, label %._crit_edge, label %13

ST_44: tmp_13 (332)  [16/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 45>: 4.85ns
ST_45: arrayNo5 (247)  [1/1] 0.00ns  loc: minver.c:90
:0  %arrayNo5 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_3, i32 2, i32 4)

ST_45: tmp_68 (248)  [1/1] 0.00ns  loc: minver.c:90
:1  %tmp_68 = trunc i5 %i_3 to i2

ST_45: arrayNo5_cast_cast1 (257)  [1/1] 0.00ns  loc: minver.c:90
:10  %arrayNo5_cast_cast1 = zext i3 %arrayNo5 to i30

ST_45: w_2 (258)  [2/2] 4.85ns  loc: minver.c:90
:11  %w_2 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo5_cast_cast1, i2 %tmp_68, i7 %tmp_3_cast)


 <State 46>: 5.45ns
ST_46: w_2 (258)  [1/2] 5.45ns  loc: minver.c:90
:11  %w_2 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo5_cast_cast1, i2 %tmp_68, i7 %tmp_3_cast)


 <State 47>: 7.74ns
ST_47: tmp_69 (249)  [1/1] 0.00ns  loc: minver.c:90
:2  %tmp_69 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_68, i4 0)

ST_47: tmp_77_cast (250)  [1/1] 0.00ns  loc: minver.c:92
:3  %tmp_77_cast = zext i6 %tmp_69 to i7

ST_47: tmp_70 (251)  [1/1] 1.67ns  loc: minver.c:92
:4  %tmp_70 = add i7 %tmp_77_cast, %tmp_3_cast

ST_47: tmp_78_cast (252)  [1/1] 0.00ns  loc: minver.c:92
:5  %tmp_78_cast = zext i7 %tmp_70 to i64

ST_47: a_0_addr_6 (253)  [1/1] 0.00ns  loc: minver.c:92
:6  %a_0_addr_6 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_78_cast

ST_47: a_1_addr_6 (254)  [1/1] 0.00ns  loc: minver.c:92
:7  %a_1_addr_6 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_78_cast

ST_47: a_2_addr_6 (255)  [1/1] 0.00ns  loc: minver.c:92
:8  %a_2_addr_6 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_78_cast

ST_47: a_3_addr_6 (256)  [1/1] 0.00ns  loc: minver.c:92
:9  %a_3_addr_6 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_78_cast

ST_47: w_2_to_int (259)  [1/1] 0.00ns  loc: minver.c:90
:12  %w_2_to_int = bitcast float %w_2 to i32

ST_47: tmp_55 (260)  [1/1] 0.00ns  loc: minver.c:90
:13  %tmp_55 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_2_to_int, i32 23, i32 30)

ST_47: tmp_71 (261)  [1/1] 0.00ns  loc: minver.c:90
:14  %tmp_71 = trunc i32 %w_2_to_int to i23

ST_47: notlhs5 (262)  [1/1] 2.47ns  loc: minver.c:90
:15  %notlhs5 = icmp ne i8 %tmp_55, -1

ST_47: notrhs5 (263)  [1/1] 2.84ns  loc: minver.c:90
:16  %notrhs5 = icmp eq i23 %tmp_71, 0

ST_47: tmp_57 (264)  [1/1] 0.00ns  loc: minver.c:90 (grouped into LUT with out node tmp_59)
:17  %tmp_57 = or i1 %notrhs5, %notlhs5

ST_47: tmp_58 (265)  [1/1] 6.37ns  loc: minver.c:93
:18  %tmp_58 = fcmp oeq float %w_2, 0.000000e+00

ST_47: tmp_59 (266)  [1/1] 1.37ns  loc: minver.c:93 (out node of the LUT)
:19  %tmp_59 = and i1 %tmp_57, %tmp_58

ST_47: StgValue_360 (267)  [1/1] 0.00ns  loc: minver.c:93
:20  br i1 %tmp_59, label %._crit_edge19, label %.preheader10.preheader

ST_47: StgValue_361 (269)  [1/1] 1.57ns  loc: minver.c:94
.preheader10.preheader:0  br label %.preheader10


 <State 48>: 7.67ns
ST_48: j_1 (271)  [1/1] 0.00ns
.preheader10:0  %j_1 = phi i5 [ %j_5, %._crit_edge20 ], [ 0, %.preheader10.preheader ]

ST_48: exitcond2 (272)  [1/1] 2.37ns  loc: minver.c:94
.preheader10:1  %exitcond2 = icmp eq i5 %j_1, -16

ST_48: empty_23 (273)  [1/1] 0.00ns
.preheader10:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_48: j_5 (274)  [1/1] 1.67ns  loc: minver.c:94
.preheader10:3  %j_5 = add i5 %j_1, 1

ST_48: StgValue_366 (275)  [1/1] 0.00ns  loc: minver.c:94
.preheader10:4  br i1 %exitcond2, label %17, label %14

ST_48: tmp_19 (277)  [1/1] 2.37ns  loc: minver.c:95
:0  %tmp_19 = icmp eq i5 %j_1, %i_5

ST_48: StgValue_368 (278)  [1/1] 0.00ns  loc: minver.c:95
:1  br i1 %tmp_19, label %._crit_edge20, label %15

ST_48: tmp_18_neg (309)  [1/1] 1.37ns  loc: minver.c:97
:0  %tmp_18_neg = xor i32 %w_2_to_int, -2147483648

ST_48: tmp_17 (310)  [1/1] 0.00ns  loc: minver.c:97
:1  %tmp_17 = bitcast i32 %tmp_18_neg to float

ST_48: tmp_18 (311)  [16/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 49>: 4.85ns
ST_49: tmp_20_cast (280)  [1/1] 0.00ns  loc: minver.c:95
:0  %tmp_20_cast = zext i5 %j_1 to i7

ST_49: tmp_73 (287)  [2/2] 4.85ns  loc: minver.c:54
:7  %tmp_73 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo3_cast_cast1, i2 %tmp_63, i7 %tmp_20_cast)


 <State 50>: 5.45ns
ST_50: tmp_73 (287)  [1/2] 5.45ns  loc: minver.c:54
:7  %tmp_73 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo3_cast_cast1, i2 %tmp_63, i7 %tmp_20_cast)


 <State 51>: 5.78ns
ST_51: tmp_72 (281)  [1/1] 1.67ns  loc: minver.c:95
:1  %tmp_72 = add i7 %tmp_77_cast, %tmp_20_cast

ST_51: tmp_21 (288)  [4/4] 5.78ns  loc: minver.c:95
:8  %tmp_21 = fmul float %w_2, %tmp_73

ST_51: tmp_74 (289)  [2/2] 4.85ns  loc: minver.c:90
:9  %tmp_74 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo5_cast_cast1, i2 %tmp_68, i7 %tmp_20_cast)


 <State 52>: 5.78ns
ST_52: tmp_21 (288)  [3/4] 5.78ns  loc: minver.c:95
:8  %tmp_21 = fmul float %w_2, %tmp_73

ST_52: tmp_74 (289)  [1/2] 5.45ns  loc: minver.c:90
:9  %tmp_74 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %arrayNo5_cast_cast1, i2 %tmp_68, i7 %tmp_20_cast)


 <State 53>: 5.78ns
ST_53: tmp_21 (288)  [2/4] 5.78ns  loc: minver.c:95
:8  %tmp_21 = fmul float %w_2, %tmp_73


 <State 54>: 5.78ns
ST_54: tmp_21 (288)  [1/4] 5.78ns  loc: minver.c:95
:8  %tmp_21 = fmul float %w_2, %tmp_73


 <State 55>: 8.26ns
ST_55: tmp_22 (290)  [5/5] 8.26ns  loc: minver.c:95
:10  %tmp_22 = fsub float %tmp_74, %tmp_21


 <State 56>: 8.26ns
ST_56: tmp_22 (290)  [4/5] 8.26ns  loc: minver.c:95
:10  %tmp_22 = fsub float %tmp_74, %tmp_21


 <State 57>: 8.26ns
ST_57: tmp_22 (290)  [3/5] 8.26ns  loc: minver.c:95
:10  %tmp_22 = fsub float %tmp_74, %tmp_21


 <State 58>: 8.26ns
ST_58: tmp_22 (290)  [2/5] 8.26ns  loc: minver.c:95
:10  %tmp_22 = fsub float %tmp_74, %tmp_21


 <State 59>: 8.26ns
ST_59: tmp_79_cast (282)  [1/1] 0.00ns  loc: minver.c:95
:2  %tmp_79_cast = zext i7 %tmp_72 to i64

ST_59: a_0_addr_7 (283)  [1/1] 0.00ns  loc: minver.c:95
:3  %a_0_addr_7 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_79_cast

ST_59: a_1_addr_7 (284)  [1/1] 0.00ns  loc: minver.c:95
:4  %a_1_addr_7 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_79_cast

ST_59: a_2_addr_7 (285)  [1/1] 0.00ns  loc: minver.c:95
:5  %a_2_addr_7 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_79_cast

ST_59: a_3_addr_7 (286)  [1/1] 0.00ns  loc: minver.c:95
:6  %a_3_addr_7 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_79_cast

ST_59: tmp_22 (290)  [1/5] 8.26ns  loc: minver.c:95
:10  %tmp_22 = fsub float %tmp_74, %tmp_21

ST_59: StgValue_392 (291)  [1/1] 2.33ns  loc: minver.c:95
:11  switch i3 %arrayNo5, label %branch15 [
    i3 0, label %branch12
    i3 1, label %branch13
    i3 2, label %branch14
  ]


 <State 60>: 2.71ns
ST_60: StgValue_393 (293)  [1/1] 2.71ns  loc: minver.c:95
branch14:0  store float %tmp_22, float* %a_2_addr_7, align 4

ST_60: StgValue_394 (294)  [1/1] 0.00ns  loc: minver.c:95
branch14:1  br label %16

ST_60: StgValue_395 (296)  [1/1] 2.71ns  loc: minver.c:95
branch13:0  store float %tmp_22, float* %a_1_addr_7, align 4

ST_60: StgValue_396 (297)  [1/1] 0.00ns  loc: minver.c:95
branch13:1  br label %16

ST_60: StgValue_397 (299)  [1/1] 2.71ns  loc: minver.c:95
branch12:0  store float %tmp_22, float* %a_0_addr_7, align 4

ST_60: StgValue_398 (300)  [1/1] 0.00ns  loc: minver.c:95
branch12:1  br label %16

ST_60: StgValue_399 (302)  [1/1] 2.71ns  loc: minver.c:95
branch15:0  store float %tmp_22, float* %a_3_addr_7, align 4

ST_60: StgValue_400 (303)  [1/1] 0.00ns  loc: minver.c:95
branch15:1  br label %16

ST_60: StgValue_401 (305)  [1/1] 0.00ns  loc: minver.c:95
:0  br label %._crit_edge20

ST_60: StgValue_402 (307)  [1/1] 0.00ns  loc: minver.c:94
._crit_edge20:0  br label %.preheader10


 <State 61>: 6.30ns
ST_61: tmp_18 (311)  [15/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 62>: 6.30ns
ST_62: tmp_18 (311)  [14/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 63>: 6.30ns
ST_63: tmp_18 (311)  [13/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 64>: 6.30ns
ST_64: tmp_18 (311)  [12/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 65>: 6.30ns
ST_65: tmp_18 (311)  [11/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 66>: 6.30ns
ST_66: tmp_18 (311)  [10/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 67>: 6.30ns
ST_67: tmp_18 (311)  [9/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 68>: 6.30ns
ST_68: tmp_18 (311)  [8/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 69>: 6.30ns
ST_69: tmp_18 (311)  [7/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 70>: 6.30ns
ST_70: tmp_18 (311)  [6/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 71>: 6.30ns
ST_71: tmp_18 (311)  [5/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 72>: 6.30ns
ST_72: tmp_18 (311)  [4/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 73>: 6.30ns
ST_73: tmp_18 (311)  [3/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 74>: 6.30ns
ST_74: tmp_18 (311)  [2/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 75>: 6.30ns
ST_75: tmp_18 (311)  [1/16] 6.30ns  loc: minver.c:97
:2  %tmp_18 = fdiv float %tmp_17, %pivot

ST_75: StgValue_418 (312)  [1/1] 2.33ns  loc: minver.c:97
:3  switch i3 %arrayNo5, label %branch19 [
    i3 0, label %branch16
    i3 1, label %branch17
    i3 2, label %branch18
  ]


 <State 76>: 2.71ns
ST_76: StgValue_419 (314)  [1/1] 2.71ns  loc: minver.c:97
branch18:0  store float %tmp_18, float* %a_2_addr_6, align 4

ST_76: StgValue_420 (315)  [1/1] 0.00ns  loc: minver.c:97
branch18:1  br label %18

ST_76: StgValue_421 (317)  [1/1] 2.71ns  loc: minver.c:97
branch17:0  store float %tmp_18, float* %a_1_addr_6, align 4

ST_76: StgValue_422 (318)  [1/1] 0.00ns  loc: minver.c:97
branch17:1  br label %18

ST_76: StgValue_423 (320)  [1/1] 2.71ns  loc: minver.c:97
branch16:0  store float %tmp_18, float* %a_0_addr_6, align 4

ST_76: StgValue_424 (321)  [1/1] 0.00ns  loc: minver.c:97
branch16:1  br label %18

ST_76: StgValue_425 (323)  [1/1] 2.71ns  loc: minver.c:97
branch19:0  store float %tmp_18, float* %a_3_addr_6, align 4

ST_76: StgValue_426 (324)  [1/1] 0.00ns  loc: minver.c:97
branch19:1  br label %18

ST_76: StgValue_427 (326)  [1/1] 0.00ns  loc: minver.c:98
:0  br label %._crit_edge19

ST_76: StgValue_428 (328)  [1/1] 0.00ns  loc: minver.c:99
._crit_edge19:0  br label %._crit_edge

ST_76: StgValue_429 (330)  [1/1] 0.00ns  loc: minver.c:90
._crit_edge:0  br label %.preheader11


 <State 77>: 6.30ns
ST_77: tmp_13 (332)  [15/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_13 (332)  [14/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_13 (332)  [13/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 80>: 6.30ns
ST_80: tmp_13 (332)  [12/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 81>: 6.30ns
ST_81: tmp_13 (332)  [11/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 82>: 6.30ns
ST_82: tmp_13 (332)  [10/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 83>: 6.30ns
ST_83: tmp_13 (332)  [9/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 84>: 6.30ns
ST_84: tmp_13 (332)  [8/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 85>: 6.30ns
ST_85: tmp_13 (332)  [7/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 86>: 6.30ns
ST_86: tmp_13 (332)  [6/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 87>: 6.30ns
ST_87: tmp_13 (332)  [5/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 88>: 6.30ns
ST_88: tmp_13 (332)  [4/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 89>: 6.30ns
ST_89: tmp_13 (332)  [3/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 90>: 6.30ns
ST_90: tmp_13 (332)  [2/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 91>: 6.30ns
ST_91: tmp_13 (332)  [1/16] 6.30ns  loc: minver.c:101
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot

ST_91: StgValue_445 (333)  [1/1] 2.33ns  loc: minver.c:101
:1  switch i3 %arrayNo3, label %branch11 [
    i3 0, label %branch8
    i3 1, label %branch9
    i3 2, label %branch10
  ]


 <State 92>: 2.71ns
ST_92: StgValue_446 (335)  [1/1] 2.71ns  loc: minver.c:101
branch10:0  store float %tmp_13, float* %a_2_addr_5, align 4

ST_92: StgValue_447 (336)  [1/1] 0.00ns  loc: minver.c:101
branch10:1  br label %20

ST_92: StgValue_448 (338)  [1/1] 2.71ns  loc: minver.c:101
branch9:0  store float %tmp_13, float* %a_1_addr_5, align 4

ST_92: StgValue_449 (339)  [1/1] 0.00ns  loc: minver.c:101
branch9:1  br label %20

ST_92: StgValue_450 (341)  [1/1] 2.71ns  loc: minver.c:101
branch8:0  store float %tmp_13, float* %a_0_addr_5, align 4

ST_92: StgValue_451 (342)  [1/1] 0.00ns  loc: minver.c:101
branch8:1  br label %20

ST_92: StgValue_452 (344)  [1/1] 2.71ns  loc: minver.c:101
branch11:0  store float %tmp_13, float* %a_3_addr_5, align 4

ST_92: StgValue_453 (345)  [1/1] 0.00ns  loc: minver.c:101
branch11:1  br label %20

ST_92: StgValue_454 (347)  [1/1] 0.00ns  loc: minver.c:54
:0  br label %.preheader14


 <State 93>: 2.37ns
ST_93: i_4 (353)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i5 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_93: exitcond1 (354)  [1/1] 2.37ns  loc: minver.c:105
.preheader8:1  %exitcond1 = icmp eq i5 %i_4, -16

ST_93: i_7 (355)  [1/1] 1.67ns  loc: minver.c:125
.preheader8:2  %i_7 = add i5 %i_4, 1

ST_93: StgValue_458 (356)  [1/1] 0.00ns  loc: minver.c:105
.preheader8:3  br i1 %exitcond1, label %.loopexit9.loopexit, label %.preheader.preheader

ST_93: empty_24 (358)  [1/1] 0.00ns
.preheader.preheader:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_93: tmp_s (359)  [1/1] 0.00ns  loc: minver.c:109
.preheader.preheader:1  %tmp_s = zext i5 %i_4 to i64

ST_93: tmp_cast (360)  [1/1] 0.00ns  loc: minver.c:109
.preheader.preheader:2  %tmp_cast = zext i5 %i_4 to i7

ST_93: work_addr_1 (361)  [1/1] 0.00ns  loc: minver.c:109
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_s

ST_93: StgValue_463 (362)  [1/1] 0.00ns  loc: minver.c:109
.preheader.preheader:4  br label %.preheader

ST_93: StgValue_464 (428)  [1/1] 0.00ns
.loopexit9.loopexit:0  br label %.loopexit9


 <State 94>: 2.71ns
ST_94: work_load (364)  [2/2] 2.71ns  loc: minver.c:109
.preheader:0  %work_load = load i5* %work_addr_1, align 1


 <State 95>: 5.42ns
ST_95: work_load (364)  [1/2] 2.71ns  loc: minver.c:109
.preheader:0  %work_load = load i5* %work_addr_1, align 1

ST_95: tmp_8 (365)  [1/1] 2.37ns  loc: minver.c:111
.preheader:1  %tmp_8 = icmp eq i5 %work_load, %i_4

ST_95: StgValue_468 (366)  [1/1] 0.00ns  loc: minver.c:111
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %21

ST_95: tmp_7 (368)  [1/1] 0.00ns  loc: minver.c:113
:0  %tmp_7 = zext i5 %work_load to i64

ST_95: work_addr_2 (370)  [1/1] 0.00ns  loc: minver.c:113
:2  %work_addr_2 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_7

ST_95: work_load_1 (371)  [2/2] 2.71ns  loc: minver.c:113
:3  %work_load_1 = load i5* %work_addr_2, align 1

ST_95: StgValue_472 (426)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8


 <State 96>: 2.71ns
ST_96: work_load_1 (371)  [1/2] 2.71ns  loc: minver.c:113
:3  %work_load_1 = load i5* %work_addr_2, align 1

ST_96: StgValue_474 (372)  [1/1] 2.71ns  loc: minver.c:114
:4  store i5 %work_load, i5* %work_addr_2, align 1


 <State 97>: 2.71ns
ST_97: tmp_7_cast14_cast (369)  [1/1] 0.00ns  loc: minver.c:113
:1  %tmp_7_cast14_cast = zext i5 %work_load to i7

ST_97: StgValue_476 (373)  [1/1] 2.71ns  loc: minver.c:115
:5  store i5 %work_load_1, i5* %work_addr_1, align 1

ST_97: tmp_47 (374)  [1/1] 0.00ns  loc: minver.c:109
:6  %tmp_47 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %work_load, i32 2, i32 4)

ST_97: tmp_48 (375)  [1/1] 0.00ns  loc: minver.c:109
:7  %tmp_48 = zext i3 %tmp_47 to i30

ST_97: tmp_49 (376)  [1/1] 0.00ns  loc: minver.c:109
:8  %tmp_49 = trunc i5 %work_load to i2

ST_97: tmp_50 (377)  [1/1] 0.00ns  loc: minver.c:109
:9  %tmp_50 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %tmp_49, i4 0)

ST_97: tmp_62_cast13_cast (378)  [1/1] 0.00ns  loc: minver.c:119
:10  %tmp_62_cast13_cast = zext i6 %tmp_50 to i7

ST_97: tmp_52 (379)  [1/1] 1.67ns  loc: minver.c:119
:11  %tmp_52 = add i7 %tmp_cast, %tmp_62_cast13_cast

ST_97: tmp_63_cast (380)  [1/1] 0.00ns  loc: minver.c:119
:12  %tmp_63_cast = zext i7 %tmp_52 to i64

ST_97: a_0_addr (381)  [1/1] 0.00ns  loc: minver.c:119
:13  %a_0_addr = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_63_cast

ST_97: tmp_53 (382)  [1/1] 1.67ns  loc: minver.c:120
:14  %tmp_53 = add i7 %tmp_7_cast14_cast, %tmp_62_cast13_cast

ST_97: tmp_64_cast (383)  [1/1] 0.00ns  loc: minver.c:120
:15  %tmp_64_cast = zext i7 %tmp_53 to i64

ST_97: a_0_addr_1 (384)  [1/1] 0.00ns  loc: minver.c:120
:16  %a_0_addr_1 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_64_cast

ST_97: a_1_addr (385)  [1/1] 0.00ns  loc: minver.c:119
:17  %a_1_addr = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_63_cast

ST_97: a_1_addr_1 (386)  [1/1] 0.00ns  loc: minver.c:120
:18  %a_1_addr_1 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_64_cast

ST_97: a_2_addr (387)  [1/1] 0.00ns  loc: minver.c:119
:19  %a_2_addr = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_63_cast

ST_97: a_2_addr_1 (388)  [1/1] 0.00ns  loc: minver.c:120
:20  %a_2_addr_1 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_64_cast

ST_97: a_3_addr (389)  [1/1] 0.00ns  loc: minver.c:119
:21  %a_3_addr = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_63_cast

ST_97: a_3_addr_1 (390)  [1/1] 0.00ns  loc: minver.c:120
:22  %a_3_addr_1 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_64_cast

ST_97: StgValue_494 (391)  [1/1] 1.57ns  loc: minver.c:117
:23  br label %22


 <State 98>: 2.37ns
ST_98: j_2 (393)  [1/1] 0.00ns
:0  %j_2 = phi i5 [ 0, %21 ], [ %j_4, %24 ]

ST_98: exitcond (394)  [1/1] 2.37ns  loc: minver.c:117
:1  %exitcond = icmp eq i5 %j_2, -16

ST_98: j_4 (395)  [1/1] 1.67ns  loc: minver.c:117
:2  %j_4 = add i5 %j_2, 1

ST_98: StgValue_498 (396)  [1/1] 0.00ns  loc: minver.c:117
:3  br i1 %exitcond, label %.preheader.loopexit, label %23

ST_98: tmp_24 (399)  [1/1] 0.00ns  loc: minver.c:117
:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_98: StgValue_500 (403)  [1/1] 2.33ns  loc: minver.c:120
:5  switch i3 %tmp_47, label %branch7 [
    i3 0, label %branch4
    i3 1, label %branch5
    i3 2, label %branch6
  ]

ST_98: empty_26 (421)  [1/1] 0.00ns  loc: minver.c:122
:0  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_24) nounwind

ST_98: StgValue_502 (422)  [1/1] 0.00ns  loc: minver.c:117
:1  br label %22


 <State 99>: 4.85ns
ST_99: w_1 (401)  [2/2] 4.85ns  loc: minver.c:109
:3  %w_1 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %tmp_48, i2 %tmp_49, i7 %tmp_cast)


 <State 100>: 5.45ns
ST_100: w_1 (401)  [1/2] 5.45ns  loc: minver.c:109
:3  %w_1 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %tmp_48, i2 %tmp_49, i7 %tmp_cast)


 <State 101>: 4.85ns
ST_101: tmp_56 (402)  [2/2] 4.85ns  loc: minver.c:109
:4  %tmp_56 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %tmp_48, i2 %tmp_49, i7 %tmp_7_cast14_cast)


 <State 102>: 5.45ns
ST_102: empty_25 (398)  [1/1] 0.00ns
:0  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_102: StgValue_507 (400)  [1/1] 0.00ns  loc: minver.c:118
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_102: tmp_56 (402)  [1/2] 5.45ns  loc: minver.c:109
:4  %tmp_56 = call fastcc float @aesl_mux_load_4_4_x_s([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i30 %tmp_48, i2 %tmp_49, i7 %tmp_7_cast14_cast)


 <State 103>: 2.71ns
ST_103: StgValue_509 (405)  [1/1] 2.71ns  loc: minver.c:120
branch6:0  store float %tmp_56, float* %a_2_addr, align 4

ST_103: StgValue_510 (409)  [1/1] 2.71ns  loc: minver.c:120
branch5:0  store float %tmp_56, float* %a_1_addr, align 4

ST_103: StgValue_511 (413)  [1/1] 2.71ns  loc: minver.c:120
branch4:0  store float %tmp_56, float* %a_0_addr, align 4

ST_103: StgValue_512 (417)  [1/1] 2.71ns  loc: minver.c:120
branch7:0  store float %tmp_56, float* %a_3_addr, align 4


 <State 104>: 2.71ns
ST_104: StgValue_513 (406)  [1/1] 2.71ns  loc: minver.c:121
branch6:1  store float %w_1, float* %a_2_addr_1, align 4

ST_104: StgValue_514 (407)  [1/1] 0.00ns
branch6:2  br label %24

ST_104: StgValue_515 (410)  [1/1] 2.71ns  loc: minver.c:121
branch5:1  store float %w_1, float* %a_1_addr_1, align 4

ST_104: StgValue_516 (411)  [1/1] 0.00ns
branch5:2  br label %24

ST_104: StgValue_517 (414)  [1/1] 2.71ns  loc: minver.c:121
branch4:1  store float %w_1, float* %a_0_addr_1, align 4

ST_104: StgValue_518 (415)  [1/1] 0.00ns
branch4:2  br label %24

ST_104: StgValue_519 (418)  [1/1] 2.71ns  loc: minver.c:121
branch7:1  store float %w_1, float* %a_3_addr_1, align 4

ST_104: StgValue_520 (419)  [1/1] 0.00ns
branch7:2  br label %24


 <State 105>: 0.00ns
ST_105: StgValue_521 (424)  [1/1] 0.00ns
.preheader.loopexit:0  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (0 ns)
	'store' operation (minver.c:51) of variable 'i' on array 'work', minver.c:41 [25]  (2.71 ns)

 <State 3>: 1.67ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:54) [32]  (0 ns)
	'add' operation ('k', minver.c:54) [34]  (1.67 ns)

 <State 4>: 2.93ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast', minver.c:56) ('i', minver.c:56) [44]  (0 ns)
	'icmp' operation ('exitcond6', minver.c:56) [45]  (2.93 ns)

 <State 5>: 4.85ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_4_x_s' [54]  (4.85 ns)

 <State 6>: 5.45ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_4_x_s' [54]  (5.45 ns)

 <State 7>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_36', minver_lib.c:11->minver.c:58) [61]  (6.37 ns)
	'and' operation ('tmp_37', minver_lib.c:11->minver.c:58) [62]  (0 ns)
	'select' operation ('w', minver.c:60) [65]  (1.37 ns)

 <State 8>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_45', minver.c:59) [79]  (6.37 ns)
	'and' operation ('tmp_46', minver.c:59) [80]  (1.37 ns)

 <State 9>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:59) on local variable 'r' [48]  (0 ns)
	'select' operation ('r', minver.c:59) [82]  (1.37 ns)
	'store' operation (minver.c:59) of variable 'r', minver.c:59 on local variable 'r' [85]  (1.57 ns)

 <State 10>: 4.85ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [88]  (0 ns)
	'call' operation ('pivot', minver.c:54) to 'aesl_mux_load_4_4_x_s' [94]  (4.85 ns)

 <State 11>: 5.45ns
The critical path consists of the following:
	'call' operation ('pivot', minver.c:54) to 'aesl_mux_load_4_4_x_s' [94]  (5.45 ns)

 <State 12>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_20', minver_lib.c:11->minver.c:66) [101]  (6.37 ns)
	'and' operation ('tmp_23', minver_lib.c:11->minver.c:66) [102]  (0 ns)
	'select' operation ('api', minver.c:66) [105]  (1.37 ns)

 <State 13>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:67) [106]  (5.12 ns)

 <State 14>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_30', minver.c:67) [113]  (6.9 ns)
	'and' operation ('tmp_31', minver.c:67) [114]  (1.37 ns)

 <State 15>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:75) on array 'work', minver.c:41 [123]  (2.71 ns)
	'store' operation (minver.c:75) of variable 'work_load_3', minver.c:75 on array 'work', minver.c:41 [124]  (2.71 ns)

 <State 16>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:76) of variable 'work_load_2', minver.c:74 on array 'work', minver.c:41 [125]  (2.71 ns)

 <State 17>: 2.37ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:77) [133]  (0 ns)
	'icmp' operation ('exitcond5', minver.c:77) [134]  (2.37 ns)

 <State 18>: 4.85ns
The critical path consists of the following:
	'call' operation ('w', minver.c:54) to 'aesl_mux_load_4_4_x_s' [154]  (4.85 ns)

 <State 19>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:54) to 'aesl_mux_load_4_4_x_s' [154]  (5.45 ns)

 <State 20>: 4.85ns
The critical path consists of the following:
	'call' operation ('tmp_62', minver.c:79) to 'aesl_mux_load_4_4_x_s' [155]  (4.85 ns)

 <State 21>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_62', minver.c:79) to 'aesl_mux_load_4_4_x_s' [155]  (5.45 ns)

 <State 22>: 4.38ns
The critical path consists of the following:
	'add' operation ('tmp_60', minver.c:79) [142]  (1.67 ns)
	'getelementptr' operation ('a_2_addr_2', minver.c:79) [150]  (0 ns)
	'store' operation (minver.c:80) of variable 'tmp_62', minver.c:79 on array 'a_2' [158]  (2.71 ns)

 <State 23>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_3', minver.c:80) [151]  (0 ns)
	'store' operation (minver.c:81) of variable 'w', minver.c:54 on array 'a_2' [172]  (2.71 ns)

 <State 24>: 1.67ns
The critical path consists of the following:
	'add' operation ('tmp_65', minver.c:101) [193]  (1.67 ns)

 <State 25>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:85) [202]  (0 ns)
	'icmp' operation ('exitcond4', minver.c:85) [203]  (2.37 ns)

 <State 26>: 4.85ns
The critical path consists of the following:
	'call' operation ('tmp_67', minver.c:54) to 'aesl_mux_load_4_4_x_s' [217]  (4.85 ns)

 <State 27>: 11.8ns
The critical path consists of the following:
	'call' operation ('tmp_67', minver.c:54) to 'aesl_mux_load_4_4_x_s' [217]  (5.45 ns)
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 28>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 39>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 40>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 41>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)

 <State 42>: 9.01ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:87) [218]  (6.3 ns)
	'store' operation (minver.c:87) of variable 'tmp_12', minver.c:87 on array 'a_2' [221]  (2.71 ns)

 <State 43>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:90) [238]  (1.57 ns)

 <State 44>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 45>: 4.85ns
The critical path consists of the following:
	'call' operation ('w', minver.c:90) to 'aesl_mux_load_4_4_x_s' [258]  (4.85 ns)

 <State 46>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:90) to 'aesl_mux_load_4_4_x_s' [258]  (5.45 ns)

 <State 47>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_58', minver.c:93) [265]  (6.37 ns)
	'and' operation ('tmp_59', minver.c:93) [266]  (1.37 ns)

 <State 48>: 7.67ns
The critical path consists of the following:
	'xor' operation ('tmp_18_neg', minver.c:97) [309]  (1.37 ns)
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 49>: 4.85ns
The critical path consists of the following:
	'call' operation ('tmp_73', minver.c:54) to 'aesl_mux_load_4_4_x_s' [287]  (4.85 ns)

 <State 50>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_73', minver.c:54) to 'aesl_mux_load_4_4_x_s' [287]  (5.45 ns)

 <State 51>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_21', minver.c:95) [288]  (5.78 ns)

 <State 52>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_21', minver.c:95) [288]  (5.78 ns)

 <State 53>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_21', minver.c:95) [288]  (5.78 ns)

 <State 54>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_21', minver.c:95) [288]  (5.78 ns)

 <State 55>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_22', minver.c:95) [290]  (8.26 ns)

 <State 56>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_22', minver.c:95) [290]  (8.26 ns)

 <State 57>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_22', minver.c:95) [290]  (8.26 ns)

 <State 58>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_22', minver.c:95) [290]  (8.26 ns)

 <State 59>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_22', minver.c:95) [290]  (8.26 ns)

 <State 60>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:95) of variable 'tmp_22', minver.c:95 on array 'a_2' [293]  (2.71 ns)

 <State 61>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 62>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 63>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 64>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 65>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 66>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 67>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 68>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 69>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 70>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 71>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 72>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 73>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 74>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:97) [311]  (6.3 ns)

 <State 76>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:97) of variable 'tmp_18', minver.c:97 on array 'a_2' [314]  (2.71 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 80>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 81>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 82>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 83>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 84>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 85>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 86>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 87>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 88>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 89>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 90>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 91>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:101) [332]  (6.3 ns)

 <State 92>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:101) of variable 'tmp_13', minver.c:101 on array 'a_2' [335]  (2.71 ns)

 <State 93>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:125) [353]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:105) [354]  (2.37 ns)

 <State 94>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:109) on array 'work', minver.c:41 [364]  (2.71 ns)

 <State 95>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:109) on array 'work', minver.c:41 [364]  (2.71 ns)
	'getelementptr' operation ('work_addr_2', minver.c:113) [370]  (0 ns)
	'load' operation ('work_load_1', minver.c:113) on array 'work', minver.c:41 [371]  (2.71 ns)

 <State 96>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load_1', minver.c:113) on array 'work', minver.c:41 [371]  (2.71 ns)

 <State 97>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:115) of variable 'work_load_1', minver.c:113 on array 'work', minver.c:41 [373]  (2.71 ns)

 <State 98>: 2.37ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:117) [393]  (0 ns)
	'icmp' operation ('exitcond', minver.c:117) [394]  (2.37 ns)

 <State 99>: 4.85ns
The critical path consists of the following:
	'call' operation ('w', minver.c:109) to 'aesl_mux_load_4_4_x_s' [401]  (4.85 ns)

 <State 100>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:109) to 'aesl_mux_load_4_4_x_s' [401]  (5.45 ns)

 <State 101>: 4.85ns
The critical path consists of the following:
	'call' operation ('tmp_56', minver.c:109) to 'aesl_mux_load_4_4_x_s' [402]  (4.85 ns)

 <State 102>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_56', minver.c:109) to 'aesl_mux_load_4_4_x_s' [402]  (5.45 ns)

 <State 103>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:120) of variable 'tmp_56', minver.c:109 on array 'a_2' [405]  (2.71 ns)

 <State 104>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:121) of variable 'w', minver.c:109 on array 'a_2' [406]  (2.71 ns)

 <State 105>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
