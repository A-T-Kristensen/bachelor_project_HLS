

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Fri Apr 28 10:28:31 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.69|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+-------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+-------+----------+
        |- Loop 1         |    3|    3|         1|          -|          -|      3|    no    |
        |- Loop 2         |   54|  654| 54 ~ 216 |          -|          -| 1 ~ 3 |    no    |
        | + Loop 2.1      |    4|    6|         5|          1|          1| 1 ~ 3 |    yes   |
        | + Loop 2.2      |    7|    7|         4|          2|          1|      3|    yes   |
        | + Loop 2.3      |   18|   18|        17|          1|          1|      3|    yes   |
        | + Loop 2.4      |    6|  156|  2 ~ 52  |          -|          -|      3|    no    |
        |  ++ Loop 2.4.1  |    6|   33|  2 ~ 11  |          -|          -|      3|    no    |
        |- Loop 3         |    ?|    ?|         ?|          -|          -|      3|    no    |
        | + Loop 3.1      |    ?|    ?|        15|          -|          -|      ?|    no    |
        |  ++ Loop 3.1.1  |    9|    9|         3|          3|          1|      3|    yes   |
        +-----------------+-----+-----+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5
  * Pipeline-1: initiation interval (II) = 2, depth = 4
  * Pipeline-2: initiation interval (II) = 1, depth = 17
  * Pipeline-3: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 91
* Pipeline: 4
  Pipeline-0: II = 1, D = 5, States = { 4 5 6 7 8 }
  Pipeline-1: II = 2, D = 4, States = { 16 17 18 19 }
  Pipeline-2: II = 1, D = 17, States = { 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 }
  Pipeline-3: II = 3, D = 3, States = { 88 89 90 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond7)
	3  / (exitcond7)
3 --> 
	4  / (!tmp_2)
	83  / (tmp_2)
4 --> 
	9  / (exitcond6)
	5  / (!exitcond6)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (!tmp_2 & !tmp_34 & !tmp_1)
	20  / (!tmp_2 & !tmp_34 & tmp_1)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	20  / (exitcond5)
	17  / (!exitcond5)
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	16  / true
20 --> 
	21  / true
21 --> 
	38  / (exitcond4)
	22  / (!exitcond4)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	21  / true
38 --> 
	39  / true
39 --> 
	68  / (exitcond3)
	40  / (!exitcond3 & !tmp_15)
	67  / (!exitcond3 & tmp_15)
40 --> 
	41  / true
41 --> 
	67  / (tmp_53)
	42  / (!tmp_53)
42 --> 
	53  / (exitcond2)
	43  / (!exitcond2 & !tmp_20)
	52  / (!exitcond2 & tmp_20)
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	42  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	39  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	3  / true
83 --> 
	84  / (!exitcond1)
	13  / (exitcond1)
84 --> 
	85  / true
85 --> 
	86  / (!tmp_8)
	83  / (tmp_8)
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	91  / (exitcond)
	89  / (!exitcond)
89 --> 
	90  / true
90 --> 
	88  / true
91 --> 
	84  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_92 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %a) nounwind, !map !17

ST_1: StgValue_93 (3)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !23

ST_1: StgValue_94 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (5)  [1/1] 0.00ns  loc: minver.c:42
:3  %work = alloca [500 x i2], align 1

ST_1: StgValue_96 (6)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecInterface([9 x float]* %a, [5 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_97 (7)  [1/1] 0.00ns  loc: minver.c:40
:5  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_98 (8)  [1/1] 1.57ns  loc: minver.c:51
:6  br label %1


 <State 2>: 2.39ns
ST_2: i (10)  [1/1] 0.00ns
:0  %i = phi i2 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (11)  [1/1] 1.54ns  loc: minver.c:51
:1  %exitcond7 = icmp eq i2 %i, -1

ST_2: empty (12)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_2: i_1 (13)  [1/1] 0.75ns  loc: minver.c:51
:3  %i_1 = add i2 %i, 1

ST_2: StgValue_103 (14)  [1/1] 0.00ns  loc: minver.c:51
:4  br i1 %exitcond7, label %.preheader14.preheader, label %2

ST_2: tmp (16)  [1/1] 0.00ns  loc: minver.c:52
:0  %tmp = zext i2 %i to i64

ST_2: work_addr (17)  [1/1] 0.00ns  loc: minver.c:52
:1  %work_addr = getelementptr [500 x i2]* %work, i64 0, i64 %tmp

ST_2: StgValue_106 (18)  [1/1] 2.39ns  loc: minver.c:52
:2  store i2 %i, i2* %work_addr, align 1

ST_2: StgValue_107 (19)  [1/1] 0.00ns  loc: minver.c:51
:3  br label %1

ST_2: r (21)  [1/1] 0.00ns
.preheader14.preheader:0  %r = alloca i32

ST_2: StgValue_109 (22)  [1/1] 1.57ns
.preheader14.preheader:1  store i32 0, i32* %r

ST_2: StgValue_110 (23)  [1/1] 1.57ns  loc: minver.c:55
.preheader14.preheader:2  br label %.preheader14


 <State 3>: 1.57ns
ST_3: i_5 (25)  [1/1] 0.00ns
.preheader14:0  %i_5 = phi i2 [ %k, %14 ], [ 0, %.preheader14.preheader ]

ST_3: tmp_2 (26)  [1/1] 1.54ns  loc: minver.c:55
.preheader14:1  %tmp_2 = icmp eq i2 %i_5, -1

ST_3: k (27)  [1/1] 0.75ns  loc: minver.c:55
.preheader14:2  %k = add i2 %i_5, 1

ST_3: StgValue_114 (28)  [1/1] 0.00ns  loc: minver.c:55
.preheader14:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader13.preheader

ST_3: i_5_cast7 (30)  [1/1] 0.00ns  loc: minver.c:57
.preheader13.preheader:0  %i_5_cast7 = zext i2 %i_5 to i32

ST_3: empty_7 (31)  [1/1] 0.00ns
.preheader13.preheader:1  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2) nounwind

ST_3: tmp_3 (32)  [1/1] 0.00ns  loc: minver.c:59
.preheader13.preheader:2  %tmp_3 = zext i2 %i_5 to i64

ST_3: tmp_3_cast (33)  [1/1] 0.00ns  loc: minver.c:55
.preheader13.preheader:3  %tmp_3_cast = zext i2 %i_5 to i5

ST_3: tmp_7 (34)  [1/1] 0.00ns  loc: minver.c:55
.preheader13.preheader:4  %tmp_7 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_5, i2 0)

ST_3: p_shl (35)  [1/1] 0.00ns  loc: minver.c:80
.preheader13.preheader:5  %p_shl = zext i4 %tmp_7 to i64

ST_3: p_shl_cast (36)  [1/1] 0.00ns  loc: minver.c:80
.preheader13.preheader:6  %p_shl_cast = zext i4 %tmp_7 to i5

ST_3: tmp_9 (37)  [1/1] 0.75ns  loc: minver.c:80
.preheader13.preheader:7  %tmp_9 = sub i5 %p_shl_cast, %tmp_3_cast

ST_3: a_addr_7 (38)  [1/1] 0.00ns  loc: minver.c:102
.preheader13.preheader:8  %a_addr_7 = getelementptr [9 x float]* %a, i64 0, i64 %p_shl

ST_3: StgValue_124 (39)  [1/1] 1.57ns  loc: minver.c:57
.preheader13.preheader:9  br label %.preheader13

ST_3: StgValue_125 (250)  [1/1] 1.57ns  loc: minver.c:106
.preheader8.preheader:0  br label %.preheader8


 <State 4>: 4.91ns
ST_4: wmax (41)  [1/1] 0.00ns
.preheader13:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader13.preheader ]

ST_4: r_1 (42)  [1/1] 0.00ns
.preheader13:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast7, %.preheader13.preheader ]

ST_4: exitcond6 (43)  [1/1] 2.93ns  loc: minver.c:57
.preheader13:2  %exitcond6 = icmp eq i32 %r_1, 3

ST_4: StgValue_129 (44)  [1/1] 0.00ns  loc: minver.c:57
.preheader13:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_4: tmp_41 (50)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:4  %tmp_41 = trunc i32 %r_1 to i5

ST_4: tmp_43 (51)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:5  %tmp_43 = trunc i32 %r_1 to i3

ST_4: p_shl2_cast (52)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:6  %p_shl2_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_43, i2 0)

ST_4: tmp_50 (53)  [1/1] 1.26ns  loc: minver.c:59
_ifconv:7  %tmp_50 = sub i5 %p_shl2_cast, %tmp_41

ST_4: tmp_54 (54)  [1/1] 1.26ns  loc: minver.c:59
_ifconv:8  %tmp_54 = add i5 %tmp_3_cast, %tmp_50

ST_4: tmp_61_cast (55)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:9  %tmp_61_cast = sext i5 %tmp_54 to i64

ST_4: a_addr_1 (56)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:10  %a_addr_1 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_61_cast

ST_4: a_load_3 (57)  [2/2] 2.39ns  loc: minver.c:59
_ifconv:11  %a_load_3 = load float* %a_addr_1, align 4

ST_4: i_6 (87)  [1/1] 2.39ns  loc: minver.c:57
_ifconv:41  %i_6 = add nsw i32 1, %r_1


 <State 5>: 2.39ns
ST_5: a_load_3 (57)  [1/2] 2.39ns  loc: minver.c:59
_ifconv:11  %a_load_3 = load float* %a_addr_1, align 4


 <State 6>: 7.74ns
ST_6: n_assign_1_to_int (58)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:12  %n_assign_1_to_int = bitcast float %a_load_3 to i32

ST_6: tmp_35 (59)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:13  %tmp_35 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_6: tmp_55 (60)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:14  %tmp_55 = trunc i32 %n_assign_1_to_int to i23

ST_6: notlhs (61)  [1/1] 2.47ns  loc: minver.c:59
_ifconv:15  %notlhs = icmp ne i8 %tmp_35, -1

ST_6: notrhs (62)  [1/1] 2.84ns  loc: minver.c:59
_ifconv:16  %notrhs = icmp eq i23 %tmp_55, 0

ST_6: tmp_37 (63)  [1/1] 0.00ns  loc: minver.c:59 (grouped into LUT with out node w_4)
_ifconv:17  %tmp_37 = or i1 %notrhs, %notlhs

ST_6: tmp_38 (64)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:59
_ifconv:18  %tmp_38 = fcmp oge float %a_load_3, 0.000000e+00

ST_6: tmp_39 (65)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:19  %tmp_39 = and i1 %tmp_37, %tmp_38

ST_6: f_neg_i (66)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:20  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_6: f_1 (67)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:59 (grouped into LUT with out node w_4)
_ifconv:21  %f_1 = bitcast i32 %f_neg_i to float

ST_6: w_4 (68)  [1/1] 1.37ns  loc: minver.c:61 (out node of the LUT)
_ifconv:22  %w_4 = select i1 %tmp_39, float %a_load_3, float %f_1


 <State 7>: 7.74ns
ST_7: w_4_to_int (69)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:23  %w_4_to_int = bitcast float %w_4 to i32

ST_7: tmp_40 (70)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:24  %tmp_40 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_4_to_int, i32 23, i32 30)

ST_7: tmp_56 (71)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:25  %tmp_56 = trunc i32 %w_4_to_int to i23

ST_7: wmax_to_int (72)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:26  %wmax_to_int = bitcast float %wmax to i32

ST_7: tmp_42 (73)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:27  %tmp_42 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_7: tmp_57 (74)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:28  %tmp_57 = trunc i32 %wmax_to_int to i23

ST_7: notlhs3 (75)  [1/1] 2.47ns  loc: minver.c:61
_ifconv:29  %notlhs3 = icmp ne i8 %tmp_40, -1

ST_7: notrhs3 (76)  [1/1] 2.84ns  loc: minver.c:61
_ifconv:30  %notrhs3 = icmp eq i23 %tmp_56, 0

ST_7: tmp_44 (77)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node tmp_48)
_ifconv:31  %tmp_44 = or i1 %notrhs3, %notlhs3

ST_7: notlhs4 (78)  [1/1] 2.47ns  loc: minver.c:60
_ifconv:32  %notlhs4 = icmp ne i8 %tmp_42, -1

ST_7: notrhs4 (79)  [1/1] 2.84ns  loc: minver.c:60
_ifconv:33  %notrhs4 = icmp eq i23 %tmp_57, 0

ST_7: tmp_45 (80)  [1/1] 0.00ns  loc: minver.c:60 (grouped into LUT with out node tmp_48)
_ifconv:34  %tmp_45 = or i1 %notrhs4, %notlhs4

ST_7: tmp_46 (81)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node tmp_48)
_ifconv:35  %tmp_46 = and i1 %tmp_44, %tmp_45

ST_7: tmp_47 (82)  [1/1] 6.37ns  loc: minver.c:60
_ifconv:36  %tmp_47 = fcmp ogt float %w_4, %wmax

ST_7: tmp_48 (83)  [1/1] 1.37ns  loc: minver.c:60 (out node of the LUT)
_ifconv:37  %tmp_48 = and i1 %tmp_46, %tmp_47


 <State 8>: 2.94ns
ST_8: r_load_1 (46)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:0  %r_load_1 = load i32* %r

ST_8: empty_8 (47)  [1/1] 0.00ns
_ifconv:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 0) nounwind

ST_8: tmp_24 (48)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:2  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3) nounwind

ST_8: StgValue_169 (49)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: wmax_1 (84)  [1/1] 1.37ns  loc: minver.c:60
_ifconv:38  %wmax_1 = select i1 %tmp_48, float %w_4, float %wmax

ST_8: r_2 (85)  [1/1] 1.37ns  loc: minver.c:60
_ifconv:39  %r_2 = select i1 %tmp_48, i32 %r_1, i32 %r_load_1

ST_8: empty_9 (86)  [1/1] 0.00ns  loc: minver.c:64
_ifconv:40  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_24) nounwind

ST_8: StgValue_173 (88)  [1/1] 1.57ns  loc: minver.c:60
_ifconv:42  store i32 %r_2, i32* %r

ST_8: StgValue_174 (89)  [1/1] 0.00ns  loc: minver.c:57
_ifconv:43  br label %.preheader13


 <State 9>: 5.73ns
ST_9: r_load (91)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_9: tmp_11 (93)  [1/1] 0.00ns
_ifconv1:2  %tmp_11 = trunc i32 %r_load to i5

ST_9: tmp_12 (94)  [1/1] 0.00ns
_ifconv1:3  %tmp_12 = trunc i32 %r_load to i3

ST_9: p_shl3_cast (95)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:4  %p_shl3_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_12, i2 0)

ST_9: tmp_16 (96)  [1/1] 1.67ns  loc: minver.c:66
_ifconv1:5  %tmp_16 = sub i5 %p_shl3_cast, %tmp_11

ST_9: tmp_21 (97)  [1/1] 1.67ns  loc: minver.c:66
_ifconv1:6  %tmp_21 = add i5 %tmp_3_cast, %tmp_16

ST_9: tmp_58_cast (98)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:7  %tmp_58_cast = sext i5 %tmp_21 to i64

ST_9: a_addr (99)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:8  %a_addr = getelementptr [9 x float]* %a, i64 0, i64 %tmp_58_cast

ST_9: pivot (100)  [2/2] 2.39ns  loc: minver.c:102
_ifconv1:9  %pivot = load float* %a_addr, align 4


 <State 10>: 2.39ns
ST_10: pivot (100)  [1/2] 2.39ns  loc: minver.c:102
_ifconv1:9  %pivot = load float* %a_addr, align 4


 <State 11>: 7.74ns
ST_11: pivot_to_int (101)  [1/1] 0.00ns  loc: minver.c:102
_ifconv1:10  %pivot_to_int = bitcast float %pivot to i32

ST_11: tmp_6 (102)  [1/1] 0.00ns  loc: minver.c:102
_ifconv1:11  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_11: tmp_31 (103)  [1/1] 0.00ns  loc: minver.c:102
_ifconv1:12  %tmp_31 = trunc i32 %pivot_to_int to i23

ST_11: notlhs1 (104)  [1/1] 2.47ns  loc: minver.c:102
_ifconv1:13  %notlhs1 = icmp ne i8 %tmp_6, -1

ST_11: notrhs1 (105)  [1/1] 2.84ns  loc: minver.c:102
_ifconv1:14  %notrhs1 = icmp eq i23 %tmp_31, 0

ST_11: tmp_17 (106)  [1/1] 0.00ns  loc: minver.c:102 (grouped into LUT with out node api)
_ifconv1:15  %tmp_17 = or i1 %notrhs1, %notlhs1

ST_11: tmp_28 (107)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:67
_ifconv1:16  %tmp_28 = fcmp oge float %pivot, 0.000000e+00

ST_11: tmp_29 (108)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:67 (grouped into LUT with out node api)
_ifconv1:17  %tmp_29 = and i1 %tmp_17, %tmp_28

ST_11: f_neg_i1 (109)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:67 (grouped into LUT with out node api)
_ifconv1:18  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_11: f (110)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:67 (grouped into LUT with out node api)
_ifconv1:19  %f = bitcast i32 %f_neg_i1 to float

ST_11: api (111)  [1/1] 1.37ns  loc: minver.c:67 (out node of the LUT)
_ifconv1:20  %api = select i1 %tmp_29, float %pivot, float %f


 <State 12>: 5.12ns
ST_12: tmp_5 (112)  [1/1] 5.12ns  loc: minver.c:68
_ifconv1:21  %tmp_5 = fpext float %api to double


 <State 13>: 8.27ns
ST_13: tmp_4 (92)  [1/1] 0.00ns  loc: minver.c:66
_ifconv1:1  %tmp_4 = sext i32 %r_load to i64

ST_13: tmp_5_to_int (113)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:22  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_13: tmp_30 (114)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:23  %tmp_30 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_13: tmp_36 (115)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:24  %tmp_36 = trunc i64 %tmp_5_to_int to i52

ST_13: notlhs2 (116)  [1/1] 2.58ns  loc: minver.c:68
_ifconv1:25  %notlhs2 = icmp ne i11 %tmp_30, -1

ST_13: notrhs2 (117)  [1/1] 3.19ns  loc: minver.c:68
_ifconv1:26  %notrhs2 = icmp eq i52 %tmp_36, 0

ST_13: tmp_32 (118)  [1/1] 0.00ns  loc: minver.c:68 (grouped into LUT with out node tmp_34)
_ifconv1:27  %tmp_32 = or i1 %notrhs2, %notlhs2

ST_13: tmp_33 (119)  [1/1] 6.90ns  loc: minver.c:68
_ifconv1:28  %tmp_33 = fcmp ole double %tmp_5, 1.000000e-06

ST_13: tmp_34 (120)  [1/1] 1.37ns  loc: minver.c:68 (out node of the LUT)
_ifconv1:29  %tmp_34 = and i1 %tmp_32, %tmp_33

ST_13: StgValue_206 (121)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:30  br i1 %tmp_34, label %.loopexit9.loopexit22, label %3

ST_13: tmp_1 (123)  [1/1] 2.93ns  loc: minver.c:73
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast7

ST_13: StgValue_208 (124)  [1/1] 0.00ns  loc: minver.c:73
:1  br i1 %tmp_1, label %.loopexit12, label %4

ST_13: work_addr_3 (126)  [1/1] 0.00ns  loc: minver.c:75
:0  %work_addr_3 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_3

ST_13: work_load_2 (127)  [2/2] 2.39ns  loc: minver.c:75
:1  %work_load_2 = load i2* %work_addr_3, align 1

ST_13: work_addr_4 (128)  [1/1] 0.00ns  loc: minver.c:76
:2  %work_addr_4 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_4

ST_13: work_load_3 (129)  [2/2] 2.39ns  loc: minver.c:76
:3  %work_load_3 = load i2* %work_addr_4, align 1

ST_13: StgValue_213 (248)  [1/1] 0.00ns
.loopexit9.loopexit22:0  br label %.loopexit9

ST_13: StgValue_214 (304)  [1/1] 0.00ns  loc: minver.c:130
.loopexit9:0  ret i32 1


 <State 14>: 4.78ns
ST_14: work_load_2 (127)  [1/2] 2.39ns  loc: minver.c:75
:1  %work_load_2 = load i2* %work_addr_3, align 1

ST_14: work_load_3 (129)  [1/2] 2.39ns  loc: minver.c:76
:3  %work_load_3 = load i2* %work_addr_4, align 1

ST_14: StgValue_217 (130)  [1/1] 2.39ns  loc: minver.c:76
:4  store i2 %work_load_3, i2* %work_addr_3, align 1


 <State 15>: 2.39ns
ST_15: StgValue_218 (131)  [1/1] 2.39ns  loc: minver.c:77
:5  store i2 %work_load_2, i2* %work_addr_4, align 1

ST_15: StgValue_219 (132)  [1/1] 1.57ns  loc: minver.c:78
:6  br label %5


 <State 16>: 4.06ns
ST_16: j (134)  [1/1] 0.00ns
:0  %j = phi i2 [ 0, %4 ], [ %j_3, %6 ]

ST_16: exitcond5 (135)  [1/1] 1.54ns  loc: minver.c:78
:1  %exitcond5 = icmp eq i2 %j, -1

ST_16: j_3 (136)  [1/1] 0.75ns  loc: minver.c:78
:2  %j_3 = add i2 %j, 1

ST_16: StgValue_223 (137)  [1/1] 0.00ns  loc: minver.c:78
:3  br i1 %exitcond5, label %.loopexit12.loopexit, label %6

ST_16: tmp_11_cast (142)  [1/1] 0.00ns  loc: minver.c:80
:3  %tmp_11_cast = zext i2 %j to i5

ST_16: tmp_62 (143)  [1/1] 1.67ns  loc: minver.c:80
:4  %tmp_62 = add i5 %tmp_9, %tmp_11_cast

ST_16: tmp_65_cast (144)  [1/1] 0.00ns  loc: minver.c:80
:5  %tmp_65_cast = sext i5 %tmp_62 to i64

ST_16: a_addr_4 (145)  [1/1] 0.00ns  loc: minver.c:80
:6  %a_addr_4 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_65_cast

ST_16: tmp_63 (146)  [1/1] 1.67ns  loc: minver.c:81
:7  %tmp_63 = add i5 %tmp_16, %tmp_11_cast

ST_16: tmp_66_cast (147)  [1/1] 0.00ns  loc: minver.c:81
:8  %tmp_66_cast = sext i5 %tmp_63 to i64

ST_16: a_addr_5 (148)  [1/1] 0.00ns  loc: minver.c:81
:9  %a_addr_5 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_66_cast

ST_16: w (149)  [2/2] 2.39ns  loc: minver.c:80
:10  %w = load float* %a_addr_4, align 4

ST_16: a_load_2 (150)  [2/2] 2.39ns  loc: minver.c:81
:11  %a_load_2 = load float* %a_addr_5, align 4


 <State 17>: 4.78ns
ST_17: w (149)  [1/2] 2.39ns  loc: minver.c:80
:10  %w = load float* %a_addr_4, align 4

ST_17: a_load_2 (150)  [1/2] 2.39ns  loc: minver.c:81
:11  %a_load_2 = load float* %a_addr_5, align 4

ST_17: StgValue_235 (151)  [1/1] 2.39ns  loc: minver.c:81
:12  store float %a_load_2, float* %a_addr_4, align 4


 <State 18>: 0.00ns

 <State 19>: 2.39ns
ST_19: empty_10 (139)  [1/1] 0.00ns
:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_19: tmp_26 (140)  [1/1] 0.00ns  loc: minver.c:78
:1  %tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_19: StgValue_238 (141)  [1/1] 0.00ns  loc: minver.c:79
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_19: StgValue_239 (152)  [1/1] 2.39ns  loc: minver.c:82
:13  store float %w, float* %a_addr_5, align 4

ST_19: empty_11 (153)  [1/1] 0.00ns  loc: minver.c:83
:14  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_26) nounwind

ST_19: StgValue_241 (154)  [1/1] 0.00ns  loc: minver.c:78
:15  br label %5


 <State 20>: 1.57ns
ST_20: StgValue_242 (156)  [1/1] 0.00ns
.loopexit12.loopexit:0  br label %.loopexit12

ST_20: StgValue_243 (158)  [1/1] 1.57ns  loc: minver.c:86
.loopexit12:0  br label %7


 <State 21>: 4.06ns
ST_21: i_2 (160)  [1/1] 0.00ns
:0  %i_2 = phi i2 [ 0, %.loopexit12 ], [ %i_8, %8 ]

ST_21: exitcond4 (161)  [1/1] 1.54ns  loc: minver.c:86
:1  %exitcond4 = icmp eq i2 %i_2, -1

ST_21: i_8 (162)  [1/1] 0.75ns  loc: minver.c:86
:2  %i_8 = add i2 %i_2, 1

ST_21: StgValue_247 (163)  [1/1] 0.00ns  loc: minver.c:86
:3  br i1 %exitcond4, label %.preheader11.preheader, label %8

ST_21: tmp_12_cast (168)  [1/1] 0.00ns  loc: minver.c:88
:3  %tmp_12_cast = zext i2 %i_2 to i5

ST_21: tmp_64 (169)  [1/1] 1.67ns  loc: minver.c:88
:4  %tmp_64 = add i5 %tmp_9, %tmp_12_cast

ST_21: tmp_67_cast (170)  [1/1] 0.00ns  loc: minver.c:88
:5  %tmp_67_cast = sext i5 %tmp_64 to i64

ST_21: a_addr_6 (171)  [1/1] 0.00ns  loc: minver.c:88
:6  %a_addr_6 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_67_cast

ST_21: a_load_4 (172)  [2/2] 2.39ns  loc: minver.c:88
:7  %a_load_4 = load float* %a_addr_6, align 4


 <State 22>: 8.69ns
ST_22: a_load_4 (172)  [1/2] 2.39ns  loc: minver.c:88
:7  %a_load_4 = load float* %a_addr_6, align 4

ST_22: tmp_13 (173)  [16/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 23>: 6.30ns
ST_23: tmp_13 (173)  [15/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 24>: 6.30ns
ST_24: tmp_13 (173)  [14/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 25>: 6.30ns
ST_25: tmp_13 (173)  [13/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 26>: 6.30ns
ST_26: tmp_13 (173)  [12/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 27>: 6.30ns
ST_27: tmp_13 (173)  [11/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 28>: 6.30ns
ST_28: tmp_13 (173)  [10/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 29>: 6.30ns
ST_29: tmp_13 (173)  [9/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 30>: 6.30ns
ST_30: tmp_13 (173)  [8/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 31>: 6.30ns
ST_31: tmp_13 (173)  [7/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 32>: 6.30ns
ST_32: tmp_13 (173)  [6/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 33>: 6.30ns
ST_33: tmp_13 (173)  [5/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 34>: 6.30ns
ST_34: tmp_13 (173)  [4/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 35>: 6.30ns
ST_35: tmp_13 (173)  [3/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 36>: 6.30ns
ST_36: tmp_13 (173)  [2/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot


 <State 37>: 8.69ns
ST_37: empty_12 (165)  [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_37: tmp_27 (166)  [1/1] 0.00ns  loc: minver.c:86
:1  %tmp_27 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_37: StgValue_271 (167)  [1/1] 0.00ns  loc: minver.c:87
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_37: tmp_13 (173)  [1/16] 6.30ns  loc: minver.c:88
:8  %tmp_13 = fdiv float %a_load_4, %pivot

ST_37: StgValue_273 (174)  [1/1] 2.39ns  loc: minver.c:88
:9  store float %tmp_13, float* %a_addr_6, align 4

ST_37: empty_13 (175)  [1/1] 0.00ns  loc: minver.c:89
:10  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_27) nounwind

ST_37: StgValue_275 (176)  [1/1] 0.00ns  loc: minver.c:86
:11  br label %7


 <State 38>: 1.57ns
ST_38: StgValue_276 (178)  [1/1] 1.57ns  loc: minver.c:91
.preheader11.preheader:0  br label %.preheader11


 <State 39>: 6.30ns
ST_39: i_3 (180)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i2 [ %i_9, %._crit_edge ], [ 0, %.preheader11.preheader ]

ST_39: exitcond3 (181)  [1/1] 1.54ns  loc: minver.c:91
.preheader11:1  %exitcond3 = icmp eq i2 %i_3, -1

ST_39: empty_14 (182)  [1/1] 0.00ns
.preheader11:2  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_39: i_9 (183)  [1/1] 0.75ns  loc: minver.c:91
.preheader11:3  %i_9 = add i2 %i_3, 1

ST_39: StgValue_281 (184)  [1/1] 0.00ns  loc: minver.c:91
.preheader11:4  br i1 %exitcond3, label %14, label %9

ST_39: tmp_15 (186)  [1/1] 1.54ns  loc: minver.c:92
:0  %tmp_15 = icmp eq i2 %i_3, %i_5

ST_39: StgValue_283 (187)  [1/1] 0.00ns  loc: minver.c:92
:1  br i1 %tmp_15, label %._crit_edge, label %10

ST_39: tmp_16_cast (189)  [1/1] 0.00ns  loc: minver.c:91
:0  %tmp_16_cast = zext i2 %i_3 to i5

ST_39: tmp_65 (190)  [1/1] 0.00ns  loc: minver.c:91
:1  %tmp_65 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_3, i2 0)

ST_39: p_shl4_cast (191)  [1/1] 0.00ns  loc: minver.c:93
:2  %p_shl4_cast = zext i4 %tmp_65 to i5

ST_39: tmp_66 (192)  [1/1] 0.75ns  loc: minver.c:93
:3  %tmp_66 = sub i5 %p_shl4_cast, %tmp_16_cast

ST_39: tmp_67 (193)  [1/1] 1.67ns  loc: minver.c:93
:4  %tmp_67 = add i5 %tmp_3_cast, %tmp_66

ST_39: tmp_70_cast (194)  [1/1] 0.00ns  loc: minver.c:93
:5  %tmp_70_cast = sext i5 %tmp_67 to i64

ST_39: a_addr_8 (195)  [1/1] 0.00ns  loc: minver.c:93
:6  %a_addr_8 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_70_cast

ST_39: w_3 (196)  [2/2] 2.39ns  loc: minver.c:93
:7  %w_3 = load float* %a_addr_8, align 4

ST_39: tmp_14 (244)  [16/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 40>: 2.39ns
ST_40: w_3 (196)  [1/2] 2.39ns  loc: minver.c:93
:7  %w_3 = load float* %a_addr_8, align 4


 <State 41>: 7.74ns
ST_41: w_3_to_int (197)  [1/1] 0.00ns  loc: minver.c:93
:8  %w_3_to_int = bitcast float %w_3 to i32

ST_41: tmp_49 (198)  [1/1] 0.00ns  loc: minver.c:93
:9  %tmp_49 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_3_to_int, i32 23, i32 30)

ST_41: tmp_68 (199)  [1/1] 0.00ns  loc: minver.c:93
:10  %tmp_68 = trunc i32 %w_3_to_int to i23

ST_41: notlhs5 (200)  [1/1] 2.47ns  loc: minver.c:93
:11  %notlhs5 = icmp ne i8 %tmp_49, -1

ST_41: notrhs5 (201)  [1/1] 2.84ns  loc: minver.c:93
:12  %notrhs5 = icmp eq i23 %tmp_68, 0

ST_41: tmp_51 (202)  [1/1] 0.00ns  loc: minver.c:93 (grouped into LUT with out node tmp_53)
:13  %tmp_51 = or i1 %notrhs5, %notlhs5

ST_41: tmp_52 (203)  [1/1] 6.37ns  loc: minver.c:94
:14  %tmp_52 = fcmp oeq float %w_3, 0.000000e+00

ST_41: tmp_53 (204)  [1/1] 1.37ns  loc: minver.c:94 (out node of the LUT)
:15  %tmp_53 = and i1 %tmp_51, %tmp_52

ST_41: StgValue_302 (205)  [1/1] 0.00ns  loc: minver.c:94
:16  br i1 %tmp_53, label %._crit_edge19, label %.preheader10.preheader

ST_41: StgValue_303 (207)  [1/1] 1.57ns  loc: minver.c:95
.preheader10.preheader:0  br label %.preheader10


 <State 42>: 7.67ns
ST_42: j_1 (209)  [1/1] 0.00ns
.preheader10:0  %j_1 = phi i2 [ %j_5, %._crit_edge20 ], [ 0, %.preheader10.preheader ]

ST_42: exitcond2 (210)  [1/1] 1.54ns  loc: minver.c:95
.preheader10:1  %exitcond2 = icmp eq i2 %j_1, -1

ST_42: empty_15 (211)  [1/1] 0.00ns
.preheader10:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_42: j_5 (212)  [1/1] 0.75ns  loc: minver.c:95
.preheader10:3  %j_5 = add i2 %j_1, 1

ST_42: StgValue_308 (213)  [1/1] 0.00ns  loc: minver.c:95
.preheader10:4  br i1 %exitcond2, label %13, label %11

ST_42: tmp_20 (215)  [1/1] 1.54ns  loc: minver.c:96
:0  %tmp_20 = icmp eq i2 %j_1, %i_5

ST_42: StgValue_310 (216)  [1/1] 0.00ns  loc: minver.c:96
:1  br i1 %tmp_20, label %._crit_edge20, label %12

ST_42: tmp_21_cast (218)  [1/1] 0.00ns  loc: minver.c:96
:0  %tmp_21_cast = zext i2 %j_1 to i5

ST_42: tmp_69 (219)  [1/1] 1.67ns  loc: minver.c:96
:1  %tmp_69 = add i5 %tmp_9, %tmp_21_cast

ST_42: tmp_71_cast (220)  [1/1] 0.00ns  loc: minver.c:96
:2  %tmp_71_cast = sext i5 %tmp_69 to i64

ST_42: a_addr_9 (221)  [1/1] 0.00ns  loc: minver.c:96
:3  %a_addr_9 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_71_cast

ST_42: tmp_70 (222)  [1/1] 1.67ns  loc: minver.c:96
:4  %tmp_70 = add i5 %tmp_66, %tmp_21_cast

ST_42: tmp_72_cast (223)  [1/1] 0.00ns  loc: minver.c:96
:5  %tmp_72_cast = sext i5 %tmp_70 to i64

ST_42: a_addr_10 (224)  [1/1] 0.00ns  loc: minver.c:96
:6  %a_addr_10 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_72_cast

ST_42: a_load_6 (225)  [2/2] 2.39ns  loc: minver.c:96
:7  %a_load_6 = load float* %a_addr_9, align 4

ST_42: tmp_18_neg (234)  [1/1] 1.37ns  loc: minver.c:98
:0  %tmp_18_neg = xor i32 %w_3_to_int, -2147483648

ST_42: tmp_18 (235)  [1/1] 0.00ns  loc: minver.c:98
:1  %tmp_18 = bitcast i32 %tmp_18_neg to float

ST_42: tmp_19 (236)  [16/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 43>: 8.17ns
ST_43: a_load_6 (225)  [1/2] 2.39ns  loc: minver.c:96
:7  %a_load_6 = load float* %a_addr_9, align 4

ST_43: tmp_22 (226)  [4/4] 5.78ns  loc: minver.c:96
:8  %tmp_22 = fmul float %w_3, %a_load_6


 <State 44>: 5.78ns
ST_44: tmp_22 (226)  [3/4] 5.78ns  loc: minver.c:96
:8  %tmp_22 = fmul float %w_3, %a_load_6


 <State 45>: 5.78ns
ST_45: tmp_22 (226)  [2/4] 5.78ns  loc: minver.c:96
:8  %tmp_22 = fmul float %w_3, %a_load_6

ST_45: a_load_7 (227)  [2/2] 2.39ns  loc: minver.c:96
:9  %a_load_7 = load float* %a_addr_10, align 4


 <State 46>: 5.78ns
ST_46: tmp_22 (226)  [1/4] 5.78ns  loc: minver.c:96
:8  %tmp_22 = fmul float %w_3, %a_load_6

ST_46: a_load_7 (227)  [1/2] 2.39ns  loc: minver.c:96
:9  %a_load_7 = load float* %a_addr_10, align 4


 <State 47>: 8.26ns
ST_47: tmp_23 (228)  [5/5] 8.26ns  loc: minver.c:96
:10  %tmp_23 = fsub float %a_load_7, %tmp_22


 <State 48>: 8.26ns
ST_48: tmp_23 (228)  [4/5] 8.26ns  loc: minver.c:96
:10  %tmp_23 = fsub float %a_load_7, %tmp_22


 <State 49>: 8.26ns
ST_49: tmp_23 (228)  [3/5] 8.26ns  loc: minver.c:96
:10  %tmp_23 = fsub float %a_load_7, %tmp_22


 <State 50>: 8.26ns
ST_50: tmp_23 (228)  [2/5] 8.26ns  loc: minver.c:96
:10  %tmp_23 = fsub float %a_load_7, %tmp_22


 <State 51>: 8.26ns
ST_51: tmp_23 (228)  [1/5] 8.26ns  loc: minver.c:96
:10  %tmp_23 = fsub float %a_load_7, %tmp_22


 <State 52>: 2.39ns
ST_52: StgValue_334 (229)  [1/1] 2.39ns  loc: minver.c:96
:11  store float %tmp_23, float* %a_addr_10, align 4

ST_52: StgValue_335 (230)  [1/1] 0.00ns  loc: minver.c:96
:12  br label %._crit_edge20

ST_52: StgValue_336 (232)  [1/1] 0.00ns  loc: minver.c:95
._crit_edge20:0  br label %.preheader10


 <State 53>: 6.30ns
ST_53: tmp_19 (236)  [15/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 54>: 6.30ns
ST_54: tmp_19 (236)  [14/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 55>: 6.30ns
ST_55: tmp_19 (236)  [13/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 56>: 6.30ns
ST_56: tmp_19 (236)  [12/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 57>: 6.30ns
ST_57: tmp_19 (236)  [11/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 58>: 6.30ns
ST_58: tmp_19 (236)  [10/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 59>: 6.30ns
ST_59: tmp_19 (236)  [9/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 60>: 6.30ns
ST_60: tmp_19 (236)  [8/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 61>: 6.30ns
ST_61: tmp_19 (236)  [7/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 62>: 6.30ns
ST_62: tmp_19 (236)  [6/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 63>: 6.30ns
ST_63: tmp_19 (236)  [5/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 64>: 6.30ns
ST_64: tmp_19 (236)  [4/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 65>: 6.30ns
ST_65: tmp_19 (236)  [3/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 66>: 6.30ns
ST_66: tmp_19 (236)  [2/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 67>: 8.69ns
ST_67: tmp_19 (236)  [1/16] 6.30ns  loc: minver.c:98
:2  %tmp_19 = fdiv float %tmp_18, %pivot

ST_67: StgValue_352 (237)  [1/1] 2.39ns  loc: minver.c:98
:3  store float %tmp_19, float* %a_addr_8, align 4

ST_67: StgValue_353 (238)  [1/1] 0.00ns  loc: minver.c:99
:4  br label %._crit_edge19

ST_67: StgValue_354 (240)  [1/1] 0.00ns  loc: minver.c:100
._crit_edge19:0  br label %._crit_edge

ST_67: StgValue_355 (242)  [1/1] 0.00ns  loc: minver.c:91
._crit_edge:0  br label %.preheader11


 <State 68>: 6.30ns
ST_68: tmp_14 (244)  [15/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 69>: 6.30ns
ST_69: tmp_14 (244)  [14/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 70>: 6.30ns
ST_70: tmp_14 (244)  [13/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 71>: 6.30ns
ST_71: tmp_14 (244)  [12/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 72>: 6.30ns
ST_72: tmp_14 (244)  [11/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 73>: 6.30ns
ST_73: tmp_14 (244)  [10/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 74>: 6.30ns
ST_74: tmp_14 (244)  [9/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 75>: 6.30ns
ST_75: tmp_14 (244)  [8/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 76>: 6.30ns
ST_76: tmp_14 (244)  [7/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 77>: 6.30ns
ST_77: tmp_14 (244)  [6/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_14 (244)  [5/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_14 (244)  [4/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 80>: 6.30ns
ST_80: tmp_14 (244)  [3/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 81>: 6.30ns
ST_81: tmp_14 (244)  [2/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 82>: 8.69ns
ST_82: tmp_14 (244)  [1/16] 6.30ns  loc: minver.c:102
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot

ST_82: StgValue_371 (245)  [1/1] 2.39ns  loc: minver.c:102
:1  store float %tmp_14, float* %a_addr_7, align 4

ST_82: StgValue_372 (246)  [1/1] 0.00ns  loc: minver.c:55
:2  br label %.preheader14


 <State 83>: 1.54ns
ST_83: i_4 (252)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i2 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_83: exitcond1 (253)  [1/1] 1.54ns  loc: minver.c:106
.preheader8:1  %exitcond1 = icmp eq i2 %i_4, -1

ST_83: i_7 (254)  [1/1] 0.75ns  loc: minver.c:126
.preheader8:2  %i_7 = add i2 %i_4, 1

ST_83: StgValue_376 (255)  [1/1] 0.00ns  loc: minver.c:106
.preheader8:3  br i1 %exitcond1, label %.loopexit9.loopexit, label %.preheader.preheader

ST_83: empty_16 (257)  [1/1] 0.00ns
.preheader.preheader:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_83: tmp_s (258)  [1/1] 0.00ns  loc: minver.c:110
.preheader.preheader:1  %tmp_s = zext i2 %i_4 to i64

ST_83: tmp_cast (259)  [1/1] 0.00ns  loc: minver.c:110
.preheader.preheader:2  %tmp_cast = zext i2 %i_4 to i5

ST_83: work_addr_1 (260)  [1/1] 0.00ns  loc: minver.c:110
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_s

ST_83: StgValue_381 (261)  [1/1] 0.00ns  loc: minver.c:110
.preheader.preheader:4  br label %.preheader

ST_83: StgValue_382 (302)  [1/1] 0.00ns
.loopexit9.loopexit:0  br label %.loopexit9


 <State 84>: 2.39ns
ST_84: work_load (263)  [2/2] 2.39ns  loc: minver.c:110
.preheader:0  %work_load = load i2* %work_addr_1, align 1


 <State 85>: 4.78ns
ST_85: work_load (263)  [1/2] 2.39ns  loc: minver.c:110
.preheader:0  %work_load = load i2* %work_addr_1, align 1

ST_85: tmp_8 (264)  [1/1] 1.54ns  loc: minver.c:112
.preheader:1  %tmp_8 = icmp eq i2 %work_load, %i_4

ST_85: StgValue_386 (265)  [1/1] 0.00ns  loc: minver.c:112
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %15

ST_85: tmp_10 (267)  [1/1] 0.00ns  loc: minver.c:114
:0  %tmp_10 = zext i2 %work_load to i64

ST_85: work_addr_2 (277)  [1/1] 0.00ns  loc: minver.c:114
:10  %work_addr_2 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_10

ST_85: work_load_1 (278)  [2/2] 2.39ns  loc: minver.c:114
:11  %work_load_1 = load i2* %work_addr_2, align 1

ST_85: StgValue_390 (300)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8


 <State 86>: 2.39ns
ST_86: work_load_1 (278)  [1/2] 2.39ns  loc: minver.c:114
:11  %work_load_1 = load i2* %work_addr_2, align 1

ST_86: StgValue_392 (279)  [1/1] 2.39ns  loc: minver.c:115
:12  store i2 %work_load, i2* %work_addr_2, align 1


 <State 87>: 2.52ns
ST_87: tmp_10_cast (268)  [1/1] 0.00ns  loc: minver.c:110
:1  %tmp_10_cast = zext i2 %work_load to i5

ST_87: tmp_58 (269)  [1/1] 0.00ns  loc: minver.c:110
:2  %tmp_58 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %work_load, i2 0)

ST_87: tmp_59 (270)  [1/1] 0.00ns  loc: minver.c:110
:3  %tmp_59 = zext i4 %tmp_58 to i5

ST_87: p_shl5 (271)  [1/1] 0.00ns  loc: minver.c:120
:4  %p_shl5 = zext i4 %tmp_58 to i64

ST_87: tmp_60 (272)  [1/1] 1.26ns  loc: minver.c:120
:5  %tmp_60 = sub i5 %tmp_59, %tmp_10_cast

ST_87: tmp_61 (273)  [1/1] 1.26ns  loc: minver.c:120
:6  %tmp_61 = add i5 %tmp_cast, %tmp_60

ST_87: tmp_64_cast (274)  [1/1] 0.00ns  loc: minver.c:120
:7  %tmp_64_cast = sext i5 %tmp_61 to i64

ST_87: a_addr_2 (275)  [1/1] 0.00ns  loc: minver.c:120
:8  %a_addr_2 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_64_cast

ST_87: a_addr_3 (276)  [1/1] 0.00ns  loc: minver.c:121
:9  %a_addr_3 = getelementptr [9 x float]* %a, i64 0, i64 %p_shl5

ST_87: StgValue_402 (280)  [1/1] 2.39ns  loc: minver.c:116
:13  store i2 %work_load_1, i2* %work_addr_1, align 1

ST_87: StgValue_403 (281)  [1/1] 1.57ns  loc: minver.c:118
:14  br label %16


 <State 88>: 2.39ns
ST_88: j_2 (283)  [1/1] 0.00ns
:0  %j_2 = phi i2 [ 0, %15 ], [ %j_4, %17 ]

ST_88: exitcond (284)  [1/1] 1.54ns  loc: minver.c:118
:1  %exitcond = icmp eq i2 %j_2, -1

ST_88: j_4 (285)  [1/1] 0.75ns  loc: minver.c:118
:2  %j_4 = add i2 %j_2, 1

ST_88: StgValue_407 (286)  [1/1] 0.00ns  loc: minver.c:118
:3  br i1 %exitcond, label %.preheader.loopexit, label %17

ST_88: w_2 (291)  [2/2] 2.39ns  loc: minver.c:120
:3  %w_2 = load float* %a_addr_2, align 4

ST_88: a_load (292)  [2/2] 2.39ns  loc: minver.c:121
:4  %a_load = load float* %a_addr_3, align 4


 <State 89>: 4.78ns
ST_89: w_2 (291)  [1/2] 2.39ns  loc: minver.c:120
:3  %w_2 = load float* %a_addr_2, align 4

ST_89: a_load (292)  [1/2] 2.39ns  loc: minver.c:121
:4  %a_load = load float* %a_addr_3, align 4

ST_89: StgValue_412 (293)  [1/1] 2.39ns  loc: minver.c:121
:5  store float %a_load, float* %a_addr_2, align 4


 <State 90>: 2.39ns
ST_90: empty_17 (288)  [1/1] 0.00ns
:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_90: tmp_25 (289)  [1/1] 0.00ns  loc: minver.c:118
:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_90: StgValue_415 (290)  [1/1] 0.00ns  loc: minver.c:119
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_90: StgValue_416 (294)  [1/1] 2.39ns  loc: minver.c:122
:6  store float %w_2, float* %a_addr_3, align 4

ST_90: empty_18 (295)  [1/1] 0.00ns  loc: minver.c:123
:7  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_25) nounwind

ST_90: StgValue_418 (296)  [1/1] 0.00ns  loc: minver.c:118
:8  br label %16


 <State 91>: 0.00ns
ST_91: StgValue_419 (298)  [1/1] 0.00ns
.preheader.loopexit:0  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:51) [10]  (1.57 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:51) [10]  (0 ns)
	'store' operation (minver.c:52) of variable 'i' on array 'work', minver.c:42 [18]  (2.39 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:55) [25]  (0 ns)
	multiplexor before 'phi' operation ('wmax') with incoming values : ('wmax', minver.c:60) [41]  (1.57 ns)

 <State 4>: 4.91ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast7', minver.c:57) ('i', minver.c:57) [42]  (0 ns)
	'sub' operation ('tmp_50', minver.c:59) [53]  (1.26 ns)
	'add' operation ('tmp_54', minver.c:59) [54]  (1.26 ns)
	'getelementptr' operation ('a_addr_1', minver.c:59) [56]  (0 ns)
	'load' operation ('n', minver.c:59) on array 'a' [57]  (2.39 ns)

 <State 5>: 2.39ns
The critical path consists of the following:
	'load' operation ('n', minver.c:59) on array 'a' [57]  (2.39 ns)

 <State 6>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_38', minver_lib.c:11->minver.c:59) [64]  (6.37 ns)
	'and' operation ('tmp_39', minver_lib.c:11->minver.c:59) [65]  (0 ns)
	'select' operation ('w', minver.c:61) [68]  (1.37 ns)

 <State 7>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_47', minver.c:60) [82]  (6.37 ns)
	'and' operation ('tmp_48', minver.c:60) [83]  (1.37 ns)

 <State 8>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:60) on local variable 'r' [46]  (0 ns)
	'select' operation ('r', minver.c:60) [85]  (1.37 ns)
	'store' operation (minver.c:60) of variable 'r', minver.c:60 on local variable 'r' [88]  (1.57 ns)

 <State 9>: 5.73ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [91]  (0 ns)
	'sub' operation ('tmp_16', minver.c:66) [96]  (1.67 ns)
	'add' operation ('tmp_21', minver.c:66) [97]  (1.67 ns)
	'getelementptr' operation ('a_addr', minver.c:66) [99]  (0 ns)
	'load' operation ('pivot', minver.c:102) on array 'a' [100]  (2.39 ns)

 <State 10>: 2.39ns
The critical path consists of the following:
	'load' operation ('pivot', minver.c:102) on array 'a' [100]  (2.39 ns)

 <State 11>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_28', minver_lib.c:11->minver.c:67) [107]  (6.37 ns)
	'and' operation ('tmp_29', minver_lib.c:11->minver.c:67) [108]  (0 ns)
	'select' operation ('api', minver.c:67) [111]  (1.37 ns)

 <State 12>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:68) [112]  (5.12 ns)

 <State 13>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_33', minver.c:68) [119]  (6.9 ns)
	'and' operation ('tmp_34', minver.c:68) [120]  (1.37 ns)

 <State 14>: 4.78ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:76) on array 'work', minver.c:42 [129]  (2.39 ns)
	'store' operation (minver.c:76) of variable 'work_load_3', minver.c:76 on array 'work', minver.c:42 [130]  (2.39 ns)

 <State 15>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:77) of variable 'work_load_2', minver.c:75 on array 'work', minver.c:42 [131]  (2.39 ns)

 <State 16>: 4.06ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:78) [134]  (0 ns)
	'add' operation ('tmp_62', minver.c:80) [143]  (1.67 ns)
	'getelementptr' operation ('a_addr_4', minver.c:80) [145]  (0 ns)
	'load' operation ('w', minver.c:80) on array 'a' [149]  (2.39 ns)

 <State 17>: 4.78ns
The critical path consists of the following:
	'load' operation ('a_load_2', minver.c:81) on array 'a' [150]  (2.39 ns)
	'store' operation (minver.c:81) of variable 'a_load_2', minver.c:81 on array 'a' [151]  (2.39 ns)

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:82) of variable 'w', minver.c:80 on array 'a' [152]  (2.39 ns)

 <State 20>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:86) [160]  (1.57 ns)

 <State 21>: 4.06ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:86) [160]  (0 ns)
	'add' operation ('tmp_64', minver.c:88) [169]  (1.67 ns)
	'getelementptr' operation ('a_addr_6', minver.c:88) [171]  (0 ns)
	'load' operation ('a_load_4', minver.c:88) on array 'a' [172]  (2.39 ns)

 <State 22>: 8.69ns
The critical path consists of the following:
	'load' operation ('a_load_4', minver.c:88) on array 'a' [172]  (2.39 ns)
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 23>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 24>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 25>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 26>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 27>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 28>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)

 <State 37>: 8.69ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:88) [173]  (6.3 ns)
	'store' operation (minver.c:88) of variable 'tmp_13', minver.c:88 on array 'a' [174]  (2.39 ns)

 <State 38>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:91) [180]  (1.57 ns)

 <State 39>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 40>: 2.39ns
The critical path consists of the following:
	'load' operation ('w', minver.c:93) on array 'a' [196]  (2.39 ns)

 <State 41>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_52', minver.c:94) [203]  (6.37 ns)
	'and' operation ('tmp_53', minver.c:94) [204]  (1.37 ns)

 <State 42>: 7.67ns
The critical path consists of the following:
	'xor' operation ('tmp_18_neg', minver.c:98) [234]  (1.37 ns)
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 43>: 8.17ns
The critical path consists of the following:
	'load' operation ('a_load_6', minver.c:96) on array 'a' [225]  (2.39 ns)
	'fmul' operation ('tmp_22', minver.c:96) [226]  (5.78 ns)

 <State 44>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:96) [226]  (5.78 ns)

 <State 45>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:96) [226]  (5.78 ns)

 <State 46>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:96) [226]  (5.78 ns)

 <State 47>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:96) [228]  (8.26 ns)

 <State 48>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:96) [228]  (8.26 ns)

 <State 49>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:96) [228]  (8.26 ns)

 <State 50>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:96) [228]  (8.26 ns)

 <State 51>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:96) [228]  (8.26 ns)

 <State 52>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:96) of variable 'tmp_23', minver.c:96 on array 'a' [229]  (2.39 ns)

 <State 53>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 54>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 55>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 56>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 57>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 58>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 59>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 60>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 61>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 62>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 63>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 64>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 65>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 66>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)

 <State 67>: 8.69ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:98) [236]  (6.3 ns)
	'store' operation (minver.c:98) of variable 'tmp_19', minver.c:98 on array 'a' [237]  (2.39 ns)

 <State 68>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 69>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 70>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 71>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 72>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 73>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 74>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 76>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 80>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 81>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)

 <State 82>: 8.69ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:102) [244]  (6.3 ns)
	'store' operation (minver.c:102) of variable 'tmp_14', minver.c:102 on array 'a' [245]  (2.39 ns)

 <State 83>: 1.54ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:126) [252]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:106) [253]  (1.54 ns)

 <State 84>: 2.39ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:110) on array 'work', minver.c:42 [263]  (2.39 ns)

 <State 85>: 4.78ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:110) on array 'work', minver.c:42 [263]  (2.39 ns)
	'getelementptr' operation ('work_addr_2', minver.c:114) [277]  (0 ns)
	'load' operation ('work_load_1', minver.c:114) on array 'work', minver.c:42 [278]  (2.39 ns)

 <State 86>: 2.39ns
The critical path consists of the following:
	'load' operation ('work_load_1', minver.c:114) on array 'work', minver.c:42 [278]  (2.39 ns)

 <State 87>: 2.52ns
The critical path consists of the following:
	'sub' operation ('tmp_60', minver.c:120) [272]  (1.26 ns)
	'add' operation ('tmp_61', minver.c:120) [273]  (1.26 ns)

 <State 88>: 2.39ns
The critical path consists of the following:
	'load' operation ('w', minver.c:120) on array 'a' [291]  (2.39 ns)

 <State 89>: 4.78ns
The critical path consists of the following:
	'load' operation ('a_load', minver.c:121) on array 'a' [292]  (2.39 ns)
	'store' operation (minver.c:121) of variable 'a_load', minver.c:121 on array 'a' [293]  (2.39 ns)

 <State 90>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:122) of variable 'w', minver.c:120 on array 'a' [294]  (2.39 ns)

 <State 91>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
