// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2188,HLS_SYN_LUT=2697}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        a_Addr_B,
        a_EN_B,
        a_WEN_B,
        a_Din_B,
        a_Dout_B,
        a_Clk_B,
        a_Rst_B,
        ap_return
);

parameter    ap_ST_fsm_state1 = 69'b1;
parameter    ap_ST_fsm_state2 = 69'b10;
parameter    ap_ST_fsm_state3 = 69'b100;
parameter    ap_ST_fsm_pp0_stage0 = 69'b1000;
parameter    ap_ST_fsm_state9 = 69'b10000;
parameter    ap_ST_fsm_state10 = 69'b100000;
parameter    ap_ST_fsm_state11 = 69'b1000000;
parameter    ap_ST_fsm_state12 = 69'b10000000;
parameter    ap_ST_fsm_state13 = 69'b100000000;
parameter    ap_ST_fsm_state14 = 69'b1000000000;
parameter    ap_ST_fsm_state15 = 69'b10000000000;
parameter    ap_ST_fsm_pp1_stage0 = 69'b100000000000;
parameter    ap_ST_fsm_pp1_stage1 = 69'b1000000000000;
parameter    ap_ST_fsm_state20 = 69'b10000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 69'b100000000000000;
parameter    ap_ST_fsm_state38 = 69'b1000000000000000;
parameter    ap_ST_fsm_state39 = 69'b10000000000000000;
parameter    ap_ST_fsm_state40 = 69'b100000000000000000;
parameter    ap_ST_fsm_state41 = 69'b1000000000000000000;
parameter    ap_ST_fsm_state42 = 69'b10000000000000000000;
parameter    ap_ST_fsm_state43 = 69'b100000000000000000000;
parameter    ap_ST_fsm_state44 = 69'b1000000000000000000000;
parameter    ap_ST_fsm_state45 = 69'b10000000000000000000000;
parameter    ap_ST_fsm_state46 = 69'b100000000000000000000000;
parameter    ap_ST_fsm_state47 = 69'b1000000000000000000000000;
parameter    ap_ST_fsm_state48 = 69'b10000000000000000000000000;
parameter    ap_ST_fsm_state49 = 69'b100000000000000000000000000;
parameter    ap_ST_fsm_state50 = 69'b1000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 69'b10000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 69'b100000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 69'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 69'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 69'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 69'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 69'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 69'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 69'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 69'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 69'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 69'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 69'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 69'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 69'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 69'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 69'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 69'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 69'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 69'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 69'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 69'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 69'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 69'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 69'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 69'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 69'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 69'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 69'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 69'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 69'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 69'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 69'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 69'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 69'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 69'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 69'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 69'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 69'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 69'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 69'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] a_Addr_B;
output   a_EN_B;
output  [3:0] a_WEN_B;
output  [31:0] a_Din_B;
input  [31:0] a_Dout_B;
output   a_Clk_B;
output   a_Rst_B;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;
reg[31:0] a_Din_A;
reg a_EN_B;
reg[3:0] a_WEN_B;
reg[31:0] a_Din_B;

(* fsm_encoding = "none" *) reg   [68:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_253;
reg   [31:0] r_1_reg_265;
reg   [31:0] ap_pipeline_reg_pp0_iter1_r_1_reg_265;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [31:0] ap_pipeline_reg_pp0_iter2_r_1_reg_265;
reg   [31:0] ap_pipeline_reg_pp0_iter3_r_1_reg_265;
reg   [1:0] j_reg_275;
reg   [1:0] i_2_reg_286;
reg   [31:0] reg_380;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond6_reg_1166;
wire   [0:0] ap_CS_fsm_state10;
wire   [1:0] work_q0;
reg   [1:0] reg_386;
wire   [0:0] ap_CS_fsm_state14;
wire   [1:0] work_q1;
wire   [0:0] ap_CS_fsm_state85;
reg   [31:0] reg_393;
wire   [0:0] ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] exitcond5_reg_1244;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond4_reg_1265;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] ap_CS_fsm_state89;
reg   [31:0] reg_403;
wire   [0:0] ap_CS_fsm_state43;
wire   [0:0] ap_CS_fsm_state46;
wire   [1:0] i_1_fu_416_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_432_p2;
reg   [0:0] tmp_2_reg_1127;
wire   [0:0] ap_CS_fsm_state3;
wire   [1:0] k_fu_438_p2;
reg   [1:0] k_reg_1131;
wire   [31:0] i_5_cast7_fu_444_p1;
reg   [31:0] i_5_cast7_reg_1136;
wire   [63:0] tmp_3_fu_448_p1;
reg   [63:0] tmp_3_reg_1142;
wire   [4:0] tmp_3_cast_fu_452_p1;
reg   [4:0] tmp_3_cast_reg_1147;
wire   [4:0] tmp_9_fu_473_p2;
reg   [4:0] tmp_9_reg_1154;
reg   [3:0] a_addr_7_reg_1161;
wire   [0:0] exitcond6_fu_479_p2;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond6_reg_1166;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond6_reg_1166;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond6_reg_1166;
wire   [31:0] i_6_fu_517_p2;
reg   [31:0] i_6_reg_1175;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] w_4_fu_575_p3;
reg   [31:0] w_4_reg_1180;
reg   [31:0] ap_pipeline_reg_pp0_iter3_w_4_reg_1180;
wire   [0:0] tmp_48_fu_660_p2;
reg   [0:0] tmp_48_reg_1187;
wire   [31:0] wmax_1_fu_666_p3;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] r_load_reg_1198;
wire   [0:0] ap_CS_fsm_state9;
wire   [4:0] tmp_16_fu_700_p2;
reg   [4:0] tmp_16_reg_1204;
wire   [31:0] api_fu_768_p3;
reg   [31:0] api_reg_1214;
wire   [0:0] ap_CS_fsm_state11;
wire   [63:0] tmp_5_fu_359_p1;
reg   [63:0] tmp_5_reg_1219;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_1_fu_821_p2;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_34_fu_815_p2;
reg   [8:0] work_addr_3_reg_1232;
reg   [8:0] work_addr_4_reg_1238;
wire   [0:0] exitcond5_fu_825_p2;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond5_reg_1244;
wire   [1:0] j_3_fu_831_p2;
reg   [1:0] j_3_reg_1248;
reg   [3:0] a_addr_4_reg_1253;
reg   [3:0] a_addr_5_reg_1259;
reg   [3:0] ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1259;
wire   [0:0] exitcond4_fu_861_p2;
reg   [0:0] ap_pipeline_reg_pp2_iter1_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter2_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter3_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter4_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter5_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter6_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter7_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter8_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter9_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter10_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter11_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter12_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter13_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter14_exitcond4_reg_1265;
reg   [0:0] ap_pipeline_reg_pp2_iter15_exitcond4_reg_1265;
wire   [1:0] i_8_fu_867_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [3:0] a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1274;
reg   [3:0] ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1274;
wire   [1:0] i_9_fu_893_p2;
reg   [1:0] i_9_reg_1283;
wire   [0:0] ap_CS_fsm_state39;
wire   [0:0] tmp_15_fu_899_p2;
reg   [0:0] tmp_15_reg_1288;
wire   [0:0] exitcond3_fu_887_p2;
wire   [4:0] tmp_66_fu_921_p2;
reg   [4:0] tmp_66_reg_1292;
reg   [3:0] a_addr_8_reg_1297;
wire   [31:0] w_3_to_int_fu_937_p1;
reg   [31:0] w_3_to_int_reg_1303;
wire   [0:0] ap_CS_fsm_state41;
wire   [0:0] tmp_53_fu_973_p2;
reg   [0:0] tmp_53_reg_1308;
wire   [1:0] j_5_fu_985_p2;
reg   [1:0] j_5_reg_1315;
wire   [0:0] ap_CS_fsm_state42;
wire   [0:0] tmp_20_fu_991_p2;
reg   [0:0] tmp_20_reg_1320;
wire   [0:0] exitcond2_fu_979_p2;
reg   [3:0] a_addr_10_reg_1329;
wire   [31:0] tmp_18_fu_1026_p1;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] tmp_22_reg_1340;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] tmp_23_reg_1345;
wire   [0:0] ap_CS_fsm_state51;
wire   [1:0] i_7_fu_1037_p2;
reg   [1:0] i_7_reg_1353;
wire   [0:0] ap_CS_fsm_state83;
wire   [4:0] tmp_cast_fu_1048_p1;
reg   [4:0] tmp_cast_reg_1358;
wire   [0:0] exitcond1_fu_1031_p2;
reg   [8:0] work_addr_1_reg_1363;
reg   [8:0] work_addr_2_reg_1372;
wire   [0:0] tmp_8_fu_1052_p2;
reg   [1:0] work_load_1_reg_1378;
wire   [0:0] ap_CS_fsm_state86;
reg   [3:0] a_addr_2_reg_1383;
wire   [0:0] ap_CS_fsm_state87;
reg   [3:0] a_addr_3_reg_1388;
wire   [1:0] j_4_fu_1106_p2;
reg   [1:0] j_4_reg_1396;
wire   [0:0] ap_CS_fsm_state88;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [0:0] ap_CS_fsm_state15;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] ap_CS_fsm_state20;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [1:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [1:0] work_d1;
reg   [1:0] i_reg_229;
wire   [0:0] exitcond7_fu_410_p2;
reg   [1:0] i_5_reg_241;
wire   [0:0] ap_CS_fsm_state82;
reg   [31:0] wmax_phi_fu_257_p4;
reg   [31:0] r_1_phi_fu_268_p4;
reg   [1:0] j_phi_fu_279_p4;
reg   [1:0] i_3_reg_297;
wire   [0:0] ap_CS_fsm_state67;
wire   [0:0] ap_CS_fsm_state38;
reg   [1:0] j_1_reg_308;
wire   [0:0] ap_CS_fsm_state52;
reg   [1:0] i_4_reg_319;
reg   [1:0] j_2_reg_331;
wire   [0:0] ap_CS_fsm_state90;
wire   [63:0] tmp_fu_422_p1;
wire   [63:0] p_shl_fu_464_p1;
wire  signed [63:0] tmp_61_cast_fu_512_p1;
wire  signed [63:0] tmp_58_cast_fu_711_p1;
wire  signed [63:0] tmp_4_fu_776_p1;
wire  signed [63:0] tmp_65_cast_fu_846_p1;
wire  signed [63:0] tmp_66_cast_fu_856_p1;
wire  signed [63:0] tmp_67_cast_fu_882_p1;
wire  signed [63:0] tmp_70_cast_fu_932_p1;
wire  signed [63:0] tmp_71_cast_fu_1006_p1;
wire  signed [63:0] tmp_72_cast_fu_1016_p1;
wire   [63:0] tmp_s_fu_1043_p1;
wire   [63:0] tmp_10_fu_1058_p1;
wire  signed [63:0] tmp_64_cast_fu_1095_p1;
wire   [63:0] p_shl5_fu_1079_p1;
reg   [31:0] r_fu_90;
wire   [31:0] r_2_fu_672_p3;
wire   [0:0] ap_CS_fsm_state84;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] a_Addr_B_orig;
wire   [31:0] grp_fu_351_p2;
wire   [0:0] ap_CS_fsm_state45;
wire   [0:0] ap_CS_fsm_state47;
reg   [31:0] grp_fu_351_p0;
reg   [31:0] grp_fu_362_p0;
wire   [3:0] tmp_7_fu_456_p3;
wire   [4:0] p_shl_cast_fu_469_p1;
wire   [2:0] tmp_43_fu_489_p1;
wire   [4:0] p_shl2_cast_fu_493_p3;
wire   [4:0] tmp_41_fu_485_p1;
wire   [4:0] tmp_50_fu_501_p2;
wire   [4:0] tmp_54_fu_507_p2;
wire   [31:0] n_assign_1_to_int_fu_523_p1;
wire   [7:0] tmp_35_fu_527_p4;
wire   [22:0] tmp_55_fu_537_p1;
wire   [0:0] notrhs_fu_547_p2;
wire   [0:0] notlhs_fu_541_p2;
wire   [0:0] tmp_37_fu_553_p2;
wire   [0:0] grp_fu_362_p2;
wire   [31:0] f_neg_i_fu_565_p2;
wire   [0:0] tmp_39_fu_559_p2;
wire   [31:0] f_1_fu_571_p1;
wire   [31:0] w_4_to_int_fu_583_p1;
wire   [31:0] wmax_to_int_fu_600_p1;
wire   [7:0] tmp_40_fu_586_p4;
wire   [22:0] tmp_56_fu_596_p1;
wire   [0:0] notrhs3_fu_624_p2;
wire   [0:0] notlhs3_fu_618_p2;
wire   [7:0] tmp_42_fu_604_p4;
wire   [22:0] tmp_57_fu_614_p1;
wire   [0:0] notrhs4_fu_642_p2;
wire   [0:0] notlhs4_fu_636_p2;
wire   [0:0] tmp_44_fu_630_p2;
wire   [0:0] tmp_45_fu_648_p2;
wire   [0:0] tmp_46_fu_654_p2;
wire   [0:0] tmp_47_fu_367_p2;
wire   [2:0] tmp_12_fu_688_p1;
wire   [4:0] p_shl3_cast_fu_692_p3;
wire   [4:0] tmp_11_fu_684_p1;
wire   [4:0] tmp_21_fu_706_p2;
wire   [31:0] pivot_to_int_fu_716_p1;
wire   [7:0] tmp_6_fu_720_p4;
wire   [22:0] tmp_31_fu_730_p1;
wire   [0:0] notrhs1_fu_740_p2;
wire   [0:0] notlhs1_fu_734_p2;
wire   [0:0] tmp_17_fu_746_p2;
wire   [31:0] f_neg_i1_fu_758_p2;
wire   [0:0] tmp_29_fu_752_p2;
wire   [31:0] f_fu_764_p1;
wire   [63:0] tmp_5_to_int_fu_780_p1;
wire   [10:0] tmp_30_fu_783_p4;
wire   [51:0] tmp_36_fu_793_p1;
wire   [0:0] notrhs2_fu_803_p2;
wire   [0:0] notlhs2_fu_797_p2;
wire   [0:0] tmp_32_fu_809_p2;
wire   [0:0] tmp_33_fu_372_p2;
wire   [4:0] tmp_11_cast_fu_837_p1;
wire   [4:0] tmp_62_fu_841_p2;
wire   [4:0] tmp_63_fu_851_p2;
wire   [4:0] tmp_12_cast_fu_873_p1;
wire   [4:0] tmp_64_fu_877_p2;
wire   [3:0] tmp_65_fu_909_p3;
wire   [4:0] p_shl4_cast_fu_917_p1;
wire   [4:0] tmp_16_cast_fu_905_p1;
wire   [4:0] tmp_67_fu_927_p2;
wire   [7:0] tmp_49_fu_941_p4;
wire   [22:0] tmp_68_fu_951_p1;
wire   [0:0] notrhs5_fu_961_p2;
wire   [0:0] notlhs5_fu_955_p2;
wire   [0:0] tmp_51_fu_967_p2;
wire   [4:0] tmp_21_cast_fu_997_p1;
wire   [4:0] tmp_69_fu_1001_p2;
wire   [4:0] tmp_70_fu_1011_p2;
wire   [31:0] tmp_18_neg_fu_1021_p2;
wire   [3:0] tmp_58_fu_1067_p3;
wire   [4:0] tmp_59_fu_1075_p1;
wire   [4:0] tmp_10_cast_fu_1063_p1;
wire   [4:0] tmp_60_fu_1084_p2;
wire   [4:0] tmp_61_fu_1090_p2;
reg   [4:0] grp_fu_362_opcode;
wire   [0:0] exitcond_fu_1100_p2;
reg   [68:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 69'b1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 2 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_403),
    .din1(tmp_22_reg_1340),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

minver_hwa_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_393),
    .din1(a_Dout_B),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

minver_hwa_fdiv_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_351_p0),
    .din1(reg_380),
    .ce(1'b1),
    .dout(grp_fu_351_p2)
);

minver_hwa_fpext_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_eOg_U4(
    .din0(api_reg_1214),
    .dout(tmp_5_fu_359_p1)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U5(
    .din0(grp_fu_362_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_362_opcode),
    .dout(grp_fu_362_p2)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U6(
    .din0(w_4_reg_1180),
    .din1(wmax_phi_fu_257_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_47_fu_367_p2)
);

minver_hwa_dcmp_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6g8j_U7(
    .din0(tmp_5_reg_1219),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_33_fu_372_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_479_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_432_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_479_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_432_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_479_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond5_fu_825_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == exitcond5_reg_1244))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_pp1_stage1) & ~(1'b0 == exitcond5_reg_1244)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond4_fu_861_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond4_fu_861_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond4_fu_861_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond4_fu_861_p2))) begin
        i_2_reg_286 <= i_8_fu_867_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_286 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_3_reg_297 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        i_3_reg_297 <= i_9_reg_1283;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == tmp_2_fu_432_p2))) begin
        i_4_reg_319 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_CS_fsm_state85) & ~(1'b0 == tmp_8_fu_1052_p2))) begin
        i_4_reg_319 <= i_7_reg_1353;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_410_p2))) begin
        i_5_reg_241 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        i_5_reg_241 <= k_reg_1131;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_410_p2))) begin
        i_reg_229 <= i_1_fu_416_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_229 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (1'b0 == tmp_53_fu_973_p2))) begin
        j_1_reg_308 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        j_1_reg_308 <= j_5_reg_1315;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        j_2_reg_331 <= j_4_reg_1396;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        j_2_reg_331 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond5_reg_1244) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_reg_275 <= j_3_reg_1248;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_reg_275 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_432_p2))) begin
        r_1_reg_265 <= i_5_cast7_fu_444_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1166 == 1'b0))) begin
        r_1_reg_265 <= i_6_reg_1175;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1166))) begin
        r_fu_90 <= r_2_fu_672_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_410_p2))) begin
        r_fu_90 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        reg_386 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_386 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond4_reg_1265)) | (1'b1 == ap_CS_fsm_state40))) begin
        reg_393 <= a_Dout_B;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond5_reg_1244)) | (1'b1 == ap_CS_fsm_state89))) begin
        reg_393 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        reg_403 <= a_Dout_A;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        reg_403 <= a_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_432_p2))) begin
        wmax_reg_253 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1166))) begin
        wmax_reg_253 <= wmax_1_fu_666_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'b0 == exitcond2_fu_979_p2) & (1'b0 == tmp_20_fu_991_p2))) begin
        a_addr_10_reg_1329 <= tmp_72_cast_fu_1016_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        a_addr_2_reg_1383 <= tmp_64_cast_fu_1095_p1;
        a_addr_3_reg_1388[3 : 2] <= p_shl5_fu_1079_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond5_fu_825_p2))) begin
        a_addr_4_reg_1253 <= tmp_65_cast_fu_846_p1;
        a_addr_5_reg_1259 <= tmp_66_cast_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond4_fu_861_p2))) begin
        a_addr_6_reg_1274 <= tmp_67_cast_fu_882_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_432_p2))) begin
        a_addr_7_reg_1161[3 : 2] <= p_shl_fu_464_p1[3 : 2];
        i_5_cast7_reg_1136[1 : 0] <= i_5_cast7_fu_444_p1[1 : 0];
        tmp_3_cast_reg_1147[1 : 0] <= tmp_3_cast_fu_452_p1[1 : 0];
        tmp_3_reg_1142[1 : 0] <= tmp_3_fu_448_p1[1 : 0];
        tmp_9_reg_1154 <= tmp_9_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'b0 == exitcond3_fu_887_p2) & (1'b0 == tmp_15_fu_899_p2))) begin
        a_addr_8_reg_1297 <= tmp_70_cast_fu_932_p1;
        tmp_66_reg_1292 <= tmp_66_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond6_reg_1166 <= exitcond6_reg_1166;
        ap_pipeline_reg_pp0_iter1_r_1_reg_265 <= r_1_reg_265;
        exitcond6_reg_1166 <= exitcond6_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp0_iter2_exitcond6_reg_1166 <= ap_pipeline_reg_pp0_iter1_exitcond6_reg_1166;
        ap_pipeline_reg_pp0_iter2_r_1_reg_265 <= ap_pipeline_reg_pp0_iter1_r_1_reg_265;
        ap_pipeline_reg_pp0_iter3_exitcond6_reg_1166 <= ap_pipeline_reg_pp0_iter2_exitcond6_reg_1166;
        ap_pipeline_reg_pp0_iter3_r_1_reg_265 <= ap_pipeline_reg_pp0_iter2_r_1_reg_265;
        ap_pipeline_reg_pp0_iter3_w_4_reg_1180 <= w_4_reg_1180;
        ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter10_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter9_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter10_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter11_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter10_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter11_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter12_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter11_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter12_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter13_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter12_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter13_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter14_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter13_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter14_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter15_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter14_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter2_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter1_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter2_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter3_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter2_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter3_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter4_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter3_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter4_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter5_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter4_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter5_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter6_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter5_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter6_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter7_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter6_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter7_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter8_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter7_exitcond4_reg_1265;
        ap_pipeline_reg_pp2_iter9_a_addr_6_reg_1274 <= ap_pipeline_reg_pp2_iter8_a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter9_exitcond4_reg_1265 <= ap_pipeline_reg_pp2_iter8_exitcond4_reg_1265;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1259 <= a_addr_5_reg_1259;
        ap_pipeline_reg_pp1_iter1_exitcond5_reg_1244 <= exitcond5_reg_1244;
        exitcond5_reg_1244 <= exitcond5_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        ap_pipeline_reg_pp2_iter1_a_addr_6_reg_1274 <= a_addr_6_reg_1274;
        ap_pipeline_reg_pp2_iter1_exitcond4_reg_1265 <= exitcond4_reg_1265;
        exitcond4_reg_1265 <= exitcond4_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        api_reg_1214 <= api_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_479_p2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_6_reg_1175 <= i_6_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_7_reg_1353 <= i_7_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_9_reg_1283 <= i_9_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_3_reg_1248 <= j_3_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        j_4_reg_1396 <= j_4_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        j_5_reg_1315 <= j_5_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_1131 <= k_fu_438_p2;
        tmp_2_reg_1127 <= tmp_2_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        r_load_reg_1198 <= r_fu_90;
        tmp_16_reg_1204 <= tmp_16_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1166 == 1'b0)) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_380 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'b0 == exitcond3_fu_887_p2))) begin
        tmp_15_reg_1288 <= tmp_15_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (1'b0 == exitcond2_fu_979_p2))) begin
        tmp_20_reg_1320 <= tmp_20_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_22_reg_1340 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_23_reg_1345 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter2_exitcond6_reg_1166)) begin
        tmp_48_reg_1187 <= tmp_48_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_53_reg_1308 <= tmp_53_fu_973_p2;
        w_3_to_int_reg_1303 <= w_3_to_int_fu_937_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_5_reg_1219 <= tmp_5_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (1'b0 == exitcond1_fu_1031_p2))) begin
        tmp_cast_reg_1358[1 : 0] <= tmp_cast_fu_1048_p1[1 : 0];
        work_addr_1_reg_1363[1 : 0] <= tmp_s_fu_1043_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1166)) begin
        w_4_reg_1180 <= w_4_fu_575_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) & (1'b0 == tmp_8_fu_1052_p2))) begin
        work_addr_2_reg_1372[1 : 0] <= tmp_10_fu_1058_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == tmp_2_reg_1127) & (1'b0 == tmp_34_fu_815_p2) & (1'b0 == tmp_1_fu_821_p2))) begin
        work_addr_3_reg_1232[1 : 0] <= tmp_3_reg_1142[1 : 0];
        work_addr_4_reg_1238 <= tmp_4_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        work_load_1_reg_1378 <= work_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88))) begin
        a_Addr_A_orig = a_addr_2_reg_1383;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        a_Addr_A_orig = a_addr_8_reg_1297;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        a_Addr_A_orig = a_addr_10_reg_1329;
    end else if ((1'b1 == ap_enable_reg_pp2_iter16)) begin
        a_Addr_A_orig = ap_pipeline_reg_pp2_iter15_a_addr_6_reg_1274;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp1_iter1_a_addr_5_reg_1259;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_Addr_A_orig = tmp_65_cast_fu_846_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_Addr_A_orig = tmp_58_cast_fu_711_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_Addr_A_orig = tmp_61_cast_fu_512_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state90))) begin
        a_Addr_B_orig = a_addr_3_reg_1388;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_Addr_B_orig = a_addr_7_reg_1161;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_Addr_B_orig = a_addr_10_reg_1329;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        a_Addr_B_orig = tmp_71_cast_fu_1006_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        a_Addr_B_orig = tmp_70_cast_fu_932_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        a_Addr_B_orig = tmp_67_cast_fu_882_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Addr_B_orig = a_addr_4_reg_1253;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_Addr_B_orig = tmp_66_cast_fu_856_p1;
    end else begin
        a_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        a_Din_A = a_Dout_B;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_enable_reg_pp2_iter16))) begin
        a_Din_A = grp_fu_351_p2;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        a_Din_A = reg_393;
    end else begin
        a_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        a_Din_B = reg_393;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        a_Din_B = grp_fu_351_p2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_Din_B = tmp_23_reg_1345;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Din_B = a_Dout_B;
    end else begin
        a_Din_B = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state67) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1)) | (1'b1 == ap_enable_reg_pp2_iter16) | (1'b1 == ap_CS_fsm_state45))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state90))) begin
        a_EN_B = 1'b1;
    end else begin
        a_EN_B = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_pipeline_reg_pp1_iter1_exitcond5_reg_1244)) | ((1'b1 == ap_enable_reg_pp2_iter16) & (1'b0 == ap_pipeline_reg_pp2_iter15_exitcond4_reg_1265)) | ((1'b1 == ap_CS_fsm_state67) & (1'b0 == tmp_15_reg_1288) & (1'b0 == tmp_53_reg_1308)))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond5_reg_1244)) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state90) | ((1'b1 == ap_CS_fsm_state52) & (1'b0 == tmp_20_reg_1320)))) begin
        a_WEN_B = ap_const_lv4_F;
    end else begin
        a_WEN_B = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (~(1'b0 == tmp_2_reg_1127) | ~(1'b0 == tmp_34_fu_815_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (~(1'b0 == tmp_2_reg_1127) | ~(1'b0 == tmp_34_fu_815_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_351_p0 = tmp_18_fu_1026_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_351_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        grp_fu_351_p0 = a_Dout_B;
    end else begin
        grp_fu_351_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_362_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1166) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        grp_fu_362_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_362_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_362_p0 = reg_393;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_362_p0 = reg_380;
    end else begin
        grp_fu_362_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond5_reg_1244) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        j_phi_fu_279_p4 = j_3_reg_1248;
    end else begin
        j_phi_fu_279_p4 = j_reg_275;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond6_reg_1166 == 1'b0))) begin
        r_1_phi_fu_268_p4 = i_6_reg_1175;
    end else begin
        r_1_phi_fu_268_p4 = r_1_reg_265;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1166))) begin
        wmax_phi_fu_257_p4 = wmax_1_fu_666_p3;
    end else begin
        wmax_phi_fu_257_p4 = wmax_reg_253;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        work_address0 = work_addr_1_reg_1363;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        work_address0 = tmp_10_fu_1058_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address0 = work_addr_4_reg_1238;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_address0 = tmp_3_reg_1142;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_422_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        work_address1 = work_addr_2_reg_1372;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        work_address1 = work_addr_1_reg_1363;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = work_addr_3_reg_1232;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_address1 = tmp_4_fu_776_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state15))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        work_d0 = work_load_1_reg_1378;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d0 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_229;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        work_d1 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_410_p2)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state86))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond7_fu_410_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == tmp_2_fu_432_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter4) & ~(1'b1 == ap_enable_reg_pp0_iter3)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_479_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_479_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~(1'b0 == tmp_2_reg_1127) | ~(1'b0 == tmp_34_fu_815_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1127) & (1'b0 == tmp_34_fu_815_p2) & ~(1'b0 == tmp_1_fu_821_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond5_fu_825_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & ~(1'b1 == ap_enable_reg_pp1_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter16) & ~(1'b1 == ap_enable_reg_pp2_iter15)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond4_fu_861_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond4_fu_861_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b0 == exitcond3_fu_887_p2) & ~(1'b0 == tmp_15_fu_899_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if (((1'b0 == exitcond3_fu_887_p2) & (1'b0 == tmp_15_fu_899_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if ((1'b0 == tmp_53_fu_973_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b0 == exitcond2_fu_979_p2) & ~(1'b0 == tmp_20_fu_991_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else if (((1'b0 == exitcond2_fu_979_p2) & (1'b0 == tmp_20_fu_991_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state83 : begin
            if (~(1'b0 == exitcond1_fu_1031_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (~(1'b0 == tmp_8_fu_1052_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if ((1'b0 == exitcond_fu_1100_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Addr_B = a_Addr_B_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Clk_B = ap_clk;

assign a_Rst_A = ap_rst;

assign a_Rst_B = ap_rst;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state38 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state39 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state45 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state46 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state47 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state51 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state52 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state67 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_state82 = ap_CS_fsm[ap_const_lv32_3B];

assign ap_CS_fsm_state83 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_state84 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_state85 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_state86 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_state87 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_state88 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state89 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state90 = ap_CS_fsm[ap_const_lv32_43];

assign ap_return = ap_const_lv32_1;

assign api_fu_768_p3 = ((tmp_29_fu_752_p2[0:0] === 1'b1) ? reg_380 : f_fu_764_p1);

assign exitcond1_fu_1031_p2 = ((i_4_reg_319 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_979_p2 = ((j_1_reg_308 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond3_fu_887_p2 = ((i_3_reg_297 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond4_fu_861_p2 = ((i_2_reg_286 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond5_fu_825_p2 = ((j_phi_fu_279_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond6_fu_479_p2 = ((r_1_phi_fu_268_p4 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign exitcond7_fu_410_p2 = ((i_reg_229 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_1100_p2 = ((j_2_reg_331 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign f_1_fu_571_p1 = f_neg_i_fu_565_p2;

assign f_fu_764_p1 = f_neg_i1_fu_758_p2;

assign f_neg_i1_fu_758_p2 = (pivot_to_int_fu_716_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_565_p2 = (n_assign_1_to_int_fu_523_p1 ^ ap_const_lv32_80000000);

assign i_1_fu_416_p2 = (i_reg_229 + ap_const_lv2_1);

assign i_5_cast7_fu_444_p1 = i_5_reg_241;

assign i_6_fu_517_p2 = (ap_const_lv32_1 + r_1_phi_fu_268_p4);

assign i_7_fu_1037_p2 = (i_4_reg_319 + ap_const_lv2_1);

assign i_8_fu_867_p2 = (i_2_reg_286 + ap_const_lv2_1);

assign i_9_fu_893_p2 = (i_3_reg_297 + ap_const_lv2_1);

assign j_3_fu_831_p2 = (j_phi_fu_279_p4 + ap_const_lv2_1);

assign j_4_fu_1106_p2 = (j_2_reg_331 + ap_const_lv2_1);

assign j_5_fu_985_p2 = (j_1_reg_308 + ap_const_lv2_1);

assign k_fu_438_p2 = (i_5_reg_241 + ap_const_lv2_1);

assign n_assign_1_to_int_fu_523_p1 = reg_380;

assign notlhs1_fu_734_p2 = ((tmp_6_fu_720_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_797_p2 = ((tmp_30_fu_783_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_618_p2 = ((tmp_40_fu_586_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_636_p2 = ((tmp_42_fu_604_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_955_p2 = ((tmp_49_fu_941_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_541_p2 = ((tmp_35_fu_527_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_740_p2 = ((tmp_31_fu_730_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_803_p2 = ((tmp_36_fu_793_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_624_p2 = ((tmp_56_fu_596_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_642_p2 = ((tmp_57_fu_614_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_961_p2 = ((tmp_68_fu_951_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_547_p2 = ((tmp_55_fu_537_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_shl2_cast_fu_493_p3 = {{tmp_43_fu_489_p1}, {ap_const_lv2_0}};

assign p_shl3_cast_fu_692_p3 = {{tmp_12_fu_688_p1}, {ap_const_lv2_0}};

assign p_shl4_cast_fu_917_p1 = tmp_65_fu_909_p3;

assign p_shl5_fu_1079_p1 = tmp_58_fu_1067_p3;

assign p_shl_cast_fu_469_p1 = tmp_7_fu_456_p3;

assign p_shl_fu_464_p1 = tmp_7_fu_456_p3;

assign pivot_to_int_fu_716_p1 = reg_380;

assign r_2_fu_672_p3 = ((tmp_48_reg_1187[0:0] === 1'b1) ? ap_pipeline_reg_pp0_iter3_r_1_reg_265 : r_fu_90);

assign tmp_10_cast_fu_1063_p1 = reg_386;

assign tmp_10_fu_1058_p1 = work_q1;

assign tmp_11_cast_fu_837_p1 = j_phi_fu_279_p4;

assign tmp_11_fu_684_p1 = r_fu_90[4:0];

assign tmp_12_cast_fu_873_p1 = i_2_reg_286;

assign tmp_12_fu_688_p1 = r_fu_90[2:0];

assign tmp_15_fu_899_p2 = ((i_3_reg_297 == i_5_reg_241) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_905_p1 = i_3_reg_297;

assign tmp_16_fu_700_p2 = (p_shl3_cast_fu_692_p3 - tmp_11_fu_684_p1);

assign tmp_17_fu_746_p2 = (notrhs1_fu_740_p2 | notlhs1_fu_734_p2);

assign tmp_18_fu_1026_p1 = tmp_18_neg_fu_1021_p2;

assign tmp_18_neg_fu_1021_p2 = (w_3_to_int_reg_1303 ^ ap_const_lv32_80000000);

assign tmp_1_fu_821_p2 = ((r_load_reg_1198 == i_5_cast7_reg_1136) ? 1'b1 : 1'b0);

assign tmp_20_fu_991_p2 = ((j_1_reg_308 == i_5_reg_241) ? 1'b1 : 1'b0);

assign tmp_21_cast_fu_997_p1 = j_1_reg_308;

assign tmp_21_fu_706_p2 = (tmp_3_cast_reg_1147 + tmp_16_fu_700_p2);

assign tmp_29_fu_752_p2 = (tmp_17_fu_746_p2 & grp_fu_362_p2);

assign tmp_2_fu_432_p2 = ((i_5_reg_241 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign tmp_30_fu_783_p4 = {{tmp_5_to_int_fu_780_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_31_fu_730_p1 = pivot_to_int_fu_716_p1[22:0];

assign tmp_32_fu_809_p2 = (notrhs2_fu_803_p2 | notlhs2_fu_797_p2);

assign tmp_34_fu_815_p2 = (tmp_32_fu_809_p2 & tmp_33_fu_372_p2);

assign tmp_35_fu_527_p4 = {{n_assign_1_to_int_fu_523_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_36_fu_793_p1 = tmp_5_to_int_fu_780_p1[51:0];

assign tmp_37_fu_553_p2 = (notrhs_fu_547_p2 | notlhs_fu_541_p2);

assign tmp_39_fu_559_p2 = (tmp_37_fu_553_p2 & grp_fu_362_p2);

assign tmp_3_cast_fu_452_p1 = i_5_reg_241;

assign tmp_3_fu_448_p1 = i_5_reg_241;

assign tmp_40_fu_586_p4 = {{w_4_to_int_fu_583_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_41_fu_485_p1 = r_1_phi_fu_268_p4[4:0];

assign tmp_42_fu_604_p4 = {{wmax_to_int_fu_600_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_43_fu_489_p1 = r_1_phi_fu_268_p4[2:0];

assign tmp_44_fu_630_p2 = (notrhs3_fu_624_p2 | notlhs3_fu_618_p2);

assign tmp_45_fu_648_p2 = (notrhs4_fu_642_p2 | notlhs4_fu_636_p2);

assign tmp_46_fu_654_p2 = (tmp_44_fu_630_p2 & tmp_45_fu_648_p2);

assign tmp_48_fu_660_p2 = (tmp_46_fu_654_p2 & tmp_47_fu_367_p2);

assign tmp_49_fu_941_p4 = {{w_3_to_int_fu_937_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_4_fu_776_p1 = $signed(r_load_reg_1198);

assign tmp_50_fu_501_p2 = (p_shl2_cast_fu_493_p3 - tmp_41_fu_485_p1);

assign tmp_51_fu_967_p2 = (notrhs5_fu_961_p2 | notlhs5_fu_955_p2);

assign tmp_53_fu_973_p2 = (tmp_51_fu_967_p2 & grp_fu_362_p2);

assign tmp_54_fu_507_p2 = (tmp_3_cast_reg_1147 + tmp_50_fu_501_p2);

assign tmp_55_fu_537_p1 = n_assign_1_to_int_fu_523_p1[22:0];

assign tmp_56_fu_596_p1 = w_4_to_int_fu_583_p1[22:0];

assign tmp_57_fu_614_p1 = wmax_to_int_fu_600_p1[22:0];

assign tmp_58_cast_fu_711_p1 = $signed(tmp_21_fu_706_p2);

assign tmp_58_fu_1067_p3 = {{reg_386}, {ap_const_lv2_0}};

assign tmp_59_fu_1075_p1 = tmp_58_fu_1067_p3;

assign tmp_5_to_int_fu_780_p1 = tmp_5_reg_1219;

assign tmp_60_fu_1084_p2 = (tmp_59_fu_1075_p1 - tmp_10_cast_fu_1063_p1);

assign tmp_61_cast_fu_512_p1 = $signed(tmp_54_fu_507_p2);

assign tmp_61_fu_1090_p2 = (tmp_cast_reg_1358 + tmp_60_fu_1084_p2);

assign tmp_62_fu_841_p2 = (tmp_9_reg_1154 + tmp_11_cast_fu_837_p1);

assign tmp_63_fu_851_p2 = (tmp_16_reg_1204 + tmp_11_cast_fu_837_p1);

assign tmp_64_cast_fu_1095_p1 = $signed(tmp_61_fu_1090_p2);

assign tmp_64_fu_877_p2 = (tmp_9_reg_1154 + tmp_12_cast_fu_873_p1);

assign tmp_65_cast_fu_846_p1 = $signed(tmp_62_fu_841_p2);

assign tmp_65_fu_909_p3 = {{i_3_reg_297}, {ap_const_lv2_0}};

assign tmp_66_cast_fu_856_p1 = $signed(tmp_63_fu_851_p2);

assign tmp_66_fu_921_p2 = (p_shl4_cast_fu_917_p1 - tmp_16_cast_fu_905_p1);

assign tmp_67_cast_fu_882_p1 = $signed(tmp_64_fu_877_p2);

assign tmp_67_fu_927_p2 = (tmp_3_cast_reg_1147 + tmp_66_fu_921_p2);

assign tmp_68_fu_951_p1 = w_3_to_int_fu_937_p1[22:0];

assign tmp_69_fu_1001_p2 = (tmp_9_reg_1154 + tmp_21_cast_fu_997_p1);

assign tmp_6_fu_720_p4 = {{pivot_to_int_fu_716_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_70_cast_fu_932_p1 = $signed(tmp_67_fu_927_p2);

assign tmp_70_fu_1011_p2 = (tmp_66_reg_1292 + tmp_21_cast_fu_997_p1);

assign tmp_71_cast_fu_1006_p1 = $signed(tmp_69_fu_1001_p2);

assign tmp_72_cast_fu_1016_p1 = $signed(tmp_70_fu_1011_p2);

assign tmp_7_fu_456_p3 = {{i_5_reg_241}, {ap_const_lv2_0}};

assign tmp_8_fu_1052_p2 = ((work_q1 == i_4_reg_319) ? 1'b1 : 1'b0);

assign tmp_9_fu_473_p2 = (p_shl_cast_fu_469_p1 - tmp_3_cast_fu_452_p1);

assign tmp_cast_fu_1048_p1 = i_4_reg_319;

assign tmp_fu_422_p1 = i_reg_229;

assign tmp_s_fu_1043_p1 = i_4_reg_319;

assign w_3_to_int_fu_937_p1 = reg_393;

assign w_4_fu_575_p3 = ((tmp_39_fu_559_p2[0:0] === 1'b1) ? reg_380 : f_1_fu_571_p1);

assign w_4_to_int_fu_583_p1 = w_4_reg_1180;

assign wmax_1_fu_666_p3 = ((tmp_48_reg_1187[0:0] === 1'b1) ? ap_pipeline_reg_pp0_iter3_w_4_reg_1180 : wmax_reg_253);

assign wmax_to_int_fu_600_p1 = wmax_phi_fu_257_p4;

always @ (posedge ap_clk) begin
    i_5_cast7_reg_1136[31:2] <= 30'b000000000000000000000000000000;
    tmp_3_reg_1142[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1147[4:2] <= 3'b000;
    a_addr_7_reg_1161[1:0] <= 2'b00;
    work_addr_3_reg_1232[8:2] <= 7'b0000000;
    tmp_cast_reg_1358[4:2] <= 3'b000;
    work_addr_1_reg_1363[8:2] <= 7'b0000000;
    work_addr_2_reg_1372[8:2] <= 7'b0000000;
    a_addr_3_reg_1388[1:0] <= 2'b00;
end

endmodule //minver_hwa
