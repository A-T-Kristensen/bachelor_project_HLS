

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Fri Apr 28 10:40:27 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver
* Solution:       minver_float_2b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.27|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+
        |                 |   Latency   |  Iteration |  Initiation Interval  |  Trip  |          |
        |    Loop Name    | min |  max  |   Latency  |  achieved |   target  |  Count | Pipelined|
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+
        |- Loop 1         |   16|     16|           1|          -|          -|      16|    no    |
        |- Loop 2         |  112|  56870| 112 ~ 3554 |          -|          -| 1 ~ 16 |    no    |
        | + Loop 2.1      |    4|     19|           5|          1|          1| 1 ~ 16 |    yes   |
        | + Loop 2.2      |   64|     64|           4|          4|          1|      16|    yes   |
        | + Loop 2.3      |   49|     49|          20|          2|          1|      16|    yes   |
        | + Loop 2.4      |   32|   3392|   2 ~ 212  |          -|          -|      16|    no    |
        |  ++ Loop 2.4.1  |   32|    192|   2 ~ 12   |          -|          -|      16|    no    |
        |- Loop 3         |    ?|      ?|           ?|          -|          -|      16|    no    |
        | + Loop 3.1      |    ?|      ?|          70|          -|          -|       ?|    no    |
        |  ++ Loop 3.1.1  |   64|     64|           4|          4|          1|      16|    yes   |
        +-----------------+-----+-------+------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5
  * Pipeline-1: initiation interval (II) = 4, depth = 4
  * Pipeline-2: initiation interval (II) = 2, depth = 20
  * Pipeline-3: initiation interval (II) = 4, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 98
* Pipeline: 4
  Pipeline-0: II = 1, D = 5, States = { 4 5 6 7 8 }
  Pipeline-1: II = 4, D = 4, States = { 16 17 18 19 }
  Pipeline-2: II = 2, D = 20, States = { 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 98 39 }
  Pipeline-3: II = 4, D = 4, States = { 93 94 95 96 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond7)
	3  / (exitcond7)
3 --> 
	4  / (!tmp_2)
	88  / (tmp_2)
4 --> 
	9  / (exitcond6)
	5  / (!exitcond6)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (!tmp_2 & !tmp_32 & !tmp_1)
	20  / (!tmp_2 & !tmp_32 & tmp_1)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	20  / (exitcond5)
	17  / (!exitcond5)
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	16  / true
20 --> 
	21  / true
21 --> 
	40  / (exitcond4)
	22  / (!exitcond4)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	98  / true
39 --> 
	21  / true
40 --> 
	41  / true
41 --> 
	72  / (exitcond3)
	42  / (!exitcond3 & !tmp_15)
	71  / (!exitcond3 & tmp_15)
42 --> 
	43  / true
43 --> 
	71  / (tmp_51)
	44  / (!tmp_51)
44 --> 
	56  / (exitcond2)
	45  / (!exitcond2 & !tmp_20)
	55  / (!exitcond2 & tmp_20)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	44  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	41  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	3  / true
88 --> 
	89  / (!exitcond1)
	13  / (exitcond1)
89 --> 
	90  / true
90 --> 
	91  / (!tmp_8)
	88  / (tmp_8)
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	97  / (exitcond)
	94  / (!exitcond)
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	93  / true
97 --> 
	89  / true
98 --> 
	39  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_98 (3)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([128 x float]* %a_1), !map !17

ST_1: StgValue_99 (4)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([128 x float]* %a_0), !map !24

ST_1: StgValue_100 (5)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !30

ST_1: StgValue_101 (6)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (7)  [1/1] 0.00ns  loc: minver.c:43
:4  %work = alloca [500 x i5], align 1

ST_1: StgValue_103 (8)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecMemCore([128 x float]* %a_0, [128 x float]* %a_1, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_104 (9)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface([128 x float]* %a_0, [128 x float]* %a_1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_105 (10)  [1/1] 0.00ns  loc: minver.c:41
:7  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_106 (11)  [1/1] 1.57ns  loc: minver.c:52
:8  br label %1


 <State 2>: 2.71ns
ST_2: i (13)  [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (14)  [1/1] 2.37ns  loc: minver.c:52
:1  %exitcond7 = icmp eq i5 %i, -16

ST_2: empty (15)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: i_1 (16)  [1/1] 1.67ns  loc: minver.c:52
:3  %i_1 = add i5 %i, 1

ST_2: StgValue_111 (17)  [1/1] 0.00ns  loc: minver.c:52
:4  br i1 %exitcond7, label %.preheader14.preheader, label %2

ST_2: tmp (19)  [1/1] 0.00ns  loc: minver.c:53
:0  %tmp = zext i5 %i to i64

ST_2: work_addr (20)  [1/1] 0.00ns  loc: minver.c:53
:1  %work_addr = getelementptr [500 x i5]* %work, i64 0, i64 %tmp

ST_2: StgValue_114 (21)  [1/1] 2.71ns  loc: minver.c:53
:2  store i5 %i, i5* %work_addr, align 1

ST_2: StgValue_115 (22)  [1/1] 0.00ns  loc: minver.c:52
:3  br label %1

ST_2: r (24)  [1/1] 0.00ns
.preheader14.preheader:0  %r = alloca i32

ST_2: StgValue_117 (25)  [1/1] 1.57ns
.preheader14.preheader:1  store i32 0, i32* %r

ST_2: StgValue_118 (26)  [1/1] 1.57ns  loc: minver.c:56
.preheader14.preheader:2  br label %.preheader14


 <State 3>: 1.67ns
ST_3: i_5 (28)  [1/1] 0.00ns
.preheader14:0  %i_5 = phi i5 [ %k, %16 ], [ 0, %.preheader14.preheader ]

ST_3: tmp_2 (29)  [1/1] 0.00ns  loc: minver.c:56
.preheader14:1  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_5, i32 4)

ST_3: k (30)  [1/1] 1.67ns  loc: minver.c:56
.preheader14:2  %k = add i5 %i_5, 1

ST_3: StgValue_122 (31)  [1/1] 0.00ns  loc: minver.c:56
.preheader14:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader13.preheader

ST_3: i_5_cast (33)  [1/1] 0.00ns  loc: minver.c:58
.preheader13.preheader:0  %i_5_cast = zext i5 %i_5 to i32

ST_3: empty_9 (34)  [1/1] 0.00ns
.preheader13.preheader:1  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 8) nounwind

ST_3: tmp_3 (35)  [1/1] 0.00ns  loc: minver.c:60
.preheader13.preheader:2  %tmp_3 = zext i5 %i_5 to i64

ST_3: tmp_3_cast (36)  [1/1] 0.00ns  loc: minver.c:58
.preheader13.preheader:3  %tmp_3_cast = zext i5 %i_5 to i8

ST_3: StgValue_127 (37)  [1/1] 1.57ns  loc: minver.c:58
.preheader13.preheader:4  br label %.preheader13

ST_3: StgValue_128 (331)  [1/1] 1.57ns  loc: minver.c:107
.preheader8.preheader:0  br label %.preheader8


 <State 4>: 4.38ns
ST_4: wmax (39)  [1/1] 0.00ns
.preheader13:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader13.preheader ]

ST_4: r_1 (40)  [1/1] 0.00ns
.preheader13:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast, %.preheader13.preheader ]

ST_4: exitcond6 (41)  [1/1] 2.93ns  loc: minver.c:58
.preheader13:2  %exitcond6 = icmp eq i32 %r_1, 16

ST_4: StgValue_132 (42)  [1/1] 0.00ns  loc: minver.c:58
.preheader13:3  br i1 %exitcond6, label %_ifconv5, label %_ifconv

ST_4: tmp_39 (48)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:4  %tmp_39 = trunc i32 %r_1 to i3

ST_4: tmp_41 (49)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:5  %tmp_41 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_39, i4 0)

ST_4: tmp_58_cast (50)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:6  %tmp_58_cast = zext i7 %tmp_41 to i8

ST_4: tmp_48 (51)  [1/1] 1.67ns  loc: minver.c:60
_ifconv:7  %tmp_48 = add i8 %tmp_58_cast, %tmp_3_cast

ST_4: tmp_59_cast (52)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:8  %tmp_59_cast = zext i8 %tmp_48 to i64

ST_4: a_0_addr_1 (53)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:9  %a_0_addr_1 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_59_cast

ST_4: a_1_addr_1 (54)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:10  %a_1_addr_1 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_59_cast

ST_4: a_0_load_1 (57)  [2/2] 2.71ns  loc: minver.c:60
_ifconv:13  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_4: a_1_load_1 (58)  [2/2] 2.71ns  loc: minver.c:60
_ifconv:14  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_4: i_6 (89)  [1/1] 2.39ns  loc: minver.c:58
_ifconv:45  %i_6 = add nsw i32 1, %r_1


 <State 5>: 4.27ns
ST_5: tmp_52 (55)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:11  %tmp_52 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %r_1, i32 3, i32 31)

ST_5: icmp (56)  [1/1] 2.90ns  loc: minver.c:60
_ifconv:12  %icmp = icmp eq i29 %tmp_52, 0

ST_5: a_0_load_1 (57)  [1/2] 2.71ns  loc: minver.c:60
_ifconv:13  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_5: a_1_load_1 (58)  [1/2] 2.71ns  loc: minver.c:60
_ifconv:14  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_5: n_assign_1 (59)  [1/1] 1.37ns  loc: minver.c:60
_ifconv:15  %n_assign_1 = select i1 %icmp, float %a_0_load_1, float %a_1_load_1


 <State 6>: 7.74ns
ST_6: n_assign_1_to_int (60)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:16  %n_assign_1_to_int = bitcast float %n_assign_1 to i32

ST_6: tmp_33 (61)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:17  %tmp_33 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_6: tmp_53 (62)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:18  %tmp_53 = trunc i32 %n_assign_1_to_int to i23

ST_6: notlhs (63)  [1/1] 2.47ns  loc: minver.c:60
_ifconv:19  %notlhs = icmp ne i8 %tmp_33, -1

ST_6: notrhs (64)  [1/1] 2.84ns  loc: minver.c:60
_ifconv:20  %notrhs = icmp eq i23 %tmp_53, 0

ST_6: tmp_35 (65)  [1/1] 0.00ns  loc: minver.c:60 (grouped into LUT with out node w_4)
_ifconv:21  %tmp_35 = or i1 %notrhs, %notlhs

ST_6: tmp_36 (66)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:60
_ifconv:22  %tmp_36 = fcmp oge float %n_assign_1, 0.000000e+00

ST_6: tmp_37 (67)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:60 (grouped into LUT with out node w_4)
_ifconv:23  %tmp_37 = and i1 %tmp_35, %tmp_36

ST_6: f_neg_i (68)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:60 (grouped into LUT with out node w_4)
_ifconv:24  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_6: f_1 (69)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:60 (grouped into LUT with out node w_4)
_ifconv:25  %f_1 = bitcast i32 %f_neg_i to float

ST_6: w_4 (70)  [1/1] 1.37ns  loc: minver.c:62 (out node of the LUT)
_ifconv:26  %w_4 = select i1 %tmp_37, float %n_assign_1, float %f_1


 <State 7>: 7.74ns
ST_7: w_4_to_int (71)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:27  %w_4_to_int = bitcast float %w_4 to i32

ST_7: tmp_38 (72)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:28  %tmp_38 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_4_to_int, i32 23, i32 30)

ST_7: tmp_54 (73)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:29  %tmp_54 = trunc i32 %w_4_to_int to i23

ST_7: wmax_to_int (74)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:30  %wmax_to_int = bitcast float %wmax to i32

ST_7: tmp_40 (75)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:31  %tmp_40 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_7: tmp_55 (76)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:32  %tmp_55 = trunc i32 %wmax_to_int to i23

ST_7: notlhs3 (77)  [1/1] 2.47ns  loc: minver.c:62
_ifconv:33  %notlhs3 = icmp ne i8 %tmp_38, -1

ST_7: notrhs3 (78)  [1/1] 2.84ns  loc: minver.c:62
_ifconv:34  %notrhs3 = icmp eq i23 %tmp_54, 0

ST_7: tmp_42 (79)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_46)
_ifconv:35  %tmp_42 = or i1 %notrhs3, %notlhs3

ST_7: notlhs4 (80)  [1/1] 2.47ns  loc: minver.c:61
_ifconv:36  %notlhs4 = icmp ne i8 %tmp_40, -1

ST_7: notrhs4 (81)  [1/1] 2.84ns  loc: minver.c:61
_ifconv:37  %notrhs4 = icmp eq i23 %tmp_55, 0

ST_7: tmp_43 (82)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node tmp_46)
_ifconv:38  %tmp_43 = or i1 %notrhs4, %notlhs4

ST_7: tmp_44 (83)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_46)
_ifconv:39  %tmp_44 = and i1 %tmp_42, %tmp_43

ST_7: tmp_45 (84)  [1/1] 6.37ns  loc: minver.c:61
_ifconv:40  %tmp_45 = fcmp ogt float %w_4, %wmax

ST_7: tmp_46 (85)  [1/1] 1.37ns  loc: minver.c:61 (out node of the LUT)
_ifconv:41  %tmp_46 = and i1 %tmp_44, %tmp_45


 <State 8>: 2.94ns
ST_8: r_load_1 (44)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:0  %r_load_1 = load i32* %r

ST_8: empty_10 (45)  [1/1] 0.00ns
_ifconv:1  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 0) nounwind

ST_8: tmp_7 (46)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:2  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_8: StgValue_177 (47)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: wmax_1 (86)  [1/1] 1.37ns  loc: minver.c:61
_ifconv:42  %wmax_1 = select i1 %tmp_46, float %w_4, float %wmax

ST_8: r_2 (87)  [1/1] 1.37ns  loc: minver.c:61
_ifconv:43  %r_2 = select i1 %tmp_46, i32 %r_1, i32 %r_load_1

ST_8: empty_11 (88)  [1/1] 0.00ns  loc: minver.c:65
_ifconv:44  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_7) nounwind

ST_8: StgValue_181 (90)  [1/1] 1.57ns  loc: minver.c:61
_ifconv:46  store i32 %r_2, i32* %r

ST_8: StgValue_182 (91)  [1/1] 0.00ns  loc: minver.c:58
_ifconv:47  br label %.preheader13


 <State 9>: 4.38ns
ST_9: r_load (93)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:0  %r_load = load i32* %r

ST_9: tmp_9 (95)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:2  %tmp_9 = trunc i32 %r_load to i3

ST_9: tmp_11 (96)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:3  %tmp_11 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_9, i4 0)

ST_9: tmp_54_cast (97)  [1/1] 0.00ns  loc: minver.c:67
_ifconv5:4  %tmp_54_cast = zext i7 %tmp_11 to i8

ST_9: tmp_12 (98)  [1/1] 1.67ns  loc: minver.c:67
_ifconv5:5  %tmp_12 = add i8 %tmp_54_cast, %tmp_3_cast

ST_9: tmp_55_cast (99)  [1/1] 0.00ns  loc: minver.c:67
_ifconv5:6  %tmp_55_cast = zext i8 %tmp_12 to i64

ST_9: a_0_addr (100)  [1/1] 0.00ns  loc: minver.c:67
_ifconv5:7  %a_0_addr = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_55_cast

ST_9: a_1_addr (101)  [1/1] 0.00ns  loc: minver.c:67
_ifconv5:8  %a_1_addr = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_55_cast

ST_9: tmp_21 (102)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:9  %tmp_21 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %r_load, i32 3, i32 31)

ST_9: icmp1 (103)  [1/1] 2.90ns  loc: minver.c:103
_ifconv5:10  %icmp1 = icmp eq i29 %tmp_21, 0

ST_9: a_0_load (104)  [2/2] 2.71ns  loc: minver.c:103
_ifconv5:11  %a_0_load = load float* %a_0_addr, align 4

ST_9: a_1_load (105)  [2/2] 2.71ns  loc: minver.c:103
_ifconv5:12  %a_1_load = load float* %a_1_addr, align 4


 <State 10>: 4.08ns
ST_10: a_0_load (104)  [1/2] 2.71ns  loc: minver.c:103
_ifconv5:11  %a_0_load = load float* %a_0_addr, align 4

ST_10: a_1_load (105)  [1/2] 2.71ns  loc: minver.c:103
_ifconv5:12  %a_1_load = load float* %a_1_addr, align 4

ST_10: pivot (106)  [1/1] 1.37ns  loc: minver.c:103
_ifconv5:13  %pivot = select i1 %icmp1, float %a_0_load, float %a_1_load


 <State 11>: 7.74ns
ST_11: pivot_to_int (107)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:14  %pivot_to_int = bitcast float %pivot to i32

ST_11: tmp_6 (108)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:15  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_11: tmp_29 (109)  [1/1] 0.00ns  loc: minver.c:103
_ifconv5:16  %tmp_29 = trunc i32 %pivot_to_int to i23

ST_11: notlhs1 (110)  [1/1] 2.47ns  loc: minver.c:103
_ifconv5:17  %notlhs1 = icmp ne i8 %tmp_6, -1

ST_11: notrhs1 (111)  [1/1] 2.84ns  loc: minver.c:103
_ifconv5:18  %notrhs1 = icmp eq i23 %tmp_29, 0

ST_11: tmp_17 (112)  [1/1] 0.00ns  loc: minver.c:103 (grouped into LUT with out node api)
_ifconv5:19  %tmp_17 = or i1 %notrhs1, %notlhs1

ST_11: tmp_26 (113)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:68
_ifconv5:20  %tmp_26 = fcmp oge float %pivot, 0.000000e+00

ST_11: tmp_27 (114)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:68 (grouped into LUT with out node api)
_ifconv5:21  %tmp_27 = and i1 %tmp_17, %tmp_26

ST_11: f_neg_i1 (115)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:68 (grouped into LUT with out node api)
_ifconv5:22  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_11: f (116)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:68 (grouped into LUT with out node api)
_ifconv5:23  %f = bitcast i32 %f_neg_i1 to float

ST_11: api (117)  [1/1] 1.37ns  loc: minver.c:68 (out node of the LUT)
_ifconv5:24  %api = select i1 %tmp_27, float %pivot, float %f


 <State 12>: 5.12ns
ST_12: tmp_5 (118)  [1/1] 5.12ns  loc: minver.c:69
_ifconv5:25  %tmp_5 = fpext float %api to double


 <State 13>: 8.27ns
ST_13: tmp_4 (94)  [1/1] 0.00ns  loc: minver.c:67
_ifconv5:1  %tmp_4 = sext i32 %r_load to i64

ST_13: tmp_5_to_int (119)  [1/1] 0.00ns  loc: minver.c:69
_ifconv5:26  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_13: tmp_28 (120)  [1/1] 0.00ns  loc: minver.c:69
_ifconv5:27  %tmp_28 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_13: tmp_34 (121)  [1/1] 0.00ns  loc: minver.c:69
_ifconv5:28  %tmp_34 = trunc i64 %tmp_5_to_int to i52

ST_13: notlhs2 (122)  [1/1] 2.58ns  loc: minver.c:69
_ifconv5:29  %notlhs2 = icmp ne i11 %tmp_28, -1

ST_13: notrhs2 (123)  [1/1] 3.19ns  loc: minver.c:69
_ifconv5:30  %notrhs2 = icmp eq i52 %tmp_34, 0

ST_13: tmp_30 (124)  [1/1] 0.00ns  loc: minver.c:69 (grouped into LUT with out node tmp_32)
_ifconv5:31  %tmp_30 = or i1 %notrhs2, %notlhs2

ST_13: tmp_31 (125)  [1/1] 6.90ns  loc: minver.c:69
_ifconv5:32  %tmp_31 = fcmp ole double %tmp_5, 1.000000e-06

ST_13: tmp_32 (126)  [1/1] 1.37ns  loc: minver.c:69 (out node of the LUT)
_ifconv5:33  %tmp_32 = and i1 %tmp_30, %tmp_31

ST_13: StgValue_219 (127)  [1/1] 0.00ns  loc: minver.c:69
_ifconv5:34  br i1 %tmp_32, label %.loopexit9.loopexit36, label %3

ST_13: tmp_1 (129)  [1/1] 2.93ns  loc: minver.c:74
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast

ST_13: StgValue_221 (130)  [1/1] 0.00ns  loc: minver.c:74
:1  br i1 %tmp_1, label %.loopexit12, label %4

ST_13: work_addr_3 (132)  [1/1] 0.00ns  loc: minver.c:76
:0  %work_addr_3 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_3

ST_13: work_load_2 (133)  [2/2] 2.71ns  loc: minver.c:76
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_13: work_addr_4 (134)  [1/1] 0.00ns  loc: minver.c:77
:2  %work_addr_4 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_4

ST_13: work_load_3 (135)  [2/2] 2.71ns  loc: minver.c:77
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_13: StgValue_226 (329)  [1/1] 0.00ns
.loopexit9.loopexit36:0  br label %.loopexit9

ST_13: StgValue_227 (402)  [1/1] 0.00ns  loc: minver.c:131
.loopexit9:0  ret i32 1


 <State 14>: 5.42ns
ST_14: work_load_2 (133)  [1/2] 2.71ns  loc: minver.c:76
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_14: work_load_3 (135)  [1/2] 2.71ns  loc: minver.c:77
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_14: StgValue_230 (136)  [1/1] 2.71ns  loc: minver.c:77
:4  store i5 %work_load_3, i5* %work_addr_3, align 1


 <State 15>: 2.71ns
ST_15: StgValue_231 (137)  [1/1] 2.71ns  loc: minver.c:78
:5  store i5 %work_load_2, i5* %work_addr_4, align 1

ST_15: tmp_62 (138)  [1/1] 0.00ns  loc: minver.c:56
:6  %tmp_62 = trunc i5 %i_5 to i3

ST_15: tmp_61 (139)  [1/1] 0.00ns  loc: minver.c:56
:7  %tmp_61 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_62, i4 0)

ST_15: tmp_62_cast (140)  [1/1] 0.00ns  loc: minver.c:81
:8  %tmp_62_cast = zext i7 %tmp_61 to i8

ST_15: tmp_63 (141)  [1/1] 0.00ns  loc: minver.c:81
:9  %tmp_63 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %i_5, i32 3, i32 4)

ST_15: icmp3 (142)  [1/1] 1.54ns  loc: minver.c:81
:10  %icmp3 = icmp eq i2 %tmp_63, 0

ST_15: StgValue_237 (143)  [1/1] 1.57ns  loc: minver.c:79
:11  br label %5


 <State 16>: 4.38ns
ST_16: j (145)  [1/1] 0.00ns
:0  %j = phi i5 [ 0, %4 ], [ %j_3, %7 ]

ST_16: exitcond5 (146)  [1/1] 2.37ns  loc: minver.c:79
:1  %exitcond5 = icmp eq i5 %j, -16

ST_16: j_3 (147)  [1/1] 1.67ns  loc: minver.c:79
:2  %j_3 = add i5 %j, 1

ST_16: StgValue_241 (148)  [1/1] 0.00ns  loc: minver.c:79
:3  br i1 %exitcond5, label %.loopexit12.loopexit, label %_ifconv1

ST_16: tmp_11_cast (153)  [1/1] 0.00ns  loc: minver.c:81
_ifconv1:3  %tmp_11_cast = zext i5 %j to i8

ST_16: tmp_64 (154)  [1/1] 1.67ns  loc: minver.c:81
_ifconv1:4  %tmp_64 = add i8 %tmp_62_cast, %tmp_11_cast

ST_16: tmp_68_cast (155)  [1/1] 0.00ns  loc: minver.c:81
_ifconv1:5  %tmp_68_cast = zext i8 %tmp_64 to i64

ST_16: a_0_addr_4 (156)  [1/1] 0.00ns  loc: minver.c:81
_ifconv1:6  %a_0_addr_4 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_68_cast

ST_16: tmp_65 (157)  [1/1] 1.67ns  loc: minver.c:82
_ifconv1:7  %tmp_65 = add i8 %tmp_54_cast, %tmp_11_cast

ST_16: a_1_addr_4 (160)  [1/1] 0.00ns  loc: minver.c:81
_ifconv1:10  %a_1_addr_4 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_68_cast

ST_16: a_0_load_4 (162)  [2/2] 2.71ns  loc: minver.c:81
_ifconv1:12  %a_0_load_4 = load float* %a_0_addr_4, align 4

ST_16: a_1_load_4 (163)  [2/2] 2.71ns  loc: minver.c:81
_ifconv1:13  %a_1_load_4 = load float* %a_1_addr_4, align 4


 <State 17>: 4.08ns
ST_17: tmp_69_cast (158)  [1/1] 0.00ns  loc: minver.c:82
_ifconv1:8  %tmp_69_cast = zext i8 %tmp_65 to i64

ST_17: a_0_addr_6 (159)  [1/1] 0.00ns  loc: minver.c:82
_ifconv1:9  %a_0_addr_6 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_69_cast

ST_17: a_1_addr_6 (161)  [1/1] 0.00ns  loc: minver.c:82
_ifconv1:11  %a_1_addr_6 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_69_cast

ST_17: a_0_load_4 (162)  [1/2] 2.71ns  loc: minver.c:81
_ifconv1:12  %a_0_load_4 = load float* %a_0_addr_4, align 4

ST_17: a_1_load_4 (163)  [1/2] 2.71ns  loc: minver.c:81
_ifconv1:13  %a_1_load_4 = load float* %a_1_addr_4, align 4

ST_17: w_1 (164)  [1/1] 1.37ns  loc: minver.c:81
_ifconv1:14  %w_1 = select i1 %icmp3, float %a_0_load_4, float %a_1_load_4

ST_17: a_0_load_6 (165)  [2/2] 2.71ns  loc: minver.c:82
_ifconv1:15  %a_0_load_6 = load float* %a_0_addr_6, align 4

ST_17: a_1_load_6 (166)  [2/2] 2.71ns  loc: minver.c:82
_ifconv1:16  %a_1_load_6 = load float* %a_1_addr_6, align 4


 <State 18>: 6.79ns
ST_18: empty_12 (150)  [1/1] 0.00ns
_ifconv1:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_18: tmp_24 (151)  [1/1] 0.00ns  loc: minver.c:79
_ifconv1:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_18: StgValue_260 (152)  [1/1] 0.00ns  loc: minver.c:80
_ifconv1:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_18: a_0_load_6 (165)  [1/2] 2.71ns  loc: minver.c:82
_ifconv1:15  %a_0_load_6 = load float* %a_0_addr_6, align 4

ST_18: a_1_load_6 (166)  [1/2] 2.71ns  loc: minver.c:82
_ifconv1:16  %a_1_load_6 = load float* %a_1_addr_6, align 4

ST_18: a_load_2_phi (167)  [1/1] 1.37ns  loc: minver.c:82
_ifconv1:17  %a_load_2_phi = select i1 %icmp1, float %a_0_load_6, float %a_1_load_6

ST_18: StgValue_264 (168)  [1/1] 0.00ns  loc: minver.c:82
_ifconv1:18  br i1 %icmp3, label %branch30, label %branch31

ST_18: StgValue_265 (170)  [1/1] 2.71ns  loc: minver.c:82
branch31:0  store float %a_load_2_phi, float* %a_1_addr_4, align 4

ST_18: StgValue_266 (171)  [1/1] 0.00ns  loc: minver.c:82
branch31:1  br label %6

ST_18: StgValue_267 (173)  [1/1] 2.71ns  loc: minver.c:82
branch30:0  store float %a_load_2_phi, float* %a_0_addr_4, align 4

ST_18: StgValue_268 (174)  [1/1] 0.00ns  loc: minver.c:82
branch30:1  br label %6

ST_18: StgValue_269 (176)  [1/1] 0.00ns  loc: minver.c:83
:0  br i1 %icmp1, label %branch26, label %branch27


 <State 19>: 2.71ns
ST_19: StgValue_270 (178)  [1/1] 2.71ns  loc: minver.c:83
branch27:0  store float %w_1, float* %a_1_addr_6, align 4

ST_19: StgValue_271 (179)  [1/1] 0.00ns  loc: minver.c:83
branch27:1  br label %7

ST_19: StgValue_272 (181)  [1/1] 2.71ns  loc: minver.c:83
branch26:0  store float %w_1, float* %a_0_addr_6, align 4

ST_19: StgValue_273 (182)  [1/1] 0.00ns  loc: minver.c:83
branch26:1  br label %7

ST_19: empty_13 (184)  [1/1] 0.00ns  loc: minver.c:84
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_24) nounwind

ST_19: StgValue_275 (185)  [1/1] 0.00ns  loc: minver.c:79
:1  br label %5


 <State 20>: 1.67ns
ST_20: StgValue_276 (187)  [1/1] 0.00ns
.loopexit12.loopexit:0  br label %.loopexit12

ST_20: tmp_66 (189)  [1/1] 0.00ns  loc: minver.c:56
.loopexit12:0  %tmp_66 = trunc i5 %i_5 to i3

ST_20: tmp_67 (190)  [1/1] 0.00ns  loc: minver.c:56
.loopexit12:1  %tmp_67 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_66, i4 0)

ST_20: tmp_72_cast (191)  [1/1] 0.00ns  loc: minver.c:103
.loopexit12:2  %tmp_72_cast = zext i7 %tmp_67 to i8

ST_20: tmp_68 (192)  [1/1] 1.67ns  loc: minver.c:103
.loopexit12:3  %tmp_68 = add i8 %tmp_72_cast, %tmp_3_cast

ST_20: tmp_73_cast (193)  [1/1] 0.00ns  loc: minver.c:103
.loopexit12:4  %tmp_73_cast = zext i8 %tmp_68 to i64

ST_20: a_0_addr_7 (194)  [1/1] 0.00ns  loc: minver.c:103
.loopexit12:5  %a_0_addr_7 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_73_cast

ST_20: a_1_addr_7 (195)  [1/1] 0.00ns  loc: minver.c:103
.loopexit12:6  %a_1_addr_7 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_73_cast

ST_20: tmp_69 (196)  [1/1] 0.00ns  loc: minver.c:89
.loopexit12:7  %tmp_69 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %i_5, i32 3, i32 4)

ST_20: icmp4 (197)  [1/1] 1.54ns  loc: minver.c:89
.loopexit12:8  %icmp4 = icmp eq i2 %tmp_69, 0

ST_20: StgValue_286 (198)  [1/1] 1.57ns  loc: minver.c:87
.loopexit12:9  br label %8


 <State 21>: 4.38ns
ST_21: i_2 (200)  [1/1] 0.00ns
:0  %i_2 = phi i5 [ 0, %.loopexit12 ], [ %i_8, %9 ]

ST_21: exitcond4 (201)  [1/1] 2.37ns  loc: minver.c:87
:1  %exitcond4 = icmp eq i5 %i_2, -16

ST_21: i_8 (202)  [1/1] 1.67ns  loc: minver.c:87
:2  %i_8 = add i5 %i_2, 1

ST_21: StgValue_290 (203)  [1/1] 0.00ns  loc: minver.c:87
:3  br i1 %exitcond4, label %.preheader11.preheader, label %_ifconv2

ST_21: tmp_25 (206)  [1/1] 0.00ns  loc: minver.c:87
_ifconv2:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_21: tmp_12_cast (208)  [1/1] 0.00ns  loc: minver.c:89
_ifconv2:3  %tmp_12_cast = zext i5 %i_2 to i8

ST_21: tmp_70 (209)  [1/1] 1.67ns  loc: minver.c:89
_ifconv2:4  %tmp_70 = add i8 %tmp_72_cast, %tmp_12_cast

ST_21: tmp_74_cast (210)  [1/1] 0.00ns  loc: minver.c:89
_ifconv2:5  %tmp_74_cast = zext i8 %tmp_70 to i64

ST_21: a_0_addr_5 (211)  [1/1] 0.00ns  loc: minver.c:89
_ifconv2:6  %a_0_addr_5 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_74_cast

ST_21: a_1_addr_5 (212)  [1/1] 0.00ns  loc: minver.c:89
_ifconv2:7  %a_1_addr_5 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_74_cast

ST_21: a_0_load_5 (213)  [2/2] 2.71ns  loc: minver.c:89
_ifconv2:8  %a_0_load_5 = load float* %a_0_addr_5, align 4

ST_21: a_1_load_5 (214)  [2/2] 2.71ns  loc: minver.c:89
_ifconv2:9  %a_1_load_5 = load float* %a_1_addr_5, align 4

ST_21: empty_15 (225)  [1/1] 0.00ns  loc: minver.c:90
:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_25) nounwind

ST_21: StgValue_300 (226)  [1/1] 0.00ns  loc: minver.c:87
:1  br label %8


 <State 22>: 4.08ns
ST_22: a_0_load_5 (213)  [1/2] 2.71ns  loc: minver.c:89
_ifconv2:8  %a_0_load_5 = load float* %a_0_addr_5, align 4

ST_22: a_1_load_5 (214)  [1/2] 2.71ns  loc: minver.c:89
_ifconv2:9  %a_1_load_5 = load float* %a_1_addr_5, align 4

ST_22: a_load_5_phi (215)  [1/1] 1.37ns  loc: minver.c:89
_ifconv2:10  %a_load_5_phi = select i1 %icmp4, float %a_0_load_5, float %a_1_load_5


 <State 23>: 6.30ns
ST_23: tmp_13 (216)  [16/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 24>: 6.30ns
ST_24: tmp_13 (216)  [15/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 25>: 6.30ns
ST_25: tmp_13 (216)  [14/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 26>: 6.30ns
ST_26: tmp_13 (216)  [13/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 27>: 6.30ns
ST_27: tmp_13 (216)  [12/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 28>: 6.30ns
ST_28: tmp_13 (216)  [11/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 29>: 6.30ns
ST_29: tmp_13 (216)  [10/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 30>: 6.30ns
ST_30: tmp_13 (216)  [9/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 31>: 6.30ns
ST_31: tmp_13 (216)  [8/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 32>: 6.30ns
ST_32: tmp_13 (216)  [7/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 33>: 6.30ns
ST_33: tmp_13 (216)  [6/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 34>: 6.30ns
ST_34: tmp_13 (216)  [5/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 35>: 6.30ns
ST_35: tmp_13 (216)  [4/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 36>: 6.30ns
ST_36: tmp_13 (216)  [3/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 37>: 6.30ns
ST_37: tmp_13 (216)  [2/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot


 <State 38>: 6.30ns
ST_38: empty_14 (205)  [1/1] 0.00ns
_ifconv2:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_38: StgValue_320 (207)  [1/1] 0.00ns  loc: minver.c:88
_ifconv2:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_38: tmp_13 (216)  [1/16] 6.30ns  loc: minver.c:89
_ifconv2:11  %tmp_13 = fdiv float %a_load_5_phi, %pivot

ST_38: StgValue_322 (217)  [1/1] 0.00ns  loc: minver.c:89
_ifconv2:12  br i1 %icmp4, label %branch22, label %branch23


 <State 39>: 2.71ns
ST_39: StgValue_323 (219)  [1/1] 2.71ns  loc: minver.c:89
branch23:0  store float %tmp_13, float* %a_1_addr_5, align 4

ST_39: StgValue_324 (220)  [1/1] 0.00ns  loc: minver.c:89
branch23:1  br label %9

ST_39: StgValue_325 (222)  [1/1] 2.71ns  loc: minver.c:89
branch22:0  store float %tmp_13, float* %a_0_addr_5, align 4

ST_39: StgValue_326 (223)  [1/1] 0.00ns  loc: minver.c:89
branch22:1  br label %9


 <State 40>: 1.57ns
ST_40: StgValue_327 (228)  [1/1] 1.57ns  loc: minver.c:92
.preheader11.preheader:0  br label %.preheader11


 <State 41>: 6.30ns
ST_41: i_3 (230)  [1/1] 0.00ns
.preheader11:0  %i_3 = phi i5 [ %i_9, %._crit_edge ], [ 0, %.preheader11.preheader ]

ST_41: exitcond3 (231)  [1/1] 2.37ns  loc: minver.c:92
.preheader11:1  %exitcond3 = icmp eq i5 %i_3, -16

ST_41: empty_16 (232)  [1/1] 0.00ns
.preheader11:2  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_41: i_9 (233)  [1/1] 1.67ns  loc: minver.c:92
.preheader11:3  %i_9 = add i5 %i_3, 1

ST_41: StgValue_332 (234)  [1/1] 0.00ns  loc: minver.c:92
.preheader11:4  br i1 %exitcond3, label %15, label %10

ST_41: tmp_15 (236)  [1/1] 2.37ns  loc: minver.c:93
:0  %tmp_15 = icmp eq i5 %i_3, %i_5

ST_41: StgValue_334 (237)  [1/1] 0.00ns  loc: minver.c:93
:1  br i1 %tmp_15, label %._crit_edge, label %_ifconv4

ST_41: tmp_71 (239)  [1/1] 0.00ns  loc: minver.c:92
_ifconv4:0  %tmp_71 = trunc i5 %i_3 to i3

ST_41: tmp_72 (240)  [1/1] 0.00ns  loc: minver.c:92
_ifconv4:1  %tmp_72 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_71, i4 0)

ST_41: tmp_77_cast (241)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:2  %tmp_77_cast = zext i7 %tmp_72 to i8

ST_41: tmp_73 (242)  [1/1] 1.67ns  loc: minver.c:94
_ifconv4:3  %tmp_73 = add i8 %tmp_77_cast, %tmp_3_cast

ST_41: tmp_78_cast (243)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:4  %tmp_78_cast = zext i8 %tmp_73 to i64

ST_41: a_0_addr_8 (244)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:5  %a_0_addr_8 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_78_cast

ST_41: a_1_addr_8 (245)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:6  %a_1_addr_8 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_78_cast

ST_41: tmp_74 (246)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:7  %tmp_74 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %i_3, i32 3, i32 4)

ST_41: icmp5 (247)  [1/1] 1.54ns  loc: minver.c:94
_ifconv4:8  %icmp5 = icmp eq i2 %tmp_74, 0

ST_41: a_0_load_7 (248)  [2/2] 2.71ns  loc: minver.c:94
_ifconv4:9  %a_0_load_7 = load float* %a_0_addr_8, align 4

ST_41: a_1_load_7 (249)  [2/2] 2.71ns  loc: minver.c:94
_ifconv4:10  %a_1_load_7 = load float* %a_1_addr_8, align 4

ST_41: tmp_14 (318)  [16/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 42>: 4.08ns
ST_42: a_0_load_7 (248)  [1/2] 2.71ns  loc: minver.c:94
_ifconv4:9  %a_0_load_7 = load float* %a_0_addr_8, align 4

ST_42: a_1_load_7 (249)  [1/2] 2.71ns  loc: minver.c:94
_ifconv4:10  %a_1_load_7 = load float* %a_1_addr_8, align 4

ST_42: w_2 (250)  [1/1] 1.37ns  loc: minver.c:94
_ifconv4:11  %w_2 = select i1 %icmp5, float %a_0_load_7, float %a_1_load_7


 <State 43>: 7.74ns
ST_43: w_2_to_int (251)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:12  %w_2_to_int = bitcast float %w_2 to i32

ST_43: tmp_47 (252)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:13  %tmp_47 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_2_to_int, i32 23, i32 30)

ST_43: tmp_75 (253)  [1/1] 0.00ns  loc: minver.c:94
_ifconv4:14  %tmp_75 = trunc i32 %w_2_to_int to i23

ST_43: notlhs5 (254)  [1/1] 2.47ns  loc: minver.c:94
_ifconv4:15  %notlhs5 = icmp ne i8 %tmp_47, -1

ST_43: notrhs5 (255)  [1/1] 2.84ns  loc: minver.c:94
_ifconv4:16  %notrhs5 = icmp eq i23 %tmp_75, 0

ST_43: tmp_49 (256)  [1/1] 0.00ns  loc: minver.c:94 (grouped into LUT with out node tmp_51)
_ifconv4:17  %tmp_49 = or i1 %notrhs5, %notlhs5

ST_43: tmp_50 (257)  [1/1] 6.37ns  loc: minver.c:95
_ifconv4:18  %tmp_50 = fcmp oeq float %w_2, 0.000000e+00

ST_43: tmp_51 (258)  [1/1] 1.37ns  loc: minver.c:95 (out node of the LUT)
_ifconv4:19  %tmp_51 = and i1 %tmp_49, %tmp_50

ST_43: StgValue_358 (259)  [1/1] 0.00ns  loc: minver.c:95
_ifconv4:20  br i1 %tmp_51, label %._crit_edge19, label %.preheader10.preheader

ST_43: StgValue_359 (261)  [1/1] 1.57ns  loc: minver.c:96
.preheader10.preheader:0  br label %.preheader10


 <State 44>: 7.67ns
ST_44: j_1 (263)  [1/1] 0.00ns
.preheader10:0  %j_1 = phi i5 [ %j_5, %._crit_edge20 ], [ 0, %.preheader10.preheader ]

ST_44: exitcond2 (264)  [1/1] 2.37ns  loc: minver.c:96
.preheader10:1  %exitcond2 = icmp eq i5 %j_1, -16

ST_44: empty_17 (265)  [1/1] 0.00ns
.preheader10:2  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_44: j_5 (266)  [1/1] 1.67ns  loc: minver.c:96
.preheader10:3  %j_5 = add i5 %j_1, 1

ST_44: StgValue_364 (267)  [1/1] 0.00ns  loc: minver.c:96
.preheader10:4  br i1 %exitcond2, label %13, label %11

ST_44: tmp_20 (269)  [1/1] 2.37ns  loc: minver.c:97
:0  %tmp_20 = icmp eq i5 %j_1, %i_5

ST_44: StgValue_366 (270)  [1/1] 0.00ns  loc: minver.c:97
:1  br i1 %tmp_20, label %._crit_edge20, label %_ifconv3

ST_44: tmp_21_cast (272)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:0  %tmp_21_cast = zext i5 %j_1 to i8

ST_44: tmp_76 (273)  [1/1] 1.67ns  loc: minver.c:97
_ifconv3:1  %tmp_76 = add i8 %tmp_72_cast, %tmp_21_cast

ST_44: tmp_79_cast (274)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:2  %tmp_79_cast = zext i8 %tmp_76 to i64

ST_44: a_0_addr_9 (275)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:3  %a_0_addr_9 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_79_cast

ST_44: tmp_77 (276)  [1/1] 1.67ns  loc: minver.c:97
_ifconv3:4  %tmp_77 = add i8 %tmp_77_cast, %tmp_21_cast

ST_44: a_1_addr_9 (279)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:7  %a_1_addr_9 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_79_cast

ST_44: a_0_load_8 (281)  [2/2] 2.71ns  loc: minver.c:97
_ifconv3:9  %a_0_load_8 = load float* %a_0_addr_9, align 4

ST_44: a_1_load_8 (282)  [2/2] 2.71ns  loc: minver.c:97
_ifconv3:10  %a_1_load_8 = load float* %a_1_addr_9, align 4

ST_44: tmp_18_neg (301)  [1/1] 1.37ns  loc: minver.c:99
:0  %tmp_18_neg = xor i32 %w_2_to_int, -2147483648

ST_44: tmp_18 (302)  [1/1] 0.00ns  loc: minver.c:99
:1  %tmp_18 = bitcast i32 %tmp_18_neg to float

ST_44: tmp_19 (303)  [16/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 45>: 4.08ns
ST_45: a_0_load_8 (281)  [1/2] 2.71ns  loc: minver.c:97
_ifconv3:9  %a_0_load_8 = load float* %a_0_addr_9, align 4

ST_45: a_1_load_8 (282)  [1/2] 2.71ns  loc: minver.c:97
_ifconv3:10  %a_1_load_8 = load float* %a_1_addr_9, align 4

ST_45: a_load_7_phi (283)  [1/1] 1.37ns  loc: minver.c:97
_ifconv3:11  %a_load_7_phi = select i1 %icmp4, float %a_0_load_8, float %a_1_load_8


 <State 46>: 5.78ns
ST_46: tmp_22 (284)  [4/4] 5.78ns  loc: minver.c:97
_ifconv3:12  %tmp_22 = fmul float %w_2, %a_load_7_phi


 <State 47>: 5.78ns
ST_47: tmp_22 (284)  [3/4] 5.78ns  loc: minver.c:97
_ifconv3:12  %tmp_22 = fmul float %w_2, %a_load_7_phi


 <State 48>: 5.78ns
ST_48: tmp_80_cast (277)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:5  %tmp_80_cast = zext i8 %tmp_77 to i64

ST_48: a_0_addr_10 (278)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:6  %a_0_addr_10 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_80_cast

ST_48: a_1_addr_10 (280)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:8  %a_1_addr_10 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_80_cast

ST_48: tmp_22 (284)  [2/4] 5.78ns  loc: minver.c:97
_ifconv3:12  %tmp_22 = fmul float %w_2, %a_load_7_phi

ST_48: a_0_load_9 (285)  [2/2] 2.71ns  loc: minver.c:97
_ifconv3:13  %a_0_load_9 = load float* %a_0_addr_10, align 4

ST_48: a_1_load_9 (286)  [2/2] 2.71ns  loc: minver.c:97
_ifconv3:14  %a_1_load_9 = load float* %a_1_addr_10, align 4


 <State 49>: 5.78ns
ST_49: tmp_22 (284)  [1/4] 5.78ns  loc: minver.c:97
_ifconv3:12  %tmp_22 = fmul float %w_2, %a_load_7_phi

ST_49: a_0_load_9 (285)  [1/2] 2.71ns  loc: minver.c:97
_ifconv3:13  %a_0_load_9 = load float* %a_0_addr_10, align 4

ST_49: a_1_load_9 (286)  [1/2] 2.71ns  loc: minver.c:97
_ifconv3:14  %a_1_load_9 = load float* %a_1_addr_10, align 4

ST_49: a_load_8_phi (287)  [1/1] 1.37ns  loc: minver.c:97
_ifconv3:15  %a_load_8_phi = select i1 %icmp5, float %a_0_load_9, float %a_1_load_9


 <State 50>: 8.26ns
ST_50: tmp_23 (288)  [5/5] 8.26ns  loc: minver.c:97
_ifconv3:16  %tmp_23 = fsub float %a_load_8_phi, %tmp_22


 <State 51>: 8.26ns
ST_51: tmp_23 (288)  [4/5] 8.26ns  loc: minver.c:97
_ifconv3:16  %tmp_23 = fsub float %a_load_8_phi, %tmp_22


 <State 52>: 8.26ns
ST_52: tmp_23 (288)  [3/5] 8.26ns  loc: minver.c:97
_ifconv3:16  %tmp_23 = fsub float %a_load_8_phi, %tmp_22


 <State 53>: 8.26ns
ST_53: tmp_23 (288)  [2/5] 8.26ns  loc: minver.c:97
_ifconv3:16  %tmp_23 = fsub float %a_load_8_phi, %tmp_22


 <State 54>: 8.26ns
ST_54: tmp_23 (288)  [1/5] 8.26ns  loc: minver.c:97
_ifconv3:16  %tmp_23 = fsub float %a_load_8_phi, %tmp_22

ST_54: StgValue_398 (289)  [1/1] 0.00ns  loc: minver.c:97
_ifconv3:17  br i1 %icmp5, label %branch12, label %branch13


 <State 55>: 2.71ns
ST_55: StgValue_399 (291)  [1/1] 2.71ns  loc: minver.c:97
branch13:0  store float %tmp_23, float* %a_1_addr_10, align 4

ST_55: StgValue_400 (292)  [1/1] 0.00ns  loc: minver.c:97
branch13:1  br label %12

ST_55: StgValue_401 (294)  [1/1] 2.71ns  loc: minver.c:97
branch12:0  store float %tmp_23, float* %a_0_addr_10, align 4

ST_55: StgValue_402 (295)  [1/1] 0.00ns  loc: minver.c:97
branch12:1  br label %12

ST_55: StgValue_403 (297)  [1/1] 0.00ns  loc: minver.c:97
:0  br label %._crit_edge20

ST_55: StgValue_404 (299)  [1/1] 0.00ns  loc: minver.c:96
._crit_edge20:0  br label %.preheader10


 <State 56>: 6.30ns
ST_56: tmp_19 (303)  [15/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 57>: 6.30ns
ST_57: tmp_19 (303)  [14/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 58>: 6.30ns
ST_58: tmp_19 (303)  [13/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 59>: 6.30ns
ST_59: tmp_19 (303)  [12/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 60>: 6.30ns
ST_60: tmp_19 (303)  [11/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 61>: 6.30ns
ST_61: tmp_19 (303)  [10/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 62>: 6.30ns
ST_62: tmp_19 (303)  [9/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 63>: 6.30ns
ST_63: tmp_19 (303)  [8/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 64>: 6.30ns
ST_64: tmp_19 (303)  [7/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 65>: 6.30ns
ST_65: tmp_19 (303)  [6/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 66>: 6.30ns
ST_66: tmp_19 (303)  [5/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 67>: 6.30ns
ST_67: tmp_19 (303)  [4/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 68>: 6.30ns
ST_68: tmp_19 (303)  [3/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 69>: 6.30ns
ST_69: tmp_19 (303)  [2/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 70>: 6.30ns
ST_70: tmp_19 (303)  [1/16] 6.30ns  loc: minver.c:99
:2  %tmp_19 = fdiv float %tmp_18, %pivot

ST_70: StgValue_420 (304)  [1/1] 0.00ns  loc: minver.c:99
:3  br i1 %icmp5, label %branch18, label %branch19


 <State 71>: 2.71ns
ST_71: StgValue_421 (306)  [1/1] 2.71ns  loc: minver.c:99
branch19:0  store float %tmp_19, float* %a_1_addr_8, align 4

ST_71: StgValue_422 (307)  [1/1] 0.00ns  loc: minver.c:99
branch19:1  br label %14

ST_71: StgValue_423 (309)  [1/1] 2.71ns  loc: minver.c:99
branch18:0  store float %tmp_19, float* %a_0_addr_8, align 4

ST_71: StgValue_424 (310)  [1/1] 0.00ns  loc: minver.c:99
branch18:1  br label %14

ST_71: StgValue_425 (312)  [1/1] 0.00ns  loc: minver.c:100
:0  br label %._crit_edge19

ST_71: StgValue_426 (314)  [1/1] 0.00ns  loc: minver.c:101
._crit_edge19:0  br label %._crit_edge

ST_71: StgValue_427 (316)  [1/1] 0.00ns  loc: minver.c:92
._crit_edge:0  br label %.preheader11


 <State 72>: 6.30ns
ST_72: tmp_14 (318)  [15/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 73>: 6.30ns
ST_73: tmp_14 (318)  [14/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 74>: 6.30ns
ST_74: tmp_14 (318)  [13/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 75>: 6.30ns
ST_75: tmp_14 (318)  [12/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 76>: 6.30ns
ST_76: tmp_14 (318)  [11/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 77>: 6.30ns
ST_77: tmp_14 (318)  [10/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_14 (318)  [9/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_14 (318)  [8/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 80>: 6.30ns
ST_80: tmp_14 (318)  [7/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 81>: 6.30ns
ST_81: tmp_14 (318)  [6/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 82>: 6.30ns
ST_82: tmp_14 (318)  [5/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 83>: 6.30ns
ST_83: tmp_14 (318)  [4/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 84>: 6.30ns
ST_84: tmp_14 (318)  [3/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 85>: 6.30ns
ST_85: tmp_14 (318)  [2/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 86>: 6.30ns
ST_86: tmp_14 (318)  [1/16] 6.30ns  loc: minver.c:103
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot

ST_86: StgValue_443 (319)  [1/1] 0.00ns  loc: minver.c:103
:1  br i1 %icmp4, label %branch8, label %branch9


 <State 87>: 2.71ns
ST_87: StgValue_444 (321)  [1/1] 2.71ns  loc: minver.c:103
branch9:0  store float %tmp_14, float* %a_1_addr_7, align 4

ST_87: StgValue_445 (322)  [1/1] 0.00ns  loc: minver.c:103
branch9:1  br label %16

ST_87: StgValue_446 (324)  [1/1] 2.71ns  loc: minver.c:103
branch8:0  store float %tmp_14, float* %a_0_addr_7, align 4

ST_87: StgValue_447 (325)  [1/1] 0.00ns  loc: minver.c:103
branch8:1  br label %16

ST_87: StgValue_448 (327)  [1/1] 0.00ns  loc: minver.c:56
:0  br label %.preheader14


 <State 88>: 2.37ns
ST_88: i_4 (333)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i5 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_88: exitcond1 (334)  [1/1] 2.37ns  loc: minver.c:107
.preheader8:1  %exitcond1 = icmp eq i5 %i_4, -16

ST_88: i_7 (335)  [1/1] 1.67ns  loc: minver.c:127
.preheader8:2  %i_7 = add i5 %i_4, 1

ST_88: StgValue_452 (336)  [1/1] 0.00ns  loc: minver.c:107
.preheader8:3  br i1 %exitcond1, label %.loopexit9.loopexit, label %.preheader.preheader

ST_88: empty_18 (338)  [1/1] 0.00ns
.preheader.preheader:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_88: tmp_s (339)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:1  %tmp_s = zext i5 %i_4 to i64

ST_88: tmp_cast (340)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:2  %tmp_cast = zext i5 %i_4 to i8

ST_88: work_addr_1 (341)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_s

ST_88: StgValue_457 (342)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:4  br label %.preheader

ST_88: StgValue_458 (400)  [1/1] 0.00ns
.loopexit9.loopexit:0  br label %.loopexit9


 <State 89>: 2.71ns
ST_89: work_load (344)  [2/2] 2.71ns  loc: minver.c:111
.preheader:0  %work_load = load i5* %work_addr_1, align 1


 <State 90>: 5.42ns
ST_90: work_load (344)  [1/2] 2.71ns  loc: minver.c:111
.preheader:0  %work_load = load i5* %work_addr_1, align 1

ST_90: tmp_8 (345)  [1/1] 2.37ns  loc: minver.c:113
.preheader:1  %tmp_8 = icmp eq i5 %work_load, %i_4

ST_90: StgValue_462 (346)  [1/1] 0.00ns  loc: minver.c:113
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %17

ST_90: tmp_10 (348)  [1/1] 0.00ns  loc: minver.c:115
:0  %tmp_10 = zext i5 %work_load to i64

ST_90: work_addr_2 (350)  [1/1] 0.00ns  loc: minver.c:115
:2  %work_addr_2 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_10

ST_90: work_load_1 (351)  [2/2] 2.71ns  loc: minver.c:115
:3  %work_load_1 = load i5* %work_addr_2, align 1

ST_90: StgValue_466 (398)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8


 <State 91>: 2.71ns
ST_91: work_load_1 (351)  [1/2] 2.71ns  loc: minver.c:115
:3  %work_load_1 = load i5* %work_addr_2, align 1

ST_91: StgValue_468 (352)  [1/1] 2.71ns  loc: minver.c:116
:4  store i5 %work_load, i5* %work_addr_2, align 1


 <State 92>: 2.71ns
ST_92: tmp_10_cast_cast (349)  [1/1] 0.00ns  loc: minver.c:115
:1  %tmp_10_cast_cast = zext i5 %work_load to i8

ST_92: StgValue_470 (353)  [1/1] 2.71ns  loc: minver.c:117
:5  store i5 %work_load_1, i5* %work_addr_1, align 1

ST_92: tmp_56 (354)  [1/1] 0.00ns  loc: minver.c:111
:6  %tmp_56 = trunc i5 %work_load to i3

ST_92: tmp_57 (355)  [1/1] 0.00ns  loc: minver.c:111
:7  %tmp_57 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_56, i4 0)

ST_92: tmp_65_cast3_cast (356)  [1/1] 0.00ns  loc: minver.c:121
:8  %tmp_65_cast3_cast = zext i7 %tmp_57 to i8

ST_92: tmp_58 (357)  [1/1] 1.67ns  loc: minver.c:121
:9  %tmp_58 = add i8 %tmp_cast, %tmp_65_cast3_cast

ST_92: tmp_66_cast (358)  [1/1] 0.00ns  loc: minver.c:121
:10  %tmp_66_cast = zext i8 %tmp_58 to i64

ST_92: a_0_addr_2 (359)  [1/1] 0.00ns  loc: minver.c:121
:11  %a_0_addr_2 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_66_cast

ST_92: tmp_59 (360)  [1/1] 1.67ns  loc: minver.c:122
:12  %tmp_59 = add i8 %tmp_10_cast_cast, %tmp_65_cast3_cast

ST_92: tmp_67_cast (361)  [1/1] 0.00ns  loc: minver.c:122
:13  %tmp_67_cast = zext i8 %tmp_59 to i64

ST_92: a_0_addr_3 (362)  [1/1] 0.00ns  loc: minver.c:122
:14  %a_0_addr_3 = getelementptr [128 x float]* %a_0, i64 0, i64 %tmp_67_cast

ST_92: a_1_addr_2 (363)  [1/1] 0.00ns  loc: minver.c:121
:15  %a_1_addr_2 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_66_cast

ST_92: a_1_addr_3 (364)  [1/1] 0.00ns  loc: minver.c:122
:16  %a_1_addr_3 = getelementptr [128 x float]* %a_1, i64 0, i64 %tmp_67_cast

ST_92: tmp_60 (365)  [1/1] 0.00ns  loc: minver.c:121
:17  %tmp_60 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %work_load, i32 3, i32 4)

ST_92: icmp2 (366)  [1/1] 1.54ns  loc: minver.c:121
:18  %icmp2 = icmp eq i2 %tmp_60, 0

ST_92: StgValue_484 (367)  [1/1] 1.57ns  loc: minver.c:119
:19  br label %18


 <State 93>: 2.71ns
ST_93: j_2 (369)  [1/1] 0.00ns
:0  %j_2 = phi i5 [ 0, %17 ], [ %j_4, %19 ]

ST_93: exitcond (370)  [1/1] 2.37ns  loc: minver.c:119
:1  %exitcond = icmp eq i5 %j_2, -16

ST_93: j_4 (371)  [1/1] 1.67ns  loc: minver.c:119
:2  %j_4 = add i5 %j_2, 1

ST_93: StgValue_488 (372)  [1/1] 0.00ns  loc: minver.c:119
:3  br i1 %exitcond, label %.preheader.loopexit, label %_ifconv6

ST_93: a_0_load_2 (377)  [2/2] 2.71ns  loc: minver.c:121
_ifconv6:3  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_93: a_1_load_2 (378)  [2/2] 2.71ns  loc: minver.c:121
_ifconv6:4  %a_1_load_2 = load float* %a_1_addr_2, align 4


 <State 94>: 2.71ns
ST_94: a_0_load_2 (377)  [1/2] 2.71ns  loc: minver.c:121
_ifconv6:3  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_94: a_1_load_2 (378)  [1/2] 2.71ns  loc: minver.c:121
_ifconv6:4  %a_1_load_2 = load float* %a_1_addr_2, align 4

ST_94: a_0_load_3 (380)  [2/2] 2.71ns  loc: minver.c:122
_ifconv6:6  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_94: a_1_load_3 (381)  [2/2] 2.71ns  loc: minver.c:122
_ifconv6:7  %a_1_load_3 = load float* %a_1_addr_3, align 4


 <State 95>: 6.79ns
ST_95: empty_19 (374)  [1/1] 0.00ns
_ifconv6:0  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_95: tmp_16 (375)  [1/1] 0.00ns  loc: minver.c:119
_ifconv6:1  %tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_95: StgValue_497 (376)  [1/1] 0.00ns  loc: minver.c:120
_ifconv6:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_95: w (379)  [1/1] 1.37ns  loc: minver.c:121
_ifconv6:5  %w = select i1 %icmp2, float %a_0_load_2, float %a_1_load_2

ST_95: a_0_load_3 (380)  [1/2] 2.71ns  loc: minver.c:122
_ifconv6:6  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_95: a_1_load_3 (381)  [1/2] 2.71ns  loc: minver.c:122
_ifconv6:7  %a_1_load_3 = load float* %a_1_addr_3, align 4

ST_95: a_load_4_phi (382)  [1/1] 1.37ns  loc: minver.c:122
_ifconv6:8  %a_load_4_phi = select i1 %icmp2, float %a_0_load_3, float %a_1_load_3

ST_95: StgValue_502 (383)  [1/1] 0.00ns  loc: minver.c:122
_ifconv6:9  br i1 %icmp2, label %branch6, label %branch7

ST_95: StgValue_503 (385)  [1/1] 2.71ns  loc: minver.c:122
branch7:0  store float %a_load_4_phi, float* %a_1_addr_2, align 4

ST_95: StgValue_504 (389)  [1/1] 2.71ns  loc: minver.c:122
branch6:0  store float %a_load_4_phi, float* %a_0_addr_2, align 4


 <State 96>: 2.71ns
ST_96: StgValue_505 (386)  [1/1] 2.71ns  loc: minver.c:123
branch7:1  store float %w, float* %a_1_addr_3, align 4

ST_96: StgValue_506 (387)  [1/1] 0.00ns  loc: minver.c:123
branch7:2  br label %19

ST_96: StgValue_507 (390)  [1/1] 2.71ns  loc: minver.c:123
branch6:1  store float %w, float* %a_0_addr_3, align 4

ST_96: StgValue_508 (391)  [1/1] 0.00ns  loc: minver.c:123
branch6:2  br label %19

ST_96: empty_20 (393)  [1/1] 0.00ns  loc: minver.c:124
:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_16) nounwind

ST_96: StgValue_510 (394)  [1/1] 0.00ns  loc: minver.c:119
:1  br label %18


 <State 97>: 0.00ns
ST_97: StgValue_511 (396)  [1/1] 0.00ns
.preheader.loopexit:0  br label %.preheader


 <State 98>: 0.00ns


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:52) [13]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:52) [13]  (0 ns)
	'store' operation (minver.c:53) of variable 'i' on array 'work', minver.c:43 [21]  (2.71 ns)

 <State 3>: 1.67ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:56) [28]  (0 ns)
	'add' operation ('k', minver.c:56) [30]  (1.67 ns)

 <State 4>: 4.38ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast', minver.c:58) ('i', minver.c:58) [40]  (0 ns)
	'add' operation ('tmp_48', minver.c:60) [51]  (1.67 ns)
	'getelementptr' operation ('a_0_addr_1', minver.c:60) [53]  (0 ns)
	'load' operation ('a_0_load_1', minver.c:60) on array 'a_0' [57]  (2.71 ns)

 <State 5>: 4.27ns
The critical path consists of the following:
	'icmp' operation ('icmp', minver.c:60) [56]  (2.9 ns)
	'select' operation ('n', minver.c:60) [59]  (1.37 ns)

 <State 6>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_36', minver_lib.c:11->minver.c:60) [66]  (6.37 ns)
	'and' operation ('tmp_37', minver_lib.c:11->minver.c:60) [67]  (0 ns)
	'select' operation ('w', minver.c:62) [70]  (1.37 ns)

 <State 7>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_45', minver.c:61) [84]  (6.37 ns)
	'and' operation ('tmp_46', minver.c:61) [85]  (1.37 ns)

 <State 8>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:61) on local variable 'r' [44]  (0 ns)
	'select' operation ('r', minver.c:61) [87]  (1.37 ns)
	'store' operation (minver.c:61) of variable 'r', minver.c:61 on local variable 'r' [90]  (1.57 ns)

 <State 9>: 4.38ns
The critical path consists of the following:
	'load' operation ('r_load', minver.c:103) on local variable 'r' [93]  (0 ns)
	'add' operation ('tmp_12', minver.c:67) [98]  (1.67 ns)
	'getelementptr' operation ('a_1_addr', minver.c:67) [101]  (0 ns)
	'load' operation ('a_1_load', minver.c:103) on array 'a_1' [105]  (2.71 ns)

 <State 10>: 4.08ns
The critical path consists of the following:
	'load' operation ('a_0_load', minver.c:103) on array 'a_0' [104]  (2.71 ns)
	'select' operation ('pivot', minver.c:103) [106]  (1.37 ns)

 <State 11>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_26', minver_lib.c:11->minver.c:68) [113]  (6.37 ns)
	'and' operation ('tmp_27', minver_lib.c:11->minver.c:68) [114]  (0 ns)
	'select' operation ('api', minver.c:68) [117]  (1.37 ns)

 <State 12>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:69) [118]  (5.12 ns)

 <State 13>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_31', minver.c:69) [125]  (6.9 ns)
	'and' operation ('tmp_32', minver.c:69) [126]  (1.37 ns)

 <State 14>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:77) on array 'work', minver.c:43 [135]  (2.71 ns)
	'store' operation (minver.c:77) of variable 'work_load_3', minver.c:77 on array 'work', minver.c:43 [136]  (2.71 ns)

 <State 15>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:78) of variable 'work_load_2', minver.c:76 on array 'work', minver.c:43 [137]  (2.71 ns)

 <State 16>: 4.38ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:79) [145]  (0 ns)
	'add' operation ('tmp_64', minver.c:81) [154]  (1.67 ns)
	'getelementptr' operation ('a_0_addr_4', minver.c:81) [156]  (0 ns)
	'load' operation ('a_0_load_4', minver.c:81) on array 'a_0' [162]  (2.71 ns)

 <State 17>: 4.08ns
The critical path consists of the following:
	'load' operation ('a_0_load_4', minver.c:81) on array 'a_0' [162]  (2.71 ns)
	'select' operation ('w', minver.c:81) [164]  (1.37 ns)

 <State 18>: 6.79ns
The critical path consists of the following:
	'load' operation ('a_0_load_6', minver.c:82) on array 'a_0' [165]  (2.71 ns)
	'select' operation ('a_load_2_phi', minver.c:82) [167]  (1.37 ns)
	'store' operation (minver.c:82) of variable 'a_load_2_phi', minver.c:82 on array 'a_1' [170]  (2.71 ns)

 <State 19>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:83) of variable 'w', minver.c:81 on array 'a_1' [178]  (2.71 ns)

 <State 20>: 1.67ns
The critical path consists of the following:
	'add' operation ('tmp_68', minver.c:103) [192]  (1.67 ns)

 <State 21>: 4.38ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:87) [200]  (0 ns)
	'add' operation ('tmp_70', minver.c:89) [209]  (1.67 ns)
	'getelementptr' operation ('a_0_addr_5', minver.c:89) [211]  (0 ns)
	'load' operation ('a_0_load_5', minver.c:89) on array 'a_0' [213]  (2.71 ns)

 <State 22>: 4.08ns
The critical path consists of the following:
	'load' operation ('a_0_load_5', minver.c:89) on array 'a_0' [213]  (2.71 ns)
	'select' operation ('a_load_5_phi', minver.c:89) [215]  (1.37 ns)

 <State 23>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 24>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 25>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 26>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 27>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 28>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:89) [216]  (6.3 ns)

 <State 39>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:89) of variable 'tmp_13', minver.c:89 on array 'a_1' [219]  (2.71 ns)

 <State 40>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:92) [230]  (1.57 ns)

 <State 41>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 42>: 4.08ns
The critical path consists of the following:
	'load' operation ('a_0_load_7', minver.c:94) on array 'a_0' [248]  (2.71 ns)
	'select' operation ('w', minver.c:94) [250]  (1.37 ns)

 <State 43>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_50', minver.c:95) [257]  (6.37 ns)
	'and' operation ('tmp_51', minver.c:95) [258]  (1.37 ns)

 <State 44>: 7.67ns
The critical path consists of the following:
	'xor' operation ('tmp_18_neg', minver.c:99) [301]  (1.37 ns)
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 45>: 4.08ns
The critical path consists of the following:
	'load' operation ('a_0_load_8', minver.c:97) on array 'a_0' [281]  (2.71 ns)
	'select' operation ('a_load_7_phi', minver.c:97) [283]  (1.37 ns)

 <State 46>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:97) [284]  (5.78 ns)

 <State 47>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:97) [284]  (5.78 ns)

 <State 48>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:97) [284]  (5.78 ns)

 <State 49>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22', minver.c:97) [284]  (5.78 ns)

 <State 50>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:97) [288]  (8.26 ns)

 <State 51>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:97) [288]  (8.26 ns)

 <State 52>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:97) [288]  (8.26 ns)

 <State 53>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:97) [288]  (8.26 ns)

 <State 54>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23', minver.c:97) [288]  (8.26 ns)

 <State 55>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:97) of variable 'tmp_23', minver.c:97 on array 'a_1' [291]  (2.71 ns)

 <State 56>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 57>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 58>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 59>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 60>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 61>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 62>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 63>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 64>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 65>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 66>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 67>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 68>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 69>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 70>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:99) [303]  (6.3 ns)

 <State 71>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_19', minver.c:99 on array 'a_1' [306]  (2.71 ns)

 <State 72>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 73>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 74>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 76>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 80>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 81>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 82>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 83>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 84>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 85>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 86>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:103) [318]  (6.3 ns)

 <State 87>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:103) of variable 'tmp_14', minver.c:103 on array 'a_1' [321]  (2.71 ns)

 <State 88>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:127) [333]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:107) [334]  (2.37 ns)

 <State 89>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:111) on array 'work', minver.c:43 [344]  (2.71 ns)

 <State 90>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:111) on array 'work', minver.c:43 [344]  (2.71 ns)
	'getelementptr' operation ('work_addr_2', minver.c:115) [350]  (0 ns)
	'load' operation ('work_load_1', minver.c:115) on array 'work', minver.c:43 [351]  (2.71 ns)

 <State 91>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load_1', minver.c:115) on array 'work', minver.c:43 [351]  (2.71 ns)

 <State 92>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:117) of variable 'work_load_1', minver.c:115 on array 'work', minver.c:43 [353]  (2.71 ns)

 <State 93>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_0_load_2', minver.c:121) on array 'a_0' [377]  (2.71 ns)

 <State 94>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_0_load_2', minver.c:121) on array 'a_0' [377]  (2.71 ns)

 <State 95>: 6.79ns
The critical path consists of the following:
	'load' operation ('a_0_load_3', minver.c:122) on array 'a_0' [380]  (2.71 ns)
	'select' operation ('a_load_4_phi', minver.c:122) [382]  (1.37 ns)
	'store' operation (minver.c:122) of variable 'a_load_4_phi', minver.c:122 on array 'a_1' [385]  (2.71 ns)

 <State 96>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:123) of variable 'w', minver.c:121 on array 'a_1' [386]  (2.71 ns)

 <State 97>: 0ns
The critical path consists of the following:

 <State 98>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
