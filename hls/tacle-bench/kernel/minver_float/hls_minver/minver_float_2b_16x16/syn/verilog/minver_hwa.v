// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.265500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2614,HLS_SYN_LUT=3263}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 76'b1;
parameter    ap_ST_fsm_state2 = 76'b10;
parameter    ap_ST_fsm_state3 = 76'b100;
parameter    ap_ST_fsm_pp0_stage0 = 76'b1000;
parameter    ap_ST_fsm_state9 = 76'b10000;
parameter    ap_ST_fsm_state10 = 76'b100000;
parameter    ap_ST_fsm_state11 = 76'b1000000;
parameter    ap_ST_fsm_state12 = 76'b10000000;
parameter    ap_ST_fsm_state13 = 76'b100000000;
parameter    ap_ST_fsm_state14 = 76'b1000000000;
parameter    ap_ST_fsm_state15 = 76'b10000000000;
parameter    ap_ST_fsm_state16 = 76'b100000000000;
parameter    ap_ST_fsm_state17 = 76'b1000000000000;
parameter    ap_ST_fsm_state18 = 76'b10000000000000;
parameter    ap_ST_fsm_state19 = 76'b100000000000000;
parameter    ap_ST_fsm_state20 = 76'b1000000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 76'b10000000000000000;
parameter    ap_ST_fsm_pp2_stage1 = 76'b100000000000000000;
parameter    ap_ST_fsm_state40 = 76'b1000000000000000000;
parameter    ap_ST_fsm_state41 = 76'b10000000000000000000;
parameter    ap_ST_fsm_state42 = 76'b100000000000000000000;
parameter    ap_ST_fsm_state43 = 76'b1000000000000000000000;
parameter    ap_ST_fsm_state44 = 76'b10000000000000000000000;
parameter    ap_ST_fsm_state45 = 76'b100000000000000000000000;
parameter    ap_ST_fsm_state46 = 76'b1000000000000000000000000;
parameter    ap_ST_fsm_state47 = 76'b10000000000000000000000000;
parameter    ap_ST_fsm_state48 = 76'b100000000000000000000000000;
parameter    ap_ST_fsm_state49 = 76'b1000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 76'b10000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 76'b100000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 76'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 76'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 76'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 76'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 76'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 76'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 76'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 76'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 76'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 76'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 76'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 76'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 76'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 76'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 76'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 76'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 76'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 76'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 76'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 76'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 76'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 76'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 76'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 76'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 76'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 76'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 76'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 76'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 76'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 76'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 76'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 76'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 76'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 76'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 76'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 76'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 76'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 76'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 76'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 76'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state92 = 76'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state93 = 76'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state94 = 76'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state95 = 76'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state96 = 76'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state97 = 76'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg[3:0] a_0_WEN_A;
reg[31:0] a_0_Din_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;
reg[31:0] a_1_Din_A;

(* fsm_encoding = "none" *) reg   [75:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_360;
reg   [31:0] r_1_reg_372;
reg   [31:0] ap_pipeline_reg_pp0_iter1_r_1_reg_372;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [31:0] ap_pipeline_reg_pp0_iter2_r_1_reg_372;
reg   [31:0] ap_pipeline_reg_pp0_iter3_r_1_reg_372;
reg   [4:0] i_2_reg_393;
wire   [4:0] work_q0;
reg   [4:0] reg_522;
wire   [0:0] ap_CS_fsm_state14;
wire   [4:0] work_q1;
wire   [0:0] ap_CS_fsm_state90;
wire   [31:0] grp_fu_508_p3;
reg   [31:0] reg_529;
wire   [0:0] ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] exitcond4_reg_1569;
wire   [0:0] ap_CS_fsm_state45;
wire   [31:0] grp_fu_457_p2;
reg   [31:0] reg_535;
reg    ap_enable_reg_pp2_iter8;
wire   [0:0] ap_CS_fsm_state86;
wire   [4:0] i_1_fu_547_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_563_p3;
reg   [0:0] tmp_2_reg_1362;
wire   [0:0] ap_CS_fsm_state3;
wire   [4:0] k_fu_571_p2;
reg   [4:0] k_reg_1366;
wire   [31:0] i_5_cast_fu_577_p1;
reg   [31:0] i_5_cast_reg_1371;
wire   [63:0] tmp_3_fu_581_p1;
reg   [63:0] tmp_3_reg_1377;
wire   [7:0] tmp_3_cast_fu_585_p1;
reg   [7:0] tmp_3_cast_reg_1382;
wire   [0:0] exitcond6_fu_589_p2;
reg   [0:0] exitcond6_reg_1390;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond6_reg_1390;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond6_reg_1390;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond6_reg_1390;
wire   [31:0] i_6_fu_622_p2;
reg   [31:0] i_6_reg_1404;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] n_assign_1_fu_644_p3;
reg   [31:0] n_assign_1_reg_1409;
wire   [31:0] w_4_fu_703_p3;
reg   [31:0] w_4_reg_1416;
reg   [31:0] ap_pipeline_reg_pp0_iter3_w_4_reg_1416;
wire   [0:0] tmp_46_fu_787_p2;
reg   [0:0] tmp_46_reg_1423;
wire   [31:0] wmax_1_fu_793_p3;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] r_load_reg_1434;
wire   [0:0] ap_CS_fsm_state9;
wire   [7:0] tmp_54_cast_fu_823_p1;
reg   [7:0] tmp_54_cast_reg_1440;
wire   [0:0] icmp1_fu_848_p2;
reg   [0:0] icmp1_reg_1455;
wire   [31:0] grp_fu_483_p3;
reg   [31:0] pivot_reg_1460;
wire   [0:0] ap_CS_fsm_state10;
wire   [31:0] api_fu_905_p3;
reg   [31:0] api_reg_1468;
wire   [0:0] ap_CS_fsm_state11;
wire   [63:0] tmp_5_fu_462_p1;
reg   [63:0] tmp_5_reg_1473;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_1_fu_957_p2;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_32_fu_951_p2;
reg   [8:0] work_addr_3_reg_1486;
reg   [8:0] work_addr_4_reg_1492;
wire   [7:0] tmp_62_cast_fu_973_p1;
reg   [7:0] tmp_62_cast_reg_1498;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] grp_fu_502_p2;
reg   [0:0] icmp3_reg_1503;
wire   [0:0] exitcond5_fu_977_p2;
reg   [0:0] exitcond5_reg_1508;
wire   [0:0] ap_CS_fsm_state16;
wire   [4:0] j_3_fu_983_p2;
reg   [4:0] j_3_reg_1512;
reg   [6:0] a_0_addr_4_reg_1517;
wire   [7:0] tmp_65_fu_1004_p2;
reg   [7:0] tmp_65_reg_1522;
reg   [6:0] a_1_addr_4_reg_1527;
reg   [6:0] a_0_addr_6_reg_1532;
wire   [0:0] ap_CS_fsm_state17;
reg   [6:0] a_1_addr_6_reg_1537;
wire   [31:0] w_1_fu_1014_p3;
reg   [31:0] w_1_reg_1542;
wire   [7:0] tmp_72_cast_fu_1033_p1;
reg   [7:0] tmp_72_cast_reg_1548;
wire   [0:0] ap_CS_fsm_state20;
reg   [6:0] a_0_addr_7_reg_1554;
reg   [6:0] a_1_addr_7_reg_1559;
reg   [0:0] icmp4_reg_1564;
wire   [0:0] exitcond4_fu_1048_p2;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [4:0] i_8_fu_1054_p2;
reg   [4:0] i_8_reg_1573;
reg   [6:0] a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter1_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter2_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter3_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter4_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter5_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter6_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter7_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter8_a_0_addr_5_reg_1578;
reg   [6:0] ap_pipeline_reg_pp2_iter9_a_0_addr_5_reg_1578;
reg   [6:0] a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter1_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter2_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter3_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter4_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter5_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter6_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter7_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter8_a_1_addr_5_reg_1583;
reg   [6:0] ap_pipeline_reg_pp2_iter9_a_1_addr_5_reg_1583;
wire   [4:0] i_9_fu_1081_p2;
reg   [4:0] i_9_reg_1591;
wire   [0:0] ap_CS_fsm_state41;
wire   [0:0] tmp_15_fu_1087_p2;
reg   [0:0] tmp_15_reg_1596;
wire   [0:0] exitcond3_fu_1075_p2;
wire   [7:0] tmp_77_cast_fu_1105_p1;
reg   [7:0] tmp_77_cast_reg_1600;
reg   [6:0] a_0_addr_8_reg_1605;
reg   [6:0] a_1_addr_8_reg_1610;
wire   [0:0] icmp5_fu_1130_p2;
reg   [0:0] icmp5_reg_1615;
wire   [31:0] grp_fu_515_p3;
reg   [31:0] w_2_reg_1620;
wire   [0:0] ap_CS_fsm_state42;
wire   [31:0] w_2_to_int_fu_1136_p1;
reg   [31:0] w_2_to_int_reg_1627;
wire   [0:0] ap_CS_fsm_state43;
wire   [0:0] tmp_51_fu_1171_p2;
reg   [0:0] tmp_51_reg_1632;
wire   [4:0] j_5_fu_1183_p2;
reg   [4:0] j_5_reg_1639;
wire   [0:0] ap_CS_fsm_state44;
wire   [0:0] tmp_20_fu_1189_p2;
reg   [0:0] tmp_20_reg_1644;
wire   [0:0] exitcond2_fu_1177_p2;
wire   [7:0] tmp_77_fu_1210_p2;
reg   [7:0] tmp_77_reg_1653;
wire   [31:0] tmp_18_fu_1220_p1;
reg   [6:0] a_0_addr_10_reg_1668;
wire   [0:0] ap_CS_fsm_state48;
reg   [6:0] a_1_addr_10_reg_1673;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] tmp_22_reg_1678;
wire   [0:0] ap_CS_fsm_state49;
reg   [31:0] a_load_8_phi_reg_1683;
wire   [31:0] grp_fu_449_p2;
reg   [31:0] tmp_23_reg_1688;
wire   [0:0] ap_CS_fsm_state54;
reg   [31:0] tmp_19_reg_1694;
wire   [0:0] ap_CS_fsm_state70;
wire   [4:0] i_7_fu_1236_p2;
reg   [4:0] i_7_reg_1703;
wire   [0:0] ap_CS_fsm_state88;
wire   [7:0] tmp_cast_fu_1247_p1;
reg   [7:0] tmp_cast_reg_1708;
wire   [0:0] exitcond1_fu_1230_p2;
reg   [8:0] work_addr_1_reg_1713;
reg   [8:0] work_addr_2_reg_1722;
wire   [0:0] tmp_8_fu_1251_p2;
reg   [4:0] work_load_1_reg_1728;
wire   [0:0] ap_CS_fsm_state91;
reg   [6:0] a_0_addr_2_reg_1733;
wire   [0:0] ap_CS_fsm_state92;
reg   [6:0] a_0_addr_3_reg_1738;
reg   [6:0] a_1_addr_2_reg_1743;
reg   [6:0] a_1_addr_3_reg_1748;
wire   [0:0] icmp2_fu_1315_p2;
reg   [0:0] icmp2_reg_1753;
wire   [0:0] exitcond_fu_1321_p2;
reg   [0:0] exitcond_reg_1759;
wire   [0:0] ap_CS_fsm_state93;
wire   [4:0] j_4_fu_1327_p2;
reg   [4:0] j_4_reg_1763;
reg   [31:0] a_0_load_2_reg_1768;
wire   [0:0] ap_CS_fsm_state94;
reg   [31:0] a_1_load_2_reg_1773;
wire   [31:0] w_fu_1333_p3;
reg   [31:0] w_reg_1778;
wire   [0:0] ap_CS_fsm_state95;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter9;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [4:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [4:0] work_d1;
reg   [4:0] i_reg_336;
wire   [0:0] exitcond7_fu_541_p2;
reg   [4:0] i_5_reg_348;
wire   [0:0] ap_CS_fsm_state87;
reg   [31:0] wmax_phi_fu_364_p4;
reg   [31:0] r_1_phi_fu_375_p4;
reg   [4:0] j_reg_382;
wire   [0:0] ap_CS_fsm_state19;
reg   [4:0] i_2_phi_fu_397_p4;
reg   [4:0] i_3_reg_404;
wire   [0:0] ap_CS_fsm_state71;
wire   [0:0] ap_CS_fsm_state40;
reg   [4:0] j_1_reg_415;
wire   [0:0] ap_CS_fsm_state55;
reg   [4:0] i_4_reg_426;
reg   [4:0] j_2_reg_438;
wire   [0:0] ap_CS_fsm_state96;
wire   [63:0] tmp_fu_553_p1;
wire   [63:0] tmp_59_cast_fu_616_p1;
wire   [63:0] tmp_55_cast_fu_832_p1;
wire  signed [63:0] tmp_4_fu_912_p1;
wire   [63:0] tmp_68_cast_fu_998_p1;
wire   [63:0] tmp_69_cast_fu_1009_p1;
wire   [63:0] tmp_73_cast_fu_1042_p1;
wire   [63:0] tmp_74_cast_fu_1069_p1;
wire   [63:0] tmp_78_cast_fu_1114_p1;
wire   [63:0] tmp_79_cast_fu_1204_p1;
wire   [63:0] tmp_80_cast_fu_1225_p1;
wire   [63:0] tmp_s_fu_1242_p1;
wire   [63:0] tmp_10_fu_1257_p1;
wire   [63:0] tmp_66_cast_fu_1287_p1;
wire   [63:0] tmp_67_cast_fu_1299_p1;
reg   [31:0] r_fu_112;
wire   [31:0] r_2_fu_799_p3;
wire   [0:0] ap_CS_fsm_state89;
reg   [31:0] a_0_Addr_A_orig;
wire   [0:0] ap_CS_fsm_state18;
wire   [31:0] a_load_4_phi_fu_1338_p3;
reg   [31:0] a_1_Addr_A_orig;
wire   [0:0] ap_CS_fsm_state50;
wire   [0:0] ap_CS_fsm_state46;
reg   [31:0] grp_fu_457_p0;
reg   [31:0] grp_fu_465_p0;
wire   [1:0] grp_fu_492_p4;
wire   [2:0] tmp_39_fu_595_p1;
wire   [6:0] tmp_41_fu_599_p3;
wire   [7:0] tmp_58_cast_fu_607_p1;
wire   [7:0] tmp_48_fu_611_p2;
wire   [28:0] tmp_52_fu_628_p4;
wire   [0:0] icmp_fu_638_p2;
wire   [31:0] n_assign_1_to_int_fu_652_p1;
wire   [7:0] tmp_33_fu_655_p4;
wire   [22:0] tmp_53_fu_665_p1;
wire   [0:0] notrhs_fu_675_p2;
wire   [0:0] notlhs_fu_669_p2;
wire   [0:0] tmp_35_fu_681_p2;
wire   [0:0] grp_fu_465_p2;
wire   [31:0] f_neg_i_fu_693_p2;
wire   [0:0] tmp_37_fu_687_p2;
wire   [31:0] f_1_fu_699_p1;
wire   [31:0] w_4_to_int_fu_710_p1;
wire   [31:0] wmax_to_int_fu_727_p1;
wire   [7:0] tmp_38_fu_713_p4;
wire   [22:0] tmp_54_fu_723_p1;
wire   [0:0] notrhs3_fu_751_p2;
wire   [0:0] notlhs3_fu_745_p2;
wire   [7:0] tmp_40_fu_731_p4;
wire   [22:0] tmp_55_fu_741_p1;
wire   [0:0] notrhs4_fu_769_p2;
wire   [0:0] notlhs4_fu_763_p2;
wire   [0:0] tmp_42_fu_757_p2;
wire   [0:0] tmp_43_fu_775_p2;
wire   [0:0] tmp_44_fu_781_p2;
wire   [0:0] tmp_45_fu_470_p2;
wire   [2:0] tmp_9_fu_811_p1;
wire   [6:0] tmp_11_fu_815_p3;
wire   [7:0] tmp_12_fu_827_p2;
wire   [28:0] tmp_21_fu_838_p4;
wire   [31:0] pivot_to_int_fu_854_p1;
wire   [7:0] tmp_6_fu_857_p4;
wire   [22:0] tmp_29_fu_867_p1;
wire   [0:0] notrhs1_fu_877_p2;
wire   [0:0] notlhs1_fu_871_p2;
wire   [0:0] tmp_17_fu_883_p2;
wire   [31:0] f_neg_i1_fu_895_p2;
wire   [0:0] tmp_27_fu_889_p2;
wire   [31:0] f_fu_901_p1;
wire   [63:0] tmp_5_to_int_fu_916_p1;
wire   [10:0] tmp_28_fu_919_p4;
wire   [51:0] tmp_34_fu_929_p1;
wire   [0:0] notrhs2_fu_939_p2;
wire   [0:0] notlhs2_fu_933_p2;
wire   [0:0] tmp_30_fu_945_p2;
wire   [0:0] tmp_31_fu_475_p2;
wire   [2:0] tmp_62_fu_961_p1;
wire   [6:0] tmp_61_fu_965_p3;
wire   [7:0] tmp_11_cast_fu_989_p1;
wire   [7:0] tmp_64_fu_993_p2;
wire   [2:0] tmp_66_fu_1021_p1;
wire   [6:0] tmp_67_fu_1025_p3;
wire   [7:0] tmp_68_fu_1037_p2;
wire   [7:0] tmp_12_cast_fu_1060_p1;
wire   [7:0] tmp_70_fu_1064_p2;
wire   [2:0] tmp_71_fu_1093_p1;
wire   [6:0] tmp_72_fu_1097_p3;
wire   [7:0] tmp_73_fu_1109_p2;
wire   [1:0] tmp_74_fu_1120_p4;
wire   [7:0] tmp_47_fu_1139_p4;
wire   [22:0] tmp_75_fu_1149_p1;
wire   [0:0] notrhs5_fu_1159_p2;
wire   [0:0] notlhs5_fu_1153_p2;
wire   [0:0] tmp_49_fu_1165_p2;
wire   [7:0] tmp_21_cast_fu_1195_p1;
wire   [7:0] tmp_76_fu_1199_p2;
wire   [31:0] tmp_18_neg_fu_1215_p2;
wire   [2:0] tmp_56_fu_1266_p1;
wire   [6:0] tmp_57_fu_1270_p3;
wire   [7:0] tmp_65_cast3_cast_fu_1278_p1;
wire   [7:0] tmp_58_fu_1282_p2;
wire   [7:0] tmp_10_cast_cast_fu_1262_p1;
wire   [7:0] tmp_59_fu_1293_p2;
wire   [1:0] tmp_60_fu_1305_p4;
reg   [4:0] grp_fu_465_opcode;
reg   [75:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 76'b1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 5 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_8_phi_reg_1683),
    .din1(tmp_22_reg_1678),
    .ce(1'b1),
    .dout(grp_fu_449_p2)
);

minver_hwa_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_2_reg_1620),
    .din1(reg_529),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

minver_hwa_fdiv_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_457_p0),
    .din1(pivot_reg_1460),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

minver_hwa_fpext_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_eOg_U4(
    .din0(api_reg_1468),
    .dout(tmp_5_fu_462_p1)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U5(
    .din0(grp_fu_465_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_465_opcode),
    .dout(grp_fu_465_p2)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U6(
    .din0(w_4_reg_1416),
    .din1(wmax_phi_fu_364_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_45_fu_470_p2)
);

minver_hwa_dcmp_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6g8j_U7(
    .din0(tmp_5_reg_1473),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_31_fu_475_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_589_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_563_p3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_589_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_563_p3)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == exitcond6_fu_589_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond4_fu_1048_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (exitcond4_reg_1569 == 1'b0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_pp2_stage1) & ~(exitcond4_reg_1569 == 1'b0)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp2_stage1)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp2_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_1569 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_2_reg_393 <= i_8_reg_1573;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_393 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_3_reg_404 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        i_3_reg_404 <= i_9_reg_1591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == tmp_2_fu_563_p3))) begin
        i_4_reg_426 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_CS_fsm_state90) & ~(1'b0 == tmp_8_fu_1251_p2))) begin
        i_4_reg_426 <= i_7_reg_1703;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_541_p2))) begin
        i_5_reg_348 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        i_5_reg_348 <= k_reg_1366;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_541_p2))) begin
        i_reg_336 <= i_1_fu_547_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_336 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (1'b0 == tmp_51_fu_1171_p2))) begin
        j_1_reg_415 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j_1_reg_415 <= j_5_reg_1639;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state96) & (1'b0 == exitcond_reg_1759))) begin
        j_2_reg_438 <= j_4_reg_1763;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        j_2_reg_438 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond5_reg_1508))) begin
        j_reg_382 <= j_3_reg_1512;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_reg_382 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_563_p3))) begin
        r_1_reg_372 <= i_5_cast_fu_577_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_reg_1390) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        r_1_reg_372 <= i_6_reg_1404;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1390))) begin
        r_fu_112 <= r_2_fu_799_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond7_fu_541_p2))) begin
        r_fu_112 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        reg_522 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_522 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_563_p3))) begin
        wmax_reg_360 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1390))) begin
        wmax_reg_360 <= wmax_1_fu_793_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        a_0_addr_10_reg_1668 <= tmp_80_cast_fu_1225_p1;
        a_1_addr_10_reg_1673 <= tmp_80_cast_fu_1225_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        a_0_addr_2_reg_1733 <= tmp_66_cast_fu_1287_p1;
        a_0_addr_3_reg_1738 <= tmp_67_cast_fu_1299_p1;
        a_1_addr_2_reg_1743 <= tmp_66_cast_fu_1287_p1;
        a_1_addr_3_reg_1748 <= tmp_67_cast_fu_1299_p1;
        icmp2_reg_1753 <= icmp2_fu_1315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'b0 == exitcond5_fu_977_p2))) begin
        a_0_addr_4_reg_1517 <= tmp_68_cast_fu_998_p1;
        a_1_addr_4_reg_1527 <= tmp_68_cast_fu_998_p1;
        tmp_65_reg_1522 <= tmp_65_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond4_fu_1048_p2))) begin
        a_0_addr_5_reg_1578 <= tmp_74_cast_fu_1069_p1;
        a_1_addr_5_reg_1583 <= tmp_74_cast_fu_1069_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        a_0_addr_6_reg_1532 <= tmp_69_cast_fu_1009_p1;
        a_1_addr_6_reg_1537 <= tmp_69_cast_fu_1009_p1;
        w_1_reg_1542 <= w_1_fu_1014_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        a_0_addr_7_reg_1554 <= tmp_73_cast_fu_1042_p1;
        a_1_addr_7_reg_1559 <= tmp_73_cast_fu_1042_p1;
        icmp4_reg_1564 <= grp_fu_502_p2;
        tmp_72_cast_reg_1548[6 : 4] <= tmp_72_cast_fu_1033_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (1'b0 == exitcond3_fu_1075_p2) & (1'b0 == tmp_15_fu_1087_p2))) begin
        a_0_addr_8_reg_1605 <= tmp_78_cast_fu_1114_p1;
        a_1_addr_8_reg_1610 <= tmp_78_cast_fu_1114_p1;
        icmp5_reg_1615 <= icmp5_fu_1130_p2;
        tmp_77_cast_reg_1600[6 : 4] <= tmp_77_cast_fu_1105_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & ~(1'b0 == icmp2_reg_1753))) begin
        a_0_load_2_reg_1768 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (1'b0 == icmp2_reg_1753))) begin
        a_1_load_2_reg_1773 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        a_load_8_phi_reg_1683 <= grp_fu_515_p3;
        tmp_22_reg_1678 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond6_reg_1390 <= exitcond6_reg_1390;
        ap_pipeline_reg_pp0_iter1_r_1_reg_372 <= r_1_reg_372;
        exitcond6_reg_1390 <= exitcond6_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp0_iter2_exitcond6_reg_1390 <= ap_pipeline_reg_pp0_iter1_exitcond6_reg_1390;
        ap_pipeline_reg_pp0_iter2_r_1_reg_372 <= ap_pipeline_reg_pp0_iter1_r_1_reg_372;
        ap_pipeline_reg_pp0_iter3_exitcond6_reg_1390 <= ap_pipeline_reg_pp0_iter2_exitcond6_reg_1390;
        ap_pipeline_reg_pp0_iter3_r_1_reg_372 <= ap_pipeline_reg_pp0_iter2_r_1_reg_372;
        ap_pipeline_reg_pp0_iter3_w_4_reg_1416 <= w_4_reg_1416;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        ap_pipeline_reg_pp2_iter1_a_0_addr_5_reg_1578 <= a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter1_a_1_addr_5_reg_1583 <= a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter2_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter1_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter2_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter1_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter3_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter2_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter3_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter2_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter4_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter3_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter4_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter3_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter5_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter4_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter5_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter4_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter6_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter5_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter6_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter5_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter7_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter6_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter7_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter6_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter8_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter7_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter8_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter7_a_1_addr_5_reg_1583;
        ap_pipeline_reg_pp2_iter9_a_0_addr_5_reg_1578 <= ap_pipeline_reg_pp2_iter8_a_0_addr_5_reg_1578;
        ap_pipeline_reg_pp2_iter9_a_1_addr_5_reg_1583 <= ap_pipeline_reg_pp2_iter8_a_1_addr_5_reg_1583;
        exitcond4_reg_1569 <= exitcond4_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        api_reg_1468 <= api_fu_905_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        exitcond5_reg_1508 <= exitcond5_fu_977_p2;
        j_3_reg_1512 <= j_3_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        exitcond_reg_1759 <= exitcond_fu_1321_p2;
        j_4_reg_1763 <= j_4_fu_1327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == tmp_2_fu_563_p3))) begin
        i_5_cast_reg_1371[4 : 0] <= i_5_cast_fu_577_p1[4 : 0];
        tmp_3_cast_reg_1382[4 : 0] <= tmp_3_cast_fu_585_p1[4 : 0];
        tmp_3_reg_1377[4 : 0] <= tmp_3_fu_581_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_fu_589_p2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_6_reg_1404 <= i_6_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        i_7_reg_1703 <= i_7_fu_1236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_8_reg_1573 <= i_8_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_9_reg_1591 <= i_9_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp1_reg_1455 <= icmp1_fu_848_p2;
        r_load_reg_1434 <= r_fu_112;
        tmp_54_cast_reg_1440[6 : 4] <= tmp_54_cast_fu_823_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp3_reg_1503 <= grp_fu_502_p2;
        tmp_62_cast_reg_1498[6 : 4] <= tmp_62_cast_fu_973_p1[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_5_reg_1639 <= j_5_fu_1183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_1366 <= k_fu_571_p2;
        tmp_2_reg_1362 <= i_5_reg_348[ap_const_lv32_4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_reg_1390))) begin
        n_assign_1_reg_1409 <= n_assign_1_fu_644_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pivot_reg_1460 <= grp_fu_483_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0) & (exitcond4_reg_1569 == 1'b0)) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_529 <= grp_fu_508_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter8)) | (1'b1 == ap_CS_fsm_state86))) begin
        reg_535 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (1'b0 == exitcond3_fu_1075_p2))) begin
        tmp_15_reg_1596 <= tmp_15_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        tmp_19_reg_1694 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (1'b0 == exitcond2_fu_1177_p2))) begin
        tmp_20_reg_1644 <= tmp_20_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        tmp_23_reg_1688 <= grp_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter2_exitcond6_reg_1390)) begin
        tmp_46_reg_1423 <= tmp_46_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_51_reg_1632 <= tmp_51_fu_1171_p2;
        w_2_to_int_reg_1627 <= w_2_to_int_fu_1136_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_5_reg_1473 <= tmp_5_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (1'b0 == exitcond2_fu_1177_p2) & (1'b0 == tmp_20_fu_1189_p2))) begin
        tmp_77_reg_1653 <= tmp_77_fu_1210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (1'b0 == exitcond1_fu_1230_p2))) begin
        tmp_cast_reg_1708[4 : 0] <= tmp_cast_fu_1247_p1[4 : 0];
        work_addr_1_reg_1713[4 : 0] <= tmp_s_fu_1242_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        w_2_reg_1620 <= grp_fu_515_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1390)) begin
        w_4_reg_1416 <= w_4_fu_703_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        w_reg_1778 <= w_fu_1333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (1'b0 == tmp_8_fu_1251_p2))) begin
        work_addr_2_reg_1722[4 : 0] <= tmp_10_fu_1257_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == tmp_2_reg_1362) & (1'b0 == tmp_32_fu_951_p2) & (1'b0 == tmp_1_fu_957_p2))) begin
        work_addr_3_reg_1486[4 : 0] <= tmp_3_reg_1377[4 : 0];
        work_addr_4_reg_1492 <= tmp_4_fu_912_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        work_load_1_reg_1728 <= work_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state96))) begin
        a_0_Addr_A_orig = a_0_addr_3_reg_1738;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state95))) begin
        a_0_Addr_A_orig = a_0_addr_2_reg_1733;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_0_Addr_A_orig = a_0_addr_7_reg_1554;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_0_Addr_A_orig = a_0_addr_8_reg_1605;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_0_Addr_A_orig = a_0_addr_10_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        a_0_Addr_A_orig = tmp_80_cast_fu_1225_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        a_0_Addr_A_orig = tmp_79_cast_fu_1204_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        a_0_Addr_A_orig = tmp_78_cast_fu_1114_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9))) begin
        a_0_Addr_A_orig = ap_pipeline_reg_pp2_iter9_a_0_addr_5_reg_1578;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        a_0_Addr_A_orig = tmp_74_cast_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Addr_A_orig = a_0_addr_6_reg_1532;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_Addr_A_orig = a_0_addr_4_reg_1517;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_0_Addr_A_orig = tmp_69_cast_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        a_0_Addr_A_orig = tmp_68_cast_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_0_Addr_A_orig = tmp_55_cast_fu_832_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_0_Addr_A_orig = tmp_59_cast_fu_616_p1;
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        a_0_Din_A = w_reg_1778;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_0_Din_A = a_load_4_phi_fu_1338_p3;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_0_Din_A = tmp_19_reg_1694;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_0_Din_A = tmp_23_reg_1688;
    end else if (((1'b1 == ap_CS_fsm_state87) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9)))) begin
        a_0_Din_A = reg_535;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Din_A = w_1_reg_1542;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_Din_A = grp_fu_483_p3;
    end else begin
        a_0_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & ~(1'b0 == icmp3_reg_1503)) | ((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond5_reg_1508) & ~(1'b0 == icmp1_reg_1455)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & ~(1'b0 == icmp4_reg_1564) & (1'b1 == ap_enable_reg_pp2_iter9)) | ((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_20_reg_1644) & ~(1'b0 == icmp5_reg_1615)) | ((1'b1 == ap_CS_fsm_state71) & ~(1'b0 == icmp5_reg_1615) & (1'b0 == tmp_15_reg_1596) & (1'b0 == tmp_51_reg_1632)) | (~(1'b0 == icmp4_reg_1564) & (1'b1 == ap_CS_fsm_state87)) | (~(1'b0 == icmp2_reg_1753) & (1'b1 == ap_CS_fsm_state95)) | (~(1'b0 == icmp2_reg_1753) & (1'b1 == ap_CS_fsm_state96) & (1'b0 == exitcond_reg_1759)))) begin
        a_0_WEN_A = ap_const_lv4_F;
    end else begin
        a_0_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state96))) begin
        a_1_Addr_A_orig = a_1_addr_3_reg_1748;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state95))) begin
        a_1_Addr_A_orig = a_1_addr_2_reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        a_1_Addr_A_orig = a_1_addr_7_reg_1559;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_1_Addr_A_orig = a_1_addr_8_reg_1610;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_1_Addr_A_orig = a_1_addr_10_reg_1673;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        a_1_Addr_A_orig = tmp_80_cast_fu_1225_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        a_1_Addr_A_orig = tmp_79_cast_fu_1204_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        a_1_Addr_A_orig = tmp_78_cast_fu_1114_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9))) begin
        a_1_Addr_A_orig = ap_pipeline_reg_pp2_iter9_a_1_addr_5_reg_1583;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        a_1_Addr_A_orig = tmp_74_cast_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Addr_A_orig = a_1_addr_6_reg_1537;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_1_Addr_A_orig = a_1_addr_4_reg_1527;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_1_Addr_A_orig = tmp_69_cast_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        a_1_Addr_A_orig = tmp_68_cast_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_1_Addr_A_orig = tmp_55_cast_fu_832_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        a_1_Addr_A_orig = tmp_59_cast_fu_616_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        a_1_Din_A = w_reg_1778;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        a_1_Din_A = a_load_4_phi_fu_1338_p3;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        a_1_Din_A = tmp_19_reg_1694;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        a_1_Din_A = tmp_23_reg_1688;
    end else if (((1'b1 == ap_CS_fsm_state87) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9)))) begin
        a_1_Din_A = reg_535;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Din_A = w_1_reg_1542;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_1_Din_A = grp_fu_483_p3;
    end else begin
        a_1_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & (1'b0 == icmp3_reg_1503)) | ((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond5_reg_1508) & (1'b0 == icmp1_reg_1455)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == icmp4_reg_1564) & (1'b1 == ap_enable_reg_pp2_iter9)) | ((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_20_reg_1644) & (1'b0 == icmp5_reg_1615)) | ((1'b1 == ap_CS_fsm_state71) & (1'b0 == icmp5_reg_1615) & (1'b0 == tmp_15_reg_1596) & (1'b0 == tmp_51_reg_1632)) | ((1'b0 == icmp4_reg_1564) & (1'b1 == ap_CS_fsm_state87)) | ((1'b0 == icmp2_reg_1753) & (1'b1 == ap_CS_fsm_state95)) | ((1'b0 == icmp2_reg_1753) & (1'b1 == ap_CS_fsm_state96) & (1'b0 == exitcond_reg_1759)))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (~(1'b0 == tmp_2_reg_1362) | ~(1'b0 == tmp_32_fu_951_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (~(1'b0 == tmp_2_reg_1362) | ~(1'b0 == tmp_32_fu_951_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_457_p0 = tmp_18_fu_1220_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_457_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        grp_fu_457_p0 = reg_529;
    end else begin
        grp_fu_457_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_465_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_pipeline_reg_pp0_iter1_exitcond6_reg_1390) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        grp_fu_465_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_465_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_465_p0 = w_2_reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_465_p0 = pivot_reg_1460;
    end else if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        grp_fu_465_p0 = n_assign_1_reg_1409;
    end else begin
        grp_fu_465_p0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond4_reg_1569 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_2_phi_fu_397_p4 = i_8_reg_1573;
    end else begin
        i_2_phi_fu_397_p4 = i_2_reg_393;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == exitcond6_reg_1390) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        r_1_phi_fu_375_p4 = i_6_reg_1404;
    end else begin
        r_1_phi_fu_375_p4 = r_1_reg_372;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_pipeline_reg_pp0_iter3_exitcond6_reg_1390))) begin
        wmax_phi_fu_364_p4 = wmax_1_fu_793_p3;
    end else begin
        wmax_phi_fu_364_p4 = wmax_reg_360;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        work_address0 = work_addr_1_reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        work_address0 = tmp_10_fu_1257_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address0 = work_addr_4_reg_1492;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_address0 = tmp_3_reg_1377;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_553_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        work_address1 = work_addr_2_reg_1722;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        work_address1 = work_addr_1_reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = work_addr_3_reg_1486;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        work_address1 = tmp_4_fu_912_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state92))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        work_d0 = work_load_1_reg_1728;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d0 = reg_522;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_336;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        work_d1 = reg_522;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state92) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_541_p2)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state91))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond7_fu_541_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == tmp_2_fu_563_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter4) & ~(1'b1 == ap_enable_reg_pp0_iter3)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_589_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond6_fu_589_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~(1'b0 == tmp_2_reg_1362) | ~(1'b0 == tmp_32_fu_951_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1362) & (1'b0 == tmp_32_fu_951_p2) & ~(1'b0 == tmp_1_fu_957_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if ((1'b0 == exitcond5_fu_977_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond4_fu_1048_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter9) & ~(1'b1 == ap_enable_reg_pp2_iter8))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b0 == exitcond3_fu_1075_p2) & ~(1'b0 == tmp_15_fu_1087_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else if (((1'b0 == exitcond3_fu_1075_p2) & (1'b0 == tmp_15_fu_1087_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if ((1'b0 == tmp_51_fu_1171_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b0 == exitcond2_fu_1177_p2) & ~(1'b0 == tmp_20_fu_1189_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else if (((1'b0 == exitcond2_fu_1177_p2) & (1'b0 == tmp_20_fu_1189_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state88 : begin
            if (~(1'b0 == exitcond1_fu_1230_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (~(1'b0 == tmp_8_fu_1251_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            if ((1'b0 == exitcond_fu_1321_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Rst_A = ap_rst;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Rst_A = ap_rst;

assign a_load_4_phi_fu_1338_p3 = ((icmp2_reg_1753[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state44 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state45 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state46 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state48 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state49 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state50 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state54 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state55 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state70 = ap_CS_fsm[ap_const_lv32_30];

assign ap_CS_fsm_state71 = ap_CS_fsm[ap_const_lv32_31];

assign ap_CS_fsm_state86 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_state87 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state88 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_state89 = ap_CS_fsm[ap_const_lv32_43];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state90 = ap_CS_fsm[ap_const_lv32_44];

assign ap_CS_fsm_state91 = ap_CS_fsm[ap_const_lv32_45];

assign ap_CS_fsm_state92 = ap_CS_fsm[ap_const_lv32_46];

assign ap_CS_fsm_state93 = ap_CS_fsm[ap_const_lv32_47];

assign ap_CS_fsm_state94 = ap_CS_fsm[ap_const_lv32_48];

assign ap_CS_fsm_state95 = ap_CS_fsm[ap_const_lv32_49];

assign ap_CS_fsm_state96 = ap_CS_fsm[ap_const_lv32_4A];

assign ap_return = ap_const_lv32_1;

assign api_fu_905_p3 = ((tmp_27_fu_889_p2[0:0] === 1'b1) ? pivot_reg_1460 : f_fu_901_p1);

assign exitcond1_fu_1230_p2 = ((i_4_reg_426 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond2_fu_1177_p2 = ((j_1_reg_415 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond3_fu_1075_p2 = ((i_3_reg_404 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond4_fu_1048_p2 = ((i_2_phi_fu_397_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond5_fu_977_p2 = ((j_reg_382 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond6_fu_589_p2 = ((r_1_phi_fu_375_p4 == ap_const_lv32_10) ? 1'b1 : 1'b0);

assign exitcond7_fu_541_p2 = ((i_reg_336 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_1321_p2 = ((j_2_reg_438 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign f_1_fu_699_p1 = f_neg_i_fu_693_p2;

assign f_fu_901_p1 = f_neg_i1_fu_895_p2;

assign f_neg_i1_fu_895_p2 = (pivot_to_int_fu_854_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_693_p2 = (n_assign_1_to_int_fu_652_p1 ^ ap_const_lv32_80000000);

assign grp_fu_483_p3 = ((icmp1_reg_1455[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign grp_fu_492_p4 = {{i_5_reg_348[ap_const_lv32_4 : ap_const_lv32_3]}};

assign grp_fu_502_p2 = ((grp_fu_492_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign grp_fu_508_p3 = ((icmp4_reg_1564[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign grp_fu_515_p3 = ((icmp5_reg_1615[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign i_1_fu_547_p2 = (i_reg_336 + ap_const_lv5_1);

assign i_5_cast_fu_577_p1 = i_5_reg_348;

assign i_6_fu_622_p2 = (ap_const_lv32_1 + r_1_phi_fu_375_p4);

assign i_7_fu_1236_p2 = (i_4_reg_426 + ap_const_lv5_1);

assign i_8_fu_1054_p2 = (i_2_phi_fu_397_p4 + ap_const_lv5_1);

assign i_9_fu_1081_p2 = (i_3_reg_404 + ap_const_lv5_1);

assign icmp1_fu_848_p2 = ((tmp_21_fu_838_p4 == ap_const_lv29_0) ? 1'b1 : 1'b0);

assign icmp2_fu_1315_p2 = ((tmp_60_fu_1305_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp5_fu_1130_p2 = ((tmp_74_fu_1120_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp_fu_638_p2 = ((tmp_52_fu_628_p4 == ap_const_lv29_0) ? 1'b1 : 1'b0);

assign j_3_fu_983_p2 = (j_reg_382 + ap_const_lv5_1);

assign j_4_fu_1327_p2 = (j_2_reg_438 + ap_const_lv5_1);

assign j_5_fu_1183_p2 = (j_1_reg_415 + ap_const_lv5_1);

assign k_fu_571_p2 = (i_5_reg_348 + ap_const_lv5_1);

assign n_assign_1_fu_644_p3 = ((icmp_fu_638_p2[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign n_assign_1_to_int_fu_652_p1 = n_assign_1_reg_1409;

assign notlhs1_fu_871_p2 = ((tmp_6_fu_857_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_933_p2 = ((tmp_28_fu_919_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_745_p2 = ((tmp_38_fu_713_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_763_p2 = ((tmp_40_fu_731_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_1153_p2 = ((tmp_47_fu_1139_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_669_p2 = ((tmp_33_fu_655_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_877_p2 = ((tmp_29_fu_867_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_939_p2 = ((tmp_34_fu_929_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_751_p2 = ((tmp_54_fu_723_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_769_p2 = ((tmp_55_fu_741_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1159_p2 = ((tmp_75_fu_1149_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_675_p2 = ((tmp_53_fu_665_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign pivot_to_int_fu_854_p1 = pivot_reg_1460;

assign r_2_fu_799_p3 = ((tmp_46_reg_1423[0:0] === 1'b1) ? ap_pipeline_reg_pp0_iter3_r_1_reg_372 : r_fu_112);

assign tmp_10_cast_cast_fu_1262_p1 = reg_522;

assign tmp_10_fu_1257_p1 = work_q1;

assign tmp_11_cast_fu_989_p1 = j_reg_382;

assign tmp_11_fu_815_p3 = {{tmp_9_fu_811_p1}, {ap_const_lv4_0}};

assign tmp_12_cast_fu_1060_p1 = i_2_phi_fu_397_p4;

assign tmp_12_fu_827_p2 = (tmp_54_cast_fu_823_p1 + tmp_3_cast_reg_1382);

assign tmp_15_fu_1087_p2 = ((i_3_reg_404 == i_5_reg_348) ? 1'b1 : 1'b0);

assign tmp_17_fu_883_p2 = (notrhs1_fu_877_p2 | notlhs1_fu_871_p2);

assign tmp_18_fu_1220_p1 = tmp_18_neg_fu_1215_p2;

assign tmp_18_neg_fu_1215_p2 = (w_2_to_int_reg_1627 ^ ap_const_lv32_80000000);

assign tmp_1_fu_957_p2 = ((r_load_reg_1434 == i_5_cast_reg_1371) ? 1'b1 : 1'b0);

assign tmp_20_fu_1189_p2 = ((j_1_reg_415 == i_5_reg_348) ? 1'b1 : 1'b0);

assign tmp_21_cast_fu_1195_p1 = j_1_reg_415;

assign tmp_21_fu_838_p4 = {{r_fu_112[ap_const_lv32_1F : ap_const_lv32_3]}};

assign tmp_27_fu_889_p2 = (tmp_17_fu_883_p2 & grp_fu_465_p2);

assign tmp_28_fu_919_p4 = {{tmp_5_to_int_fu_916_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_29_fu_867_p1 = pivot_to_int_fu_854_p1[22:0];

assign tmp_2_fu_563_p3 = i_5_reg_348[ap_const_lv32_4];

assign tmp_30_fu_945_p2 = (notrhs2_fu_939_p2 | notlhs2_fu_933_p2);

assign tmp_32_fu_951_p2 = (tmp_30_fu_945_p2 & tmp_31_fu_475_p2);

assign tmp_33_fu_655_p4 = {{n_assign_1_to_int_fu_652_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_34_fu_929_p1 = tmp_5_to_int_fu_916_p1[51:0];

assign tmp_35_fu_681_p2 = (notrhs_fu_675_p2 | notlhs_fu_669_p2);

assign tmp_37_fu_687_p2 = (tmp_35_fu_681_p2 & grp_fu_465_p2);

assign tmp_38_fu_713_p4 = {{w_4_to_int_fu_710_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_39_fu_595_p1 = r_1_phi_fu_375_p4[2:0];

assign tmp_3_cast_fu_585_p1 = i_5_reg_348;

assign tmp_3_fu_581_p1 = i_5_reg_348;

assign tmp_40_fu_731_p4 = {{wmax_to_int_fu_727_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_41_fu_599_p3 = {{tmp_39_fu_595_p1}, {ap_const_lv4_0}};

assign tmp_42_fu_757_p2 = (notrhs3_fu_751_p2 | notlhs3_fu_745_p2);

assign tmp_43_fu_775_p2 = (notrhs4_fu_769_p2 | notlhs4_fu_763_p2);

assign tmp_44_fu_781_p2 = (tmp_42_fu_757_p2 & tmp_43_fu_775_p2);

assign tmp_46_fu_787_p2 = (tmp_44_fu_781_p2 & tmp_45_fu_470_p2);

assign tmp_47_fu_1139_p4 = {{w_2_to_int_fu_1136_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_48_fu_611_p2 = (tmp_58_cast_fu_607_p1 + tmp_3_cast_reg_1382);

assign tmp_49_fu_1165_p2 = (notrhs5_fu_1159_p2 | notlhs5_fu_1153_p2);

assign tmp_4_fu_912_p1 = $signed(r_load_reg_1434);

assign tmp_51_fu_1171_p2 = (tmp_49_fu_1165_p2 & grp_fu_465_p2);

assign tmp_52_fu_628_p4 = {{r_1_reg_372[ap_const_lv32_1F : ap_const_lv32_3]}};

assign tmp_53_fu_665_p1 = n_assign_1_to_int_fu_652_p1[22:0];

assign tmp_54_cast_fu_823_p1 = tmp_11_fu_815_p3;

assign tmp_54_fu_723_p1 = w_4_to_int_fu_710_p1[22:0];

assign tmp_55_cast_fu_832_p1 = tmp_12_fu_827_p2;

assign tmp_55_fu_741_p1 = wmax_to_int_fu_727_p1[22:0];

assign tmp_56_fu_1266_p1 = reg_522[2:0];

assign tmp_57_fu_1270_p3 = {{tmp_56_fu_1266_p1}, {ap_const_lv4_0}};

assign tmp_58_cast_fu_607_p1 = tmp_41_fu_599_p3;

assign tmp_58_fu_1282_p2 = (tmp_cast_reg_1708 + tmp_65_cast3_cast_fu_1278_p1);

assign tmp_59_cast_fu_616_p1 = tmp_48_fu_611_p2;

assign tmp_59_fu_1293_p2 = (tmp_10_cast_cast_fu_1262_p1 + tmp_65_cast3_cast_fu_1278_p1);

assign tmp_5_to_int_fu_916_p1 = tmp_5_reg_1473;

assign tmp_60_fu_1305_p4 = {{reg_522[ap_const_lv32_4 : ap_const_lv32_3]}};

assign tmp_61_fu_965_p3 = {{tmp_62_fu_961_p1}, {ap_const_lv4_0}};

assign tmp_62_cast_fu_973_p1 = tmp_61_fu_965_p3;

assign tmp_62_fu_961_p1 = i_5_reg_348[2:0];

assign tmp_64_fu_993_p2 = (tmp_62_cast_reg_1498 + tmp_11_cast_fu_989_p1);

assign tmp_65_cast3_cast_fu_1278_p1 = tmp_57_fu_1270_p3;

assign tmp_65_fu_1004_p2 = (tmp_54_cast_reg_1440 + tmp_11_cast_fu_989_p1);

assign tmp_66_cast_fu_1287_p1 = tmp_58_fu_1282_p2;

assign tmp_66_fu_1021_p1 = i_5_reg_348[2:0];

assign tmp_67_cast_fu_1299_p1 = tmp_59_fu_1293_p2;

assign tmp_67_fu_1025_p3 = {{tmp_66_fu_1021_p1}, {ap_const_lv4_0}};

assign tmp_68_cast_fu_998_p1 = tmp_64_fu_993_p2;

assign tmp_68_fu_1037_p2 = (tmp_72_cast_fu_1033_p1 + tmp_3_cast_reg_1382);

assign tmp_69_cast_fu_1009_p1 = tmp_65_reg_1522;

assign tmp_6_fu_857_p4 = {{pivot_to_int_fu_854_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_70_fu_1064_p2 = (tmp_72_cast_reg_1548 + tmp_12_cast_fu_1060_p1);

assign tmp_71_fu_1093_p1 = i_3_reg_404[2:0];

assign tmp_72_cast_fu_1033_p1 = tmp_67_fu_1025_p3;

assign tmp_72_fu_1097_p3 = {{tmp_71_fu_1093_p1}, {ap_const_lv4_0}};

assign tmp_73_cast_fu_1042_p1 = tmp_68_fu_1037_p2;

assign tmp_73_fu_1109_p2 = (tmp_77_cast_fu_1105_p1 + tmp_3_cast_reg_1382);

assign tmp_74_cast_fu_1069_p1 = tmp_70_fu_1064_p2;

assign tmp_74_fu_1120_p4 = {{i_3_reg_404[ap_const_lv32_4 : ap_const_lv32_3]}};

assign tmp_75_fu_1149_p1 = w_2_to_int_fu_1136_p1[22:0];

assign tmp_76_fu_1199_p2 = (tmp_72_cast_reg_1548 + tmp_21_cast_fu_1195_p1);

assign tmp_77_cast_fu_1105_p1 = tmp_72_fu_1097_p3;

assign tmp_77_fu_1210_p2 = (tmp_77_cast_reg_1600 + tmp_21_cast_fu_1195_p1);

assign tmp_78_cast_fu_1114_p1 = tmp_73_fu_1109_p2;

assign tmp_79_cast_fu_1204_p1 = tmp_76_fu_1199_p2;

assign tmp_80_cast_fu_1225_p1 = tmp_77_reg_1653;

assign tmp_8_fu_1251_p2 = ((work_q1 == i_4_reg_426) ? 1'b1 : 1'b0);

assign tmp_9_fu_811_p1 = r_fu_112[2:0];

assign tmp_cast_fu_1247_p1 = i_4_reg_426;

assign tmp_fu_553_p1 = i_reg_336;

assign tmp_s_fu_1242_p1 = i_4_reg_426;

assign w_1_fu_1014_p3 = ((icmp3_reg_1503[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign w_2_to_int_fu_1136_p1 = w_2_reg_1620;

assign w_4_fu_703_p3 = ((tmp_37_fu_687_p2[0:0] === 1'b1) ? n_assign_1_reg_1409 : f_1_fu_699_p1);

assign w_4_to_int_fu_710_p1 = w_4_reg_1416;

assign w_fu_1333_p3 = ((icmp2_reg_1753[0:0] === 1'b1) ? a_0_load_2_reg_1768 : a_1_load_2_reg_1773);

assign wmax_1_fu_793_p3 = ((tmp_46_reg_1423[0:0] === 1'b1) ? ap_pipeline_reg_pp0_iter3_w_4_reg_1416 : wmax_reg_360);

assign wmax_to_int_fu_727_p1 = wmax_phi_fu_364_p4;

always @ (posedge ap_clk) begin
    i_5_cast_reg_1371[31:5] <= 27'b000000000000000000000000000;
    tmp_3_reg_1377[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1382[7:5] <= 3'b000;
    tmp_54_cast_reg_1440[3:0] <= 4'b0000;
    tmp_54_cast_reg_1440[7] <= 1'b0;
    work_addr_3_reg_1486[8:5] <= 4'b0000;
    tmp_62_cast_reg_1498[3:0] <= 4'b0000;
    tmp_62_cast_reg_1498[7] <= 1'b0;
    tmp_72_cast_reg_1548[3:0] <= 4'b0000;
    tmp_72_cast_reg_1548[7] <= 1'b0;
    tmp_77_cast_reg_1600[3:0] <= 4'b0000;
    tmp_77_cast_reg_1600[7] <= 1'b0;
    tmp_cast_reg_1708[7:5] <= 3'b000;
    work_addr_1_reg_1713[8:5] <= 4'b0000;
    work_addr_2_reg_1722[8:5] <= 4'b0000;
end

endmodule //minver_hwa
