-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity minver_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_EN_A : OUT STD_LOGIC;
    a_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_Clk_A : OUT STD_LOGIC;
    a_Rst_A : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of minver_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.047000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2206,HLS_SYN_LUT=2712}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp4_stage6 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp4_stage7 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage8 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage9 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage10 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage11 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage12 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage13 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage14 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage15 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage16 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage17 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage18 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage19 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage20 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage21 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage22 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage23 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage24 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage25 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage26 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (74 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (74 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (74 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (74 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage2 : STD_LOGIC_VECTOR (74 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage3 : STD_LOGIC_VECTOR (74 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage4 : STD_LOGIC_VECTOR (74 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage5 : STD_LOGIC_VECTOR (74 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage6 : STD_LOGIC_VECTOR (74 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage7 : STD_LOGIC_VECTOR (74 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage8 : STD_LOGIC_VECTOR (74 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage9 : STD_LOGIC_VECTOR (74 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (74 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_3EB0C6F7A0B5ED8D : STD_LOGIC_VECTOR (63 downto 0) := "0011111010110000110001101111011110100000101101011110110110001101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (74 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wmax_reg_293 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter1_r_1_reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_pipeline_reg_pp1_iter2_r_1_reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_r_1_reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_326 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_reg_337 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond6_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal work_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal work_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp5_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage2 : signal is "none";
    signal tmp_8_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal exitcond3_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage6 : signal is "none";
    signal ap_CS_fsm_pp5_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage9 : signal is "none";
    signal reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal tmp_54_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage6 : signal is "none";
    signal tmp_20_2_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_425 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage4 : signal is "none";
    signal ap_CS_fsm_pp4_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage12 : signal is "none";
    signal tmp_20_1_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage21 : signal is "none";
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage15 : signal is "none";
    signal ap_CS_fsm_pp4_stage24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage24 : signal is "none";
    signal i_1_fu_442_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_2_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1168 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal k_fu_464_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_reg_1172 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_5_cast6_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_cast6_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1183 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_cast_fu_478_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_cast_reg_1188 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_499_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_reg_1195 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_addr_13_reg_1201 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_11_reg_1206 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_9_reg_1211 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_7_reg_1216 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond6_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_1230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal w_3_fu_628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_reg_1235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_w_3_reg_1235 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1242 : STD_LOGIC_VECTOR (0 downto 0);
    signal wmax_1_fu_719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal r_load_reg_1253 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_37_fu_753_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_37_reg_1259 : STD_LOGIC_VECTOR (4 downto 0);
    signal api_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal api_reg_1269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_5_fu_377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1274 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_1_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_35_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal work_addr_3_reg_1287 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_addr_4_reg_1293 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_1_fu_884_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_1302 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal a_addr_4_reg_1307 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond5_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_addr_5_reg_1312 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond4_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_920_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_8_reg_1321 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_26_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal tmp_20_1_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_2_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal i_9_fu_964_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_9_reg_1347 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_992_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_70_reg_1356 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_addr_8_reg_1363 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_54_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_addr_10_reg_1377 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_12_reg_1382 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_14_reg_1387 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_load_12_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage5 : signal is "none";
    signal grp_fu_371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage17 : signal is "none";
    signal i_7_fu_1091_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_7_reg_1405 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal tmp_cast_fu_1102_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_reg_1410 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal work_addr_1_reg_1415 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1121_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_62_reg_1425 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_addr_2_reg_1430 : STD_LOGIC_VECTOR (3 downto 0);
    signal work_addr_2_reg_1435 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_addr_3_reg_1441 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp4_stage26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage26 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal work_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce0 : STD_LOGIC;
    signal work_we0 : STD_LOGIC;
    signal work_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal work_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce1 : STD_LOGIC;
    signal work_we1 : STD_LOGIC;
    signal work_d1 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_269 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond7_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_reg_281 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wmax_phi_fu_297_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_phi_fu_308_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_315 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_2_phi_fu_330_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_phi_fu_341_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_4_reg_348 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal tmp_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_cast_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_cast_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_cast_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_cast_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_cast_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_cast_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_cast_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_cast_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_cast_fu_1061_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_cast_fu_1070_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_cast_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_cast_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl5_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_2_fu_725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_CS_fsm_pp5_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage3 : signal is "none";
    signal a_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_pp4_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage10 : signal is "none";
    signal grp_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage11 : signal is "none";
    signal ap_CS_fsm_pp4_stage19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage19 : signal is "none";
    signal ap_CS_fsm_pp4_stage20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage20 : signal is "none";
    signal ap_CS_fsm_pp5_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage4 : signal is "none";
    signal ap_CS_fsm_pp5_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage5 : signal is "none";
    signal ap_CS_fsm_pp5_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage7 : signal is "none";
    signal ap_CS_fsm_pp5_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage8 : signal is "none";
    signal grp_fu_360_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_371_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_482_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_495_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_510_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_521_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_56_fu_542_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl2_cast_fu_546_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_55_fu_538_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_57_fu_554_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_58_fu_560_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_assign_1_to_int_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_580_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_590_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_1_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_to_int_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal wmax_to_int_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_639_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_649_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_657_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_667_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_741_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl3_cast_fu_745_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_fu_737_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_fu_759_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal pivot_to_int_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_773_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_783_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i1_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_817_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_to_int_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_836_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_846_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs2_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_cast_fu_890_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_fu_894_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_67_fu_904_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_cast_fu_926_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_fu_930_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_69_fu_980_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl4_cast_fu_988_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_cast_fu_976_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_71_fu_998_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_2_to_int_fu_1008_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1012_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1022_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_neg_fu_1050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1065_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_73_fu_1075_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_63_fu_1129_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_cast_fu_1117_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_64_fu_1133_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_65_fu_1139_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_380_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (74 downto 0);

    component minver_hwa_fsub_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fmul_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fdiv_3dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fpext_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component minver_hwa_fcmp_3fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_dcmp_6g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_work IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (1 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    work_U : component minver_hwa_work
    generic map (
        DataWidth => 2,
        AddressRange => 500,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => work_address0,
        ce0 => work_ce0,
        we0 => work_we0,
        d0 => work_d0,
        q0 => work_q0,
        address1 => work_address1,
        ce1 => work_ce1,
        we1 => work_we1,
        d1 => work_d1,
        q1 => work_q1);

    minver_hwa_fsub_3bkb_U1 : component minver_hwa_fsub_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_360_p0,
        din1 => grp_fu_365_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_360_p2);

    minver_hwa_fmul_3cud_U2 : component minver_hwa_fmul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_411,
        din1 => a_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_365_p2);

    minver_hwa_fdiv_3dEe_U3 : component minver_hwa_fdiv_3dEe
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_371_p0,
        din1 => reg_398,
        ce => ap_const_logic_1,
        dout => grp_fu_371_p2);

    minver_hwa_fpext_eOg_U4 : component minver_hwa_fpext_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => api_reg_1269,
        dout => tmp_5_fu_377_p1);

    minver_hwa_fcmp_3fYi_U5 : component minver_hwa_fcmp_3fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_380_p0,
        din1 => ap_const_lv32_0,
        opcode => grp_fu_380_opcode,
        dout => grp_fu_380_p2);

    minver_hwa_fcmp_3fYi_U6 : component minver_hwa_fcmp_3fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => w_3_reg_1235,
        din1 => wmax_phi_fu_297_p4,
        opcode => ap_const_lv5_2,
        dout => tmp_48_fu_385_p2);

    minver_hwa_dcmp_6g8j_U7 : component minver_hwa_dcmp_6g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_5_reg_1274,
        din1 => ap_const_lv64_3EB0C6F7A0B5ED8D,
        opcode => ap_const_lv5_5,
        dout => tmp_34_fu_390_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_532_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_458_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_532_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_458_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_532_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond4_fu_914_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_lv1_0 = exitcond4_reg_1317))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and not((ap_const_lv1_0 = exitcond4_reg_1317))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1)) then 
                    ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp3_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and not((ap_const_lv1_0 = exitcond3_fu_958_p2)))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage26))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage26) and not((ap_const_lv1_0 = exitcond3_reg_1343))))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and not((ap_const_lv1_0 = tmp_8_fu_1106_p2)))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state91) and (ap_const_lv1_0 = exitcond1_fu_1085_p2))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state91) and (ap_const_lv1_0 = exitcond1_fu_1085_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and not((ap_const_lv1_0 = tmp_8_reg_1421))))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_2_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond4_reg_1317) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
                i_2_reg_326 <= i_8_reg_1321;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                i_2_reg_326 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_3_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                i_3_reg_337 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
                i_3_reg_337 <= i_9_reg_1347;
            end if; 
        end if;
    end process;

    i_4_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = tmp_2_fu_458_p2)))) then 
                i_4_reg_348 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state103))) then 
                i_4_reg_348 <= i_7_reg_1405;
            end if; 
        end if;
    end process;

    i_5_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_5_reg_281 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
                i_5_reg_281 <= k_reg_1172;
            end if; 
        end if;
    end process;

    i_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_436_p2))) then 
                i_reg_269 <= i_1_fu_442_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_269 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                j_reg_315 <= j_1_reg_1302;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                j_reg_315 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    r_1_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_458_p2))) then 
                r_1_reg_305 <= i_5_cast6_fu_470_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1221 = ap_const_lv1_0))) then 
                r_1_reg_305 <= i_6_reg_1230;
            end if; 
        end if;
    end process;

    r_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) then 
                r_fu_104 <= r_2_fu_725_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                r_fu_104 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
                reg_404 <= work_q1;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1421)))) then 
                reg_404 <= work_q0;
            end if; 
        end if;
    end process;

    wmax_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_458_p2))) then 
                wmax_reg_293 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) then 
                wmax_reg_293 <= wmax_1_fu_719_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then
                a_addr_10_reg_1377 <= tmp_72_cast_fu_1061_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_458_p2))) then
                a_addr_11_reg_1206 <= tmp_58_cast_fu_527_p1(4 - 1 downto 0);
                a_addr_13_reg_1201 <= tmp_57_cast_fu_516_p1(4 - 1 downto 0);
                    a_addr_7_reg_1216(3 downto 2) <= p_shl_fu_490_p1(4 - 1 downto 0)(3 downto 2);
                a_addr_9_reg_1211 <= tmp_56_cast_fu_505_p1(4 - 1 downto 0);
                    i_5_cast6_reg_1177(1 downto 0) <= i_5_cast6_fu_470_p1(1 downto 0);
                tmp_11_reg_1195 <= tmp_11_fu_499_p2;
                    tmp_3_cast_reg_1188(1 downto 0) <= tmp_3_cast_fu_478_p1(1 downto 0);
                    tmp_3_reg_1183(1 downto 0) <= tmp_3_fu_474_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage4))) then
                a_addr_12_reg_1382 <= tmp_74_cast_fu_1070_p1(4 - 1 downto 0);
                a_addr_14_reg_1387 <= tmp_75_cast_fu_1080_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_lv1_0 = tmp_8_fu_1106_p2))) then
                a_addr_2_reg_1430 <= tmp_67_cast_fu_1144_p1(4 - 1 downto 0);
                    tmp_62_reg_1425(3 downto 2) <= tmp_62_fu_1121_p3(3 downto 2);
                    work_addr_2_reg_1435(1 downto 0) <= tmp_10_fu_1112_p1(9 - 1 downto 0)(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1421))) then
                    a_addr_3_reg_1441(3 downto 2) <= p_shl5_fu_1149_p1(4 - 1 downto 0)(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond5_fu_878_p2))) then
                a_addr_4_reg_1307 <= tmp_68_cast_fu_899_p1(4 - 1 downto 0);
                a_addr_5_reg_1312 <= tmp_69_cast_fu_909_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_fu_914_p2))) then
                a_addr_6_reg_1326 <= tmp_70_cast_fu_935_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_958_p2) and (ap_const_lv1_0 = tmp_15_fu_970_p2))) then
                a_addr_8_reg_1363 <= tmp_73_cast_fu_1003_p1(4 - 1 downto 0);
                tmp_70_reg_1356 <= tmp_70_fu_992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_20_1_reg_1335) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then
                a_load_12_reg_1392 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221 <= exitcond6_reg_1221;
                ap_pipeline_reg_pp1_iter1_r_1_reg_305 <= r_1_reg_305;
                exitcond6_reg_1221 <= exitcond6_fu_532_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221;
                ap_pipeline_reg_pp1_iter2_r_1_reg_305 <= ap_pipeline_reg_pp1_iter1_r_1_reg_305;
                ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221;
                ap_pipeline_reg_pp1_iter3_r_1_reg_305 <= ap_pipeline_reg_pp1_iter2_r_1_reg_305;
                ap_pipeline_reg_pp1_iter3_w_3_reg_1235 <= w_3_reg_1235;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326 <= a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317 <= exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317;
                ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326;
                ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317;
                exitcond4_reg_1317 <= exitcond4_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363 <= a_addr_8_reg_1363;
                ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352 <= tmp_15_reg_1352;
                exitcond3_reg_1343 <= exitcond3_fu_958_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then
                ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368 <= tmp_54_reg_1368;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                api_reg_1269 <= api_fu_821_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_532_p2) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                i_6_reg_1230 <= i_6_fu_570_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state91))) then
                i_7_reg_1405 <= i_7_fu_1091_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                i_8_reg_1321 <= i_8_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                i_9_reg_1347 <= i_9_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                j_1_reg_1302 <= j_1_fu_884_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                k_reg_1172 <= k_fu_464_p2;
                tmp_2_reg_1168 <= tmp_2_fu_458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                r_load_reg_1253 <= r_fu_104;
                tmp_37_reg_1259 <= tmp_37_fu_753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1221 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then
                reg_398 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1421)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond4_reg_1317)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)))) then
                reg_411 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_26_reg_1331)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_lv1_0 = tmp_20_2_reg_1339)))) then
                reg_419 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_26_reg_1331) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage12) and (ap_const_lv1_0 = tmp_20_1_reg_1335)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_20_2_reg_1339) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage21)))) then
                reg_425 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_958_p2))) then
                tmp_15_reg_1352 <= tmp_15_fu_970_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage17))) then
                tmp_19_reg_1397 <= grp_fu_371_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tmp_20_1_reg_1335 <= tmp_20_1_fu_946_p2;
                tmp_20_2_reg_1339 <= tmp_20_2_fu_952_p2;
                tmp_26_reg_1331 <= tmp_26_fu_940_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221)) then
                tmp_49_reg_1242 <= tmp_49_fu_713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then
                tmp_54_reg_1368 <= tmp_54_fu_1044_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                tmp_5_reg_1274 <= tmp_5_fu_377_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1))) then
                tmp_8_reg_1421 <= tmp_8_fu_1106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state91) and (ap_const_lv1_0 = exitcond1_fu_1085_p2))) then
                    tmp_cast_reg_1410(1 downto 0) <= tmp_cast_fu_1102_p1(1 downto 0);
                    work_addr_1_reg_1415(1 downto 0) <= tmp_s_fu_1097_p1(9 - 1 downto 0)(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221)) then
                w_3_reg_1235 <= w_3_fu_628_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = tmp_2_reg_1168) and (ap_const_lv1_0 = tmp_35_fu_868_p2) and (ap_const_lv1_0 = tmp_1_fu_874_p2))) then
                    work_addr_3_reg_1287(1 downto 0) <= tmp_3_reg_1183(9 - 1 downto 0)(1 downto 0);
                work_addr_4_reg_1293 <= tmp_4_fu_829_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    i_5_cast6_reg_1177(31 downto 2) <= "000000000000000000000000000000";
    tmp_3_reg_1183(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    tmp_3_cast_reg_1188(4 downto 2) <= "000";
    a_addr_7_reg_1216(1 downto 0) <= "00";
    work_addr_3_reg_1287(8 downto 2) <= "0000000";
    tmp_cast_reg_1410(4 downto 2) <= "000";
    work_addr_1_reg_1415(8 downto 2) <= "0000000";
    tmp_62_reg_1425(1 downto 0) <= "00";
    work_addr_2_reg_1435(8 downto 2) <= "0000000";
    a_addr_3_reg_1441(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp1_iter1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage6, tmp_2_fu_458_p2, tmp_2_reg_1168, exitcond6_fu_532_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, tmp_1_fu_874_p2, tmp_35_fu_868_p2, exitcond5_fu_878_p2, exitcond4_fu_914_p2, exitcond3_fu_958_p2, exitcond1_fu_1085_p2, tmp_8_fu_1106_p2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter7, ap_enable_reg_pp3_iter8, ap_enable_reg_pp4_iter1, exitcond7_fu_436_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = exitcond7_fu_436_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = tmp_2_fu_458_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter3)))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_532_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_532_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if ((not((ap_const_lv1_0 = tmp_2_reg_1168)) or not((ap_const_lv1_0 = tmp_35_fu_868_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_lv1_0 = tmp_2_reg_1168) and (ap_const_lv1_0 = tmp_35_fu_868_p2) and not((ap_const_lv1_0 = tmp_1_fu_874_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if ((ap_const_lv1_0 = exitcond5_fu_878_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond4_fu_914_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter8) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter7))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and not((ap_const_lv1_0 = exitcond3_fu_958_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
            when ap_ST_fsm_pp4_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
            when ap_ST_fsm_pp4_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
            when ap_ST_fsm_pp4_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
            when ap_ST_fsm_pp4_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
            when ap_ST_fsm_pp4_stage6 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_pp4_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
            when ap_ST_fsm_pp4_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage9;
            when ap_ST_fsm_pp4_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage10;
            when ap_ST_fsm_pp4_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage11;
            when ap_ST_fsm_pp4_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage12;
            when ap_ST_fsm_pp4_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage13;
            when ap_ST_fsm_pp4_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage14;
            when ap_ST_fsm_pp4_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage15;
            when ap_ST_fsm_pp4_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage16;
            when ap_ST_fsm_pp4_stage16 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage17;
            when ap_ST_fsm_pp4_stage17 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage18;
            when ap_ST_fsm_pp4_stage18 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage19;
            when ap_ST_fsm_pp4_stage19 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage20;
            when ap_ST_fsm_pp4_stage20 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage21;
            when ap_ST_fsm_pp4_stage21 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage22;
            when ap_ST_fsm_pp4_stage22 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage23;
            when ap_ST_fsm_pp4_stage23 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage24;
            when ap_ST_fsm_pp4_stage24 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage25;
            when ap_ST_fsm_pp4_stage25 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage26;
            when ap_ST_fsm_pp4_stage26 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state91 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_1085_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
            when ap_ST_fsm_pp5_stage1 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and not((ap_const_lv1_0 = tmp_8_fu_1106_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_pp5_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
            when ap_ST_fsm_pp5_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage4;
            when ap_ST_fsm_pp5_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage5;
            when ap_ST_fsm_pp5_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage6;
            when ap_ST_fsm_pp5_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage7;
            when ap_ST_fsm_pp5_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage8;
            when ap_ST_fsm_pp5_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage9;
            when ap_ST_fsm_pp5_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_Addr_A <= std_logic_vector(shift_left(unsigned(a_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state18, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage6, ap_CS_fsm_pp4_stage4, a_addr_13_reg_1201, a_addr_11_reg_1206, a_addr_9_reg_1211, a_addr_7_reg_1216, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, a_addr_4_reg_1307, a_addr_5_reg_1312, ap_CS_fsm_pp3_stage0, ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326, ap_CS_fsm_pp4_stage0, ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363, ap_CS_fsm_pp4_stage2, a_addr_10_reg_1377, a_addr_12_reg_1382, a_addr_14_reg_1387, ap_CS_fsm_pp4_stage5, a_addr_2_reg_1430, a_addr_3_reg_1441, ap_enable_reg_pp3_iter8, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_CS_fsm_state90, ap_CS_fsm_state20, tmp_64_cast_fu_565_p1, tmp_61_cast_fu_764_p1, tmp_68_cast_fu_899_p1, tmp_70_cast_fu_935_p1, tmp_73_cast_fu_1003_p1, tmp_72_cast_fu_1061_p1, tmp_74_cast_fu_1070_p1, tmp_67_cast_fu_1144_p1, p_shl5_fu_1149_p1, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage10, ap_CS_fsm_pp4_stage11, ap_CS_fsm_pp4_stage19, ap_CS_fsm_pp4_stage20, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_3_reg_1441),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_2_reg_1430),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            a_Addr_A_orig <= p_shl5_fu_1149_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            a_Addr_A_orig <= tmp_67_cast_fu_1144_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_7_reg_1216),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage20))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_13_reg_1201),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage19))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_12_reg_1382),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage11))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_11_reg_1206),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage10))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_10_reg_1377),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_14_reg_1387),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage4))) then 
            a_Addr_A_orig <= tmp_74_cast_fu_1070_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            a_Addr_A_orig <= tmp_72_cast_fu_1061_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_9_reg_1211),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            a_Addr_A_orig <= tmp_73_cast_fu_1003_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter8))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then 
            a_Addr_A_orig <= tmp_70_cast_fu_935_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_4_reg_1307),32));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)))) then 
            a_Addr_A_orig <= std_logic_vector(resize(unsigned(a_addr_5_reg_1312),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_Addr_A_orig <= tmp_68_cast_fu_899_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            a_Addr_A_orig <= tmp_61_cast_fu_764_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            a_Addr_A_orig <= tmp_64_cast_fu_565_p1(32 - 1 downto 0);
        else 
            a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_Clk_A <= ap_clk;

    a_Din_A_assign_proc : process(a_Dout_A, ap_enable_reg_pp5_iter0, reg_411, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp4_stage6, grp_fu_371_p2, tmp_19_reg_1397, ap_enable_reg_pp3_iter8, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_CS_fsm_state90, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage10, grp_fu_360_p2, ap_CS_fsm_pp4_stage19, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_Din_A <= tmp_19_reg_1397;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)))) then 
            a_Din_A <= grp_fu_360_p2;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter8)))) then 
            a_Din_A <= grp_fu_371_p2;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_Din_A <= reg_411;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)))) then 
            a_Din_A <= a_Dout_A;
        else 
            a_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_EN_A_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state18, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage6, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp4_stage5, ap_enable_reg_pp3_iter8, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_CS_fsm_state90, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage10, ap_CS_fsm_pp4_stage11, ap_CS_fsm_pp4_stage19, ap_CS_fsm_pp4_stage20, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter8)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage20)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_EN_A <= ap_const_logic_1;
        else 
            a_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_Rst_A <= ap_rst;

    a_WEN_A_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_8_reg_1421, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter0, exitcond3_reg_1343, tmp_15_reg_1352, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, tmp_54_reg_1368, tmp_26_reg_1331, ap_CS_fsm_pp4_stage6, tmp_20_2_reg_1339, tmp_20_1_reg_1335, ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317, ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352, ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368, ap_enable_reg_pp3_iter8, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_CS_fsm_state90, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage10, ap_CS_fsm_pp4_stage19, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_logic_1 = ap_enable_reg_pp3_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_26_reg_1331) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_20_1_reg_1335) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_lv1_0 = tmp_54_reg_1368) and (ap_const_lv1_0 = tmp_20_2_reg_1339) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_WEN_A <= ap_const_lv4_F;
        else 
            a_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp4_stage10 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_pp4_stage11 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_pp4_stage12 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_pp4_stage15 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_pp4_stage17 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_pp4_stage19 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp4_stage20 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_pp4_stage21 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_pp4_stage24 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_pp4_stage26 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp4_stage4 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_pp4_stage5 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp4_stage6 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_pp5_stage2 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_pp5_stage3 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_pp5_stage4 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_pp5_stage5 <= ap_CS_fsm(69 downto 69);
    ap_CS_fsm_pp5_stage6 <= ap_CS_fsm(70 downto 70);
    ap_CS_fsm_pp5_stage7 <= ap_CS_fsm(71 downto 71);
    ap_CS_fsm_pp5_stage8 <= ap_CS_fsm(72 downto 72);
    ap_CS_fsm_pp5_stage9 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state103 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state11 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state12 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state13 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state14 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state17 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state18 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state19 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state21 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state75 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_state90 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state91 <= ap_CS_fsm(63 downto 63);

    ap_done_assign_proc : process(tmp_2_reg_1168, ap_CS_fsm_state14, tmp_35_fu_868_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1168)) or not((ap_const_lv1_0 = tmp_35_fu_868_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_2_reg_1168, ap_CS_fsm_state14, tmp_35_fu_868_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1168)) or not((ap_const_lv1_0 = tmp_35_fu_868_p2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_1;
    api_fu_821_p3 <= 
        reg_398 when (tmp_30_fu_805_p2(0) = '1') else 
        f_fu_817_p1;
    exitcond1_fu_1085_p2 <= "1" when (i_4_reg_348 = ap_const_lv2_3) else "0";
    exitcond3_fu_958_p2 <= "1" when (i_3_phi_fu_341_p4 = ap_const_lv2_3) else "0";
    exitcond4_fu_914_p2 <= "1" when (i_2_phi_fu_330_p4 = ap_const_lv2_3) else "0";
    exitcond5_fu_878_p2 <= "1" when (j_reg_315 = ap_const_lv2_3) else "0";
    exitcond6_fu_532_p2 <= "1" when (r_1_phi_fu_308_p4 = ap_const_lv32_3) else "0";
    exitcond7_fu_436_p2 <= "1" when (i_reg_269 = ap_const_lv2_3) else "0";
    f_1_fu_624_p1 <= f_neg_i_fu_618_p2;
    f_fu_817_p1 <= f_neg_i1_fu_811_p2;
    f_neg_i1_fu_811_p2 <= (pivot_to_int_fu_769_p1 xor ap_const_lv32_80000000);
    f_neg_i_fu_618_p2 <= (n_assign_1_to_int_fu_576_p1 xor ap_const_lv32_80000000);

    grp_fu_360_p0_assign_proc : process(ap_enable_reg_pp4_iter0, reg_419, ap_CS_fsm_pp4_stage6, reg_425, ap_CS_fsm_pp4_stage15, ap_CS_fsm_pp4_stage24, a_load_12_reg_1392)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage24)) then 
                grp_fu_360_p0 <= reg_419;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage15)) then 
                grp_fu_360_p0 <= a_load_12_reg_1392;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage6)) then 
                grp_fu_360_p0 <= reg_425;
            else 
                grp_fu_360_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_360_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_371_p0_assign_proc : process(reg_411, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage2, tmp_18_fu_1056_p1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state75)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_fu_371_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_371_p0 <= tmp_18_fu_1056_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            grp_fu_371_p0 <= reg_411;
        else 
            grp_fu_371_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_380_opcode_assign_proc : process(ap_enable_reg_pp4_iter0, exitcond3_reg_1343, tmp_15_reg_1352, ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221, ap_CS_fsm_state12, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_0 = tmp_15_reg_1352) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_380_opcode <= ap_const_lv5_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            grp_fu_380_opcode <= ap_const_lv5_3;
        else 
            grp_fu_380_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_380_p0_assign_proc : process(reg_398, reg_411, ap_enable_reg_pp4_iter0, ap_CS_fsm_state12, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_380_p0 <= reg_411;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
            grp_fu_380_p0 <= reg_398;
        else 
            grp_fu_380_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_442_p2 <= std_logic_vector(unsigned(i_reg_269) + unsigned(ap_const_lv2_1));

    i_2_phi_fu_330_p4_assign_proc : process(i_2_reg_326, exitcond4_reg_1317, ap_CS_fsm_pp3_stage0, i_8_reg_1321, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond4_reg_1317) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            i_2_phi_fu_330_p4 <= i_8_reg_1321;
        else 
            i_2_phi_fu_330_p4 <= i_2_reg_326;
        end if; 
    end process;


    i_3_phi_fu_341_p4_assign_proc : process(i_3_reg_337, exitcond3_reg_1343, ap_CS_fsm_pp4_stage0, i_9_reg_1347, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond3_reg_1343) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            i_3_phi_fu_341_p4 <= i_9_reg_1347;
        else 
            i_3_phi_fu_341_p4 <= i_3_reg_337;
        end if; 
    end process;

    i_5_cast6_fu_470_p1 <= std_logic_vector(resize(unsigned(i_5_reg_281),32));
    i_6_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(r_1_phi_fu_308_p4));
    i_7_fu_1091_p2 <= std_logic_vector(unsigned(i_4_reg_348) + unsigned(ap_const_lv2_1));
    i_8_fu_920_p2 <= std_logic_vector(unsigned(i_2_phi_fu_330_p4) + unsigned(ap_const_lv2_1));
    i_9_fu_964_p2 <= std_logic_vector(unsigned(i_3_phi_fu_341_p4) + unsigned(ap_const_lv2_1));
    j_1_fu_884_p2 <= std_logic_vector(unsigned(j_reg_315) + unsigned(ap_const_lv2_1));
    k_fu_464_p2 <= std_logic_vector(unsigned(i_5_reg_281) + unsigned(ap_const_lv2_1));
    n_assign_1_to_int_fu_576_p1 <= reg_398;
    notlhs1_fu_787_p2 <= "0" when (tmp_9_fu_773_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_850_p2 <= "0" when (tmp_31_fu_836_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_671_p2 <= "0" when (tmp_41_fu_639_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_689_p2 <= "0" when (tmp_43_fu_657_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_1026_p2 <= "0" when (tmp_50_fu_1012_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_594_p2 <= "0" when (tmp_36_fu_580_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_793_p2 <= "1" when (tmp_44_fu_783_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_856_p2 <= "1" when (tmp_51_fu_846_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_677_p2 <= "1" when (tmp_60_fu_649_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_695_p2 <= "1" when (tmp_61_fu_667_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_1032_p2 <= "1" when (tmp_74_fu_1022_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_600_p2 <= "1" when (tmp_59_fu_590_p1 = ap_const_lv23_0) else "0";
    p_shl2_cast_fu_546_p3 <= (tmp_56_fu_542_p1 & ap_const_lv2_0);
    p_shl3_cast_fu_745_p3 <= (tmp_32_fu_741_p1 & ap_const_lv2_0);
    p_shl4_cast_fu_988_p1 <= std_logic_vector(resize(unsigned(tmp_69_fu_980_p3),5));
    p_shl5_fu_1149_p1 <= std_logic_vector(resize(unsigned(tmp_62_reg_1425),64));
    p_shl_cast_fu_495_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_482_p3),5));
    p_shl_fu_490_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_482_p3),64));
    pivot_to_int_fu_769_p1 <= reg_398;

    r_1_phi_fu_308_p4_assign_proc : process(r_1_reg_305, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond6_reg_1221, i_6_reg_1230)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1221 = ap_const_lv1_0))) then 
            r_1_phi_fu_308_p4 <= i_6_reg_1230;
        else 
            r_1_phi_fu_308_p4 <= r_1_reg_305;
        end if; 
    end process;

    r_2_fu_725_p3 <= 
        ap_pipeline_reg_pp1_iter3_r_1_reg_305 when (tmp_49_reg_1242(0) = '1') else 
        r_fu_104;
    tmp_10_cast_fu_1117_p1 <= std_logic_vector(resize(unsigned(work_q1),5));
    tmp_10_fu_1112_p1 <= std_logic_vector(resize(unsigned(work_q1),64));
    tmp_11_cast_fu_890_p1 <= std_logic_vector(resize(unsigned(j_reg_315),5));
    tmp_11_fu_499_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_495_p1) - unsigned(tmp_3_cast_fu_478_p1));
    tmp_12_cast_fu_926_p1 <= std_logic_vector(resize(unsigned(i_2_phi_fu_330_p4),5));
    tmp_12_fu_510_p2 <= std_logic_vector(unsigned(tmp_11_fu_499_p2) + unsigned(ap_const_lv5_2));
    tmp_15_fu_970_p2 <= "1" when (i_3_phi_fu_341_p4 = i_5_reg_281) else "0";
    tmp_16_cast_fu_976_p1 <= std_logic_vector(resize(unsigned(i_3_phi_fu_341_p4),5));
    tmp_16_fu_521_p2 <= std_logic_vector(unsigned(tmp_11_fu_499_p2) + unsigned(ap_const_lv5_1));
    tmp_17_fu_737_p1 <= r_fu_104(5 - 1 downto 0);
    tmp_18_fu_1056_p1 <= tmp_18_neg_fu_1050_p2;
    tmp_18_neg_fu_1050_p2 <= (w_2_to_int_fu_1008_p1 xor ap_const_lv32_80000000);
    tmp_1_fu_874_p2 <= "1" when (r_load_reg_1253 = i_5_cast6_reg_1177) else "0";
    tmp_20_1_fu_946_p2 <= "1" when (i_5_reg_281 = ap_const_lv2_1) else "0";
    tmp_20_2_fu_952_p2 <= "1" when (i_5_reg_281 = ap_const_lv2_2) else "0";
    tmp_20_fu_799_p2 <= (notrhs1_fu_793_p2 or notlhs1_fu_787_p2);
    tmp_26_fu_940_p2 <= "1" when (i_5_reg_281 = ap_const_lv2_0) else "0";
    tmp_2_fu_458_p2 <= "1" when (i_5_reg_281 = ap_const_lv2_3) else "0";
    tmp_30_fu_805_p2 <= (tmp_20_fu_799_p2 and grp_fu_380_p2);
    tmp_31_fu_836_p4 <= tmp_5_to_int_fu_833_p1(62 downto 52);
    tmp_32_fu_741_p1 <= r_fu_104(3 - 1 downto 0);
    tmp_33_fu_862_p2 <= (notrhs2_fu_856_p2 or notlhs2_fu_850_p2);
    tmp_35_fu_868_p2 <= (tmp_33_fu_862_p2 and tmp_34_fu_390_p2);
    tmp_36_fu_580_p4 <= n_assign_1_to_int_fu_576_p1(30 downto 23);
    tmp_37_fu_753_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_745_p3) - unsigned(tmp_17_fu_737_p1));
    tmp_38_fu_606_p2 <= (notrhs_fu_600_p2 or notlhs_fu_594_p2);
    tmp_3_cast_fu_478_p1 <= std_logic_vector(resize(unsigned(i_5_reg_281),5));
    tmp_3_fu_474_p1 <= std_logic_vector(resize(unsigned(i_5_reg_281),64));
    tmp_40_fu_612_p2 <= (tmp_38_fu_606_p2 and grp_fu_380_p2);
    tmp_41_fu_639_p4 <= w_3_to_int_fu_636_p1(30 downto 23);
    tmp_42_fu_759_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1188) + unsigned(tmp_37_fu_753_p2));
    tmp_43_fu_657_p4 <= wmax_to_int_fu_653_p1(30 downto 23);
    tmp_44_fu_783_p1 <= pivot_to_int_fu_769_p1(23 - 1 downto 0);
    tmp_45_fu_683_p2 <= (notrhs3_fu_677_p2 or notlhs3_fu_671_p2);
    tmp_46_fu_701_p2 <= (notrhs4_fu_695_p2 or notlhs4_fu_689_p2);
    tmp_47_fu_707_p2 <= (tmp_45_fu_683_p2 and tmp_46_fu_701_p2);
    tmp_49_fu_713_p2 <= (tmp_47_fu_707_p2 and tmp_48_fu_385_p2);
        tmp_4_fu_829_p1 <= std_logic_vector(resize(signed(r_load_reg_1253),64));

    tmp_50_fu_1012_p4 <= w_2_to_int_fu_1008_p1(30 downto 23);
    tmp_51_fu_846_p1 <= tmp_5_to_int_fu_833_p1(52 - 1 downto 0);
    tmp_52_fu_1038_p2 <= (notrhs5_fu_1032_p2 or notlhs5_fu_1026_p2);
    tmp_54_fu_1044_p2 <= (tmp_52_fu_1038_p2 and grp_fu_380_p2);
    tmp_55_fu_538_p1 <= r_1_phi_fu_308_p4(5 - 1 downto 0);
        tmp_56_cast_fu_505_p1 <= std_logic_vector(resize(signed(tmp_11_fu_499_p2),64));

    tmp_56_fu_542_p1 <= r_1_phi_fu_308_p4(3 - 1 downto 0);
        tmp_57_cast_fu_516_p1 <= std_logic_vector(resize(signed(tmp_12_fu_510_p2),64));

    tmp_57_fu_554_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_546_p3) - unsigned(tmp_55_fu_538_p1));
        tmp_58_cast_fu_527_p1 <= std_logic_vector(resize(signed(tmp_16_fu_521_p2),64));

    tmp_58_fu_560_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1188) + unsigned(tmp_57_fu_554_p2));
    tmp_59_fu_590_p1 <= n_assign_1_to_int_fu_576_p1(23 - 1 downto 0);
    tmp_5_to_int_fu_833_p1 <= tmp_5_reg_1274;
    tmp_60_fu_649_p1 <= w_3_to_int_fu_636_p1(23 - 1 downto 0);
        tmp_61_cast_fu_764_p1 <= std_logic_vector(resize(signed(tmp_42_fu_759_p2),64));

    tmp_61_fu_667_p1 <= wmax_to_int_fu_653_p1(23 - 1 downto 0);
    tmp_62_fu_1121_p3 <= (work_q1 & ap_const_lv2_0);
    tmp_63_fu_1129_p1 <= std_logic_vector(resize(unsigned(tmp_62_fu_1121_p3),5));
        tmp_64_cast_fu_565_p1 <= std_logic_vector(resize(signed(tmp_58_fu_560_p2),64));

    tmp_64_fu_1133_p2 <= std_logic_vector(unsigned(tmp_63_fu_1129_p1) - unsigned(tmp_10_cast_fu_1117_p1));
    tmp_65_fu_1139_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1410) + unsigned(tmp_64_fu_1133_p2));
    tmp_66_fu_894_p2 <= std_logic_vector(unsigned(tmp_11_reg_1195) + unsigned(tmp_11_cast_fu_890_p1));
        tmp_67_cast_fu_1144_p1 <= std_logic_vector(resize(signed(tmp_65_fu_1139_p2),64));

    tmp_67_fu_904_p2 <= std_logic_vector(unsigned(tmp_37_reg_1259) + unsigned(tmp_11_cast_fu_890_p1));
        tmp_68_cast_fu_899_p1 <= std_logic_vector(resize(signed(tmp_66_fu_894_p2),64));

    tmp_68_fu_930_p2 <= std_logic_vector(unsigned(tmp_11_reg_1195) + unsigned(tmp_12_cast_fu_926_p1));
        tmp_69_cast_fu_909_p1 <= std_logic_vector(resize(signed(tmp_67_fu_904_p2),64));

    tmp_69_fu_980_p3 <= (i_3_phi_fu_341_p4 & ap_const_lv2_0);
        tmp_70_cast_fu_935_p1 <= std_logic_vector(resize(signed(tmp_68_fu_930_p2),64));

    tmp_70_fu_992_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_988_p1) - unsigned(tmp_16_cast_fu_976_p1));
    tmp_71_fu_998_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1188) + unsigned(tmp_70_fu_992_p2));
        tmp_72_cast_fu_1061_p1 <= std_logic_vector(resize(signed(tmp_70_reg_1356),64));

    tmp_72_fu_1065_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_70_reg_1356));
        tmp_73_cast_fu_1003_p1 <= std_logic_vector(resize(signed(tmp_71_fu_998_p2),64));

    tmp_73_fu_1075_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(tmp_70_reg_1356));
        tmp_74_cast_fu_1070_p1 <= std_logic_vector(resize(signed(tmp_72_fu_1065_p2),64));

    tmp_74_fu_1022_p1 <= w_2_to_int_fu_1008_p1(23 - 1 downto 0);
        tmp_75_cast_fu_1080_p1 <= std_logic_vector(resize(signed(tmp_73_fu_1075_p2),64));

    tmp_7_fu_482_p3 <= (i_5_reg_281 & ap_const_lv2_0);
    tmp_8_fu_1106_p2 <= "1" when (work_q1 = i_4_reg_348) else "0";
    tmp_9_fu_773_p4 <= pivot_to_int_fu_769_p1(30 downto 23);
    tmp_cast_fu_1102_p1 <= std_logic_vector(resize(unsigned(i_4_reg_348),5));
    tmp_fu_448_p1 <= std_logic_vector(resize(unsigned(i_reg_269),64));
    tmp_s_fu_1097_p1 <= std_logic_vector(resize(unsigned(i_4_reg_348),64));
    w_2_to_int_fu_1008_p1 <= reg_411;
    w_3_fu_628_p3 <= 
        reg_398 when (tmp_40_fu_612_p2(0) = '1') else 
        f_1_fu_624_p1;
    w_3_to_int_fu_636_p1 <= w_3_reg_1235;
    wmax_1_fu_719_p3 <= 
        ap_pipeline_reg_pp1_iter3_w_3_reg_1235 when (tmp_49_reg_1242(0) = '1') else 
        wmax_reg_293;

    wmax_phi_fu_297_p4_assign_proc : process(wmax_reg_293, ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221, wmax_1_fu_719_p3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) then 
            wmax_phi_fu_297_p4 <= wmax_1_fu_719_p3;
        else 
            wmax_phi_fu_297_p4 <= wmax_reg_293;
        end if; 
    end process;

    wmax_to_int_fu_653_p1 <= wmax_phi_fu_297_p4;

    work_address0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, tmp_3_reg_1183, ap_CS_fsm_state14, work_addr_4_reg_1293, work_addr_1_reg_1415, ap_CS_fsm_state16, tmp_fu_448_p1, tmp_10_fu_1112_p1, ap_CS_fsm_pp5_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            work_address0 <= work_addr_1_reg_1415;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            work_address0 <= tmp_10_fu_1112_p1(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            work_address0 <= work_addr_4_reg_1293;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address0 <= tmp_3_reg_1183(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_address0 <= tmp_fu_448_p1(9 - 1 downto 0);
        else 
            work_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    work_address1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, work_addr_3_reg_1287, work_addr_1_reg_1415, work_addr_2_reg_1435, tmp_4_fu_829_p1, ap_CS_fsm_pp5_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_address1 <= work_addr_2_reg_1435;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then 
            work_address1 <= work_addr_1_reg_1415;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_address1 <= work_addr_3_reg_1287;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address1 <= tmp_4_fu_829_p1(9 - 1 downto 0);
        else 
            work_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    work_ce0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_pp5_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_ce0 <= ap_const_logic_1;
        else 
            work_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_ce1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, ap_CS_fsm_pp5_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0)))) then 
            work_ce1 <= ap_const_logic_1;
        else 
            work_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    work_d0_assign_proc : process(reg_404, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, i_reg_269, ap_CS_fsm_state16, ap_CS_fsm_pp5_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_d0 <= reg_404;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_d0 <= i_reg_269;
        else 
            work_d0 <= "XX";
        end if; 
    end process;


    work_d1_assign_proc : process(reg_404, ap_CS_fsm_state15, work_q1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_d1 <= reg_404;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_d1 <= work_q1;
        else 
            work_d1 <= "XX";
        end if; 
    end process;


    work_we0_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_8_reg_1421, ap_CS_fsm_state2, exitcond7_fu_436_p2, ap_CS_fsm_state16, ap_CS_fsm_pp5_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_436_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1421) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_we0 <= ap_const_logic_1;
        else 
            work_we0 <= ap_const_logic_0;
        end if; 
    end process;


    work_we1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, tmp_8_reg_1421)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1421)))) then 
            work_we1 <= ap_const_logic_1;
        else 
            work_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
