// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.047000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2206,HLS_SYN_LUT=2712}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 75'b1;
parameter    ap_ST_fsm_state2 = 75'b10;
parameter    ap_ST_fsm_state3 = 75'b100;
parameter    ap_ST_fsm_state4 = 75'b1000;
parameter    ap_ST_fsm_pp1_stage0 = 75'b10000;
parameter    ap_ST_fsm_state10 = 75'b100000;
parameter    ap_ST_fsm_state11 = 75'b1000000;
parameter    ap_ST_fsm_state12 = 75'b10000000;
parameter    ap_ST_fsm_state13 = 75'b100000000;
parameter    ap_ST_fsm_state14 = 75'b1000000000;
parameter    ap_ST_fsm_state15 = 75'b10000000000;
parameter    ap_ST_fsm_state16 = 75'b100000000000;
parameter    ap_ST_fsm_state17 = 75'b1000000000000;
parameter    ap_ST_fsm_state18 = 75'b10000000000000;
parameter    ap_ST_fsm_state19 = 75'b100000000000000;
parameter    ap_ST_fsm_state20 = 75'b1000000000000000;
parameter    ap_ST_fsm_state21 = 75'b10000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 75'b100000000000000000;
parameter    ap_ST_fsm_pp3_stage1 = 75'b1000000000000000000;
parameter    ap_ST_fsm_state40 = 75'b10000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 75'b100000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 75'b1000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 75'b10000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 75'b100000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 75'b1000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 75'b10000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 75'b100000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 75'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 75'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 75'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 75'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 75'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage12 = 75'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage13 = 75'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage14 = 75'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage15 = 75'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage16 = 75'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage17 = 75'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage18 = 75'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage19 = 75'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage20 = 75'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage21 = 75'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage22 = 75'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage23 = 75'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage24 = 75'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage25 = 75'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage26 = 75'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 75'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 75'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 75'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 75'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 75'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 75'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 75'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 75'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 75'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 75'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 75'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 75'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 75'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 75'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state89 = 75'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state90 = 75'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state91 = 75'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 75'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 75'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage2 = 75'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage3 = 75'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage4 = 75'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage5 = 75'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage6 = 75'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage7 = 75'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage8 = 75'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage9 = 75'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state103 = 75'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;
reg[31:0] a_Din_A;

(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_293;
reg   [31:0] r_1_reg_305;
reg   [31:0] ap_pipeline_reg_pp1_iter1_r_1_reg_305;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [31:0] ap_pipeline_reg_pp1_iter2_r_1_reg_305;
reg   [31:0] ap_pipeline_reg_pp1_iter3_r_1_reg_305;
reg   [1:0] i_2_reg_326;
reg   [1:0] i_3_reg_337;
reg   [31:0] reg_398;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond6_reg_1221;
wire   [0:0] ap_CS_fsm_state11;
wire   [1:0] work_q0;
reg   [1:0] reg_404;
wire   [0:0] ap_CS_fsm_state15;
wire   [1:0] work_q1;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] ap_CS_fsm_pp5_stage2;
reg   [0:0] tmp_8_reg_1421;
reg   [31:0] reg_411;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter0;
reg   [0:0] exitcond4_reg_1317;
wire   [0:0] ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond3_reg_1343;
reg   [0:0] tmp_15_reg_1352;
wire   [0:0] ap_CS_fsm_pp5_stage6;
wire   [0:0] ap_CS_fsm_pp5_stage9;
reg   [31:0] reg_419;
wire   [0:0] ap_CS_fsm_pp4_stage3;
reg   [0:0] tmp_54_reg_1368;
reg   [0:0] tmp_26_reg_1331;
wire   [0:0] ap_CS_fsm_pp4_stage6;
reg   [0:0] tmp_20_2_reg_1339;
reg   [31:0] reg_425;
wire   [0:0] ap_CS_fsm_pp4_stage4;
wire   [0:0] ap_CS_fsm_pp4_stage12;
reg   [0:0] tmp_20_1_reg_1335;
wire   [0:0] ap_CS_fsm_pp4_stage21;
wire   [31:0] grp_fu_365_p2;
wire   [0:0] ap_CS_fsm_pp4_stage15;
wire   [0:0] ap_CS_fsm_pp4_stage24;
wire   [1:0] i_1_fu_442_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_458_p2;
reg   [0:0] tmp_2_reg_1168;
wire   [0:0] ap_CS_fsm_state4;
wire   [1:0] k_fu_464_p2;
reg   [1:0] k_reg_1172;
wire   [31:0] i_5_cast6_fu_470_p1;
reg   [31:0] i_5_cast6_reg_1177;
wire   [63:0] tmp_3_fu_474_p1;
reg   [63:0] tmp_3_reg_1183;
wire   [4:0] tmp_3_cast_fu_478_p1;
reg   [4:0] tmp_3_cast_reg_1188;
wire   [4:0] tmp_11_fu_499_p2;
reg   [4:0] tmp_11_reg_1195;
reg   [3:0] a_addr_13_reg_1201;
reg   [3:0] a_addr_11_reg_1206;
reg   [3:0] a_addr_9_reg_1211;
reg   [3:0] a_addr_7_reg_1216;
wire   [0:0] exitcond6_fu_532_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221;
reg   [0:0] ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221;
reg   [0:0] ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221;
wire   [31:0] i_6_fu_570_p2;
reg   [31:0] i_6_reg_1230;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] w_3_fu_628_p3;
reg   [31:0] w_3_reg_1235;
reg   [31:0] ap_pipeline_reg_pp1_iter3_w_3_reg_1235;
wire   [0:0] tmp_49_fu_713_p2;
reg   [0:0] tmp_49_reg_1242;
wire   [31:0] wmax_1_fu_719_p3;
reg    ap_enable_reg_pp1_iter4;
reg   [31:0] r_load_reg_1253;
wire   [0:0] ap_CS_fsm_state10;
wire   [4:0] tmp_37_fu_753_p2;
reg   [4:0] tmp_37_reg_1259;
wire   [31:0] api_fu_821_p3;
reg   [31:0] api_reg_1269;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_5_fu_377_p1;
reg   [63:0] tmp_5_reg_1274;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_1_fu_874_p2;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_35_fu_868_p2;
reg   [8:0] work_addr_3_reg_1287;
reg   [8:0] work_addr_4_reg_1293;
wire   [1:0] j_1_fu_884_p2;
reg   [1:0] j_1_reg_1302;
wire   [0:0] ap_CS_fsm_state17;
reg   [3:0] a_addr_4_reg_1307;
wire   [0:0] exitcond5_fu_878_p2;
reg   [3:0] a_addr_5_reg_1312;
wire   [0:0] exitcond4_fu_914_p2;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317;
reg   [0:0] ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317;
wire   [1:0] i_8_fu_920_p2;
reg   [1:0] i_8_reg_1321;
reg   [3:0] a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326;
reg   [3:0] ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326;
wire   [0:0] tmp_26_fu_940_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] tmp_20_1_fu_946_p2;
wire   [0:0] tmp_20_2_fu_952_p2;
wire   [0:0] exitcond3_fu_958_p2;
wire   [0:0] ap_CS_fsm_pp4_stage0;
wire   [1:0] i_9_fu_964_p2;
reg   [1:0] i_9_reg_1347;
wire   [0:0] tmp_15_fu_970_p2;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352;
wire   [4:0] tmp_70_fu_992_p2;
reg   [4:0] tmp_70_reg_1356;
reg   [3:0] a_addr_8_reg_1363;
reg   [3:0] ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363;
wire   [0:0] tmp_54_fu_1044_p2;
wire   [0:0] ap_CS_fsm_pp4_stage2;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368;
wire   [31:0] tmp_18_fu_1056_p1;
reg   [3:0] a_addr_10_reg_1377;
reg   [3:0] a_addr_12_reg_1382;
reg   [3:0] a_addr_14_reg_1387;
reg   [31:0] a_load_12_reg_1392;
wire   [0:0] ap_CS_fsm_pp4_stage5;
wire   [31:0] grp_fu_371_p2;
reg   [31:0] tmp_19_reg_1397;
wire   [0:0] ap_CS_fsm_pp4_stage17;
wire   [1:0] i_7_fu_1091_p2;
reg   [1:0] i_7_reg_1405;
wire   [0:0] ap_CS_fsm_state91;
wire   [4:0] tmp_cast_fu_1102_p1;
reg   [4:0] tmp_cast_reg_1410;
wire   [0:0] exitcond1_fu_1085_p2;
reg   [8:0] work_addr_1_reg_1415;
wire   [0:0] tmp_8_fu_1106_p2;
wire   [3:0] tmp_62_fu_1121_p3;
reg   [3:0] tmp_62_reg_1425;
reg   [3:0] a_addr_2_reg_1430;
reg   [8:0] work_addr_2_reg_1435;
reg   [3:0] a_addr_3_reg_1441;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire   [0:0] ap_CS_fsm_state21;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp4_iter1;
wire   [0:0] ap_CS_fsm_pp4_stage26;
reg    ap_enable_reg_pp5_iter1;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [1:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [1:0] work_d1;
reg   [1:0] i_reg_269;
wire   [0:0] exitcond7_fu_436_p2;
reg   [1:0] i_5_reg_281;
wire   [0:0] ap_CS_fsm_state90;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] wmax_phi_fu_297_p4;
reg   [31:0] r_1_phi_fu_308_p4;
reg   [1:0] j_reg_315;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
reg   [1:0] i_2_phi_fu_330_p4;
reg   [1:0] i_3_phi_fu_341_p4;
reg   [1:0] i_4_reg_348;
wire   [0:0] ap_CS_fsm_state103;
wire   [63:0] tmp_fu_448_p1;
wire  signed [63:0] tmp_57_cast_fu_516_p1;
wire  signed [63:0] tmp_58_cast_fu_527_p1;
wire  signed [63:0] tmp_56_cast_fu_505_p1;
wire   [63:0] p_shl_fu_490_p1;
wire  signed [63:0] tmp_64_cast_fu_565_p1;
wire  signed [63:0] tmp_61_cast_fu_764_p1;
wire  signed [63:0] tmp_4_fu_829_p1;
wire  signed [63:0] tmp_68_cast_fu_899_p1;
wire  signed [63:0] tmp_69_cast_fu_909_p1;
wire  signed [63:0] tmp_70_cast_fu_935_p1;
wire  signed [63:0] tmp_73_cast_fu_1003_p1;
wire  signed [63:0] tmp_72_cast_fu_1061_p1;
wire  signed [63:0] tmp_74_cast_fu_1070_p1;
wire  signed [63:0] tmp_75_cast_fu_1080_p1;
wire   [63:0] tmp_s_fu_1097_p1;
wire  signed [63:0] tmp_67_cast_fu_1144_p1;
wire   [63:0] tmp_10_fu_1112_p1;
wire   [63:0] p_shl5_fu_1149_p1;
reg   [31:0] r_fu_104;
wire   [31:0] r_2_fu_725_p3;
wire   [0:0] ap_CS_fsm_pp5_stage0;
wire   [0:0] ap_CS_fsm_pp5_stage3;
reg   [31:0] a_Addr_A_orig;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] ap_CS_fsm_pp4_stage10;
wire   [31:0] grp_fu_360_p2;
wire   [0:0] ap_CS_fsm_pp4_stage11;
wire   [0:0] ap_CS_fsm_pp4_stage19;
wire   [0:0] ap_CS_fsm_pp4_stage20;
wire   [0:0] ap_CS_fsm_pp5_stage4;
wire   [0:0] ap_CS_fsm_pp5_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage7;
wire   [0:0] ap_CS_fsm_pp5_stage8;
reg   [31:0] grp_fu_360_p0;
reg   [31:0] grp_fu_371_p0;
wire   [0:0] ap_CS_fsm_state75;
reg   [31:0] grp_fu_380_p0;
wire   [3:0] tmp_7_fu_482_p3;
wire   [4:0] p_shl_cast_fu_495_p1;
wire   [4:0] tmp_12_fu_510_p2;
wire   [4:0] tmp_16_fu_521_p2;
wire   [2:0] tmp_56_fu_542_p1;
wire   [4:0] p_shl2_cast_fu_546_p3;
wire   [4:0] tmp_55_fu_538_p1;
wire   [4:0] tmp_57_fu_554_p2;
wire   [4:0] tmp_58_fu_560_p2;
wire   [31:0] n_assign_1_to_int_fu_576_p1;
wire   [7:0] tmp_36_fu_580_p4;
wire   [22:0] tmp_59_fu_590_p1;
wire   [0:0] notrhs_fu_600_p2;
wire   [0:0] notlhs_fu_594_p2;
wire   [0:0] tmp_38_fu_606_p2;
wire   [0:0] grp_fu_380_p2;
wire   [31:0] f_neg_i_fu_618_p2;
wire   [0:0] tmp_40_fu_612_p2;
wire   [31:0] f_1_fu_624_p1;
wire   [31:0] w_3_to_int_fu_636_p1;
wire   [31:0] wmax_to_int_fu_653_p1;
wire   [7:0] tmp_41_fu_639_p4;
wire   [22:0] tmp_60_fu_649_p1;
wire   [0:0] notrhs3_fu_677_p2;
wire   [0:0] notlhs3_fu_671_p2;
wire   [7:0] tmp_43_fu_657_p4;
wire   [22:0] tmp_61_fu_667_p1;
wire   [0:0] notrhs4_fu_695_p2;
wire   [0:0] notlhs4_fu_689_p2;
wire   [0:0] tmp_45_fu_683_p2;
wire   [0:0] tmp_46_fu_701_p2;
wire   [0:0] tmp_47_fu_707_p2;
wire   [0:0] tmp_48_fu_385_p2;
wire   [2:0] tmp_32_fu_741_p1;
wire   [4:0] p_shl3_cast_fu_745_p3;
wire   [4:0] tmp_17_fu_737_p1;
wire   [4:0] tmp_42_fu_759_p2;
wire   [31:0] pivot_to_int_fu_769_p1;
wire   [7:0] tmp_9_fu_773_p4;
wire   [22:0] tmp_44_fu_783_p1;
wire   [0:0] notrhs1_fu_793_p2;
wire   [0:0] notlhs1_fu_787_p2;
wire   [0:0] tmp_20_fu_799_p2;
wire   [31:0] f_neg_i1_fu_811_p2;
wire   [0:0] tmp_30_fu_805_p2;
wire   [31:0] f_fu_817_p1;
wire   [63:0] tmp_5_to_int_fu_833_p1;
wire   [10:0] tmp_31_fu_836_p4;
wire   [51:0] tmp_51_fu_846_p1;
wire   [0:0] notrhs2_fu_856_p2;
wire   [0:0] notlhs2_fu_850_p2;
wire   [0:0] tmp_33_fu_862_p2;
wire   [0:0] tmp_34_fu_390_p2;
wire   [4:0] tmp_11_cast_fu_890_p1;
wire   [4:0] tmp_66_fu_894_p2;
wire   [4:0] tmp_67_fu_904_p2;
wire   [4:0] tmp_12_cast_fu_926_p1;
wire   [4:0] tmp_68_fu_930_p2;
wire   [3:0] tmp_69_fu_980_p3;
wire   [4:0] p_shl4_cast_fu_988_p1;
wire   [4:0] tmp_16_cast_fu_976_p1;
wire   [4:0] tmp_71_fu_998_p2;
wire   [31:0] w_2_to_int_fu_1008_p1;
wire   [7:0] tmp_50_fu_1012_p4;
wire   [22:0] tmp_74_fu_1022_p1;
wire   [0:0] notrhs5_fu_1032_p2;
wire   [0:0] notlhs5_fu_1026_p2;
wire   [0:0] tmp_52_fu_1038_p2;
wire   [31:0] tmp_18_neg_fu_1050_p2;
wire   [4:0] tmp_72_fu_1065_p2;
wire   [4:0] tmp_73_fu_1075_p2;
wire   [4:0] tmp_63_fu_1129_p1;
wire   [4:0] tmp_10_cast_fu_1117_p1;
wire   [4:0] tmp_64_fu_1133_p2;
wire   [4:0] tmp_65_fu_1139_p2;
reg   [4:0] grp_fu_380_opcode;
reg   [74:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'b1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 2 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_360_p0),
    .din1(grp_fu_365_p2),
    .ce(1'b1),
    .dout(grp_fu_360_p2)
);

minver_hwa_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_411),
    .din1(a_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

minver_hwa_fdiv_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_371_p0),
    .din1(reg_398),
    .ce(1'b1),
    .dout(grp_fu_371_p2)
);

minver_hwa_fpext_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_eOg_U4(
    .din0(api_reg_1269),
    .dout(tmp_5_fu_377_p1)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U5(
    .din0(grp_fu_380_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_380_opcode),
    .dout(grp_fu_380_p2)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U6(
    .din0(w_3_reg_1235),
    .din1(wmax_phi_fu_297_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_48_fu_385_p2)
);

minver_hwa_dcmp_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6g8j_U7(
    .din0(tmp_5_reg_1274),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_34_fu_390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_532_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_458_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_532_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_458_p2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_532_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond4_fu_914_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == exitcond4_reg_1317))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_pp3_stage1) & ~(1'b0 == exitcond4_reg_1317)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_958_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1343) & (1'b1 == ap_CS_fsm_pp4_stage26))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp4_stage26) & ~(1'b0 == exitcond3_reg_1343)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == tmp_8_fu_1106_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state91) & (1'b0 == exitcond1_fu_1085_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage9))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state91) & (1'b0 == exitcond1_fu_1085_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage9) & ~(1'b0 == tmp_8_reg_1421)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond4_reg_1317) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_reg_326 <= i_8_reg_1321;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_326 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_3_reg_337 <= ap_const_lv2_0;
    end else if (((1'b0 == exitcond3_reg_1343) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_reg_337 <= i_9_reg_1347;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_458_p2))) begin
        i_4_reg_348 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        i_4_reg_348 <= i_7_reg_1405;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_281 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        i_5_reg_281 <= k_reg_1172;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_436_p2))) begin
        i_reg_269 <= i_1_fu_442_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_269 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_reg_315 <= j_1_reg_1302;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_315 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_458_p2))) begin
        r_1_reg_305 <= i_5_cast6_fu_470_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1221 == 1'b0))) begin
        r_1_reg_305 <= i_6_reg_1230;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) begin
        r_fu_104 <= r_2_fu_725_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_fu_104 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        reg_404 <= work_q1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1421)))) begin
        reg_404 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_458_p2))) begin
        wmax_reg_293 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) begin
        wmax_reg_293 <= wmax_1_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_addr_10_reg_1377 <= tmp_72_cast_fu_1061_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_458_p2))) begin
        a_addr_11_reg_1206 <= tmp_58_cast_fu_527_p1;
        a_addr_13_reg_1201 <= tmp_57_cast_fu_516_p1;
        a_addr_7_reg_1216[3 : 2] <= p_shl_fu_490_p1[3 : 2];
        a_addr_9_reg_1211 <= tmp_56_cast_fu_505_p1;
        i_5_cast6_reg_1177[1 : 0] <= i_5_cast6_fu_470_p1[1 : 0];
        tmp_11_reg_1195 <= tmp_11_fu_499_p2;
        tmp_3_cast_reg_1188[1 : 0] <= tmp_3_cast_fu_478_p1[1 : 0];
        tmp_3_reg_1183[1 : 0] <= tmp_3_fu_474_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_addr_12_reg_1382 <= tmp_74_cast_fu_1070_p1;
        a_addr_14_reg_1387 <= tmp_75_cast_fu_1080_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == tmp_8_fu_1106_p2))) begin
        a_addr_2_reg_1430 <= tmp_67_cast_fu_1144_p1;
        tmp_62_reg_1425[3 : 2] <= tmp_62_fu_1121_p3[3 : 2];
        work_addr_2_reg_1435[1 : 0] <= tmp_10_fu_1112_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1421))) begin
        a_addr_3_reg_1441[3 : 2] <= p_shl5_fu_1149_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == exitcond5_fu_878_p2))) begin
        a_addr_4_reg_1307 <= tmp_68_cast_fu_899_p1;
        a_addr_5_reg_1312 <= tmp_69_cast_fu_909_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_914_p2))) begin
        a_addr_6_reg_1326 <= tmp_70_cast_fu_935_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_958_p2) & (1'b0 == tmp_15_fu_970_p2))) begin
        a_addr_8_reg_1363 <= tmp_73_cast_fu_1003_p1;
        tmp_70_reg_1356 <= tmp_70_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_20_1_reg_1335) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_load_12_reg_1392 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221 <= exitcond6_reg_1221;
        ap_pipeline_reg_pp1_iter1_r_1_reg_305 <= r_1_reg_305;
        exitcond6_reg_1221 <= exitcond6_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221;
        ap_pipeline_reg_pp1_iter2_r_1_reg_305 <= ap_pipeline_reg_pp1_iter1_r_1_reg_305;
        ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221;
        ap_pipeline_reg_pp1_iter3_r_1_reg_305 <= ap_pipeline_reg_pp1_iter2_r_1_reg_305;
        ap_pipeline_reg_pp1_iter3_w_3_reg_1235 <= w_3_reg_1235;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326 <= a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317 <= exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter1_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter2_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter3_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter4_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter5_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter6_exitcond4_reg_1317;
        ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326 <= ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1326;
        ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317 <= ap_pipeline_reg_pp3_iter7_exitcond4_reg_1317;
        exitcond4_reg_1317 <= exitcond4_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363 <= a_addr_8_reg_1363;
        ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352 <= tmp_15_reg_1352;
        exitcond3_reg_1343 <= exitcond3_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage2)) begin
        ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368 <= tmp_54_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        api_reg_1269 <= api_fu_821_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_532_p2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_6_reg_1230 <= i_6_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        i_7_reg_1405 <= i_7_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_8_reg_1321 <= i_8_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_1347 <= i_9_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_1_reg_1302 <= j_1_fu_884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_1172 <= k_fu_464_p2;
        tmp_2_reg_1168 <= tmp_2_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_load_reg_1253 <= r_fu_104;
        tmp_37_reg_1259 <= tmp_37_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1221 == 1'b0)) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_398 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1421)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1317)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage9)))) begin
        reg_411 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_26_reg_1331)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == tmp_20_2_reg_1339)))) begin
        reg_419 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_26_reg_1331) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == tmp_20_1_reg_1335)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_20_2_reg_1339) & (1'b1 == ap_CS_fsm_pp4_stage21)))) begin
        reg_425 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_958_p2))) begin
        tmp_15_reg_1352 <= tmp_15_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b1 == ap_CS_fsm_pp4_stage17))) begin
        tmp_19_reg_1397 <= grp_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_20_1_reg_1335 <= tmp_20_1_fu_946_p2;
        tmp_20_2_reg_1339 <= tmp_20_2_fu_952_p2;
        tmp_26_reg_1331 <= tmp_26_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1221)) begin
        tmp_49_reg_1242 <= tmp_49_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        tmp_54_reg_1368 <= tmp_54_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_5_reg_1274 <= tmp_5_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
        tmp_8_reg_1421 <= tmp_8_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state91) & (1'b0 == exitcond1_fu_1085_p2))) begin
        tmp_cast_reg_1410[1 : 0] <= tmp_cast_fu_1102_p1[1 : 0];
        work_addr_1_reg_1415[1 : 0] <= tmp_s_fu_1097_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221)) begin
        w_3_reg_1235 <= w_3_fu_628_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_2_reg_1168) & (1'b0 == tmp_35_fu_868_p2) & (1'b0 == tmp_1_fu_874_p2))) begin
        work_addr_3_reg_1287[1 : 0] <= tmp_3_reg_1183[1 : 0];
        work_addr_4_reg_1293 <= tmp_4_fu_829_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_Addr_A_orig = a_addr_3_reg_1441;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)))) begin
        a_Addr_A_orig = a_addr_2_reg_1430;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        a_Addr_A_orig = p_shl5_fu_1149_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_Addr_A_orig = tmp_67_cast_fu_1144_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        a_Addr_A_orig = a_addr_7_reg_1216;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1363;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage20))) begin
        a_Addr_A_orig = a_addr_13_reg_1201;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage19))) begin
        a_Addr_A_orig = a_addr_12_reg_1382;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage11))) begin
        a_Addr_A_orig = a_addr_11_reg_1206;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        a_Addr_A_orig = a_addr_10_reg_1377;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_Addr_A_orig = a_addr_14_reg_1387;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_Addr_A_orig = tmp_74_cast_fu_1070_p1;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_Addr_A_orig = tmp_72_cast_fu_1061_p1;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_Addr_A_orig = a_addr_9_reg_1211;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_Addr_A_orig = tmp_73_cast_fu_1003_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1326;
    end else if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        a_Addr_A_orig = tmp_70_cast_fu_935_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_Addr_A_orig = a_addr_4_reg_1307;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
        a_Addr_A_orig = a_addr_5_reg_1312;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_Addr_A_orig = tmp_68_cast_fu_899_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_Addr_A_orig = tmp_61_cast_fu_764_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Addr_A_orig = tmp_64_cast_fu_565_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_Din_A = tmp_19_reg_1397;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage10)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage19)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_Din_A = grp_fu_360_p2;
    end else if (((1'b1 == ap_CS_fsm_state90) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8)))) begin
        a_Din_A = grp_fu_371_p2;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_Din_A = reg_411;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19))) begin
        a_Din_A = a_Dout_A;
    end else begin
        a_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage10)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage11)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage19)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage20)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage9)) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8) & (1'b0 == ap_pipeline_reg_pp3_iter8_exitcond4_reg_1317)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_26_reg_1331) & (1'b1 == ap_CS_fsm_pp4_stage10)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_20_1_reg_1335) & (1'b1 == ap_CS_fsm_pp4_stage19)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == tmp_54_reg_1368) & (1'b0 == tmp_20_2_reg_1339) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352)) | ((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1352) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_54_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1168) | ~(1'b0 == tmp_35_fu_868_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1168) | ~(1'b0 == tmp_35_fu_868_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage24)) begin
            grp_fu_360_p0 = reg_419;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage15)) begin
            grp_fu_360_p0 = a_load_12_reg_1392;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage6)) begin
            grp_fu_360_p0 = reg_425;
        end else begin
            grp_fu_360_p0 = 'bx;
        end
    end else begin
        grp_fu_360_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_371_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_371_p0 = tmp_18_fu_1056_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        grp_fu_371_p0 = reg_411;
    end else begin
        grp_fu_371_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1343) & (1'b0 == tmp_15_reg_1352) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_380_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1221) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        grp_fu_380_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_380_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_380_p0 = reg_411;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_enable_reg_pp1_iter2))) begin
        grp_fu_380_p0 = reg_398;
    end else begin
        grp_fu_380_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond4_reg_1317) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_phi_fu_330_p4 = i_8_reg_1321;
    end else begin
        i_2_phi_fu_330_p4 = i_2_reg_326;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond3_reg_1343) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_phi_fu_341_p4 = i_9_reg_1347;
    end else begin
        i_3_phi_fu_341_p4 = i_3_reg_337;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1221 == 1'b0))) begin
        r_1_phi_fu_308_p4 = i_6_reg_1230;
    end else begin
        r_1_phi_fu_308_p4 = r_1_reg_305;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1221))) begin
        wmax_phi_fu_297_p4 = wmax_1_fu_719_p3;
    end else begin
        wmax_phi_fu_297_p4 = wmax_reg_293;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_address0 = work_addr_1_reg_1415;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        work_address0 = tmp_10_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_address0 = work_addr_4_reg_1293;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address0 = tmp_3_reg_1183;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_448_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_address1 = work_addr_2_reg_1435;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        work_address1 = work_addr_1_reg_1415;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address1 = work_addr_3_reg_1287;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = tmp_4_fu_829_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_d0 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_269;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_d1 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_436_p2)) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1421) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1421)))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond7_fu_436_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == tmp_2_fu_458_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter4) & ~(1'b1 == ap_enable_reg_pp1_iter3)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_532_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_532_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~(1'b0 == tmp_2_reg_1168) | ~(1'b0 == tmp_35_fu_868_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1168) & (1'b0 == tmp_35_fu_868_p2) & ~(1'b0 == tmp_1_fu_874_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if ((1'b0 == exitcond5_fu_878_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond4_fu_914_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8) & ~(1'b1 == ap_enable_reg_pp3_iter7))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_958_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            if (~((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b1 == ap_enable_reg_pp4_iter1) & ~(1'b1 == ap_enable_reg_pp4_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage8;
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage11;
        end
        ap_ST_fsm_pp4_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage12;
        end
        ap_ST_fsm_pp4_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage13;
        end
        ap_ST_fsm_pp4_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage14;
        end
        ap_ST_fsm_pp4_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage15;
        end
        ap_ST_fsm_pp4_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage16;
        end
        ap_ST_fsm_pp4_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage17;
        end
        ap_ST_fsm_pp4_stage17 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage18;
        end
        ap_ST_fsm_pp4_stage18 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage19;
        end
        ap_ST_fsm_pp4_stage19 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage20;
        end
        ap_ST_fsm_pp4_stage20 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage21;
        end
        ap_ST_fsm_pp4_stage21 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage22;
        end
        ap_ST_fsm_pp4_stage22 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage23;
        end
        ap_ST_fsm_pp4_stage23 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage24;
        end
        ap_ST_fsm_pp4_stage24 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage25;
        end
        ap_ST_fsm_pp4_stage25 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage26;
        end
        ap_ST_fsm_pp4_stage26 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state91 : begin
            if (~(1'b0 == exitcond1_fu_1085_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage1;
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == tmp_8_fu_1106_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage3;
        end
        ap_ST_fsm_pp5_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage4;
        end
        ap_ST_fsm_pp5_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage5;
        end
        ap_ST_fsm_pp5_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage6;
        end
        ap_ST_fsm_pp5_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage7;
        end
        ap_ST_fsm_pp5_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage8;
        end
        ap_ST_fsm_pp5_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage9;
        end
        ap_ST_fsm_pp5_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Rst_A = ap_rst;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp4_stage12 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp4_stage15 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp4_stage17 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_pp4_stage19 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp4_stage20 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_pp4_stage21 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_pp4_stage24 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_pp4_stage26 = ap_CS_fsm[ap_const_lv32_2E];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[ap_const_lv32_43];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[ap_const_lv32_44];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[ap_const_lv32_45];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[ap_const_lv32_46];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[ap_const_lv32_47];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[ap_const_lv32_48];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[ap_const_lv32_49];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state103 = ap_CS_fsm[ap_const_lv32_4A];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state75 = ap_CS_fsm[ap_const_lv32_2F];

assign ap_CS_fsm_state90 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_state91 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_return = ap_const_lv32_1;

assign api_fu_821_p3 = ((tmp_30_fu_805_p2[0:0] === 1'b1) ? reg_398 : f_fu_817_p1);

assign exitcond1_fu_1085_p2 = ((i_4_reg_348 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond3_fu_958_p2 = ((i_3_phi_fu_341_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond4_fu_914_p2 = ((i_2_phi_fu_330_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond5_fu_878_p2 = ((j_reg_315 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond6_fu_532_p2 = ((r_1_phi_fu_308_p4 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign exitcond7_fu_436_p2 = ((i_reg_269 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign f_1_fu_624_p1 = f_neg_i_fu_618_p2;

assign f_fu_817_p1 = f_neg_i1_fu_811_p2;

assign f_neg_i1_fu_811_p2 = (pivot_to_int_fu_769_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_618_p2 = (n_assign_1_to_int_fu_576_p1 ^ ap_const_lv32_80000000);

assign i_1_fu_442_p2 = (i_reg_269 + ap_const_lv2_1);

assign i_5_cast6_fu_470_p1 = i_5_reg_281;

assign i_6_fu_570_p2 = (ap_const_lv32_1 + r_1_phi_fu_308_p4);

assign i_7_fu_1091_p2 = (i_4_reg_348 + ap_const_lv2_1);

assign i_8_fu_920_p2 = (i_2_phi_fu_330_p4 + ap_const_lv2_1);

assign i_9_fu_964_p2 = (i_3_phi_fu_341_p4 + ap_const_lv2_1);

assign j_1_fu_884_p2 = (j_reg_315 + ap_const_lv2_1);

assign k_fu_464_p2 = (i_5_reg_281 + ap_const_lv2_1);

assign n_assign_1_to_int_fu_576_p1 = reg_398;

assign notlhs1_fu_787_p2 = ((tmp_9_fu_773_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_850_p2 = ((tmp_31_fu_836_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_671_p2 = ((tmp_41_fu_639_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_689_p2 = ((tmp_43_fu_657_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_1026_p2 = ((tmp_50_fu_1012_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_594_p2 = ((tmp_36_fu_580_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_793_p2 = ((tmp_44_fu_783_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_856_p2 = ((tmp_51_fu_846_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_677_p2 = ((tmp_60_fu_649_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_695_p2 = ((tmp_61_fu_667_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1032_p2 = ((tmp_74_fu_1022_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_600_p2 = ((tmp_59_fu_590_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_shl2_cast_fu_546_p3 = {{tmp_56_fu_542_p1}, {ap_const_lv2_0}};

assign p_shl3_cast_fu_745_p3 = {{tmp_32_fu_741_p1}, {ap_const_lv2_0}};

assign p_shl4_cast_fu_988_p1 = tmp_69_fu_980_p3;

assign p_shl5_fu_1149_p1 = tmp_62_reg_1425;

assign p_shl_cast_fu_495_p1 = tmp_7_fu_482_p3;

assign p_shl_fu_490_p1 = tmp_7_fu_482_p3;

assign pivot_to_int_fu_769_p1 = reg_398;

assign r_2_fu_725_p3 = ((tmp_49_reg_1242[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_r_1_reg_305 : r_fu_104);

assign tmp_10_cast_fu_1117_p1 = work_q1;

assign tmp_10_fu_1112_p1 = work_q1;

assign tmp_11_cast_fu_890_p1 = j_reg_315;

assign tmp_11_fu_499_p2 = (p_shl_cast_fu_495_p1 - tmp_3_cast_fu_478_p1);

assign tmp_12_cast_fu_926_p1 = i_2_phi_fu_330_p4;

assign tmp_12_fu_510_p2 = (tmp_11_fu_499_p2 + ap_const_lv5_2);

assign tmp_15_fu_970_p2 = ((i_3_phi_fu_341_p4 == i_5_reg_281) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_976_p1 = i_3_phi_fu_341_p4;

assign tmp_16_fu_521_p2 = (tmp_11_fu_499_p2 + ap_const_lv5_1);

assign tmp_17_fu_737_p1 = r_fu_104[4:0];

assign tmp_18_fu_1056_p1 = tmp_18_neg_fu_1050_p2;

assign tmp_18_neg_fu_1050_p2 = (w_2_to_int_fu_1008_p1 ^ ap_const_lv32_80000000);

assign tmp_1_fu_874_p2 = ((r_load_reg_1253 == i_5_cast6_reg_1177) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_946_p2 = ((i_5_reg_281 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_20_2_fu_952_p2 = ((i_5_reg_281 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp_20_fu_799_p2 = (notrhs1_fu_793_p2 | notlhs1_fu_787_p2);

assign tmp_26_fu_940_p2 = ((i_5_reg_281 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_2_fu_458_p2 = ((i_5_reg_281 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign tmp_30_fu_805_p2 = (tmp_20_fu_799_p2 & grp_fu_380_p2);

assign tmp_31_fu_836_p4 = {{tmp_5_to_int_fu_833_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_32_fu_741_p1 = r_fu_104[2:0];

assign tmp_33_fu_862_p2 = (notrhs2_fu_856_p2 | notlhs2_fu_850_p2);

assign tmp_35_fu_868_p2 = (tmp_33_fu_862_p2 & tmp_34_fu_390_p2);

assign tmp_36_fu_580_p4 = {{n_assign_1_to_int_fu_576_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_37_fu_753_p2 = (p_shl3_cast_fu_745_p3 - tmp_17_fu_737_p1);

assign tmp_38_fu_606_p2 = (notrhs_fu_600_p2 | notlhs_fu_594_p2);

assign tmp_3_cast_fu_478_p1 = i_5_reg_281;

assign tmp_3_fu_474_p1 = i_5_reg_281;

assign tmp_40_fu_612_p2 = (tmp_38_fu_606_p2 & grp_fu_380_p2);

assign tmp_41_fu_639_p4 = {{w_3_to_int_fu_636_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_42_fu_759_p2 = (tmp_3_cast_reg_1188 + tmp_37_fu_753_p2);

assign tmp_43_fu_657_p4 = {{wmax_to_int_fu_653_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_44_fu_783_p1 = pivot_to_int_fu_769_p1[22:0];

assign tmp_45_fu_683_p2 = (notrhs3_fu_677_p2 | notlhs3_fu_671_p2);

assign tmp_46_fu_701_p2 = (notrhs4_fu_695_p2 | notlhs4_fu_689_p2);

assign tmp_47_fu_707_p2 = (tmp_45_fu_683_p2 & tmp_46_fu_701_p2);

assign tmp_49_fu_713_p2 = (tmp_47_fu_707_p2 & tmp_48_fu_385_p2);

assign tmp_4_fu_829_p1 = $signed(r_load_reg_1253);

assign tmp_50_fu_1012_p4 = {{w_2_to_int_fu_1008_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_51_fu_846_p1 = tmp_5_to_int_fu_833_p1[51:0];

assign tmp_52_fu_1038_p2 = (notrhs5_fu_1032_p2 | notlhs5_fu_1026_p2);

assign tmp_54_fu_1044_p2 = (tmp_52_fu_1038_p2 & grp_fu_380_p2);

assign tmp_55_fu_538_p1 = r_1_phi_fu_308_p4[4:0];

assign tmp_56_cast_fu_505_p1 = $signed(tmp_11_fu_499_p2);

assign tmp_56_fu_542_p1 = r_1_phi_fu_308_p4[2:0];

assign tmp_57_cast_fu_516_p1 = $signed(tmp_12_fu_510_p2);

assign tmp_57_fu_554_p2 = (p_shl2_cast_fu_546_p3 - tmp_55_fu_538_p1);

assign tmp_58_cast_fu_527_p1 = $signed(tmp_16_fu_521_p2);

assign tmp_58_fu_560_p2 = (tmp_3_cast_reg_1188 + tmp_57_fu_554_p2);

assign tmp_59_fu_590_p1 = n_assign_1_to_int_fu_576_p1[22:0];

assign tmp_5_to_int_fu_833_p1 = tmp_5_reg_1274;

assign tmp_60_fu_649_p1 = w_3_to_int_fu_636_p1[22:0];

assign tmp_61_cast_fu_764_p1 = $signed(tmp_42_fu_759_p2);

assign tmp_61_fu_667_p1 = wmax_to_int_fu_653_p1[22:0];

assign tmp_62_fu_1121_p3 = {{work_q1}, {ap_const_lv2_0}};

assign tmp_63_fu_1129_p1 = tmp_62_fu_1121_p3;

assign tmp_64_cast_fu_565_p1 = $signed(tmp_58_fu_560_p2);

assign tmp_64_fu_1133_p2 = (tmp_63_fu_1129_p1 - tmp_10_cast_fu_1117_p1);

assign tmp_65_fu_1139_p2 = (tmp_cast_reg_1410 + tmp_64_fu_1133_p2);

assign tmp_66_fu_894_p2 = (tmp_11_reg_1195 + tmp_11_cast_fu_890_p1);

assign tmp_67_cast_fu_1144_p1 = $signed(tmp_65_fu_1139_p2);

assign tmp_67_fu_904_p2 = (tmp_37_reg_1259 + tmp_11_cast_fu_890_p1);

assign tmp_68_cast_fu_899_p1 = $signed(tmp_66_fu_894_p2);

assign tmp_68_fu_930_p2 = (tmp_11_reg_1195 + tmp_12_cast_fu_926_p1);

assign tmp_69_cast_fu_909_p1 = $signed(tmp_67_fu_904_p2);

assign tmp_69_fu_980_p3 = {{i_3_phi_fu_341_p4}, {ap_const_lv2_0}};

assign tmp_70_cast_fu_935_p1 = $signed(tmp_68_fu_930_p2);

assign tmp_70_fu_992_p2 = (p_shl4_cast_fu_988_p1 - tmp_16_cast_fu_976_p1);

assign tmp_71_fu_998_p2 = (tmp_3_cast_reg_1188 + tmp_70_fu_992_p2);

assign tmp_72_cast_fu_1061_p1 = $signed(tmp_70_reg_1356);

assign tmp_72_fu_1065_p2 = (ap_const_lv5_1 + tmp_70_reg_1356);

assign tmp_73_cast_fu_1003_p1 = $signed(tmp_71_fu_998_p2);

assign tmp_73_fu_1075_p2 = (ap_const_lv5_2 + tmp_70_reg_1356);

assign tmp_74_cast_fu_1070_p1 = $signed(tmp_72_fu_1065_p2);

assign tmp_74_fu_1022_p1 = w_2_to_int_fu_1008_p1[22:0];

assign tmp_75_cast_fu_1080_p1 = $signed(tmp_73_fu_1075_p2);

assign tmp_7_fu_482_p3 = {{i_5_reg_281}, {ap_const_lv2_0}};

assign tmp_8_fu_1106_p2 = ((work_q1 == i_4_reg_348) ? 1'b1 : 1'b0);

assign tmp_9_fu_773_p4 = {{pivot_to_int_fu_769_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_cast_fu_1102_p1 = i_4_reg_348;

assign tmp_fu_448_p1 = i_reg_269;

assign tmp_s_fu_1097_p1 = i_4_reg_348;

assign w_2_to_int_fu_1008_p1 = reg_411;

assign w_3_fu_628_p3 = ((tmp_40_fu_612_p2[0:0] === 1'b1) ? reg_398 : f_1_fu_624_p1);

assign w_3_to_int_fu_636_p1 = w_3_reg_1235;

assign wmax_1_fu_719_p3 = ((tmp_49_reg_1242[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_w_3_reg_1235 : wmax_reg_293);

assign wmax_to_int_fu_653_p1 = wmax_phi_fu_297_p4;

always @ (posedge ap_clk) begin
    i_5_cast6_reg_1177[31:2] <= 30'b000000000000000000000000000000;
    tmp_3_reg_1183[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1188[4:2] <= 3'b000;
    a_addr_7_reg_1216[1:0] <= 2'b00;
    work_addr_3_reg_1287[8:2] <= 7'b0000000;
    tmp_cast_reg_1410[4:2] <= 3'b000;
    work_addr_1_reg_1415[8:2] <= 7'b0000000;
    tmp_62_reg_1425[1:0] <= 2'b00;
    work_addr_2_reg_1435[8:2] <= 7'b0000000;
    a_addr_3_reg_1441[1:0] <= 2'b00;
end

endmodule //minver_hwa
