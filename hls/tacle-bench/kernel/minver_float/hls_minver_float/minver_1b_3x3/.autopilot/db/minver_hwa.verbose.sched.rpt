

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Thu May  4 21:34:24 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver_float
* Solution:       minver_1b_3x3
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     14.05|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+-----------+-----------+-----------+-------+----------+
        |             |  Latency  | Iteration |  Initiation Interval  |  Trip |          |
        |  Loop Name  | min | max |  Latency  |  achieved |   target  | Count | Pipelined|
        +-------------+-----+-----+-----------+-----------+-----------+-------+----------+
        |- Loop 1     |    3|    3|          1|          1|          1|      3|    yes   |
        |- Loop 2     |  139|  474| 139 ~ 156 |          -|          -| 1 ~ 3 |    no    |
        | + Loop 2.1  |    4|    6|          5|          1|          1| 1 ~ 3 |    yes   |
        | + Loop 2.2  |   12|   12|          4|          4|          1|      3|    yes   |
        | + Loop 2.3  |   21|   21|         18|          2|          1|      3|    yes   |
        | + Loop 2.4  |   87|   87|         34|         27|          1|      3|    yes   |
        |- Loop 3     |    ?|    ?|          ?|          -|          -|      3|    no    |
        | + Loop 3.1  |    ?|    ?|         11|         10|          1|      ?|    yes   |
        +-------------+-----+-----+-----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 5
  * Pipeline-2: initiation interval (II) = 4, depth = 4
  * Pipeline-3: initiation interval (II) = 2, depth = 18
  * Pipeline-4: initiation interval (II) = 27, depth = 34
  * Pipeline-5: initiation interval (II) = 10, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 103
* Pipeline: 6
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 1, D = 5, States = { 5 6 7 8 9 }
  Pipeline-2: II = 4, D = 4, States = { 17 18 19 20 }
  Pipeline-3: II = 2, D = 18, States = { 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 }
  Pipeline-4: II = 27, D = 34, States = { 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 }
  Pipeline-5: II = 10, D = 11, States = { 92 93 94 95 96 97 98 99 100 101 102 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond7)
	2  / (!exitcond7)
3 --> 
	4  / true
4 --> 
	5  / (!tmp_2)
	91  / (tmp_2)
5 --> 
	10  / (exitcond6)
	6  / (!exitcond6)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	5  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / (!tmp_2 & !tmp_35 & !tmp_1)
	21  / (!tmp_2 & !tmp_35 & tmp_1)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	21  / (exitcond5)
	18  / (!exitcond5)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	17  / true
21 --> 
	22  / true
22 --> 
	40  / (exitcond4)
	23  / (!exitcond4)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	22  / true
40 --> 
	41  / true
41 --> 
	75  / (exitcond3)
	42  / (!exitcond3)
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	41  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	4  / true
91 --> 
	92  / (!exitcond1)
	14  / (exitcond1)
92 --> 
	93  / true
93 --> 
	103  / (tmp_8)
	94  / (!tmp_8)
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	92  / true
103 --> 
	91  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_104 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %a) nounwind, !map !31

ST_1: StgValue_105 (3)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !35

ST_1: StgValue_106 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (5)  [1/1] 0.00ns  loc: minver.c:41
:3  %work = alloca [500 x i2], align 1

ST_1: StgValue_108 (6)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecMemCore([9 x float]* %a, [1 x i8]* @p_str, [12 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: StgValue_109 (7)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface([9 x float]* %a, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_110 (8)  [1/1] 0.00ns  loc: minver.c:39
:6  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: StgValue_111 (9)  [1/1] 1.57ns  loc: minver.c:50
:7  br label %1


 <State 2>: 2.39ns
ST_2: i (11)  [1/1] 0.00ns
:0  %i = phi i2 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (12)  [1/1] 1.54ns  loc: minver.c:50
:1  %exitcond7 = icmp eq i2 %i, -1

ST_2: i_1 (13)  [1/1] 0.75ns  loc: minver.c:50
:2  %i_1 = add i2 %i, 1

ST_2: StgValue_115 (14)  [1/1] 0.00ns  loc: minver.c:50
:3  br i1 %exitcond7, label %.preheader13.preheader, label %2

ST_2: empty (16)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_2: tmp_6 (17)  [1/1] 0.00ns  loc: minver.c:50
:1  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_2: StgValue_118 (18)  [1/1] 0.00ns  loc: minver.c:51
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_2: tmp (19)  [1/1] 0.00ns  loc: minver.c:52
:3  %tmp = zext i2 %i to i64

ST_2: work_addr (20)  [1/1] 0.00ns  loc: minver.c:52
:4  %work_addr = getelementptr [500 x i2]* %work, i64 0, i64 %tmp

ST_2: StgValue_121 (21)  [1/1] 2.39ns  loc: minver.c:52
:5  store i2 %i, i2* %work_addr, align 1

ST_2: empty_7 (22)  [1/1] 0.00ns  loc: minver.c:53
:6  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_6) nounwind

ST_2: StgValue_123 (23)  [1/1] 0.00ns  loc: minver.c:50
:7  br label %1


 <State 3>: 1.57ns
ST_3: r (25)  [1/1] 0.00ns
.preheader13.preheader:0  %r = alloca i32

ST_3: StgValue_125 (26)  [1/1] 1.57ns
.preheader13.preheader:1  store i32 0, i32* %r

ST_3: StgValue_126 (27)  [1/1] 1.57ns  loc: minver.c:56
.preheader13.preheader:2  br label %.preheader13


 <State 4>: 2.42ns
ST_4: i_5 (29)  [1/1] 0.00ns
.preheader13:0  %i_5 = phi i2 [ %k, %14 ], [ 0, %.preheader13.preheader ]

ST_4: tmp_2 (30)  [1/1] 1.54ns  loc: minver.c:56
.preheader13:1  %tmp_2 = icmp eq i2 %i_5, -1

ST_4: k (31)  [1/1] 0.75ns  loc: minver.c:56
.preheader13:2  %k = add i2 %i_5, 1

ST_4: StgValue_130 (32)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader12.preheader

ST_4: i_5_cast6 (34)  [1/1] 0.00ns  loc: minver.c:59
.preheader12.preheader:0  %i_5_cast6 = zext i2 %i_5 to i32

ST_4: empty_8 (35)  [1/1] 0.00ns
.preheader12.preheader:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2) nounwind

ST_4: tmp_3 (36)  [1/1] 0.00ns  loc: minver.c:61
.preheader12.preheader:2  %tmp_3 = zext i2 %i_5 to i64

ST_4: tmp_3_cast (37)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:3  %tmp_3_cast = zext i2 %i_5 to i5

ST_4: tmp_7 (38)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:4  %tmp_7 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_5, i2 0)

ST_4: p_shl (39)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:5  %p_shl = zext i4 %tmp_7 to i64

ST_4: p_shl_cast (40)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:6  %p_shl_cast = zext i4 %tmp_7 to i5

ST_4: tmp_11 (41)  [1/1] 0.75ns  loc: minver.c:82
.preheader12.preheader:7  %tmp_11 = sub i5 %p_shl_cast, %tmp_3_cast

ST_4: tmp_56_cast (42)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:8  %tmp_56_cast = sext i5 %tmp_11 to i64

ST_4: tmp_12 (43)  [1/1] 1.67ns  loc: minver.c:99
.preheader12.preheader:9  %tmp_12 = add i5 %tmp_11, 2

ST_4: tmp_57_cast (44)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:10  %tmp_57_cast = sext i5 %tmp_12 to i64

ST_4: a_addr_13 (45)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:11  %a_addr_13 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_57_cast

ST_4: tmp_16 (46)  [1/1] 1.67ns  loc: minver.c:99
.preheader12.preheader:12  %tmp_16 = add i5 %tmp_11, 1

ST_4: tmp_58_cast (47)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:13  %tmp_58_cast = sext i5 %tmp_16 to i64

ST_4: a_addr_11 (48)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:14  %a_addr_11 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_58_cast

ST_4: a_addr_9 (49)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:15  %a_addr_9 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_56_cast

ST_4: a_addr_7 (50)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:16  %a_addr_7 = getelementptr [9 x float]* %a, i64 0, i64 %p_shl

ST_4: StgValue_148 (51)  [1/1] 1.57ns  loc: minver.c:59
.preheader12.preheader:17  br label %.preheader12

ST_4: StgValue_149 (276)  [1/1] 1.57ns  loc: minver.c:109
.preheader8.preheader:0  br label %.preheader8


 <State 5>: 4.91ns
ST_5: wmax (53)  [1/1] 0.00ns
.preheader12:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader12.preheader ]

ST_5: r_1 (54)  [1/1] 0.00ns
.preheader12:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast6, %.preheader12.preheader ]

ST_5: exitcond6 (55)  [1/1] 2.93ns  loc: minver.c:59
.preheader12:2  %exitcond6 = icmp eq i32 %r_1, 3

ST_5: StgValue_153 (56)  [1/1] 0.00ns  loc: minver.c:59
.preheader12:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_5: tmp_55 (62)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:4  %tmp_55 = trunc i32 %r_1 to i5

ST_5: tmp_56 (63)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:5  %tmp_56 = trunc i32 %r_1 to i3

ST_5: p_shl2_cast (64)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:6  %p_shl2_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_56, i2 0)

ST_5: tmp_57 (65)  [1/1] 1.26ns  loc: minver.c:61
_ifconv:7  %tmp_57 = sub i5 %p_shl2_cast, %tmp_55

ST_5: tmp_58 (66)  [1/1] 1.26ns  loc: minver.c:61
_ifconv:8  %tmp_58 = add i5 %tmp_3_cast, %tmp_57

ST_5: tmp_64_cast (67)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:9  %tmp_64_cast = sext i5 %tmp_58 to i64

ST_5: a_addr_1 (68)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:10  %a_addr_1 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_64_cast

ST_5: a_load_7 (69)  [2/2] 2.39ns  loc: minver.c:61
_ifconv:11  %a_load_7 = load float* %a_addr_1, align 4

ST_5: i_6 (99)  [1/1] 2.39ns  loc: minver.c:59
_ifconv:41  %i_6 = add nsw i32 1, %r_1


 <State 6>: 2.39ns
ST_6: a_load_7 (69)  [1/2] 2.39ns  loc: minver.c:61
_ifconv:11  %a_load_7 = load float* %a_addr_1, align 4


 <State 7>: 7.74ns
ST_7: n_assign_1_to_int (70)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:12  %n_assign_1_to_int = bitcast float %a_load_7 to i32

ST_7: tmp_36 (71)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:13  %tmp_36 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_7: tmp_59 (72)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:14  %tmp_59 = trunc i32 %n_assign_1_to_int to i23

ST_7: notlhs (73)  [1/1] 2.47ns  loc: minver.c:61
_ifconv:15  %notlhs = icmp ne i8 %tmp_36, -1

ST_7: notrhs (74)  [1/1] 2.84ns  loc: minver.c:61
_ifconv:16  %notrhs = icmp eq i23 %tmp_59, 0

ST_7: tmp_38 (75)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node w_3)
_ifconv:17  %tmp_38 = or i1 %notrhs, %notlhs

ST_7: tmp_39 (76)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:61
_ifconv:18  %tmp_39 = fcmp oge float %a_load_7, 0.000000e+00

ST_7: tmp_40 (77)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:19  %tmp_40 = and i1 %tmp_38, %tmp_39

ST_7: f_neg_i (78)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:20  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_7: f_1 (79)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:21  %f_1 = bitcast i32 %f_neg_i to float

ST_7: w_3 (80)  [1/1] 1.37ns  loc: minver.c:63 (out node of the LUT)
_ifconv:22  %w_3 = select i1 %tmp_40, float %a_load_7, float %f_1


 <State 8>: 7.74ns
ST_8: w_3_to_int (81)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:23  %w_3_to_int = bitcast float %w_3 to i32

ST_8: tmp_41 (82)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:24  %tmp_41 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_3_to_int, i32 23, i32 30)

ST_8: tmp_60 (83)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:25  %tmp_60 = trunc i32 %w_3_to_int to i23

ST_8: wmax_to_int (84)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:26  %wmax_to_int = bitcast float %wmax to i32

ST_8: tmp_43 (85)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:27  %tmp_43 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_8: tmp_61 (86)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:28  %tmp_61 = trunc i32 %wmax_to_int to i23

ST_8: notlhs3 (87)  [1/1] 2.47ns  loc: minver.c:63
_ifconv:29  %notlhs3 = icmp ne i8 %tmp_41, -1

ST_8: notrhs3 (88)  [1/1] 2.84ns  loc: minver.c:63
_ifconv:30  %notrhs3 = icmp eq i23 %tmp_60, 0

ST_8: tmp_45 (89)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_49)
_ifconv:31  %tmp_45 = or i1 %notrhs3, %notlhs3

ST_8: notlhs4 (90)  [1/1] 2.47ns  loc: minver.c:62
_ifconv:32  %notlhs4 = icmp ne i8 %tmp_43, -1

ST_8: notrhs4 (91)  [1/1] 2.84ns  loc: minver.c:62
_ifconv:33  %notrhs4 = icmp eq i23 %tmp_61, 0

ST_8: tmp_46 (92)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_49)
_ifconv:34  %tmp_46 = or i1 %notrhs4, %notlhs4

ST_8: tmp_47 (93)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_49)
_ifconv:35  %tmp_47 = and i1 %tmp_45, %tmp_46

ST_8: tmp_48 (94)  [1/1] 6.37ns  loc: minver.c:62
_ifconv:36  %tmp_48 = fcmp ogt float %w_3, %wmax

ST_8: tmp_49 (95)  [1/1] 1.37ns  loc: minver.c:62 (out node of the LUT)
_ifconv:37  %tmp_49 = and i1 %tmp_47, %tmp_48


 <State 9>: 2.94ns
ST_9: r_load_1 (58)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:0  %r_load_1 = load i32* %r

ST_9: empty_9 (59)  [1/1] 0.00ns
_ifconv:1  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 0) nounwind

ST_9: tmp_21 (60)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:2  %tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_9: StgValue_193 (61)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_9: wmax_1 (96)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:38  %wmax_1 = select i1 %tmp_49, float %w_3, float %wmax

ST_9: r_2 (97)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:39  %r_2 = select i1 %tmp_49, i32 %r_1, i32 %r_load_1

ST_9: empty_10 (98)  [1/1] 0.00ns  loc: minver.c:66
_ifconv:40  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_21) nounwind

ST_9: StgValue_197 (100)  [1/1] 1.57ns  loc: minver.c:62
_ifconv:42  store i32 %r_2, i32* %r

ST_9: StgValue_198 (101)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:43  br label %.preheader12


 <State 10>: 5.73ns
ST_10: r_load (103)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_10: tmp_17 (105)  [1/1] 0.00ns
_ifconv1:2  %tmp_17 = trunc i32 %r_load to i5

ST_10: tmp_32 (106)  [1/1] 0.00ns
_ifconv1:3  %tmp_32 = trunc i32 %r_load to i3

ST_10: p_shl3_cast (107)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:4  %p_shl3_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %tmp_32, i2 0)

ST_10: tmp_37 (108)  [1/1] 1.67ns  loc: minver.c:68
_ifconv1:5  %tmp_37 = sub i5 %p_shl3_cast, %tmp_17

ST_10: tmp_42 (109)  [1/1] 1.67ns  loc: minver.c:68
_ifconv1:6  %tmp_42 = add i5 %tmp_3_cast, %tmp_37

ST_10: tmp_61_cast (110)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:7  %tmp_61_cast = sext i5 %tmp_42 to i64

ST_10: a_addr (111)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:8  %a_addr = getelementptr [9 x float]* %a, i64 0, i64 %tmp_61_cast

ST_10: pivot (112)  [2/2] 2.39ns  loc: minver.c:105
_ifconv1:9  %pivot = load float* %a_addr, align 4


 <State 11>: 2.39ns
ST_11: pivot (112)  [1/2] 2.39ns  loc: minver.c:105
_ifconv1:9  %pivot = load float* %a_addr, align 4


 <State 12>: 7.74ns
ST_12: pivot_to_int (113)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:10  %pivot_to_int = bitcast float %pivot to i32

ST_12: tmp_9 (114)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:11  %tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_12: tmp_44 (115)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:12  %tmp_44 = trunc i32 %pivot_to_int to i23

ST_12: notlhs1 (116)  [1/1] 2.47ns  loc: minver.c:105
_ifconv1:13  %notlhs1 = icmp ne i8 %tmp_9, -1

ST_12: notrhs1 (117)  [1/1] 2.84ns  loc: minver.c:105
_ifconv1:14  %notrhs1 = icmp eq i23 %tmp_44, 0

ST_12: tmp_20 (118)  [1/1] 0.00ns  loc: minver.c:105 (grouped into LUT with out node api)
_ifconv1:15  %tmp_20 = or i1 %notrhs1, %notlhs1

ST_12: tmp_29 (119)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:69
_ifconv1:16  %tmp_29 = fcmp oge float %pivot, 0.000000e+00

ST_12: tmp_30 (120)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:69 (grouped into LUT with out node api)
_ifconv1:17  %tmp_30 = and i1 %tmp_20, %tmp_29

ST_12: f_neg_i1 (121)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:18  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_12: f (122)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:19  %f = bitcast i32 %f_neg_i1 to float

ST_12: api (123)  [1/1] 1.37ns  loc: minver.c:69 (out node of the LUT)
_ifconv1:20  %api = select i1 %tmp_30, float %pivot, float %f


 <State 13>: 5.12ns
ST_13: tmp_5 (124)  [1/1] 5.12ns  loc: minver.c:70
_ifconv1:21  %tmp_5 = fpext float %api to double


 <State 14>: 8.27ns
ST_14: tmp_4 (104)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:1  %tmp_4 = sext i32 %r_load to i64

ST_14: tmp_5_to_int (125)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:22  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_14: tmp_31 (126)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:23  %tmp_31 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_14: tmp_51 (127)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:24  %tmp_51 = trunc i64 %tmp_5_to_int to i52

ST_14: notlhs2 (128)  [1/1] 2.58ns  loc: minver.c:70
_ifconv1:25  %notlhs2 = icmp ne i11 %tmp_31, -1

ST_14: notrhs2 (129)  [1/1] 3.19ns  loc: minver.c:70
_ifconv1:26  %notrhs2 = icmp eq i52 %tmp_51, 0

ST_14: tmp_33 (130)  [1/1] 0.00ns  loc: minver.c:70 (grouped into LUT with out node tmp_35)
_ifconv1:27  %tmp_33 = or i1 %notrhs2, %notlhs2

ST_14: tmp_34 (131)  [1/1] 6.90ns  loc: minver.c:70
_ifconv1:28  %tmp_34 = fcmp ole double %tmp_5, 1.000000e-06

ST_14: tmp_35 (132)  [1/1] 1.37ns  loc: minver.c:70 (out node of the LUT)
_ifconv1:29  %tmp_35 = and i1 %tmp_33, %tmp_34

ST_14: StgValue_230 (133)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:30  br i1 %tmp_35, label %.loopexit.loopexit22, label %3

ST_14: tmp_1 (135)  [1/1] 2.93ns  loc: minver.c:75
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast6

ST_14: StgValue_232 (136)  [1/1] 0.00ns  loc: minver.c:75
:1  br i1 %tmp_1, label %.loopexit11, label %4

ST_14: work_addr_3 (138)  [1/1] 0.00ns  loc: minver.c:77
:0  %work_addr_3 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_3

ST_14: work_load_2 (139)  [2/2] 2.39ns  loc: minver.c:77
:1  %work_load_2 = load i2* %work_addr_3, align 1

ST_14: work_addr_4 (140)  [1/1] 0.00ns  loc: minver.c:78
:2  %work_addr_4 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_4

ST_14: work_load_3 (141)  [2/2] 2.39ns  loc: minver.c:78
:3  %work_load_3 = load i2* %work_addr_4, align 1

ST_14: StgValue_237 (274)  [1/1] 0.00ns
.loopexit.loopexit22:0  br label %.loopexit

ST_14: StgValue_238 (326)  [1/1] 0.00ns  loc: minver.c:133
.loopexit:0  ret i32 1


 <State 15>: 4.78ns
ST_15: work_load_2 (139)  [1/2] 2.39ns  loc: minver.c:77
:1  %work_load_2 = load i2* %work_addr_3, align 1

ST_15: work_load_3 (141)  [1/2] 2.39ns  loc: minver.c:78
:3  %work_load_3 = load i2* %work_addr_4, align 1

ST_15: StgValue_241 (142)  [1/1] 2.39ns  loc: minver.c:78
:4  store i2 %work_load_3, i2* %work_addr_3, align 1


 <State 16>: 2.39ns
ST_16: StgValue_242 (143)  [1/1] 2.39ns  loc: minver.c:79
:5  store i2 %work_load_2, i2* %work_addr_4, align 1

ST_16: StgValue_243 (144)  [1/1] 1.57ns  loc: minver.c:80
:6  br label %5


 <State 17>: 4.06ns
ST_17: j (146)  [1/1] 0.00ns
:0  %j = phi i2 [ 0, %4 ], [ %j_1, %6 ]

ST_17: exitcond5 (147)  [1/1] 1.54ns  loc: minver.c:80
:1  %exitcond5 = icmp eq i2 %j, -1

ST_17: j_1 (148)  [1/1] 0.75ns  loc: minver.c:80
:2  %j_1 = add i2 %j, 1

ST_17: StgValue_247 (149)  [1/1] 0.00ns  loc: minver.c:80
:3  br i1 %exitcond5, label %.loopexit11.loopexit, label %6

ST_17: tmp_11_cast (154)  [1/1] 0.00ns  loc: minver.c:82
:3  %tmp_11_cast = zext i2 %j to i5

ST_17: tmp_66 (155)  [1/1] 1.67ns  loc: minver.c:82
:4  %tmp_66 = add i5 %tmp_11, %tmp_11_cast

ST_17: tmp_68_cast (156)  [1/1] 0.00ns  loc: minver.c:82
:5  %tmp_68_cast = sext i5 %tmp_66 to i64

ST_17: a_addr_4 (157)  [1/1] 0.00ns  loc: minver.c:82
:6  %a_addr_4 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_68_cast

ST_17: tmp_67 (158)  [1/1] 1.67ns  loc: minver.c:83
:7  %tmp_67 = add i5 %tmp_37, %tmp_11_cast

ST_17: tmp_69_cast (159)  [1/1] 0.00ns  loc: minver.c:83
:8  %tmp_69_cast = sext i5 %tmp_67 to i64

ST_17: a_addr_5 (160)  [1/1] 0.00ns  loc: minver.c:83
:9  %a_addr_5 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_69_cast

ST_17: w (161)  [2/2] 2.39ns  loc: minver.c:82
:10  %w = load float* %a_addr_4, align 4


 <State 18>: 2.39ns
ST_18: w (161)  [1/2] 2.39ns  loc: minver.c:82
:10  %w = load float* %a_addr_4, align 4

ST_18: a_load_2 (162)  [2/2] 2.39ns  loc: minver.c:83
:11  %a_load_2 = load float* %a_addr_5, align 4


 <State 19>: 4.78ns
ST_19: a_load_2 (162)  [1/2] 2.39ns  loc: minver.c:83
:11  %a_load_2 = load float* %a_addr_5, align 4

ST_19: StgValue_259 (163)  [1/1] 2.39ns  loc: minver.c:83
:12  store float %a_load_2, float* %a_addr_4, align 4


 <State 20>: 2.39ns
ST_20: empty_11 (151)  [1/1] 0.00ns
:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_20: tmp_23 (152)  [1/1] 0.00ns  loc: minver.c:80
:1  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_20: StgValue_262 (153)  [1/1] 0.00ns  loc: minver.c:81
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_20: StgValue_263 (164)  [1/1] 2.39ns  loc: minver.c:84
:13  store float %w, float* %a_addr_5, align 4

ST_20: empty_12 (165)  [1/1] 0.00ns  loc: minver.c:85
:14  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_23) nounwind

ST_20: StgValue_265 (166)  [1/1] 0.00ns  loc: minver.c:80
:15  br label %5


 <State 21>: 1.57ns
ST_21: StgValue_266 (168)  [1/1] 0.00ns
.loopexit11.loopexit:0  br label %.loopexit11

ST_21: StgValue_267 (170)  [1/1] 1.57ns  loc: minver.c:88
.loopexit11:0  br label %7


 <State 22>: 4.06ns
ST_22: i_2 (172)  [1/1] 0.00ns
:0  %i_2 = phi i2 [ 0, %.loopexit11 ], [ %i_8, %8 ]

ST_22: exitcond4 (173)  [1/1] 1.54ns  loc: minver.c:88
:1  %exitcond4 = icmp eq i2 %i_2, -1

ST_22: i_8 (174)  [1/1] 0.75ns  loc: minver.c:88
:2  %i_8 = add i2 %i_2, 1

ST_22: StgValue_271 (175)  [1/1] 0.00ns  loc: minver.c:88
:3  br i1 %exitcond4, label %.preheader10.preheader, label %8

ST_22: tmp_12_cast (180)  [1/1] 0.00ns  loc: minver.c:90
:3  %tmp_12_cast = zext i2 %i_2 to i5

ST_22: tmp_68 (181)  [1/1] 1.67ns  loc: minver.c:90
:4  %tmp_68 = add i5 %tmp_11, %tmp_12_cast

ST_22: tmp_70_cast (182)  [1/1] 0.00ns  loc: minver.c:90
:5  %tmp_70_cast = sext i5 %tmp_68 to i64

ST_22: a_addr_6 (183)  [1/1] 0.00ns  loc: minver.c:90
:6  %a_addr_6 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_70_cast

ST_22: a_load_5 (184)  [2/2] 2.39ns  loc: minver.c:90
:7  %a_load_5 = load float* %a_addr_6, align 4


 <State 23>: 2.39ns
ST_23: a_load_5 (184)  [1/2] 2.39ns  loc: minver.c:90
:7  %a_load_5 = load float* %a_addr_6, align 4


 <State 24>: 6.30ns
ST_24: tmp_13 (185)  [16/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 25>: 6.30ns
ST_25: tmp_13 (185)  [15/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 26>: 6.30ns
ST_26: tmp_13 (185)  [14/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 27>: 6.30ns
ST_27: tmp_13 (185)  [13/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 28>: 6.30ns
ST_28: tmp_13 (185)  [12/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 29>: 6.30ns
ST_29: tmp_13 (185)  [11/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 30>: 6.30ns
ST_30: tmp_13 (185)  [10/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 31>: 6.30ns
ST_31: tmp_13 (185)  [9/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 32>: 6.30ns
ST_32: tmp_13 (185)  [8/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 33>: 6.30ns
ST_33: tmp_13 (185)  [7/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 34>: 6.30ns
ST_34: tmp_13 (185)  [6/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 35>: 6.30ns
ST_35: tmp_13 (185)  [5/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 36>: 6.30ns
ST_36: tmp_13 (185)  [4/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 37>: 6.30ns
ST_37: tmp_13 (185)  [3/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 38>: 6.30ns
ST_38: tmp_13 (185)  [2/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 39>: 8.69ns
ST_39: empty_13 (177)  [1/1] 0.00ns
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_39: tmp_24 (178)  [1/1] 0.00ns  loc: minver.c:88
:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_39: StgValue_295 (179)  [1/1] 0.00ns  loc: minver.c:89
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_39: tmp_13 (185)  [1/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot

ST_39: StgValue_297 (186)  [1/1] 2.39ns  loc: minver.c:90
:9  store float %tmp_13, float* %a_addr_6, align 4

ST_39: empty_14 (187)  [1/1] 0.00ns  loc: minver.c:91
:10  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_24) nounwind

ST_39: StgValue_299 (188)  [1/1] 0.00ns  loc: minver.c:88
:11  br label %7


 <State 40>: 1.57ns
ST_40: tmp_26 (190)  [1/1] 1.54ns  loc: minver.c:99
.preheader10.preheader:0  %tmp_26 = icmp eq i2 %i_5, 0

ST_40: tmp_20_1 (191)  [1/1] 1.54ns  loc: minver.c:99
.preheader10.preheader:1  %tmp_20_1 = icmp eq i2 %i_5, 1

ST_40: tmp_20_2 (192)  [1/1] 1.54ns  loc: minver.c:99
.preheader10.preheader:2  %tmp_20_2 = icmp eq i2 %i_5, -2

ST_40: StgValue_303 (193)  [1/1] 1.57ns  loc: minver.c:93
.preheader10.preheader:3  br label %.preheader10


 <State 41>: 4.81ns
ST_41: i_3 (195)  [1/1] 0.00ns
.preheader10:0  %i_3 = phi i2 [ %i_9, %._crit_edge ], [ 0, %.preheader10.preheader ]

ST_41: exitcond3 (196)  [1/1] 1.54ns  loc: minver.c:93
.preheader10:1  %exitcond3 = icmp eq i2 %i_3, -1

ST_41: i_9 (197)  [1/1] 0.75ns  loc: minver.c:93
.preheader10:2  %i_9 = add i2 %i_3, 1

ST_41: StgValue_307 (198)  [1/1] 0.00ns  loc: minver.c:93
.preheader10:3  br i1 %exitcond3, label %14, label %9

ST_41: empty_15 (200)  [1/1] 0.00ns
:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_41: tmp_25 (201)  [1/1] 0.00ns  loc: minver.c:93
:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_41: StgValue_310 (202)  [1/1] 0.00ns  loc: minver.c:94
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_41: tmp_15 (203)  [1/1] 1.54ns  loc: minver.c:95
:3  %tmp_15 = icmp eq i2 %i_3, %i_5

ST_41: StgValue_312 (204)  [1/1] 0.00ns  loc: minver.c:95
:4  br i1 %tmp_15, label %._crit_edge, label %10

ST_41: tmp_16_cast (206)  [1/1] 0.00ns  loc: minver.c:93
:0  %tmp_16_cast = zext i2 %i_3 to i5

ST_41: tmp_69 (207)  [1/1] 0.00ns  loc: minver.c:93
:1  %tmp_69 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_3, i2 0)

ST_41: p_shl4_cast (208)  [1/1] 0.00ns  loc: minver.c:96
:2  %p_shl4_cast = zext i4 %tmp_69 to i5

ST_41: tmp_70 (209)  [1/1] 0.75ns  loc: minver.c:96
:3  %tmp_70 = sub i5 %p_shl4_cast, %tmp_16_cast

ST_41: tmp_71 (211)  [1/1] 1.67ns  loc: minver.c:96
:5  %tmp_71 = add i5 %tmp_3_cast, %tmp_70

ST_41: tmp_73_cast (212)  [1/1] 0.00ns  loc: minver.c:96
:6  %tmp_73_cast = sext i5 %tmp_71 to i64

ST_41: a_addr_8 (213)  [1/1] 0.00ns  loc: minver.c:96
:7  %a_addr_8 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_73_cast

ST_41: w_2 (221)  [2/2] 2.39ns  loc: minver.c:96
:15  %w_2 = load float* %a_addr_8, align 4

ST_41: StgValue_321 (265)  [1/1] 0.00ns  loc: minver.c:103
._crit_edge18:0  br label %._crit_edge

ST_41: empty_16 (267)  [1/1] 0.00ns  loc: minver.c:104
._crit_edge:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_25) nounwind

ST_41: StgValue_323 (268)  [1/1] 0.00ns  loc: minver.c:93
._crit_edge:1  br label %.preheader10


 <State 42>: 2.39ns
ST_42: w_2 (221)  [1/2] 2.39ns  loc: minver.c:96
:15  %w_2 = load float* %a_addr_8, align 4


 <State 43>: 7.74ns
ST_43: w_2_to_int (222)  [1/1] 0.00ns  loc: minver.c:96
:16  %w_2_to_int = bitcast float %w_2 to i32

ST_43: tmp_50 (223)  [1/1] 0.00ns  loc: minver.c:96
:17  %tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_2_to_int, i32 23, i32 30)

ST_43: tmp_74 (224)  [1/1] 0.00ns  loc: minver.c:96
:18  %tmp_74 = trunc i32 %w_2_to_int to i23

ST_43: notlhs5 (225)  [1/1] 2.47ns  loc: minver.c:96
:19  %notlhs5 = icmp ne i8 %tmp_50, -1

ST_43: notrhs5 (226)  [1/1] 2.84ns  loc: minver.c:96
:20  %notrhs5 = icmp eq i23 %tmp_74, 0

ST_43: tmp_52 (227)  [1/1] 0.00ns  loc: minver.c:96 (grouped into LUT with out node tmp_54)
:21  %tmp_52 = or i1 %notrhs5, %notlhs5

ST_43: tmp_53 (228)  [1/1] 6.37ns  loc: minver.c:97
:22  %tmp_53 = fcmp oeq float %w_2, 0.000000e+00

ST_43: tmp_54 (229)  [1/1] 1.37ns  loc: minver.c:97 (out node of the LUT)
:23  %tmp_54 = and i1 %tmp_52, %tmp_53

ST_43: StgValue_333 (230)  [1/1] 0.00ns  loc: minver.c:97
:24  br i1 %tmp_54, label %._crit_edge18, label %.preheader9.0

ST_43: StgValue_334 (232)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.0:0  br i1 %tmp_26, label %.preheader9.1, label %11

ST_43: a_load_9 (234)  [2/2] 2.39ns  loc: minver.c:99
:0  %a_load_9 = load float* %a_addr_9, align 4

ST_43: StgValue_336 (241)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.1:0  br i1 %tmp_20_1, label %.preheader9.2, label %12

ST_43: StgValue_337 (250)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.2:0  br i1 %tmp_20_2, label %.preheader9.3, label %13

ST_43: tmp_18_neg (259)  [1/1] 1.37ns  loc: minver.c:101
.preheader9.3:0  %tmp_18_neg = xor i32 %w_2_to_int, -2147483648

ST_43: tmp_18 (260)  [1/1] 0.00ns  loc: minver.c:101
.preheader9.3:1  %tmp_18 = bitcast i32 %tmp_18_neg to float

ST_43: tmp_19 (261)  [16/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 44>: 8.17ns
ST_44: tmp_72_cast (210)  [1/1] 0.00ns  loc: minver.c:96
:4  %tmp_72_cast = sext i5 %tmp_70 to i64

ST_44: a_addr_10 (214)  [1/1] 0.00ns  loc: minver.c:99
:8  %a_addr_10 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_72_cast

ST_44: a_load_9 (234)  [1/2] 2.39ns  loc: minver.c:99
:0  %a_load_9 = load float* %a_addr_9, align 4

ST_44: tmp_27 (235)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_9

ST_44: a_load_10 (236)  [2/2] 2.39ns  loc: minver.c:99
:2  %a_load_10 = load float* %a_addr_10, align 4

ST_44: tmp_19 (261)  [15/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 45>: 6.30ns
ST_45: tmp_72 (215)  [1/1] 1.67ns  loc: minver.c:99
:9  %tmp_72 = add i5 1, %tmp_70

ST_45: tmp_74_cast (216)  [1/1] 0.00ns  loc: minver.c:99
:10  %tmp_74_cast = sext i5 %tmp_72 to i64

ST_45: a_addr_12 (217)  [1/1] 0.00ns  loc: minver.c:99
:11  %a_addr_12 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_74_cast

ST_45: tmp_73 (218)  [1/1] 1.67ns  loc: minver.c:99
:12  %tmp_73 = add i5 2, %tmp_70

ST_45: tmp_75_cast (219)  [1/1] 0.00ns  loc: minver.c:99
:13  %tmp_75_cast = sext i5 %tmp_73 to i64

ST_45: a_addr_14 (220)  [1/1] 0.00ns  loc: minver.c:99
:14  %a_addr_14 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_75_cast

ST_45: tmp_27 (235)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_9

ST_45: a_load_10 (236)  [1/2] 2.39ns  loc: minver.c:99
:2  %a_load_10 = load float* %a_addr_10, align 4

ST_45: a_load_12 (245)  [2/2] 2.39ns  loc: minver.c:99
:2  %a_load_12 = load float* %a_addr_12, align 4

ST_45: tmp_19 (261)  [14/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 46>: 6.30ns
ST_46: tmp_27 (235)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_9

ST_46: a_load_12 (245)  [1/2] 2.39ns  loc: minver.c:99
:2  %a_load_12 = load float* %a_addr_12, align 4

ST_46: a_load_14 (254)  [2/2] 2.39ns  loc: minver.c:99
:2  %a_load_14 = load float* %a_addr_14, align 4

ST_46: tmp_19 (261)  [13/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 47>: 14.05ns
ST_47: tmp_27 (235)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_9

ST_47: tmp_28 (237)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_10, %tmp_27

ST_47: a_load_14 (254)  [1/2] 2.39ns  loc: minver.c:99
:2  %a_load_14 = load float* %a_addr_14, align 4

ST_47: tmp_19 (261)  [12/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 48>: 8.26ns
ST_48: tmp_28 (237)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_10, %tmp_27

ST_48: tmp_19 (261)  [11/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 49>: 8.26ns
ST_49: tmp_28 (237)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_10, %tmp_27

ST_49: tmp_19 (261)  [10/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 50>: 8.26ns
ST_50: tmp_28 (237)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_10, %tmp_27

ST_50: tmp_19 (261)  [9/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 51>: 10.65ns
ST_51: tmp_28 (237)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_10, %tmp_27

ST_51: StgValue_372 (238)  [1/1] 2.39ns  loc: minver.c:99
:4  store float %tmp_28, float* %a_addr_10, align 4

ST_51: StgValue_373 (239)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.1

ST_51: tmp_19 (261)  [8/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 52>: 6.30ns
ST_52: a_load_11 (243)  [2/2] 2.39ns  loc: minver.c:99
:0  %a_load_11 = load float* %a_addr_11, align 4

ST_52: tmp_19 (261)  [7/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 53>: 8.17ns
ST_53: a_load_11 (243)  [1/2] 2.39ns  loc: minver.c:99
:0  %a_load_11 = load float* %a_addr_11, align 4

ST_53: tmp_22_1 (244)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_11

ST_53: tmp_19 (261)  [6/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 54>: 6.30ns
ST_54: tmp_22_1 (244)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_11

ST_54: tmp_19 (261)  [5/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 55>: 6.30ns
ST_55: tmp_22_1 (244)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_11

ST_55: tmp_19 (261)  [4/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 56>: 14.05ns
ST_56: tmp_22_1 (244)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_11

ST_56: tmp_23_1 (246)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_12, %tmp_22_1

ST_56: tmp_19 (261)  [3/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 57>: 8.26ns
ST_57: tmp_23_1 (246)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_12, %tmp_22_1

ST_57: tmp_19 (261)  [2/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 58>: 8.26ns
ST_58: tmp_23_1 (246)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_12, %tmp_22_1

ST_58: tmp_19 (261)  [1/16] 6.30ns  loc: minver.c:101
.preheader9.3:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 59>: 8.26ns
ST_59: tmp_23_1 (246)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_12, %tmp_22_1


 <State 60>: 10.65ns
ST_60: tmp_23_1 (246)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_12, %tmp_22_1

ST_60: StgValue_393 (247)  [1/1] 2.39ns  loc: minver.c:99
:4  store float %tmp_23_1, float* %a_addr_12, align 4

ST_60: StgValue_394 (248)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.2


 <State 61>: 2.39ns
ST_61: a_load_13 (252)  [2/2] 2.39ns  loc: minver.c:99
:0  %a_load_13 = load float* %a_addr_13, align 4


 <State 62>: 8.17ns
ST_62: a_load_13 (252)  [1/2] 2.39ns  loc: minver.c:99
:0  %a_load_13 = load float* %a_addr_13, align 4

ST_62: tmp_22_2 (253)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_13


 <State 63>: 5.78ns
ST_63: tmp_22_2 (253)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_13


 <State 64>: 5.78ns
ST_64: tmp_22_2 (253)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_13


 <State 65>: 14.05ns
ST_65: tmp_22_2 (253)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_13

ST_65: tmp_23_2 (255)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_14, %tmp_22_2


 <State 66>: 8.26ns
ST_66: tmp_23_2 (255)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_14, %tmp_22_2


 <State 67>: 8.26ns
ST_67: tmp_23_2 (255)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_14, %tmp_22_2


 <State 68>: 8.26ns
ST_68: tmp_23_2 (255)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_14, %tmp_22_2


 <State 69>: 10.65ns
ST_69: tmp_23_2 (255)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_14, %tmp_22_2

ST_69: StgValue_406 (256)  [1/1] 2.39ns  loc: minver.c:99
:4  store float %tmp_23_2, float* %a_addr_14, align 4

ST_69: StgValue_407 (257)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.3


 <State 70>: 0.00ns

 <State 71>: 0.00ns

 <State 72>: 0.00ns

 <State 73>: 0.00ns

 <State 74>: 2.39ns
ST_74: StgValue_408 (262)  [1/1] 2.39ns  loc: minver.c:101
.preheader9.3:3  store float %tmp_19, float* %a_addr_8, align 4

ST_74: StgValue_409 (263)  [1/1] 0.00ns  loc: minver.c:102
.preheader9.3:4  br label %._crit_edge18


 <State 75>: 6.30ns
ST_75: tmp_14 (270)  [16/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 76>: 6.30ns
ST_76: tmp_14 (270)  [15/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 77>: 6.30ns
ST_77: tmp_14 (270)  [14/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_14 (270)  [13/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_14 (270)  [12/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 80>: 6.30ns
ST_80: tmp_14 (270)  [11/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 81>: 6.30ns
ST_81: tmp_14 (270)  [10/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 82>: 6.30ns
ST_82: tmp_14 (270)  [9/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 83>: 6.30ns
ST_83: tmp_14 (270)  [8/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 84>: 6.30ns
ST_84: tmp_14 (270)  [7/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 85>: 6.30ns
ST_85: tmp_14 (270)  [6/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 86>: 6.30ns
ST_86: tmp_14 (270)  [5/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 87>: 6.30ns
ST_87: tmp_14 (270)  [4/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 88>: 6.30ns
ST_88: tmp_14 (270)  [3/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 89>: 6.30ns
ST_89: tmp_14 (270)  [2/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 90>: 8.69ns
ST_90: tmp_14 (270)  [1/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot

ST_90: StgValue_426 (271)  [1/1] 2.39ns  loc: minver.c:105
:1  store float %tmp_14, float* %a_addr_7, align 4

ST_90: StgValue_427 (272)  [1/1] 0.00ns  loc: minver.c:56
:2  br label %.preheader13


 <State 91>: 1.54ns
ST_91: i_4 (278)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i2 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_91: exitcond1 (279)  [1/1] 1.54ns  loc: minver.c:109
.preheader8:1  %exitcond1 = icmp eq i2 %i_4, -1

ST_91: i_7 (280)  [1/1] 0.75ns  loc: minver.c:129
.preheader8:2  %i_7 = add i2 %i_4, 1

ST_91: StgValue_431 (281)  [1/1] 0.00ns  loc: minver.c:109
.preheader8:3  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_91: empty_17 (283)  [1/1] 0.00ns
.preheader.preheader:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3) nounwind

ST_91: tmp_s (284)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:1  %tmp_s = zext i2 %i_4 to i64

ST_91: tmp_cast (285)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:2  %tmp_cast = zext i2 %i_4 to i5

ST_91: work_addr_1 (286)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_s

ST_91: StgValue_436 (287)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:4  br label %.preheader

ST_91: StgValue_437 (324)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 92>: 2.39ns
ST_92: work_load (289)  [2/2] 2.39ns  loc: minver.c:114
.preheader:0  %work_load = load i2* %work_addr_1, align 1


 <State 93>: 7.30ns
ST_93: work_load (289)  [1/2] 2.39ns  loc: minver.c:114
.preheader:0  %work_load = load i2* %work_addr_1, align 1

ST_93: tmp_8 (290)  [1/1] 1.54ns  loc: minver.c:116
.preheader:1  %tmp_8 = icmp eq i2 %work_load, %i_4

ST_93: StgValue_441 (291)  [1/1] 0.00ns  loc: minver.c:116
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %15

ST_93: tmp_10 (295)  [1/1] 0.00ns  loc: minver.c:118
:2  %tmp_10 = zext i2 %work_load to i64

ST_93: tmp_10_cast (296)  [1/1] 0.00ns  loc: minver.c:114
:3  %tmp_10_cast = zext i2 %work_load to i5

ST_93: tmp_62 (297)  [1/1] 0.00ns  loc: minver.c:114
:4  %tmp_62 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %work_load, i2 0)

ST_93: tmp_63 (298)  [1/1] 0.00ns  loc: minver.c:114
:5  %tmp_63 = zext i4 %tmp_62 to i5

ST_93: tmp_64 (300)  [1/1] 1.26ns  loc: minver.c:123
:7  %tmp_64 = sub i5 %tmp_63, %tmp_10_cast

ST_93: tmp_65 (301)  [1/1] 1.26ns  loc: minver.c:123
:8  %tmp_65 = add i5 %tmp_cast, %tmp_64

ST_93: tmp_67_cast (302)  [1/1] 0.00ns  loc: minver.c:123
:9  %tmp_67_cast = sext i5 %tmp_65 to i64

ST_93: a_addr_2 (303)  [1/1] 0.00ns  loc: minver.c:123
:10  %a_addr_2 = getelementptr [9 x float]* %a, i64 0, i64 %tmp_67_cast

ST_93: work_addr_2 (305)  [1/1] 0.00ns  loc: minver.c:118
:12  %work_addr_2 = getelementptr [500 x i2]* %work, i64 0, i64 %tmp_10

ST_93: work_load_1 (306)  [2/2] 2.39ns  loc: minver.c:118
:13  %work_load_1 = load i2* %work_addr_2, align 1

ST_93: a_load (309)  [2/2] 2.39ns  loc: minver.c:123
:16  %a_load = load float* %a_addr_2, align 4


 <State 94>: 2.39ns
ST_94: p_shl5 (299)  [1/1] 0.00ns  loc: minver.c:123
:6  %p_shl5 = zext i4 %tmp_62 to i64

ST_94: a_addr_3 (304)  [1/1] 0.00ns  loc: minver.c:124
:11  %a_addr_3 = getelementptr [9 x float]* %a, i64 0, i64 %p_shl5

ST_94: work_load_1 (306)  [1/2] 2.39ns  loc: minver.c:118
:13  %work_load_1 = load i2* %work_addr_2, align 1

ST_94: StgValue_456 (307)  [1/1] 2.39ns  loc: minver.c:119
:14  store i2 %work_load, i2* %work_addr_2, align 1

ST_94: a_load (309)  [1/2] 2.39ns  loc: minver.c:123
:16  %a_load = load float* %a_addr_2, align 4

ST_94: a_load_3 (310)  [2/2] 2.39ns  loc: minver.c:124
:17  %a_load_3 = load float* %a_addr_3, align 4


 <State 95>: 4.78ns
ST_95: StgValue_459 (308)  [1/1] 2.39ns  loc: minver.c:120
:15  store i2 %work_load_1, i2* %work_addr_1, align 1

ST_95: a_load_3 (310)  [1/2] 2.39ns  loc: minver.c:124
:17  %a_load_3 = load float* %a_addr_3, align 4

ST_95: StgValue_461 (311)  [1/1] 2.39ns  loc: minver.c:124
:18  store float %a_load_3, float* %a_addr_2, align 4


 <State 96>: 2.39ns
ST_96: StgValue_462 (312)  [1/1] 2.39ns  loc: minver.c:125
:19  store float %a_load, float* %a_addr_3, align 4


 <State 97>: 2.39ns
ST_97: a_load_4 (313)  [2/2] 2.39ns  loc: minver.c:123
:20  %a_load_4 = load float* %a_addr_2, align 4


 <State 98>: 2.39ns
ST_98: a_load_4 (313)  [1/2] 2.39ns  loc: minver.c:123
:20  %a_load_4 = load float* %a_addr_2, align 4

ST_98: StgValue_465 (314)  [1/1] 2.39ns  loc: minver.c:124
:21  store float %a_load, float* %a_addr_2, align 4


 <State 99>: 2.39ns
ST_99: StgValue_466 (315)  [1/1] 2.39ns  loc: minver.c:125
:22  store float %a_load_4, float* %a_addr_3, align 4


 <State 100>: 2.39ns
ST_100: a_load_6 (316)  [2/2] 2.39ns  loc: minver.c:123
:23  %a_load_6 = load float* %a_addr_2, align 4


 <State 101>: 2.39ns
ST_101: a_load_6 (316)  [1/2] 2.39ns  loc: minver.c:123
:23  %a_load_6 = load float* %a_addr_2, align 4

ST_101: StgValue_469 (317)  [1/1] 2.39ns  loc: minver.c:124
:24  store float %a_load_4, float* %a_addr_2, align 4


 <State 102>: 2.39ns
ST_102: tmp_22 (293)  [1/1] 0.00ns  loc: minver.c:111
:0  %tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9) nounwind

ST_102: StgValue_471 (294)  [1/1] 0.00ns  loc: minver.c:112
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_102: StgValue_472 (318)  [1/1] 2.39ns  loc: minver.c:125
:25  store float %a_load_6, float* %a_addr_3, align 4

ST_102: empty_18 (319)  [1/1] 0.00ns  loc: minver.c:127
:26  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_22) nounwind

ST_102: StgValue_474 (320)  [1/1] 0.00ns  loc: minver.c:127
:27  br label %.preheader


 <State 103>: 0.00ns
ST_103: StgValue_475 (322)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:50) [11]  (1.57 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:50) [11]  (0 ns)
	'store' operation (minver.c:52) of variable 'i' on array 'work', minver.c:41 [21]  (2.39 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'alloca' operation ('r') [25]  (0 ns)
	'store' operation of constant 0 on local variable 'r' [26]  (1.57 ns)

 <State 4>: 2.42ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:56) [29]  (0 ns)
	'sub' operation ('tmp_11', minver.c:82) [41]  (0.75 ns)
	'add' operation ('tmp_12', minver.c:99) [43]  (1.67 ns)

 <State 5>: 4.91ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast6', minver.c:59) ('i', minver.c:59) [54]  (0 ns)
	'sub' operation ('tmp_57', minver.c:61) [65]  (1.26 ns)
	'add' operation ('tmp_58', minver.c:61) [66]  (1.26 ns)
	'getelementptr' operation ('a_addr_1', minver.c:61) [68]  (0 ns)
	'load' operation ('n', minver.c:61) on array 'a' [69]  (2.39 ns)

 <State 6>: 2.39ns
The critical path consists of the following:
	'load' operation ('n', minver.c:61) on array 'a' [69]  (2.39 ns)

 <State 7>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_39', minver_lib.c:11->minver.c:61) [76]  (6.37 ns)
	'and' operation ('tmp_40', minver_lib.c:11->minver.c:61) [77]  (0 ns)
	'select' operation ('w', minver.c:63) [80]  (1.37 ns)

 <State 8>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_48', minver.c:62) [94]  (6.37 ns)
	'and' operation ('tmp_49', minver.c:62) [95]  (1.37 ns)

 <State 9>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:62) on local variable 'r' [58]  (0 ns)
	'select' operation ('r', minver.c:62) [97]  (1.37 ns)
	'store' operation (minver.c:62) of variable 'r', minver.c:62 on local variable 'r' [100]  (1.57 ns)

 <State 10>: 5.73ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [103]  (0 ns)
	'sub' operation ('tmp_37', minver.c:68) [108]  (1.67 ns)
	'add' operation ('tmp_42', minver.c:68) [109]  (1.67 ns)
	'getelementptr' operation ('a_addr', minver.c:68) [111]  (0 ns)
	'load' operation ('pivot', minver.c:105) on array 'a' [112]  (2.39 ns)

 <State 11>: 2.39ns
The critical path consists of the following:
	'load' operation ('pivot', minver.c:105) on array 'a' [112]  (2.39 ns)

 <State 12>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_29', minver_lib.c:11->minver.c:69) [119]  (6.37 ns)
	'and' operation ('tmp_30', minver_lib.c:11->minver.c:69) [120]  (0 ns)
	'select' operation ('api', minver.c:69) [123]  (1.37 ns)

 <State 13>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:70) [124]  (5.12 ns)

 <State 14>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_34', minver.c:70) [131]  (6.9 ns)
	'and' operation ('tmp_35', minver.c:70) [132]  (1.37 ns)

 <State 15>: 4.78ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:78) on array 'work', minver.c:41 [141]  (2.39 ns)
	'store' operation (minver.c:78) of variable 'work_load_3', minver.c:78 on array 'work', minver.c:41 [142]  (2.39 ns)

 <State 16>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:79) of variable 'work_load_2', minver.c:77 on array 'work', minver.c:41 [143]  (2.39 ns)

 <State 17>: 4.06ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:80) [146]  (0 ns)
	'add' operation ('tmp_66', minver.c:82) [155]  (1.67 ns)
	'getelementptr' operation ('a_addr_4', minver.c:82) [157]  (0 ns)
	'load' operation ('w', minver.c:82) on array 'a' [161]  (2.39 ns)

 <State 18>: 2.39ns
The critical path consists of the following:
	'load' operation ('w', minver.c:82) on array 'a' [161]  (2.39 ns)

 <State 19>: 4.78ns
The critical path consists of the following:
	'load' operation ('a_load_2', minver.c:83) on array 'a' [162]  (2.39 ns)
	'store' operation (minver.c:83) of variable 'a_load_2', minver.c:83 on array 'a' [163]  (2.39 ns)

 <State 20>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:84) of variable 'w', minver.c:82 on array 'a' [164]  (2.39 ns)

 <State 21>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:88) [172]  (1.57 ns)

 <State 22>: 4.06ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:88) [172]  (0 ns)
	'add' operation ('tmp_68', minver.c:90) [181]  (1.67 ns)
	'getelementptr' operation ('a_addr_6', minver.c:90) [183]  (0 ns)
	'load' operation ('a_load_5', minver.c:90) on array 'a' [184]  (2.39 ns)

 <State 23>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_5', minver.c:90) on array 'a' [184]  (2.39 ns)

 <State 24>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 25>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 26>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 27>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 28>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)

 <State 39>: 8.69ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [185]  (6.3 ns)
	'store' operation (minver.c:90) of variable 'tmp_13', minver.c:90 on array 'a' [186]  (2.39 ns)

 <State 40>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:93) [195]  (1.57 ns)

 <State 41>: 4.81ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:93) [195]  (0 ns)
	'sub' operation ('tmp_70', minver.c:96) [209]  (0.75 ns)
	'add' operation ('tmp_71', minver.c:96) [211]  (1.67 ns)
	'getelementptr' operation ('a_addr_8', minver.c:96) [213]  (0 ns)
	'load' operation ('w', minver.c:96) on array 'a' [221]  (2.39 ns)

 <State 42>: 2.39ns
The critical path consists of the following:
	'load' operation ('w', minver.c:96) on array 'a' [221]  (2.39 ns)

 <State 43>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_53', minver.c:97) [228]  (6.37 ns)
	'and' operation ('tmp_54', minver.c:97) [229]  (1.37 ns)

 <State 44>: 8.17ns
The critical path consists of the following:
	'load' operation ('a_load_9', minver.c:99) on array 'a' [234]  (2.39 ns)
	'fmul' operation ('tmp_27', minver.c:99) [235]  (5.78 ns)

 <State 45>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:101) [261]  (6.3 ns)

 <State 46>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:101) [261]  (6.3 ns)

 <State 47>: 14ns
The critical path consists of the following:
	'fmul' operation ('tmp_27', minver.c:99) [235]  (5.78 ns)
	'fsub' operation ('tmp_28', minver.c:99) [237]  (8.26 ns)

 <State 48>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [237]  (8.26 ns)

 <State 49>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [237]  (8.26 ns)

 <State 50>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [237]  (8.26 ns)

 <State 51>: 10.7ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [237]  (8.26 ns)
	'store' operation (minver.c:99) of variable 'tmp_28', minver.c:99 on array 'a' [238]  (2.39 ns)

 <State 52>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:101) [261]  (6.3 ns)

 <State 53>: 8.17ns
The critical path consists of the following:
	'load' operation ('a_load_11', minver.c:99) on array 'a' [243]  (2.39 ns)
	'fmul' operation ('tmp_22_1', minver.c:99) [244]  (5.78 ns)

 <State 54>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:101) [261]  (6.3 ns)

 <State 55>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_19', minver.c:101) [261]  (6.3 ns)

 <State 56>: 14ns
The critical path consists of the following:
	'fmul' operation ('tmp_22_1', minver.c:99) [244]  (5.78 ns)
	'fsub' operation ('tmp_23_1', minver.c:99) [246]  (8.26 ns)

 <State 57>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [246]  (8.26 ns)

 <State 58>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [246]  (8.26 ns)

 <State 59>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [246]  (8.26 ns)

 <State 60>: 10.7ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [246]  (8.26 ns)
	'store' operation (minver.c:99) of variable 'tmp_23_1', minver.c:99 on array 'a' [247]  (2.39 ns)

 <State 61>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_13', minver.c:99) on array 'a' [252]  (2.39 ns)

 <State 62>: 8.17ns
The critical path consists of the following:
	'load' operation ('a_load_13', minver.c:99) on array 'a' [252]  (2.39 ns)
	'fmul' operation ('tmp_22_2', minver.c:99) [253]  (5.78 ns)

 <State 63>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22_2', minver.c:99) [253]  (5.78 ns)

 <State 64>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22_2', minver.c:99) [253]  (5.78 ns)

 <State 65>: 14ns
The critical path consists of the following:
	'fmul' operation ('tmp_22_2', minver.c:99) [253]  (5.78 ns)
	'fsub' operation ('tmp_23_2', minver.c:99) [255]  (8.26 ns)

 <State 66>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [255]  (8.26 ns)

 <State 67>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [255]  (8.26 ns)

 <State 68>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [255]  (8.26 ns)

 <State 69>: 10.7ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [255]  (8.26 ns)
	'store' operation (minver.c:99) of variable 'tmp_23_2', minver.c:99 on array 'a' [256]  (2.39 ns)

 <State 70>: 0ns
The critical path consists of the following:

 <State 71>: 0ns
The critical path consists of the following:

 <State 72>: 0ns
The critical path consists of the following:

 <State 73>: 0ns
The critical path consists of the following:

 <State 74>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:101) of variable 'tmp_19', minver.c:101 on array 'a' [262]  (2.39 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 76>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 80>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 81>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 82>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 83>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 84>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 85>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 86>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 87>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 88>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 89>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)

 <State 90>: 8.69ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [270]  (6.3 ns)
	'store' operation (minver.c:105) of variable 'tmp_14', minver.c:105 on array 'a' [271]  (2.39 ns)

 <State 91>: 1.54ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:129) [278]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:109) [279]  (1.54 ns)

 <State 92>: 2.39ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [289]  (2.39 ns)

 <State 93>: 7.3ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [289]  (2.39 ns)
	'sub' operation ('tmp_64', minver.c:123) [300]  (1.26 ns)
	'add' operation ('tmp_65', minver.c:123) [301]  (1.26 ns)
	'getelementptr' operation ('a_addr_2', minver.c:123) [303]  (0 ns)
	'load' operation ('a_load', minver.c:123) on array 'a' [309]  (2.39 ns)

 <State 94>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr_3', minver.c:124) [304]  (0 ns)
	'load' operation ('a_load_3', minver.c:124) on array 'a' [310]  (2.39 ns)

 <State 95>: 4.78ns
The critical path consists of the following:
	'load' operation ('a_load_3', minver.c:124) on array 'a' [310]  (2.39 ns)
	'store' operation (minver.c:124) of variable 'a_load_3', minver.c:124 on array 'a' [311]  (2.39 ns)

 <State 96>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load', minver.c:123 on array 'a' [312]  (2.39 ns)

 <State 97>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_4', minver.c:123) on array 'a' [313]  (2.39 ns)

 <State 98>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_4', minver.c:123) on array 'a' [313]  (2.39 ns)

 <State 99>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_4', minver.c:123 on array 'a' [315]  (2.39 ns)

 <State 100>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_6', minver.c:123) on array 'a' [316]  (2.39 ns)

 <State 101>: 2.39ns
The critical path consists of the following:
	'load' operation ('a_load_6', minver.c:123) on array 'a' [316]  (2.39 ns)

 <State 102>: 2.39ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_6', minver.c:123 on array 'a' [318]  (2.39 ns)

 <State 103>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
