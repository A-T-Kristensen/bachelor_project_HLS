// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=10,HLS_SYN_FF=2893,HLS_SYN_LUT=3587}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 70'b1;
parameter    ap_ST_fsm_state2 = 70'b10;
parameter    ap_ST_fsm_state3 = 70'b100;
parameter    ap_ST_fsm_state4 = 70'b1000;
parameter    ap_ST_fsm_pp1_stage0 = 70'b10000;
parameter    ap_ST_fsm_state10 = 70'b100000;
parameter    ap_ST_fsm_state11 = 70'b1000000;
parameter    ap_ST_fsm_state12 = 70'b10000000;
parameter    ap_ST_fsm_state13 = 70'b100000000;
parameter    ap_ST_fsm_state14 = 70'b1000000000;
parameter    ap_ST_fsm_state15 = 70'b10000000000;
parameter    ap_ST_fsm_state16 = 70'b100000000000;
parameter    ap_ST_fsm_state17 = 70'b1000000000000;
parameter    ap_ST_fsm_state18 = 70'b10000000000000;
parameter    ap_ST_fsm_state19 = 70'b100000000000000;
parameter    ap_ST_fsm_state20 = 70'b1000000000000000;
parameter    ap_ST_fsm_state21 = 70'b10000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 70'b100000000000000000;
parameter    ap_ST_fsm_pp3_stage1 = 70'b1000000000000000000;
parameter    ap_ST_fsm_pp3_stage2 = 70'b10000000000000000000;
parameter    ap_ST_fsm_pp3_stage3 = 70'b100000000000000000000;
parameter    ap_ST_fsm_pp3_stage4 = 70'b1000000000000000000000;
parameter    ap_ST_fsm_pp3_stage5 = 70'b10000000000000000000000;
parameter    ap_ST_fsm_pp3_stage6 = 70'b100000000000000000000000;
parameter    ap_ST_fsm_pp3_stage7 = 70'b1000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage8 = 70'b10000000000000000000000000;
parameter    ap_ST_fsm_state40 = 70'b100000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 70'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 70'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 70'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 70'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 70'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 70'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 70'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 70'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 70'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 70'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 70'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 70'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 70'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 70'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 70'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 70'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 70'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 70'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 70'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 70'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 70'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 70'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 70'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 70'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 70'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 70'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 70'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 70'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 70'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 70'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 70'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage2 = 70'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage3 = 70'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage4 = 70'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage5 = 70'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage6 = 70'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage7 = 70'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage8 = 70'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage9 = 70'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage10 = 70'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage11 = 70'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage12 = 70'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state92 = 70'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv60_0 = 60'b000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg[3:0] a_0_WEN_A;
reg[31:0] a_0_Din_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;
reg[31:0] a_1_Din_A;

(* fsm_encoding = "none" *) reg   [69:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_400;
reg   [31:0] r_1_reg_412;
reg   [31:0] ap_pipeline_reg_pp1_iter1_r_1_reg_412;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [31:0] ap_pipeline_reg_pp1_iter2_r_1_reg_412;
reg   [31:0] ap_pipeline_reg_pp1_iter3_r_1_reg_412;
reg   [2:0] i_2_reg_433;
reg   [2:0] i_3_reg_444;
wire   [31:0] grp_fu_510_p3;
reg   [31:0] reg_527;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond6_reg_1429;
wire   [0:0] ap_CS_fsm_state11;
wire   [2:0] work_q0;
reg   [2:0] reg_533;
wire   [0:0] ap_CS_fsm_state15;
wire   [2:0] work_q1;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] reg_540;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond3_reg_1603;
reg   [0:0] tmp_15_reg_1612;
reg   [0:0] tmp_52_reg_1640;
reg   [0:0] tmp_24_reg_1587;
wire   [0:0] ap_CS_fsm_pp4_stage7;
reg   [0:0] tmp_20_1_reg_1591;
reg   [31:0] reg_546;
reg   [0:0] tmp_20_2_reg_1595;
reg   [0:0] tmp_20_3_reg_1599;
wire   [31:0] grp_fu_467_p2;
reg   [31:0] reg_552;
wire   [0:0] ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire   [0:0] ap_CS_fsm_pp4_stage1;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612;
wire   [31:0] grp_fu_471_p2;
reg   [31:0] reg_557;
wire   [31:0] grp_fu_520_p3;
reg   [31:0] reg_562;
wire   [0:0] ap_CS_fsm_pp5_stage2;
reg   [0:0] tmp_8_reg_1739;
wire   [0:0] ap_CS_fsm_pp5_stage6;
wire   [0:0] ap_CS_fsm_pp5_stage9;
wire   [0:0] ap_CS_fsm_pp5_stage12;
wire   [2:0] i_1_fu_574_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_590_p3;
reg   [0:0] tmp_2_reg_1367;
wire   [0:0] ap_CS_fsm_state4;
wire   [2:0] k_fu_598_p2;
reg   [2:0] k_reg_1371;
wire   [31:0] i_5_cast_fu_604_p1;
reg   [31:0] i_5_cast_reg_1376;
wire   [63:0] tmp_3_fu_608_p1;
reg   [63:0] tmp_3_reg_1382;
reg   [2:0] a_0_addr_11_reg_1387;
reg   [2:0] a_0_addr_9_reg_1392;
reg   [2:0] a_1_addr_11_reg_1397;
reg   [2:0] a_1_addr_9_reg_1402;
wire   [0:0] tmp_35_fu_642_p1;
reg   [0:0] tmp_35_reg_1407;
reg   [2:0] a_0_addr_7_reg_1414;
reg   [2:0] a_1_addr_7_reg_1419;
wire   [0:0] icmp_fu_670_p2;
reg   [0:0] icmp_reg_1424;
wire   [0:0] exitcond6_fu_676_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429;
reg   [0:0] ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429;
reg   [0:0] ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429;
wire   [31:0] i_6_fu_695_p2;
reg   [31:0] i_6_reg_1443;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] w_3_fu_753_p3;
reg   [31:0] w_3_reg_1448;
reg   [31:0] ap_pipeline_reg_pp1_iter3_w_3_reg_1448;
wire   [0:0] tmp_47_fu_838_p2;
reg   [0:0] tmp_47_reg_1455;
wire   [31:0] wmax_1_fu_844_p3;
reg    ap_enable_reg_pp1_iter4;
reg   [31:0] r_load_1_reg_1466;
wire   [0:0] ap_CS_fsm_state10;
wire   [31:0] api_fu_927_p3;
reg   [31:0] api_reg_1482;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_5_fu_492_p1;
reg   [63:0] tmp_5_reg_1487;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_1_fu_980_p2;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_33_fu_974_p2;
reg   [8:0] work_addr_3_reg_1500;
reg   [8:0] work_addr_4_reg_1506;
wire   [0:0] exitcond5_fu_984_p2;
reg   [0:0] exitcond5_reg_1512;
wire   [0:0] ap_CS_fsm_state17;
wire   [2:0] j_1_fu_990_p2;
reg   [2:0] j_1_reg_1516;
wire   [0:0] tmp_82_fu_996_p1;
reg   [0:0] tmp_82_reg_1521;
reg   [2:0] a_0_addr_4_reg_1526;
reg   [2:0] a_1_addr_4_reg_1531;
wire   [0:0] icmp3_fu_1024_p2;
reg   [0:0] icmp3_reg_1536;
reg   [2:0] a_0_addr_6_reg_1542;
reg   [2:0] a_1_addr_6_reg_1547;
wire   [31:0] w_fu_1043_p3;
reg   [31:0] w_reg_1552;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] exitcond4_fu_1059_p2;
reg   [0:0] exitcond4_reg_1558;
wire   [0:0] ap_CS_fsm_pp3_stage0;
wire   [2:0] i_8_fu_1065_p2;
reg   [2:0] i_8_reg_1562;
reg    ap_enable_reg_pp3_iter0;
reg   [2:0] a_0_addr_5_reg_1567;
reg   [2:0] ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567;
reg   [2:0] a_1_addr_5_reg_1572;
reg   [2:0] ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572;
wire   [0:0] icmp4_fu_1099_p2;
reg   [0:0] icmp4_reg_1577;
reg   [0:0] ap_pipeline_reg_pp3_iter1_icmp4_reg_1577;
wire   [31:0] a_load_5_phi_fu_1105_p3;
reg   [31:0] a_load_5_phi_reg_1582;
wire   [0:0] ap_CS_fsm_pp3_stage1;
wire   [0:0] tmp_24_fu_1112_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] tmp_20_1_fu_1118_p2;
wire   [0:0] tmp_20_2_fu_1124_p2;
wire   [0:0] tmp_20_3_fu_1130_p2;
wire   [0:0] exitcond3_fu_1136_p2;
wire   [2:0] i_9_fu_1142_p2;
reg   [2:0] i_9_reg_1607;
wire   [0:0] tmp_15_fu_1148_p2;
wire   [3:0] tmp_71_fu_1154_p3;
reg   [3:0] tmp_71_reg_1616;
reg   [2:0] a_0_addr_8_reg_1622;
reg   [2:0] ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622;
reg   [2:0] a_1_addr_8_reg_1627;
reg   [2:0] ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627;
reg   [31:0] w_1_reg_1632;
wire   [0:0] tmp_52_fu_1210_p2;
wire   [0:0] ap_CS_fsm_pp4_stage3;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640;
wire   [31:0] tmp_18_fu_1222_p1;
reg   [2:0] a_0_addr_10_reg_1649;
wire   [0:0] ap_CS_fsm_pp4_stage5;
reg   [2:0] a_1_addr_10_reg_1654;
reg   [2:0] a_0_addr_12_reg_1669;
wire   [0:0] ap_CS_fsm_pp4_stage6;
reg   [2:0] a_1_addr_12_reg_1674;
reg   [31:0] a_0_load_10_reg_1679;
reg   [31:0] a_1_load_11_reg_1684;
wire   [31:0] grp_fu_475_p2;
reg   [31:0] tmp_25_reg_1689;
wire   [31:0] grp_fu_480_p2;
reg   [31:0] tmp_22_2_reg_1694;
reg   [31:0] tmp_22_1_reg_1699;
wire   [0:0] ap_CS_fsm_pp4_stage8;
reg   [31:0] tmp_22_3_reg_1704;
wire   [31:0] grp_fu_485_p2;
reg   [31:0] tmp_19_reg_1709;
wire   [2:0] i_7_fu_1253_p2;
reg   [2:0] i_7_reg_1718;
wire   [0:0] ap_CS_fsm_state77;
reg   [8:0] work_addr_1_reg_1723;
wire   [0:0] exitcond1_fu_1247_p2;
wire   [0:0] tmp_53_fu_1264_p1;
reg   [0:0] tmp_53_reg_1729;
wire   [0:0] icmp1_fu_1278_p2;
reg   [0:0] icmp1_reg_1734;
wire   [0:0] tmp_8_fu_1284_p2;
reg   [2:0] a_0_addr_2_reg_1743;
reg   [2:0] a_1_addr_2_reg_1748;
reg   [8:0] work_addr_2_reg_1753;
reg   [2:0] work_load_1_reg_1759;
reg   [2:0] a_0_addr_3_reg_1764;
reg   [2:0] a_1_addr_3_reg_1769;
wire   [0:0] icmp2_fu_1336_p2;
reg   [0:0] icmp2_reg_1774;
wire   [0:0] ap_CS_fsm_pp5_stage3;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire   [0:0] ap_CS_fsm_state21;
reg    ap_enable_reg_pp3_iter1;
wire   [0:0] ap_CS_fsm_pp3_stage8;
wire   [0:0] ap_CS_fsm_pp4_stage11;
reg    ap_enable_reg_pp5_iter1;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [2:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [2:0] work_d1;
reg   [2:0] i_reg_376;
wire   [0:0] exitcond7_fu_568_p2;
reg   [2:0] i_5_reg_388;
wire   [0:0] ap_CS_fsm_state76;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] wmax_phi_fu_404_p4;
reg   [31:0] r_1_phi_fu_415_p4;
reg   [2:0] j_reg_422;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
reg   [2:0] i_2_phi_fu_437_p4;
reg   [2:0] i_3_phi_fu_448_p4;
reg   [2:0] i_4_reg_455;
wire   [0:0] ap_CS_fsm_state92;
wire   [63:0] tmp_fu_580_p1;
wire   [63:0] tmp_30_fu_632_p3;
wire   [63:0] tmp_11_fu_620_p1;
wire   [63:0] tmp_42_fu_654_p1;
wire  signed [63:0] tmp_60_fu_689_p1;
wire  signed [63:0] tmp_56_fu_869_p1;
wire  signed [63:0] tmp_4_fu_935_p1;
wire   [63:0] tmp_66_fu_1008_p1;
wire  signed [63:0] tmp_68_fu_1037_p1;
wire   [63:0] tmp_70_fu_1083_p1;
wire   [63:0] tmp_74_fu_1169_p1;
wire   [63:0] tmp_72_fu_1227_p1;
wire   [63:0] tmp_76_fu_1237_p3;
wire   [63:0] tmp_s_fu_1259_p1;
wire   [63:0] tmp_62_fu_1302_p1;
wire   [63:0] tmp_10_fu_1290_p1;
wire   [63:0] tmp_64_fu_1320_p1;
reg   [31:0] r_fu_120;
wire   [31:0] r_2_fu_850_p3;
wire   [0:0] ap_CS_fsm_pp5_stage0;
reg   [31:0] a_0_Addr_A_orig;
wire   [31:0] a_load_2_phi_fu_1050_p3;
wire   [0:0] ap_CS_fsm_pp4_stage2;
wire   [31:0] a_load_4_0_phi_fu_1342_p3;
wire   [0:0] ap_CS_fsm_pp5_stage4;
wire   [0:0] ap_CS_fsm_pp5_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage7;
wire   [0:0] ap_CS_fsm_pp5_stage8;
wire   [0:0] ap_CS_fsm_pp5_stage10;
wire   [0:0] ap_CS_fsm_pp5_stage11;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] grp_fu_467_p0;
reg   [31:0] grp_fu_467_p1;
wire   [0:0] ap_CS_fsm_pp4_stage9;
reg   [31:0] grp_fu_471_p0;
reg   [31:0] grp_fu_471_p1;
reg   [31:0] grp_fu_485_p0;
wire   [0:0] ap_CS_fsm_pp3_stage2;
wire   [0:0] ap_CS_fsm_state61;
reg   [31:0] grp_fu_495_p0;
wire   [3:0] tmp_7_fu_612_p3;
wire   [3:0] tmp_16_fu_626_p2;
wire   [3:0] tmp_40_fu_646_p3;
wire   [1:0] tmp_49_fu_660_p4;
wire   [32:0] tmp_59_fu_682_p3;
wire   [31:0] n_assign_1_to_int_fu_701_p1;
wire   [7:0] tmp_34_fu_705_p4;
wire   [22:0] tmp_61_fu_715_p1;
wire   [0:0] notrhs_fu_725_p2;
wire   [0:0] notlhs_fu_719_p2;
wire   [0:0] tmp_36_fu_731_p2;
wire   [0:0] grp_fu_495_p2;
wire   [31:0] f_neg_i_fu_743_p2;
wire   [0:0] tmp_38_fu_737_p2;
wire   [31:0] f_1_fu_749_p1;
wire   [31:0] w_3_to_int_fu_761_p1;
wire   [31:0] wmax_to_int_fu_778_p1;
wire   [7:0] tmp_39_fu_764_p4;
wire   [22:0] tmp_63_fu_774_p1;
wire   [0:0] notrhs3_fu_802_p2;
wire   [0:0] notlhs3_fu_796_p2;
wire   [7:0] tmp_41_fu_782_p4;
wire   [22:0] tmp_77_fu_792_p1;
wire   [0:0] notrhs4_fu_820_p2;
wire   [0:0] notlhs4_fu_814_p2;
wire   [0:0] tmp_43_fu_808_p2;
wire   [0:0] tmp_44_fu_826_p2;
wire   [0:0] tmp_45_fu_832_p2;
wire   [0:0] tmp_46_fu_500_p2;
wire   [32:0] tmp_55_fu_862_p3;
wire   [31:0] pivot_to_int_fu_875_p1;
wire   [7:0] tmp_9_fu_879_p4;
wire   [22:0] tmp_57_fu_889_p1;
wire   [0:0] notrhs1_fu_899_p2;
wire   [0:0] notlhs1_fu_893_p2;
wire   [0:0] tmp_17_fu_905_p2;
wire   [31:0] f_neg_i1_fu_917_p2;
wire   [0:0] tmp_28_fu_911_p2;
wire   [31:0] f_fu_923_p1;
wire   [63:0] tmp_5_to_int_fu_939_p1;
wire   [10:0] tmp_29_fu_942_p4;
wire   [51:0] tmp_58_fu_952_p1;
wire   [0:0] notrhs2_fu_962_p2;
wire   [0:0] notlhs2_fu_956_p2;
wire   [0:0] tmp_31_fu_968_p2;
wire   [0:0] tmp_32_fu_505_p2;
wire   [3:0] tmp_65_fu_1000_p3;
wire   [1:0] tmp_83_fu_1014_p4;
wire   [32:0] tmp_67_fu_1030_p3;
wire   [0:0] tmp_84_fu_1071_p1;
wire   [3:0] tmp_69_fu_1075_p3;
wire   [1:0] tmp_85_fu_1089_p4;
wire   [3:0] tmp_73_fu_1162_p3;
wire   [31:0] w_1_to_int_fu_1175_p1;
wire   [7:0] tmp_48_fu_1178_p4;
wire   [22:0] tmp_86_fu_1188_p1;
wire   [0:0] notrhs5_fu_1198_p2;
wire   [0:0] notlhs5_fu_1192_p2;
wire   [0:0] tmp_50_fu_1204_p2;
wire   [31:0] tmp_18_neg_fu_1216_p2;
wire   [3:0] tmp_75_fu_1232_p2;
wire   [1:0] tmp_54_fu_1268_p4;
wire   [3:0] tmp_78_fu_1295_p3;
wire   [0:0] tmp_79_fu_1308_p1;
wire   [3:0] tmp_80_fu_1312_p3;
wire   [1:0] tmp_81_fu_1326_p4;
reg   [4:0] grp_fu_495_opcode;
reg   [69:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 70'b1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 3 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3hbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_467_p0),
    .din1(grp_fu_467_p1),
    .ce(1'b1),
    .dout(grp_fu_467_p2)
);

minver_hwa_fsub_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3hbi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_471_p0),
    .din1(grp_fu_471_p1),
    .ce(1'b1),
    .dout(grp_fu_471_p2)
);

minver_hwa_fmul_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3ibs_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_1_reg_1632),
    .din1(a_0_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

minver_hwa_fmul_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3ibs_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_1_reg_1632),
    .din1(a_1_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_480_p2)
);

minver_hwa_fdiv_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3jbC_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_485_p0),
    .din1(reg_527),
    .ce(1'b1),
    .dout(grp_fu_485_p2)
);

minver_hwa_fpext_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_kbM_U6(
    .din0(api_reg_1482),
    .dout(tmp_5_fu_492_p1)
);

minver_hwa_fcmp_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3lbW_U7(
    .din0(grp_fu_495_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_495_opcode),
    .dout(grp_fu_495_p2)
);

minver_hwa_fcmp_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3lbW_U8(
    .din0(w_3_reg_1448),
    .din1(wmax_phi_fu_404_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_46_fu_500_p2)
);

minver_hwa_dcmp_6mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6mb6_U9(
    .din0(tmp_5_reg_1487),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_32_fu_505_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_676_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_590_p3))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_676_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_590_p3)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_676_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond4_fu_1059_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond4_reg_1558) & (1'b1 == ap_CS_fsm_pp3_stage8))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_pp3_stage8) & ~(1'b0 == exitcond4_reg_1558)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_1136_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1603) & (1'b1 == ap_CS_fsm_pp4_stage11))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp4_stage11) & ~(1'b0 == exitcond3_reg_1603)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == tmp_8_fu_1284_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state77) & (1'b0 == exitcond1_fu_1247_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage12))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state77) & (1'b0 == exitcond1_fu_1247_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage12) & ~(1'b0 == tmp_8_reg_1739)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_reg_1558) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_reg_433 <= i_8_reg_1562;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_433 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_3_reg_444 <= ap_const_lv3_0;
    end else if (((1'b0 == exitcond3_reg_1603) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_reg_444 <= i_9_reg_1607;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_590_p3))) begin
        i_4_reg_455 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        i_4_reg_455 <= i_7_reg_1718;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_388 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        i_5_reg_388 <= k_reg_1371;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_568_p2))) begin
        i_reg_376 <= i_1_fu_574_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_376 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1512))) begin
        j_reg_422 <= j_1_reg_1516;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_422 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_590_p3))) begin
        r_1_reg_412 <= i_5_cast_fu_604_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1429 == 1'b0))) begin
        r_1_reg_412 <= i_6_reg_1443;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) begin
        r_fu_120 <= r_2_fu_850_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_fu_120 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        reg_533 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_533 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_590_p3))) begin
        wmax_reg_400 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) begin
        wmax_reg_400 <= wmax_1_fu_844_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_0_addr_10_reg_1649[2 : 1] <= tmp_72_fu_1227_p1[2 : 1];
        a_1_addr_10_reg_1654[2 : 1] <= tmp_72_fu_1227_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_590_p3))) begin
        a_0_addr_11_reg_1387[2 : 1] <= tmp_30_fu_632_p3[2 : 1];
        a_0_addr_7_reg_1414 <= tmp_42_fu_654_p1;
        a_0_addr_9_reg_1392[2 : 1] <= tmp_11_fu_620_p1[2 : 1];
        a_1_addr_11_reg_1397[2 : 1] <= tmp_30_fu_632_p3[2 : 1];
        a_1_addr_7_reg_1419 <= tmp_42_fu_654_p1;
        a_1_addr_9_reg_1402[2 : 1] <= tmp_11_fu_620_p1[2 : 1];
        i_5_cast_reg_1376[2 : 0] <= i_5_cast_fu_604_p1[2 : 0];
        icmp_reg_1424 <= icmp_fu_670_p2;
        tmp_35_reg_1407 <= tmp_35_fu_642_p1;
        tmp_3_reg_1382[2 : 0] <= tmp_3_fu_608_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_0_addr_12_reg_1669[2 : 1] <= tmp_76_fu_1237_p3[2 : 1];
        a_1_addr_12_reg_1674[2 : 1] <= tmp_76_fu_1237_p3[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == tmp_8_fu_1284_p2))) begin
        a_0_addr_2_reg_1743 <= tmp_62_fu_1302_p1;
        a_1_addr_2_reg_1748 <= tmp_62_fu_1302_p1;
        work_addr_2_reg_1753[2 : 0] <= tmp_10_fu_1290_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1739))) begin
        a_0_addr_3_reg_1764 <= tmp_64_fu_1320_p1;
        a_1_addr_3_reg_1769 <= tmp_64_fu_1320_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == exitcond5_fu_984_p2))) begin
        a_0_addr_4_reg_1526 <= tmp_66_fu_1008_p1;
        a_1_addr_4_reg_1531 <= tmp_66_fu_1008_p1;
        icmp3_reg_1536 <= icmp3_fu_1024_p2;
        tmp_82_reg_1521 <= tmp_82_fu_996_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_1059_p2))) begin
        a_0_addr_5_reg_1567 <= tmp_70_fu_1083_p1;
        a_1_addr_5_reg_1572 <= tmp_70_fu_1083_p1;
        icmp4_reg_1577 <= icmp4_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_addr_6_reg_1542 <= tmp_68_fu_1037_p1;
        a_1_addr_6_reg_1547 <= tmp_68_fu_1037_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1136_p2) & (1'b0 == tmp_15_fu_1148_p2))) begin
        a_0_addr_8_reg_1622 <= tmp_74_fu_1169_p1;
        a_1_addr_8_reg_1627 <= tmp_74_fu_1169_p1;
        tmp_71_reg_1616[3 : 1] <= tmp_71_fu_1154_p3[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_24_reg_1587) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_0_load_10_reg_1679 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_2_reg_1595) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_1_load_11_reg_1684 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == exitcond4_reg_1558))) begin
        a_load_5_phi_reg_1582 <= a_load_5_phi_fu_1105_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429 <= exitcond6_reg_1429;
        ap_pipeline_reg_pp1_iter1_r_1_reg_412 <= r_1_reg_412;
        exitcond6_reg_1429 <= exitcond6_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429;
        ap_pipeline_reg_pp1_iter2_r_1_reg_412 <= ap_pipeline_reg_pp1_iter1_r_1_reg_412;
        ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429;
        ap_pipeline_reg_pp1_iter3_r_1_reg_412 <= ap_pipeline_reg_pp1_iter2_r_1_reg_412;
        ap_pipeline_reg_pp1_iter3_w_3_reg_1448 <= w_3_reg_1448;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567 <= a_0_addr_5_reg_1567;
        ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572 <= a_1_addr_5_reg_1572;
        ap_pipeline_reg_pp3_iter1_icmp4_reg_1577 <= icmp4_reg_1577;
        exitcond4_reg_1558 <= exitcond4_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622 <= a_0_addr_8_reg_1622;
        ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627 <= a_1_addr_8_reg_1627;
        ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612 <= tmp_15_reg_1612;
        exitcond3_reg_1603 <= exitcond3_fu_1136_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage3)) begin
        ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640 <= tmp_52_reg_1640;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        api_reg_1482 <= api_fu_927_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        exitcond5_reg_1512 <= exitcond5_fu_984_p2;
        j_1_reg_1516 <= j_1_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_676_p2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_6_reg_1443 <= i_6_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_7_reg_1718 <= i_7_fu_1253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        i_8_reg_1562 <= i_8_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_1607 <= i_9_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (1'b0 == exitcond1_fu_1247_p2))) begin
        icmp1_reg_1734 <= icmp1_fu_1278_p2;
        tmp_53_reg_1729 <= tmp_53_fu_1264_p1;
        work_addr_1_reg_1723[2 : 0] <= tmp_s_fu_1259_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        icmp2_reg_1774 <= icmp2_fu_1336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_1371 <= k_fu_598_p2;
        tmp_2_reg_1367 <= i_5_reg_388[ap_const_lv32_2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_load_1_reg_1466 <= r_fu_120;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1429 == 1'b0)) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_527 <= grp_fu_510_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_24_reg_1587)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == tmp_20_1_reg_1591)))) begin
        reg_540 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_2_reg_1595)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == tmp_20_3_reg_1599)))) begin
        reg_546 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_24_reg_1587) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_1_reg_1591) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)))) begin
        reg_552 <= grp_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_2_reg_1595) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_3_reg_1599) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)))) begin
        reg_557 <= grp_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1739)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage12)))) begin
        reg_562 <= grp_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1136_p2))) begin
        tmp_15_reg_1612 <= tmp_15_fu_1148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640))) begin
        tmp_19_reg_1709 <= grp_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_20_1_reg_1591 <= tmp_20_1_fu_1118_p2;
        tmp_20_2_reg_1595 <= tmp_20_2_fu_1124_p2;
        tmp_20_3_reg_1599 <= tmp_20_3_fu_1130_p2;
        tmp_24_reg_1587 <= tmp_24_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_1_reg_1591) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_22_1_reg_1699 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == tmp_20_2_reg_1595))) begin
        tmp_22_2_reg_1694 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_3_reg_1599) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_22_3_reg_1704 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_24_reg_1587) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        tmp_25_reg_1689 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429)) begin
        tmp_47_reg_1455 <= tmp_47_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        tmp_52_reg_1640 <= tmp_52_fu_1210_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_5_reg_1487 <= tmp_5_fu_492_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
        tmp_8_reg_1739 <= tmp_8_fu_1284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        w_1_reg_1632 <= grp_fu_510_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429)) begin
        w_3_reg_1448 <= w_3_fu_753_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_reg_1552 <= w_fu_1043_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_2_reg_1367) & (1'b0 == tmp_33_fu_974_p2) & (1'b0 == tmp_1_fu_980_p2))) begin
        work_addr_3_reg_1500[2 : 0] <= tmp_3_reg_1382[2 : 0];
        work_addr_4_reg_1506 <= tmp_4_fu_935_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1739))) begin
        work_load_1_reg_1759 <= work_q0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Addr_A_orig = a_0_addr_3_reg_1764;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)))) begin
        a_0_Addr_A_orig = a_0_addr_2_reg_1743;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        a_0_Addr_A_orig = tmp_64_fu_1320_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_0_Addr_A_orig = tmp_62_fu_1302_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_0_Addr_A_orig = a_0_addr_7_reg_1414;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_0_Addr_A_orig = a_0_addr_12_reg_1669;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        a_0_Addr_A_orig = a_0_addr_10_reg_1649;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_0_Addr_A_orig = tmp_76_fu_1237_p3;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_0_Addr_A_orig = tmp_72_fu_1227_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        a_0_Addr_A_orig = a_0_addr_11_reg_1387;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_0_Addr_A_orig = a_0_addr_9_reg_1392;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_0_Addr_A_orig = tmp_74_fu_1169_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        a_0_Addr_A_orig = ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        a_0_Addr_A_orig = tmp_70_fu_1083_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_0_Addr_A_orig = a_0_addr_6_reg_1542;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Addr_A_orig = a_0_addr_4_reg_1526;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_Addr_A_orig = tmp_68_fu_1037_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_0_Addr_A_orig = tmp_66_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_0_Addr_A_orig = tmp_56_fu_869_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_0_Addr_A_orig = tmp_60_fu_689_p1;
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Din_A = reg_562;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        a_0_Din_A = a_load_4_0_phi_fu_1342_p3;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Din_A = tmp_19_reg_1709;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        a_0_Din_A = reg_552;
    end else if (((1'b1 == ap_CS_fsm_state76) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)))) begin
        a_0_Din_A = grp_fu_485_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_0_Din_A = w_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Din_A = a_load_2_phi_fu_1050_p3;
    end else begin
        a_0_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == icmp3_reg_1536)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1512) & ~(1'b0 == icmp3_reg_1536)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_icmp4_reg_1577)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_24_reg_1587) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_1_reg_1591) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) & ~(1'b0 == icmp_reg_1424) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640)) | (~(1'b0 == icmp_reg_1424) & (1'b1 == ap_CS_fsm_state76)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage3) & ~(1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage4) & ~(1'b0 == icmp2_reg_1774)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage6) & ~(1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & ~(1'b0 == icmp2_reg_1774) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage9) & ~(1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & ~(1'b0 == icmp2_reg_1774) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage12) & ~(1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & ~(1'b0 == icmp2_reg_1774) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_WEN_A = ap_const_lv4_F;
    end else begin
        a_0_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Addr_A_orig = a_1_addr_3_reg_1769;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)))) begin
        a_1_Addr_A_orig = a_1_addr_2_reg_1748;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        a_1_Addr_A_orig = tmp_64_fu_1320_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_1_Addr_A_orig = tmp_62_fu_1302_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        a_1_Addr_A_orig = a_1_addr_7_reg_1419;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_1_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_1_Addr_A_orig = a_1_addr_12_reg_1674;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        a_1_Addr_A_orig = a_1_addr_10_reg_1654;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_1_Addr_A_orig = tmp_76_fu_1237_p3;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_1_Addr_A_orig = tmp_72_fu_1227_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        a_1_Addr_A_orig = a_1_addr_11_reg_1397;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_1_Addr_A_orig = a_1_addr_9_reg_1402;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_1_Addr_A_orig = tmp_74_fu_1169_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        a_1_Addr_A_orig = ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        a_1_Addr_A_orig = tmp_70_fu_1083_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_1_Addr_A_orig = a_1_addr_6_reg_1547;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Addr_A_orig = a_1_addr_4_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_1_Addr_A_orig = tmp_68_fu_1037_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_1_Addr_A_orig = tmp_66_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_1_Addr_A_orig = tmp_56_fu_869_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_1_Addr_A_orig = tmp_60_fu_689_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Din_A = reg_562;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        a_1_Din_A = a_load_4_0_phi_fu_1342_p3;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_1_Din_A = tmp_19_reg_1709;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        a_1_Din_A = reg_557;
    end else if (((1'b1 == ap_CS_fsm_state76) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)))) begin
        a_1_Din_A = grp_fu_485_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_1_Din_A = w_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Din_A = a_load_2_phi_fu_1050_p3;
    end else begin
        a_1_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & (1'b0 == icmp3_reg_1536)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1512) & (1'b0 == icmp3_reg_1536)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == ap_pipeline_reg_pp3_iter1_icmp4_reg_1577)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_2_reg_1595) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)) | ((1'b0 == tmp_52_reg_1640) & (1'b0 == tmp_20_3_reg_1599) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) & (1'b0 == icmp_reg_1424) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640)) | ((1'b0 == icmp_reg_1424) & (1'b1 == ap_CS_fsm_state76)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == icmp2_reg_1774)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b0 == icmp2_reg_1774) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage9) & (1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b0 == icmp2_reg_1774) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage12) & (1'b0 == icmp1_reg_1734)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == icmp2_reg_1774) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1367) | ~(1'b0 == tmp_33_fu_974_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1367) | ~(1'b0 == tmp_33_fu_974_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_467_p0 = reg_540;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_467_p0 = a_0_load_10_reg_1679;
        end else begin
            grp_fu_467_p0 = 'bx;
        end
    end else begin
        grp_fu_467_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_467_p1 = tmp_22_1_reg_1699;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_467_p1 = tmp_25_reg_1689;
        end else begin
            grp_fu_467_p1 = 'bx;
        end
    end else begin
        grp_fu_467_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_471_p0 = reg_546;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_471_p0 = a_1_load_11_reg_1684;
        end else begin
            grp_fu_471_p0 = 'bx;
        end
    end else begin
        grp_fu_471_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_471_p1 = tmp_22_3_reg_1704;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_471_p1 = tmp_22_2_reg_1694;
        end else begin
            grp_fu_471_p1 = 'bx;
        end
    end else begin
        grp_fu_471_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_485_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_485_p0 = tmp_18_fu_1222_p1;
    end else if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        grp_fu_485_p0 = a_load_5_phi_reg_1582;
    end else begin
        grp_fu_485_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1603) & (1'b0 == tmp_15_reg_1612) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_495_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        grp_fu_495_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_495_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_495_p0 = w_1_reg_1632;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_enable_reg_pp1_iter2))) begin
        grp_fu_495_p0 = reg_527;
    end else begin
        grp_fu_495_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_reg_1558) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_phi_fu_437_p4 = i_8_reg_1562;
    end else begin
        i_2_phi_fu_437_p4 = i_2_reg_433;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond3_reg_1603) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_phi_fu_448_p4 = i_9_reg_1607;
    end else begin
        i_3_phi_fu_448_p4 = i_3_reg_444;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1429 == 1'b0))) begin
        r_1_phi_fu_415_p4 = i_6_reg_1443;
    end else begin
        r_1_phi_fu_415_p4 = r_1_reg_412;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) begin
        wmax_phi_fu_404_p4 = wmax_1_fu_844_p3;
    end else begin
        wmax_phi_fu_404_p4 = wmax_reg_400;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_address0 = work_addr_1_reg_1723;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        work_address0 = tmp_10_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_address0 = work_addr_4_reg_1506;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address0 = tmp_3_reg_1382;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_580_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_address1 = work_addr_2_reg_1753;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        work_address1 = work_addr_1_reg_1723;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address1 = work_addr_3_reg_1500;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = tmp_4_fu_935_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_d0 = work_load_1_reg_1759;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_d0 = reg_533;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_376;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_d1 = reg_533;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_568_p2)) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1739) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1739)))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond7_fu_568_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == tmp_2_fu_590_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter4) & ~(1'b1 == ap_enable_reg_pp1_iter3)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_676_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_676_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~(1'b0 == tmp_2_reg_1367) | ~(1'b0 == tmp_33_fu_974_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1367) & (1'b0 == tmp_33_fu_974_p2) & ~(1'b0 == tmp_1_fu_980_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if ((1'b0 == exitcond5_fu_984_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond4_fu_1059_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage2;
        end
        ap_ST_fsm_pp3_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage3;
        end
        ap_ST_fsm_pp3_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage4;
        end
        ap_ST_fsm_pp3_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage5;
        end
        ap_ST_fsm_pp3_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage6;
        end
        ap_ST_fsm_pp3_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage7;
        end
        ap_ST_fsm_pp3_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage8;
        end
        ap_ST_fsm_pp3_stage8 : begin
            if (~((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b1 == ap_enable_reg_pp3_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_1136_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage7;
        end
        ap_ST_fsm_pp4_stage7 : begin
            if (~((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1) & ~(1'b1 == ap_enable_reg_pp4_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage11;
        end
        ap_ST_fsm_pp4_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state77 : begin
            if (~(1'b0 == exitcond1_fu_1247_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage1;
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == tmp_8_fu_1284_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage3;
        end
        ap_ST_fsm_pp5_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage4;
        end
        ap_ST_fsm_pp5_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage5;
        end
        ap_ST_fsm_pp5_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage6;
        end
        ap_ST_fsm_pp5_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage7;
        end
        ap_ST_fsm_pp5_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage8;
        end
        ap_ST_fsm_pp5_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage9;
        end
        ap_ST_fsm_pp5_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage10;
        end
        ap_ST_fsm_pp5_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage11;
        end
        ap_ST_fsm_pp5_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage12;
        end
        ap_ST_fsm_pp5_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Rst_A = ap_rst;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Rst_A = ap_rst;

assign a_load_2_phi_fu_1050_p3 = ((icmp3_reg_1536[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign a_load_4_0_phi_fu_1342_p3 = ((icmp2_fu_1336_p2[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign a_load_5_phi_fu_1105_p3 = ((icmp4_reg_1577[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp3_stage8 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_38];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_39];

assign ap_CS_fsm_pp5_stage10 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_pp5_stage11 = ap_CS_fsm[ap_const_lv32_43];

assign ap_CS_fsm_pp5_stage12 = ap_CS_fsm[ap_const_lv32_44];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[ap_const_lv32_3A];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[ap_const_lv32_3B];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state61 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state76 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_state77 = ap_CS_fsm[ap_const_lv32_37];

assign ap_CS_fsm_state92 = ap_CS_fsm[ap_const_lv32_45];

assign ap_return = ap_const_lv32_1;

assign api_fu_927_p3 = ((tmp_28_fu_911_p2[0:0] === 1'b1) ? reg_527 : f_fu_923_p1);

assign exitcond1_fu_1247_p2 = ((i_4_reg_455 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond3_fu_1136_p2 = ((i_3_phi_fu_448_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond4_fu_1059_p2 = ((i_2_phi_fu_437_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond5_fu_984_p2 = ((j_reg_422 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond6_fu_676_p2 = ((r_1_phi_fu_415_p4 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign exitcond7_fu_568_p2 = ((i_reg_376 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign f_1_fu_749_p1 = f_neg_i_fu_743_p2;

assign f_fu_923_p1 = f_neg_i1_fu_917_p2;

assign f_neg_i1_fu_917_p2 = (pivot_to_int_fu_875_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_743_p2 = (n_assign_1_to_int_fu_701_p1 ^ ap_const_lv32_80000000);

assign grp_fu_510_p3 = ((icmp_reg_1424[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign grp_fu_520_p3 = ((icmp1_reg_1734[0:0] === 1'b1) ? a_0_Dout_A : a_1_Dout_A);

assign i_1_fu_574_p2 = (i_reg_376 + ap_const_lv3_1);

assign i_5_cast_fu_604_p1 = i_5_reg_388;

assign i_6_fu_695_p2 = (ap_const_lv32_1 + r_1_phi_fu_415_p4);

assign i_7_fu_1253_p2 = (i_4_reg_455 + ap_const_lv3_1);

assign i_8_fu_1065_p2 = (i_2_phi_fu_437_p4 + ap_const_lv3_1);

assign i_9_fu_1142_p2 = (i_3_phi_fu_448_p4 + ap_const_lv3_1);

assign icmp1_fu_1278_p2 = ((tmp_54_fu_1268_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp2_fu_1336_p2 = ((tmp_81_fu_1326_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp3_fu_1024_p2 = ((tmp_83_fu_1014_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp4_fu_1099_p2 = ((tmp_85_fu_1089_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign icmp_fu_670_p2 = ((tmp_49_fu_660_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign j_1_fu_990_p2 = (j_reg_422 + ap_const_lv3_1);

assign k_fu_598_p2 = (i_5_reg_388 + ap_const_lv3_1);

assign n_assign_1_to_int_fu_701_p1 = reg_527;

assign notlhs1_fu_893_p2 = ((tmp_9_fu_879_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_956_p2 = ((tmp_29_fu_942_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_796_p2 = ((tmp_39_fu_764_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_814_p2 = ((tmp_41_fu_782_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_1192_p2 = ((tmp_48_fu_1178_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_719_p2 = ((tmp_34_fu_705_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_899_p2 = ((tmp_57_fu_889_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_962_p2 = ((tmp_58_fu_952_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_802_p2 = ((tmp_63_fu_774_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_820_p2 = ((tmp_77_fu_792_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1198_p2 = ((tmp_86_fu_1188_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_725_p2 = ((tmp_61_fu_715_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign pivot_to_int_fu_875_p1 = reg_527;

assign r_2_fu_850_p3 = ((tmp_47_reg_1455[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_r_1_reg_412 : r_fu_120);

assign tmp_10_fu_1290_p1 = work_q1;

assign tmp_11_fu_620_p1 = tmp_7_fu_612_p3;

assign tmp_15_fu_1148_p2 = ((i_3_phi_fu_448_p4 == i_5_reg_388) ? 1'b1 : 1'b0);

assign tmp_16_fu_626_p2 = (tmp_7_fu_612_p3 | ap_const_lv4_1);

assign tmp_17_fu_905_p2 = (notrhs1_fu_899_p2 | notlhs1_fu_893_p2);

assign tmp_18_fu_1222_p1 = tmp_18_neg_fu_1216_p2;

assign tmp_18_neg_fu_1216_p2 = (w_1_to_int_fu_1175_p1 ^ ap_const_lv32_80000000);

assign tmp_1_fu_980_p2 = ((r_load_1_reg_1466 == i_5_cast_reg_1376) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_1118_p2 = ((i_5_reg_388 == ap_const_lv3_1) ? 1'b1 : 1'b0);

assign tmp_20_2_fu_1124_p2 = ((i_5_reg_388 == ap_const_lv3_2) ? 1'b1 : 1'b0);

assign tmp_20_3_fu_1130_p2 = ((i_5_reg_388 == ap_const_lv3_3) ? 1'b1 : 1'b0);

assign tmp_24_fu_1112_p2 = ((i_5_reg_388 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_28_fu_911_p2 = (tmp_17_fu_905_p2 & grp_fu_495_p2);

assign tmp_29_fu_942_p4 = {{tmp_5_to_int_fu_939_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_2_fu_590_p3 = i_5_reg_388[ap_const_lv32_2];

assign tmp_30_fu_632_p3 = {{ap_const_lv60_0}, {tmp_16_fu_626_p2}};

assign tmp_31_fu_968_p2 = (notrhs2_fu_962_p2 | notlhs2_fu_956_p2);

assign tmp_33_fu_974_p2 = (tmp_31_fu_968_p2 & tmp_32_fu_505_p2);

assign tmp_34_fu_705_p4 = {{n_assign_1_to_int_fu_701_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_35_fu_642_p1 = i_5_reg_388[0:0];

assign tmp_36_fu_731_p2 = (notrhs_fu_725_p2 | notlhs_fu_719_p2);

assign tmp_38_fu_737_p2 = (tmp_36_fu_731_p2 & grp_fu_495_p2);

assign tmp_39_fu_764_p4 = {{w_3_to_int_fu_761_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_3_fu_608_p1 = i_5_reg_388;

assign tmp_40_fu_646_p3 = {{i_5_reg_388}, {tmp_35_fu_642_p1}};

assign tmp_41_fu_782_p4 = {{wmax_to_int_fu_778_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_42_fu_654_p1 = tmp_40_fu_646_p3;

assign tmp_43_fu_808_p2 = (notrhs3_fu_802_p2 | notlhs3_fu_796_p2);

assign tmp_44_fu_826_p2 = (notrhs4_fu_820_p2 | notlhs4_fu_814_p2);

assign tmp_45_fu_832_p2 = (tmp_43_fu_808_p2 & tmp_44_fu_826_p2);

assign tmp_47_fu_838_p2 = (tmp_45_fu_832_p2 & tmp_46_fu_500_p2);

assign tmp_48_fu_1178_p4 = {{w_1_to_int_fu_1175_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_49_fu_660_p4 = {{i_5_reg_388[ap_const_lv32_2 : ap_const_lv32_1]}};

assign tmp_4_fu_935_p1 = $signed(r_load_1_reg_1466);

assign tmp_50_fu_1204_p2 = (notrhs5_fu_1198_p2 | notlhs5_fu_1192_p2);

assign tmp_52_fu_1210_p2 = (tmp_50_fu_1204_p2 & grp_fu_495_p2);

assign tmp_53_fu_1264_p1 = i_4_reg_455[0:0];

assign tmp_54_fu_1268_p4 = {{i_4_reg_455[ap_const_lv32_2 : ap_const_lv32_1]}};

assign tmp_55_fu_862_p3 = {{r_fu_120}, {tmp_35_reg_1407}};

assign tmp_56_fu_869_p1 = $signed(tmp_55_fu_862_p3);

assign tmp_57_fu_889_p1 = pivot_to_int_fu_875_p1[22:0];

assign tmp_58_fu_952_p1 = tmp_5_to_int_fu_939_p1[51:0];

assign tmp_59_fu_682_p3 = {{r_1_phi_fu_415_p4}, {tmp_35_reg_1407}};

assign tmp_5_to_int_fu_939_p1 = tmp_5_reg_1487;

assign tmp_60_fu_689_p1 = $signed(tmp_59_fu_682_p3);

assign tmp_61_fu_715_p1 = n_assign_1_to_int_fu_701_p1[22:0];

assign tmp_62_fu_1302_p1 = tmp_78_fu_1295_p3;

assign tmp_63_fu_774_p1 = w_3_to_int_fu_761_p1[22:0];

assign tmp_64_fu_1320_p1 = tmp_80_fu_1312_p3;

assign tmp_65_fu_1000_p3 = {{i_5_reg_388}, {tmp_82_fu_996_p1}};

assign tmp_66_fu_1008_p1 = tmp_65_fu_1000_p3;

assign tmp_67_fu_1030_p3 = {{r_fu_120}, {tmp_82_reg_1521}};

assign tmp_68_fu_1037_p1 = $signed(tmp_67_fu_1030_p3);

assign tmp_69_fu_1075_p3 = {{i_5_reg_388}, {tmp_84_fu_1071_p1}};

assign tmp_70_fu_1083_p1 = tmp_69_fu_1075_p3;

assign tmp_71_fu_1154_p3 = {{i_3_phi_fu_448_p4}, {1'b0}};

assign tmp_72_fu_1227_p1 = tmp_71_reg_1616;

assign tmp_73_fu_1162_p3 = {{i_3_phi_fu_448_p4}, {tmp_35_reg_1407}};

assign tmp_74_fu_1169_p1 = tmp_73_fu_1162_p3;

assign tmp_75_fu_1232_p2 = (tmp_71_reg_1616 | ap_const_lv4_1);

assign tmp_76_fu_1237_p3 = {{ap_const_lv60_0}, {tmp_75_fu_1232_p2}};

assign tmp_77_fu_792_p1 = wmax_to_int_fu_778_p1[22:0];

assign tmp_78_fu_1295_p3 = {{work_q1}, {tmp_53_reg_1729}};

assign tmp_79_fu_1308_p1 = reg_533[0:0];

assign tmp_7_fu_612_p3 = {{i_5_reg_388}, {1'b0}};

assign tmp_80_fu_1312_p3 = {{reg_533}, {tmp_79_fu_1308_p1}};

assign tmp_81_fu_1326_p4 = {{reg_533[ap_const_lv32_2 : ap_const_lv32_1]}};

assign tmp_82_fu_996_p1 = j_reg_422[0:0];

assign tmp_83_fu_1014_p4 = {{j_reg_422[ap_const_lv32_2 : ap_const_lv32_1]}};

assign tmp_84_fu_1071_p1 = i_2_phi_fu_437_p4[0:0];

assign tmp_85_fu_1089_p4 = {{i_2_phi_fu_437_p4[ap_const_lv32_2 : ap_const_lv32_1]}};

assign tmp_86_fu_1188_p1 = w_1_to_int_fu_1175_p1[22:0];

assign tmp_8_fu_1284_p2 = ((work_q1 == i_4_reg_455) ? 1'b1 : 1'b0);

assign tmp_9_fu_879_p4 = {{pivot_to_int_fu_875_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_fu_580_p1 = i_reg_376;

assign tmp_s_fu_1259_p1 = i_4_reg_455;

assign w_1_to_int_fu_1175_p1 = w_1_reg_1632;

assign w_3_fu_753_p3 = ((tmp_38_fu_737_p2[0:0] === 1'b1) ? reg_527 : f_1_fu_749_p1);

assign w_3_to_int_fu_761_p1 = w_3_reg_1448;

assign w_fu_1043_p3 = ((icmp3_reg_1536[0:0] === 1'b1) ? reg_540 : reg_546);

assign wmax_1_fu_844_p3 = ((tmp_47_reg_1455[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_w_3_reg_1448 : wmax_reg_400);

assign wmax_to_int_fu_778_p1 = wmax_phi_fu_404_p4;

always @ (posedge ap_clk) begin
    i_5_cast_reg_1376[31:3] <= 29'b00000000000000000000000000000;
    tmp_3_reg_1382[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    a_0_addr_11_reg_1387[0] <= 1'b1;
    a_0_addr_9_reg_1392[0] <= 1'b0;
    a_1_addr_11_reg_1397[0] <= 1'b1;
    a_1_addr_9_reg_1402[0] <= 1'b0;
    work_addr_3_reg_1500[8:3] <= 6'b000000;
    tmp_71_reg_1616[0] <= 1'b0;
    a_0_addr_10_reg_1649[0] <= 1'b0;
    a_1_addr_10_reg_1654[0] <= 1'b0;
    a_0_addr_12_reg_1669[0] <= 1'b1;
    a_1_addr_12_reg_1674[0] <= 1'b1;
    work_addr_1_reg_1723[8:3] <= 6'b000000;
    work_addr_2_reg_1753[8:3] <= 6'b000000;
end

endmodule //minver_hwa
