-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity minver_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of minver_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=10,HLS_SYN_FF=2893,HLS_SYN_LUT=3587}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp3_stage4 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp3_stage5 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp3_stage6 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp3_stage7 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp3_stage8 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage6 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage7 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage8 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage9 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage10 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage11 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage2 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage3 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage4 : STD_LOGIC_VECTOR (69 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage5 : STD_LOGIC_VECTOR (69 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage6 : STD_LOGIC_VECTOR (69 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage7 : STD_LOGIC_VECTOR (69 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage8 : STD_LOGIC_VECTOR (69 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage9 : STD_LOGIC_VECTOR (69 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage10 : STD_LOGIC_VECTOR (69 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage11 : STD_LOGIC_VECTOR (69 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage12 : STD_LOGIC_VECTOR (69 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (69 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv64_3EB0C6F7A0B5ED8D : STD_LOGIC_VECTOR (63 downto 0) := "0011111010110000110001101111011110100000101101011110110110001101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wmax_reg_400 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter1_r_1_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_pipeline_reg_pp1_iter2_r_1_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_r_1_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_433 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_reg_444 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond6_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal work_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_533 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal work_q1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_pp4_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage4 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal exitcond3_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1612 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1640 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage7 : signal is "none";
    signal tmp_20_1_reg_1591 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_2_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_3_reg_1599 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_520_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_562 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage2 : signal is "none";
    signal tmp_8_reg_1739 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage6 : signal is "none";
    signal ap_CS_fsm_pp5_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage9 : signal is "none";
    signal ap_CS_fsm_pp5_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage12 : signal is "none";
    signal i_1_fu_574_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_2_fu_590_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal k_fu_598_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_1371 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_5_cast_fu_604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_cast_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1382 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_addr_11_reg_1387 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_9_reg_1392 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_11_reg_1397 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_9_reg_1402 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_35_fu_642_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_7_reg_1414 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_7_reg_1419 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1424 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_695_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal w_3_fu_753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_w_3_reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal wmax_1_fu_844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal r_load_1_reg_1466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal api_fu_927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal api_reg_1482 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_5_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1487 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_1_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_33_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal work_addr_3_reg_1500 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_addr_4_reg_1506 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond5_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal j_1_fu_990_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1516 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_82_fu_996_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1521 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_4_reg_1526 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_4_reg_1531 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp3_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_reg_1536 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_6_reg_1542 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_6_reg_1547 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_fu_1043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal exitcond4_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal i_8_fu_1065_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_1562 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal a_0_addr_5_reg_1567 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_5_reg_1572 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp4_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter1_icmp4_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_5_phi_fu_1105_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_5_phi_reg_1582 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal tmp_24_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal tmp_20_1_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_2_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_3_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_1142_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_9_reg_1607 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1154_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_71_reg_1616 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_0_addr_8_reg_1622 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_8_reg_1627 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_1_reg_1632 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_addr_10_reg_1649 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp4_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage5 : signal is "none";
    signal a_1_addr_10_reg_1654 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_12_reg_1669 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp4_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage6 : signal is "none";
    signal a_1_addr_12_reg_1674 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_load_10_reg_1679 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_11_reg_1684 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_2_reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_1_reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage8 : signal is "none";
    signal tmp_22_3_reg_1704 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_1253_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_1718 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal work_addr_1_reg_1723 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1264_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_1729 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1734 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_2_reg_1743 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_2_reg_1748 : STD_LOGIC_VECTOR (2 downto 0);
    signal work_addr_2_reg_1753 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_load_1_reg_1759 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_3_reg_1764 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_3_reg_1769 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp2_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage3 : signal is "none";
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp3_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage8 : signal is "none";
    signal ap_CS_fsm_pp4_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage11 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal work_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce0 : STD_LOGIC;
    signal work_we0 : STD_LOGIC;
    signal work_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal work_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce1 : STD_LOGIC;
    signal work_we1 : STD_LOGIC;
    signal work_d1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_376 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond7_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_reg_388 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wmax_phi_fu_404_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_phi_fu_415_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_422 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_2_phi_fu_437_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_phi_fu_448_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_4_reg_455 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal tmp_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_632_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_fu_1169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_1237_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_1302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_1320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_2_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_2_phi_fu_1050_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal a_load_4_0_phi_fu_1342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage4 : signal is "none";
    signal ap_CS_fsm_pp5_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage5 : signal is "none";
    signal ap_CS_fsm_pp5_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage7 : signal is "none";
    signal ap_CS_fsm_pp5_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage8 : signal is "none";
    signal ap_CS_fsm_pp5_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage10 : signal is "none";
    signal ap_CS_fsm_pp5_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage11 : signal is "none";
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_467_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage9 : signal is "none";
    signal grp_fu_471_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_fu_495_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_612_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_626_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_40_fu_646_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_660_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_682_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal n_assign_1_to_int_fu_701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_705_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_715_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_1_fu_749_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_to_int_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal wmax_to_int_fu_778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_764_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_774_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_782_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_fu_792_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_862_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal pivot_to_int_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_879_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_889_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i1_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_to_int_fu_939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_942_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_58_fu_952_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs2_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_1000_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_1014_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_1030_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_84_fu_1071_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1075_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_1089_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_1162_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal w_1_to_int_fu_1175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1178_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_86_fu_1188_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_neg_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_1232_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_54_fu_1268_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_78_fu_1295_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1308_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1312_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_1326_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_495_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (69 downto 0);

    component minver_hwa_fsub_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fmul_3ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fdiv_3jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fpext_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component minver_hwa_fcmp_3lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_dcmp_6mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_work IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (2 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    work_U : component minver_hwa_work
    generic map (
        DataWidth => 3,
        AddressRange => 500,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => work_address0,
        ce0 => work_ce0,
        we0 => work_we0,
        d0 => work_d0,
        q0 => work_q0,
        address1 => work_address1,
        ce1 => work_ce1,
        we1 => work_we1,
        d1 => work_d1,
        q1 => work_q1);

    minver_hwa_fsub_3hbi_U1 : component minver_hwa_fsub_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_467_p0,
        din1 => grp_fu_467_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_467_p2);

    minver_hwa_fsub_3hbi_U2 : component minver_hwa_fsub_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_471_p0,
        din1 => grp_fu_471_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_471_p2);

    minver_hwa_fmul_3ibs_U3 : component minver_hwa_fmul_3ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => w_1_reg_1632,
        din1 => a_0_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_475_p2);

    minver_hwa_fmul_3ibs_U4 : component minver_hwa_fmul_3ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => w_1_reg_1632,
        din1 => a_1_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_480_p2);

    minver_hwa_fdiv_3jbC_U5 : component minver_hwa_fdiv_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_485_p0,
        din1 => reg_527,
        ce => ap_const_logic_1,
        dout => grp_fu_485_p2);

    minver_hwa_fpext_kbM_U6 : component minver_hwa_fpext_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => api_reg_1482,
        dout => tmp_5_fu_492_p1);

    minver_hwa_fcmp_3lbW_U7 : component minver_hwa_fcmp_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_495_p0,
        din1 => ap_const_lv32_0,
        opcode => grp_fu_495_opcode,
        dout => grp_fu_495_p2);

    minver_hwa_fcmp_3lbW_U8 : component minver_hwa_fcmp_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => w_3_reg_1448,
        din1 => wmax_phi_fu_404_p4,
        opcode => ap_const_lv5_2,
        dout => tmp_46_fu_500_p2);

    minver_hwa_dcmp_6mb6_U9 : component minver_hwa_dcmp_6mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_5_reg_1487,
        din1 => ap_const_lv64_3EB0C6F7A0B5ED8D,
        opcode => ap_const_lv5_5,
        dout => tmp_32_fu_505_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_676_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_590_p3))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_676_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_590_p3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_676_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond4_fu_1059_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond4_reg_1558) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage8))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and not((ap_const_lv1_0 = exitcond4_reg_1558))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and not((ap_const_lv1_0 = exitcond3_fu_1136_p2)))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage11))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage11) and not((ap_const_lv1_0 = exitcond3_reg_1603))))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and not((ap_const_lv1_0 = tmp_8_fu_1284_p2)))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state77) and (ap_const_lv1_0 = exitcond1_fu_1247_p2))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state77) and (ap_const_lv1_0 = exitcond1_fu_1247_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage12) and not((ap_const_lv1_0 = tmp_8_reg_1739))))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_2_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_reg_1558) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
                i_2_reg_433 <= i_8_reg_1562;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                i_2_reg_433 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_3_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                i_3_reg_444 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
                i_3_reg_444 <= i_9_reg_1607;
            end if; 
        end if;
    end process;

    i_4_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = tmp_2_fu_590_p3)))) then 
                i_4_reg_455 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state92))) then 
                i_4_reg_455 <= i_7_reg_1718;
            end if; 
        end if;
    end process;

    i_5_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_5_reg_388 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
                i_5_reg_388 <= k_reg_1371;
            end if; 
        end if;
    end process;

    i_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_568_p2))) then 
                i_reg_376 <= i_1_fu_574_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_376 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1512))) then 
                j_reg_422 <= j_1_reg_1516;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                j_reg_422 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    r_1_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_590_p3))) then 
                r_1_reg_412 <= i_5_cast_fu_604_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1429 = ap_const_lv1_0))) then 
                r_1_reg_412 <= i_6_reg_1443;
            end if; 
        end if;
    end process;

    r_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) then 
                r_fu_120 <= r_2_fu_850_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                r_fu_120 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
                reg_533 <= work_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
                reg_533 <= work_q0;
            end if; 
        end if;
    end process;

    wmax_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_590_p3))) then 
                wmax_reg_400 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) then 
                wmax_reg_400 <= wmax_1_fu_844_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then
                    a_0_addr_10_reg_1649(2 downto 1) <= tmp_72_fu_1227_p1(3 - 1 downto 0)(2 downto 1);
                    a_1_addr_10_reg_1654(2 downto 1) <= tmp_72_fu_1227_p1(3 - 1 downto 0)(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_590_p3))) then
                    a_0_addr_11_reg_1387(2 downto 1) <= tmp_30_fu_632_p3(3 - 1 downto 0)(2 downto 1);
                a_0_addr_7_reg_1414 <= tmp_42_fu_654_p1(3 - 1 downto 0);
                    a_0_addr_9_reg_1392(2 downto 1) <= tmp_11_fu_620_p1(3 - 1 downto 0)(2 downto 1);
                    a_1_addr_11_reg_1397(2 downto 1) <= tmp_30_fu_632_p3(3 - 1 downto 0)(2 downto 1);
                a_1_addr_7_reg_1419 <= tmp_42_fu_654_p1(3 - 1 downto 0);
                    a_1_addr_9_reg_1402(2 downto 1) <= tmp_11_fu_620_p1(3 - 1 downto 0)(2 downto 1);
                    i_5_cast_reg_1376(2 downto 0) <= i_5_cast_fu_604_p1(2 downto 0);
                icmp_reg_1424 <= icmp_fu_670_p2;
                tmp_35_reg_1407 <= tmp_35_fu_642_p1;
                    tmp_3_reg_1382(2 downto 0) <= tmp_3_fu_608_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then
                    a_0_addr_12_reg_1669(2 downto 1) <= tmp_76_fu_1237_p3(3 - 1 downto 0)(2 downto 1);
                    a_1_addr_12_reg_1674(2 downto 1) <= tmp_76_fu_1237_p3(3 - 1 downto 0)(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_lv1_0 = tmp_8_fu_1284_p2))) then
                a_0_addr_2_reg_1743 <= tmp_62_fu_1302_p1(3 - 1 downto 0);
                a_1_addr_2_reg_1748 <= tmp_62_fu_1302_p1(3 - 1 downto 0);
                    work_addr_2_reg_1753(2 downto 0) <= tmp_10_fu_1290_p1(9 - 1 downto 0)(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1739))) then
                a_0_addr_3_reg_1764 <= tmp_64_fu_1320_p1(3 - 1 downto 0);
                a_1_addr_3_reg_1769 <= tmp_64_fu_1320_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond5_fu_984_p2))) then
                a_0_addr_4_reg_1526 <= tmp_66_fu_1008_p1(3 - 1 downto 0);
                a_1_addr_4_reg_1531 <= tmp_66_fu_1008_p1(3 - 1 downto 0);
                icmp3_reg_1536 <= icmp3_fu_1024_p2;
                tmp_82_reg_1521 <= tmp_82_fu_996_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_fu_1059_p2))) then
                a_0_addr_5_reg_1567 <= tmp_70_fu_1083_p1(3 - 1 downto 0);
                a_1_addr_5_reg_1572 <= tmp_70_fu_1083_p1(3 - 1 downto 0);
                icmp4_reg_1577 <= icmp4_fu_1099_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                a_0_addr_6_reg_1542 <= tmp_68_fu_1037_p1(3 - 1 downto 0);
                a_1_addr_6_reg_1547 <= tmp_68_fu_1037_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_1136_p2) and (ap_const_lv1_0 = tmp_15_fu_1148_p2))) then
                a_0_addr_8_reg_1622 <= tmp_74_fu_1169_p1(3 - 1 downto 0);
                a_1_addr_8_reg_1627 <= tmp_74_fu_1169_p1(3 - 1 downto 0);
                    tmp_71_reg_1616(3 downto 1) <= tmp_71_fu_1154_p3(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_24_reg_1587) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then
                a_0_load_10_reg_1679 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_2_reg_1595) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then
                a_1_load_11_reg_1684 <= a_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_lv1_0 = exitcond4_reg_1558))) then
                a_load_5_phi_reg_1582 <= a_load_5_phi_fu_1105_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429 <= exitcond6_reg_1429;
                ap_pipeline_reg_pp1_iter1_r_1_reg_412 <= r_1_reg_412;
                exitcond6_reg_1429 <= exitcond6_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429;
                ap_pipeline_reg_pp1_iter2_r_1_reg_412 <= ap_pipeline_reg_pp1_iter1_r_1_reg_412;
                ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429;
                ap_pipeline_reg_pp1_iter3_r_1_reg_412 <= ap_pipeline_reg_pp1_iter2_r_1_reg_412;
                ap_pipeline_reg_pp1_iter3_w_3_reg_1448 <= w_3_reg_1448;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567 <= a_0_addr_5_reg_1567;
                ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572 <= a_1_addr_5_reg_1572;
                ap_pipeline_reg_pp3_iter1_icmp4_reg_1577 <= icmp4_reg_1577;
                exitcond4_reg_1558 <= exitcond4_fu_1059_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622 <= a_0_addr_8_reg_1622;
                ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627 <= a_1_addr_8_reg_1627;
                ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612 <= tmp_15_reg_1612;
                exitcond3_reg_1603 <= exitcond3_fu_1136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then
                ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640 <= tmp_52_reg_1640;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                api_reg_1482 <= api_fu_927_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                exitcond5_reg_1512 <= exitcond5_fu_984_p2;
                j_1_reg_1516 <= j_1_fu_990_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_676_p2) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                i_6_reg_1443 <= i_6_fu_695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then
                i_7_reg_1718 <= i_7_fu_1253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then
                i_8_reg_1562 <= i_8_fu_1065_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                i_9_reg_1607 <= i_9_fu_1142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state77) and (ap_const_lv1_0 = exitcond1_fu_1247_p2))) then
                icmp1_reg_1734 <= icmp1_fu_1278_p2;
                tmp_53_reg_1729 <= tmp_53_fu_1264_p1;
                    work_addr_1_reg_1723(2 downto 0) <= tmp_s_fu_1259_p1(9 - 1 downto 0)(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then
                icmp2_reg_1774 <= icmp2_fu_1336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                k_reg_1371 <= k_fu_598_p2;
                tmp_2_reg_1367 <= i_5_reg_388(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                r_load_1_reg_1466 <= r_fu_120;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1429 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then
                reg_527 <= grp_fu_510_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_24_reg_1587)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_lv1_0 = tmp_20_1_reg_1591)))) then
                reg_540 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_2_reg_1595)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_lv1_0 = tmp_20_3_reg_1599)))) then
                reg_546 <= a_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_24_reg_1587) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_1_reg_1591) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)))) then
                reg_552 <= grp_fu_467_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_2_reg_1595) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_3_reg_1599) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)))) then
                reg_557 <= grp_fu_471_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1739)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)))) then
                reg_562 <= grp_fu_520_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_1136_p2))) then
                tmp_15_reg_1612 <= tmp_15_fu_1148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640))) then
                tmp_19_reg_1709 <= grp_fu_485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tmp_20_1_reg_1591 <= tmp_20_1_fu_1118_p2;
                tmp_20_2_reg_1595 <= tmp_20_2_fu_1124_p2;
                tmp_20_3_reg_1599 <= tmp_20_3_fu_1130_p2;
                tmp_24_reg_1587 <= tmp_24_fu_1112_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_1_reg_1591) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage8))) then
                tmp_22_1_reg_1699 <= grp_fu_475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_lv1_0 = tmp_20_2_reg_1595))) then
                tmp_22_2_reg_1694 <= grp_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_3_reg_1599) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage8))) then
                tmp_22_3_reg_1704 <= grp_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_24_reg_1587) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7))) then
                tmp_25_reg_1689 <= grp_fu_475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter2_exitcond6_reg_1429)) then
                tmp_47_reg_1455 <= tmp_47_fu_838_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then
                tmp_52_reg_1640 <= tmp_52_fu_1210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                tmp_5_reg_1487 <= tmp_5_fu_492_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1))) then
                tmp_8_reg_1739 <= tmp_8_fu_1284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then
                w_1_reg_1632 <= grp_fu_510_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429)) then
                w_3_reg_1448 <= w_3_fu_753_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                w_reg_1552 <= w_fu_1043_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = tmp_2_reg_1367) and (ap_const_lv1_0 = tmp_33_fu_974_p2) and (ap_const_lv1_0 = tmp_1_fu_980_p2))) then
                    work_addr_3_reg_1500(2 downto 0) <= tmp_3_reg_1382(9 - 1 downto 0)(2 downto 0);
                work_addr_4_reg_1506 <= tmp_4_fu_935_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1739))) then
                work_load_1_reg_1759 <= work_q0;
            end if;
        end if;
    end process;
    i_5_cast_reg_1376(31 downto 3) <= "00000000000000000000000000000";
    tmp_3_reg_1382(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    a_0_addr_11_reg_1387(0) <= '1';
    a_0_addr_9_reg_1392(0) <= '0';
    a_1_addr_11_reg_1397(0) <= '1';
    a_1_addr_9_reg_1402(0) <= '0';
    work_addr_3_reg_1500(8 downto 3) <= "000000";
    tmp_71_reg_1616(0) <= '0';
    a_0_addr_10_reg_1649(0) <= '0';
    a_1_addr_10_reg_1654(0) <= '0';
    a_0_addr_12_reg_1669(0) <= '1';
    a_1_addr_12_reg_1674(0) <= '1';
    work_addr_1_reg_1723(8 downto 3) <= "000000";
    work_addr_2_reg_1753(8 downto 3) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp1_iter1, ap_enable_reg_pp5_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_enable_reg_pp4_iter1, tmp_2_fu_590_p3, tmp_2_reg_1367, exitcond6_fu_676_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, tmp_1_fu_980_p2, tmp_33_fu_974_p2, exitcond5_fu_984_p2, exitcond4_fu_1059_p2, ap_enable_reg_pp3_iter0, exitcond3_fu_1136_p2, exitcond1_fu_1247_p2, tmp_8_fu_1284_p2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, exitcond7_fu_568_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = exitcond7_fu_568_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = tmp_2_fu_590_p3))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter3)))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_676_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_676_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if ((not((ap_const_lv1_0 = tmp_2_reg_1367)) or not((ap_const_lv1_0 = tmp_33_fu_974_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_lv1_0 = tmp_2_reg_1367) and (ap_const_lv1_0 = tmp_33_fu_974_p2) and not((ap_const_lv1_0 = tmp_1_fu_980_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if ((ap_const_lv1_0 = exitcond5_fu_984_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond4_fu_1059_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
            when ap_ST_fsm_pp3_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
            when ap_ST_fsm_pp3_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
            when ap_ST_fsm_pp3_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
            when ap_ST_fsm_pp3_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
            when ap_ST_fsm_pp3_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
            when ap_ST_fsm_pp3_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage8;
            when ap_ST_fsm_pp3_stage8 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and not((ap_const_lv1_0 = exitcond3_fu_1136_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
            when ap_ST_fsm_pp4_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
            when ap_ST_fsm_pp4_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
            when ap_ST_fsm_pp4_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
            when ap_ST_fsm_pp4_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
            when ap_ST_fsm_pp4_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
            when ap_ST_fsm_pp4_stage7 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_pp4_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage9;
            when ap_ST_fsm_pp4_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage10;
            when ap_ST_fsm_pp4_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage11;
            when ap_ST_fsm_pp4_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state77 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_1247_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
            when ap_ST_fsm_pp5_stage1 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and not((ap_const_lv1_0 = tmp_8_fu_1284_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_pp5_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
            when ap_ST_fsm_pp5_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage4;
            when ap_ST_fsm_pp5_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage5;
            when ap_ST_fsm_pp5_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage6;
            when ap_ST_fsm_pp5_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage7;
            when ap_ST_fsm_pp5_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage8;
            when ap_ST_fsm_pp5_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage9;
            when ap_ST_fsm_pp5_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage10;
            when ap_ST_fsm_pp5_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage11;
            when ap_ST_fsm_pp5_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage12;
            when ap_ST_fsm_pp5_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, a_0_addr_11_reg_1387, a_0_addr_9_reg_1392, a_0_addr_7_reg_1414, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, a_0_addr_4_reg_1526, a_0_addr_6_reg_1542, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567, ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622, ap_CS_fsm_pp4_stage3, a_0_addr_10_reg_1649, ap_CS_fsm_pp4_stage5, a_0_addr_12_reg_1669, ap_CS_fsm_pp4_stage6, a_0_addr_2_reg_1743, a_0_addr_3_reg_1764, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, tmp_60_fu_689_p1, tmp_56_fu_869_p1, tmp_66_fu_1008_p1, tmp_68_fu_1037_p1, tmp_70_fu_1083_p1, tmp_74_fu_1169_p1, tmp_72_fu_1227_p1, tmp_76_fu_1237_p3, tmp_62_fu_1302_p1, tmp_64_fu_1320_p1, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8, ap_CS_fsm_pp5_stage10, ap_CS_fsm_pp5_stage11)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_3_reg_1764),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage11)))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_2_reg_1743),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            a_0_Addr_A_orig <= tmp_64_fu_1320_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            a_0_Addr_A_orig <= tmp_62_fu_1302_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_7_reg_1414),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1622),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_12_reg_1669),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_10_reg_1649),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then 
            a_0_Addr_A_orig <= tmp_76_fu_1237_p3(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then 
            a_0_Addr_A_orig <= tmp_72_fu_1227_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_11_reg_1387),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_9_reg_1392),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            a_0_Addr_A_orig <= tmp_74_fu_1169_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1567),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            a_0_Addr_A_orig <= tmp_70_fu_1083_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_6_reg_1542),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_4_reg_1526),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            a_0_Addr_A_orig <= tmp_68_fu_1037_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_0_Addr_A_orig <= tmp_66_fu_1008_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            a_0_Addr_A_orig <= tmp_56_fu_869_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            a_0_Addr_A_orig <= tmp_60_fu_689_p1(32 - 1 downto 0);
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;

    a_0_Din_A_assign_proc : process(ap_enable_reg_pp5_iter0, ap_CS_fsm_pp4_stage7, reg_552, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, reg_562, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, w_reg_1552, ap_CS_fsm_state19, grp_fu_485_p2, tmp_19_reg_1709, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, a_load_2_phi_fu_1050_p3, ap_CS_fsm_pp4_stage2, a_load_4_0_phi_fu_1342_p3, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_Din_A <= reg_562;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            a_0_Din_A <= a_load_4_0_phi_fu_1342_p3;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Din_A <= tmp_19_reg_1709;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)))) then 
            a_0_Din_A <= reg_552;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then 
            a_0_Din_A <= grp_fu_485_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_0_Din_A <= w_reg_1552;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_0_Din_A <= a_load_2_phi_fu_1050_p3;
        else 
            a_0_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp4_stage6, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8, ap_CS_fsm_pp5_stage10, ap_CS_fsm_pp5_stage11)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage11)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;

    a_0_WEN_A_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_52_reg_1640, tmp_24_reg_1587, ap_CS_fsm_pp4_stage7, tmp_20_1_reg_1591, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612, tmp_8_reg_1739, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, icmp_reg_1424, exitcond5_reg_1512, icmp3_reg_1536, ap_CS_fsm_state19, ap_pipeline_reg_pp3_iter1_icmp4_reg_1577, ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640, icmp1_reg_1734, icmp2_reg_1774, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and not((ap_const_lv1_0 = icmp3_reg_1536))) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1512) and not((ap_const_lv1_0 = icmp3_reg_1536))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_icmp4_reg_1577))) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_24_reg_1587) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_1_reg_1591) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) and not((ap_const_lv1_0 = icmp_reg_1424)) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640)) or (not((ap_const_lv1_0 = icmp_reg_1424)) and (ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3) and not((ap_const_lv1_0 = icmp1_reg_1734))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4) and not((ap_const_lv1_0 = icmp2_reg_1774))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6) and not((ap_const_lv1_0 = icmp1_reg_1734))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and not((ap_const_lv1_0 = icmp2_reg_1774)) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and not((ap_const_lv1_0 = icmp1_reg_1734))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and not((ap_const_lv1_0 = icmp2_reg_1774)) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12) and not((ap_const_lv1_0 = icmp1_reg_1734))) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and not((ap_const_lv1_0 = icmp2_reg_1774)) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_WEN_A <= ap_const_lv4_F;
        else 
            a_0_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, a_1_addr_11_reg_1397, a_1_addr_9_reg_1402, a_1_addr_7_reg_1419, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, a_1_addr_4_reg_1531, a_1_addr_6_reg_1547, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572, ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage5, a_1_addr_10_reg_1654, ap_CS_fsm_pp4_stage6, a_1_addr_12_reg_1674, a_1_addr_2_reg_1748, a_1_addr_3_reg_1769, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, tmp_60_fu_689_p1, tmp_56_fu_869_p1, tmp_66_fu_1008_p1, tmp_68_fu_1037_p1, tmp_70_fu_1083_p1, tmp_74_fu_1169_p1, tmp_72_fu_1227_p1, tmp_76_fu_1237_p3, tmp_62_fu_1302_p1, tmp_64_fu_1320_p1, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8, ap_CS_fsm_pp5_stage10, ap_CS_fsm_pp5_stage11)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_3_reg_1769),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage11)))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_2_reg_1748),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            a_1_Addr_A_orig <= tmp_64_fu_1320_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            a_1_Addr_A_orig <= tmp_62_fu_1302_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_7_reg_1419),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1627),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_12_reg_1674),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_10_reg_1654),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then 
            a_1_Addr_A_orig <= tmp_76_fu_1237_p3(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then 
            a_1_Addr_A_orig <= tmp_72_fu_1227_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_11_reg_1397),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_9_reg_1402),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            a_1_Addr_A_orig <= tmp_74_fu_1169_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1572),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            a_1_Addr_A_orig <= tmp_70_fu_1083_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_6_reg_1547),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_4_reg_1531),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            a_1_Addr_A_orig <= tmp_68_fu_1037_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_1_Addr_A_orig <= tmp_66_fu_1008_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            a_1_Addr_A_orig <= tmp_56_fu_869_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            a_1_Addr_A_orig <= tmp_60_fu_689_p1(32 - 1 downto 0);
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;

    a_1_Din_A_assign_proc : process(ap_enable_reg_pp5_iter0, ap_CS_fsm_pp4_stage7, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, reg_557, reg_562, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, w_reg_1552, ap_CS_fsm_state19, grp_fu_485_p2, tmp_19_reg_1709, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, a_load_2_phi_fu_1050_p3, ap_CS_fsm_pp4_stage2, a_load_4_0_phi_fu_1342_p3, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_Din_A <= reg_562;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            a_1_Din_A <= a_load_4_0_phi_fu_1342_p3;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_1_Din_A <= tmp_19_reg_1709;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)))) then 
            a_1_Din_A <= reg_557;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then 
            a_1_Din_A <= grp_fu_485_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_1_Din_A <= w_reg_1552;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_1_Din_A <= a_load_2_phi_fu_1050_p3;
        else 
            a_1_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp4_stage6, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8, ap_CS_fsm_pp5_stage10, ap_CS_fsm_pp5_stage11)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage11)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;

    a_1_WEN_A_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_52_reg_1640, ap_CS_fsm_pp4_stage7, tmp_20_2_reg_1595, tmp_20_3_reg_1599, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage1, ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612, tmp_8_reg_1739, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_CS_fsm_pp5_stage12, icmp_reg_1424, exitcond5_reg_1512, icmp3_reg_1536, ap_CS_fsm_state19, ap_pipeline_reg_pp3_iter1_icmp4_reg_1577, ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640, icmp1_reg_1734, icmp2_reg_1774, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state76, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = icmp3_reg_1536)) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1512) and (ap_const_lv1_0 = icmp3_reg_1536)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_icmp4_reg_1577)) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_2_reg_1595) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612)) or ((ap_const_lv1_0 = tmp_52_reg_1640) and (ap_const_lv1_0 = tmp_20_3_reg_1599) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1612) and (ap_const_lv1_0 = icmp_reg_1424) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1640)) or ((ap_const_lv1_0 = icmp_reg_1424) and (ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3) and (ap_const_lv1_0 = icmp1_reg_1734)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4) and (ap_const_lv1_0 = icmp2_reg_1774)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6) and (ap_const_lv1_0 = icmp1_reg_1734)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_0 = icmp2_reg_1774) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and (ap_const_lv1_0 = icmp1_reg_1734)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_0 = icmp2_reg_1774) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage12) and (ap_const_lv1_0 = icmp1_reg_1734)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_lv1_0 = icmp2_reg_1774) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_WEN_A <= ap_const_lv4_F;
        else 
            a_1_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_load_2_phi_fu_1050_p3 <= 
        a_0_Dout_A when (icmp3_reg_1536(0) = '1') else 
        a_1_Dout_A;
    a_load_4_0_phi_fu_1342_p3 <= 
        a_0_Dout_A when (icmp2_fu_1336_p2(0) = '1') else 
        a_1_Dout_A;
    a_load_5_phi_fu_1105_p3 <= 
        a_0_Dout_A when (icmp4_reg_1577(0) = '1') else 
        a_1_Dout_A;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp3_stage8 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_pp4_stage11 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_pp4_stage4 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_pp4_stage5 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_pp4_stage6 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_pp4_stage7 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_pp4_stage8 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_pp4_stage9 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_pp5_stage10 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_pp5_stage11 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_pp5_stage12 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_pp5_stage2 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_pp5_stage3 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_pp5_stage4 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_pp5_stage5 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_pp5_stage6 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_pp5_stage7 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_pp5_stage8 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_pp5_stage9 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state11 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state12 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state13 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state14 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state17 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state18 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state19 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state21 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state61 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state76 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state77 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state92 <= ap_CS_fsm(69 downto 69);

    ap_done_assign_proc : process(tmp_2_reg_1367, ap_CS_fsm_state14, tmp_33_fu_974_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1367)) or not((ap_const_lv1_0 = tmp_33_fu_974_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_2_reg_1367, ap_CS_fsm_state14, tmp_33_fu_974_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1367)) or not((ap_const_lv1_0 = tmp_33_fu_974_p2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_1;
    api_fu_927_p3 <= 
        reg_527 when (tmp_28_fu_911_p2(0) = '1') else 
        f_fu_923_p1;
    exitcond1_fu_1247_p2 <= "1" when (i_4_reg_455 = ap_const_lv3_4) else "0";
    exitcond3_fu_1136_p2 <= "1" when (i_3_phi_fu_448_p4 = ap_const_lv3_4) else "0";
    exitcond4_fu_1059_p2 <= "1" when (i_2_phi_fu_437_p4 = ap_const_lv3_4) else "0";
    exitcond5_fu_984_p2 <= "1" when (j_reg_422 = ap_const_lv3_4) else "0";
    exitcond6_fu_676_p2 <= "1" when (r_1_phi_fu_415_p4 = ap_const_lv32_4) else "0";
    exitcond7_fu_568_p2 <= "1" when (i_reg_376 = ap_const_lv3_4) else "0";
    f_1_fu_749_p1 <= f_neg_i_fu_743_p2;
    f_fu_923_p1 <= f_neg_i1_fu_917_p2;
    f_neg_i1_fu_917_p2 <= (pivot_to_int_fu_875_p1 xor ap_const_lv32_80000000);
    f_neg_i_fu_743_p2 <= (n_assign_1_to_int_fu_701_p1 xor ap_const_lv32_80000000);

    grp_fu_467_p0_assign_proc : process(reg_540, ap_enable_reg_pp4_iter0, a_0_load_10_reg_1679, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_467_p0 <= reg_540;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_467_p0 <= a_0_load_10_reg_1679;
            else 
                grp_fu_467_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_467_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_467_p1_assign_proc : process(ap_enable_reg_pp4_iter0, tmp_25_reg_1689, tmp_22_1_reg_1699, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_467_p1 <= tmp_22_1_reg_1699;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_467_p1 <= tmp_25_reg_1689;
            else 
                grp_fu_467_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_467_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_471_p0_assign_proc : process(ap_enable_reg_pp4_iter0, reg_546, a_1_load_11_reg_1684, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_471_p0 <= reg_546;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_471_p0 <= a_1_load_11_reg_1684;
            else 
                grp_fu_471_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_471_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_471_p1_assign_proc : process(ap_enable_reg_pp4_iter0, tmp_22_2_reg_1694, ap_CS_fsm_pp4_stage8, tmp_22_3_reg_1704, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_471_p1 <= tmp_22_3_reg_1704;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_471_p1 <= tmp_22_2_reg_1694;
            else 
                grp_fu_471_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_471_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_485_p0_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp3_iter0, a_load_5_phi_reg_1582, ap_CS_fsm_pp4_stage3, tmp_18_fu_1222_p1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_state61)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            grp_fu_485_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            grp_fu_485_p0 <= tmp_18_fu_1222_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage2))) then 
            grp_fu_485_p0 <= a_load_5_phi_reg_1582;
        else 
            grp_fu_485_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_495_opcode_assign_proc : process(ap_enable_reg_pp4_iter0, exitcond3_reg_1603, tmp_15_reg_1612, ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429, ap_CS_fsm_state12, ap_CS_fsm_pp4_stage3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_0 = tmp_15_reg_1612) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            grp_fu_495_opcode <= ap_const_lv5_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1429) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            grp_fu_495_opcode <= ap_const_lv5_3;
        else 
            grp_fu_495_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_495_p0_assign_proc : process(reg_527, ap_enable_reg_pp4_iter0, ap_CS_fsm_state12, w_1_reg_1632, ap_CS_fsm_pp4_stage3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            grp_fu_495_p0 <= w_1_reg_1632;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
            grp_fu_495_p0 <= reg_527;
        else 
            grp_fu_495_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_510_p3 <= 
        a_0_Dout_A when (icmp_reg_1424(0) = '1') else 
        a_1_Dout_A;
    grp_fu_520_p3 <= 
        a_0_Dout_A when (icmp1_reg_1734(0) = '1') else 
        a_1_Dout_A;
    i_1_fu_574_p2 <= std_logic_vector(unsigned(i_reg_376) + unsigned(ap_const_lv3_1));

    i_2_phi_fu_437_p4_assign_proc : process(i_2_reg_433, exitcond4_reg_1558, ap_CS_fsm_pp3_stage0, i_8_reg_1562, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_reg_1558) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            i_2_phi_fu_437_p4 <= i_8_reg_1562;
        else 
            i_2_phi_fu_437_p4 <= i_2_reg_433;
        end if; 
    end process;


    i_3_phi_fu_448_p4_assign_proc : process(i_3_reg_444, exitcond3_reg_1603, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, i_9_reg_1607)
    begin
        if (((ap_const_lv1_0 = exitcond3_reg_1603) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            i_3_phi_fu_448_p4 <= i_9_reg_1607;
        else 
            i_3_phi_fu_448_p4 <= i_3_reg_444;
        end if; 
    end process;

    i_5_cast_fu_604_p1 <= std_logic_vector(resize(unsigned(i_5_reg_388),32));
    i_6_fu_695_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(r_1_phi_fu_415_p4));
    i_7_fu_1253_p2 <= std_logic_vector(unsigned(i_4_reg_455) + unsigned(ap_const_lv3_1));
    i_8_fu_1065_p2 <= std_logic_vector(unsigned(i_2_phi_fu_437_p4) + unsigned(ap_const_lv3_1));
    i_9_fu_1142_p2 <= std_logic_vector(unsigned(i_3_phi_fu_448_p4) + unsigned(ap_const_lv3_1));
    icmp1_fu_1278_p2 <= "1" when (tmp_54_fu_1268_p4 = ap_const_lv2_0) else "0";
    icmp2_fu_1336_p2 <= "1" when (tmp_81_fu_1326_p4 = ap_const_lv2_0) else "0";
    icmp3_fu_1024_p2 <= "1" when (tmp_83_fu_1014_p4 = ap_const_lv2_0) else "0";
    icmp4_fu_1099_p2 <= "1" when (tmp_85_fu_1089_p4 = ap_const_lv2_0) else "0";
    icmp_fu_670_p2 <= "1" when (tmp_49_fu_660_p4 = ap_const_lv2_0) else "0";
    j_1_fu_990_p2 <= std_logic_vector(unsigned(j_reg_422) + unsigned(ap_const_lv3_1));
    k_fu_598_p2 <= std_logic_vector(unsigned(i_5_reg_388) + unsigned(ap_const_lv3_1));
    n_assign_1_to_int_fu_701_p1 <= reg_527;
    notlhs1_fu_893_p2 <= "0" when (tmp_9_fu_879_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_956_p2 <= "0" when (tmp_29_fu_942_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_796_p2 <= "0" when (tmp_39_fu_764_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_814_p2 <= "0" when (tmp_41_fu_782_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_1192_p2 <= "0" when (tmp_48_fu_1178_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_719_p2 <= "0" when (tmp_34_fu_705_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_899_p2 <= "1" when (tmp_57_fu_889_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_962_p2 <= "1" when (tmp_58_fu_952_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_802_p2 <= "1" when (tmp_63_fu_774_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_820_p2 <= "1" when (tmp_77_fu_792_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_1198_p2 <= "1" when (tmp_86_fu_1188_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_725_p2 <= "1" when (tmp_61_fu_715_p1 = ap_const_lv23_0) else "0";
    pivot_to_int_fu_875_p1 <= reg_527;

    r_1_phi_fu_415_p4_assign_proc : process(r_1_reg_412, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond6_reg_1429, i_6_reg_1443)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1429 = ap_const_lv1_0))) then 
            r_1_phi_fu_415_p4 <= i_6_reg_1443;
        else 
            r_1_phi_fu_415_p4 <= r_1_reg_412;
        end if; 
    end process;

    r_2_fu_850_p3 <= 
        ap_pipeline_reg_pp1_iter3_r_1_reg_412 when (tmp_47_reg_1455(0) = '1') else 
        r_fu_120;
    tmp_10_fu_1290_p1 <= std_logic_vector(resize(unsigned(work_q1),64));
    tmp_11_fu_620_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_612_p3),64));
    tmp_15_fu_1148_p2 <= "1" when (i_3_phi_fu_448_p4 = i_5_reg_388) else "0";
    tmp_16_fu_626_p2 <= (tmp_7_fu_612_p3 or ap_const_lv4_1);
    tmp_17_fu_905_p2 <= (notrhs1_fu_899_p2 or notlhs1_fu_893_p2);
    tmp_18_fu_1222_p1 <= tmp_18_neg_fu_1216_p2;
    tmp_18_neg_fu_1216_p2 <= (w_1_to_int_fu_1175_p1 xor ap_const_lv32_80000000);
    tmp_1_fu_980_p2 <= "1" when (r_load_1_reg_1466 = i_5_cast_reg_1376) else "0";
    tmp_20_1_fu_1118_p2 <= "1" when (i_5_reg_388 = ap_const_lv3_1) else "0";
    tmp_20_2_fu_1124_p2 <= "1" when (i_5_reg_388 = ap_const_lv3_2) else "0";
    tmp_20_3_fu_1130_p2 <= "1" when (i_5_reg_388 = ap_const_lv3_3) else "0";
    tmp_24_fu_1112_p2 <= "1" when (i_5_reg_388 = ap_const_lv3_0) else "0";
    tmp_28_fu_911_p2 <= (tmp_17_fu_905_p2 and grp_fu_495_p2);
    tmp_29_fu_942_p4 <= tmp_5_to_int_fu_939_p1(62 downto 52);
    tmp_2_fu_590_p3 <= i_5_reg_388(2 downto 2);
    tmp_30_fu_632_p3 <= (ap_const_lv60_0 & tmp_16_fu_626_p2);
    tmp_31_fu_968_p2 <= (notrhs2_fu_962_p2 or notlhs2_fu_956_p2);
    tmp_33_fu_974_p2 <= (tmp_31_fu_968_p2 and tmp_32_fu_505_p2);
    tmp_34_fu_705_p4 <= n_assign_1_to_int_fu_701_p1(30 downto 23);
    tmp_35_fu_642_p1 <= i_5_reg_388(1 - 1 downto 0);
    tmp_36_fu_731_p2 <= (notrhs_fu_725_p2 or notlhs_fu_719_p2);
    tmp_38_fu_737_p2 <= (tmp_36_fu_731_p2 and grp_fu_495_p2);
    tmp_39_fu_764_p4 <= w_3_to_int_fu_761_p1(30 downto 23);
    tmp_3_fu_608_p1 <= std_logic_vector(resize(unsigned(i_5_reg_388),64));
    tmp_40_fu_646_p3 <= (i_5_reg_388 & tmp_35_fu_642_p1);
    tmp_41_fu_782_p4 <= wmax_to_int_fu_778_p1(30 downto 23);
    tmp_42_fu_654_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_646_p3),64));
    tmp_43_fu_808_p2 <= (notrhs3_fu_802_p2 or notlhs3_fu_796_p2);
    tmp_44_fu_826_p2 <= (notrhs4_fu_820_p2 or notlhs4_fu_814_p2);
    tmp_45_fu_832_p2 <= (tmp_43_fu_808_p2 and tmp_44_fu_826_p2);
    tmp_47_fu_838_p2 <= (tmp_45_fu_832_p2 and tmp_46_fu_500_p2);
    tmp_48_fu_1178_p4 <= w_1_to_int_fu_1175_p1(30 downto 23);
    tmp_49_fu_660_p4 <= i_5_reg_388(2 downto 1);
        tmp_4_fu_935_p1 <= std_logic_vector(resize(signed(r_load_1_reg_1466),64));

    tmp_50_fu_1204_p2 <= (notrhs5_fu_1198_p2 or notlhs5_fu_1192_p2);
    tmp_52_fu_1210_p2 <= (tmp_50_fu_1204_p2 and grp_fu_495_p2);
    tmp_53_fu_1264_p1 <= i_4_reg_455(1 - 1 downto 0);
    tmp_54_fu_1268_p4 <= i_4_reg_455(2 downto 1);
    tmp_55_fu_862_p3 <= (r_fu_120 & tmp_35_reg_1407);
        tmp_56_fu_869_p1 <= std_logic_vector(resize(signed(tmp_55_fu_862_p3),64));

    tmp_57_fu_889_p1 <= pivot_to_int_fu_875_p1(23 - 1 downto 0);
    tmp_58_fu_952_p1 <= tmp_5_to_int_fu_939_p1(52 - 1 downto 0);
    tmp_59_fu_682_p3 <= (r_1_phi_fu_415_p4 & tmp_35_reg_1407);
    tmp_5_to_int_fu_939_p1 <= tmp_5_reg_1487;
        tmp_60_fu_689_p1 <= std_logic_vector(resize(signed(tmp_59_fu_682_p3),64));

    tmp_61_fu_715_p1 <= n_assign_1_to_int_fu_701_p1(23 - 1 downto 0);
    tmp_62_fu_1302_p1 <= std_logic_vector(resize(unsigned(tmp_78_fu_1295_p3),64));
    tmp_63_fu_774_p1 <= w_3_to_int_fu_761_p1(23 - 1 downto 0);
    tmp_64_fu_1320_p1 <= std_logic_vector(resize(unsigned(tmp_80_fu_1312_p3),64));
    tmp_65_fu_1000_p3 <= (i_5_reg_388 & tmp_82_fu_996_p1);
    tmp_66_fu_1008_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_1000_p3),64));
    tmp_67_fu_1030_p3 <= (r_fu_120 & tmp_82_reg_1521);
        tmp_68_fu_1037_p1 <= std_logic_vector(resize(signed(tmp_67_fu_1030_p3),64));

    tmp_69_fu_1075_p3 <= (i_5_reg_388 & tmp_84_fu_1071_p1);
    tmp_70_fu_1083_p1 <= std_logic_vector(resize(unsigned(tmp_69_fu_1075_p3),64));
    tmp_71_fu_1154_p3 <= (i_3_phi_fu_448_p4 & ap_const_lv1_0);
    tmp_72_fu_1227_p1 <= std_logic_vector(resize(unsigned(tmp_71_reg_1616),64));
    tmp_73_fu_1162_p3 <= (i_3_phi_fu_448_p4 & tmp_35_reg_1407);
    tmp_74_fu_1169_p1 <= std_logic_vector(resize(unsigned(tmp_73_fu_1162_p3),64));
    tmp_75_fu_1232_p2 <= (tmp_71_reg_1616 or ap_const_lv4_1);
    tmp_76_fu_1237_p3 <= (ap_const_lv60_0 & tmp_75_fu_1232_p2);
    tmp_77_fu_792_p1 <= wmax_to_int_fu_778_p1(23 - 1 downto 0);
    tmp_78_fu_1295_p3 <= (work_q1 & tmp_53_reg_1729);
    tmp_79_fu_1308_p1 <= reg_533(1 - 1 downto 0);
    tmp_7_fu_612_p3 <= (i_5_reg_388 & ap_const_lv1_0);
    tmp_80_fu_1312_p3 <= (reg_533 & tmp_79_fu_1308_p1);
    tmp_81_fu_1326_p4 <= reg_533(2 downto 1);
    tmp_82_fu_996_p1 <= j_reg_422(1 - 1 downto 0);
    tmp_83_fu_1014_p4 <= j_reg_422(2 downto 1);
    tmp_84_fu_1071_p1 <= i_2_phi_fu_437_p4(1 - 1 downto 0);
    tmp_85_fu_1089_p4 <= i_2_phi_fu_437_p4(2 downto 1);
    tmp_86_fu_1188_p1 <= w_1_to_int_fu_1175_p1(23 - 1 downto 0);
    tmp_8_fu_1284_p2 <= "1" when (work_q1 = i_4_reg_455) else "0";
    tmp_9_fu_879_p4 <= pivot_to_int_fu_875_p1(30 downto 23);
    tmp_fu_580_p1 <= std_logic_vector(resize(unsigned(i_reg_376),64));
    tmp_s_fu_1259_p1 <= std_logic_vector(resize(unsigned(i_4_reg_455),64));
    w_1_to_int_fu_1175_p1 <= w_1_reg_1632;
    w_3_fu_753_p3 <= 
        reg_527 when (tmp_38_fu_737_p2(0) = '1') else 
        f_1_fu_749_p1;
    w_3_to_int_fu_761_p1 <= w_3_reg_1448;
    w_fu_1043_p3 <= 
        reg_540 when (icmp3_reg_1536(0) = '1') else 
        reg_546;
    wmax_1_fu_844_p3 <= 
        ap_pipeline_reg_pp1_iter3_w_3_reg_1448 when (tmp_47_reg_1455(0) = '1') else 
        wmax_reg_400;

    wmax_phi_fu_404_p4_assign_proc : process(wmax_reg_400, ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429, wmax_1_fu_844_p3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1429))) then 
            wmax_phi_fu_404_p4 <= wmax_1_fu_844_p3;
        else 
            wmax_phi_fu_404_p4 <= wmax_reg_400;
        end if; 
    end process;

    wmax_to_int_fu_778_p1 <= wmax_phi_fu_404_p4;

    work_address0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, tmp_3_reg_1382, ap_CS_fsm_state14, work_addr_4_reg_1506, work_addr_1_reg_1723, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state16, tmp_fu_580_p1, tmp_10_fu_1290_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            work_address0 <= work_addr_1_reg_1723;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            work_address0 <= tmp_10_fu_1290_p1(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            work_address0 <= work_addr_4_reg_1506;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address0 <= tmp_3_reg_1382(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_address0 <= tmp_fu_580_p1(9 - 1 downto 0);
        else 
            work_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    work_address1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, work_addr_3_reg_1500, work_addr_1_reg_1723, work_addr_2_reg_1753, tmp_4_fu_935_p1, ap_CS_fsm_pp5_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_address1 <= work_addr_2_reg_1753;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then 
            work_address1 <= work_addr_1_reg_1723;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_address1 <= work_addr_3_reg_1500;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address1 <= tmp_4_fu_935_p1(9 - 1 downto 0);
        else 
            work_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    work_ce0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, ap_CS_fsm_state14, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_ce0 <= ap_const_logic_1;
        else 
            work_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_ce1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, ap_CS_fsm_pp5_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0)))) then 
            work_ce1 <= ap_const_logic_1;
        else 
            work_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    work_d0_assign_proc : process(reg_533, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, work_load_1_reg_1759, ap_CS_fsm_pp5_stage3, i_reg_376, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            work_d0 <= work_load_1_reg_1759;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            work_d0 <= reg_533;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_d0 <= i_reg_376;
        else 
            work_d0 <= "XXX";
        end if; 
    end process;


    work_d1_assign_proc : process(reg_533, ap_CS_fsm_state15, work_q1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_d1 <= reg_533;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_d1 <= work_q1;
        else 
            work_d1 <= "XXX";
        end if; 
    end process;


    work_we0_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_8_reg_1739, ap_CS_fsm_state2, ap_CS_fsm_pp5_stage3, exitcond7_fu_568_p2, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_568_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1739) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_we0 <= ap_const_logic_1;
        else 
            work_we0 <= ap_const_logic_0;
        end if; 
    end process;


    work_we1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, tmp_8_reg_1739)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1739)))) then 
            work_we1 <= ap_const_logic_1;
        else 
            work_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
