// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2486,HLS_SYN_LUT=3139}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 67'b1;
parameter    ap_ST_fsm_state2 = 67'b10;
parameter    ap_ST_fsm_state3 = 67'b100;
parameter    ap_ST_fsm_state4 = 67'b1000;
parameter    ap_ST_fsm_pp1_stage0 = 67'b10000;
parameter    ap_ST_fsm_state10 = 67'b100000;
parameter    ap_ST_fsm_state11 = 67'b1000000;
parameter    ap_ST_fsm_state12 = 67'b10000000;
parameter    ap_ST_fsm_state13 = 67'b100000000;
parameter    ap_ST_fsm_state14 = 67'b1000000000;
parameter    ap_ST_fsm_state15 = 67'b10000000000;
parameter    ap_ST_fsm_state16 = 67'b100000000000;
parameter    ap_ST_fsm_state17 = 67'b1000000000000;
parameter    ap_ST_fsm_state18 = 67'b10000000000000;
parameter    ap_ST_fsm_state19 = 67'b100000000000000;
parameter    ap_ST_fsm_state20 = 67'b1000000000000000;
parameter    ap_ST_fsm_state21 = 67'b10000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 67'b100000000000000000;
parameter    ap_ST_fsm_pp3_stage1 = 67'b1000000000000000000;
parameter    ap_ST_fsm_pp3_stage2 = 67'b10000000000000000000;
parameter    ap_ST_fsm_pp3_stage3 = 67'b100000000000000000000;
parameter    ap_ST_fsm_pp3_stage4 = 67'b1000000000000000000000;
parameter    ap_ST_fsm_pp3_stage5 = 67'b10000000000000000000000;
parameter    ap_ST_fsm_pp3_stage6 = 67'b100000000000000000000000;
parameter    ap_ST_fsm_pp3_stage7 = 67'b1000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage8 = 67'b10000000000000000000000000;
parameter    ap_ST_fsm_state40 = 67'b100000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 67'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 67'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 67'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 67'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 67'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 67'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 67'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 67'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 67'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 67'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 67'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 67'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 67'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 67'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 67'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 67'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 67'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 67'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 67'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 67'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 67'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 67'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 67'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 67'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 67'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 67'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 67'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 67'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 67'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 67'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 67'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage2 = 67'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage3 = 67'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage4 = 67'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage5 = 67'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage6 = 67'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage7 = 67'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage8 = 67'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage9 = 67'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 67'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv61_0 = 61'b0000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg[3:0] a_0_WEN_A;
reg[31:0] a_0_Din_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;
reg[31:0] a_1_Din_A;

(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_375;
reg   [31:0] r_1_reg_387;
reg   [31:0] ap_pipeline_reg_pp1_iter1_r_1_reg_387;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [31:0] ap_pipeline_reg_pp1_iter2_r_1_reg_387;
reg   [31:0] ap_pipeline_reg_pp1_iter3_r_1_reg_387;
reg   [1:0] i_2_reg_408;
reg   [1:0] i_3_reg_419;
wire   [31:0] grp_fu_478_p3;
reg   [31:0] reg_495;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond6_reg_1476;
wire   [0:0] ap_CS_fsm_state11;
wire   [1:0] work_q0;
reg   [1:0] reg_501;
wire   [0:0] ap_CS_fsm_state15;
wire   [1:0] work_q1;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] reg_508;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond3_reg_1651;
reg   [0:0] tmp_15_reg_1660;
reg   [0:0] tmp_52_reg_1681;
reg   [0:0] tmp_24_reg_1639;
wire   [0:0] ap_CS_fsm_pp4_stage7;
reg   [0:0] tmp_20_1_reg_1643;
reg   [31:0] reg_514;
wire   [0:0] ap_CS_fsm_pp4_stage3;
reg   [0:0] tmp_20_2_reg_1647;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] reg_519;
wire   [0:0] ap_CS_fsm_pp4_stage11;
wire   [0:0] ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter1;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660;
wire   [31:0] grp_fu_488_p3;
reg   [31:0] reg_525;
wire   [0:0] ap_CS_fsm_pp5_stage2;
reg   [0:0] tmp_8_reg_1785;
wire   [0:0] ap_CS_fsm_pp5_stage6;
wire   [0:0] ap_CS_fsm_pp5_stage9;
wire   [1:0] i_1_fu_537_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_553_p2;
reg   [0:0] tmp_2_reg_1406;
wire   [0:0] ap_CS_fsm_state4;
wire   [1:0] k_fu_559_p2;
reg   [1:0] k_reg_1410;
wire   [31:0] i_5_cast_fu_565_p1;
reg   [31:0] i_5_cast_reg_1415;
wire   [63:0] tmp_3_fu_569_p1;
reg   [63:0] tmp_3_reg_1421;
wire   [2:0] tmp_3_cast_fu_574_p1;
reg   [2:0] tmp_3_cast_reg_1426;
reg   [2:0] a_0_addr_11_reg_1432;
reg   [2:0] a_0_addr_9_reg_1437;
reg   [1:0] a_1_addr_9_reg_1442;
wire   [0:0] tmp_40_fu_606_p1;
reg   [0:0] tmp_40_reg_1447;
wire   [2:0] newIndex4_cast_fu_610_p1;
reg   [2:0] newIndex4_cast_reg_1454;
reg   [2:0] a_0_addr_7_reg_1461;
reg   [1:0] a_1_addr_7_reg_1466;
reg   [0:0] tmp_54_reg_1471;
wire   [0:0] exitcond6_fu_646_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476;
reg   [0:0] ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476;
reg   [0:0] ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476;
wire   [31:0] i_6_fu_678_p2;
reg   [31:0] i_6_reg_1490;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] w_3_fu_736_p3;
reg   [31:0] w_3_reg_1495;
reg   [31:0] ap_pipeline_reg_pp1_iter3_w_3_reg_1495;
wire   [0:0] tmp_47_fu_821_p2;
reg   [0:0] tmp_47_reg_1502;
wire   [31:0] wmax_1_fu_827_p3;
reg    ap_enable_reg_pp1_iter4;
reg   [31:0] r_load_reg_1513;
wire   [0:0] ap_CS_fsm_state10;
wire   [2:0] tmp_57_fu_845_p1;
reg   [2:0] tmp_57_reg_1519;
wire   [31:0] api_fu_923_p3;
reg   [31:0] api_reg_1534;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_5_fu_460_p1;
reg   [63:0] tmp_5_reg_1539;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_1_fu_976_p2;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_33_fu_970_p2;
reg   [8:0] work_addr_3_reg_1552;
reg   [8:0] work_addr_4_reg_1558;
wire   [0:0] exitcond5_fu_980_p2;
reg   [0:0] exitcond5_reg_1564;
wire   [0:0] ap_CS_fsm_state17;
wire   [1:0] j_1_fu_986_p2;
reg   [1:0] j_1_reg_1568;
wire   [0:0] tmp_94_fu_992_p1;
reg   [0:0] tmp_94_reg_1573;
reg   [2:0] a_0_addr_4_reg_1578;
reg   [1:0] a_1_addr_4_reg_1583;
reg   [1:0] a_1_addr_6_reg_1588;
reg   [0:0] tmp_95_reg_1593;
reg   [2:0] a_0_addr_6_reg_1599;
wire   [31:0] w_fu_1053_p3;
reg   [31:0] w_reg_1604;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] exitcond4_fu_1069_p2;
reg   [0:0] exitcond4_reg_1610;
wire   [0:0] ap_CS_fsm_pp3_stage0;
wire   [1:0] i_8_fu_1075_p2;
reg   [1:0] i_8_reg_1614;
reg    ap_enable_reg_pp3_iter0;
reg   [2:0] a_0_addr_5_reg_1619;
reg   [2:0] ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619;
reg   [1:0] a_1_addr_5_reg_1624;
reg   [1:0] ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624;
reg   [0:0] tmp_97_reg_1629;
reg   [0:0] ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629;
wire   [31:0] a_load_5_phi_fu_1120_p3;
reg   [31:0] a_load_5_phi_reg_1634;
wire   [0:0] ap_CS_fsm_pp3_stage1;
wire   [0:0] tmp_24_fu_1127_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] tmp_20_1_fu_1133_p2;
wire   [0:0] tmp_20_2_fu_1139_p2;
wire   [0:0] exitcond3_fu_1145_p2;
wire   [0:0] ap_CS_fsm_pp4_stage0;
wire   [1:0] i_9_fu_1151_p2;
reg   [1:0] i_9_reg_1655;
wire   [0:0] tmp_15_fu_1157_p2;
reg   [2:0] a_0_addr_8_reg_1664;
reg   [2:0] ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664;
reg   [1:0] a_1_addr_8_reg_1669;
reg   [1:0] ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669;
reg   [31:0] w_1_reg_1674;
wire   [0:0] tmp_52_fu_1224_p2;
wire   [0:0] ap_CS_fsm_pp4_stage2;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681;
wire   [31:0] tmp_18_fu_1236_p1;
wire   [2:0] tmp_81_fu_1246_p3;
reg   [2:0] tmp_81_reg_1690;
reg   [1:0] a_1_addr_10_reg_1696;
reg   [31:0] a_1_load_11_reg_1701;
reg   [2:0] a_0_addr_10_reg_1706;
wire   [0:0] ap_CS_fsm_pp4_stage5;
reg   [2:0] a_0_addr_12_reg_1711;
reg   [31:0] a_0_load_10_reg_1721;
wire   [0:0] ap_CS_fsm_pp4_stage6;
wire   [31:0] grp_fu_447_p2;
reg   [31:0] tmp_22_2_reg_1726;
reg   [31:0] tmp_25_reg_1731;
reg   [31:0] tmp_22_1_reg_1736;
wire   [0:0] ap_CS_fsm_pp4_stage8;
reg   [31:0] tmp_26_reg_1741;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] tmp_19_reg_1746;
wire   [1:0] i_7_fu_1278_p2;
reg   [1:0] i_7_reg_1754;
wire   [0:0] ap_CS_fsm_state76;
reg   [8:0] work_addr_1_reg_1759;
wire   [0:0] exitcond1_fu_1272_p2;
wire   [0:0] tmp_55_fu_1289_p1;
reg   [0:0] tmp_55_reg_1765;
wire   [2:0] newIndex6_cast_fu_1293_p1;
reg   [2:0] newIndex6_cast_reg_1770;
reg   [0:0] tmp_56_reg_1775;
wire   [2:0] extLd8_fu_1305_p1;
reg   [2:0] extLd8_reg_1780;
wire   [0:0] tmp_8_fu_1309_p2;
reg   [2:0] a_0_addr_2_reg_1789;
reg   [1:0] a_1_addr_2_reg_1794;
reg   [8:0] work_addr_2_reg_1799;
reg   [1:0] work_load_1_reg_1805;
reg   [2:0] a_0_addr_3_reg_1810;
reg   [1:0] a_1_addr_3_reg_1815;
wire   [0:0] tmp_93_fu_1373_p3;
reg   [0:0] tmp_93_reg_1820;
wire   [0:0] ap_CS_fsm_pp5_stage3;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire   [0:0] ap_CS_fsm_state21;
reg    ap_enable_reg_pp3_iter1;
wire   [0:0] ap_CS_fsm_pp3_stage8;
reg    ap_enable_reg_pp5_iter1;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [1:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [1:0] work_d1;
reg   [1:0] i_reg_351;
wire   [0:0] exitcond7_fu_531_p2;
reg   [1:0] i_5_reg_363;
wire   [0:0] ap_CS_fsm_state75;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] wmax_phi_fu_379_p4;
reg   [31:0] r_1_phi_fu_390_p4;
reg   [1:0] j_reg_397;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
reg   [1:0] i_2_phi_fu_412_p4;
reg   [1:0] i_3_phi_fu_423_p4;
reg   [1:0] i_4_reg_431;
wire   [0:0] ap_CS_fsm_state88;
wire   [63:0] tmp_fu_543_p1;
wire   [63:0] tmp_35_fu_597_p3;
wire   [63:0] tmp_11_fu_586_p1;
wire   [63:0] tmp_49_fu_622_p1;
wire   [63:0] tmp_59_cast_fu_633_p1;
wire  signed [63:0] tmp_64_fu_663_p1;
wire  signed [63:0] tmp_65_cast_fu_673_p1;
wire  signed [63:0] tmp_59_fu_856_p1;
wire  signed [63:0] tmp_62_cast_fu_866_p1;
wire  signed [63:0] tmp_4_fu_931_p1;
wire   [63:0] tmp_73_fu_1008_p1;
wire   [63:0] tmp_76_cast_fu_1018_p1;
wire  signed [63:0] tmp_77_cast_fu_1028_p1;
wire  signed [63:0] tmp_75_fu_1048_p1;
wire   [63:0] tmp_79_fu_1097_p1;
wire   [63:0] tmp_80_cast_fu_1107_p1;
wire   [63:0] tmp_84_fu_1174_p1;
wire   [63:0] tmp_87_cast_fu_1184_p1;
wire   [63:0] tmp_16_fu_1241_p1;
wire   [63:0] tmp_82_fu_1254_p1;
wire   [63:0] tmp_86_fu_1263_p3;
wire   [63:0] tmp_s_fu_1284_p1;
wire   [63:0] tmp_67_fu_1327_p1;
wire  signed [63:0] tmp_68_cast_fu_1337_p1;
wire   [63:0] tmp_10_fu_1315_p1;
wire   [63:0] tmp_70_fu_1358_p1;
wire  signed [63:0] tmp_71_cast_fu_1368_p1;
reg   [31:0] r_fu_112;
wire   [31:0] r_2_fu_833_p3;
wire   [0:0] ap_CS_fsm_pp5_stage0;
reg   [31:0] a_0_Addr_A_orig;
wire   [31:0] a_load_2_phi_fu_1060_p3;
wire   [31:0] a_load_4_0_phi_fu_1381_p3;
wire   [0:0] ap_CS_fsm_pp5_stage4;
wire   [0:0] ap_CS_fsm_pp5_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage7;
wire   [0:0] ap_CS_fsm_pp5_stage8;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
wire   [0:0] ap_CS_fsm_pp4_stage9;
reg   [31:0] grp_fu_447_p1;
reg   [31:0] grp_fu_453_p0;
wire   [0:0] ap_CS_fsm_pp3_stage2;
wire   [0:0] ap_CS_fsm_state60;
reg   [31:0] grp_fu_463_p0;
wire   [2:0] tmp_7_fu_578_p3;
wire   [2:0] tmp_30_fu_591_p2;
wire   [2:0] tmp_42_fu_614_p3;
wire   [2:0] tmp_53_fu_627_p2;
wire   [32:0] tmp_63_fu_656_p3;
wire   [2:0] tmp_66_fu_652_p1;
wire   [2:0] tmp_65_fu_668_p2;
wire   [31:0] n_assign_1_to_int_fu_684_p1;
wire   [7:0] tmp_34_fu_688_p4;
wire   [22:0] tmp_69_fu_698_p1;
wire   [0:0] notrhs_fu_708_p2;
wire   [0:0] notlhs_fu_702_p2;
wire   [0:0] tmp_36_fu_714_p2;
wire   [0:0] grp_fu_463_p2;
wire   [31:0] f_neg_i_fu_726_p2;
wire   [0:0] tmp_38_fu_720_p2;
wire   [31:0] f_1_fu_732_p1;
wire   [31:0] w_3_to_int_fu_744_p1;
wire   [31:0] wmax_to_int_fu_761_p1;
wire   [7:0] tmp_39_fu_747_p4;
wire   [22:0] tmp_88_fu_757_p1;
wire   [0:0] notrhs3_fu_785_p2;
wire   [0:0] notlhs3_fu_779_p2;
wire   [7:0] tmp_41_fu_765_p4;
wire   [22:0] tmp_89_fu_775_p1;
wire   [0:0] notrhs4_fu_803_p2;
wire   [0:0] notlhs4_fu_797_p2;
wire   [0:0] tmp_43_fu_791_p2;
wire   [0:0] tmp_44_fu_809_p2;
wire   [0:0] tmp_45_fu_815_p2;
wire   [0:0] tmp_46_fu_468_p2;
wire   [32:0] tmp_58_fu_849_p3;
wire   [2:0] tmp_60_fu_861_p2;
wire   [31:0] pivot_to_int_fu_871_p1;
wire   [7:0] tmp_9_fu_875_p4;
wire   [22:0] tmp_61_fu_885_p1;
wire   [0:0] notrhs1_fu_895_p2;
wire   [0:0] notlhs1_fu_889_p2;
wire   [0:0] tmp_17_fu_901_p2;
wire   [31:0] f_neg_i1_fu_913_p2;
wire   [0:0] tmp_28_fu_907_p2;
wire   [31:0] f_fu_919_p1;
wire   [63:0] tmp_5_to_int_fu_935_p1;
wire   [10:0] tmp_29_fu_938_p4;
wire   [51:0] tmp_62_fu_948_p1;
wire   [0:0] notrhs2_fu_958_p2;
wire   [0:0] notlhs2_fu_952_p2;
wire   [0:0] tmp_31_fu_964_p2;
wire   [0:0] tmp_32_fu_473_p2;
wire   [2:0] tmp_72_fu_1000_p3;
wire   [2:0] newIndex9_cast_fu_996_p1;
wire   [2:0] tmp_76_fu_1013_p2;
wire   [2:0] tmp_77_fu_1023_p2;
wire   [32:0] tmp_74_fu_1041_p3;
wire   [0:0] tmp_96_fu_1081_p1;
wire   [2:0] tmp_78_fu_1089_p3;
wire   [2:0] newIndex2_cast_fu_1085_p1;
wire   [2:0] tmp_80_fu_1102_p2;
wire   [2:0] tmp_83_fu_1167_p3;
wire   [2:0] tmp_16_cast_fu_1163_p1;
wire   [2:0] tmp_87_fu_1179_p2;
wire   [31:0] w_1_to_int_fu_1189_p1;
wire   [7:0] tmp_48_fu_1192_p4;
wire   [22:0] tmp_98_fu_1202_p1;
wire   [0:0] notrhs5_fu_1212_p2;
wire   [0:0] notlhs5_fu_1206_p2;
wire   [0:0] tmp_50_fu_1218_p2;
wire   [31:0] tmp_18_neg_fu_1230_p2;
wire   [2:0] tmp_85_fu_1258_p2;
wire   [2:0] tmp_90_fu_1320_p3;
wire   [2:0] tmp_68_fu_1332_p2;
wire   [0:0] tmp_91_fu_1342_p1;
wire   [2:0] tmp_92_fu_1350_p3;
wire   [2:0] newIndex7_cast_fu_1346_p1;
wire   [2:0] tmp_71_fu_1363_p2;
reg   [4:0] grp_fu_463_opcode;
reg   [66:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 67'b1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 2 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3hbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

minver_hwa_fmul_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3ibs_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_1_reg_1674),
    .din1(grp_fu_447_p1),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

minver_hwa_fdiv_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3jbC_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .din1(reg_495),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

minver_hwa_fpext_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_kbM_U4(
    .din0(api_reg_1534),
    .dout(tmp_5_fu_460_p1)
);

minver_hwa_fcmp_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3lbW_U5(
    .din0(grp_fu_463_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_463_opcode),
    .dout(grp_fu_463_p2)
);

minver_hwa_fcmp_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3lbW_U6(
    .din0(w_3_reg_1495),
    .din1(wmax_phi_fu_379_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_46_fu_468_p2)
);

minver_hwa_dcmp_6mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6mb6_U7(
    .din0(tmp_5_reg_1539),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_32_fu_473_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_646_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_553_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_646_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_553_p2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_646_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond4_fu_1069_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond4_reg_1610) & (1'b1 == ap_CS_fsm_pp3_stage8))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_pp3_stage8) & ~(1'b0 == exitcond4_reg_1610)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_1145_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1651) & (1'b1 == ap_CS_fsm_pp4_stage11))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp4_stage11) & ~(1'b0 == exitcond3_reg_1651)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == tmp_8_fu_1309_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == exitcond1_fu_1272_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage9))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state76) & (1'b0 == exitcond1_fu_1272_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage9) & ~(1'b0 == tmp_8_reg_1785)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_reg_1610) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_reg_408 <= i_8_reg_1614;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_408 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_3_reg_419 <= ap_const_lv2_0;
    end else if (((1'b0 == exitcond3_reg_1651) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_3_reg_419 <= i_9_reg_1655;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_553_p2))) begin
        i_4_reg_431 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        i_4_reg_431 <= i_7_reg_1754;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_363 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        i_5_reg_363 <= k_reg_1410;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_531_p2))) begin
        i_reg_351 <= i_1_fu_537_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_351 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1564))) begin
        j_reg_397 <= j_1_reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_397 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_553_p2))) begin
        r_1_reg_387 <= i_5_cast_fu_565_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1476 == 1'b0))) begin
        r_1_reg_387 <= i_6_reg_1490;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) begin
        r_fu_112 <= r_2_fu_833_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_fu_112 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        reg_501 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_501 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_553_p2))) begin
        wmax_reg_375 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) begin
        wmax_reg_375 <= wmax_1_fu_827_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_0_addr_10_reg_1706[2 : 1] <= tmp_82_fu_1254_p1[2 : 1];
        a_0_addr_12_reg_1711[2 : 1] <= tmp_86_fu_1263_p3[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_553_p2))) begin
        a_0_addr_11_reg_1432[2 : 1] <= tmp_35_fu_597_p3[2 : 1];
        a_0_addr_7_reg_1461 <= tmp_49_fu_622_p1;
        a_0_addr_9_reg_1437[2 : 1] <= tmp_11_fu_586_p1[2 : 1];
        a_1_addr_7_reg_1466 <= tmp_59_cast_fu_633_p1;
        a_1_addr_9_reg_1442 <= tmp_3_fu_569_p1;
        i_5_cast_reg_1415[1 : 0] <= i_5_cast_fu_565_p1[1 : 0];
        newIndex4_cast_reg_1454[0] <= newIndex4_cast_fu_610_p1[0];
        tmp_3_cast_reg_1426[1 : 0] <= tmp_3_cast_fu_574_p1[1 : 0];
        tmp_3_reg_1421[1 : 0] <= tmp_3_fu_569_p1[1 : 0];
        tmp_40_reg_1447 <= tmp_40_fu_606_p1;
        tmp_54_reg_1471 <= i_5_reg_363[ap_const_lv32_1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == tmp_8_fu_1309_p2))) begin
        a_0_addr_2_reg_1789 <= tmp_67_fu_1327_p1;
        a_1_addr_2_reg_1794 <= tmp_68_cast_fu_1337_p1;
        work_addr_2_reg_1799[1 : 0] <= tmp_10_fu_1315_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1785))) begin
        a_0_addr_3_reg_1810 <= tmp_70_fu_1358_p1;
        a_1_addr_3_reg_1815 <= tmp_71_cast_fu_1368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == exitcond5_fu_980_p2))) begin
        a_0_addr_4_reg_1578 <= tmp_73_fu_1008_p1;
        a_1_addr_4_reg_1583 <= tmp_76_cast_fu_1018_p1;
        a_1_addr_6_reg_1588 <= tmp_77_cast_fu_1028_p1;
        tmp_94_reg_1573 <= tmp_94_fu_992_p1;
        tmp_95_reg_1593 <= j_reg_397[ap_const_lv32_1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_1069_p2))) begin
        a_0_addr_5_reg_1619 <= tmp_79_fu_1097_p1;
        a_1_addr_5_reg_1624 <= tmp_80_cast_fu_1107_p1;
        tmp_97_reg_1629 <= i_2_phi_fu_412_p4[ap_const_lv32_1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_addr_6_reg_1599 <= tmp_75_fu_1048_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1145_p2) & (1'b0 == tmp_15_fu_1157_p2))) begin
        a_0_addr_8_reg_1664 <= tmp_84_fu_1174_p1;
        a_1_addr_8_reg_1669 <= tmp_87_cast_fu_1184_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_24_reg_1639) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_0_load_10_reg_1721 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_1_addr_10_reg_1696 <= tmp_16_fu_1241_p1;
        tmp_81_reg_1690[2 : 1] <= tmp_81_fu_1246_p3[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_2_reg_1647))) begin
        a_1_load_11_reg_1701 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == exitcond4_reg_1610))) begin
        a_load_5_phi_reg_1634 <= a_load_5_phi_fu_1120_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476 <= exitcond6_reg_1476;
        ap_pipeline_reg_pp1_iter1_r_1_reg_387 <= r_1_reg_387;
        exitcond6_reg_1476 <= exitcond6_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476;
        ap_pipeline_reg_pp1_iter2_r_1_reg_387 <= ap_pipeline_reg_pp1_iter1_r_1_reg_387;
        ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476;
        ap_pipeline_reg_pp1_iter3_r_1_reg_387 <= ap_pipeline_reg_pp1_iter2_r_1_reg_387;
        ap_pipeline_reg_pp1_iter3_w_3_reg_1495 <= w_3_reg_1495;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619 <= a_0_addr_5_reg_1619;
        ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624 <= a_1_addr_5_reg_1624;
        ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629 <= tmp_97_reg_1629;
        exitcond4_reg_1610 <= exitcond4_fu_1069_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664 <= a_0_addr_8_reg_1664;
        ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669 <= a_1_addr_8_reg_1669;
        ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660 <= tmp_15_reg_1660;
        exitcond3_reg_1651 <= exitcond3_fu_1145_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage2)) begin
        ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681 <= tmp_52_reg_1681;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        api_reg_1534 <= api_fu_923_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        exitcond5_reg_1564 <= exitcond5_fu_980_p2;
        j_1_reg_1568 <= j_1_fu_986_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
        extLd8_reg_1780[1 : 0] <= extLd8_fu_1305_p1[1 : 0];
        tmp_8_reg_1785 <= tmp_8_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_646_p2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_6_reg_1490 <= i_6_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        i_7_reg_1754 <= i_7_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        i_8_reg_1614 <= i_8_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_1655 <= i_9_fu_1151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_1410 <= k_fu_559_p2;
        tmp_2_reg_1406 <= tmp_2_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == exitcond1_fu_1272_p2))) begin
        newIndex6_cast_reg_1770[0] <= newIndex6_cast_fu_1293_p1[0];
        tmp_55_reg_1765 <= tmp_55_fu_1289_p1;
        tmp_56_reg_1775 <= i_4_reg_431[ap_const_lv32_1];
        work_addr_1_reg_1759[1 : 0] <= tmp_s_fu_1284_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_load_reg_1513 <= r_fu_112;
        tmp_57_reg_1519 <= tmp_57_fu_845_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1476 == 1'b0)) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_495 <= grp_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_24_reg_1639)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == tmp_20_1_reg_1643)))) begin
        reg_508 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == tmp_20_2_reg_1647)))) begin
        reg_514 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_2_reg_1647) & (1'b1 == ap_CS_fsm_pp4_stage11)) | ((1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_1_reg_1643) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)))) begin
        reg_519 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1785)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage9)))) begin
        reg_525 <= grp_fu_488_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1145_p2))) begin
        tmp_15_reg_1660 <= tmp_15_fu_1157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681))) begin
        tmp_19_reg_1746 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_20_1_reg_1643 <= tmp_20_1_fu_1133_p2;
        tmp_20_2_reg_1647 <= tmp_20_2_fu_1139_p2;
        tmp_24_reg_1639 <= tmp_24_fu_1127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_1_reg_1643) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_22_1_reg_1736 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_2_reg_1647) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        tmp_22_2_reg_1726 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_24_reg_1639) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        tmp_25_reg_1731 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_15_reg_1660) & (1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_24_reg_1639) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_26_reg_1741 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476)) begin
        tmp_47_reg_1502 <= tmp_47_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        tmp_52_reg_1681 <= tmp_52_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_5_reg_1539 <= tmp_5_fu_460_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        tmp_93_reg_1820 <= reg_501[ap_const_lv32_1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        w_1_reg_1674 <= grp_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476)) begin
        w_3_reg_1495 <= w_3_fu_736_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_reg_1604 <= w_fu_1053_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_2_reg_1406) & (1'b0 == tmp_33_fu_970_p2) & (1'b0 == tmp_1_fu_976_p2))) begin
        work_addr_3_reg_1552[1 : 0] <= tmp_3_reg_1421[1 : 0];
        work_addr_4_reg_1558 <= tmp_4_fu_931_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1785))) begin
        work_load_1_reg_1805 <= work_q0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Addr_A_orig = a_0_addr_3_reg_1810;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)))) begin
        a_0_Addr_A_orig = a_0_addr_2_reg_1789;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        a_0_Addr_A_orig = tmp_70_fu_1358_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_0_Addr_A_orig = tmp_67_fu_1327_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_0_Addr_A_orig = a_0_addr_7_reg_1461;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Addr_A_orig = a_0_addr_10_reg_1706;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        a_0_Addr_A_orig = a_0_addr_12_reg_1711;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_0_Addr_A_orig = tmp_82_fu_1254_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        a_0_Addr_A_orig = a_0_addr_11_reg_1432;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_0_Addr_A_orig = a_0_addr_9_reg_1437;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_0_Addr_A_orig = tmp_84_fu_1174_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        a_0_Addr_A_orig = ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        a_0_Addr_A_orig = tmp_79_fu_1097_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_0_Addr_A_orig = a_0_addr_6_reg_1599;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Addr_A_orig = a_0_addr_4_reg_1578;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        a_0_Addr_A_orig = tmp_75_fu_1048_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_0_Addr_A_orig = tmp_73_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_0_Addr_A_orig = tmp_59_fu_856_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_0_Addr_A_orig = tmp_64_fu_663_p1;
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Din_A = reg_525;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        a_0_Din_A = a_load_4_0_phi_fu_1381_p3;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Din_A = tmp_19_reg_1746;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_0_Din_A = reg_519;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_0_Din_A = tmp_26_reg_1741;
    end else if (((1'b1 == ap_CS_fsm_state75) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)))) begin
        a_0_Din_A = grp_fu_453_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_0_Din_A = w_reg_1604;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_0_Din_A = a_load_2_phi_fu_1060_p3;
    end else begin
        a_0_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & (1'b0 == tmp_95_reg_1593)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1564) & (1'b0 == tmp_95_reg_1593)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629)) | ((1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_24_reg_1639) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)) | ((1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_1_reg_1643) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) & (1'b0 == tmp_54_reg_1471) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681)) | ((1'b0 == tmp_54_reg_1471) & (1'b1 == ap_CS_fsm_state75)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == tmp_93_reg_1820)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b0 == tmp_93_reg_1820) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage9) & (1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == tmp_93_reg_1820) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_WEN_A = ap_const_lv4_F;
    end else begin
        a_0_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Addr_A_orig = a_1_addr_3_reg_1815;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)))) begin
        a_1_Addr_A_orig = a_1_addr_2_reg_1794;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        a_1_Addr_A_orig = tmp_71_cast_fu_1368_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_1_Addr_A_orig = tmp_68_cast_fu_1337_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        a_1_Addr_A_orig = a_1_addr_7_reg_1466;
    end else if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_1_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_1_Addr_A_orig = a_1_addr_10_reg_1696;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_1_Addr_A_orig = tmp_16_fu_1241_p1;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_1_Addr_A_orig = a_1_addr_9_reg_1442;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_1_Addr_A_orig = tmp_87_cast_fu_1184_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        a_1_Addr_A_orig = ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        a_1_Addr_A_orig = tmp_80_cast_fu_1107_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Addr_A_orig = a_1_addr_4_reg_1583;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
        a_1_Addr_A_orig = a_1_addr_6_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_1_Addr_A_orig = tmp_76_cast_fu_1018_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_1_Addr_A_orig = tmp_62_cast_fu_866_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_1_Addr_A_orig = tmp_65_cast_fu_673_p1;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Din_A = reg_525;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        a_1_Din_A = a_load_4_0_phi_fu_1381_p3;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_1_Din_A = reg_519;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | (1'b1 == ap_CS_fsm_state75) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)))) begin
        a_1_Din_A = grp_fu_453_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_1_Din_A = w_reg_1604;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_1_Din_A = a_load_2_phi_fu_1060_p3;
    end else begin
        a_1_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == tmp_95_reg_1593)) | ((1'b1 == ap_CS_fsm_state20) & (1'b0 == exitcond5_reg_1564) & ~(1'b0 == tmp_95_reg_1593)) | ((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b0 == ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629)) | ((1'b0 == tmp_52_reg_1681) & (1'b0 == tmp_20_2_reg_1647) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) & ~(1'b0 == tmp_54_reg_1471) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681)) | (~(1'b0 == tmp_54_reg_1471) & (1'b1 == ap_CS_fsm_state75)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage3) & ~(1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage4) & ~(1'b0 == tmp_93_reg_1820)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage6) & ~(1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage7) & ~(1'b0 == tmp_93_reg_1820)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage9) & ~(1'b0 == tmp_56_reg_1775)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1) & ~(1'b0 == tmp_93_reg_1820)))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1406) | ~(1'b0 == tmp_33_fu_970_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1406) | ~(1'b0 == tmp_33_fu_970_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_443_p0 = reg_508;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_443_p0 = a_0_load_10_reg_1721;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage7)) begin
            grp_fu_443_p0 = a_1_load_11_reg_1701;
        end else begin
            grp_fu_443_p0 = 'bx;
        end
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_443_p1 = tmp_22_1_reg_1736;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_443_p1 = tmp_25_reg_1731;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage7)) begin
            grp_fu_443_p1 = tmp_22_2_reg_1726;
        end else begin
            grp_fu_443_p1 = 'bx;
        end
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)))) begin
        grp_fu_447_p1 = a_0_Dout_A;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_447_p1 = a_1_Dout_A;
    end else begin
        grp_fu_447_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_453_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_453_p0 = tmp_18_fu_1236_p1;
    end else if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        grp_fu_453_p0 = a_load_5_phi_reg_1634;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1651) & (1'b0 == tmp_15_reg_1660) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_463_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        grp_fu_463_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_463_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_463_p0 = w_1_reg_1674;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_enable_reg_pp1_iter2))) begin
        grp_fu_463_p0 = reg_495;
    end else begin
        grp_fu_463_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_reg_1610) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_phi_fu_412_p4 = i_8_reg_1614;
    end else begin
        i_2_phi_fu_412_p4 = i_2_reg_408;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond3_reg_1651) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_3_phi_fu_423_p4 = i_9_reg_1655;
    end else begin
        i_3_phi_fu_423_p4 = i_3_reg_419;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1476 == 1'b0))) begin
        r_1_phi_fu_390_p4 = i_6_reg_1490;
    end else begin
        r_1_phi_fu_390_p4 = r_1_reg_387;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) begin
        wmax_phi_fu_379_p4 = wmax_1_fu_827_p3;
    end else begin
        wmax_phi_fu_379_p4 = wmax_reg_375;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_address0 = work_addr_1_reg_1759;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        work_address0 = tmp_10_fu_1315_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_address0 = work_addr_4_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address0 = tmp_3_reg_1421;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_543_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_address1 = work_addr_2_reg_1799;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        work_address1 = work_addr_1_reg_1759;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address1 = work_addr_3_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = tmp_4_fu_931_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_d0 = work_load_1_reg_1805;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_d0 = reg_501;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_351;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_d1 = reg_501;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_531_p2)) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1785) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1785)))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond7_fu_531_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == tmp_2_fu_553_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter4) & ~(1'b1 == ap_enable_reg_pp1_iter3)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_646_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_646_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~(1'b0 == tmp_2_reg_1406) | ~(1'b0 == tmp_33_fu_970_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1406) & (1'b0 == tmp_33_fu_970_p2) & ~(1'b0 == tmp_1_fu_976_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if ((1'b0 == exitcond5_fu_980_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond4_fu_1069_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage2;
        end
        ap_ST_fsm_pp3_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage3;
        end
        ap_ST_fsm_pp3_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage4;
        end
        ap_ST_fsm_pp3_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage5;
        end
        ap_ST_fsm_pp3_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage6;
        end
        ap_ST_fsm_pp3_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage7;
        end
        ap_ST_fsm_pp3_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage8;
        end
        ap_ST_fsm_pp3_stage8 : begin
            if (~((1'b1 == ap_CS_fsm_pp3_stage8) & (1'b1 == ap_enable_reg_pp3_iter1) & ~(1'b1 == ap_enable_reg_pp3_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_1145_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage7;
        end
        ap_ST_fsm_pp4_stage7 : begin
            if (~((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b1 == ap_enable_reg_pp4_iter1) & ~(1'b1 == ap_enable_reg_pp4_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage11;
        end
        ap_ST_fsm_pp4_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state76 : begin
            if (~(1'b0 == exitcond1_fu_1272_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage1;
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == tmp_8_fu_1309_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage3;
        end
        ap_ST_fsm_pp5_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage4;
        end
        ap_ST_fsm_pp5_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage5;
        end
        ap_ST_fsm_pp5_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage6;
        end
        ap_ST_fsm_pp5_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage7;
        end
        ap_ST_fsm_pp5_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage8;
        end
        ap_ST_fsm_pp5_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage9;
        end
        ap_ST_fsm_pp5_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Rst_A = ap_rst;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Rst_A = ap_rst;

assign a_load_2_phi_fu_1060_p3 = ((tmp_95_reg_1593[0:0] === 1'b1) ? a_1_Dout_A : a_0_Dout_A);

assign a_load_4_0_phi_fu_1381_p3 = ((tmp_93_fu_1373_p3[0:0] === 1'b1) ? a_1_Dout_A : a_0_Dout_A);

assign a_load_5_phi_fu_1120_p3 = ((tmp_97_reg_1629[0:0] === 1'b1) ? a_1_Dout_A : a_0_Dout_A);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp3_stage8 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_38];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_39];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[ap_const_lv32_3A];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[ap_const_lv32_3B];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state60 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state75 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_state76 = ap_CS_fsm[ap_const_lv32_37];

assign ap_CS_fsm_state88 = ap_CS_fsm[ap_const_lv32_42];

assign ap_return = ap_const_lv32_1;

assign api_fu_923_p3 = ((tmp_28_fu_907_p2[0:0] === 1'b1) ? reg_495 : f_fu_919_p1);

assign exitcond1_fu_1272_p2 = ((i_4_reg_431 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond3_fu_1145_p2 = ((i_3_phi_fu_423_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond4_fu_1069_p2 = ((i_2_phi_fu_412_p4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond5_fu_980_p2 = ((j_reg_397 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond6_fu_646_p2 = ((r_1_phi_fu_390_p4 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign exitcond7_fu_531_p2 = ((i_reg_351 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign extLd8_fu_1305_p1 = work_q1;

assign f_1_fu_732_p1 = f_neg_i_fu_726_p2;

assign f_fu_919_p1 = f_neg_i1_fu_913_p2;

assign f_neg_i1_fu_913_p2 = (pivot_to_int_fu_871_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_726_p2 = (n_assign_1_to_int_fu_684_p1 ^ ap_const_lv32_80000000);

assign grp_fu_478_p3 = ((tmp_54_reg_1471[0:0] === 1'b1) ? a_1_Dout_A : a_0_Dout_A);

assign grp_fu_488_p3 = ((tmp_56_reg_1775[0:0] === 1'b1) ? a_1_Dout_A : a_0_Dout_A);

assign i_1_fu_537_p2 = (i_reg_351 + ap_const_lv2_1);

assign i_5_cast_fu_565_p1 = i_5_reg_363;

assign i_6_fu_678_p2 = (ap_const_lv32_1 + r_1_phi_fu_390_p4);

assign i_7_fu_1278_p2 = (i_4_reg_431 + ap_const_lv2_1);

assign i_8_fu_1075_p2 = (i_2_phi_fu_412_p4 + ap_const_lv2_1);

assign i_9_fu_1151_p2 = (i_3_phi_fu_423_p4 + ap_const_lv2_1);

assign j_1_fu_986_p2 = (j_reg_397 + ap_const_lv2_1);

assign k_fu_559_p2 = (i_5_reg_363 + ap_const_lv2_1);

assign n_assign_1_to_int_fu_684_p1 = reg_495;

assign newIndex2_cast_fu_1085_p1 = tmp_96_fu_1081_p1;

assign newIndex4_cast_fu_610_p1 = tmp_40_fu_606_p1;

assign newIndex6_cast_fu_1293_p1 = tmp_55_fu_1289_p1;

assign newIndex7_cast_fu_1346_p1 = tmp_91_fu_1342_p1;

assign newIndex9_cast_fu_996_p1 = tmp_94_fu_992_p1;

assign notlhs1_fu_889_p2 = ((tmp_9_fu_875_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_952_p2 = ((tmp_29_fu_938_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_779_p2 = ((tmp_39_fu_747_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_797_p2 = ((tmp_41_fu_765_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_1206_p2 = ((tmp_48_fu_1192_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_702_p2 = ((tmp_34_fu_688_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_895_p2 = ((tmp_61_fu_885_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_958_p2 = ((tmp_62_fu_948_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_785_p2 = ((tmp_88_fu_757_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_803_p2 = ((tmp_89_fu_775_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1212_p2 = ((tmp_98_fu_1202_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_708_p2 = ((tmp_69_fu_698_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign pivot_to_int_fu_871_p1 = reg_495;

assign r_2_fu_833_p3 = ((tmp_47_reg_1502[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_r_1_reg_387 : r_fu_112);

assign tmp_10_fu_1315_p1 = work_q1;

assign tmp_11_fu_586_p1 = tmp_7_fu_578_p3;

assign tmp_15_fu_1157_p2 = ((i_3_phi_fu_423_p4 == i_5_reg_363) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_1163_p1 = i_3_phi_fu_423_p4;

assign tmp_16_fu_1241_p1 = i_3_reg_419;

assign tmp_17_fu_901_p2 = (notrhs1_fu_895_p2 | notlhs1_fu_889_p2);

assign tmp_18_fu_1236_p1 = tmp_18_neg_fu_1230_p2;

assign tmp_18_neg_fu_1230_p2 = (w_1_to_int_fu_1189_p1 ^ ap_const_lv32_80000000);

assign tmp_1_fu_976_p2 = ((r_load_reg_1513 == i_5_cast_reg_1415) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_1133_p2 = ((i_5_reg_363 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_20_2_fu_1139_p2 = ((i_5_reg_363 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp_24_fu_1127_p2 = ((i_5_reg_363 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_28_fu_907_p2 = (tmp_17_fu_901_p2 & grp_fu_463_p2);

assign tmp_29_fu_938_p4 = {{tmp_5_to_int_fu_935_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_2_fu_553_p2 = ((i_5_reg_363 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign tmp_30_fu_591_p2 = (tmp_7_fu_578_p3 | ap_const_lv3_1);

assign tmp_31_fu_964_p2 = (notrhs2_fu_958_p2 | notlhs2_fu_952_p2);

assign tmp_33_fu_970_p2 = (tmp_31_fu_964_p2 & tmp_32_fu_473_p2);

assign tmp_34_fu_688_p4 = {{n_assign_1_to_int_fu_684_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_35_fu_597_p3 = {{ap_const_lv61_0}, {tmp_30_fu_591_p2}};

assign tmp_36_fu_714_p2 = (notrhs_fu_708_p2 | notlhs_fu_702_p2);

assign tmp_38_fu_720_p2 = (tmp_36_fu_714_p2 & grp_fu_463_p2);

assign tmp_39_fu_747_p4 = {{w_3_to_int_fu_744_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_3_cast_fu_574_p1 = i_5_reg_363;

assign tmp_3_fu_569_p1 = i_5_reg_363;

assign tmp_40_fu_606_p1 = i_5_reg_363[0:0];

assign tmp_41_fu_765_p4 = {{wmax_to_int_fu_761_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_42_fu_614_p3 = {{i_5_reg_363}, {tmp_40_fu_606_p1}};

assign tmp_43_fu_791_p2 = (notrhs3_fu_785_p2 | notlhs3_fu_779_p2);

assign tmp_44_fu_809_p2 = (notrhs4_fu_803_p2 | notlhs4_fu_797_p2);

assign tmp_45_fu_815_p2 = (tmp_43_fu_791_p2 & tmp_44_fu_809_p2);

assign tmp_47_fu_821_p2 = (tmp_45_fu_815_p2 & tmp_46_fu_468_p2);

assign tmp_48_fu_1192_p4 = {{w_1_to_int_fu_1189_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_49_fu_622_p1 = tmp_42_fu_614_p3;

assign tmp_4_fu_931_p1 = $signed(r_load_reg_1513);

assign tmp_50_fu_1218_p2 = (notrhs5_fu_1212_p2 | notlhs5_fu_1206_p2);

assign tmp_52_fu_1224_p2 = (tmp_50_fu_1218_p2 & grp_fu_463_p2);

assign tmp_53_fu_627_p2 = (tmp_3_cast_fu_574_p1 + newIndex4_cast_fu_610_p1);

assign tmp_55_fu_1289_p1 = i_4_reg_431[0:0];

assign tmp_57_fu_845_p1 = r_fu_112[2:0];

assign tmp_58_fu_849_p3 = {{r_fu_112}, {tmp_40_reg_1447}};

assign tmp_59_cast_fu_633_p1 = tmp_53_fu_627_p2;

assign tmp_59_fu_856_p1 = $signed(tmp_58_fu_849_p3);

assign tmp_5_to_int_fu_935_p1 = tmp_5_reg_1539;

assign tmp_60_fu_861_p2 = (newIndex4_cast_reg_1454 + tmp_57_fu_845_p1);

assign tmp_61_fu_885_p1 = pivot_to_int_fu_871_p1[22:0];

assign tmp_62_cast_fu_866_p1 = $signed(tmp_60_fu_861_p2);

assign tmp_62_fu_948_p1 = tmp_5_to_int_fu_935_p1[51:0];

assign tmp_63_fu_656_p3 = {{r_1_phi_fu_390_p4}, {tmp_40_reg_1447}};

assign tmp_64_fu_663_p1 = $signed(tmp_63_fu_656_p3);

assign tmp_65_cast_fu_673_p1 = $signed(tmp_65_fu_668_p2);

assign tmp_65_fu_668_p2 = (newIndex4_cast_reg_1454 + tmp_66_fu_652_p1);

assign tmp_66_fu_652_p1 = r_1_phi_fu_390_p4[2:0];

assign tmp_67_fu_1327_p1 = tmp_90_fu_1320_p3;

assign tmp_68_cast_fu_1337_p1 = $signed(tmp_68_fu_1332_p2);

assign tmp_68_fu_1332_p2 = (extLd8_fu_1305_p1 + newIndex6_cast_reg_1770);

assign tmp_69_fu_698_p1 = n_assign_1_to_int_fu_684_p1[22:0];

assign tmp_70_fu_1358_p1 = tmp_92_fu_1350_p3;

assign tmp_71_cast_fu_1368_p1 = $signed(tmp_71_fu_1363_p2);

assign tmp_71_fu_1363_p2 = (extLd8_reg_1780 + newIndex7_cast_fu_1346_p1);

assign tmp_72_fu_1000_p3 = {{i_5_reg_363}, {tmp_94_fu_992_p1}};

assign tmp_73_fu_1008_p1 = tmp_72_fu_1000_p3;

assign tmp_74_fu_1041_p3 = {{r_fu_112}, {tmp_94_reg_1573}};

assign tmp_75_fu_1048_p1 = $signed(tmp_74_fu_1041_p3);

assign tmp_76_cast_fu_1018_p1 = tmp_76_fu_1013_p2;

assign tmp_76_fu_1013_p2 = (tmp_3_cast_reg_1426 + newIndex9_cast_fu_996_p1);

assign tmp_77_cast_fu_1028_p1 = $signed(tmp_77_fu_1023_p2);

assign tmp_77_fu_1023_p2 = (tmp_57_reg_1519 + newIndex9_cast_fu_996_p1);

assign tmp_78_fu_1089_p3 = {{i_5_reg_363}, {tmp_96_fu_1081_p1}};

assign tmp_79_fu_1097_p1 = tmp_78_fu_1089_p3;

assign tmp_7_fu_578_p3 = {{i_5_reg_363}, {1'b0}};

assign tmp_80_cast_fu_1107_p1 = tmp_80_fu_1102_p2;

assign tmp_80_fu_1102_p2 = (newIndex2_cast_fu_1085_p1 + tmp_3_cast_reg_1426);

assign tmp_81_fu_1246_p3 = {{i_3_reg_419}, {1'b0}};

assign tmp_82_fu_1254_p1 = tmp_81_reg_1690;

assign tmp_83_fu_1167_p3 = {{i_3_phi_fu_423_p4}, {tmp_40_reg_1447}};

assign tmp_84_fu_1174_p1 = tmp_83_fu_1167_p3;

assign tmp_85_fu_1258_p2 = (tmp_81_reg_1690 | ap_const_lv3_1);

assign tmp_86_fu_1263_p3 = {{ap_const_lv61_0}, {tmp_85_fu_1258_p2}};

assign tmp_87_cast_fu_1184_p1 = tmp_87_fu_1179_p2;

assign tmp_87_fu_1179_p2 = (tmp_16_cast_fu_1163_p1 + newIndex4_cast_reg_1454);

assign tmp_88_fu_757_p1 = w_3_to_int_fu_744_p1[22:0];

assign tmp_89_fu_775_p1 = wmax_to_int_fu_761_p1[22:0];

assign tmp_8_fu_1309_p2 = ((work_q1 == i_4_reg_431) ? 1'b1 : 1'b0);

assign tmp_90_fu_1320_p3 = {{work_q1}, {tmp_55_reg_1765}};

assign tmp_91_fu_1342_p1 = reg_501[0:0];

assign tmp_92_fu_1350_p3 = {{reg_501}, {tmp_91_fu_1342_p1}};

assign tmp_93_fu_1373_p3 = reg_501[ap_const_lv32_1];

assign tmp_94_fu_992_p1 = j_reg_397[0:0];

assign tmp_96_fu_1081_p1 = i_2_phi_fu_412_p4[0:0];

assign tmp_98_fu_1202_p1 = w_1_to_int_fu_1189_p1[22:0];

assign tmp_9_fu_875_p4 = {{pivot_to_int_fu_871_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_fu_543_p1 = i_reg_351;

assign tmp_s_fu_1284_p1 = i_4_reg_431;

assign w_1_to_int_fu_1189_p1 = w_1_reg_1674;

assign w_3_fu_736_p3 = ((tmp_38_fu_720_p2[0:0] === 1'b1) ? reg_495 : f_1_fu_732_p1);

assign w_3_to_int_fu_744_p1 = w_3_reg_1495;

assign w_fu_1053_p3 = ((tmp_95_reg_1593[0:0] === 1'b1) ? reg_514 : reg_508);

assign wmax_1_fu_827_p3 = ((tmp_47_reg_1502[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_w_3_reg_1495 : wmax_reg_375);

assign wmax_to_int_fu_761_p1 = wmax_phi_fu_379_p4;

always @ (posedge ap_clk) begin
    i_5_cast_reg_1415[31:2] <= 30'b000000000000000000000000000000;
    tmp_3_reg_1421[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1426[2] <= 1'b0;
    a_0_addr_11_reg_1432[0] <= 1'b1;
    a_0_addr_9_reg_1437[0] <= 1'b0;
    newIndex4_cast_reg_1454[2:1] <= 2'b00;
    work_addr_3_reg_1552[8:2] <= 7'b0000000;
    tmp_81_reg_1690[0] <= 1'b0;
    a_0_addr_10_reg_1706[0] <= 1'b0;
    a_0_addr_12_reg_1711[0] <= 1'b1;
    work_addr_1_reg_1759[8:2] <= 7'b0000000;
    newIndex6_cast_reg_1770[2:1] <= 2'b00;
    extLd8_reg_1780[2] <= 1'b0;
    work_addr_2_reg_1799[8:2] <= 7'b0000000;
end

endmodule //minver_hwa
