-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity minver_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of minver_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2486,HLS_SYN_LUT=3139}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp3_stage4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp3_stage5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp3_stage6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp3_stage7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp3_stage8 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage8 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage9 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage10 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage11 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage4 : STD_LOGIC_VECTOR (66 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage5 : STD_LOGIC_VECTOR (66 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage6 : STD_LOGIC_VECTOR (66 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage7 : STD_LOGIC_VECTOR (66 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage8 : STD_LOGIC_VECTOR (66 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage9 : STD_LOGIC_VECTOR (66 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (66 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv64_3EB0C6F7A0B5ED8D : STD_LOGIC_VECTOR (63 downto 0) := "0011111010110000110001101111011110100000101101011110110110001101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wmax_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter1_r_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_pipeline_reg_pp1_iter2_r_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_r_1_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_reg_408 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_reg_419 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_495 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond6_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal work_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_501 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal work_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_pp4_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage4 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal exitcond3_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1660 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1681 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1639 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage7 : signal is "none";
    signal tmp_20_1_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal tmp_20_2_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage11 : signal is "none";
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage2 : signal is "none";
    signal tmp_8_reg_1785 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage6 : signal is "none";
    signal ap_CS_fsm_pp5_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage9 : signal is "none";
    signal i_1_fu_537_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal k_fu_559_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_reg_1410 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_5_cast_fu_565_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_cast_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1421 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_cast_fu_574_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_cast_reg_1426 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_11_reg_1432 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_9_reg_1437 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_9_reg_1442 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_606_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1447 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex4_cast_fu_610_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex4_cast_reg_1454 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_addr_7_reg_1461 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_7_reg_1466 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_54_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_1490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal w_3_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_w_3_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal wmax_1_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal r_load_reg_1513 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_57_fu_845_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_57_reg_1519 : STD_LOGIC_VECTOR (2 downto 0);
    signal api_fu_923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal api_reg_1534 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_5_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1539 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_1_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_33_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal work_addr_3_reg_1552 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_addr_4_reg_1558 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond5_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_reg_1564 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal j_1_fu_986_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_1568 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_fu_992_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_1573 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_4_reg_1578 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_4_reg_1583 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_addr_6_reg_1588 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_reg_1593 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_6_reg_1599 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_fu_1053_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal exitcond4_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_reg_1610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal i_8_fu_1075_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_8_reg_1614 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal a_0_addr_5_reg_1619 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_5_reg_1624 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_97_reg_1629 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_load_5_phi_fu_1120_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_5_phi_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal tmp_24_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal tmp_20_1_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_2_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal i_9_fu_1151_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_9_reg_1655 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_8_reg_1664 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_8_reg_1669 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_1_reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_1246_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_81_reg_1690 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_10_reg_1696 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_load_11_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_addr_10_reg_1706 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp4_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage5 : signal is "none";
    signal a_0_addr_12_reg_1711 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_0_load_10_reg_1721 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage6 : signal is "none";
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_2_reg_1726 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_1_reg_1736 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage8 : signal is "none";
    signal tmp_26_reg_1741 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1746 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_1278_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_7_reg_1754 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal work_addr_1_reg_1759 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1289_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal newIndex6_cast_fu_1293_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex6_cast_reg_1770 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_56_reg_1775 : STD_LOGIC_VECTOR (0 downto 0);
    signal extLd8_fu_1305_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal extLd8_reg_1780 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_addr_2_reg_1789 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_2_reg_1794 : STD_LOGIC_VECTOR (1 downto 0);
    signal work_addr_2_reg_1799 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_load_1_reg_1805 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_0_addr_3_reg_1810 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_1_addr_3_reg_1815 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_fu_1373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage3 : signal is "none";
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp3_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage8 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal work_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce0 : STD_LOGIC;
    signal work_we0 : STD_LOGIC;
    signal work_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal work_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal work_ce1 : STD_LOGIC;
    signal work_we1 : STD_LOGIC;
    signal work_d1 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_351 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond7_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_reg_363 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal wmax_phi_fu_379_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_1_phi_fu_390_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_397 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_2_phi_fu_412_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3_phi_fu_423_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_4_reg_431 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal tmp_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_597_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_cast_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_cast_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_cast_fu_866_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_cast_fu_1018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_cast_fu_1028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_1048_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_1097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_cast_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_1174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_cast_fu_1184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_1254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_fu_1263_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_fu_1327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_cast_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_1358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_cast_fu_1368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_2_fu_833_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_2_phi_fu_1060_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_load_4_0_phi_fu_1381_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp5_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage4 : signal is "none";
    signal ap_CS_fsm_pp5_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage5 : signal is "none";
    signal ap_CS_fsm_pp5_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage7 : signal is "none";
    signal ap_CS_fsm_pp5_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage8 : signal is "none";
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage9 : signal is "none";
    signal grp_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_453_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_fu_463_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_578_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_fu_591_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_42_fu_614_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_53_fu_627_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_63_fu_656_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_66_fu_652_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_65_fu_668_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_assign_1_to_int_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_688_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_698_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_1_fu_732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_to_int_fu_744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal wmax_to_int_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_747_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_88_fu_757_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_765_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_89_fu_775_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_849_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_60_fu_861_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal pivot_to_int_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_875_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_885_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_neg_i1_fu_913_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_to_int_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_938_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_62_fu_948_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs2_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1000_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex9_cast_fu_996_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_76_fu_1013_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_77_fu_1023_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_74_fu_1041_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_96_fu_1081_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_1089_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex2_cast_fu_1085_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_80_fu_1102_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_83_fu_1167_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_cast_fu_1163_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_87_fu_1179_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_1_to_int_fu_1189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1192_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_fu_1202_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_neg_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1258_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_90_fu_1320_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_68_fu_1332_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_91_fu_1342_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_1350_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal newIndex7_cast_fu_1346_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_71_fu_1363_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_463_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (66 downto 0);

    component minver_hwa_fsub_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fmul_3ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fdiv_3jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component minver_hwa_fpext_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component minver_hwa_fcmp_3lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_dcmp_6mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component minver_hwa_work IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (1 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    work_U : component minver_hwa_work
    generic map (
        DataWidth => 2,
        AddressRange => 500,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => work_address0,
        ce0 => work_ce0,
        we0 => work_we0,
        d0 => work_d0,
        q0 => work_q0,
        address1 => work_address1,
        ce1 => work_ce1,
        we1 => work_we1,
        d1 => work_d1,
        q1 => work_q1);

    minver_hwa_fsub_3hbi_U1 : component minver_hwa_fsub_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_443_p0,
        din1 => grp_fu_443_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_443_p2);

    minver_hwa_fmul_3ibs_U2 : component minver_hwa_fmul_3ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => w_1_reg_1674,
        din1 => grp_fu_447_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_447_p2);

    minver_hwa_fdiv_3jbC_U3 : component minver_hwa_fdiv_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_453_p0,
        din1 => reg_495,
        ce => ap_const_logic_1,
        dout => grp_fu_453_p2);

    minver_hwa_fpext_kbM_U4 : component minver_hwa_fpext_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => api_reg_1534,
        dout => tmp_5_fu_460_p1);

    minver_hwa_fcmp_3lbW_U5 : component minver_hwa_fcmp_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_463_p0,
        din1 => ap_const_lv32_0,
        opcode => grp_fu_463_opcode,
        dout => grp_fu_463_p2);

    minver_hwa_fcmp_3lbW_U6 : component minver_hwa_fcmp_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => w_3_reg_1495,
        din1 => wmax_phi_fu_379_p4,
        opcode => ap_const_lv5_2,
        dout => tmp_46_fu_468_p2);

    minver_hwa_dcmp_6mb6_U7 : component minver_hwa_dcmp_6mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_5_reg_1539,
        din1 => ap_const_lv64_3EB0C6F7A0B5ED8D,
        opcode => ap_const_lv5_5,
        dout => tmp_32_fu_473_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_646_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_553_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_646_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_553_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond6_fu_646_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond4_fu_1069_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond4_reg_1610) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage8))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and not((ap_const_lv1_0 = exitcond4_reg_1610))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and not((ap_const_lv1_0 = exitcond3_fu_1145_p2)))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage11))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage11) and not((ap_const_lv1_0 = exitcond3_reg_1651))))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and not((ap_const_lv1_0 = tmp_8_fu_1309_p2)))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state76) and (ap_const_lv1_0 = exitcond1_fu_1272_p2))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state76) and (ap_const_lv1_0 = exitcond1_fu_1272_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and not((ap_const_lv1_0 = tmp_8_reg_1785))))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_2_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_reg_1610) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
                i_2_reg_408 <= i_8_reg_1614;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
                i_2_reg_408 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_3_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                i_3_reg_419 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
                i_3_reg_419 <= i_9_reg_1655;
            end if; 
        end if;
    end process;

    i_4_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = tmp_2_fu_553_p2)))) then 
                i_4_reg_431 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state88))) then 
                i_4_reg_431 <= i_7_reg_1754;
            end if; 
        end if;
    end process;

    i_5_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_5_reg_363 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
                i_5_reg_363 <= k_reg_1410;
            end if; 
        end if;
    end process;

    i_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_531_p2))) then 
                i_reg_351 <= i_1_fu_537_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_351 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1564))) then 
                j_reg_397 <= j_1_reg_1568;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
                j_reg_397 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    r_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_553_p2))) then 
                r_1_reg_387 <= i_5_cast_fu_565_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1476 = ap_const_lv1_0))) then 
                r_1_reg_387 <= i_6_reg_1490;
            end if; 
        end if;
    end process;

    r_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) then 
                r_fu_112 <= r_2_fu_833_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                r_fu_112 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
                reg_501 <= work_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
                reg_501 <= work_q0;
            end if; 
        end if;
    end process;

    wmax_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_553_p2))) then 
                wmax_reg_375 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) then 
                wmax_reg_375 <= wmax_1_fu_827_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then
                    a_0_addr_10_reg_1706(2 downto 1) <= tmp_82_fu_1254_p1(3 - 1 downto 0)(2 downto 1);
                    a_0_addr_12_reg_1711(2 downto 1) <= tmp_86_fu_1263_p3(3 - 1 downto 0)(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_2_fu_553_p2))) then
                    a_0_addr_11_reg_1432(2 downto 1) <= tmp_35_fu_597_p3(3 - 1 downto 0)(2 downto 1);
                a_0_addr_7_reg_1461 <= tmp_49_fu_622_p1(3 - 1 downto 0);
                    a_0_addr_9_reg_1437(2 downto 1) <= tmp_11_fu_586_p1(3 - 1 downto 0)(2 downto 1);
                a_1_addr_7_reg_1466 <= tmp_59_cast_fu_633_p1(2 - 1 downto 0);
                a_1_addr_9_reg_1442 <= tmp_3_fu_569_p1(2 - 1 downto 0);
                    i_5_cast_reg_1415(1 downto 0) <= i_5_cast_fu_565_p1(1 downto 0);
                    newIndex4_cast_reg_1454(0) <= newIndex4_cast_fu_610_p1(0);
                    tmp_3_cast_reg_1426(1 downto 0) <= tmp_3_cast_fu_574_p1(1 downto 0);
                    tmp_3_reg_1421(1 downto 0) <= tmp_3_fu_569_p1(1 downto 0);
                tmp_40_reg_1447 <= tmp_40_fu_606_p1;
                tmp_54_reg_1471 <= i_5_reg_363(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_lv1_0 = tmp_8_fu_1309_p2))) then
                a_0_addr_2_reg_1789 <= tmp_67_fu_1327_p1(3 - 1 downto 0);
                a_1_addr_2_reg_1794 <= tmp_68_cast_fu_1337_p1(2 - 1 downto 0);
                    work_addr_2_reg_1799(1 downto 0) <= tmp_10_fu_1315_p1(9 - 1 downto 0)(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1785))) then
                a_0_addr_3_reg_1810 <= tmp_70_fu_1358_p1(3 - 1 downto 0);
                a_1_addr_3_reg_1815 <= tmp_71_cast_fu_1368_p1(2 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and (ap_const_lv1_0 = exitcond5_fu_980_p2))) then
                a_0_addr_4_reg_1578 <= tmp_73_fu_1008_p1(3 - 1 downto 0);
                a_1_addr_4_reg_1583 <= tmp_76_cast_fu_1018_p1(2 - 1 downto 0);
                a_1_addr_6_reg_1588 <= tmp_77_cast_fu_1028_p1(2 - 1 downto 0);
                tmp_94_reg_1573 <= tmp_94_fu_992_p1;
                tmp_95_reg_1593 <= j_reg_397(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_fu_1069_p2))) then
                a_0_addr_5_reg_1619 <= tmp_79_fu_1097_p1(3 - 1 downto 0);
                a_1_addr_5_reg_1624 <= tmp_80_cast_fu_1107_p1(2 - 1 downto 0);
                tmp_97_reg_1629 <= i_2_phi_fu_412_p4(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                a_0_addr_6_reg_1599 <= tmp_75_fu_1048_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_1145_p2) and (ap_const_lv1_0 = tmp_15_fu_1157_p2))) then
                a_0_addr_8_reg_1664 <= tmp_84_fu_1174_p1(3 - 1 downto 0);
                a_1_addr_8_reg_1669 <= tmp_87_cast_fu_1184_p1(2 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_24_reg_1639) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then
                a_0_load_10_reg_1721 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then
                a_1_addr_10_reg_1696 <= tmp_16_fu_1241_p1(2 - 1 downto 0);
                    tmp_81_reg_1690(2 downto 1) <= tmp_81_fu_1246_p3(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_2_reg_1647))) then
                a_1_load_11_reg_1701 <= a_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage1) and (ap_const_lv1_0 = exitcond4_reg_1610))) then
                a_load_5_phi_reg_1634 <= a_load_5_phi_fu_1120_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476 <= exitcond6_reg_1476;
                ap_pipeline_reg_pp1_iter1_r_1_reg_387 <= r_1_reg_387;
                exitcond6_reg_1476 <= exitcond6_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476;
                ap_pipeline_reg_pp1_iter2_r_1_reg_387 <= ap_pipeline_reg_pp1_iter1_r_1_reg_387;
                ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476;
                ap_pipeline_reg_pp1_iter3_r_1_reg_387 <= ap_pipeline_reg_pp1_iter2_r_1_reg_387;
                ap_pipeline_reg_pp1_iter3_w_3_reg_1495 <= w_3_reg_1495;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619 <= a_0_addr_5_reg_1619;
                ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624 <= a_1_addr_5_reg_1624;
                ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629 <= tmp_97_reg_1629;
                exitcond4_reg_1610 <= exitcond4_fu_1069_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664 <= a_0_addr_8_reg_1664;
                ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669 <= a_1_addr_8_reg_1669;
                ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660 <= tmp_15_reg_1660;
                exitcond3_reg_1651 <= exitcond3_fu_1145_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then
                ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681 <= tmp_52_reg_1681;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                api_reg_1534 <= api_fu_923_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                exitcond5_reg_1564 <= exitcond5_fu_980_p2;
                j_1_reg_1568 <= j_1_fu_986_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1))) then
                    extLd8_reg_1780(1 downto 0) <= extLd8_fu_1305_p1(1 downto 0);
                tmp_8_reg_1785 <= tmp_8_fu_1309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond6_fu_646_p2) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                i_6_reg_1490 <= i_6_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then
                i_7_reg_1754 <= i_7_fu_1278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then
                i_8_reg_1614 <= i_8_fu_1075_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                i_9_reg_1655 <= i_9_fu_1151_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                k_reg_1410 <= k_fu_559_p2;
                tmp_2_reg_1406 <= tmp_2_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state76) and (ap_const_lv1_0 = exitcond1_fu_1272_p2))) then
                    newIndex6_cast_reg_1770(0) <= newIndex6_cast_fu_1293_p1(0);
                tmp_55_reg_1765 <= tmp_55_fu_1289_p1;
                tmp_56_reg_1775 <= i_4_reg_431(1 downto 1);
                    work_addr_1_reg_1759(1 downto 0) <= tmp_s_fu_1284_p1(9 - 1 downto 0)(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                r_load_reg_1513 <= r_fu_112;
                tmp_57_reg_1519 <= tmp_57_fu_845_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1476 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then
                reg_495 <= grp_fu_478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_24_reg_1639)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_lv1_0 = tmp_20_1_reg_1643)))) then
                reg_508 <= a_0_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3) and (ap_const_lv1_0 = tmp_20_2_reg_1647)))) then
                reg_514 <= a_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_2_reg_1647) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage11)) or ((ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_1_reg_1643) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)))) then
                reg_519 <= grp_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1785)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)))) then
                reg_525 <= grp_fu_488_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = exitcond3_fu_1145_p2))) then
                tmp_15_reg_1660 <= tmp_15_fu_1157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681))) then
                tmp_19_reg_1746 <= grp_fu_453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tmp_20_1_reg_1643 <= tmp_20_1_fu_1133_p2;
                tmp_20_2_reg_1647 <= tmp_20_2_fu_1139_p2;
                tmp_24_reg_1639 <= tmp_24_fu_1127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_1_reg_1643) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage8))) then
                tmp_22_1_reg_1736 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_2_reg_1647) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6))) then
                tmp_22_2_reg_1726 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_24_reg_1639) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage7))) then
                tmp_25_reg_1731 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_24_reg_1639) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                tmp_26_reg_1741 <= grp_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter2_exitcond6_reg_1476)) then
                tmp_47_reg_1502 <= tmp_47_fu_821_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then
                tmp_52_reg_1681 <= tmp_52_fu_1224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                tmp_5_reg_1539 <= tmp_5_fu_460_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then
                tmp_93_reg_1820 <= reg_501(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then
                w_1_reg_1674 <= grp_fu_478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476)) then
                w_3_reg_1495 <= w_3_fu_736_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                w_reg_1604 <= w_fu_1053_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = tmp_2_reg_1406) and (ap_const_lv1_0 = tmp_33_fu_970_p2) and (ap_const_lv1_0 = tmp_1_fu_976_p2))) then
                    work_addr_3_reg_1552(1 downto 0) <= tmp_3_reg_1421(9 - 1 downto 0)(1 downto 0);
                work_addr_4_reg_1558 <= tmp_4_fu_931_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1785))) then
                work_load_1_reg_1805 <= work_q0;
            end if;
        end if;
    end process;
    i_5_cast_reg_1415(31 downto 2) <= "000000000000000000000000000000";
    tmp_3_reg_1421(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    tmp_3_cast_reg_1426(2) <= '0';
    a_0_addr_11_reg_1432(0) <= '1';
    a_0_addr_9_reg_1437(0) <= '0';
    newIndex4_cast_reg_1454(2 downto 1) <= "00";
    work_addr_3_reg_1552(8 downto 2) <= "0000000";
    tmp_81_reg_1690(0) <= '0';
    a_0_addr_10_reg_1706(0) <= '0';
    a_0_addr_12_reg_1711(0) <= '1';
    work_addr_1_reg_1759(8 downto 2) <= "0000000";
    newIndex6_cast_reg_1770(2 downto 1) <= "00";
    extLd8_reg_1780(2) <= '0';
    work_addr_2_reg_1799(8 downto 2) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp1_iter1, ap_enable_reg_pp5_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_enable_reg_pp4_iter1, tmp_2_fu_553_p2, tmp_2_reg_1406, exitcond6_fu_646_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, tmp_1_fu_976_p2, tmp_33_fu_970_p2, exitcond5_fu_980_p2, exitcond4_fu_1069_p2, ap_enable_reg_pp3_iter0, exitcond3_fu_1145_p2, exitcond1_fu_1272_p2, tmp_8_fu_1309_p2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, exitcond7_fu_531_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = exitcond7_fu_531_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = tmp_2_fu_553_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter3)))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_646_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond6_fu_646_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if ((not((ap_const_lv1_0 = tmp_2_reg_1406)) or not((ap_const_lv1_0 = tmp_33_fu_970_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_lv1_0 = tmp_2_reg_1406) and (ap_const_lv1_0 = tmp_33_fu_970_p2) and not((ap_const_lv1_0 = tmp_1_fu_976_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if ((ap_const_lv1_0 = exitcond5_fu_980_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond4_fu_1069_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
            when ap_ST_fsm_pp3_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
            when ap_ST_fsm_pp3_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
            when ap_ST_fsm_pp3_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
            when ap_ST_fsm_pp3_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
            when ap_ST_fsm_pp3_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
            when ap_ST_fsm_pp3_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage8;
            when ap_ST_fsm_pp3_stage8 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp3_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and not((ap_const_lv1_0 = exitcond3_fu_1145_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
            when ap_ST_fsm_pp4_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
            when ap_ST_fsm_pp4_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
            when ap_ST_fsm_pp4_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
            when ap_ST_fsm_pp4_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
            when ap_ST_fsm_pp4_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
            when ap_ST_fsm_pp4_stage7 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_pp4_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage9;
            when ap_ST_fsm_pp4_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage10;
            when ap_ST_fsm_pp4_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage11;
            when ap_ST_fsm_pp4_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state76 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_1272_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
            when ap_ST_fsm_pp5_stage1 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and not((ap_const_lv1_0 = tmp_8_fu_1309_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_pp5_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
            when ap_ST_fsm_pp5_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage4;
            when ap_ST_fsm_pp5_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage5;
            when ap_ST_fsm_pp5_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage6;
            when ap_ST_fsm_pp5_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage7;
            when ap_ST_fsm_pp5_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage8;
            when ap_ST_fsm_pp5_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage9;
            when ap_ST_fsm_pp5_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, a_0_addr_11_reg_1432, a_0_addr_9_reg_1437, a_0_addr_7_reg_1461, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, a_0_addr_4_reg_1578, a_0_addr_6_reg_1599, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619, ap_CS_fsm_pp4_stage0, ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664, ap_CS_fsm_pp4_stage2, a_0_addr_10_reg_1706, ap_CS_fsm_pp4_stage5, a_0_addr_12_reg_1711, ap_CS_fsm_pp4_stage6, a_0_addr_2_reg_1789, a_0_addr_3_reg_1810, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, tmp_64_fu_663_p1, tmp_59_fu_856_p1, tmp_73_fu_1008_p1, tmp_75_fu_1048_p1, tmp_79_fu_1097_p1, tmp_84_fu_1174_p1, tmp_82_fu_1254_p1, tmp_67_fu_1327_p1, tmp_70_fu_1358_p1, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_3_reg_1810),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_2_reg_1789),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            a_0_Addr_A_orig <= tmp_70_fu_1358_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            a_0_Addr_A_orig <= tmp_67_fu_1327_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_7_reg_1461),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp4_iter1_a_0_addr_8_reg_1664),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_10_reg_1706),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_12_reg_1711),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then 
            a_0_Addr_A_orig <= tmp_82_fu_1254_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_11_reg_1432),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_9_reg_1437),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            a_0_Addr_A_orig <= tmp_84_fu_1174_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter1_a_0_addr_5_reg_1619),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            a_0_Addr_A_orig <= tmp_79_fu_1097_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_6_reg_1599),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_0_Addr_A_orig <= std_logic_vector(resize(unsigned(a_0_addr_4_reg_1578),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            a_0_Addr_A_orig <= tmp_75_fu_1048_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_0_Addr_A_orig <= tmp_73_fu_1008_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            a_0_Addr_A_orig <= tmp_59_fu_856_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            a_0_Addr_A_orig <= tmp_64_fu_663_p1(32 - 1 downto 0);
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;

    a_0_Din_A_assign_proc : process(ap_enable_reg_pp5_iter0, ap_CS_fsm_pp4_stage7, reg_519, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, reg_525, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, w_reg_1604, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage2, tmp_26_reg_1741, grp_fu_453_p2, tmp_19_reg_1746, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, a_load_2_phi_fu_1060_p3, a_load_4_0_phi_fu_1381_p3, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_Din_A <= reg_525;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            a_0_Din_A <= a_load_4_0_phi_fu_1381_p3;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Din_A <= tmp_19_reg_1746;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            a_0_Din_A <= reg_519;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_0_Din_A <= tmp_26_reg_1741;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then 
            a_0_Din_A <= grp_fu_453_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_0_Din_A <= w_reg_1604;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_0_Din_A <= a_load_2_phi_fu_1060_p3;
        else 
            a_0_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp4_stage6, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage6)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;

    a_0_WEN_A_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_52_reg_1681, tmp_24_reg_1639, ap_CS_fsm_pp4_stage7, tmp_20_1_reg_1643, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660, tmp_8_reg_1785, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, tmp_54_reg_1471, exitcond5_reg_1564, tmp_95_reg_1593, ap_CS_fsm_state19, ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629, ap_CS_fsm_pp4_stage2, ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681, tmp_56_reg_1775, tmp_93_reg_1820, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = tmp_95_reg_1593)) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1564) and (ap_const_lv1_0 = tmp_95_reg_1593)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629)) or ((ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_24_reg_1639) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)) or ((ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_1_reg_1643) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) and (ap_const_lv1_0 = tmp_54_reg_1471) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681)) or ((ap_const_lv1_0 = tmp_54_reg_1471) and (ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3) and (ap_const_lv1_0 = tmp_56_reg_1775)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4) and (ap_const_lv1_0 = tmp_93_reg_1820)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6) and (ap_const_lv1_0 = tmp_56_reg_1775)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_0 = tmp_93_reg_1820) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and (ap_const_lv1_0 = tmp_56_reg_1775)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_lv1_0 = tmp_93_reg_1820) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_0_WEN_A <= ap_const_lv4_F;
        else 
            a_0_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, a_1_addr_9_reg_1442, a_1_addr_7_reg_1466, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, a_1_addr_4_reg_1583, a_1_addr_6_reg_1588, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624, ap_CS_fsm_pp4_stage0, ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669, ap_CS_fsm_pp4_stage2, a_1_addr_10_reg_1696, ap_CS_fsm_pp4_stage5, a_1_addr_2_reg_1794, a_1_addr_3_reg_1815, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, tmp_65_cast_fu_673_p1, tmp_62_cast_fu_866_p1, tmp_76_cast_fu_1018_p1, tmp_80_cast_fu_1107_p1, tmp_87_cast_fu_1184_p1, tmp_16_fu_1241_p1, tmp_68_cast_fu_1337_p1, tmp_71_cast_fu_1368_p1, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_3_reg_1815),32));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_2_reg_1794),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            a_1_Addr_A_orig <= tmp_71_cast_fu_1368_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            a_1_Addr_A_orig <= tmp_68_cast_fu_1337_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_7_reg_1466),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp4_iter1_a_1_addr_8_reg_1669),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_10_reg_1696),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            a_1_Addr_A_orig <= tmp_16_fu_1241_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_9_reg_1442),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            a_1_Addr_A_orig <= tmp_87_cast_fu_1184_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp3_iter1_a_1_addr_5_reg_1624),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            a_1_Addr_A_orig <= tmp_80_cast_fu_1107_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_4_reg_1583),32));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)))) then 
            a_1_Addr_A_orig <= std_logic_vector(resize(unsigned(a_1_addr_6_reg_1588),32));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            a_1_Addr_A_orig <= tmp_76_cast_fu_1018_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            a_1_Addr_A_orig <= tmp_62_cast_fu_866_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            a_1_Addr_A_orig <= tmp_65_cast_fu_673_p1(32 - 1 downto 0);
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;

    a_1_Din_A_assign_proc : process(ap_enable_reg_pp5_iter0, reg_519, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, reg_525, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, w_reg_1604, ap_CS_fsm_state19, ap_CS_fsm_pp4_stage5, grp_fu_453_p2, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, a_load_2_phi_fu_1060_p3, a_load_4_0_phi_fu_1381_p3, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)))) then 
            a_1_Din_A <= reg_525;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            a_1_Din_A <= a_load_4_0_phi_fu_1381_p3;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            a_1_Din_A <= reg_519;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then 
            a_1_Din_A <= grp_fu_453_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            a_1_Din_A <= w_reg_1604;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            a_1_Din_A <= a_load_2_phi_fu_1060_p3;
        else 
            a_1_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state18, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, ap_enable_reg_pp1_iter0, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage7, ap_CS_fsm_pp5_stage8)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage8)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;

    a_1_WEN_A_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_52_reg_1681, tmp_20_2_reg_1647, ap_CS_fsm_pp4_stage1, ap_enable_reg_pp4_iter1, ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660, tmp_8_reg_1785, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage9, tmp_54_reg_1471, exitcond5_reg_1564, tmp_95_reg_1593, ap_CS_fsm_state19, ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629, ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681, ap_CS_fsm_pp4_stage5, tmp_56_reg_1775, tmp_93_reg_1820, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage8, ap_enable_reg_pp5_iter1, ap_CS_fsm_state75, ap_CS_fsm_state20, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and not((ap_const_lv1_0 = tmp_95_reg_1593))) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and (ap_const_lv1_0 = exitcond5_reg_1564) and not((ap_const_lv1_0 = tmp_95_reg_1593))) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage8) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and not((ap_const_lv1_0 = ap_pipeline_reg_pp3_iter1_tmp_97_reg_1629))) or ((ap_const_lv1_0 = tmp_52_reg_1681) and (ap_const_lv1_0 = tmp_20_2_reg_1647) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_15_reg_1660) and not((ap_const_lv1_0 = tmp_54_reg_1471)) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_52_reg_1681)) or (not((ap_const_lv1_0 = tmp_54_reg_1471)) and (ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3) and not((ap_const_lv1_0 = tmp_56_reg_1775))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage4) and not((ap_const_lv1_0 = tmp_93_reg_1820))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage6) and not((ap_const_lv1_0 = tmp_56_reg_1775))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage7) and not((ap_const_lv1_0 = tmp_93_reg_1820))) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage9) and not((ap_const_lv1_0 = tmp_56_reg_1775))) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1) and not((ap_const_lv1_0 = tmp_93_reg_1820))))) then 
            a_1_WEN_A <= ap_const_lv4_F;
        else 
            a_1_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    a_load_2_phi_fu_1060_p3 <= 
        a_1_Dout_A when (tmp_95_reg_1593(0) = '1') else 
        a_0_Dout_A;
    a_load_4_0_phi_fu_1381_p3 <= 
        a_1_Dout_A when (tmp_93_fu_1373_p3(0) = '1') else 
        a_0_Dout_A;
    a_load_5_phi_fu_1120_p3 <= 
        a_1_Dout_A when (tmp_97_reg_1629(0) = '1') else 
        a_0_Dout_A;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp3_stage8 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_pp4_stage11 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_pp4_stage4 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_pp4_stage5 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_pp4_stage6 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_pp4_stage7 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_pp4_stage8 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_pp4_stage9 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_pp5_stage2 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_pp5_stage3 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_pp5_stage4 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_pp5_stage5 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_pp5_stage6 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_pp5_stage7 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_pp5_stage8 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_pp5_stage9 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state11 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state12 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state13 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state14 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state15 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state16 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state17 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state18 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state19 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state21 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state60 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state75 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state76 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state88 <= ap_CS_fsm(66 downto 66);

    ap_done_assign_proc : process(tmp_2_reg_1406, ap_CS_fsm_state14, tmp_33_fu_970_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1406)) or not((ap_const_lv1_0 = tmp_33_fu_970_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_2_reg_1406, ap_CS_fsm_state14, tmp_33_fu_970_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (not((ap_const_lv1_0 = tmp_2_reg_1406)) or not((ap_const_lv1_0 = tmp_33_fu_970_p2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_1;
    api_fu_923_p3 <= 
        reg_495 when (tmp_28_fu_907_p2(0) = '1') else 
        f_fu_919_p1;
    exitcond1_fu_1272_p2 <= "1" when (i_4_reg_431 = ap_const_lv2_3) else "0";
    exitcond3_fu_1145_p2 <= "1" when (i_3_phi_fu_423_p4 = ap_const_lv2_3) else "0";
    exitcond4_fu_1069_p2 <= "1" when (i_2_phi_fu_412_p4 = ap_const_lv2_3) else "0";
    exitcond5_fu_980_p2 <= "1" when (j_reg_397 = ap_const_lv2_3) else "0";
    exitcond6_fu_646_p2 <= "1" when (r_1_phi_fu_390_p4 = ap_const_lv32_3) else "0";
    exitcond7_fu_531_p2 <= "1" when (i_reg_351 = ap_const_lv2_3) else "0";
    extLd8_fu_1305_p1 <= std_logic_vector(resize(unsigned(work_q1),3));
    f_1_fu_732_p1 <= f_neg_i_fu_726_p2;
    f_fu_919_p1 <= f_neg_i1_fu_913_p2;
    f_neg_i1_fu_913_p2 <= (pivot_to_int_fu_871_p1 xor ap_const_lv32_80000000);
    f_neg_i_fu_726_p2 <= (n_assign_1_to_int_fu_684_p1 xor ap_const_lv32_80000000);

    grp_fu_443_p0_assign_proc : process(reg_508, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, a_1_load_11_reg_1701, a_0_load_10_reg_1721, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_443_p0 <= reg_508;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_443_p0 <= a_0_load_10_reg_1721;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7)) then 
                grp_fu_443_p0 <= a_1_load_11_reg_1701;
            else 
                grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p1_assign_proc : process(ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage7, tmp_22_2_reg_1726, tmp_25_reg_1731, tmp_22_1_reg_1736, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage9)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp4_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage9)) then 
                grp_fu_443_p1 <= tmp_22_1_reg_1736;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage8)) then 
                grp_fu_443_p1 <= tmp_25_reg_1731;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage7)) then 
                grp_fu_443_p1 <= tmp_22_2_reg_1726;
            else 
                grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_447_p1_assign_proc : process(a_0_Dout_A, a_1_Dout_A, ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)))) then 
            grp_fu_447_p1 <= a_0_Dout_A;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            grp_fu_447_p1 <= a_1_Dout_A;
        else 
            grp_fu_447_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_453_p0_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp3_iter0, a_load_5_phi_reg_1634, ap_CS_fsm_pp4_stage2, tmp_18_fu_1236_p1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_state60)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state60))) then 
            grp_fu_453_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_453_p0 <= tmp_18_fu_1236_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp3_stage2))) then 
            grp_fu_453_p0 <= a_load_5_phi_reg_1634;
        else 
            grp_fu_453_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_463_opcode_assign_proc : process(ap_enable_reg_pp4_iter0, exitcond3_reg_1651, tmp_15_reg_1660, ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476, ap_CS_fsm_state12, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_lv1_0 = tmp_15_reg_1660) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_463_opcode <= ap_const_lv5_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_exitcond6_reg_1476) and (ap_const_logic_1 = ap_enable_reg_pp1_iter2)))) then 
            grp_fu_463_opcode <= ap_const_lv5_3;
        else 
            grp_fu_463_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_463_p0_assign_proc : process(reg_495, ap_enable_reg_pp4_iter0, ap_CS_fsm_state12, w_1_reg_1674, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage2))) then 
            grp_fu_463_p0 <= w_1_reg_1674;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter2))) then 
            grp_fu_463_p0 <= reg_495;
        else 
            grp_fu_463_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_478_p3 <= 
        a_1_Dout_A when (tmp_54_reg_1471(0) = '1') else 
        a_0_Dout_A;
    grp_fu_488_p3 <= 
        a_1_Dout_A when (tmp_56_reg_1775(0) = '1') else 
        a_0_Dout_A;
    i_1_fu_537_p2 <= std_logic_vector(unsigned(i_reg_351) + unsigned(ap_const_lv2_1));

    i_2_phi_fu_412_p4_assign_proc : process(i_2_reg_408, exitcond4_reg_1610, ap_CS_fsm_pp3_stage0, i_8_reg_1614, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond4_reg_1610) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            i_2_phi_fu_412_p4 <= i_8_reg_1614;
        else 
            i_2_phi_fu_412_p4 <= i_2_reg_408;
        end if; 
    end process;


    i_3_phi_fu_423_p4_assign_proc : process(i_3_reg_419, exitcond3_reg_1651, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage0, i_9_reg_1655)
    begin
        if (((ap_const_lv1_0 = exitcond3_reg_1651) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            i_3_phi_fu_423_p4 <= i_9_reg_1655;
        else 
            i_3_phi_fu_423_p4 <= i_3_reg_419;
        end if; 
    end process;

    i_5_cast_fu_565_p1 <= std_logic_vector(resize(unsigned(i_5_reg_363),32));
    i_6_fu_678_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(r_1_phi_fu_390_p4));
    i_7_fu_1278_p2 <= std_logic_vector(unsigned(i_4_reg_431) + unsigned(ap_const_lv2_1));
    i_8_fu_1075_p2 <= std_logic_vector(unsigned(i_2_phi_fu_412_p4) + unsigned(ap_const_lv2_1));
    i_9_fu_1151_p2 <= std_logic_vector(unsigned(i_3_phi_fu_423_p4) + unsigned(ap_const_lv2_1));
    j_1_fu_986_p2 <= std_logic_vector(unsigned(j_reg_397) + unsigned(ap_const_lv2_1));
    k_fu_559_p2 <= std_logic_vector(unsigned(i_5_reg_363) + unsigned(ap_const_lv2_1));
    n_assign_1_to_int_fu_684_p1 <= reg_495;
    newIndex2_cast_fu_1085_p1 <= std_logic_vector(resize(unsigned(tmp_96_fu_1081_p1),3));
    newIndex4_cast_fu_610_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_606_p1),3));
    newIndex6_cast_fu_1293_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_1289_p1),3));
    newIndex7_cast_fu_1346_p1 <= std_logic_vector(resize(unsigned(tmp_91_fu_1342_p1),3));
    newIndex9_cast_fu_996_p1 <= std_logic_vector(resize(unsigned(tmp_94_fu_992_p1),3));
    notlhs1_fu_889_p2 <= "0" when (tmp_9_fu_875_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_952_p2 <= "0" when (tmp_29_fu_938_p4 = ap_const_lv11_7FF) else "1";
    notlhs3_fu_779_p2 <= "0" when (tmp_39_fu_747_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_797_p2 <= "0" when (tmp_41_fu_765_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_1206_p2 <= "0" when (tmp_48_fu_1192_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_702_p2 <= "0" when (tmp_34_fu_688_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_895_p2 <= "1" when (tmp_61_fu_885_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_958_p2 <= "1" when (tmp_62_fu_948_p1 = ap_const_lv52_0) else "0";
    notrhs3_fu_785_p2 <= "1" when (tmp_88_fu_757_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_803_p2 <= "1" when (tmp_89_fu_775_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_1212_p2 <= "1" when (tmp_98_fu_1202_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_708_p2 <= "1" when (tmp_69_fu_698_p1 = ap_const_lv23_0) else "0";
    pivot_to_int_fu_871_p1 <= reg_495;

    r_1_phi_fu_390_p4_assign_proc : process(r_1_reg_387, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond6_reg_1476, i_6_reg_1490)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (exitcond6_reg_1476 = ap_const_lv1_0))) then 
            r_1_phi_fu_390_p4 <= i_6_reg_1490;
        else 
            r_1_phi_fu_390_p4 <= r_1_reg_387;
        end if; 
    end process;

    r_2_fu_833_p3 <= 
        ap_pipeline_reg_pp1_iter3_r_1_reg_387 when (tmp_47_reg_1502(0) = '1') else 
        r_fu_112;
    tmp_10_fu_1315_p1 <= std_logic_vector(resize(unsigned(work_q1),64));
    tmp_11_fu_586_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_578_p3),64));
    tmp_15_fu_1157_p2 <= "1" when (i_3_phi_fu_423_p4 = i_5_reg_363) else "0";
    tmp_16_cast_fu_1163_p1 <= std_logic_vector(resize(unsigned(i_3_phi_fu_423_p4),3));
    tmp_16_fu_1241_p1 <= std_logic_vector(resize(unsigned(i_3_reg_419),64));
    tmp_17_fu_901_p2 <= (notrhs1_fu_895_p2 or notlhs1_fu_889_p2);
    tmp_18_fu_1236_p1 <= tmp_18_neg_fu_1230_p2;
    tmp_18_neg_fu_1230_p2 <= (w_1_to_int_fu_1189_p1 xor ap_const_lv32_80000000);
    tmp_1_fu_976_p2 <= "1" when (r_load_reg_1513 = i_5_cast_reg_1415) else "0";
    tmp_20_1_fu_1133_p2 <= "1" when (i_5_reg_363 = ap_const_lv2_1) else "0";
    tmp_20_2_fu_1139_p2 <= "1" when (i_5_reg_363 = ap_const_lv2_2) else "0";
    tmp_24_fu_1127_p2 <= "1" when (i_5_reg_363 = ap_const_lv2_0) else "0";
    tmp_28_fu_907_p2 <= (tmp_17_fu_901_p2 and grp_fu_463_p2);
    tmp_29_fu_938_p4 <= tmp_5_to_int_fu_935_p1(62 downto 52);
    tmp_2_fu_553_p2 <= "1" when (i_5_reg_363 = ap_const_lv2_3) else "0";
    tmp_30_fu_591_p2 <= (tmp_7_fu_578_p3 or ap_const_lv3_1);
    tmp_31_fu_964_p2 <= (notrhs2_fu_958_p2 or notlhs2_fu_952_p2);
    tmp_33_fu_970_p2 <= (tmp_31_fu_964_p2 and tmp_32_fu_473_p2);
    tmp_34_fu_688_p4 <= n_assign_1_to_int_fu_684_p1(30 downto 23);
    tmp_35_fu_597_p3 <= (ap_const_lv61_0 & tmp_30_fu_591_p2);
    tmp_36_fu_714_p2 <= (notrhs_fu_708_p2 or notlhs_fu_702_p2);
    tmp_38_fu_720_p2 <= (tmp_36_fu_714_p2 and grp_fu_463_p2);
    tmp_39_fu_747_p4 <= w_3_to_int_fu_744_p1(30 downto 23);
    tmp_3_cast_fu_574_p1 <= std_logic_vector(resize(unsigned(i_5_reg_363),3));
    tmp_3_fu_569_p1 <= std_logic_vector(resize(unsigned(i_5_reg_363),64));
    tmp_40_fu_606_p1 <= i_5_reg_363(1 - 1 downto 0);
    tmp_41_fu_765_p4 <= wmax_to_int_fu_761_p1(30 downto 23);
    tmp_42_fu_614_p3 <= (i_5_reg_363 & tmp_40_fu_606_p1);
    tmp_43_fu_791_p2 <= (notrhs3_fu_785_p2 or notlhs3_fu_779_p2);
    tmp_44_fu_809_p2 <= (notrhs4_fu_803_p2 or notlhs4_fu_797_p2);
    tmp_45_fu_815_p2 <= (tmp_43_fu_791_p2 and tmp_44_fu_809_p2);
    tmp_47_fu_821_p2 <= (tmp_45_fu_815_p2 and tmp_46_fu_468_p2);
    tmp_48_fu_1192_p4 <= w_1_to_int_fu_1189_p1(30 downto 23);
    tmp_49_fu_622_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_614_p3),64));
        tmp_4_fu_931_p1 <= std_logic_vector(resize(signed(r_load_reg_1513),64));

    tmp_50_fu_1218_p2 <= (notrhs5_fu_1212_p2 or notlhs5_fu_1206_p2);
    tmp_52_fu_1224_p2 <= (tmp_50_fu_1218_p2 and grp_fu_463_p2);
    tmp_53_fu_627_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_574_p1) + unsigned(newIndex4_cast_fu_610_p1));
    tmp_55_fu_1289_p1 <= i_4_reg_431(1 - 1 downto 0);
    tmp_57_fu_845_p1 <= r_fu_112(3 - 1 downto 0);
    tmp_58_fu_849_p3 <= (r_fu_112 & tmp_40_reg_1447);
    tmp_59_cast_fu_633_p1 <= std_logic_vector(resize(unsigned(tmp_53_fu_627_p2),64));
        tmp_59_fu_856_p1 <= std_logic_vector(resize(signed(tmp_58_fu_849_p3),64));

    tmp_5_to_int_fu_935_p1 <= tmp_5_reg_1539;
    tmp_60_fu_861_p2 <= std_logic_vector(unsigned(newIndex4_cast_reg_1454) + unsigned(tmp_57_fu_845_p1));
    tmp_61_fu_885_p1 <= pivot_to_int_fu_871_p1(23 - 1 downto 0);
        tmp_62_cast_fu_866_p1 <= std_logic_vector(resize(signed(tmp_60_fu_861_p2),64));

    tmp_62_fu_948_p1 <= tmp_5_to_int_fu_935_p1(52 - 1 downto 0);
    tmp_63_fu_656_p3 <= (r_1_phi_fu_390_p4 & tmp_40_reg_1447);
        tmp_64_fu_663_p1 <= std_logic_vector(resize(signed(tmp_63_fu_656_p3),64));

        tmp_65_cast_fu_673_p1 <= std_logic_vector(resize(signed(tmp_65_fu_668_p2),64));

    tmp_65_fu_668_p2 <= std_logic_vector(unsigned(newIndex4_cast_reg_1454) + unsigned(tmp_66_fu_652_p1));
    tmp_66_fu_652_p1 <= r_1_phi_fu_390_p4(3 - 1 downto 0);
    tmp_67_fu_1327_p1 <= std_logic_vector(resize(unsigned(tmp_90_fu_1320_p3),64));
        tmp_68_cast_fu_1337_p1 <= std_logic_vector(resize(signed(tmp_68_fu_1332_p2),64));

    tmp_68_fu_1332_p2 <= std_logic_vector(unsigned(extLd8_fu_1305_p1) + unsigned(newIndex6_cast_reg_1770));
    tmp_69_fu_698_p1 <= n_assign_1_to_int_fu_684_p1(23 - 1 downto 0);
    tmp_70_fu_1358_p1 <= std_logic_vector(resize(unsigned(tmp_92_fu_1350_p3),64));
        tmp_71_cast_fu_1368_p1 <= std_logic_vector(resize(signed(tmp_71_fu_1363_p2),64));

    tmp_71_fu_1363_p2 <= std_logic_vector(unsigned(extLd8_reg_1780) + unsigned(newIndex7_cast_fu_1346_p1));
    tmp_72_fu_1000_p3 <= (i_5_reg_363 & tmp_94_fu_992_p1);
    tmp_73_fu_1008_p1 <= std_logic_vector(resize(unsigned(tmp_72_fu_1000_p3),64));
    tmp_74_fu_1041_p3 <= (r_fu_112 & tmp_94_reg_1573);
        tmp_75_fu_1048_p1 <= std_logic_vector(resize(signed(tmp_74_fu_1041_p3),64));

    tmp_76_cast_fu_1018_p1 <= std_logic_vector(resize(unsigned(tmp_76_fu_1013_p2),64));
    tmp_76_fu_1013_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1426) + unsigned(newIndex9_cast_fu_996_p1));
        tmp_77_cast_fu_1028_p1 <= std_logic_vector(resize(signed(tmp_77_fu_1023_p2),64));

    tmp_77_fu_1023_p2 <= std_logic_vector(unsigned(tmp_57_reg_1519) + unsigned(newIndex9_cast_fu_996_p1));
    tmp_78_fu_1089_p3 <= (i_5_reg_363 & tmp_96_fu_1081_p1);
    tmp_79_fu_1097_p1 <= std_logic_vector(resize(unsigned(tmp_78_fu_1089_p3),64));
    tmp_7_fu_578_p3 <= (i_5_reg_363 & ap_const_lv1_0);
    tmp_80_cast_fu_1107_p1 <= std_logic_vector(resize(unsigned(tmp_80_fu_1102_p2),64));
    tmp_80_fu_1102_p2 <= std_logic_vector(unsigned(newIndex2_cast_fu_1085_p1) + unsigned(tmp_3_cast_reg_1426));
    tmp_81_fu_1246_p3 <= (i_3_reg_419 & ap_const_lv1_0);
    tmp_82_fu_1254_p1 <= std_logic_vector(resize(unsigned(tmp_81_reg_1690),64));
    tmp_83_fu_1167_p3 <= (i_3_phi_fu_423_p4 & tmp_40_reg_1447);
    tmp_84_fu_1174_p1 <= std_logic_vector(resize(unsigned(tmp_83_fu_1167_p3),64));
    tmp_85_fu_1258_p2 <= (tmp_81_reg_1690 or ap_const_lv3_1);
    tmp_86_fu_1263_p3 <= (ap_const_lv61_0 & tmp_85_fu_1258_p2);
    tmp_87_cast_fu_1184_p1 <= std_logic_vector(resize(unsigned(tmp_87_fu_1179_p2),64));
    tmp_87_fu_1179_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_1163_p1) + unsigned(newIndex4_cast_reg_1454));
    tmp_88_fu_757_p1 <= w_3_to_int_fu_744_p1(23 - 1 downto 0);
    tmp_89_fu_775_p1 <= wmax_to_int_fu_761_p1(23 - 1 downto 0);
    tmp_8_fu_1309_p2 <= "1" when (work_q1 = i_4_reg_431) else "0";
    tmp_90_fu_1320_p3 <= (work_q1 & tmp_55_reg_1765);
    tmp_91_fu_1342_p1 <= reg_501(1 - 1 downto 0);
    tmp_92_fu_1350_p3 <= (reg_501 & tmp_91_fu_1342_p1);
    tmp_93_fu_1373_p3 <= reg_501(1 downto 1);
    tmp_94_fu_992_p1 <= j_reg_397(1 - 1 downto 0);
    tmp_96_fu_1081_p1 <= i_2_phi_fu_412_p4(1 - 1 downto 0);
    tmp_98_fu_1202_p1 <= w_1_to_int_fu_1189_p1(23 - 1 downto 0);
    tmp_9_fu_875_p4 <= pivot_to_int_fu_871_p1(30 downto 23);
    tmp_fu_543_p1 <= std_logic_vector(resize(unsigned(i_reg_351),64));
    tmp_s_fu_1284_p1 <= std_logic_vector(resize(unsigned(i_4_reg_431),64));
    w_1_to_int_fu_1189_p1 <= w_1_reg_1674;
    w_3_fu_736_p3 <= 
        reg_495 when (tmp_38_fu_720_p2(0) = '1') else 
        f_1_fu_732_p1;
    w_3_to_int_fu_744_p1 <= w_3_reg_1495;
    w_fu_1053_p3 <= 
        reg_514 when (tmp_95_reg_1593(0) = '1') else 
        reg_508;
    wmax_1_fu_827_p3 <= 
        ap_pipeline_reg_pp1_iter3_w_3_reg_1495 when (tmp_47_reg_1502(0) = '1') else 
        wmax_reg_375;

    wmax_phi_fu_379_p4_assign_proc : process(wmax_reg_375, ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476, wmax_1_fu_827_p3, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_exitcond6_reg_1476))) then 
            wmax_phi_fu_379_p4 <= wmax_1_fu_827_p3;
        else 
            wmax_phi_fu_379_p4 <= wmax_reg_375;
        end if; 
    end process;

    wmax_to_int_fu_761_p1 <= wmax_phi_fu_379_p4;

    work_address0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, tmp_3_reg_1421, ap_CS_fsm_state14, work_addr_4_reg_1558, work_addr_1_reg_1759, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state16, tmp_fu_543_p1, tmp_10_fu_1315_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            work_address0 <= work_addr_1_reg_1759;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0))) then 
            work_address0 <= tmp_10_fu_1315_p1(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            work_address0 <= work_addr_4_reg_1558;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address0 <= tmp_3_reg_1421(9 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_address0 <= tmp_fu_543_p1(9 - 1 downto 0);
        else 
            work_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    work_address1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, work_addr_3_reg_1552, work_addr_1_reg_1759, work_addr_2_reg_1799, tmp_4_fu_931_p1, ap_CS_fsm_pp5_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_address1 <= work_addr_2_reg_1799;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then 
            work_address1 <= work_addr_1_reg_1759;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_address1 <= work_addr_3_reg_1552;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            work_address1 <= tmp_4_fu_931_p1(9 - 1 downto 0);
        else 
            work_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    work_ce0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, ap_CS_fsm_state14, ap_CS_fsm_pp5_stage3, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_ce0 <= ap_const_logic_1;
        else 
            work_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_ce1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, ap_CS_fsm_state14, ap_CS_fsm_pp5_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0)))) then 
            work_ce1 <= ap_const_logic_1;
        else 
            work_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    work_d0_assign_proc : process(reg_501, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, work_load_1_reg_1805, ap_CS_fsm_pp5_stage3, i_reg_351, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3))) then 
            work_d0 <= work_load_1_reg_1805;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            work_d0 <= reg_501;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            work_d0 <= i_reg_351;
        else 
            work_d0 <= "XX";
        end if; 
    end process;


    work_d1_assign_proc : process(reg_501, ap_CS_fsm_state15, work_q1, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2))) then 
            work_d1 <= reg_501;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            work_d1 <= work_q1;
        else 
            work_d1 <= "XX";
        end if; 
    end process;


    work_we0_assign_proc : process(ap_enable_reg_pp5_iter0, tmp_8_reg_1785, ap_CS_fsm_state2, ap_CS_fsm_pp5_stage3, exitcond7_fu_531_p2, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond7_fu_531_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = tmp_8_reg_1785) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage3)))) then 
            work_we0 <= ap_const_logic_1;
        else 
            work_we0 <= ap_const_logic_0;
        end if; 
    end process;


    work_we1_assign_proc : process(ap_CS_fsm_state15, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage2, tmp_8_reg_1785)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage2) and (ap_const_lv1_0 = tmp_8_reg_1785)))) then 
            work_we1 <= ap_const_logic_1;
        else 
            work_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
