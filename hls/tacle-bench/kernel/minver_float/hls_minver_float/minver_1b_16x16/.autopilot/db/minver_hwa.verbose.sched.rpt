

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Thu May  4 21:42:29 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver_float
* Solution:       minver_1b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.49|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+
        |             |   Latency   | Iteration |  Initiation Interval  |  Trip  |          |
        |  Loop Name  | min |  max  |  Latency  |  achieved |   target  |  Count | Pipelined|
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+
        |- Loop 1     |   16|     16|          1|          1|          1|      16|    yes   |
        |- Loop 2     |  882|  15430| 882 ~ 964 |          -|          -| 1 ~ 16 |    no    |
        | + Loop 2.1  |    4|     19|          5|          1|          1| 1 ~ 16 |    yes   |
        | + Loop 2.2  |   64|     64|          4|          4|          1|      16|    yes   |
        | + Loop 2.3  |   49|     49|         20|          2|          1|      16|    yes   |
        | + Loop 2.4  |  801|    801|         52|         50|          1|      16|    yes   |
        |- Loop 3     |    ?|      ?|          ?|          -|          -|      16|    no    |
        | + Loop 3.1  |    ?|      ?|         50|         49|          1|       ?|    yes   |
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 5
  * Pipeline-2: initiation interval (II) = 4, depth = 4
  * Pipeline-3: initiation interval (II) = 2, depth = 20
  * Pipeline-4: initiation interval (II) = 50, depth = 52
  * Pipeline-5: initiation interval (II) = 49, depth = 50


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 163
* Pipeline: 6
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 1, D = 5, States = { 5 6 7 8 9 }
  Pipeline-2: II = 4, D = 4, States = { 17 18 19 20 }
  Pipeline-3: II = 2, D = 20, States = { 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 }
  Pipeline-4: II = 50, D = 52, States = { 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 }
  Pipeline-5: II = 49, D = 50, States = { 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond7)
	2  / (!exitcond7)
3 --> 
	4  / true
4 --> 
	5  / (!tmp_2)
	112  / (tmp_2)
5 --> 
	10  / (exitcond6)
	6  / (!exitcond6)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	5  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / (!tmp_2 & !tmp_35 & !tmp_1)
	21  / (!tmp_2 & !tmp_35 & tmp_1)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	21  / (exitcond5)
	18  / (!exitcond5)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	17  / true
21 --> 
	22  / true
22 --> 
	42  / (exitcond4)
	23  / (!exitcond4)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	22  / true
42 --> 
	43  / true
43 --> 
	95  / (exitcond3)
	44  / (!exitcond3)
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	43  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	4  / true
112 --> 
	113  / (!exitcond1)
	14  / (exitcond1)
113 --> 
	114  / true
114 --> 
	163  / (tmp_8)
	115  / (!tmp_8)
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	113  / true
163 --> 
	112  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_164 (2)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %a) nounwind, !map !31

ST_1: StgValue_165 (3)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !35

ST_1: StgValue_166 (4)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (5)  [1/1] 0.00ns  loc: minver.c:41
:3  %work = alloca [500 x i5], align 1

ST_1: StgValue_168 (6)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %a, [1 x i8]* @p_str, [12 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: StgValue_169 (7)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %a, [5 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_170 (8)  [1/1] 0.00ns  loc: minver.c:39
:6  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_1: StgValue_171 (9)  [1/1] 1.57ns  loc: minver.c:50
:7  br label %1


 <State 2>: 2.71ns
ST_2: i (11)  [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (12)  [1/1] 2.37ns  loc: minver.c:50
:1  %exitcond7 = icmp eq i5 %i, -16

ST_2: i_1 (13)  [1/1] 1.67ns  loc: minver.c:50
:2  %i_1 = add i5 %i, 1

ST_2: StgValue_175 (14)  [1/1] 0.00ns  loc: minver.c:50
:3  br i1 %exitcond7, label %.preheader13.preheader, label %2

ST_2: empty (16)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: tmp_6 (17)  [1/1] 0.00ns  loc: minver.c:50
:1  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_2: StgValue_178 (18)  [1/1] 0.00ns  loc: minver.c:51
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_2: tmp (19)  [1/1] 0.00ns  loc: minver.c:52
:3  %tmp = zext i5 %i to i64

ST_2: work_addr (20)  [1/1] 0.00ns  loc: minver.c:52
:4  %work_addr = getelementptr [500 x i5]* %work, i64 0, i64 %tmp

ST_2: StgValue_181 (21)  [1/1] 2.71ns  loc: minver.c:52
:5  store i5 %i, i5* %work_addr, align 1

ST_2: empty_7 (22)  [1/1] 0.00ns  loc: minver.c:53
:6  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_6) nounwind

ST_2: StgValue_183 (23)  [1/1] 0.00ns  loc: minver.c:50
:7  br label %1


 <State 3>: 1.57ns
ST_3: r (25)  [1/1] 0.00ns
.preheader13.preheader:0  %r = alloca i32

ST_3: StgValue_185 (26)  [1/1] 1.57ns
.preheader13.preheader:1  store i32 0, i32* %r

ST_3: StgValue_186 (27)  [1/1] 1.57ns  loc: minver.c:56
.preheader13.preheader:2  br label %.preheader13


 <State 4>: 1.79ns
ST_4: i_5 (29)  [1/1] 0.00ns
.preheader13:0  %i_5 = phi i5 [ %k, %27 ], [ 0, %.preheader13.preheader ]

ST_4: tmp_2 (30)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:1  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_5, i32 4)

ST_4: k (31)  [1/1] 1.67ns  loc: minver.c:56
.preheader13:2  %k = add i5 %i_5, 1

ST_4: StgValue_190 (32)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader12.preheader

ST_4: i_5_cast6 (34)  [1/1] 0.00ns  loc: minver.c:59
.preheader12.preheader:0  %i_5_cast6 = zext i5 %i_5 to i32

ST_4: empty_8 (35)  [1/1] 0.00ns
.preheader12.preheader:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 8) nounwind

ST_4: tmp_3 (36)  [1/1] 0.00ns  loc: minver.c:61
.preheader12.preheader:2  %tmp_3 = zext i5 %i_5 to i64

ST_4: tmp_3_cast (37)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:3  %tmp_3_cast = zext i5 %i_5 to i10

ST_4: tmp_7 (38)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:4  %tmp_7 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_5, i4 0)

ST_4: tmp_11 (39)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:5  %tmp_11 = zext i9 %tmp_7 to i64

ST_4: tmp_16_cast (40)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:6  %tmp_16_cast = zext i9 %tmp_7 to i10

ST_4: tmp_12 (41)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:7  %tmp_12 = or i9 %tmp_7, 15

ST_4: tmp_16 (42)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:8  %tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_12)

ST_4: a_addr_39 (43)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:9  %a_addr_39 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_16

ST_4: tmp_17 (44)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:10  %tmp_17 = or i9 %tmp_7, 14

ST_4: tmp_32 (45)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:11  %tmp_32 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_17)

ST_4: a_addr_37 (46)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:12  %a_addr_37 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_32

ST_4: tmp_37 (47)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:13  %tmp_37 = or i9 %tmp_7, 13

ST_4: tmp_42 (48)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:14  %tmp_42 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_37)

ST_4: a_addr_35 (49)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:15  %a_addr_35 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_42

ST_4: tmp_44 (50)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:16  %tmp_44 = or i9 %tmp_7, 12

ST_4: tmp_51 (51)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:17  %tmp_51 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_44)

ST_4: a_addr_33 (52)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:18  %a_addr_33 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_51

ST_4: tmp_55 (53)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:19  %tmp_55 = or i9 %tmp_7, 11

ST_4: tmp_56 (54)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:20  %tmp_56 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_55)

ST_4: a_addr_31 (55)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:21  %a_addr_31 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_56

ST_4: tmp_57 (56)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:22  %tmp_57 = or i9 %tmp_7, 10

ST_4: tmp_58 (57)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:23  %tmp_58 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_57)

ST_4: a_addr_29 (58)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:24  %a_addr_29 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_58

ST_4: tmp_59 (59)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:25  %tmp_59 = or i9 %tmp_7, 9

ST_4: tmp_60 (60)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:26  %tmp_60 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_59)

ST_4: a_addr_27 (61)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:27  %a_addr_27 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_60

ST_4: tmp_61 (62)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:28  %tmp_61 = or i9 %tmp_7, 8

ST_4: tmp_62 (63)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:29  %tmp_62 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_61)

ST_4: a_addr_25 (64)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:30  %a_addr_25 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_62

ST_4: tmp_63 (65)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:31  %tmp_63 = or i9 %tmp_7, 7

ST_4: tmp_64 (66)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:32  %tmp_64 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_63)

ST_4: a_addr_23 (67)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:33  %a_addr_23 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_64

ST_4: tmp_65 (68)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:34  %tmp_65 = or i9 %tmp_7, 6

ST_4: tmp_66 (69)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:35  %tmp_66 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_65)

ST_4: a_addr_21 (70)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:36  %a_addr_21 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_66

ST_4: tmp_67 (71)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:37  %tmp_67 = or i9 %tmp_7, 5

ST_4: tmp_68 (72)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:38  %tmp_68 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_67)

ST_4: a_addr_19 (73)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:39  %a_addr_19 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_68

ST_4: tmp_69 (74)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:40  %tmp_69 = or i9 %tmp_7, 4

ST_4: tmp_70 (75)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:41  %tmp_70 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_69)

ST_4: a_addr_17 (76)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:42  %a_addr_17 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_70

ST_4: tmp_71 (77)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:43  %tmp_71 = or i9 %tmp_7, 3

ST_4: tmp_72 (78)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:44  %tmp_72 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_71)

ST_4: a_addr_15 (79)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:45  %a_addr_15 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_72

ST_4: tmp_73 (80)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:46  %tmp_73 = or i9 %tmp_7, 2

ST_4: tmp_74 (81)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:47  %tmp_74 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_73)

ST_4: a_addr_13 (82)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:48  %a_addr_13 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_74

ST_4: tmp_75 (83)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:49  %tmp_75 = or i9 %tmp_7, 1

ST_4: tmp_76 (84)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:50  %tmp_76 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_75)

ST_4: a_addr_11 (85)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:51  %a_addr_11 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_76

ST_4: a_addr_9 (86)  [1/1] 0.00ns  loc: minver.c:99
.preheader12.preheader:52  %a_addr_9 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_11

ST_4: tmp_77 (87)  [1/1] 1.79ns  loc: minver.c:105
.preheader12.preheader:53  %tmp_77 = add i10 %tmp_3_cast, %tmp_16_cast

ST_4: tmp_85_cast (88)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:54  %tmp_85_cast = zext i10 %tmp_77 to i64

ST_4: a_addr_7 (89)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:55  %a_addr_7 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_85_cast

ST_4: StgValue_247 (90)  [1/1] 1.57ns  loc: minver.c:59
.preheader12.preheader:56  br label %.preheader12

ST_4: StgValue_248 (478)  [1/1] 1.57ns  loc: minver.c:109
.preheader8.preheader:0  br label %.preheader8


 <State 5>: 4.50ns
ST_5: wmax (92)  [1/1] 0.00ns
.preheader12:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader12.preheader ]

ST_5: r_1 (93)  [1/1] 0.00ns
.preheader12:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast6, %.preheader12.preheader ]

ST_5: exitcond6 (94)  [1/1] 2.93ns  loc: minver.c:59
.preheader12:2  %exitcond6 = icmp eq i32 %r_1, 16

ST_5: StgValue_252 (95)  [1/1] 0.00ns  loc: minver.c:59
.preheader12:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_5: tmp_82 (101)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:4  %tmp_82 = trunc i32 %r_1 to i6

ST_5: tmp_90_cast (102)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:5  %tmp_90_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_82, i4 0)

ST_5: tmp_83 (103)  [1/1] 1.79ns  loc: minver.c:61
_ifconv:6  %tmp_83 = add i10 %tmp_90_cast, %tmp_3_cast

ST_5: tmp_91_cast (104)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:7  %tmp_91_cast = sext i10 %tmp_83 to i64

ST_5: a_addr_1 (105)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:8  %a_addr_1 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_91_cast

ST_5: a_load_20 (106)  [2/2] 2.71ns  loc: minver.c:61
_ifconv:9  %a_load_20 = load float* %a_addr_1, align 4

ST_5: i_6 (136)  [1/1] 2.39ns  loc: minver.c:59
_ifconv:39  %i_6 = add nsw i32 1, %r_1


 <State 6>: 2.71ns
ST_6: a_load_20 (106)  [1/2] 2.71ns  loc: minver.c:61
_ifconv:9  %a_load_20 = load float* %a_addr_1, align 4


 <State 7>: 7.74ns
ST_7: n_assign_1_to_int (107)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:10  %n_assign_1_to_int = bitcast float %a_load_20 to i32

ST_7: tmp_36 (108)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:11  %tmp_36 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_7: tmp_84 (109)  [1/1] 0.00ns  loc: minver.c:61
_ifconv:12  %tmp_84 = trunc i32 %n_assign_1_to_int to i23

ST_7: notlhs (110)  [1/1] 2.47ns  loc: minver.c:61
_ifconv:13  %notlhs = icmp ne i8 %tmp_36, -1

ST_7: notrhs (111)  [1/1] 2.84ns  loc: minver.c:61
_ifconv:14  %notrhs = icmp eq i23 %tmp_84, 0

ST_7: tmp_38 (112)  [1/1] 0.00ns  loc: minver.c:61 (grouped into LUT with out node w_3)
_ifconv:15  %tmp_38 = or i1 %notrhs, %notlhs

ST_7: tmp_39 (113)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:61
_ifconv:16  %tmp_39 = fcmp oge float %a_load_20, 0.000000e+00

ST_7: tmp_40 (114)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:17  %tmp_40 = and i1 %tmp_38, %tmp_39

ST_7: f_neg_i (115)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:18  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_7: f_1 (116)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:19  %f_1 = bitcast i32 %f_neg_i to float

ST_7: w_3 (117)  [1/1] 1.37ns  loc: minver.c:63 (out node of the LUT)
_ifconv:20  %w_3 = select i1 %tmp_40, float %a_load_20, float %f_1


 <State 8>: 7.74ns
ST_8: w_3_to_int (118)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:21  %w_3_to_int = bitcast float %w_3 to i32

ST_8: tmp_41 (119)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:22  %tmp_41 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_3_to_int, i32 23, i32 30)

ST_8: tmp_85 (120)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:23  %tmp_85 = trunc i32 %w_3_to_int to i23

ST_8: wmax_to_int (121)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:24  %wmax_to_int = bitcast float %wmax to i32

ST_8: tmp_43 (122)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:25  %tmp_43 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_8: tmp_86 (123)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:26  %tmp_86 = trunc i32 %wmax_to_int to i23

ST_8: notlhs3 (124)  [1/1] 2.47ns  loc: minver.c:63
_ifconv:27  %notlhs3 = icmp ne i8 %tmp_41, -1

ST_8: notrhs3 (125)  [1/1] 2.84ns  loc: minver.c:63
_ifconv:28  %notrhs3 = icmp eq i23 %tmp_85, 0

ST_8: tmp_45 (126)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_49)
_ifconv:29  %tmp_45 = or i1 %notrhs3, %notlhs3

ST_8: notlhs4 (127)  [1/1] 2.47ns  loc: minver.c:62
_ifconv:30  %notlhs4 = icmp ne i8 %tmp_43, -1

ST_8: notrhs4 (128)  [1/1] 2.84ns  loc: minver.c:62
_ifconv:31  %notrhs4 = icmp eq i23 %tmp_86, 0

ST_8: tmp_46 (129)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_49)
_ifconv:32  %tmp_46 = or i1 %notrhs4, %notlhs4

ST_8: tmp_47 (130)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_49)
_ifconv:33  %tmp_47 = and i1 %tmp_45, %tmp_46

ST_8: tmp_48 (131)  [1/1] 6.37ns  loc: minver.c:62
_ifconv:34  %tmp_48 = fcmp ogt float %w_3, %wmax

ST_8: tmp_49 (132)  [1/1] 1.37ns  loc: minver.c:62 (out node of the LUT)
_ifconv:35  %tmp_49 = and i1 %tmp_47, %tmp_48


 <State 9>: 2.94ns
ST_9: r_load_1 (97)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:0  %r_load_1 = load i32* %r

ST_9: empty_9 (98)  [1/1] 0.00ns
_ifconv:1  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 0) nounwind

ST_9: tmp_21 (99)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:2  %tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_9: StgValue_290 (100)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_9: wmax_1 (133)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:36  %wmax_1 = select i1 %tmp_49, float %w_3, float %wmax

ST_9: r_2 (134)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:37  %r_2 = select i1 %tmp_49, i32 %r_1, i32 %r_load_1

ST_9: empty_10 (135)  [1/1] 0.00ns  loc: minver.c:66
_ifconv:38  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_21) nounwind

ST_9: StgValue_294 (137)  [1/1] 1.57ns  loc: minver.c:62
_ifconv:40  store i32 %r_2, i32* %r

ST_9: StgValue_295 (138)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:41  br label %.preheader12


 <State 10>: 4.50ns
ST_10: r_load (140)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_10: tmp_78 (142)  [1/1] 0.00ns
_ifconv1:2  %tmp_78 = trunc i32 %r_load to i6

ST_10: tmp_87_cast (143)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:3  %tmp_87_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_78, i4 0)

ST_10: tmp_79 (144)  [1/1] 1.79ns  loc: minver.c:68
_ifconv1:4  %tmp_79 = add i10 %tmp_87_cast, %tmp_3_cast

ST_10: tmp_88_cast (145)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:5  %tmp_88_cast = sext i10 %tmp_79 to i64

ST_10: a_addr (146)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:6  %a_addr = getelementptr [256 x float]* %a, i64 0, i64 %tmp_88_cast

ST_10: pivot (147)  [2/2] 2.71ns  loc: minver.c:105
_ifconv1:7  %pivot = load float* %a_addr, align 4


 <State 11>: 2.71ns
ST_11: pivot (147)  [1/2] 2.71ns  loc: minver.c:105
_ifconv1:7  %pivot = load float* %a_addr, align 4


 <State 12>: 7.74ns
ST_12: pivot_to_int (148)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:8  %pivot_to_int = bitcast float %pivot to i32

ST_12: tmp_9 (149)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:9  %tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_12: tmp_80 (150)  [1/1] 0.00ns  loc: minver.c:105
_ifconv1:10  %tmp_80 = trunc i32 %pivot_to_int to i23

ST_12: notlhs1 (151)  [1/1] 2.47ns  loc: minver.c:105
_ifconv1:11  %notlhs1 = icmp ne i8 %tmp_9, -1

ST_12: notrhs1 (152)  [1/1] 2.84ns  loc: minver.c:105
_ifconv1:12  %notrhs1 = icmp eq i23 %tmp_80, 0

ST_12: tmp_20 (153)  [1/1] 0.00ns  loc: minver.c:105 (grouped into LUT with out node api)
_ifconv1:13  %tmp_20 = or i1 %notrhs1, %notlhs1

ST_12: tmp_29 (154)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:69
_ifconv1:14  %tmp_29 = fcmp oge float %pivot, 0.000000e+00

ST_12: tmp_30 (155)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:69 (grouped into LUT with out node api)
_ifconv1:15  %tmp_30 = and i1 %tmp_20, %tmp_29

ST_12: f_neg_i1 (156)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:16  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_12: f (157)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:17  %f = bitcast i32 %f_neg_i1 to float

ST_12: api (158)  [1/1] 1.37ns  loc: minver.c:69 (out node of the LUT)
_ifconv1:18  %api = select i1 %tmp_30, float %pivot, float %f


 <State 13>: 5.12ns
ST_13: tmp_5 (159)  [1/1] 5.12ns  loc: minver.c:70
_ifconv1:19  %tmp_5 = fpext float %api to double


 <State 14>: 8.27ns
ST_14: tmp_4 (141)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:1  %tmp_4 = sext i32 %r_load to i64

ST_14: tmp_5_to_int (160)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:20  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_14: tmp_31 (161)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:21  %tmp_31 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_14: tmp_81 (162)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:22  %tmp_81 = trunc i64 %tmp_5_to_int to i52

ST_14: notlhs2 (163)  [1/1] 2.58ns  loc: minver.c:70
_ifconv1:23  %notlhs2 = icmp ne i11 %tmp_31, -1

ST_14: notrhs2 (164)  [1/1] 3.19ns  loc: minver.c:70
_ifconv1:24  %notrhs2 = icmp eq i52 %tmp_81, 0

ST_14: tmp_33 (165)  [1/1] 0.00ns  loc: minver.c:70 (grouped into LUT with out node tmp_35)
_ifconv1:25  %tmp_33 = or i1 %notrhs2, %notlhs2

ST_14: tmp_34 (166)  [1/1] 6.90ns  loc: minver.c:70
_ifconv1:26  %tmp_34 = fcmp ole double %tmp_5, 1.000000e-06

ST_14: tmp_35 (167)  [1/1] 1.37ns  loc: minver.c:70 (out node of the LUT)
_ifconv1:27  %tmp_35 = and i1 %tmp_33, %tmp_34

ST_14: StgValue_325 (168)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:28  br i1 %tmp_35, label %.loopexit.loopexit19, label %3

ST_14: tmp_1 (170)  [1/1] 2.93ns  loc: minver.c:75
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast6

ST_14: StgValue_327 (171)  [1/1] 0.00ns  loc: minver.c:75
:1  br i1 %tmp_1, label %.loopexit11, label %4

ST_14: work_addr_3 (173)  [1/1] 0.00ns  loc: minver.c:77
:0  %work_addr_3 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_3

ST_14: work_load_2 (174)  [2/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_14: work_addr_4 (175)  [1/1] 0.00ns  loc: minver.c:78
:2  %work_addr_4 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_4

ST_14: work_load_3 (176)  [2/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_14: StgValue_332 (476)  [1/1] 0.00ns
.loopexit.loopexit19:0  br label %.loopexit

ST_14: StgValue_333 (567)  [1/1] 0.00ns  loc: minver.c:133
.loopexit:0  ret i32 1


 <State 15>: 5.42ns
ST_15: work_load_2 (174)  [1/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_15: work_load_3 (176)  [1/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_15: StgValue_336 (177)  [1/1] 2.71ns  loc: minver.c:78
:4  store i5 %work_load_3, i5* %work_addr_3, align 1


 <State 16>: 2.71ns
ST_16: StgValue_337 (178)  [1/1] 2.71ns  loc: minver.c:79
:5  store i5 %work_load_2, i5* %work_addr_4, align 1

ST_16: StgValue_338 (179)  [1/1] 1.57ns  loc: minver.c:80
:6  br label %5


 <State 17>: 4.50ns
ST_17: j (181)  [1/1] 0.00ns
:0  %j = phi i5 [ 0, %4 ], [ %j_1, %6 ]

ST_17: exitcond5 (182)  [1/1] 2.37ns  loc: minver.c:80
:1  %exitcond5 = icmp eq i5 %j, -16

ST_17: j_1 (183)  [1/1] 1.67ns  loc: minver.c:80
:2  %j_1 = add i5 %j, 1

ST_17: StgValue_342 (184)  [1/1] 0.00ns  loc: minver.c:80
:3  br i1 %exitcond5, label %.loopexit11.loopexit, label %6

ST_17: tmp_11_cast (189)  [1/1] 0.00ns  loc: minver.c:82
:3  %tmp_11_cast = zext i5 %j to i10

ST_17: tmp_91 (190)  [1/1] 1.79ns  loc: minver.c:82
:4  %tmp_91 = add i10 %tmp_16_cast, %tmp_11_cast

ST_17: tmp_96_cast (191)  [1/1] 0.00ns  loc: minver.c:82
:5  %tmp_96_cast = zext i10 %tmp_91 to i64

ST_17: a_addr_4 (192)  [1/1] 0.00ns  loc: minver.c:82
:6  %a_addr_4 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_96_cast

ST_17: tmp_92 (193)  [1/1] 1.79ns  loc: minver.c:83
:7  %tmp_92 = add i10 %tmp_87_cast, %tmp_11_cast

ST_17: tmp_97_cast (194)  [1/1] 0.00ns  loc: minver.c:83
:8  %tmp_97_cast = sext i10 %tmp_92 to i64

ST_17: a_addr_5 (195)  [1/1] 0.00ns  loc: minver.c:83
:9  %a_addr_5 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_97_cast

ST_17: w (196)  [2/2] 2.71ns  loc: minver.c:82
:10  %w = load float* %a_addr_4, align 4


 <State 18>: 2.71ns
ST_18: w (196)  [1/2] 2.71ns  loc: minver.c:82
:10  %w = load float* %a_addr_4, align 4

ST_18: a_load_2 (197)  [2/2] 2.71ns  loc: minver.c:83
:11  %a_load_2 = load float* %a_addr_5, align 4


 <State 19>: 5.42ns
ST_19: a_load_2 (197)  [1/2] 2.71ns  loc: minver.c:83
:11  %a_load_2 = load float* %a_addr_5, align 4

ST_19: StgValue_354 (198)  [1/1] 2.71ns  loc: minver.c:83
:12  store float %a_load_2, float* %a_addr_4, align 4


 <State 20>: 2.71ns
ST_20: empty_11 (186)  [1/1] 0.00ns
:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_20: tmp_23 (187)  [1/1] 0.00ns  loc: minver.c:80
:1  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_20: StgValue_357 (188)  [1/1] 0.00ns  loc: minver.c:81
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_20: StgValue_358 (199)  [1/1] 2.71ns  loc: minver.c:84
:13  store float %w, float* %a_addr_5, align 4

ST_20: empty_12 (200)  [1/1] 0.00ns  loc: minver.c:85
:14  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_23) nounwind

ST_20: StgValue_360 (201)  [1/1] 0.00ns  loc: minver.c:80
:15  br label %5


 <State 21>: 1.57ns
ST_21: StgValue_361 (203)  [1/1] 0.00ns
.loopexit11.loopexit:0  br label %.loopexit11

ST_21: StgValue_362 (205)  [1/1] 1.57ns  loc: minver.c:88
.loopexit11:0  br label %7


 <State 22>: 4.50ns
ST_22: i_2 (207)  [1/1] 0.00ns
:0  %i_2 = phi i5 [ 0, %.loopexit11 ], [ %i_8, %8 ]

ST_22: exitcond4 (208)  [1/1] 2.37ns  loc: minver.c:88
:1  %exitcond4 = icmp eq i5 %i_2, -16

ST_22: i_8 (209)  [1/1] 1.67ns  loc: minver.c:88
:2  %i_8 = add i5 %i_2, 1

ST_22: StgValue_366 (210)  [1/1] 0.00ns  loc: minver.c:88
:3  br i1 %exitcond4, label %.preheader10.preheader, label %8

ST_22: tmp_12_cast (215)  [1/1] 0.00ns  loc: minver.c:90
:3  %tmp_12_cast = zext i5 %i_2 to i10

ST_22: tmp_93 (216)  [1/1] 1.79ns  loc: minver.c:90
:4  %tmp_93 = add i10 %tmp_16_cast, %tmp_12_cast

ST_22: tmp_98_cast (217)  [1/1] 0.00ns  loc: minver.c:90
:5  %tmp_98_cast = zext i10 %tmp_93 to i64

ST_22: a_addr_6 (218)  [1/1] 0.00ns  loc: minver.c:90
:6  %a_addr_6 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_98_cast

ST_22: a_load_5 (219)  [2/2] 2.71ns  loc: minver.c:90
:7  %a_load_5 = load float* %a_addr_6, align 4


 <State 23>: 2.71ns
ST_23: a_load_5 (219)  [1/2] 2.71ns  loc: minver.c:90
:7  %a_load_5 = load float* %a_addr_6, align 4


 <State 24>: 0.00ns

 <State 25>: 6.30ns
ST_25: tmp_13 (220)  [16/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 26>: 6.30ns
ST_26: tmp_13 (220)  [15/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 27>: 6.30ns
ST_27: tmp_13 (220)  [14/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 28>: 6.30ns
ST_28: tmp_13 (220)  [13/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 29>: 6.30ns
ST_29: tmp_13 (220)  [12/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 30>: 6.30ns
ST_30: tmp_13 (220)  [11/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 31>: 6.30ns
ST_31: tmp_13 (220)  [10/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 32>: 6.30ns
ST_32: tmp_13 (220)  [9/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 33>: 6.30ns
ST_33: tmp_13 (220)  [8/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 34>: 6.30ns
ST_34: tmp_13 (220)  [7/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 35>: 6.30ns
ST_35: tmp_13 (220)  [6/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 36>: 6.30ns
ST_36: tmp_13 (220)  [5/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 37>: 6.30ns
ST_37: tmp_13 (220)  [4/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 38>: 6.30ns
ST_38: tmp_13 (220)  [3/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 39>: 6.30ns
ST_39: tmp_13 (220)  [2/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 40>: 6.30ns
ST_40: tmp_13 (220)  [1/16] 6.30ns  loc: minver.c:90
:8  %tmp_13 = fdiv float %a_load_5, %pivot


 <State 41>: 2.71ns
ST_41: empty_13 (212)  [1/1] 0.00ns
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_41: tmp_24 (213)  [1/1] 0.00ns  loc: minver.c:88
:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_41: StgValue_391 (214)  [1/1] 0.00ns  loc: minver.c:89
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_41: StgValue_392 (221)  [1/1] 2.71ns  loc: minver.c:90
:9  store float %tmp_13, float* %a_addr_6, align 4

ST_41: empty_14 (222)  [1/1] 0.00ns  loc: minver.c:91
:10  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_24) nounwind

ST_41: StgValue_394 (223)  [1/1] 0.00ns  loc: minver.c:88
:11  br label %7


 <State 42>: 2.37ns
ST_42: tmp_26 (225)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:0  %tmp_26 = icmp eq i5 %i_5, 0

ST_42: tmp_20_1 (226)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:1  %tmp_20_1 = icmp eq i5 %i_5, 1

ST_42: tmp_20_2 (227)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:2  %tmp_20_2 = icmp eq i5 %i_5, 2

ST_42: tmp_20_3 (228)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:3  %tmp_20_3 = icmp eq i5 %i_5, 3

ST_42: tmp_20_4 (229)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:4  %tmp_20_4 = icmp eq i5 %i_5, 4

ST_42: tmp_20_5 (230)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:5  %tmp_20_5 = icmp eq i5 %i_5, 5

ST_42: tmp_20_6 (231)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:6  %tmp_20_6 = icmp eq i5 %i_5, 6

ST_42: tmp_20_7 (232)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:7  %tmp_20_7 = icmp eq i5 %i_5, 7

ST_42: tmp_20_8 (233)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:8  %tmp_20_8 = icmp eq i5 %i_5, 8

ST_42: tmp_20_9 (234)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:9  %tmp_20_9 = icmp eq i5 %i_5, 9

ST_42: tmp_20_s (235)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:10  %tmp_20_s = icmp eq i5 %i_5, 10

ST_42: tmp_20_10 (236)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:11  %tmp_20_10 = icmp eq i5 %i_5, 11

ST_42: tmp_20_11 (237)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:12  %tmp_20_11 = icmp eq i5 %i_5, 12

ST_42: tmp_20_12 (238)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:13  %tmp_20_12 = icmp eq i5 %i_5, 13

ST_42: tmp_20_13 (239)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:14  %tmp_20_13 = icmp eq i5 %i_5, 14

ST_42: tmp_20_14 (240)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:15  %tmp_20_14 = icmp eq i5 %i_5, 15

ST_42: StgValue_411 (241)  [1/1] 1.57ns  loc: minver.c:93
.preheader10.preheader:16  br label %.preheader10


 <State 43>: 4.50ns
ST_43: i_3 (243)  [1/1] 0.00ns
.preheader10:0  %i_3 = phi i5 [ %i_9, %._crit_edge ], [ 0, %.preheader10.preheader ]

ST_43: exitcond3 (244)  [1/1] 2.37ns  loc: minver.c:93
.preheader10:1  %exitcond3 = icmp eq i5 %i_3, -16

ST_43: i_9 (245)  [1/1] 1.67ns  loc: minver.c:93
.preheader10:2  %i_9 = add i5 %i_3, 1

ST_43: StgValue_415 (246)  [1/1] 0.00ns  loc: minver.c:93
.preheader10:3  br i1 %exitcond3, label %27, label %9

ST_43: empty_15 (248)  [1/1] 0.00ns
:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_43: tmp_25 (249)  [1/1] 0.00ns  loc: minver.c:93
:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_43: StgValue_418 (250)  [1/1] 0.00ns  loc: minver.c:94
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_43: tmp_15 (251)  [1/1] 2.37ns  loc: minver.c:95
:3  %tmp_15 = icmp eq i5 %i_3, %i_5

ST_43: StgValue_420 (252)  [1/1] 0.00ns  loc: minver.c:95
:4  br i1 %tmp_15, label %._crit_edge, label %10

ST_43: tmp_94 (254)  [1/1] 0.00ns  loc: minver.c:93
:0  %tmp_94 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_3, i4 0)

ST_43: tmp_100_cast (256)  [1/1] 0.00ns  loc: minver.c:96
:2  %tmp_100_cast = zext i9 %tmp_94 to i10

ST_43: tmp_96 (257)  [1/1] 1.79ns  loc: minver.c:96
:3  %tmp_96 = add i10 %tmp_100_cast, %tmp_3_cast

ST_43: tmp_101_cast (258)  [1/1] 0.00ns  loc: minver.c:96
:4  %tmp_101_cast = zext i10 %tmp_96 to i64

ST_43: a_addr_8 (259)  [1/1] 0.00ns  loc: minver.c:96
:5  %a_addr_8 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_101_cast

ST_43: w_2 (306)  [2/2] 2.71ns  loc: minver.c:96
:52  %w_2 = load float* %a_addr_8, align 4

ST_43: StgValue_427 (467)  [1/1] 0.00ns  loc: minver.c:103
._crit_edge18:0  br label %._crit_edge

ST_43: empty_16 (469)  [1/1] 0.00ns  loc: minver.c:104
._crit_edge:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_25) nounwind

ST_43: StgValue_429 (470)  [1/1] 0.00ns  loc: minver.c:93
._crit_edge:1  br label %.preheader10


 <State 44>: 2.71ns
ST_44: w_2 (306)  [1/2] 2.71ns  loc: minver.c:96
:52  %w_2 = load float* %a_addr_8, align 4


 <State 45>: 7.74ns
ST_45: w_2_to_int (307)  [1/1] 0.00ns  loc: minver.c:96
:53  %w_2_to_int = bitcast float %w_2 to i32

ST_45: tmp_50 (308)  [1/1] 0.00ns  loc: minver.c:96
:54  %tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_2_to_int, i32 23, i32 30)

ST_45: tmp_127 (309)  [1/1] 0.00ns  loc: minver.c:96
:55  %tmp_127 = trunc i32 %w_2_to_int to i23

ST_45: notlhs5 (310)  [1/1] 2.47ns  loc: minver.c:96
:56  %notlhs5 = icmp ne i8 %tmp_50, -1

ST_45: notrhs5 (311)  [1/1] 2.84ns  loc: minver.c:96
:57  %notrhs5 = icmp eq i23 %tmp_127, 0

ST_45: tmp_52 (312)  [1/1] 0.00ns  loc: minver.c:96 (grouped into LUT with out node tmp_54)
:58  %tmp_52 = or i1 %notrhs5, %notlhs5

ST_45: tmp_53 (313)  [1/1] 6.37ns  loc: minver.c:97
:59  %tmp_53 = fcmp oeq float %w_2, 0.000000e+00

ST_45: tmp_54 (314)  [1/1] 1.37ns  loc: minver.c:97 (out node of the LUT)
:60  %tmp_54 = and i1 %tmp_52, %tmp_53

ST_45: StgValue_439 (315)  [1/1] 0.00ns  loc: minver.c:97
:61  br i1 %tmp_54, label %._crit_edge18, label %.preheader9.0

ST_45: StgValue_440 (317)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.0:0  br i1 %tmp_26, label %.preheader9.1, label %11

ST_45: a_load_22 (319)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_22 = load float* %a_addr_9, align 4

ST_45: StgValue_442 (326)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.1:0  br i1 %tmp_20_1, label %.preheader9.2, label %12

ST_45: StgValue_443 (335)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.2:0  br i1 %tmp_20_2, label %.preheader9.3, label %13

ST_45: StgValue_444 (344)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.3:0  br i1 %tmp_20_3, label %.preheader9.4, label %14

ST_45: StgValue_445 (353)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.4:0  br i1 %tmp_20_4, label %.preheader9.5, label %15

ST_45: StgValue_446 (362)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.5:0  br i1 %tmp_20_5, label %.preheader9.6, label %16

ST_45: StgValue_447 (371)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.6:0  br i1 %tmp_20_6, label %.preheader9.7, label %17

ST_45: StgValue_448 (380)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.7:0  br i1 %tmp_20_7, label %.preheader9.8, label %18

ST_45: StgValue_449 (389)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.8:0  br i1 %tmp_20_8, label %.preheader9.9, label %19

ST_45: StgValue_450 (398)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.9:0  br i1 %tmp_20_9, label %.preheader9.10, label %20

ST_45: StgValue_451 (407)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.10:0  br i1 %tmp_20_s, label %.preheader9.11, label %21

ST_45: StgValue_452 (416)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.11:0  br i1 %tmp_20_10, label %.preheader9.12, label %22

ST_45: StgValue_453 (425)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.12:0  br i1 %tmp_20_11, label %.preheader9.13, label %23

ST_45: StgValue_454 (434)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.13:0  br i1 %tmp_20_12, label %.preheader9.14, label %24

ST_45: StgValue_455 (443)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.14:0  br i1 %tmp_20_13, label %.preheader9.15, label %25

ST_45: StgValue_456 (452)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.15:0  br i1 %tmp_20_14, label %.preheader9.16, label %26

ST_45: tmp_18_neg (461)  [1/1] 1.37ns  loc: minver.c:101
.preheader9.16:0  %tmp_18_neg = xor i32 %w_2_to_int, -2147483648

ST_45: tmp_18 (462)  [1/1] 0.00ns  loc: minver.c:101
.preheader9.16:1  %tmp_18 = bitcast i32 %tmp_18_neg to float

ST_45: tmp_19 (463)  [16/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 46>: 8.49ns
ST_46: a_load_22 (319)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_22 = load float* %a_addr_9, align 4

ST_46: tmp_27 (320)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_22

ST_46: a_load_24 (328)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_24 = load float* %a_addr_11, align 4

ST_46: tmp_19 (463)  [15/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 47>: 8.49ns
ST_47: tmp_27 (320)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_22

ST_47: a_load_24 (328)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_24 = load float* %a_addr_11, align 4

ST_47: tmp_22_1 (329)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_24

ST_47: a_load_26 (337)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_26 = load float* %a_addr_13, align 4

ST_47: tmp_19 (463)  [14/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 48>: 8.49ns
ST_48: tmp_27 (320)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_22

ST_48: tmp_22_1 (329)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_24

ST_48: a_load_26 (337)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_26 = load float* %a_addr_13, align 4

ST_48: tmp_22_2 (338)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_26

ST_48: a_load_28 (346)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_28 = load float* %a_addr_15, align 4

ST_48: tmp_19 (463)  [13/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 49>: 8.49ns
ST_49: tmp_27 (320)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_27 = fmul float %w_2, %a_load_22

ST_49: tmp_22_1 (329)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_24

ST_49: tmp_22_2 (338)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_26

ST_49: a_load_28 (346)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_28 = load float* %a_addr_15, align 4

ST_49: tmp_22_3 (347)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_2, %a_load_28

ST_49: a_load_30 (355)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_30 = load float* %a_addr_17, align 4

ST_49: tmp_19 (463)  [12/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 50>: 8.49ns
ST_50: tmp_22_1 (329)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_2, %a_load_24

ST_50: tmp_22_2 (338)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_26

ST_50: tmp_22_3 (347)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_2, %a_load_28

ST_50: a_load_30 (355)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_30 = load float* %a_addr_17, align 4

ST_50: tmp_22_4 (356)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_2, %a_load_30

ST_50: a_load_32 (364)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_32 = load float* %a_addr_19, align 4

ST_50: tmp_19 (463)  [11/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 51>: 8.49ns
ST_51: tmp_22_2 (338)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_2, %a_load_26

ST_51: tmp_22_3 (347)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_2, %a_load_28

ST_51: tmp_22_4 (356)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_2, %a_load_30

ST_51: a_load_32 (364)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_32 = load float* %a_addr_19, align 4

ST_51: tmp_22_5 (365)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_2, %a_load_32

ST_51: a_load_34 (373)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_34 = load float* %a_addr_21, align 4

ST_51: tmp_19 (463)  [10/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 52>: 8.49ns
ST_52: tmp_22_3 (347)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_2, %a_load_28

ST_52: tmp_22_4 (356)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_2, %a_load_30

ST_52: tmp_22_5 (365)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_2, %a_load_32

ST_52: a_load_34 (373)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_34 = load float* %a_addr_21, align 4

ST_52: tmp_22_6 (374)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_2, %a_load_34

ST_52: a_load_36 (382)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_36 = load float* %a_addr_23, align 4

ST_52: tmp_19 (463)  [9/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 53>: 8.49ns
ST_53: tmp_22_4 (356)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_2, %a_load_30

ST_53: tmp_22_5 (365)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_2, %a_load_32

ST_53: tmp_22_6 (374)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_2, %a_load_34

ST_53: a_load_36 (382)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_36 = load float* %a_addr_23, align 4

ST_53: tmp_22_7 (383)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_2, %a_load_36

ST_53: a_load_38 (391)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_38 = load float* %a_addr_25, align 4

ST_53: tmp_19 (463)  [8/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 54>: 8.49ns
ST_54: tmp_22_5 (365)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_2, %a_load_32

ST_54: tmp_22_6 (374)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_2, %a_load_34

ST_54: tmp_22_7 (383)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_2, %a_load_36

ST_54: a_load_38 (391)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_38 = load float* %a_addr_25, align 4

ST_54: tmp_22_8 (392)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_2, %a_load_38

ST_54: a_load_40 (400)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_40 = load float* %a_addr_27, align 4

ST_54: tmp_19 (463)  [7/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 55>: 8.49ns
ST_55: tmp_22_6 (374)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_2, %a_load_34

ST_55: tmp_22_7 (383)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_2, %a_load_36

ST_55: tmp_22_8 (392)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_2, %a_load_38

ST_55: a_load_40 (400)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_40 = load float* %a_addr_27, align 4

ST_55: tmp_22_9 (401)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_2, %a_load_40

ST_55: a_load_42 (409)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_42 = load float* %a_addr_29, align 4

ST_55: tmp_19 (463)  [6/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 56>: 8.49ns
ST_56: tmp_22_7 (383)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_2, %a_load_36

ST_56: tmp_22_8 (392)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_2, %a_load_38

ST_56: tmp_22_9 (401)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_2, %a_load_40

ST_56: a_load_42 (409)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_42 = load float* %a_addr_29, align 4

ST_56: tmp_22_s (410)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_2, %a_load_42

ST_56: a_load_44 (418)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_44 = load float* %a_addr_31, align 4

ST_56: tmp_19 (463)  [5/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 57>: 8.49ns
ST_57: tmp_22_8 (392)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_2, %a_load_38

ST_57: tmp_22_9 (401)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_2, %a_load_40

ST_57: tmp_22_s (410)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_2, %a_load_42

ST_57: a_load_44 (418)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_44 = load float* %a_addr_31, align 4

ST_57: tmp_22_10 (419)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_2, %a_load_44

ST_57: a_load_46 (427)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_46 = load float* %a_addr_33, align 4

ST_57: tmp_19 (463)  [4/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 58>: 8.49ns
ST_58: tmp_22_9 (401)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_2, %a_load_40

ST_58: tmp_22_s (410)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_2, %a_load_42

ST_58: tmp_22_10 (419)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_2, %a_load_44

ST_58: a_load_46 (427)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_46 = load float* %a_addr_33, align 4

ST_58: tmp_22_11 (428)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_2, %a_load_46

ST_58: a_load_48 (436)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_48 = load float* %a_addr_35, align 4

ST_58: tmp_19 (463)  [3/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 59>: 8.49ns
ST_59: tmp_22_s (410)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_2, %a_load_42

ST_59: tmp_22_10 (419)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_2, %a_load_44

ST_59: tmp_22_11 (428)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_2, %a_load_46

ST_59: a_load_48 (436)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_48 = load float* %a_addr_35, align 4

ST_59: tmp_22_12 (437)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_2, %a_load_48

ST_59: a_load_50 (445)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_50 = load float* %a_addr_37, align 4

ST_59: tmp_19 (463)  [2/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 60>: 8.49ns
ST_60: tmp_22_10 (419)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_2, %a_load_44

ST_60: tmp_22_11 (428)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_2, %a_load_46

ST_60: tmp_22_12 (437)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_2, %a_load_48

ST_60: a_load_50 (445)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_50 = load float* %a_addr_37, align 4

ST_60: tmp_22_13 (446)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_2, %a_load_50

ST_60: a_load_52 (454)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_load_52 = load float* %a_addr_39, align 4

ST_60: tmp_19 (463)  [1/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_19 = fdiv float %tmp_18, %pivot


 <State 61>: 8.49ns
ST_61: tmp_95 (255)  [1/1] 0.00ns  loc: minver.c:96
:1  %tmp_95 = zext i9 %tmp_94 to i64

ST_61: a_addr_10 (260)  [1/1] 0.00ns  loc: minver.c:99
:6  %a_addr_10 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_95

ST_61: a_load_23 (321)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_23 = load float* %a_addr_10, align 4

ST_61: tmp_22_11 (428)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_2, %a_load_46

ST_61: tmp_22_12 (437)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_2, %a_load_48

ST_61: tmp_22_13 (446)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_2, %a_load_50

ST_61: a_load_52 (454)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_load_52 = load float* %a_addr_39, align 4

ST_61: tmp_22_14 (455)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_2, %a_load_52


 <State 62>: 5.78ns
ST_62: tmp_97 (261)  [1/1] 0.00ns  loc: minver.c:93
:7  %tmp_97 = or i9 %tmp_94, 1

ST_62: tmp_98 (262)  [1/1] 0.00ns  loc: minver.c:99
:8  %tmp_98 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_97)

ST_62: a_addr_12 (263)  [1/1] 0.00ns  loc: minver.c:99
:9  %a_addr_12 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_98

ST_62: a_load_23 (321)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_23 = load float* %a_addr_10, align 4

ST_62: a_load_25 (330)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_25 = load float* %a_addr_12, align 4

ST_62: tmp_22_12 (437)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_2, %a_load_48

ST_62: tmp_22_13 (446)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_2, %a_load_50

ST_62: tmp_22_14 (455)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_2, %a_load_52


 <State 63>: 8.26ns
ST_63: tmp_99 (264)  [1/1] 0.00ns  loc: minver.c:93
:10  %tmp_99 = or i9 %tmp_94, 2

ST_63: tmp_100 (265)  [1/1] 0.00ns  loc: minver.c:99
:11  %tmp_100 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_99)

ST_63: a_addr_14 (266)  [1/1] 0.00ns  loc: minver.c:99
:12  %a_addr_14 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_100

ST_63: tmp_28 (322)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_23, %tmp_27

ST_63: a_load_25 (330)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_25 = load float* %a_addr_12, align 4

ST_63: a_load_27 (339)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_27 = load float* %a_addr_14, align 4

ST_63: tmp_22_13 (446)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_2, %a_load_50

ST_63: tmp_22_14 (455)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_2, %a_load_52


 <State 64>: 8.26ns
ST_64: tmp_101 (267)  [1/1] 0.00ns  loc: minver.c:93
:13  %tmp_101 = or i9 %tmp_94, 3

ST_64: tmp_102 (268)  [1/1] 0.00ns  loc: minver.c:99
:14  %tmp_102 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_101)

ST_64: a_addr_16 (269)  [1/1] 0.00ns  loc: minver.c:99
:15  %a_addr_16 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_102

ST_64: tmp_28 (322)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_23, %tmp_27

ST_64: tmp_23_1 (331)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_25, %tmp_22_1

ST_64: a_load_27 (339)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_27 = load float* %a_addr_14, align 4

ST_64: a_load_29 (348)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_29 = load float* %a_addr_16, align 4

ST_64: tmp_22_14 (455)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_2, %a_load_52


 <State 65>: 8.26ns
ST_65: tmp_103 (270)  [1/1] 0.00ns  loc: minver.c:93
:16  %tmp_103 = or i9 %tmp_94, 4

ST_65: tmp_104 (271)  [1/1] 0.00ns  loc: minver.c:99
:17  %tmp_104 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_103)

ST_65: a_addr_18 (272)  [1/1] 0.00ns  loc: minver.c:99
:18  %a_addr_18 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_104

ST_65: tmp_28 (322)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_23, %tmp_27

ST_65: tmp_23_1 (331)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_25, %tmp_22_1

ST_65: tmp_23_2 (340)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_27, %tmp_22_2

ST_65: a_load_29 (348)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_29 = load float* %a_addr_16, align 4

ST_65: a_load_31 (357)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_31 = load float* %a_addr_18, align 4


 <State 66>: 8.26ns
ST_66: tmp_105 (273)  [1/1] 0.00ns  loc: minver.c:93
:19  %tmp_105 = or i9 %tmp_94, 5

ST_66: tmp_106 (274)  [1/1] 0.00ns  loc: minver.c:99
:20  %tmp_106 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_105)

ST_66: a_addr_20 (275)  [1/1] 0.00ns  loc: minver.c:99
:21  %a_addr_20 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_106

ST_66: tmp_28 (322)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_23, %tmp_27

ST_66: tmp_23_1 (331)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_25, %tmp_22_1

ST_66: tmp_23_2 (340)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_27, %tmp_22_2

ST_66: tmp_23_3 (349)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_load_29, %tmp_22_3

ST_66: a_load_31 (357)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_31 = load float* %a_addr_18, align 4

ST_66: a_load_33 (366)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_33 = load float* %a_addr_20, align 4


 <State 67>: 8.26ns
ST_67: tmp_107 (276)  [1/1] 0.00ns  loc: minver.c:93
:22  %tmp_107 = or i9 %tmp_94, 6

ST_67: tmp_108 (277)  [1/1] 0.00ns  loc: minver.c:99
:23  %tmp_108 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_107)

ST_67: a_addr_22 (278)  [1/1] 0.00ns  loc: minver.c:99
:24  %a_addr_22 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_108

ST_67: tmp_28 (322)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_28 = fsub float %a_load_23, %tmp_27

ST_67: tmp_23_1 (331)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_25, %tmp_22_1

ST_67: tmp_23_2 (340)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_27, %tmp_22_2

ST_67: tmp_23_3 (349)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_load_29, %tmp_22_3

ST_67: tmp_23_4 (358)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_load_31, %tmp_22_4

ST_67: a_load_33 (366)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_33 = load float* %a_addr_20, align 4

ST_67: a_load_35 (375)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_35 = load float* %a_addr_22, align 4


 <State 68>: 8.26ns
ST_68: tmp_109 (279)  [1/1] 0.00ns  loc: minver.c:93
:25  %tmp_109 = or i9 %tmp_94, 7

ST_68: tmp_110 (280)  [1/1] 0.00ns  loc: minver.c:99
:26  %tmp_110 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_109)

ST_68: a_addr_24 (281)  [1/1] 0.00ns  loc: minver.c:99
:27  %a_addr_24 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_110

ST_68: tmp_23_1 (331)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_load_25, %tmp_22_1

ST_68: tmp_23_2 (340)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_27, %tmp_22_2

ST_68: tmp_23_3 (349)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_load_29, %tmp_22_3

ST_68: tmp_23_4 (358)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_load_31, %tmp_22_4

ST_68: tmp_23_5 (367)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_load_33, %tmp_22_5

ST_68: a_load_35 (375)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_35 = load float* %a_addr_22, align 4

ST_68: a_load_37 (384)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_37 = load float* %a_addr_24, align 4


 <State 69>: 8.26ns
ST_69: tmp_111 (282)  [1/1] 0.00ns  loc: minver.c:93
:28  %tmp_111 = or i9 %tmp_94, 8

ST_69: tmp_112 (283)  [1/1] 0.00ns  loc: minver.c:99
:29  %tmp_112 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_111)

ST_69: a_addr_26 (284)  [1/1] 0.00ns  loc: minver.c:99
:30  %a_addr_26 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_112

ST_69: tmp_23_2 (340)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_load_27, %tmp_22_2

ST_69: tmp_23_3 (349)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_load_29, %tmp_22_3

ST_69: tmp_23_4 (358)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_load_31, %tmp_22_4

ST_69: tmp_23_5 (367)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_load_33, %tmp_22_5

ST_69: tmp_23_6 (376)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_load_35, %tmp_22_6

ST_69: a_load_37 (384)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_37 = load float* %a_addr_24, align 4

ST_69: a_load_39 (393)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_39 = load float* %a_addr_26, align 4


 <State 70>: 8.26ns
ST_70: tmp_113 (285)  [1/1] 0.00ns  loc: minver.c:93
:31  %tmp_113 = or i9 %tmp_94, 9

ST_70: tmp_114 (286)  [1/1] 0.00ns  loc: minver.c:99
:32  %tmp_114 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_113)

ST_70: a_addr_28 (287)  [1/1] 0.00ns  loc: minver.c:99
:33  %a_addr_28 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_114

ST_70: tmp_23_3 (349)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_load_29, %tmp_22_3

ST_70: tmp_23_4 (358)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_load_31, %tmp_22_4

ST_70: tmp_23_5 (367)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_load_33, %tmp_22_5

ST_70: tmp_23_6 (376)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_load_35, %tmp_22_6

ST_70: tmp_23_7 (385)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_load_37, %tmp_22_7

ST_70: a_load_39 (393)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_39 = load float* %a_addr_26, align 4

ST_70: a_load_41 (402)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_41 = load float* %a_addr_28, align 4


 <State 71>: 8.26ns
ST_71: tmp_115 (288)  [1/1] 0.00ns  loc: minver.c:93
:34  %tmp_115 = or i9 %tmp_94, 10

ST_71: tmp_116 (289)  [1/1] 0.00ns  loc: minver.c:99
:35  %tmp_116 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_115)

ST_71: a_addr_30 (290)  [1/1] 0.00ns  loc: minver.c:99
:36  %a_addr_30 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_116

ST_71: tmp_23_4 (358)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_load_31, %tmp_22_4

ST_71: tmp_23_5 (367)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_load_33, %tmp_22_5

ST_71: tmp_23_6 (376)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_load_35, %tmp_22_6

ST_71: tmp_23_7 (385)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_load_37, %tmp_22_7

ST_71: tmp_23_8 (394)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_load_39, %tmp_22_8

ST_71: a_load_41 (402)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_41 = load float* %a_addr_28, align 4

ST_71: a_load_43 (411)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_43 = load float* %a_addr_30, align 4


 <State 72>: 8.26ns
ST_72: tmp_117 (291)  [1/1] 0.00ns  loc: minver.c:93
:37  %tmp_117 = or i9 %tmp_94, 11

ST_72: tmp_118 (292)  [1/1] 0.00ns  loc: minver.c:99
:38  %tmp_118 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_117)

ST_72: a_addr_32 (293)  [1/1] 0.00ns  loc: minver.c:99
:39  %a_addr_32 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_118

ST_72: tmp_23_5 (367)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_load_33, %tmp_22_5

ST_72: tmp_23_6 (376)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_load_35, %tmp_22_6

ST_72: tmp_23_7 (385)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_load_37, %tmp_22_7

ST_72: tmp_23_8 (394)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_load_39, %tmp_22_8

ST_72: tmp_23_9 (403)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_load_41, %tmp_22_9

ST_72: a_load_43 (411)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_43 = load float* %a_addr_30, align 4

ST_72: a_load_45 (420)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_45 = load float* %a_addr_32, align 4


 <State 73>: 8.26ns
ST_73: tmp_119 (294)  [1/1] 0.00ns  loc: minver.c:93
:40  %tmp_119 = or i9 %tmp_94, 12

ST_73: tmp_120 (295)  [1/1] 0.00ns  loc: minver.c:99
:41  %tmp_120 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_119)

ST_73: a_addr_34 (296)  [1/1] 0.00ns  loc: minver.c:99
:42  %a_addr_34 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_120

ST_73: tmp_23_6 (376)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_load_35, %tmp_22_6

ST_73: tmp_23_7 (385)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_load_37, %tmp_22_7

ST_73: tmp_23_8 (394)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_load_39, %tmp_22_8

ST_73: tmp_23_9 (403)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_load_41, %tmp_22_9

ST_73: tmp_23_s (412)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_load_43, %tmp_22_s

ST_73: a_load_45 (420)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_45 = load float* %a_addr_32, align 4

ST_73: a_load_47 (429)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_47 = load float* %a_addr_34, align 4


 <State 74>: 8.26ns
ST_74: tmp_121 (297)  [1/1] 0.00ns  loc: minver.c:93
:43  %tmp_121 = or i9 %tmp_94, 13

ST_74: tmp_122 (298)  [1/1] 0.00ns  loc: minver.c:99
:44  %tmp_122 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_121)

ST_74: a_addr_36 (299)  [1/1] 0.00ns  loc: minver.c:99
:45  %a_addr_36 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_122

ST_74: tmp_23_7 (385)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_load_37, %tmp_22_7

ST_74: tmp_23_8 (394)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_load_39, %tmp_22_8

ST_74: tmp_23_9 (403)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_load_41, %tmp_22_9

ST_74: tmp_23_s (412)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_load_43, %tmp_22_s

ST_74: tmp_23_10 (421)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_load_45, %tmp_22_10

ST_74: a_load_47 (429)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_47 = load float* %a_addr_34, align 4

ST_74: a_load_49 (438)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_49 = load float* %a_addr_36, align 4


 <State 75>: 8.26ns
ST_75: tmp_123 (300)  [1/1] 0.00ns  loc: minver.c:93
:46  %tmp_123 = or i9 %tmp_94, 14

ST_75: tmp_124 (301)  [1/1] 0.00ns  loc: minver.c:99
:47  %tmp_124 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_123)

ST_75: a_addr_38 (302)  [1/1] 0.00ns  loc: minver.c:99
:48  %a_addr_38 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_124

ST_75: tmp_125 (303)  [1/1] 0.00ns  loc: minver.c:93
:49  %tmp_125 = or i9 %tmp_94, 15

ST_75: tmp_126 (304)  [1/1] 0.00ns  loc: minver.c:99
:50  %tmp_126 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_125)

ST_75: a_addr_40 (305)  [1/1] 0.00ns  loc: minver.c:99
:51  %a_addr_40 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_126

ST_75: tmp_23_8 (394)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_load_39, %tmp_22_8

ST_75: tmp_23_9 (403)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_load_41, %tmp_22_9

ST_75: tmp_23_s (412)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_load_43, %tmp_22_s

ST_75: tmp_23_10 (421)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_load_45, %tmp_22_10

ST_75: tmp_23_11 (430)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_load_47, %tmp_22_11

ST_75: a_load_49 (438)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_49 = load float* %a_addr_36, align 4

ST_75: a_load_51 (447)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_51 = load float* %a_addr_38, align 4


 <State 76>: 8.26ns
ST_76: tmp_23_9 (403)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_load_41, %tmp_22_9

ST_76: tmp_23_s (412)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_load_43, %tmp_22_s

ST_76: tmp_23_10 (421)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_load_45, %tmp_22_10

ST_76: tmp_23_11 (430)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_load_47, %tmp_22_11

ST_76: tmp_23_12 (439)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_load_49, %tmp_22_12

ST_76: a_load_51 (447)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_51 = load float* %a_addr_38, align 4

ST_76: a_load_53 (456)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_load_53 = load float* %a_addr_40, align 4


 <State 77>: 8.26ns
ST_77: StgValue_708 (323)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_28, float* %a_addr_10, align 4

ST_77: StgValue_709 (324)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.1

ST_77: tmp_23_s (412)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_load_43, %tmp_22_s

ST_77: tmp_23_10 (421)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_load_45, %tmp_22_10

ST_77: tmp_23_11 (430)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_load_47, %tmp_22_11

ST_77: tmp_23_12 (439)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_load_49, %tmp_22_12

ST_77: tmp_23_13 (448)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_load_51, %tmp_22_13

ST_77: a_load_53 (456)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_load_53 = load float* %a_addr_40, align 4


 <State 78>: 8.26ns
ST_78: StgValue_716 (332)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_1, float* %a_addr_12, align 4

ST_78: StgValue_717 (333)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.2

ST_78: tmp_23_10 (421)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_load_45, %tmp_22_10

ST_78: tmp_23_11 (430)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_load_47, %tmp_22_11

ST_78: tmp_23_12 (439)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_load_49, %tmp_22_12

ST_78: tmp_23_13 (448)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_load_51, %tmp_22_13

ST_78: tmp_23_14 (457)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_load_53, %tmp_22_14


 <State 79>: 8.26ns
ST_79: StgValue_723 (341)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_2, float* %a_addr_14, align 4

ST_79: StgValue_724 (342)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.3

ST_79: tmp_23_11 (430)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_load_47, %tmp_22_11

ST_79: tmp_23_12 (439)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_load_49, %tmp_22_12

ST_79: tmp_23_13 (448)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_load_51, %tmp_22_13

ST_79: tmp_23_14 (457)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_load_53, %tmp_22_14


 <State 80>: 8.26ns
ST_80: StgValue_729 (350)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_3, float* %a_addr_16, align 4

ST_80: StgValue_730 (351)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.4

ST_80: tmp_23_12 (439)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_load_49, %tmp_22_12

ST_80: tmp_23_13 (448)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_load_51, %tmp_22_13

ST_80: tmp_23_14 (457)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_load_53, %tmp_22_14


 <State 81>: 8.26ns
ST_81: StgValue_734 (359)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_4, float* %a_addr_18, align 4

ST_81: StgValue_735 (360)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.5

ST_81: tmp_23_13 (448)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_load_51, %tmp_22_13

ST_81: tmp_23_14 (457)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_load_53, %tmp_22_14


 <State 82>: 8.26ns
ST_82: StgValue_738 (368)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_5, float* %a_addr_20, align 4

ST_82: StgValue_739 (369)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.6

ST_82: tmp_23_14 (457)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_load_53, %tmp_22_14


 <State 83>: 2.71ns
ST_83: StgValue_741 (377)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_6, float* %a_addr_22, align 4

ST_83: StgValue_742 (378)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.7


 <State 84>: 2.71ns
ST_84: StgValue_743 (386)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_7, float* %a_addr_24, align 4

ST_84: StgValue_744 (387)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.8


 <State 85>: 2.71ns
ST_85: StgValue_745 (395)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_8, float* %a_addr_26, align 4

ST_85: StgValue_746 (396)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.9


 <State 86>: 2.71ns
ST_86: StgValue_747 (404)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_9, float* %a_addr_28, align 4

ST_86: StgValue_748 (405)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.10


 <State 87>: 2.71ns
ST_87: StgValue_749 (413)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_s, float* %a_addr_30, align 4

ST_87: StgValue_750 (414)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.11


 <State 88>: 2.71ns
ST_88: StgValue_751 (422)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_10, float* %a_addr_32, align 4

ST_88: StgValue_752 (423)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.12


 <State 89>: 2.71ns
ST_89: StgValue_753 (431)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_11, float* %a_addr_34, align 4

ST_89: StgValue_754 (432)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.13


 <State 90>: 2.71ns
ST_90: StgValue_755 (440)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_12, float* %a_addr_36, align 4

ST_90: StgValue_756 (441)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.14


 <State 91>: 2.71ns
ST_91: StgValue_757 (449)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_13, float* %a_addr_38, align 4

ST_91: StgValue_758 (450)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.15


 <State 92>: 2.71ns
ST_92: StgValue_759 (458)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_14, float* %a_addr_40, align 4

ST_92: StgValue_760 (459)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.16


 <State 93>: 0.00ns

 <State 94>: 2.71ns
ST_94: StgValue_761 (464)  [1/1] 2.71ns  loc: minver.c:101
.preheader9.16:3  store float %tmp_19, float* %a_addr_8, align 4

ST_94: StgValue_762 (465)  [1/1] 0.00ns  loc: minver.c:102
.preheader9.16:4  br label %._crit_edge18


 <State 95>: 6.30ns
ST_95: tmp_14 (472)  [16/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 96>: 6.30ns
ST_96: tmp_14 (472)  [15/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 97>: 6.30ns
ST_97: tmp_14 (472)  [14/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 98>: 6.30ns
ST_98: tmp_14 (472)  [13/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 99>: 6.30ns
ST_99: tmp_14 (472)  [12/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 100>: 6.30ns
ST_100: tmp_14 (472)  [11/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 101>: 6.30ns
ST_101: tmp_14 (472)  [10/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 102>: 6.30ns
ST_102: tmp_14 (472)  [9/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 103>: 6.30ns
ST_103: tmp_14 (472)  [8/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 104>: 6.30ns
ST_104: tmp_14 (472)  [7/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 105>: 6.30ns
ST_105: tmp_14 (472)  [6/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 106>: 6.30ns
ST_106: tmp_14 (472)  [5/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 107>: 6.30ns
ST_107: tmp_14 (472)  [4/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 108>: 6.30ns
ST_108: tmp_14 (472)  [3/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 109>: 6.30ns
ST_109: tmp_14 (472)  [2/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 110>: 6.30ns
ST_110: tmp_14 (472)  [1/16] 6.30ns  loc: minver.c:105
:0  %tmp_14 = fdiv float 1.000000e+00, %pivot


 <State 111>: 2.71ns
ST_111: StgValue_779 (473)  [1/1] 2.71ns  loc: minver.c:105
:1  store float %tmp_14, float* %a_addr_7, align 4

ST_111: StgValue_780 (474)  [1/1] 0.00ns  loc: minver.c:56
:2  br label %.preheader13


 <State 112>: 2.37ns
ST_112: i_4 (480)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i5 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_112: exitcond1 (481)  [1/1] 2.37ns  loc: minver.c:109
.preheader8:1  %exitcond1 = icmp eq i5 %i_4, -16

ST_112: i_7 (482)  [1/1] 1.67ns  loc: minver.c:129
.preheader8:2  %i_7 = add i5 %i_4, 1

ST_112: StgValue_784 (483)  [1/1] 0.00ns  loc: minver.c:109
.preheader8:3  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_112: empty_17 (485)  [1/1] 0.00ns
.preheader.preheader:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_112: tmp_s (486)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:1  %tmp_s = zext i5 %i_4 to i64

ST_112: tmp_cast (487)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:2  %tmp_cast = zext i5 %i_4 to i10

ST_112: work_addr_1 (488)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:3  %work_addr_1 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_s

ST_112: StgValue_789 (489)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:4  br label %.preheader

ST_112: StgValue_790 (565)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 113>: 2.71ns
ST_113: work_load (491)  [2/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i5* %work_addr_1, align 1


 <State 114>: 7.21ns
ST_114: work_load (491)  [1/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i5* %work_addr_1, align 1

ST_114: tmp_8 (492)  [1/1] 2.37ns  loc: minver.c:116
.preheader:1  %tmp_8 = icmp eq i5 %work_load, %i_4

ST_114: StgValue_794 (493)  [1/1] 0.00ns  loc: minver.c:116
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %28

ST_114: tmp_10 (497)  [1/1] 0.00ns  loc: minver.c:118
:2  %tmp_10 = zext i5 %work_load to i64

ST_114: tmp_10_cast (498)  [1/1] 0.00ns  loc: minver.c:114
:3  %tmp_10_cast = zext i5 %work_load to i10

ST_114: tmp_87 (499)  [1/1] 0.00ns  loc: minver.c:114
:4  %tmp_87 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %work_load, i4 0)

ST_114: tmp_88 (500)  [1/1] 0.00ns  loc: minver.c:114
:5  %tmp_88 = zext i9 %tmp_87 to i10

ST_114: tmp_89 (501)  [1/1] 1.79ns  loc: minver.c:123
:6  %tmp_89 = add i10 %tmp_88, %tmp_cast

ST_114: tmp_94_cast (502)  [1/1] 0.00ns  loc: minver.c:123
:7  %tmp_94_cast = sext i10 %tmp_89 to i64

ST_114: a_addr_2 (503)  [1/1] 0.00ns  loc: minver.c:123
:8  %a_addr_2 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_94_cast

ST_114: tmp_90 (504)  [1/1] 1.79ns  loc: minver.c:124
:9  %tmp_90 = add i10 %tmp_88, %tmp_10_cast

ST_114: tmp_95_cast (505)  [1/1] 0.00ns  loc: minver.c:124
:10  %tmp_95_cast = sext i10 %tmp_90 to i64

ST_114: a_addr_3 (506)  [1/1] 0.00ns  loc: minver.c:124
:11  %a_addr_3 = getelementptr [256 x float]* %a, i64 0, i64 %tmp_95_cast

ST_114: work_addr_2 (507)  [1/1] 0.00ns  loc: minver.c:118
:12  %work_addr_2 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_10

ST_114: work_load_1 (508)  [2/2] 2.71ns  loc: minver.c:118
:13  %work_load_1 = load i5* %work_addr_2, align 1

ST_114: a_load (511)  [2/2] 2.71ns  loc: minver.c:123
:16  %a_load = load float* %a_addr_2, align 4


 <State 115>: 2.71ns
ST_115: work_load_1 (508)  [1/2] 2.71ns  loc: minver.c:118
:13  %work_load_1 = load i5* %work_addr_2, align 1

ST_115: StgValue_809 (509)  [1/1] 2.71ns  loc: minver.c:119
:14  store i5 %work_load, i5* %work_addr_2, align 1

ST_115: a_load (511)  [1/2] 2.71ns  loc: minver.c:123
:16  %a_load = load float* %a_addr_2, align 4

ST_115: a_load_3 (512)  [2/2] 2.71ns  loc: minver.c:124
:17  %a_load_3 = load float* %a_addr_3, align 4


 <State 116>: 5.42ns
ST_116: StgValue_812 (510)  [1/1] 2.71ns  loc: minver.c:120
:15  store i5 %work_load_1, i5* %work_addr_1, align 1

ST_116: a_load_3 (512)  [1/2] 2.71ns  loc: minver.c:124
:17  %a_load_3 = load float* %a_addr_3, align 4

ST_116: StgValue_814 (513)  [1/1] 2.71ns  loc: minver.c:124
:18  store float %a_load_3, float* %a_addr_2, align 4


 <State 117>: 2.71ns
ST_117: StgValue_815 (514)  [1/1] 2.71ns  loc: minver.c:125
:19  store float %a_load, float* %a_addr_3, align 4


 <State 118>: 2.71ns
ST_118: a_load_4 (515)  [2/2] 2.71ns  loc: minver.c:123
:20  %a_load_4 = load float* %a_addr_2, align 4


 <State 119>: 2.71ns
ST_119: a_load_4 (515)  [1/2] 2.71ns  loc: minver.c:123
:20  %a_load_4 = load float* %a_addr_2, align 4

ST_119: StgValue_818 (516)  [1/1] 2.71ns  loc: minver.c:124
:21  store float %a_load, float* %a_addr_2, align 4


 <State 120>: 2.71ns
ST_120: StgValue_819 (517)  [1/1] 2.71ns  loc: minver.c:125
:22  store float %a_load_4, float* %a_addr_3, align 4


 <State 121>: 2.71ns
ST_121: a_load_6 (518)  [2/2] 2.71ns  loc: minver.c:123
:23  %a_load_6 = load float* %a_addr_2, align 4


 <State 122>: 2.71ns
ST_122: a_load_6 (518)  [1/2] 2.71ns  loc: minver.c:123
:23  %a_load_6 = load float* %a_addr_2, align 4

ST_122: StgValue_822 (519)  [1/1] 2.71ns  loc: minver.c:124
:24  store float %a_load_4, float* %a_addr_2, align 4


 <State 123>: 2.71ns
ST_123: StgValue_823 (520)  [1/1] 2.71ns  loc: minver.c:125
:25  store float %a_load_6, float* %a_addr_3, align 4


 <State 124>: 2.71ns
ST_124: a_load_7 (521)  [2/2] 2.71ns  loc: minver.c:123
:26  %a_load_7 = load float* %a_addr_2, align 4


 <State 125>: 2.71ns
ST_125: a_load_7 (521)  [1/2] 2.71ns  loc: minver.c:123
:26  %a_load_7 = load float* %a_addr_2, align 4

ST_125: StgValue_826 (522)  [1/1] 2.71ns  loc: minver.c:124
:27  store float %a_load_6, float* %a_addr_2, align 4


 <State 126>: 2.71ns
ST_126: StgValue_827 (523)  [1/1] 2.71ns  loc: minver.c:125
:28  store float %a_load_7, float* %a_addr_3, align 4


 <State 127>: 2.71ns
ST_127: a_load_8 (524)  [2/2] 2.71ns  loc: minver.c:123
:29  %a_load_8 = load float* %a_addr_2, align 4


 <State 128>: 2.71ns
ST_128: a_load_8 (524)  [1/2] 2.71ns  loc: minver.c:123
:29  %a_load_8 = load float* %a_addr_2, align 4

ST_128: StgValue_830 (525)  [1/1] 2.71ns  loc: minver.c:124
:30  store float %a_load_7, float* %a_addr_2, align 4


 <State 129>: 2.71ns
ST_129: StgValue_831 (526)  [1/1] 2.71ns  loc: minver.c:125
:31  store float %a_load_8, float* %a_addr_3, align 4


 <State 130>: 2.71ns
ST_130: a_load_9 (527)  [2/2] 2.71ns  loc: minver.c:123
:32  %a_load_9 = load float* %a_addr_2, align 4


 <State 131>: 2.71ns
ST_131: a_load_9 (527)  [1/2] 2.71ns  loc: minver.c:123
:32  %a_load_9 = load float* %a_addr_2, align 4

ST_131: StgValue_834 (528)  [1/1] 2.71ns  loc: minver.c:124
:33  store float %a_load_8, float* %a_addr_2, align 4


 <State 132>: 2.71ns
ST_132: StgValue_835 (529)  [1/1] 2.71ns  loc: minver.c:125
:34  store float %a_load_9, float* %a_addr_3, align 4


 <State 133>: 2.71ns
ST_133: a_load_10 (530)  [2/2] 2.71ns  loc: minver.c:123
:35  %a_load_10 = load float* %a_addr_2, align 4


 <State 134>: 2.71ns
ST_134: a_load_10 (530)  [1/2] 2.71ns  loc: minver.c:123
:35  %a_load_10 = load float* %a_addr_2, align 4

ST_134: StgValue_838 (531)  [1/1] 2.71ns  loc: minver.c:124
:36  store float %a_load_9, float* %a_addr_2, align 4


 <State 135>: 2.71ns
ST_135: StgValue_839 (532)  [1/1] 2.71ns  loc: minver.c:125
:37  store float %a_load_10, float* %a_addr_3, align 4


 <State 136>: 2.71ns
ST_136: a_load_11 (533)  [2/2] 2.71ns  loc: minver.c:123
:38  %a_load_11 = load float* %a_addr_2, align 4


 <State 137>: 2.71ns
ST_137: a_load_11 (533)  [1/2] 2.71ns  loc: minver.c:123
:38  %a_load_11 = load float* %a_addr_2, align 4

ST_137: StgValue_842 (534)  [1/1] 2.71ns  loc: minver.c:124
:39  store float %a_load_10, float* %a_addr_2, align 4


 <State 138>: 2.71ns
ST_138: StgValue_843 (535)  [1/1] 2.71ns  loc: minver.c:125
:40  store float %a_load_11, float* %a_addr_3, align 4


 <State 139>: 2.71ns
ST_139: a_load_12 (536)  [2/2] 2.71ns  loc: minver.c:123
:41  %a_load_12 = load float* %a_addr_2, align 4


 <State 140>: 2.71ns
ST_140: a_load_12 (536)  [1/2] 2.71ns  loc: minver.c:123
:41  %a_load_12 = load float* %a_addr_2, align 4

ST_140: StgValue_846 (537)  [1/1] 2.71ns  loc: minver.c:124
:42  store float %a_load_11, float* %a_addr_2, align 4


 <State 141>: 2.71ns
ST_141: StgValue_847 (538)  [1/1] 2.71ns  loc: minver.c:125
:43  store float %a_load_12, float* %a_addr_3, align 4


 <State 142>: 2.71ns
ST_142: a_load_13 (539)  [2/2] 2.71ns  loc: minver.c:123
:44  %a_load_13 = load float* %a_addr_2, align 4


 <State 143>: 2.71ns
ST_143: a_load_13 (539)  [1/2] 2.71ns  loc: minver.c:123
:44  %a_load_13 = load float* %a_addr_2, align 4

ST_143: StgValue_850 (540)  [1/1] 2.71ns  loc: minver.c:124
:45  store float %a_load_12, float* %a_addr_2, align 4


 <State 144>: 2.71ns
ST_144: StgValue_851 (541)  [1/1] 2.71ns  loc: minver.c:125
:46  store float %a_load_13, float* %a_addr_3, align 4


 <State 145>: 2.71ns
ST_145: a_load_14 (542)  [2/2] 2.71ns  loc: minver.c:123
:47  %a_load_14 = load float* %a_addr_2, align 4


 <State 146>: 2.71ns
ST_146: a_load_14 (542)  [1/2] 2.71ns  loc: minver.c:123
:47  %a_load_14 = load float* %a_addr_2, align 4

ST_146: StgValue_854 (543)  [1/1] 2.71ns  loc: minver.c:124
:48  store float %a_load_13, float* %a_addr_2, align 4


 <State 147>: 2.71ns
ST_147: StgValue_855 (544)  [1/1] 2.71ns  loc: minver.c:125
:49  store float %a_load_14, float* %a_addr_3, align 4


 <State 148>: 2.71ns
ST_148: a_load_15 (545)  [2/2] 2.71ns  loc: minver.c:123
:50  %a_load_15 = load float* %a_addr_2, align 4


 <State 149>: 2.71ns
ST_149: a_load_15 (545)  [1/2] 2.71ns  loc: minver.c:123
:50  %a_load_15 = load float* %a_addr_2, align 4

ST_149: StgValue_858 (546)  [1/1] 2.71ns  loc: minver.c:124
:51  store float %a_load_14, float* %a_addr_2, align 4


 <State 150>: 2.71ns
ST_150: StgValue_859 (547)  [1/1] 2.71ns  loc: minver.c:125
:52  store float %a_load_15, float* %a_addr_3, align 4


 <State 151>: 2.71ns
ST_151: a_load_16 (548)  [2/2] 2.71ns  loc: minver.c:123
:53  %a_load_16 = load float* %a_addr_2, align 4


 <State 152>: 2.71ns
ST_152: a_load_16 (548)  [1/2] 2.71ns  loc: minver.c:123
:53  %a_load_16 = load float* %a_addr_2, align 4

ST_152: StgValue_862 (549)  [1/1] 2.71ns  loc: minver.c:124
:54  store float %a_load_15, float* %a_addr_2, align 4


 <State 153>: 2.71ns
ST_153: StgValue_863 (550)  [1/1] 2.71ns  loc: minver.c:125
:55  store float %a_load_16, float* %a_addr_3, align 4


 <State 154>: 2.71ns
ST_154: a_load_17 (551)  [2/2] 2.71ns  loc: minver.c:123
:56  %a_load_17 = load float* %a_addr_2, align 4


 <State 155>: 2.71ns
ST_155: a_load_17 (551)  [1/2] 2.71ns  loc: minver.c:123
:56  %a_load_17 = load float* %a_addr_2, align 4

ST_155: StgValue_866 (552)  [1/1] 2.71ns  loc: minver.c:124
:57  store float %a_load_16, float* %a_addr_2, align 4


 <State 156>: 2.71ns
ST_156: StgValue_867 (553)  [1/1] 2.71ns  loc: minver.c:125
:58  store float %a_load_17, float* %a_addr_3, align 4


 <State 157>: 2.71ns
ST_157: a_load_18 (554)  [2/2] 2.71ns  loc: minver.c:123
:59  %a_load_18 = load float* %a_addr_2, align 4


 <State 158>: 2.71ns
ST_158: a_load_18 (554)  [1/2] 2.71ns  loc: minver.c:123
:59  %a_load_18 = load float* %a_addr_2, align 4

ST_158: StgValue_870 (555)  [1/1] 2.71ns  loc: minver.c:124
:60  store float %a_load_17, float* %a_addr_2, align 4


 <State 159>: 2.71ns
ST_159: StgValue_871 (556)  [1/1] 2.71ns  loc: minver.c:125
:61  store float %a_load_18, float* %a_addr_3, align 4


 <State 160>: 2.71ns
ST_160: a_load_19 (557)  [2/2] 2.71ns  loc: minver.c:123
:62  %a_load_19 = load float* %a_addr_2, align 4


 <State 161>: 2.71ns
ST_161: a_load_19 (557)  [1/2] 2.71ns  loc: minver.c:123
:62  %a_load_19 = load float* %a_addr_2, align 4

ST_161: StgValue_874 (558)  [1/1] 2.71ns  loc: minver.c:124
:63  store float %a_load_18, float* %a_addr_2, align 4


 <State 162>: 2.71ns
ST_162: tmp_22 (495)  [1/1] 0.00ns  loc: minver.c:111
:0  %tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9) nounwind

ST_162: StgValue_876 (496)  [1/1] 0.00ns  loc: minver.c:112
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_162: StgValue_877 (559)  [1/1] 2.71ns  loc: minver.c:125
:64  store float %a_load_19, float* %a_addr_3, align 4

ST_162: empty_18 (560)  [1/1] 0.00ns  loc: minver.c:127
:65  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_22) nounwind

ST_162: StgValue_879 (561)  [1/1] 0.00ns  loc: minver.c:127
:66  br label %.preheader


 <State 163>: 0.00ns
ST_163: StgValue_880 (563)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:50) [11]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:50) [11]  (0 ns)
	'store' operation (minver.c:52) of variable 'i' on array 'work', minver.c:41 [21]  (2.71 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'alloca' operation ('r') [25]  (0 ns)
	'store' operation of constant 0 on local variable 'r' [26]  (1.57 ns)

 <State 4>: 1.79ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:56) [29]  (0 ns)
	'add' operation ('tmp_77', minver.c:105) [87]  (1.79 ns)

 <State 5>: 4.5ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast6', minver.c:59) ('i', minver.c:59) [93]  (0 ns)
	'add' operation ('tmp_83', minver.c:61) [103]  (1.79 ns)
	'getelementptr' operation ('a_addr_1', minver.c:61) [105]  (0 ns)
	'load' operation ('n', minver.c:61) on array 'a' [106]  (2.71 ns)

 <State 6>: 2.71ns
The critical path consists of the following:
	'load' operation ('n', minver.c:61) on array 'a' [106]  (2.71 ns)

 <State 7>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_39', minver_lib.c:11->minver.c:61) [113]  (6.37 ns)
	'and' operation ('tmp_40', minver_lib.c:11->minver.c:61) [114]  (0 ns)
	'select' operation ('w', minver.c:63) [117]  (1.37 ns)

 <State 8>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_48', minver.c:62) [131]  (6.37 ns)
	'and' operation ('tmp_49', minver.c:62) [132]  (1.37 ns)

 <State 9>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:62) on local variable 'r' [97]  (0 ns)
	'select' operation ('r', minver.c:62) [134]  (1.37 ns)
	'store' operation (minver.c:62) of variable 'r', minver.c:62 on local variable 'r' [137]  (1.57 ns)

 <State 10>: 4.5ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [140]  (0 ns)
	'add' operation ('tmp_79', minver.c:68) [144]  (1.79 ns)
	'getelementptr' operation ('a_addr', minver.c:68) [146]  (0 ns)
	'load' operation ('pivot', minver.c:105) on array 'a' [147]  (2.71 ns)

 <State 11>: 2.71ns
The critical path consists of the following:
	'load' operation ('pivot', minver.c:105) on array 'a' [147]  (2.71 ns)

 <State 12>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_29', minver_lib.c:11->minver.c:69) [154]  (6.37 ns)
	'and' operation ('tmp_30', minver_lib.c:11->minver.c:69) [155]  (0 ns)
	'select' operation ('api', minver.c:69) [158]  (1.37 ns)

 <State 13>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:70) [159]  (5.12 ns)

 <State 14>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_34', minver.c:70) [166]  (6.9 ns)
	'and' operation ('tmp_35', minver.c:70) [167]  (1.37 ns)

 <State 15>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:78) on array 'work', minver.c:41 [176]  (2.71 ns)
	'store' operation (minver.c:78) of variable 'work_load_3', minver.c:78 on array 'work', minver.c:41 [177]  (2.71 ns)

 <State 16>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:79) of variable 'work_load_2', minver.c:77 on array 'work', minver.c:41 [178]  (2.71 ns)

 <State 17>: 4.5ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:80) [181]  (0 ns)
	'add' operation ('tmp_91', minver.c:82) [190]  (1.79 ns)
	'getelementptr' operation ('a_addr_4', minver.c:82) [192]  (0 ns)
	'load' operation ('w', minver.c:82) on array 'a' [196]  (2.71 ns)

 <State 18>: 2.71ns
The critical path consists of the following:
	'load' operation ('w', minver.c:82) on array 'a' [196]  (2.71 ns)

 <State 19>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_2', minver.c:83) on array 'a' [197]  (2.71 ns)
	'store' operation (minver.c:83) of variable 'a_load_2', minver.c:83 on array 'a' [198]  (2.71 ns)

 <State 20>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:84) of variable 'w', minver.c:82 on array 'a' [199]  (2.71 ns)

 <State 21>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:88) [207]  (1.57 ns)

 <State 22>: 4.5ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:88) [207]  (0 ns)
	'add' operation ('tmp_93', minver.c:90) [216]  (1.79 ns)
	'getelementptr' operation ('a_addr_6', minver.c:90) [218]  (0 ns)
	'load' operation ('a_load_5', minver.c:90) on array 'a' [219]  (2.71 ns)

 <State 23>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_5', minver.c:90) on array 'a' [219]  (2.71 ns)

 <State 24>: 0ns
The critical path consists of the following:

 <State 25>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 26>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 27>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 28>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 39>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 40>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:90) [220]  (6.3 ns)

 <State 41>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:90) of variable 'tmp_13', minver.c:90 on array 'a' [221]  (2.71 ns)

 <State 42>: 2.37ns
The critical path consists of the following:
	'icmp' operation ('tmp_26', minver.c:99) [225]  (2.37 ns)

 <State 43>: 4.5ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:93) [243]  (0 ns)
	'add' operation ('tmp_96', minver.c:96) [257]  (1.79 ns)
	'getelementptr' operation ('a_addr_8', minver.c:96) [259]  (0 ns)
	'load' operation ('w', minver.c:96) on array 'a' [306]  (2.71 ns)

 <State 44>: 2.71ns
The critical path consists of the following:
	'load' operation ('w', minver.c:96) on array 'a' [306]  (2.71 ns)

 <State 45>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_53', minver.c:97) [313]  (6.37 ns)
	'and' operation ('tmp_54', minver.c:97) [314]  (1.37 ns)

 <State 46>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_22', minver.c:99) on array 'a' [319]  (2.71 ns)
	'fmul' operation ('tmp_27', minver.c:99) [320]  (5.78 ns)

 <State 47>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_24', minver.c:99) on array 'a' [328]  (2.71 ns)
	'fmul' operation ('tmp_22_1', minver.c:99) [329]  (5.78 ns)

 <State 48>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_26', minver.c:99) on array 'a' [337]  (2.71 ns)
	'fmul' operation ('tmp_22_2', minver.c:99) [338]  (5.78 ns)

 <State 49>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_28', minver.c:99) on array 'a' [346]  (2.71 ns)
	'fmul' operation ('tmp_22_3', minver.c:99) [347]  (5.78 ns)

 <State 50>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_30', minver.c:99) on array 'a' [355]  (2.71 ns)
	'fmul' operation ('tmp_22_4', minver.c:99) [356]  (5.78 ns)

 <State 51>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_32', minver.c:99) on array 'a' [364]  (2.71 ns)
	'fmul' operation ('tmp_22_5', minver.c:99) [365]  (5.78 ns)

 <State 52>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_34', minver.c:99) on array 'a' [373]  (2.71 ns)
	'fmul' operation ('tmp_22_6', minver.c:99) [374]  (5.78 ns)

 <State 53>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_36', minver.c:99) on array 'a' [382]  (2.71 ns)
	'fmul' operation ('tmp_22_7', minver.c:99) [383]  (5.78 ns)

 <State 54>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_38', minver.c:99) on array 'a' [391]  (2.71 ns)
	'fmul' operation ('tmp_22_8', minver.c:99) [392]  (5.78 ns)

 <State 55>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_40', minver.c:99) on array 'a' [400]  (2.71 ns)
	'fmul' operation ('tmp_22_9', minver.c:99) [401]  (5.78 ns)

 <State 56>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_42', minver.c:99) on array 'a' [409]  (2.71 ns)
	'fmul' operation ('tmp_22_s', minver.c:99) [410]  (5.78 ns)

 <State 57>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_44', minver.c:99) on array 'a' [418]  (2.71 ns)
	'fmul' operation ('tmp_22_10', minver.c:99) [419]  (5.78 ns)

 <State 58>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_46', minver.c:99) on array 'a' [427]  (2.71 ns)
	'fmul' operation ('tmp_22_11', minver.c:99) [428]  (5.78 ns)

 <State 59>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_48', minver.c:99) on array 'a' [436]  (2.71 ns)
	'fmul' operation ('tmp_22_12', minver.c:99) [437]  (5.78 ns)

 <State 60>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_50', minver.c:99) on array 'a' [445]  (2.71 ns)
	'fmul' operation ('tmp_22_13', minver.c:99) [446]  (5.78 ns)

 <State 61>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_load_52', minver.c:99) on array 'a' [454]  (2.71 ns)
	'fmul' operation ('tmp_22_14', minver.c:99) [455]  (5.78 ns)

 <State 62>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_22_12', minver.c:99) [437]  (5.78 ns)

 <State 63>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [322]  (8.26 ns)

 <State 64>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [322]  (8.26 ns)

 <State 65>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [322]  (8.26 ns)

 <State 66>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [322]  (8.26 ns)

 <State 67>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_28', minver.c:99) [322]  (8.26 ns)

 <State 68>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [331]  (8.26 ns)

 <State 69>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [340]  (8.26 ns)

 <State 70>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_3', minver.c:99) [349]  (8.26 ns)

 <State 71>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_4', minver.c:99) [358]  (8.26 ns)

 <State 72>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_5', minver.c:99) [367]  (8.26 ns)

 <State 73>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_6', minver.c:99) [376]  (8.26 ns)

 <State 74>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_7', minver.c:99) [385]  (8.26 ns)

 <State 75>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_8', minver.c:99) [394]  (8.26 ns)

 <State 76>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_9', minver.c:99) [403]  (8.26 ns)

 <State 77>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_s', minver.c:99) [412]  (8.26 ns)

 <State 78>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_10', minver.c:99) [421]  (8.26 ns)

 <State 79>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_11', minver.c:99) [430]  (8.26 ns)

 <State 80>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_12', minver.c:99) [439]  (8.26 ns)

 <State 81>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_13', minver.c:99) [448]  (8.26 ns)

 <State 82>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_14', minver.c:99) [457]  (8.26 ns)

 <State 83>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_6', minver.c:99 on array 'a' [377]  (2.71 ns)

 <State 84>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_7', minver.c:99 on array 'a' [386]  (2.71 ns)

 <State 85>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_8', minver.c:99 on array 'a' [395]  (2.71 ns)

 <State 86>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_9', minver.c:99 on array 'a' [404]  (2.71 ns)

 <State 87>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_s', minver.c:99 on array 'a' [413]  (2.71 ns)

 <State 88>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_10', minver.c:99 on array 'a' [422]  (2.71 ns)

 <State 89>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_11', minver.c:99 on array 'a' [431]  (2.71 ns)

 <State 90>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_12', minver.c:99 on array 'a' [440]  (2.71 ns)

 <State 91>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_13', minver.c:99 on array 'a' [449]  (2.71 ns)

 <State 92>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_14', minver.c:99 on array 'a' [458]  (2.71 ns)

 <State 93>: 0ns
The critical path consists of the following:

 <State 94>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:101) of variable 'tmp_19', minver.c:101 on array 'a' [464]  (2.71 ns)

 <State 95>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 96>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 97>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 98>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 99>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 100>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 101>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 102>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 103>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 104>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 105>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 106>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 107>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 108>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 109>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 110>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_14', minver.c:105) [472]  (6.3 ns)

 <State 111>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:105) of variable 'tmp_14', minver.c:105 on array 'a' [473]  (2.71 ns)

 <State 112>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:129) [480]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:109) [481]  (2.37 ns)

 <State 113>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [491]  (2.71 ns)

 <State 114>: 7.21ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [491]  (2.71 ns)
	'add' operation ('tmp_89', minver.c:123) [501]  (1.79 ns)
	'getelementptr' operation ('a_addr_2', minver.c:123) [503]  (0 ns)
	'load' operation ('a_load', minver.c:123) on array 'a' [511]  (2.71 ns)

 <State 115>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load_1', minver.c:118) on array 'work', minver.c:41 [508]  (2.71 ns)

 <State 116>: 5.42ns
The critical path consists of the following:
	'load' operation ('a_load_3', minver.c:124) on array 'a' [512]  (2.71 ns)
	'store' operation (minver.c:124) of variable 'a_load_3', minver.c:124 on array 'a' [513]  (2.71 ns)

 <State 117>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load', minver.c:123 on array 'a' [514]  (2.71 ns)

 <State 118>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_4', minver.c:123) on array 'a' [515]  (2.71 ns)

 <State 119>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_4', minver.c:123) on array 'a' [515]  (2.71 ns)

 <State 120>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_4', minver.c:123 on array 'a' [517]  (2.71 ns)

 <State 121>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_6', minver.c:123) on array 'a' [518]  (2.71 ns)

 <State 122>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_6', minver.c:123) on array 'a' [518]  (2.71 ns)

 <State 123>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_6', minver.c:123 on array 'a' [520]  (2.71 ns)

 <State 124>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_7', minver.c:123) on array 'a' [521]  (2.71 ns)

 <State 125>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_7', minver.c:123) on array 'a' [521]  (2.71 ns)

 <State 126>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_7', minver.c:123 on array 'a' [523]  (2.71 ns)

 <State 127>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_8', minver.c:123) on array 'a' [524]  (2.71 ns)

 <State 128>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_8', minver.c:123) on array 'a' [524]  (2.71 ns)

 <State 129>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_8', minver.c:123 on array 'a' [526]  (2.71 ns)

 <State 130>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_9', minver.c:123) on array 'a' [527]  (2.71 ns)

 <State 131>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_9', minver.c:123) on array 'a' [527]  (2.71 ns)

 <State 132>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_9', minver.c:123 on array 'a' [529]  (2.71 ns)

 <State 133>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_10', minver.c:123) on array 'a' [530]  (2.71 ns)

 <State 134>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_10', minver.c:123) on array 'a' [530]  (2.71 ns)

 <State 135>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_10', minver.c:123 on array 'a' [532]  (2.71 ns)

 <State 136>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_11', minver.c:123) on array 'a' [533]  (2.71 ns)

 <State 137>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_11', minver.c:123) on array 'a' [533]  (2.71 ns)

 <State 138>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_11', minver.c:123 on array 'a' [535]  (2.71 ns)

 <State 139>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_12', minver.c:123) on array 'a' [536]  (2.71 ns)

 <State 140>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_12', minver.c:123) on array 'a' [536]  (2.71 ns)

 <State 141>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_12', minver.c:123 on array 'a' [538]  (2.71 ns)

 <State 142>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_13', minver.c:123) on array 'a' [539]  (2.71 ns)

 <State 143>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_13', minver.c:123) on array 'a' [539]  (2.71 ns)

 <State 144>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_13', minver.c:123 on array 'a' [541]  (2.71 ns)

 <State 145>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_14', minver.c:123) on array 'a' [542]  (2.71 ns)

 <State 146>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_14', minver.c:123) on array 'a' [542]  (2.71 ns)

 <State 147>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_14', minver.c:123 on array 'a' [544]  (2.71 ns)

 <State 148>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_15', minver.c:123) on array 'a' [545]  (2.71 ns)

 <State 149>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_15', minver.c:123) on array 'a' [545]  (2.71 ns)

 <State 150>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_15', minver.c:123 on array 'a' [547]  (2.71 ns)

 <State 151>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_16', minver.c:123) on array 'a' [548]  (2.71 ns)

 <State 152>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_16', minver.c:123) on array 'a' [548]  (2.71 ns)

 <State 153>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_16', minver.c:123 on array 'a' [550]  (2.71 ns)

 <State 154>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_17', minver.c:123) on array 'a' [551]  (2.71 ns)

 <State 155>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_17', minver.c:123) on array 'a' [551]  (2.71 ns)

 <State 156>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_17', minver.c:123 on array 'a' [553]  (2.71 ns)

 <State 157>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_18', minver.c:123) on array 'a' [554]  (2.71 ns)

 <State 158>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_18', minver.c:123) on array 'a' [554]  (2.71 ns)

 <State 159>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_18', minver.c:123 on array 'a' [556]  (2.71 ns)

 <State 160>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_19', minver.c:123) on array 'a' [557]  (2.71 ns)

 <State 161>: 2.71ns
The critical path consists of the following:
	'load' operation ('a_load_19', minver.c:123) on array 'a' [557]  (2.71 ns)

 <State 162>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'a_load_19', minver.c:123 on array 'a' [559]  (2.71 ns)

 <State 163>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
