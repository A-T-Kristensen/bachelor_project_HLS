// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.869000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2510,HLS_SYN_LUT=3068}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        a_2_Addr_A,
        a_2_EN_A,
        a_2_WEN_A,
        a_2_Din_A,
        a_2_Dout_A,
        a_2_Clk_A,
        a_2_Rst_A,
        a_3_Addr_A,
        a_3_EN_A,
        a_3_WEN_A,
        a_3_Din_A,
        a_3_Dout_A,
        a_3_Clk_A,
        a_3_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 90'b1;
parameter    ap_ST_fsm_state2 = 90'b10;
parameter    ap_ST_fsm_state3 = 90'b100;
parameter    ap_ST_fsm_state4 = 90'b1000;
parameter    ap_ST_fsm_pp1_stage0 = 90'b10000;
parameter    ap_ST_fsm_state11 = 90'b100000;
parameter    ap_ST_fsm_state12 = 90'b1000000;
parameter    ap_ST_fsm_state13 = 90'b10000000;
parameter    ap_ST_fsm_state14 = 90'b100000000;
parameter    ap_ST_fsm_state15 = 90'b1000000000;
parameter    ap_ST_fsm_state16 = 90'b10000000000;
parameter    ap_ST_fsm_state17 = 90'b100000000000;
parameter    ap_ST_fsm_pp2_stage0 = 90'b1000000000000;
parameter    ap_ST_fsm_pp2_stage1 = 90'b10000000000000;
parameter    ap_ST_fsm_pp2_stage2 = 90'b100000000000000;
parameter    ap_ST_fsm_pp2_stage3 = 90'b1000000000000000;
parameter    ap_ST_fsm_pp2_stage4 = 90'b10000000000000000;
parameter    ap_ST_fsm_pp2_stage5 = 90'b100000000000000000;
parameter    ap_ST_fsm_state25 = 90'b1000000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 90'b10000000000000000000;
parameter    ap_ST_fsm_pp3_stage1 = 90'b100000000000000000000;
parameter    ap_ST_fsm_pp3_stage2 = 90'b1000000000000000000000;
parameter    ap_ST_fsm_pp3_stage3 = 90'b10000000000000000000000;
parameter    ap_ST_fsm_pp3_stage4 = 90'b100000000000000000000000;
parameter    ap_ST_fsm_pp3_stage5 = 90'b1000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage6 = 90'b10000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage7 = 90'b100000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage8 = 90'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage9 = 90'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage10 = 90'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage11 = 90'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage12 = 90'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage13 = 90'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage14 = 90'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage15 = 90'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage16 = 90'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 90'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 90'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 90'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 90'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 90'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 90'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 90'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 90'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 90'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 90'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 90'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 90'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 90'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage12 = 90'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage13 = 90'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage14 = 90'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage15 = 90'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage16 = 90'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 90'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 90'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 90'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 90'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 90'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 90'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 90'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 90'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 90'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 90'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 90'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 90'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 90'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 90'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 90'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage2 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage3 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage4 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage5 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage6 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage7 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage8 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage9 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage10 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage11 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage12 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage13 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage14 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage15 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage16 = 90'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage17 = 90'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state100 = 90'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] a_2_Addr_A;
output   a_2_EN_A;
output  [3:0] a_2_WEN_A;
output  [31:0] a_2_Din_A;
input  [31:0] a_2_Dout_A;
output   a_2_Clk_A;
output   a_2_Rst_A;
output  [31:0] a_3_Addr_A;
output   a_3_EN_A;
output  [3:0] a_3_WEN_A;
output  [31:0] a_3_Din_A;
input  [31:0] a_3_Dout_A;
output   a_3_Clk_A;
output   a_3_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] a_0_Addr_A;
reg a_0_EN_A;
reg[3:0] a_0_WEN_A;
reg[31:0] a_0_Din_A;
reg[31:0] a_1_Addr_A;
reg a_1_EN_A;
reg[3:0] a_1_WEN_A;
reg[31:0] a_1_Din_A;
reg[31:0] a_2_Addr_A;
reg a_2_EN_A;
reg[3:0] a_2_WEN_A;
reg[31:0] a_2_Din_A;
reg[31:0] a_3_Addr_A;
reg a_3_EN_A;
reg[3:0] a_3_WEN_A;
reg[31:0] a_3_Din_A;

(* fsm_encoding = "none" *) reg   [89:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_346;
reg   [31:0] r_1_reg_358;
reg   [31:0] ap_pipeline_reg_pp1_iter1_r_1_reg_358;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [31:0] ap_pipeline_reg_pp1_iter2_r_1_reg_358;
reg   [31:0] ap_pipeline_reg_pp1_iter3_r_1_reg_358;
reg   [31:0] ap_pipeline_reg_pp1_iter4_r_1_reg_358;
reg   [2:0] j_reg_368;
reg   [2:0] i_2_reg_379;
reg   [2:0] i_3_reg_390;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
reg   [31:0] reg_471;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] exitcond6_reg_1079;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079;
wire   [0:0] ap_CS_fsm_state12;
wire   [2:0] work_q0;
reg   [2:0] reg_477;
wire   [0:0] ap_CS_fsm_state16;
wire   [2:0] work_q1;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] reg_484;
wire   [0:0] ap_CS_fsm_pp2_stage2;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] exitcond5_reg_1183;
wire   [0:0] ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
reg   [0:0] exitcond4_reg_1217;
wire   [0:0] ap_CS_fsm_pp4_stage2;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond3_reg_1247;
reg   [0:0] tmp_14_reg_1256;
wire   [0:0] ap_CS_fsm_pp5_stage3;
reg   [0:0] tmp_8_reg_1368;
wire   [0:0] ap_CS_fsm_pp5_stage13;
reg   [31:0] reg_494;
wire   [0:0] ap_CS_fsm_pp2_stage4;
wire   [0:0] ap_CS_fsm_pp5_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage9;
wire   [0:0] ap_CS_fsm_pp5_stage17;
wire   [31:0] grp_fu_429_p2;
reg   [31:0] reg_502;
wire   [0:0] ap_CS_fsm_pp4_stage12;
reg   [0:0] tmp_58_reg_1260;
reg   [0:0] tmp_27_reg_1231;
wire   [0:0] ap_CS_fsm_pp4_stage13;
reg   [0:0] tmp_20_1_reg_1235;
wire   [0:0] ap_CS_fsm_pp4_stage14;
reg   [0:0] tmp_20_2_reg_1239;
wire   [0:0] ap_CS_fsm_pp4_stage15;
reg   [0:0] tmp_20_3_reg_1243;
wire   [2:0] i_1_fu_516_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_532_p3;
reg   [0:0] tmp_2_reg_1045;
wire   [0:0] ap_CS_fsm_state4;
wire   [2:0] k_fu_540_p2;
reg   [2:0] k_reg_1049;
wire   [31:0] i_5_cast6_fu_546_p1;
reg   [31:0] i_5_cast6_reg_1054;
wire   [63:0] tmp_3_fu_550_p1;
reg   [63:0] tmp_3_reg_1061;
wire   [1:0] tmp_9_fu_554_p1;
reg   [1:0] tmp_9_reg_1074;
wire   [0:0] exitcond6_fu_558_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter2_exitcond6_reg_1079;
reg   [0:0] ap_pipeline_reg_pp1_iter3_exitcond6_reg_1079;
reg   [0:0] ap_pipeline_reg_pp1_iter4_exitcond6_reg_1079;
wire   [31:0] i_6_fu_564_p2;
reg   [31:0] i_6_reg_1083;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] w_3_fu_622_p3;
reg   [31:0] w_3_reg_1088;
reg   [31:0] ap_pipeline_reg_pp1_iter4_w_3_reg_1088;
wire   [0:0] tmp_53_fu_707_p2;
reg   [0:0] tmp_53_reg_1095;
wire   [31:0] wmax_1_fu_713_p3;
reg    ap_enable_reg_pp1_iter5;
reg   [31:0] r_load_reg_1106;
wire   [0:0] ap_CS_fsm_state11;
wire   [31:0] api_fu_783_p3;
reg   [31:0] api_reg_1113;
wire   [0:0] ap_CS_fsm_state13;
wire   [63:0] tmp_5_fu_448_p1;
reg   [63:0] tmp_5_reg_1118;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_1_fu_840_p2;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] tmp_39_fu_834_p2;
reg   [8:0] work_addr_3_reg_1131;
reg   [8:0] work_addr_4_reg_1137;
reg   [1:0] a_0_addr_2_reg_1143;
reg   [1:0] a_1_addr_2_reg_1148;
reg   [1:0] a_2_addr_2_reg_1153;
reg   [1:0] a_3_addr_2_reg_1158;
reg   [1:0] a_0_addr_1_reg_1163;
wire   [0:0] ap_CS_fsm_state17;
reg   [1:0] a_1_addr_1_reg_1168;
reg   [1:0] a_2_addr_1_reg_1173;
reg   [1:0] a_3_addr_1_reg_1178;
wire   [0:0] exitcond5_fu_844_p2;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [2:0] j_1_fu_850_p2;
reg   [2:0] j_1_reg_1187;
wire   [1:0] tmp_61_fu_856_p1;
reg   [1:0] tmp_61_reg_1192;
reg   [1:0] a_0_addr_3_reg_1197;
wire   [0:0] ap_CS_fsm_state25;
reg   [1:0] a_1_addr_3_reg_1202;
reg   [1:0] a_2_addr_3_reg_1207;
reg   [1:0] a_3_addr_3_reg_1212;
wire   [0:0] exitcond4_fu_860_p2;
wire   [0:0] ap_CS_fsm_pp3_stage0;
wire   [2:0] i_8_fu_866_p2;
reg   [2:0] i_8_reg_1221;
wire   [1:0] tmp_62_fu_872_p1;
reg   [1:0] tmp_62_reg_1226;
wire   [0:0] tmp_27_fu_876_p2;
wire   [0:0] ap_CS_fsm_state44;
wire   [0:0] tmp_20_1_fu_882_p2;
wire   [0:0] tmp_20_2_fu_888_p2;
wire   [0:0] tmp_20_3_fu_894_p2;
wire   [0:0] exitcond3_fu_900_p2;
wire   [0:0] ap_CS_fsm_pp4_stage0;
wire   [2:0] i_9_fu_906_p2;
reg   [2:0] i_9_reg_1251;
wire   [0:0] tmp_14_fu_912_p2;
wire   [0:0] tmp_58_fu_959_p2;
wire   [31:0] tmp_17_fu_971_p1;
reg   [1:0] a_0_addr_4_reg_1269;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg   [1:0] a_1_addr_4_reg_1274;
reg   [1:0] a_2_addr_4_reg_1279;
reg   [1:0] a_3_addr_4_reg_1284;
reg   [31:0] a_1_load_reg_1294;
reg   [31:0] a_2_load_reg_1299;
reg   [31:0] a_3_load_reg_1304;
reg   [31:0] a_0_load_1_reg_1309;
wire   [0:0] ap_CS_fsm_pp4_stage5;
reg   [31:0] a_1_load_1_reg_1314;
reg   [31:0] a_2_load_1_reg_1319;
reg   [31:0] a_3_load_1_reg_1324;
wire   [31:0] grp_fu_433_p2;
reg   [31:0] tmp_32_reg_1329;
wire   [0:0] ap_CS_fsm_pp4_stage7;
reg   [31:0] tmp_22_1_reg_1334;
wire   [0:0] ap_CS_fsm_pp4_stage8;
reg   [31:0] tmp_22_2_reg_1339;
wire   [0:0] ap_CS_fsm_pp4_stage9;
reg   [31:0] tmp_22_3_reg_1344;
wire   [0:0] ap_CS_fsm_pp4_stage10;
wire   [2:0] i_7_fu_990_p2;
reg   [2:0] i_7_reg_1352;
wire   [0:0] ap_CS_fsm_state79;
reg   [8:0] work_addr_1_reg_1357;
wire   [0:0] exitcond1_fu_984_p2;
wire   [1:0] tmp_36_fu_1001_p1;
reg   [1:0] tmp_36_reg_1363;
wire   [0:0] tmp_8_fu_1005_p2;
reg   [8:0] work_addr_2_reg_1372;
reg   [1:0] a_0_addr_reg_1378;
reg   [1:0] a_1_addr_reg_1383;
reg   [1:0] a_2_addr_reg_1388;
reg   [1:0] a_3_addr_reg_1393;
reg   [2:0] work_load_1_reg_1398;
wire   [0:0] ap_CS_fsm_pp5_stage2;
wire   [31:0] tmp_10_cast1_fu_1020_p1;
reg   [31:0] tmp_10_cast1_reg_1403;
wire   [1:0] tmp_60_fu_1025_p1;
reg   [1:0] tmp_60_reg_1408;
wire   [0:0] ap_CS_fsm_pp5_stage4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp2_iter1;
wire   [0:0] ap_CS_fsm_pp2_stage5;
reg    ap_enable_reg_pp3_iter1;
wire   [0:0] ap_CS_fsm_pp3_stage16;
reg    ap_enable_reg_pp4_iter1;
wire   [0:0] ap_CS_fsm_pp4_stage16;
reg    ap_enable_reg_pp5_iter1;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [2:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [2:0] work_d1;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_ap_start;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_ap_done;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_ap_idle;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_ap_ready;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_Addr_A;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_EN_A;
wire   [3:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_WEN_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_Din_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_Addr_A;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_EN_A;
wire   [3:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_WEN_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_Din_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_Addr_A;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_EN_A;
wire   [3:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_WEN_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_Din_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_Addr_A;
wire    grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_EN_A;
wire   [3:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_WEN_A;
wire   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_Din_A;
reg   [1:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty_11;
reg   [31:0] grp_aesl_mux_load_4_4_x_s_fu_414_empty;
reg   [2:0] i_reg_322;
wire   [0:0] exitcond7_fu_510_p2;
reg   [2:0] i_5_reg_334;
wire   [0:0] ap_CS_fsm_state78;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] wmax_phi_fu_350_p4;
reg   [31:0] r_1_phi_fu_361_p4;
reg   [2:0] j_phi_fu_372_p4;
reg   [2:0] i_2_phi_fu_383_p4;
reg   [2:0] i_3_phi_fu_394_p4;
reg   [2:0] i_4_reg_402;
wire   [0:0] ap_CS_fsm_state100;
reg    ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start;
reg   [89:0] ap_NS_fsm;
wire   [0:0] ap_NS_fsm_state11;
wire   [0:0] ap_CS_fsm_pp5_stage7;
wire   [0:0] ap_CS_fsm_pp5_stage11;
wire   [0:0] ap_CS_fsm_pp5_stage15;
wire   [0:0] ap_CS_fsm_pp2_stage1;
wire   [0:0] ap_CS_fsm_pp2_stage3;
wire   [0:0] ap_CS_fsm_pp3_stage1;
wire   [0:0] ap_CS_fsm_pp4_stage1;
wire   [0:0] ap_CS_fsm_pp5_stage8;
wire   [0:0] ap_CS_fsm_pp5_stage12;
wire   [0:0] ap_CS_fsm_pp5_stage16;
wire   [31:0] tmp_15_cast_fu_918_p1;
wire   [63:0] tmp_fu_522_p1;
wire  signed [63:0] tmp_4_fu_791_p1;
wire   [63:0] tmp_15_fu_976_p1;
wire   [63:0] tmp_s_fu_996_p1;
wire   [63:0] tmp_10_fu_1011_p1;
reg   [31:0] r_fu_116;
wire   [31:0] r_2_fu_719_p3;
wire   [0:0] ap_CS_fsm_pp5_stage0;
reg   [31:0] a_2_Addr_A_orig;
wire   [31:0] grp_fu_438_p2;
wire   [0:0] ap_CS_fsm_pp4_stage3;
wire   [0:0] ap_CS_fsm_pp5_stage6;
wire   [0:0] ap_CS_fsm_pp5_stage10;
wire   [0:0] ap_CS_fsm_pp5_stage14;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_3_Addr_A_orig;
reg   [31:0] grp_fu_429_p0;
reg   [31:0] grp_fu_429_p1;
wire   [0:0] ap_CS_fsm_pp4_stage11;
reg   [31:0] grp_fu_433_p1;
wire   [0:0] ap_CS_fsm_pp4_stage6;
reg   [31:0] grp_fu_438_p0;
wire   [0:0] ap_CS_fsm_state63;
reg   [31:0] grp_fu_451_p0;
wire   [31:0] n_assign_1_to_int_fu_570_p1;
wire   [7:0] tmp_40_fu_574_p4;
wire   [22:0] tmp_48_fu_584_p1;
wire   [0:0] notrhs_fu_594_p2;
wire   [0:0] notlhs_fu_588_p2;
wire   [0:0] tmp_42_fu_600_p2;
wire   [0:0] grp_fu_451_p2;
wire   [31:0] f_neg_i_fu_612_p2;
wire   [0:0] tmp_44_fu_606_p2;
wire   [31:0] f_1_fu_618_p1;
wire   [31:0] w_3_to_int_fu_630_p1;
wire   [31:0] wmax_to_int_fu_647_p1;
wire   [7:0] tmp_45_fu_633_p4;
wire   [22:0] tmp_55_fu_643_p1;
wire   [0:0] notrhs3_fu_671_p2;
wire   [0:0] notlhs3_fu_665_p2;
wire   [7:0] tmp_47_fu_651_p4;
wire   [22:0] tmp_59_fu_661_p1;
wire   [0:0] notrhs4_fu_689_p2;
wire   [0:0] notlhs4_fu_683_p2;
wire   [0:0] tmp_49_fu_677_p2;
wire   [0:0] tmp_50_fu_695_p2;
wire   [0:0] tmp_51_fu_701_p2;
wire   [0:0] tmp_52_fu_456_p2;
wire   [31:0] pivot_to_int_fu_731_p1;
wire   [7:0] tmp_7_fu_735_p4;
wire   [22:0] tmp_41_fu_745_p1;
wire   [0:0] notrhs1_fu_755_p2;
wire   [0:0] notlhs1_fu_749_p2;
wire   [0:0] tmp_11_fu_761_p2;
wire   [31:0] f_neg_i1_fu_773_p2;
wire   [0:0] tmp_20_fu_767_p2;
wire   [31:0] f_fu_779_p1;
wire   [63:0] tmp_5_to_int_fu_799_p1;
wire   [10:0] tmp_35_fu_802_p4;
wire   [51:0] tmp_46_fu_812_p1;
wire   [0:0] notrhs2_fu_822_p2;
wire   [0:0] notlhs2_fu_816_p2;
wire   [0:0] tmp_37_fu_828_p2;
wire   [0:0] tmp_38_fu_462_p2;
wire   [31:0] w_1_to_int_fu_923_p1;
wire   [7:0] tmp_54_fu_927_p4;
wire   [22:0] tmp_63_fu_937_p1;
wire   [0:0] notrhs5_fu_947_p2;
wire   [0:0] notlhs5_fu_941_p2;
wire   [0:0] tmp_56_fu_953_p2;
wire   [31:0] tmp_18_neg_fu_965_p2;
reg   [4:0] grp_fu_451_opcode;

// power-on initialization
initial begin
#0 ap_CS_fsm = 90'b1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 3 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

aesl_mux_load_4_4_x_s grp_aesl_mux_load_4_4_x_s_fu_414(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aesl_mux_load_4_4_x_s_fu_414_ap_start),
    .ap_done(grp_aesl_mux_load_4_4_x_s_fu_414_ap_done),
    .ap_idle(grp_aesl_mux_load_4_4_x_s_fu_414_ap_idle),
    .ap_ready(grp_aesl_mux_load_4_4_x_s_fu_414_ap_ready),
    .ap_ce(1'b1),
    .empty_7_Addr_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_Addr_A),
    .empty_7_EN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_EN_A),
    .empty_7_WEN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_WEN_A),
    .empty_7_Din_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_Din_A),
    .empty_7_Dout_A(a_0_Dout_A),
    .empty_8_Addr_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_Addr_A),
    .empty_8_EN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_EN_A),
    .empty_8_WEN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_WEN_A),
    .empty_8_Din_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_Din_A),
    .empty_8_Dout_A(a_1_Dout_A),
    .empty_9_Addr_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_Addr_A),
    .empty_9_EN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_EN_A),
    .empty_9_WEN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_WEN_A),
    .empty_9_Din_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_Din_A),
    .empty_9_Dout_A(a_2_Dout_A),
    .empty_10_Addr_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_Addr_A),
    .empty_10_EN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_EN_A),
    .empty_10_WEN_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_WEN_A),
    .empty_10_Din_A(grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_Din_A),
    .empty_10_Dout_A(a_3_Dout_A),
    .empty_11(grp_aesl_mux_load_4_4_x_s_fu_414_empty_11),
    .empty(grp_aesl_mux_load_4_4_x_s_fu_414_empty),
    .ap_return(grp_aesl_mux_load_4_4_x_s_fu_414_ap_return)
);

minver_hwa_fsub_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3ncg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .ce(1'b1),
    .dout(grp_fu_429_p2)
);

minver_hwa_fmul_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3ocq_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_484),
    .din1(grp_fu_433_p1),
    .ce(1'b1),
    .dout(grp_fu_433_p2)
);

minver_hwa_fdiv_3pcA #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3pcA_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_438_p0),
    .din1(reg_471),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

minver_hwa_fpext_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_qcK_U6(
    .din0(api_reg_1113),
    .dout(tmp_5_fu_448_p1)
);

minver_hwa_fcmp_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3rcU_U7(
    .din0(grp_fu_451_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_451_opcode),
    .dout(grp_fu_451_p2)
);

minver_hwa_fcmp_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3rcU_U8(
    .din0(w_3_reg_1088),
    .din1(wmax_phi_fu_350_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_52_fu_456_p2)
);

minver_hwa_dcmp_6sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6sc4_U9(
    .din0(tmp_5_reg_1118),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_38_fu_462_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_558_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_532_p3))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_558_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_532_p3)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_558_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond5_fu_844_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_pp2_stage5) & ~(1'b0 == exitcond5_reg_1183)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond4_fu_860_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage16))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_CS_fsm_pp3_stage16) & ~(1'b0 == exitcond4_reg_1217)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_900_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1247) & (1'b1 == ap_CS_fsm_pp4_stage16))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_pp4_stage16) & ~(1'b0 == exitcond3_reg_1247)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == tmp_8_fu_1005_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state79) & (1'b0 == exitcond1_fu_984_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state79) & (1'b0 == exitcond1_fu_984_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage17) & ~(1'b0 == tmp_8_reg_1368)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond6_fu_558_p2)) | ((1'b1 == ap_NS_fsm_state11) & (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_enable_reg_pp1_iter5))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond5_fu_844_p2)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_860_p2)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_900_p2) & (1'b0 == tmp_14_fu_912_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_fu_1005_p2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage15)))) begin
            ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start <= 1'b1;
        end else if ((1'b1 == grp_aesl_mux_load_4_4_x_s_fu_414_ap_ready)) begin
            ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_reg_379 <= i_8_reg_1221;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_2_reg_379 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        i_3_reg_390 <= ap_const_lv3_0;
    end else if (((1'b0 == exitcond3_reg_1247) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_reg_390 <= i_9_reg_1251;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_532_p3))) begin
        i_4_reg_402 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        i_4_reg_402 <= i_7_reg_1352;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_334 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        i_5_reg_334 <= k_reg_1049;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_510_p2))) begin
        i_reg_322 <= i_1_fu_516_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_322 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        j_reg_368 <= j_1_reg_1187;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        j_reg_368 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_532_p3))) begin
        r_1_reg_358 <= i_5_cast6_fu_546_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0))) begin
        r_1_reg_358 <= i_6_reg_1083;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_pipeline_reg_pp1_iter4_exitcond6_reg_1079))) begin
        r_fu_116 <= r_2_fu_719_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_fu_116 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        reg_477 <= work_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_477 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_532_p3))) begin
        wmax_reg_346 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_pipeline_reg_pp1_iter4_exitcond6_reg_1079))) begin
        wmax_reg_346 <= wmax_1_fu_713_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        a_0_addr_1_reg_1163 <= tmp_3_reg_1061;
        a_1_addr_1_reg_1168 <= tmp_3_reg_1061;
        a_2_addr_1_reg_1173 <= tmp_3_reg_1061;
        a_3_addr_1_reg_1178 <= tmp_3_reg_1061;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == tmp_2_reg_1045) & (1'b0 == tmp_39_fu_834_p2) & (1'b0 == tmp_1_fu_840_p2))) begin
        a_0_addr_2_reg_1143 <= tmp_4_fu_791_p1;
        a_1_addr_2_reg_1148 <= tmp_4_fu_791_p1;
        a_2_addr_2_reg_1153 <= tmp_4_fu_791_p1;
        a_3_addr_2_reg_1158 <= tmp_4_fu_791_p1;
        work_addr_3_reg_1131[2 : 0] <= tmp_3_reg_1061[2 : 0];
        work_addr_4_reg_1137 <= tmp_4_fu_791_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        a_0_addr_3_reg_1197 <= tmp_3_reg_1061;
        a_1_addr_3_reg_1202 <= tmp_3_reg_1061;
        a_2_addr_3_reg_1207 <= tmp_3_reg_1061;
        a_3_addr_3_reg_1212 <= tmp_3_reg_1061;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_0_addr_4_reg_1269 <= tmp_15_fu_976_p1;
        a_1_addr_4_reg_1274 <= tmp_15_fu_976_p1;
        a_2_addr_4_reg_1279 <= tmp_15_fu_976_p1;
        a_3_addr_4_reg_1284 <= tmp_15_fu_976_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == tmp_8_fu_1005_p2))) begin
        a_0_addr_reg_1378 <= tmp_10_fu_1011_p1;
        a_1_addr_reg_1383 <= tmp_10_fu_1011_p1;
        a_2_addr_reg_1388 <= tmp_10_fu_1011_p1;
        a_3_addr_reg_1393 <= tmp_10_fu_1011_p1;
        work_addr_2_reg_1372[2 : 0] <= tmp_10_fu_1011_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_27_reg_1231) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_0_load_1_reg_1309 <= a_0_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_1_reg_1235) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_1_load_1_reg_1314 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_1_reg_1235) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_1_load_reg_1294 <= a_1_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_2_reg_1239) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_2_load_1_reg_1319 <= a_2_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_2_reg_1239) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_2_load_reg_1299 <= a_2_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_3_reg_1243) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_3_load_1_reg_1324 <= a_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_3_reg_1243) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_3_load_reg_1304 <= a_3_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 <= exitcond6_reg_1079;
        ap_pipeline_reg_pp1_iter1_r_1_reg_358 <= r_1_reg_358;
        exitcond6_reg_1079 <= exitcond6_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp1_iter2_exitcond6_reg_1079 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079;
        ap_pipeline_reg_pp1_iter2_r_1_reg_358 <= ap_pipeline_reg_pp1_iter1_r_1_reg_358;
        ap_pipeline_reg_pp1_iter3_exitcond6_reg_1079 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1079;
        ap_pipeline_reg_pp1_iter3_r_1_reg_358 <= ap_pipeline_reg_pp1_iter2_r_1_reg_358;
        ap_pipeline_reg_pp1_iter4_exitcond6_reg_1079 <= ap_pipeline_reg_pp1_iter3_exitcond6_reg_1079;
        ap_pipeline_reg_pp1_iter4_r_1_reg_358 <= ap_pipeline_reg_pp1_iter3_r_1_reg_358;
        ap_pipeline_reg_pp1_iter4_w_3_reg_1088 <= w_3_reg_1088;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        api_reg_1113 <= api_fu_783_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        exitcond3_reg_1247 <= exitcond3_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        exitcond4_reg_1217 <= exitcond4_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        exitcond5_reg_1183 <= exitcond5_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_532_p3))) begin
        i_5_cast6_reg_1054[2 : 0] <= i_5_cast6_fu_546_p1[2 : 0];
        tmp_3_reg_1061[2 : 0] <= tmp_3_fu_550_p1[2 : 0];
        tmp_9_reg_1074 <= tmp_9_fu_554_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond6_fu_558_p2))) begin
        i_6_reg_1083 <= i_6_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_7_reg_1352 <= i_7_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_8_reg_1221 <= i_8_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_1251 <= i_9_fu_906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_1_reg_1187 <= j_1_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_1049 <= k_fu_540_p2;
        tmp_2_reg_1045 <= i_5_reg_334[ap_const_lv32_2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_load_reg_1106 <= r_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_471 <= grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)))) begin
        reg_484 <= grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)))) begin
        reg_494 <= grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_27_reg_1231)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == tmp_20_1_reg_1235)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == tmp_20_2_reg_1239)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == tmp_20_3_reg_1243)))) begin
        reg_502 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        tmp_10_cast1_reg_1403[2 : 0] <= tmp_10_cast1_fu_1020_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_900_p2))) begin
        tmp_14_reg_1256 <= tmp_14_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_20_1_reg_1235 <= tmp_20_1_fu_882_p2;
        tmp_20_2_reg_1239 <= tmp_20_2_fu_888_p2;
        tmp_20_3_reg_1243 <= tmp_20_3_fu_894_p2;
        tmp_27_reg_1231 <= tmp_27_fu_876_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_1_reg_1235) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_22_1_reg_1334 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_2_reg_1239) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        tmp_22_2_reg_1339 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_3_reg_1243) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        tmp_22_3_reg_1344 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_27_reg_1231) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        tmp_32_reg_1329 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'b0 == exitcond1_fu_984_p2))) begin
        tmp_36_reg_1363 <= tmp_36_fu_1001_p1;
        work_addr_1_reg_1357[2 : 0] <= tmp_s_fu_996_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1079)) begin
        tmp_53_reg_1095 <= tmp_53_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256))) begin
        tmp_58_reg_1260 <= tmp_58_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_5_reg_1118 <= tmp_5_fu_448_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4))) begin
        tmp_60_reg_1408 <= tmp_60_fu_1025_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond5_fu_844_p2))) begin
        tmp_61_reg_1192 <= tmp_61_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_860_p2))) begin
        tmp_62_reg_1226 <= tmp_62_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
        tmp_8_reg_1368 <= tmp_8_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1079)) begin
        w_3_reg_1088 <= w_3_fu_622_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_load_1_reg_1398 <= work_q0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_0_Addr_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_Addr_A;
    end else begin
        a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Addr_A_orig = a_0_addr_reg_1378;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_0_Addr_A_orig = a_0_addr_4_reg_1269;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_0_Addr_A_orig = tmp_15_fu_976_p1;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        a_0_Addr_A_orig = a_0_addr_3_reg_1197;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        a_0_Addr_A_orig = a_0_addr_2_reg_1143;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        a_0_Addr_A_orig = a_0_addr_1_reg_1163;
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13))) begin
        a_0_Din_A = reg_502;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_0_Din_A = grp_fu_438_p2;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Din_A = reg_484;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_Din_A = reg_494;
    end else begin
        a_0_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | (1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_0_EN_A = 1'b1;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_0_EN_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_7_EN_A;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage5) & (tmp_61_reg_1192 == ap_const_lv2_0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (tmp_61_reg_1192 == ap_const_lv2_0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (tmp_62_reg_1226 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_27_reg_1231) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (tmp_9_reg_1074 == ap_const_lv2_0)) | ((1'b1 == ap_CS_fsm_state78) & (tmp_9_reg_1074 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage6) & (tmp_36_reg_1363 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage7) & (tmp_60_reg_1408 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage10) & (tmp_36_reg_1363 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage11) & (tmp_60_reg_1408 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage14) & (tmp_36_reg_1363 == ap_const_lv2_0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage15) & (tmp_60_reg_1408 == ap_const_lv2_0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_36_reg_1363 == ap_const_lv2_0)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_60_reg_1408 == ap_const_lv2_0)))) begin
        a_0_WEN_A = ap_const_lv4_F;
    end else begin
        a_0_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_1_Addr_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_Addr_A;
    end else begin
        a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Addr_A_orig = a_1_addr_reg_1383;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_1_Addr_A_orig = a_1_addr_4_reg_1274;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_1_Addr_A_orig = tmp_15_fu_976_p1;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        a_1_Addr_A_orig = a_1_addr_3_reg_1202;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        a_1_Addr_A_orig = a_1_addr_2_reg_1148;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        a_1_Addr_A_orig = a_1_addr_1_reg_1168;
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14))) begin
        a_1_Din_A = reg_502;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_1_Din_A = grp_fu_438_p2;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Din_A = reg_484;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_Din_A = reg_494;
    end else begin
        a_1_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | (1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_1_EN_A = 1'b1;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_1_EN_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_8_EN_A;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage5) & (tmp_61_reg_1192 == ap_const_lv2_1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (tmp_61_reg_1192 == ap_const_lv2_1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (tmp_62_reg_1226 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_1_reg_1235) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (tmp_9_reg_1074 == ap_const_lv2_1)) | ((1'b1 == ap_CS_fsm_state78) & (tmp_9_reg_1074 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage6) & (tmp_36_reg_1363 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage7) & (tmp_60_reg_1408 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage10) & (tmp_36_reg_1363 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage11) & (tmp_60_reg_1408 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage14) & (tmp_36_reg_1363 == ap_const_lv2_1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage15) & (tmp_60_reg_1408 == ap_const_lv2_1)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_36_reg_1363 == ap_const_lv2_1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_60_reg_1408 == ap_const_lv2_1)))) begin
        a_1_WEN_A = ap_const_lv4_F;
    end else begin
        a_1_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_2_Addr_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_Addr_A;
    end else begin
        a_2_Addr_A = a_2_Addr_A_orig << ap_const_lv32_2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_2_Addr_A_orig = a_2_addr_reg_1388;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_2_Addr_A_orig = a_2_addr_4_reg_1279;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_2_Addr_A_orig = tmp_15_fu_976_p1;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        a_2_Addr_A_orig = a_2_addr_3_reg_1207;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        a_2_Addr_A_orig = a_2_addr_2_reg_1153;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        a_2_Addr_A_orig = a_2_addr_1_reg_1173;
    end else begin
        a_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15))) begin
        a_2_Din_A = reg_502;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_2_Din_A = grp_fu_438_p2;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_2_Din_A = reg_484;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_2_Din_A = reg_494;
    end else begin
        a_2_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | (1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_2_EN_A = 1'b1;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_2_EN_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_9_EN_A;
    end else begin
        a_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage5) & (tmp_61_reg_1192 == ap_const_lv2_2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (tmp_61_reg_1192 == ap_const_lv2_2)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (tmp_62_reg_1226 == ap_const_lv2_2)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_2_reg_1239) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (tmp_9_reg_1074 == ap_const_lv2_2)) | ((1'b1 == ap_CS_fsm_state78) & (tmp_9_reg_1074 == ap_const_lv2_2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage6) & (tmp_36_reg_1363 == ap_const_lv2_2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage7) & (tmp_60_reg_1408 == ap_const_lv2_2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (tmp_36_reg_1363 == ap_const_lv2_2) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage11) & (tmp_60_reg_1408 == ap_const_lv2_2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (tmp_36_reg_1363 == ap_const_lv2_2) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage15) & (tmp_60_reg_1408 == ap_const_lv2_2)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (tmp_36_reg_1363 == ap_const_lv2_2) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (tmp_60_reg_1408 == ap_const_lv2_2) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_2_WEN_A = ap_const_lv4_F;
    end else begin
        a_2_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_3_Addr_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_Addr_A;
    end else begin
        a_3_Addr_A = a_3_Addr_A_orig << ap_const_lv32_2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_3_Addr_A_orig = a_3_addr_reg_1393;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage16)))) begin
        a_3_Addr_A_orig = a_3_addr_4_reg_1284;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_3_Addr_A_orig = tmp_15_fu_976_p1;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        a_3_Addr_A_orig = a_3_addr_3_reg_1212;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        a_3_Addr_A_orig = a_3_addr_2_reg_1158;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5))) begin
        a_3_Addr_A_orig = a_3_addr_1_reg_1178;
    end else begin
        a_3_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage16))) begin
        a_3_Din_A = reg_502;
    end else if (((1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_3_Din_A = grp_fu_438_p2;
    end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_3_Din_A = reg_484;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_3_Din_A = reg_494;
    end else begin
        a_3_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | (1'b1 == ap_CS_fsm_state78) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage15)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage14)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage16)))) begin
        a_3_EN_A = 1'b1;
    end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_pipeline_reg_pp1_iter1_exitcond6_reg_1079 == 1'b0)) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage13)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage17)) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        a_3_EN_A = grp_aesl_mux_load_4_4_x_s_fu_414_empty_10_EN_A;
    end else begin
        a_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage5) & (tmp_61_reg_1192 == ap_const_lv2_3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (tmp_61_reg_1192 == ap_const_lv2_3)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (tmp_62_reg_1226 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b0 == tmp_20_3_reg_1243) & (1'b1 == ap_CS_fsm_pp4_stage16)) | ((1'b0 == tmp_14_reg_1256) & (1'b0 == tmp_58_reg_1260) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1) & (tmp_9_reg_1074 == ap_const_lv2_3)) | ((1'b1 == ap_CS_fsm_state78) & (tmp_9_reg_1074 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage6) & (tmp_36_reg_1363 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage7) & (tmp_60_reg_1408 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage10) & (tmp_36_reg_1363 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage11) & (tmp_60_reg_1408 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage14) & (tmp_36_reg_1363 == ap_const_lv2_3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage15) & (tmp_60_reg_1408 == ap_const_lv2_3)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_36_reg_1363 == ap_const_lv2_3)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter1) & (tmp_60_reg_1408 == ap_const_lv2_3)))) begin
        a_3_WEN_A = ap_const_lv4_F;
    end else begin
        a_3_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (~(1'b0 == tmp_2_reg_1045) | ~(1'b0 == tmp_39_fu_834_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (~(1'b0 == tmp_2_reg_1045) | ~(1'b0 == tmp_39_fu_834_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = tmp_10_cast1_reg_1403;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = tmp_10_cast1_fu_1020_p1;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = tmp_15_cast_fu_918_p1;
    end else if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = i_5_cast6_reg_1054;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = r_fu_116;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = r_1_reg_358;
    end else begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage4))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = tmp_60_fu_1025_p1;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage16)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = tmp_36_reg_1363;
    end else if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = tmp_62_reg_1226;
    end else if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = tmp_61_reg_1192;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = tmp_9_reg_1074;
    end else begin
        grp_aesl_mux_load_4_4_x_s_fu_414_empty_11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage11)) begin
            grp_fu_429_p0 = a_3_load_1_reg_1324;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage10)) begin
            grp_fu_429_p0 = a_2_load_1_reg_1319;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_429_p0 = a_1_load_1_reg_1314;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_429_p0 = a_0_load_1_reg_1309;
        end else begin
            grp_fu_429_p0 = 'bx;
        end
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage11)) begin
            grp_fu_429_p1 = tmp_22_3_reg_1344;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage10)) begin
            grp_fu_429_p1 = tmp_22_2_reg_1339;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_429_p1 = tmp_22_1_reg_1334;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_429_p1 = tmp_32_reg_1329;
        end else begin
            grp_fu_429_p1 = 'bx;
        end
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage7)) begin
            grp_fu_433_p1 = a_3_load_reg_1304;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage6)) begin
            grp_fu_433_p1 = a_2_load_reg_1299;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage5)) begin
            grp_fu_433_p1 = a_1_load_reg_1294;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage4)) begin
            grp_fu_433_p1 = a_0_Dout_A;
        end else begin
            grp_fu_433_p1 = 'bx;
        end
    end else begin
        grp_fu_433_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_438_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        grp_fu_438_p0 = tmp_17_fu_971_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        grp_fu_438_p0 = grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1247) & (1'b0 == tmp_14_reg_1256))) begin
        grp_fu_451_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1079) & (1'b1 == ap_enable_reg_pp1_iter3)))) begin
        grp_fu_451_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_451_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        grp_fu_451_p0 = grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_enable_reg_pp1_iter3))) begin
        grp_fu_451_p0 = reg_471;
    end else begin
        grp_fu_451_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond4_reg_1217) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_phi_fu_383_p4 = i_8_reg_1221;
    end else begin
        i_2_phi_fu_383_p4 = i_2_reg_379;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond3_reg_1247) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_phi_fu_394_p4 = i_9_reg_1251;
    end else begin
        i_3_phi_fu_394_p4 = i_3_reg_390;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond5_reg_1183) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        j_phi_fu_372_p4 = j_1_reg_1187;
    end else begin
        j_phi_fu_372_p4 = j_reg_368;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1079 == 1'b0))) begin
        r_1_phi_fu_361_p4 = i_6_reg_1083;
    end else begin
        r_1_phi_fu_361_p4 = r_1_reg_358;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter5) & (1'b0 == ap_pipeline_reg_pp1_iter4_exitcond6_reg_1079))) begin
        wmax_phi_fu_350_p4 = wmax_1_fu_713_p3;
    end else begin
        wmax_phi_fu_350_p4 = wmax_reg_346;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_address0 = work_addr_1_reg_1357;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        work_address0 = tmp_10_fu_1011_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        work_address0 = work_addr_4_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address0 = tmp_3_reg_1061;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_522_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_address1 = work_addr_2_reg_1372;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        work_address1 = work_addr_1_reg_1357;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_address1 = work_addr_3_reg_1131;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address1 = tmp_4_fu_791_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_d0 = work_load_1_reg_1398;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        work_d0 = reg_477;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_322;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_d1 = reg_477;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == tmp_8_reg_1368)) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_510_p2)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1368) & (1'b1 == ap_CS_fsm_pp5_stage2)))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond7_fu_510_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == tmp_2_fu_532_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter5) & ~(1'b1 == ap_enable_reg_pp1_iter4)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_558_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_558_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if ((~(1'b0 == tmp_2_reg_1045) | ~(1'b0 == tmp_39_fu_834_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1045) & (1'b0 == tmp_39_fu_834_p2) & ~(1'b0 == tmp_1_fu_840_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond5_fu_844_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage2;
        end
        ap_ST_fsm_pp2_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage3;
        end
        ap_ST_fsm_pp2_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage4;
        end
        ap_ST_fsm_pp2_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage5;
        end
        ap_ST_fsm_pp2_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond4_fu_860_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage2;
        end
        ap_ST_fsm_pp3_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage3;
        end
        ap_ST_fsm_pp3_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage4;
        end
        ap_ST_fsm_pp3_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage5;
        end
        ap_ST_fsm_pp3_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage6;
        end
        ap_ST_fsm_pp3_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage7;
        end
        ap_ST_fsm_pp3_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage8;
        end
        ap_ST_fsm_pp3_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage9;
        end
        ap_ST_fsm_pp3_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage10;
        end
        ap_ST_fsm_pp3_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage11;
        end
        ap_ST_fsm_pp3_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage12;
        end
        ap_ST_fsm_pp3_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage13;
        end
        ap_ST_fsm_pp3_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage14;
        end
        ap_ST_fsm_pp3_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage15;
        end
        ap_ST_fsm_pp3_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage16;
        end
        ap_ST_fsm_pp3_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_900_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage7;
        end
        ap_ST_fsm_pp4_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage8;
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage11;
        end
        ap_ST_fsm_pp4_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage12;
        end
        ap_ST_fsm_pp4_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage13;
        end
        ap_ST_fsm_pp4_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage14;
        end
        ap_ST_fsm_pp4_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage15;
        end
        ap_ST_fsm_pp4_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage16;
        end
        ap_ST_fsm_pp4_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state79 : begin
            if (~(1'b0 == exitcond1_fu_984_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage1;
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == tmp_8_fu_1005_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage3;
        end
        ap_ST_fsm_pp5_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage4;
        end
        ap_ST_fsm_pp5_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage5;
        end
        ap_ST_fsm_pp5_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage6;
        end
        ap_ST_fsm_pp5_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage7;
        end
        ap_ST_fsm_pp5_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage8;
        end
        ap_ST_fsm_pp5_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage9;
        end
        ap_ST_fsm_pp5_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage10;
        end
        ap_ST_fsm_pp5_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage11;
        end
        ap_ST_fsm_pp5_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage12;
        end
        ap_ST_fsm_pp5_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage13;
        end
        ap_ST_fsm_pp5_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage14;
        end
        ap_ST_fsm_pp5_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage15;
        end
        ap_ST_fsm_pp5_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage16;
        end
        ap_ST_fsm_pp5_stage16 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage17;
        end
        ap_ST_fsm_pp5_stage17 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Clk_A = ap_clk;

assign a_0_Rst_A = ap_rst;

assign a_1_Clk_A = ap_clk;

assign a_1_Rst_A = ap_rst;

assign a_2_Clk_A = ap_clk;

assign a_2_Rst_A = ap_rst;

assign a_3_Clk_A = ap_clk;

assign a_3_Rst_A = ap_rst;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp3_stage16 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[ap_const_lv32_2F];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_30];

assign ap_CS_fsm_pp4_stage12 = ap_CS_fsm[ap_const_lv32_31];

assign ap_CS_fsm_pp4_stage13 = ap_CS_fsm[ap_const_lv32_32];

assign ap_CS_fsm_pp4_stage14 = ap_CS_fsm[ap_const_lv32_33];

assign ap_CS_fsm_pp4_stage15 = ap_CS_fsm[ap_const_lv32_34];

assign ap_CS_fsm_pp4_stage16 = ap_CS_fsm[ap_const_lv32_35];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_2B];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[ap_const_lv32_2D];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[ap_const_lv32_2E];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_47];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_48];

assign ap_CS_fsm_pp5_stage10 = ap_CS_fsm[ap_const_lv32_51];

assign ap_CS_fsm_pp5_stage11 = ap_CS_fsm[ap_const_lv32_52];

assign ap_CS_fsm_pp5_stage12 = ap_CS_fsm[ap_const_lv32_53];

assign ap_CS_fsm_pp5_stage13 = ap_CS_fsm[ap_const_lv32_54];

assign ap_CS_fsm_pp5_stage14 = ap_CS_fsm[ap_const_lv32_55];

assign ap_CS_fsm_pp5_stage15 = ap_CS_fsm[ap_const_lv32_56];

assign ap_CS_fsm_pp5_stage16 = ap_CS_fsm[ap_const_lv32_57];

assign ap_CS_fsm_pp5_stage17 = ap_CS_fsm[ap_const_lv32_58];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[ap_const_lv32_49];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[ap_const_lv32_4A];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[ap_const_lv32_4B];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[ap_const_lv32_4C];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[ap_const_lv32_4D];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[ap_const_lv32_4E];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[ap_const_lv32_4F];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[ap_const_lv32_50];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state100 = ap_CS_fsm[ap_const_lv32_59];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state44 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state63 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_state78 = ap_CS_fsm[ap_const_lv32_45];

assign ap_CS_fsm_state79 = ap_CS_fsm[ap_const_lv32_46];

assign ap_NS_fsm_state11 = ap_NS_fsm[ap_const_lv32_5];

assign ap_return = ap_const_lv32_1;

assign api_fu_783_p3 = ((tmp_20_fu_767_p2[0:0] === 1'b1) ? reg_471 : f_fu_779_p1);

assign exitcond1_fu_984_p2 = ((i_4_reg_402 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond3_fu_900_p2 = ((i_3_phi_fu_394_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond4_fu_860_p2 = ((i_2_phi_fu_383_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond5_fu_844_p2 = ((j_phi_fu_372_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond6_fu_558_p2 = ((r_1_phi_fu_361_p4 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign exitcond7_fu_510_p2 = ((i_reg_322 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign f_1_fu_618_p1 = f_neg_i_fu_612_p2;

assign f_fu_779_p1 = f_neg_i1_fu_773_p2;

assign f_neg_i1_fu_773_p2 = (pivot_to_int_fu_731_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_612_p2 = (n_assign_1_to_int_fu_570_p1 ^ ap_const_lv32_80000000);

assign grp_aesl_mux_load_4_4_x_s_fu_414_ap_start = ap_reg_grp_aesl_mux_load_4_4_x_s_fu_414_ap_start;

assign i_1_fu_516_p2 = (i_reg_322 + ap_const_lv3_1);

assign i_5_cast6_fu_546_p1 = i_5_reg_334;

assign i_6_fu_564_p2 = (ap_const_lv32_1 + r_1_phi_fu_361_p4);

assign i_7_fu_990_p2 = (i_4_reg_402 + ap_const_lv3_1);

assign i_8_fu_866_p2 = (i_2_phi_fu_383_p4 + ap_const_lv3_1);

assign i_9_fu_906_p2 = (i_3_phi_fu_394_p4 + ap_const_lv3_1);

assign j_1_fu_850_p2 = (j_phi_fu_372_p4 + ap_const_lv3_1);

assign k_fu_540_p2 = (i_5_reg_334 + ap_const_lv3_1);

assign n_assign_1_to_int_fu_570_p1 = reg_471;

assign notlhs1_fu_749_p2 = ((tmp_7_fu_735_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_816_p2 = ((tmp_35_fu_802_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_665_p2 = ((tmp_45_fu_633_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_683_p2 = ((tmp_47_fu_651_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_941_p2 = ((tmp_54_fu_927_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_588_p2 = ((tmp_40_fu_574_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_755_p2 = ((tmp_41_fu_745_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_822_p2 = ((tmp_46_fu_812_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_671_p2 = ((tmp_55_fu_643_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_689_p2 = ((tmp_59_fu_661_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_947_p2 = ((tmp_63_fu_937_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_594_p2 = ((tmp_48_fu_584_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign pivot_to_int_fu_731_p1 = reg_471;

assign r_2_fu_719_p3 = ((tmp_53_reg_1095[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter4_r_1_reg_358 : r_fu_116);

assign tmp_10_cast1_fu_1020_p1 = reg_477;

assign tmp_10_fu_1011_p1 = work_q1;

assign tmp_11_fu_761_p2 = (notrhs1_fu_755_p2 | notlhs1_fu_749_p2);

assign tmp_14_fu_912_p2 = ((i_3_phi_fu_394_p4 == i_5_reg_334) ? 1'b1 : 1'b0);

assign tmp_15_cast_fu_918_p1 = i_3_reg_390;

assign tmp_15_fu_976_p1 = i_3_reg_390;

assign tmp_17_fu_971_p1 = tmp_18_neg_fu_965_p2;

assign tmp_18_neg_fu_965_p2 = (w_1_to_int_fu_923_p1 ^ ap_const_lv32_80000000);

assign tmp_1_fu_840_p2 = ((r_load_reg_1106 == i_5_cast6_reg_1054) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_882_p2 = ((i_5_reg_334 == ap_const_lv3_1) ? 1'b1 : 1'b0);

assign tmp_20_2_fu_888_p2 = ((i_5_reg_334 == ap_const_lv3_2) ? 1'b1 : 1'b0);

assign tmp_20_3_fu_894_p2 = ((i_5_reg_334 == ap_const_lv3_3) ? 1'b1 : 1'b0);

assign tmp_20_fu_767_p2 = (tmp_11_fu_761_p2 & grp_fu_451_p2);

assign tmp_27_fu_876_p2 = ((i_5_reg_334 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_2_fu_532_p3 = i_5_reg_334[ap_const_lv32_2];

assign tmp_35_fu_802_p4 = {{tmp_5_to_int_fu_799_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_36_fu_1001_p1 = i_4_reg_402[1:0];

assign tmp_37_fu_828_p2 = (notrhs2_fu_822_p2 | notlhs2_fu_816_p2);

assign tmp_39_fu_834_p2 = (tmp_37_fu_828_p2 & tmp_38_fu_462_p2);

assign tmp_3_fu_550_p1 = i_5_reg_334;

assign tmp_40_fu_574_p4 = {{n_assign_1_to_int_fu_570_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_41_fu_745_p1 = pivot_to_int_fu_731_p1[22:0];

assign tmp_42_fu_600_p2 = (notrhs_fu_594_p2 | notlhs_fu_588_p2);

assign tmp_44_fu_606_p2 = (tmp_42_fu_600_p2 & grp_fu_451_p2);

assign tmp_45_fu_633_p4 = {{w_3_to_int_fu_630_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_46_fu_812_p1 = tmp_5_to_int_fu_799_p1[51:0];

assign tmp_47_fu_651_p4 = {{wmax_to_int_fu_647_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_48_fu_584_p1 = n_assign_1_to_int_fu_570_p1[22:0];

assign tmp_49_fu_677_p2 = (notrhs3_fu_671_p2 | notlhs3_fu_665_p2);

assign tmp_4_fu_791_p1 = $signed(r_load_reg_1106);

assign tmp_50_fu_695_p2 = (notrhs4_fu_689_p2 | notlhs4_fu_683_p2);

assign tmp_51_fu_701_p2 = (tmp_49_fu_677_p2 & tmp_50_fu_695_p2);

assign tmp_53_fu_707_p2 = (tmp_51_fu_701_p2 & tmp_52_fu_456_p2);

assign tmp_54_fu_927_p4 = {{w_1_to_int_fu_923_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_55_fu_643_p1 = w_3_to_int_fu_630_p1[22:0];

assign tmp_56_fu_953_p2 = (notrhs5_fu_947_p2 | notlhs5_fu_941_p2);

assign tmp_58_fu_959_p2 = (tmp_56_fu_953_p2 & grp_fu_451_p2);

assign tmp_59_fu_661_p1 = wmax_to_int_fu_647_p1[22:0];

assign tmp_5_to_int_fu_799_p1 = tmp_5_reg_1118;

assign tmp_60_fu_1025_p1 = reg_477[1:0];

assign tmp_61_fu_856_p1 = j_phi_fu_372_p4[1:0];

assign tmp_62_fu_872_p1 = i_2_phi_fu_383_p4[1:0];

assign tmp_63_fu_937_p1 = w_1_to_int_fu_923_p1[22:0];

assign tmp_7_fu_735_p4 = {{pivot_to_int_fu_731_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_fu_1005_p2 = ((work_q1 == i_4_reg_402) ? 1'b1 : 1'b0);

assign tmp_9_fu_554_p1 = i_5_reg_334[1:0];

assign tmp_fu_522_p1 = i_reg_322;

assign tmp_s_fu_996_p1 = i_4_reg_402;

assign w_1_to_int_fu_923_p1 = grp_aesl_mux_load_4_4_x_s_fu_414_ap_return;

assign w_3_fu_622_p3 = ((tmp_44_fu_606_p2[0:0] === 1'b1) ? reg_471 : f_1_fu_618_p1);

assign w_3_to_int_fu_630_p1 = w_3_reg_1088;

assign wmax_1_fu_713_p3 = ((tmp_53_reg_1095[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter4_w_3_reg_1088 : wmax_reg_346);

assign wmax_to_int_fu_647_p1 = wmax_phi_fu_350_p4;

always @ (posedge ap_clk) begin
    i_5_cast6_reg_1054[31:3] <= 29'b00000000000000000000000000000;
    tmp_3_reg_1061[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    work_addr_3_reg_1131[8:3] <= 6'b000000;
    work_addr_1_reg_1357[8:3] <= 6'b000000;
    work_addr_2_reg_1372[8:3] <= 6'b000000;
    tmp_10_cast1_reg_1403[31:3] <= 29'b00000000000000000000000000000;
end

endmodule //minver_hwa
