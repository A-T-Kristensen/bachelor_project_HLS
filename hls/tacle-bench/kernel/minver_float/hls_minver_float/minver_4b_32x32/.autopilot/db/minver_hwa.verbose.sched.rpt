

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Thu May  4 21:47:57 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver_float
* Solution:       minver_4b_32x32
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     11.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+-------+-------------+-----------+-----------+--------+----------+
        |             |    Latency   |  Iteration  |  Initiation Interval  |  Trip  |          |
        |  Loop Name  |  min |  max  |   Latency   |  achieved |   target  |  Count | Pipelined|
        +-------------+------+-------+-------------+-----------+-----------+--------+----------+
        |- Loop 1     |    32|     32|            1|          1|          1|      32|    yes   |
        |- Loop 2     |  1441|  53350| 1441 ~ 1667 |          -|          -| 1 ~ 32 |    no    |
        | + Loop 2.1  |     5|     36|            6|          1|          1| 1 ~ 32 |    yes   |
        | + Loop 2.2  |   192|    192|            7|          6|          1|      32|    yes   |
        | + Loop 2.3  |   544|    544|           18|         17|          1|      32|    yes   |
        | + Loop 2.4  |   864|    864|           28|         27|          1|      32|    yes   |
        |- Loop 3     |     ?|      ?|            ?|          -|          -|      32|    no    |
        | + Loop 3.1  |     ?|      ?|          132|        130|          1|       ?|    yes   |
        +-------------+------+-------+-------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 6
  * Pipeline-2: initiation interval (II) = 6, depth = 7
  * Pipeline-3: initiation interval (II) = 17, depth = 18
  * Pipeline-4: initiation interval (II) = 27, depth = 28
  * Pipeline-5: initiation interval (II) = 130, depth = 132


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 223
* Pipeline: 6
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 1, D = 6, States = { 5 6 7 8 9 10 }
  Pipeline-2: II = 6, D = 7, States = { 18 19 20 21 22 23 24 }
  Pipeline-3: II = 17, D = 18, States = { 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 }
  Pipeline-4: II = 27, D = 28, States = { 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 }
  Pipeline-5: II = 130, D = 132, States = {}
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond7)
	2  / (!exitcond7)
3 --> 
	4  / true
4 --> 
	5  / (!tmp_2)
	90  / (tmp_2)
5 --> 
	11  / (exitcond6)
	6  / (!exitcond6)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	5  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / (!tmp_2 & !tmp_49 & !tmp_1)
	25  / (!tmp_2 & !tmp_49 & tmp_1)
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	25  / (exitcond5)
	19  / (!exitcond5)
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	18  / true
25 --> 
	26  / true
26 --> 
	44  / (exitcond4)
	27  / (!exitcond4)
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	26  / true
44 --> 
	45  / true
45 --> 
	73  / (exitcond3)
	46  / (!exitcond3)
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	45  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	4  / true
90 --> 
	91  / (!exitcond1)
	15  / (exitcond1)
91 --> 
	92  / true
92 --> 
	223  / (tmp_8)
	93  / (!tmp_8)
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / true
179 --> 
	180  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	183  / true
183 --> 
	184  / true
184 --> 
	185  / true
185 --> 
	186  / true
186 --> 
	187  / true
187 --> 
	188  / true
188 --> 
	189  / true
189 --> 
	190  / true
190 --> 
	191  / true
191 --> 
	192  / true
192 --> 
	193  / true
193 --> 
	194  / true
194 --> 
	195  / true
195 --> 
	196  / true
196 --> 
	197  / true
197 --> 
	198  / true
198 --> 
	199  / true
199 --> 
	200  / true
200 --> 
	201  / true
201 --> 
	202  / true
202 --> 
	203  / true
203 --> 
	204  / true
204 --> 
	205  / true
205 --> 
	206  / true
206 --> 
	207  / true
207 --> 
	208  / true
208 --> 
	209  / true
209 --> 
	210  / true
210 --> 
	211  / true
211 --> 
	212  / true
212 --> 
	213  / true
213 --> 
	214  / true
214 --> 
	215  / true
215 --> 
	216  / true
216 --> 
	217  / true
217 --> 
	218  / true
218 --> 
	219  / true
219 --> 
	220  / true
220 --> 
	221  / true
221 --> 
	222  / true
222 --> 
	91  / true
223 --> 
	90  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_224 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %a_3), !map !31

ST_1: StgValue_225 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %a_2), !map !37

ST_1: StgValue_226 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %a_1), !map !43

ST_1: StgValue_227 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %a_0), !map !49

ST_1: StgValue_228 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !55

ST_1: StgValue_229 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (11)  [1/1] 0.00ns  loc: minver.c:41
:6  %work = alloca [500 x i6], align 1

ST_1: StgValue_231 (12)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_232 (13)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_233 (14)  [1/1] 0.00ns  loc: minver.c:39
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_234 (15)  [1/1] 1.57ns  loc: minver.c:50
:10  br label %1


 <State 2>: 2.71ns
ST_2: i (17)  [1/1] 0.00ns
:0  %i = phi i6 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (18)  [1/1] 2.40ns  loc: minver.c:50
:1  %exitcond7 = icmp eq i6 %i, -32

ST_2: i_1 (19)  [1/1] 1.67ns  loc: minver.c:50
:2  %i_1 = add i6 %i, 1

ST_2: StgValue_238 (20)  [1/1] 0.00ns  loc: minver.c:50
:3  br i1 %exitcond7, label %.preheader13.preheader, label %2

ST_2: empty (22)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_2: tmp_6 (23)  [1/1] 0.00ns  loc: minver.c:50
:1  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_2: StgValue_241 (24)  [1/1] 0.00ns  loc: minver.c:51
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp (25)  [1/1] 0.00ns  loc: minver.c:52
:3  %tmp = zext i6 %i to i64

ST_2: work_addr (26)  [1/1] 0.00ns  loc: minver.c:52
:4  %work_addr = getelementptr [500 x i6]* %work, i64 0, i64 %tmp

ST_2: StgValue_244 (27)  [1/1] 2.71ns  loc: minver.c:52
:5  store i6 %i, i6* %work_addr, align 1

ST_2: empty_15 (28)  [1/1] 0.00ns  loc: minver.c:53
:6  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_6) nounwind

ST_2: StgValue_246 (29)  [1/1] 0.00ns  loc: minver.c:50
:7  br label %1


 <State 3>: 1.57ns
ST_3: r (31)  [1/1] 0.00ns
.preheader13.preheader:0  %r = alloca i32

ST_3: StgValue_248 (32)  [1/1] 1.57ns
.preheader13.preheader:1  store i32 0, i32* %r

ST_3: StgValue_249 (33)  [1/1] 1.57ns  loc: minver.c:56
.preheader13.preheader:2  br label %.preheader13


 <State 4>: 1.67ns
ST_4: i_5 (35)  [1/1] 0.00ns
.preheader13:0  %i_5 = phi i6 [ %k, %46 ], [ 0, %.preheader13.preheader ]

ST_4: tmp_2 (36)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:1  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %i_5, i32 5)

ST_4: k (37)  [1/1] 1.67ns  loc: minver.c:56
.preheader13:2  %k = add i6 %i_5, 1

ST_4: StgValue_253 (38)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader12.preheader

ST_4: i_5_cast (40)  [1/1] 0.00ns  loc: minver.c:59
.preheader12.preheader:0  %i_5_cast = zext i6 %i_5 to i32

ST_4: empty_16 (41)  [1/1] 0.00ns
.preheader12.preheader:1  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 32, i64 16) nounwind

ST_4: tmp_3 (42)  [1/1] 0.00ns  loc: minver.c:61
.preheader12.preheader:2  %tmp_3 = zext i6 %i_5 to i64

ST_4: tmp_9 (43)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:3  %tmp_9 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_5, i3 0)

ST_4: tmp_15 (44)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:4  %tmp_15 = zext i9 %tmp_9 to i64

ST_4: tmp_22 (45)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:5  %tmp_22 = or i9 %tmp_9, 7

ST_4: tmp_23 (46)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:6  %tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_22)

ST_4: a_0_addr_21 (47)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:7  %a_0_addr_21 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_23

ST_4: tmp_25 (48)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:8  %tmp_25 = or i9 %tmp_9, 6

ST_4: tmp_26 (49)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:9  %tmp_26 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_25)

ST_4: a_0_addr_19 (50)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:10  %a_0_addr_19 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_26

ST_4: tmp_29 (51)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:11  %tmp_29 = or i9 %tmp_9, 5

ST_4: tmp_31 (52)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:12  %tmp_31 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_29)

ST_4: a_0_addr_17 (53)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:13  %a_0_addr_17 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_31

ST_4: tmp_34 (54)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:14  %tmp_34 = or i9 %tmp_9, 4

ST_4: tmp_35 (55)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:15  %tmp_35 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_34)

ST_4: a_0_addr_15 (56)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:16  %a_0_addr_15 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_35

ST_4: tmp_36 (57)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:17  %tmp_36 = or i9 %tmp_9, 3

ST_4: tmp_37 (58)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:18  %tmp_37 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_36)

ST_4: a_0_addr_13 (59)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:19  %a_0_addr_13 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_37

ST_4: tmp_38 (60)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:20  %tmp_38 = or i9 %tmp_9, 2

ST_4: tmp_39 (61)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:21  %tmp_39 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_38)

ST_4: a_0_addr_11 (62)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:22  %a_0_addr_11 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_39

ST_4: tmp_40 (63)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:23  %tmp_40 = or i9 %tmp_9, 1

ST_4: tmp_41 (64)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:24  %tmp_41 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_40)

ST_4: a_0_addr_9 (65)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:25  %a_0_addr_9 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_41

ST_4: a_0_addr_7 (66)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:26  %a_0_addr_7 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_15

ST_4: a_1_addr_21 (67)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:27  %a_1_addr_21 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_23

ST_4: a_1_addr_19 (68)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:28  %a_1_addr_19 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_26

ST_4: a_1_addr_17 (69)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:29  %a_1_addr_17 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_31

ST_4: a_1_addr_15 (70)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:30  %a_1_addr_15 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_35

ST_4: a_1_addr_13 (71)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:31  %a_1_addr_13 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_37

ST_4: a_1_addr_11 (72)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:32  %a_1_addr_11 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_39

ST_4: a_1_addr_9 (73)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:33  %a_1_addr_9 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_41

ST_4: a_1_addr_7 (74)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:34  %a_1_addr_7 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_15

ST_4: a_2_addr_21 (75)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:35  %a_2_addr_21 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_23

ST_4: a_2_addr_19 (76)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:36  %a_2_addr_19 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_26

ST_4: a_2_addr_17 (77)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:37  %a_2_addr_17 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_31

ST_4: a_2_addr_15 (78)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:38  %a_2_addr_15 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_35

ST_4: a_2_addr_13 (79)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:39  %a_2_addr_13 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_37

ST_4: a_2_addr_11 (80)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:40  %a_2_addr_11 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_39

ST_4: a_2_addr_9 (81)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:41  %a_2_addr_9 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_41

ST_4: a_2_addr_7 (82)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:42  %a_2_addr_7 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_15

ST_4: a_3_addr_21 (83)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:43  %a_3_addr_21 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_23

ST_4: a_3_addr_19 (84)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:44  %a_3_addr_19 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_26

ST_4: a_3_addr_17 (85)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:45  %a_3_addr_17 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_31

ST_4: a_3_addr_15 (86)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:46  %a_3_addr_15 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_35

ST_4: a_3_addr_13 (87)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:47  %a_3_addr_13 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_37

ST_4: a_3_addr_11 (88)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:48  %a_3_addr_11 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_39

ST_4: a_3_addr_9 (89)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:49  %a_3_addr_9 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_41

ST_4: a_3_addr_7 (90)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:50  %a_3_addr_7 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_15

ST_4: arrayNo2 (91)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:51  %arrayNo2 = call i3 @_ssdm_op_PartSelect.i3.i6.i32.i32(i6 %i_5, i32 3, i32 5)

ST_4: tmp_42 (92)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:52  %tmp_42 = trunc i6 %i_5 to i3

ST_4: tmp_43 (93)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:53  %tmp_43 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_5, i3 %tmp_42)

ST_4: tmp_44 (94)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:54  %tmp_44 = zext i9 %tmp_43 to i64

ST_4: a_0_addr_5 (95)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:55  %a_0_addr_5 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_44

ST_4: a_1_addr_5 (96)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:56  %a_1_addr_5 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_44

ST_4: a_2_addr_5 (97)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:57  %a_2_addr_5 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_44

ST_4: a_3_addr_5 (98)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:58  %a_3_addr_5 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_44

ST_4: StgValue_313 (99)  [1/1] 1.57ns  loc: minver.c:59
.preheader12.preheader:59  br label %.preheader12

ST_4: StgValue_314 (711)  [1/1] 1.57ns  loc: minver.c:109
.preheader8.preheader:0  br label %.preheader8


 <State 5>: 2.93ns
ST_5: wmax (101)  [1/1] 0.00ns
.preheader12:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader12.preheader ]

ST_5: r_1 (102)  [1/1] 0.00ns
.preheader12:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast, %.preheader12.preheader ]

ST_5: exitcond6 (103)  [1/1] 2.93ns  loc: minver.c:59
.preheader12:2  %exitcond6 = icmp eq i32 %r_1, 32

ST_5: StgValue_318 (104)  [1/1] 0.00ns  loc: minver.c:59
.preheader12:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_5: i_6 (141)  [1/1] 2.39ns  loc: minver.c:59
_ifconv:35  %i_6 = add nsw i32 1, %r_1


 <State 6>: 5.74ns
ST_6: arrayNo2_cast_cast2_s (110)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:4  %arrayNo2_cast_cast2_s = zext i3 %arrayNo2 to i5

ST_6: n_assign_s (111)  [2/2] 5.74ns  loc: minver.c:56
_ifconv:5  %n_assign_s = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_s, i32 %r_1, i3 %tmp_42)


 <State 7>: 5.45ns
ST_7: n_assign_s (111)  [1/2] 5.45ns  loc: minver.c:56
_ifconv:5  %n_assign_s = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_s, i32 %r_1, i3 %tmp_42)


 <State 8>: 7.74ns
ST_8: n_assign_1_to_int (112)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:6  %n_assign_1_to_int = bitcast float %n_assign_s to i32

ST_8: tmp_50 (113)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:7  %tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_8: tmp_58 (114)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:8  %tmp_58 = trunc i32 %n_assign_1_to_int to i23

ST_8: notlhs (115)  [1/1] 2.47ns  loc: minver.c:56
_ifconv:9  %notlhs = icmp ne i8 %tmp_50, -1

ST_8: notrhs (116)  [1/1] 2.84ns  loc: minver.c:56
_ifconv:10  %notrhs = icmp eq i23 %tmp_58, 0

ST_8: tmp_52 (117)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node w_3)
_ifconv:11  %tmp_52 = or i1 %notrhs, %notlhs

ST_8: tmp_53 (118)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:61
_ifconv:12  %tmp_53 = fcmp oge float %n_assign_s, 0.000000e+00

ST_8: tmp_54 (119)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:13  %tmp_54 = and i1 %tmp_52, %tmp_53

ST_8: f_neg_i (120)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:14  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_8: f_1 (121)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:15  %f_1 = bitcast i32 %f_neg_i to float

ST_8: w_3 (122)  [1/1] 1.37ns  loc: minver.c:63 (out node of the LUT)
_ifconv:16  %w_3 = select i1 %tmp_54, float %n_assign_s, float %f_1


 <State 9>: 7.74ns
ST_9: w_3_to_int (123)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:17  %w_3_to_int = bitcast float %w_3 to i32

ST_9: tmp_55 (124)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:18  %tmp_55 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_3_to_int, i32 23, i32 30)

ST_9: tmp_64 (125)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:19  %tmp_64 = trunc i32 %w_3_to_int to i23

ST_9: wmax_to_int (126)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:20  %wmax_to_int = bitcast float %wmax to i32

ST_9: tmp_57 (127)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:21  %tmp_57 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_9: tmp_66 (128)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:22  %tmp_66 = trunc i32 %wmax_to_int to i23

ST_9: notlhs3 (129)  [1/1] 2.47ns  loc: minver.c:63
_ifconv:23  %notlhs3 = icmp ne i8 %tmp_55, -1

ST_9: notrhs3 (130)  [1/1] 2.84ns  loc: minver.c:63
_ifconv:24  %notrhs3 = icmp eq i23 %tmp_64, 0

ST_9: tmp_59 (131)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_63)
_ifconv:25  %tmp_59 = or i1 %notrhs3, %notlhs3

ST_9: notlhs4 (132)  [1/1] 2.47ns  loc: minver.c:62
_ifconv:26  %notlhs4 = icmp ne i8 %tmp_57, -1

ST_9: notrhs4 (133)  [1/1] 2.84ns  loc: minver.c:62
_ifconv:27  %notrhs4 = icmp eq i23 %tmp_66, 0

ST_9: tmp_60 (134)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_63)
_ifconv:28  %tmp_60 = or i1 %notrhs4, %notlhs4

ST_9: tmp_61 (135)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_63)
_ifconv:29  %tmp_61 = and i1 %tmp_59, %tmp_60

ST_9: tmp_62 (136)  [1/1] 6.37ns  loc: minver.c:62
_ifconv:30  %tmp_62 = fcmp ogt float %w_3, %wmax

ST_9: tmp_63 (137)  [1/1] 1.37ns  loc: minver.c:62 (out node of the LUT)
_ifconv:31  %tmp_63 = and i1 %tmp_61, %tmp_62


 <State 10>: 2.94ns
ST_10: r_load_1 (106)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:0  %r_load_1 = load i32* %r

ST_10: empty_17 (107)  [1/1] 0.00ns
_ifconv:1  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 32, i64 0) nounwind

ST_10: tmp_19 (108)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:2  %tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_10: StgValue_352 (109)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_10: wmax_1 (138)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:32  %wmax_1 = select i1 %tmp_63, float %w_3, float %wmax

ST_10: r_2 (139)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:33  %r_2 = select i1 %tmp_63, i32 %r_1, i32 %r_load_1

ST_10: empty_18 (140)  [1/1] 0.00ns  loc: minver.c:66
_ifconv:34  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_19) nounwind

ST_10: StgValue_356 (142)  [1/1] 1.57ns  loc: minver.c:62
_ifconv:36  store i32 %r_2, i32* %r

ST_10: StgValue_357 (143)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:37  br label %.preheader12


 <State 11>: 5.74ns
ST_11: r_load (145)  [1/1] 0.00ns
_ifconv1:0  %r_load = load i32* %r

ST_11: arrayNo2_cast_cast2_1 (147)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:2  %arrayNo2_cast_cast2_1 = zext i3 %arrayNo2 to i5

ST_11: pivot (148)  [2/2] 5.74ns  loc: minver.c:56
_ifconv1:3  %pivot = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %r_load, i3 %tmp_42)


 <State 12>: 5.45ns
ST_12: pivot (148)  [1/2] 5.45ns  loc: minver.c:56
_ifconv1:3  %pivot = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %r_load, i3 %tmp_42)


 <State 13>: 7.74ns
ST_13: pivot_to_int (149)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:4  %pivot_to_int = bitcast float %pivot to i32

ST_13: tmp_7 (150)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:5  %tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_13: tmp_51 (151)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:6  %tmp_51 = trunc i32 %pivot_to_int to i23

ST_13: notlhs1 (152)  [1/1] 2.47ns  loc: minver.c:56
_ifconv1:7  %notlhs1 = icmp ne i8 %tmp_7, -1

ST_13: notrhs1 (153)  [1/1] 2.84ns  loc: minver.c:56
_ifconv1:8  %notrhs1 = icmp eq i23 %tmp_51, 0

ST_13: tmp_11 (154)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node api)
_ifconv1:9  %tmp_11 = or i1 %notrhs1, %notlhs1

ST_13: tmp_16 (155)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:69
_ifconv1:10  %tmp_16 = fcmp oge float %pivot, 0.000000e+00

ST_13: tmp_20 (156)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:69 (grouped into LUT with out node api)
_ifconv1:11  %tmp_20 = and i1 %tmp_11, %tmp_16

ST_13: f_neg_i1 (157)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:12  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_13: f (158)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:13  %f = bitcast i32 %f_neg_i1 to float

ST_13: api (159)  [1/1] 1.37ns  loc: minver.c:69 (out node of the LUT)
_ifconv1:14  %api = select i1 %tmp_20, float %pivot, float %f


 <State 14>: 5.12ns
ST_14: tmp_5 (160)  [1/1] 5.12ns  loc: minver.c:70
_ifconv1:15  %tmp_5 = fpext float %api to double


 <State 15>: 8.27ns
ST_15: tmp_4 (146)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:1  %tmp_4 = sext i32 %r_load to i64

ST_15: tmp_5_to_int (161)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:16  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_15: tmp_45 (162)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:17  %tmp_45 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_15: tmp_56 (163)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:18  %tmp_56 = trunc i64 %tmp_5_to_int to i52

ST_15: notlhs2 (164)  [1/1] 2.58ns  loc: minver.c:70
_ifconv1:19  %notlhs2 = icmp ne i11 %tmp_45, -1

ST_15: notrhs2 (165)  [1/1] 3.19ns  loc: minver.c:70
_ifconv1:20  %notrhs2 = icmp eq i52 %tmp_56, 0

ST_15: tmp_47 (166)  [1/1] 0.00ns  loc: minver.c:70 (grouped into LUT with out node tmp_49)
_ifconv1:21  %tmp_47 = or i1 %notrhs2, %notlhs2

ST_15: tmp_48 (167)  [1/1] 6.90ns  loc: minver.c:70
_ifconv1:22  %tmp_48 = fcmp ole double %tmp_5, 1.000000e-06

ST_15: tmp_49 (168)  [1/1] 1.37ns  loc: minver.c:70 (out node of the LUT)
_ifconv1:23  %tmp_49 = and i1 %tmp_47, %tmp_48

ST_15: StgValue_383 (169)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:24  br i1 %tmp_49, label %.loopexit.loopexit95, label %3

ST_15: tmp_1 (171)  [1/1] 2.93ns  loc: minver.c:75
:0  %tmp_1 = icmp eq i32 %r_load, %i_5_cast

ST_15: StgValue_385 (172)  [1/1] 0.00ns  loc: minver.c:75
:1  br i1 %tmp_1, label %.loopexit11, label %4

ST_15: work_addr_3 (174)  [1/1] 0.00ns  loc: minver.c:77
:0  %work_addr_3 = getelementptr [500 x i6]* %work, i64 0, i64 %tmp_3

ST_15: work_load_2 (175)  [2/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i6* %work_addr_3, align 1

ST_15: work_addr_4 (176)  [1/1] 0.00ns  loc: minver.c:78
:2  %work_addr_4 = getelementptr [500 x i6]* %work, i64 0, i64 %tmp_4

ST_15: work_load_3 (177)  [2/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i6* %work_addr_4, align 1

ST_15: StgValue_390 (709)  [1/1] 0.00ns
.loopexit.loopexit95:0  br label %.loopexit

ST_15: StgValue_391 (1689)  [1/1] 0.00ns  loc: minver.c:133
.loopexit:0  ret i32 1


 <State 16>: 5.42ns
ST_16: work_load_2 (175)  [1/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i6* %work_addr_3, align 1

ST_16: work_load_3 (177)  [1/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i6* %work_addr_4, align 1

ST_16: StgValue_394 (178)  [1/1] 2.71ns  loc: minver.c:78
:4  store i6 %work_load_3, i6* %work_addr_3, align 1


 <State 17>: 2.71ns
ST_17: StgValue_395 (179)  [1/1] 2.71ns  loc: minver.c:79
:5  store i6 %work_load_2, i6* %work_addr_4, align 1

ST_17: StgValue_396 (180)  [1/1] 1.57ns  loc: minver.c:80
:6  br label %5


 <State 18>: 2.40ns
ST_18: j (182)  [1/1] 0.00ns
:0  %j = phi i6 [ 0, %4 ], [ %j_1, %7 ]

ST_18: exitcond5 (183)  [1/1] 2.40ns  loc: minver.c:80
:1  %exitcond5 = icmp eq i6 %j, -32

ST_18: j_1 (184)  [1/1] 1.67ns  loc: minver.c:80
:2  %j_1 = add i6 %j, 1

ST_18: StgValue_400 (185)  [1/1] 0.00ns  loc: minver.c:80
:3  br i1 %exitcond5, label %.loopexit11.loopexit, label %6

ST_18: tmp_24 (189)  [1/1] 0.00ns  loc: minver.c:80
:2  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_18: arrayNo4 (191)  [1/1] 0.00ns  loc: minver.c:80
:4  %arrayNo4 = call i3 @_ssdm_op_PartSelect.i3.i6.i32.i32(i6 %j, i32 3, i32 5)

ST_18: tmp_135 (192)  [1/1] 0.00ns  loc: minver.c:80
:5  %tmp_135 = trunc i6 %j to i3

ST_18: StgValue_404 (208)  [1/1] 2.33ns  loc: minver.c:83
:21  switch i3 %arrayNo4, label %branch275 [
    i3 0, label %branch272
    i3 1, label %branch273
    i3 2, label %branch274
  ]

ST_18: empty_20 (226)  [1/1] 0.00ns  loc: minver.c:85
:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_24) nounwind

ST_18: StgValue_406 (227)  [1/1] 0.00ns  loc: minver.c:80
:1  br label %5


 <State 19>: 5.74ns
ST_19: arrayNo4_cast_cast1_s (205)  [1/1] 0.00ns  loc: minver.c:80
:18  %arrayNo4_cast_cast1_s = zext i3 %arrayNo4 to i5

ST_19: w (206)  [2/2] 5.74ns  loc: minver.c:80
:19  %w = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %i_5_cast, i3 %tmp_135)


 <State 20>: 5.45ns
ST_20: w (206)  [1/2] 5.45ns  loc: minver.c:80
:19  %w = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %i_5_cast, i3 %tmp_135)


 <State 21>: 5.74ns
ST_21: r_load_2 (187)  [1/1] 0.00ns
:0  %r_load_2 = load i32* %r

ST_21: tmp_76 (207)  [2/2] 5.74ns  loc: minver.c:80
:20  %tmp_76 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %r_load_2, i3 %tmp_135)


 <State 22>: 5.45ns
ST_22: tmp_76 (207)  [1/2] 5.45ns  loc: minver.c:80
:20  %tmp_76 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %r_load_2, i3 %tmp_135)


 <State 23>: 2.71ns
ST_23: empty_19 (188)  [1/1] 0.00ns
:1  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_23: StgValue_414 (190)  [1/1] 0.00ns  loc: minver.c:81
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_23: tmp_72 (193)  [1/1] 0.00ns  loc: minver.c:56
:6  %tmp_72 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_5, i3 %tmp_135)

ST_23: tmp_73 (194)  [1/1] 0.00ns  loc: minver.c:82
:7  %tmp_73 = zext i9 %tmp_72 to i64

ST_23: a_0_addr_2 (195)  [1/1] 0.00ns  loc: minver.c:82
:8  %a_0_addr_2 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_73

ST_23: tmp_74 (196)  [1/1] 0.00ns  loc: minver.c:80
:9  %tmp_74 = call i35 @_ssdm_op_BitConcatenate.i35.i32.i3(i32 %r_load_2, i3 %tmp_135)

ST_23: tmp_75 (197)  [1/1] 0.00ns  loc: minver.c:83
:10  %tmp_75 = sext i35 %tmp_74 to i64

ST_23: a_0_addr_3 (198)  [1/1] 0.00ns  loc: minver.c:83
:11  %a_0_addr_3 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_75

ST_23: a_1_addr_2 (199)  [1/1] 0.00ns  loc: minver.c:82
:12  %a_1_addr_2 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_73

ST_23: a_1_addr_3 (200)  [1/1] 0.00ns  loc: minver.c:83
:13  %a_1_addr_3 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_75

ST_23: a_2_addr_2 (201)  [1/1] 0.00ns  loc: minver.c:82
:14  %a_2_addr_2 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_73

ST_23: a_2_addr_3 (202)  [1/1] 0.00ns  loc: minver.c:83
:15  %a_2_addr_3 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_75

ST_23: a_3_addr_2 (203)  [1/1] 0.00ns  loc: minver.c:82
:16  %a_3_addr_2 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_73

ST_23: a_3_addr_3 (204)  [1/1] 0.00ns  loc: minver.c:83
:17  %a_3_addr_3 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_75

ST_23: StgValue_427 (210)  [1/1] 2.71ns  loc: minver.c:83
branch274:0  store float %tmp_76, float* %a_2_addr_2, align 4

ST_23: StgValue_428 (214)  [1/1] 2.71ns  loc: minver.c:83
branch273:0  store float %tmp_76, float* %a_1_addr_2, align 4

ST_23: StgValue_429 (218)  [1/1] 2.71ns  loc: minver.c:83
branch272:0  store float %tmp_76, float* %a_0_addr_2, align 4

ST_23: StgValue_430 (222)  [1/1] 2.71ns  loc: minver.c:83
branch275:0  store float %tmp_76, float* %a_3_addr_2, align 4


 <State 24>: 2.71ns
ST_24: StgValue_431 (211)  [1/1] 2.71ns  loc: minver.c:84
branch274:1  store float %w, float* %a_2_addr_3, align 4

ST_24: StgValue_432 (212)  [1/1] 0.00ns
branch274:2  br label %7

ST_24: StgValue_433 (215)  [1/1] 2.71ns  loc: minver.c:84
branch273:1  store float %w, float* %a_1_addr_3, align 4

ST_24: StgValue_434 (216)  [1/1] 0.00ns
branch273:2  br label %7

ST_24: StgValue_435 (219)  [1/1] 2.71ns  loc: minver.c:84
branch272:1  store float %w, float* %a_0_addr_3, align 4

ST_24: StgValue_436 (220)  [1/1] 0.00ns
branch272:2  br label %7

ST_24: StgValue_437 (223)  [1/1] 2.71ns  loc: minver.c:84
branch275:1  store float %w, float* %a_3_addr_3, align 4

ST_24: StgValue_438 (224)  [1/1] 0.00ns
branch275:2  br label %7


 <State 25>: 1.57ns
ST_25: StgValue_439 (229)  [1/1] 0.00ns
.loopexit11.loopexit:0  br label %.loopexit11

ST_25: StgValue_440 (231)  [1/1] 1.57ns  loc: minver.c:88
.loopexit11:0  br label %8


 <State 26>: 2.40ns
ST_26: i_2 (233)  [1/1] 0.00ns
:0  %i_2 = phi i6 [ 0, %.loopexit11 ], [ %i_8, %10 ]

ST_26: exitcond4 (234)  [1/1] 2.40ns  loc: minver.c:88
:1  %exitcond4 = icmp eq i6 %i_2, -32

ST_26: i_8 (235)  [1/1] 1.67ns  loc: minver.c:88
:2  %i_8 = add i6 %i_2, 1

ST_26: StgValue_444 (236)  [1/1] 0.00ns  loc: minver.c:88
:3  br i1 %exitcond4, label %.preheader10.preheader, label %9

ST_26: tmp_28 (239)  [1/1] 0.00ns  loc: minver.c:88
:1  %tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_26: arrayNo5 (241)  [1/1] 0.00ns  loc: minver.c:88
:3  %arrayNo5 = call i3 @_ssdm_op_PartSelect.i3.i6.i32.i32(i6 %i_2, i32 3, i32 5)

ST_26: tmp_136 (242)  [1/1] 0.00ns  loc: minver.c:88
:4  %tmp_136 = trunc i6 %i_2 to i3

ST_26: StgValue_448 (252)  [1/1] 2.33ns  loc: minver.c:90
:14  switch i3 %arrayNo5, label %branch267 [
    i3 0, label %branch264
    i3 1, label %branch265
    i3 2, label %branch266
  ]

ST_26: empty_22 (266)  [1/1] 0.00ns  loc: minver.c:91
:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_28) nounwind

ST_26: StgValue_450 (267)  [1/1] 0.00ns  loc: minver.c:88
:1  br label %8


 <State 27>: 5.74ns
ST_27: arrayNo5_cast_cast_c (249)  [1/1] 0.00ns  loc: minver.c:88
:11  %arrayNo5_cast_cast_c = zext i3 %arrayNo5 to i5

ST_27: tmp_80 (250)  [2/2] 5.74ns  loc: minver.c:88
:12  %tmp_80 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo5_cast_cast_c, i32 %i_5_cast, i3 %tmp_136)


 <State 28>: 11.75ns
ST_28: tmp_80 (250)  [1/2] 5.45ns  loc: minver.c:88
:12  %tmp_80 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo5_cast_cast_c, i32 %i_5_cast, i3 %tmp_136)

ST_28: tmp_12 (251)  [16/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 29>: 6.30ns
ST_29: tmp_12 (251)  [15/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 30>: 6.30ns
ST_30: tmp_12 (251)  [14/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 31>: 6.30ns
ST_31: tmp_12 (251)  [13/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 32>: 6.30ns
ST_32: tmp_12 (251)  [12/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 33>: 6.30ns
ST_33: tmp_12 (251)  [11/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 34>: 6.30ns
ST_34: tmp_12 (251)  [10/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 35>: 6.30ns
ST_35: tmp_12 (251)  [9/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 36>: 6.30ns
ST_36: tmp_12 (251)  [8/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 37>: 6.30ns
ST_37: tmp_12 (251)  [7/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 38>: 6.30ns
ST_38: tmp_12 (251)  [6/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 39>: 6.30ns
ST_39: tmp_12 (251)  [5/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 40>: 6.30ns
ST_40: tmp_12 (251)  [4/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 41>: 6.30ns
ST_41: tmp_12 (251)  [3/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 42>: 6.30ns
ST_42: tmp_12 (251)  [2/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot


 <State 43>: 9.01ns
ST_43: empty_21 (238)  [1/1] 0.00ns
:0  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_43: StgValue_470 (240)  [1/1] 0.00ns  loc: minver.c:89
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_43: tmp_78 (243)  [1/1] 0.00ns  loc: minver.c:56
:5  %tmp_78 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_5, i3 %tmp_136)

ST_43: tmp_79 (244)  [1/1] 0.00ns  loc: minver.c:90
:6  %tmp_79 = zext i9 %tmp_78 to i64

ST_43: a_0_addr_4 (245)  [1/1] 0.00ns  loc: minver.c:90
:7  %a_0_addr_4 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_79

ST_43: a_1_addr_4 (246)  [1/1] 0.00ns  loc: minver.c:90
:8  %a_1_addr_4 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_79

ST_43: a_2_addr_4 (247)  [1/1] 0.00ns  loc: minver.c:90
:9  %a_2_addr_4 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_79

ST_43: a_3_addr_4 (248)  [1/1] 0.00ns  loc: minver.c:90
:10  %a_3_addr_4 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_79

ST_43: tmp_12 (251)  [1/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_80, %pivot

ST_43: StgValue_478 (254)  [1/1] 2.71ns  loc: minver.c:90
branch266:0  store float %tmp_12, float* %a_2_addr_4, align 4

ST_43: StgValue_479 (255)  [1/1] 0.00ns  loc: minver.c:90
branch266:1  br label %10

ST_43: StgValue_480 (257)  [1/1] 2.71ns  loc: minver.c:90
branch265:0  store float %tmp_12, float* %a_1_addr_4, align 4

ST_43: StgValue_481 (258)  [1/1] 0.00ns  loc: minver.c:90
branch265:1  br label %10

ST_43: StgValue_482 (260)  [1/1] 2.71ns  loc: minver.c:90
branch264:0  store float %tmp_12, float* %a_0_addr_4, align 4

ST_43: StgValue_483 (261)  [1/1] 0.00ns  loc: minver.c:90
branch264:1  br label %10

ST_43: StgValue_484 (263)  [1/1] 2.71ns  loc: minver.c:90
branch267:0  store float %tmp_12, float* %a_3_addr_4, align 4

ST_43: StgValue_485 (264)  [1/1] 0.00ns  loc: minver.c:90
branch267:1  br label %10


 <State 44>: 2.40ns
ST_44: tmp_27 (269)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:0  %tmp_27 = icmp eq i6 %i_5, 0

ST_44: tmp_20_1 (270)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:1  %tmp_20_1 = icmp eq i6 %i_5, 1

ST_44: tmp_20_2 (271)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:2  %tmp_20_2 = icmp eq i6 %i_5, 2

ST_44: tmp_20_3 (272)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:3  %tmp_20_3 = icmp eq i6 %i_5, 3

ST_44: tmp_20_4 (273)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:4  %tmp_20_4 = icmp eq i6 %i_5, 4

ST_44: tmp_20_5 (274)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:5  %tmp_20_5 = icmp eq i6 %i_5, 5

ST_44: tmp_20_6 (275)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:6  %tmp_20_6 = icmp eq i6 %i_5, 6

ST_44: tmp_20_7 (276)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:7  %tmp_20_7 = icmp eq i6 %i_5, 7

ST_44: tmp_20_8 (277)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:8  %tmp_20_8 = icmp eq i6 %i_5, 8

ST_44: tmp_20_9 (278)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:9  %tmp_20_9 = icmp eq i6 %i_5, 9

ST_44: tmp_20_s (279)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:10  %tmp_20_s = icmp eq i6 %i_5, 10

ST_44: tmp_20_10 (280)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:11  %tmp_20_10 = icmp eq i6 %i_5, 11

ST_44: tmp_20_11 (281)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:12  %tmp_20_11 = icmp eq i6 %i_5, 12

ST_44: tmp_20_12 (282)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:13  %tmp_20_12 = icmp eq i6 %i_5, 13

ST_44: tmp_20_13 (283)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:14  %tmp_20_13 = icmp eq i6 %i_5, 14

ST_44: tmp_20_14 (284)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:15  %tmp_20_14 = icmp eq i6 %i_5, 15

ST_44: tmp_20_15 (285)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:16  %tmp_20_15 = icmp eq i6 %i_5, 16

ST_44: tmp_20_16 (286)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:17  %tmp_20_16 = icmp eq i6 %i_5, 17

ST_44: tmp_20_17 (287)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:18  %tmp_20_17 = icmp eq i6 %i_5, 18

ST_44: tmp_20_18 (288)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:19  %tmp_20_18 = icmp eq i6 %i_5, 19

ST_44: tmp_20_19 (289)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:20  %tmp_20_19 = icmp eq i6 %i_5, 20

ST_44: tmp_20_20 (290)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:21  %tmp_20_20 = icmp eq i6 %i_5, 21

ST_44: tmp_20_21 (291)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:22  %tmp_20_21 = icmp eq i6 %i_5, 22

ST_44: tmp_20_22 (292)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:23  %tmp_20_22 = icmp eq i6 %i_5, 23

ST_44: tmp_20_23 (293)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:24  %tmp_20_23 = icmp eq i6 %i_5, 24

ST_44: tmp_20_24 (294)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:25  %tmp_20_24 = icmp eq i6 %i_5, 25

ST_44: tmp_20_25 (295)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:26  %tmp_20_25 = icmp eq i6 %i_5, 26

ST_44: tmp_20_26 (296)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:27  %tmp_20_26 = icmp eq i6 %i_5, 27

ST_44: tmp_20_27 (297)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:28  %tmp_20_27 = icmp eq i6 %i_5, 28

ST_44: tmp_20_28 (298)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:29  %tmp_20_28 = icmp eq i6 %i_5, 29

ST_44: tmp_20_29 (299)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:30  %tmp_20_29 = icmp eq i6 %i_5, 30

ST_44: tmp_20_30 (300)  [1/1] 2.40ns  loc: minver.c:99
.preheader10.preheader:31  %tmp_20_30 = icmp eq i6 %i_5, 31

ST_44: StgValue_518 (301)  [1/1] 1.57ns  loc: minver.c:93
.preheader10.preheader:32  br label %.preheader10


 <State 45>: 2.40ns
ST_45: i_3 (303)  [1/1] 0.00ns
.preheader10:0  %i_3 = phi i6 [ %i_9, %._crit_edge ], [ 0, %.preheader10.preheader ]

ST_45: exitcond3 (304)  [1/1] 2.40ns  loc: minver.c:93
.preheader10:1  %exitcond3 = icmp eq i6 %i_3, -32

ST_45: i_9 (305)  [1/1] 1.67ns  loc: minver.c:93
.preheader10:2  %i_9 = add i6 %i_3, 1

ST_45: StgValue_522 (306)  [1/1] 0.00ns  loc: minver.c:93
.preheader10:3  br i1 %exitcond3, label %45, label %11

ST_45: empty_23 (308)  [1/1] 0.00ns
:0  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_45: tmp_30 (309)  [1/1] 0.00ns  loc: minver.c:93
:1  %tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9) nounwind

ST_45: StgValue_525 (310)  [1/1] 0.00ns  loc: minver.c:94
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_45: tmp_14 (311)  [1/1] 2.40ns  loc: minver.c:95
:3  %tmp_14 = icmp eq i6 %i_3, %i_5

ST_45: StgValue_527 (312)  [1/1] 0.00ns  loc: minver.c:95
:4  br i1 %tmp_14, label %._crit_edge, label %12

ST_45: StgValue_528 (687)  [1/1] 0.00ns  loc: minver.c:103
._crit_edge18:0  br label %._crit_edge

ST_45: empty_24 (689)  [1/1] 0.00ns  loc: minver.c:104
._crit_edge:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_30) nounwind

ST_45: StgValue_530 (690)  [1/1] 0.00ns  loc: minver.c:93
._crit_edge:1  br label %.preheader10


 <State 46>: 5.74ns
ST_46: tmp_15_cast (368)  [1/1] 0.00ns  loc: minver.c:93
:54  %tmp_15_cast = zext i6 %i_3 to i32

ST_46: w_1 (369)  [2/2] 5.74ns  loc: minver.c:56
:55  %w_1 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %tmp_15_cast, i3 %tmp_42)


 <State 47>: 5.45ns
ST_47: w_1 (369)  [1/2] 5.45ns  loc: minver.c:56
:55  %w_1 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %tmp_15_cast, i3 %tmp_42)


 <State 48>: 7.74ns
ST_48: w_1_to_int (370)  [1/1] 0.00ns  loc: minver.c:56
:56  %w_1_to_int = bitcast float %w_1 to i32

ST_48: tmp_85 (371)  [1/1] 0.00ns  loc: minver.c:56
:57  %tmp_85 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_1_to_int, i32 23, i32 30)

ST_48: tmp_137 (372)  [1/1] 0.00ns  loc: minver.c:56
:58  %tmp_137 = trunc i32 %w_1_to_int to i23

ST_48: notlhs5 (373)  [1/1] 2.47ns  loc: minver.c:56
:59  %notlhs5 = icmp ne i8 %tmp_85, -1

ST_48: notrhs5 (374)  [1/1] 2.84ns  loc: minver.c:56
:60  %notrhs5 = icmp eq i23 %tmp_137, 0

ST_48: tmp_87 (375)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node tmp_89)
:61  %tmp_87 = or i1 %notrhs5, %notlhs5

ST_48: tmp_88 (376)  [1/1] 6.37ns  loc: minver.c:97
:62  %tmp_88 = fcmp oeq float %w_1, 0.000000e+00

ST_48: tmp_89 (377)  [1/1] 1.37ns  loc: minver.c:97 (out node of the LUT)
:63  %tmp_89 = and i1 %tmp_87, %tmp_88

ST_48: StgValue_542 (378)  [1/1] 0.00ns  loc: minver.c:97
:64  br i1 %tmp_89, label %._crit_edge18, label %.preheader9.0

ST_48: StgValue_543 (380)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.0:0  br i1 %tmp_27, label %.preheader9.1, label %13

ST_48: a_0_load (382)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load = load float* %a_0_addr_7, align 4

ST_48: StgValue_545 (389)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.1:0  br i1 %tmp_20_1, label %.preheader9.2, label %14

ST_48: StgValue_546 (398)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.2:0  br i1 %tmp_20_2, label %.preheader9.3, label %15

ST_48: StgValue_547 (407)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.3:0  br i1 %tmp_20_3, label %.preheader9.4, label %16

ST_48: StgValue_548 (416)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.4:0  br i1 %tmp_20_4, label %.preheader9.5, label %17

ST_48: StgValue_549 (425)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.5:0  br i1 %tmp_20_5, label %.preheader9.6, label %18

ST_48: StgValue_550 (434)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.6:0  br i1 %tmp_20_6, label %.preheader9.7, label %19

ST_48: StgValue_551 (443)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.7:0  br i1 %tmp_20_7, label %.preheader9.8, label %20

ST_48: StgValue_552 (452)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.8:0  br i1 %tmp_20_8, label %.preheader9.9, label %21

ST_48: a_1_load (454)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load = load float* %a_1_addr_7, align 4

ST_48: StgValue_554 (461)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.9:0  br i1 %tmp_20_9, label %.preheader9.10, label %22

ST_48: StgValue_555 (470)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.10:0  br i1 %tmp_20_s, label %.preheader9.11, label %23

ST_48: StgValue_556 (479)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.11:0  br i1 %tmp_20_10, label %.preheader9.12, label %24

ST_48: StgValue_557 (488)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.12:0  br i1 %tmp_20_11, label %.preheader9.13, label %25

ST_48: StgValue_558 (497)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.13:0  br i1 %tmp_20_12, label %.preheader9.14, label %26

ST_48: StgValue_559 (506)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.14:0  br i1 %tmp_20_13, label %.preheader9.15, label %27

ST_48: StgValue_560 (515)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.15:0  br i1 %tmp_20_14, label %.preheader9.16, label %28

ST_48: StgValue_561 (524)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.16:0  br i1 %tmp_20_15, label %.preheader9.17, label %29

ST_48: a_2_load (526)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load = load float* %a_2_addr_7, align 4

ST_48: StgValue_563 (533)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.17:0  br i1 %tmp_20_16, label %.preheader9.18, label %30

ST_48: StgValue_564 (542)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.18:0  br i1 %tmp_20_17, label %.preheader9.19, label %31

ST_48: StgValue_565 (551)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.19:0  br i1 %tmp_20_18, label %.preheader9.20, label %32

ST_48: StgValue_566 (560)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.20:0  br i1 %tmp_20_19, label %.preheader9.21, label %33

ST_48: StgValue_567 (569)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.21:0  br i1 %tmp_20_20, label %.preheader9.22, label %34

ST_48: StgValue_568 (578)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.22:0  br i1 %tmp_20_21, label %.preheader9.23, label %35

ST_48: StgValue_569 (587)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.23:0  br i1 %tmp_20_22, label %.preheader9.24, label %36

ST_48: StgValue_570 (596)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.24:0  br i1 %tmp_20_23, label %.preheader9.25, label %37

ST_48: a_3_load (598)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load = load float* %a_3_addr_7, align 4

ST_48: StgValue_572 (605)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.25:0  br i1 %tmp_20_24, label %.preheader9.26, label %38

ST_48: StgValue_573 (614)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.26:0  br i1 %tmp_20_25, label %.preheader9.27, label %39

ST_48: StgValue_574 (623)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.27:0  br i1 %tmp_20_26, label %.preheader9.28, label %40

ST_48: StgValue_575 (632)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.28:0  br i1 %tmp_20_27, label %.preheader9.29, label %41

ST_48: StgValue_576 (641)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.29:0  br i1 %tmp_20_28, label %.preheader9.30, label %42

ST_48: StgValue_577 (650)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.30:0  br i1 %tmp_20_29, label %.preheader9.31, label %43

ST_48: StgValue_578 (659)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.31:0  br i1 %tmp_20_30, label %.preheader9.32, label %44

ST_48: tmp_18_neg (668)  [1/1] 1.37ns  loc: minver.c:101
.preheader9.32:0  %tmp_18_neg = xor i32 %w_1_to_int, -2147483648

ST_48: tmp_17 (669)  [1/1] 0.00ns  loc: minver.c:101
.preheader9.32:1  %tmp_17 = bitcast i32 %tmp_18_neg to float

ST_48: tmp_18 (670)  [16/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot

ST_48: StgValue_582 (671)  [1/1] 2.33ns  loc: minver.c:101
.preheader9.32:3  switch i3 %arrayNo2, label %branch263 [
    i3 0, label %branch260
    i3 1, label %branch261
    i3 2, label %branch262
  ]

ST_48: StgValue_583 (685)  [1/1] 0.00ns  loc: minver.c:102
.preheader9.32348:0  br label %._crit_edge18


 <State 49>: 8.49ns
ST_49: a_0_load (382)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load = load float* %a_0_addr_7, align 4

ST_49: tmp_32 (383)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_49: a_0_load_2 (391)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_2 = load float* %a_0_addr_9, align 4

ST_49: a_1_load (454)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load = load float* %a_1_addr_7, align 4

ST_49: tmp_22_8 (455)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_1_load

ST_49: a_1_load_2 (463)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_2 = load float* %a_1_addr_9, align 4

ST_49: a_2_load (526)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load = load float* %a_2_addr_7, align 4

ST_49: tmp_22_15 (527)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_15 = fmul float %w_1, %a_2_load

ST_49: a_2_load_2 (535)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_2 = load float* %a_2_addr_9, align 4

ST_49: a_3_load (598)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load = load float* %a_3_addr_7, align 4

ST_49: tmp_22_23 (599)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_23 = fmul float %w_1, %a_3_load

ST_49: a_3_load_2 (607)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_2 = load float* %a_3_addr_9, align 4

ST_49: tmp_18 (670)  [15/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 50>: 8.49ns
ST_50: tmp_32 (383)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_50: a_0_load_2 (391)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_2 = load float* %a_0_addr_9, align 4

ST_50: tmp_22_1 (392)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_50: a_0_load_4 (400)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_4 = load float* %a_0_addr_11, align 4

ST_50: tmp_22_8 (455)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_1_load

ST_50: a_1_load_2 (463)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_2 = load float* %a_1_addr_9, align 4

ST_50: tmp_22_9 (464)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_1_load_2

ST_50: a_1_load_4 (472)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_4 = load float* %a_1_addr_11, align 4

ST_50: tmp_22_15 (527)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_15 = fmul float %w_1, %a_2_load

ST_50: a_2_load_2 (535)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_2 = load float* %a_2_addr_9, align 4

ST_50: tmp_22_16 (536)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_16 = fmul float %w_1, %a_2_load_2

ST_50: a_2_load_4 (544)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_4 = load float* %a_2_addr_11, align 4

ST_50: tmp_22_23 (599)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_23 = fmul float %w_1, %a_3_load

ST_50: a_3_load_2 (607)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_2 = load float* %a_3_addr_9, align 4

ST_50: tmp_22_24 (608)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_24 = fmul float %w_1, %a_3_load_2

ST_50: a_3_load_4 (616)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_4 = load float* %a_3_addr_11, align 4

ST_50: tmp_18 (670)  [14/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 51>: 8.49ns
ST_51: tmp_32 (383)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_51: tmp_22_1 (392)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_51: a_0_load_4 (400)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_4 = load float* %a_0_addr_11, align 4

ST_51: tmp_22_2 (401)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_51: a_0_load_6 (409)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_6 = load float* %a_0_addr_13, align 4

ST_51: tmp_22_8 (455)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_1_load

ST_51: tmp_22_9 (464)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_1_load_2

ST_51: a_1_load_4 (472)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_4 = load float* %a_1_addr_11, align 4

ST_51: tmp_22_s (473)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_1_load_4

ST_51: a_1_load_6 (481)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_6 = load float* %a_1_addr_13, align 4

ST_51: tmp_22_15 (527)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_15 = fmul float %w_1, %a_2_load

ST_51: tmp_22_16 (536)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_16 = fmul float %w_1, %a_2_load_2

ST_51: a_2_load_4 (544)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_4 = load float* %a_2_addr_11, align 4

ST_51: tmp_22_17 (545)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_17 = fmul float %w_1, %a_2_load_4

ST_51: a_2_load_6 (553)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_6 = load float* %a_2_addr_13, align 4

ST_51: tmp_22_23 (599)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_23 = fmul float %w_1, %a_3_load

ST_51: tmp_22_24 (608)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_24 = fmul float %w_1, %a_3_load_2

ST_51: a_3_load_4 (616)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_4 = load float* %a_3_addr_11, align 4

ST_51: tmp_22_25 (617)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_25 = fmul float %w_1, %a_3_load_4

ST_51: a_3_load_6 (625)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_6 = load float* %a_3_addr_13, align 4

ST_51: tmp_18 (670)  [13/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 52>: 8.49ns
ST_52: tmp_32 (383)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_52: tmp_22_1 (392)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_52: tmp_22_2 (401)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_52: a_0_load_6 (409)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_6 = load float* %a_0_addr_13, align 4

ST_52: tmp_22_3 (410)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_52: a_0_load_8 (418)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_8 = load float* %a_0_addr_15, align 4

ST_52: tmp_22_8 (455)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_1_load

ST_52: tmp_22_9 (464)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_1_load_2

ST_52: tmp_22_s (473)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_1_load_4

ST_52: a_1_load_6 (481)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_6 = load float* %a_1_addr_13, align 4

ST_52: tmp_22_10 (482)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_1_load_6

ST_52: a_1_load_8 (490)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_8 = load float* %a_1_addr_15, align 4

ST_52: tmp_22_15 (527)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_15 = fmul float %w_1, %a_2_load

ST_52: tmp_22_16 (536)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_16 = fmul float %w_1, %a_2_load_2

ST_52: tmp_22_17 (545)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_17 = fmul float %w_1, %a_2_load_4

ST_52: a_2_load_6 (553)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_6 = load float* %a_2_addr_13, align 4

ST_52: tmp_22_18 (554)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_18 = fmul float %w_1, %a_2_load_6

ST_52: a_2_load_8 (562)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_8 = load float* %a_2_addr_15, align 4

ST_52: tmp_22_23 (599)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_23 = fmul float %w_1, %a_3_load

ST_52: tmp_22_24 (608)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_24 = fmul float %w_1, %a_3_load_2

ST_52: tmp_22_25 (617)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_25 = fmul float %w_1, %a_3_load_4

ST_52: a_3_load_6 (625)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_6 = load float* %a_3_addr_13, align 4

ST_52: tmp_22_26 (626)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_26 = fmul float %w_1, %a_3_load_6

ST_52: a_3_load_8 (634)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_8 = load float* %a_3_addr_15, align 4

ST_52: tmp_18 (670)  [12/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 53>: 8.49ns
ST_53: tmp_22_1 (392)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_53: tmp_22_2 (401)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_53: tmp_22_3 (410)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_53: a_0_load_8 (418)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_8 = load float* %a_0_addr_15, align 4

ST_53: tmp_22_4 (419)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_0_load_8

ST_53: a_0_load_10 (427)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_10 = load float* %a_0_addr_17, align 4

ST_53: tmp_22_9 (464)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_1_load_2

ST_53: tmp_22_s (473)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_1_load_4

ST_53: tmp_22_10 (482)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_1_load_6

ST_53: a_1_load_8 (490)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_8 = load float* %a_1_addr_15, align 4

ST_53: tmp_22_11 (491)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_1_load_8

ST_53: a_1_load_10 (499)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_10 = load float* %a_1_addr_17, align 4

ST_53: tmp_22_16 (536)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_16 = fmul float %w_1, %a_2_load_2

ST_53: tmp_22_17 (545)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_17 = fmul float %w_1, %a_2_load_4

ST_53: tmp_22_18 (554)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_18 = fmul float %w_1, %a_2_load_6

ST_53: a_2_load_8 (562)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_8 = load float* %a_2_addr_15, align 4

ST_53: tmp_22_19 (563)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_19 = fmul float %w_1, %a_2_load_8

ST_53: a_2_load_10 (571)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_10 = load float* %a_2_addr_17, align 4

ST_53: tmp_22_24 (608)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_24 = fmul float %w_1, %a_3_load_2

ST_53: tmp_22_25 (617)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_25 = fmul float %w_1, %a_3_load_4

ST_53: tmp_22_26 (626)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_26 = fmul float %w_1, %a_3_load_6

ST_53: a_3_load_8 (634)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_8 = load float* %a_3_addr_15, align 4

ST_53: tmp_22_27 (635)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_27 = fmul float %w_1, %a_3_load_8

ST_53: a_3_load_10 (643)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_10 = load float* %a_3_addr_17, align 4

ST_53: tmp_18 (670)  [11/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 54>: 8.49ns
ST_54: tmp_22_2 (401)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_54: tmp_22_3 (410)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_54: tmp_22_4 (419)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_0_load_8

ST_54: a_0_load_10 (427)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_10 = load float* %a_0_addr_17, align 4

ST_54: tmp_22_5 (428)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_0_load_10

ST_54: a_0_load_12 (436)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_12 = load float* %a_0_addr_19, align 4

ST_54: tmp_22_s (473)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_1_load_4

ST_54: tmp_22_10 (482)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_1_load_6

ST_54: tmp_22_11 (491)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_1_load_8

ST_54: a_1_load_10 (499)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_10 = load float* %a_1_addr_17, align 4

ST_54: tmp_22_12 (500)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_1_load_10

ST_54: a_1_load_12 (508)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_12 = load float* %a_1_addr_19, align 4

ST_54: tmp_22_17 (545)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_17 = fmul float %w_1, %a_2_load_4

ST_54: tmp_22_18 (554)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_18 = fmul float %w_1, %a_2_load_6

ST_54: tmp_22_19 (563)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_19 = fmul float %w_1, %a_2_load_8

ST_54: a_2_load_10 (571)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_10 = load float* %a_2_addr_17, align 4

ST_54: tmp_22_20 (572)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_20 = fmul float %w_1, %a_2_load_10

ST_54: a_2_load_12 (580)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_12 = load float* %a_2_addr_19, align 4

ST_54: tmp_22_25 (617)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_25 = fmul float %w_1, %a_3_load_4

ST_54: tmp_22_26 (626)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_26 = fmul float %w_1, %a_3_load_6

ST_54: tmp_22_27 (635)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_27 = fmul float %w_1, %a_3_load_8

ST_54: a_3_load_10 (643)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_10 = load float* %a_3_addr_17, align 4

ST_54: tmp_22_28 (644)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_28 = fmul float %w_1, %a_3_load_10

ST_54: a_3_load_12 (652)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_12 = load float* %a_3_addr_19, align 4

ST_54: tmp_18 (670)  [10/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 55>: 8.49ns
ST_55: tmp_22_3 (410)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_55: tmp_22_4 (419)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_0_load_8

ST_55: tmp_22_5 (428)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_0_load_10

ST_55: a_0_load_12 (436)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_12 = load float* %a_0_addr_19, align 4

ST_55: tmp_22_6 (437)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_0_load_12

ST_55: a_0_load_14 (445)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_14 = load float* %a_0_addr_21, align 4

ST_55: tmp_22_10 (482)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_1_load_6

ST_55: tmp_22_11 (491)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_1_load_8

ST_55: tmp_22_12 (500)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_1_load_10

ST_55: a_1_load_12 (508)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_12 = load float* %a_1_addr_19, align 4

ST_55: tmp_22_13 (509)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_1_load_12

ST_55: a_1_load_14 (517)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_14 = load float* %a_1_addr_21, align 4

ST_55: tmp_22_18 (554)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_18 = fmul float %w_1, %a_2_load_6

ST_55: tmp_22_19 (563)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_19 = fmul float %w_1, %a_2_load_8

ST_55: tmp_22_20 (572)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_20 = fmul float %w_1, %a_2_load_10

ST_55: a_2_load_12 (580)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_12 = load float* %a_2_addr_19, align 4

ST_55: tmp_22_21 (581)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_21 = fmul float %w_1, %a_2_load_12

ST_55: a_2_load_14 (589)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_14 = load float* %a_2_addr_21, align 4

ST_55: tmp_22_26 (626)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_26 = fmul float %w_1, %a_3_load_6

ST_55: tmp_22_27 (635)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_27 = fmul float %w_1, %a_3_load_8

ST_55: tmp_22_28 (644)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_28 = fmul float %w_1, %a_3_load_10

ST_55: a_3_load_12 (652)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_12 = load float* %a_3_addr_19, align 4

ST_55: tmp_22_29 (653)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_29 = fmul float %w_1, %a_3_load_12

ST_55: a_3_load_14 (661)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_14 = load float* %a_3_addr_21, align 4

ST_55: tmp_18 (670)  [9/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 56>: 8.49ns
ST_56: tmp_81 (314)  [1/1] 0.00ns  loc: minver.c:93
:0  %tmp_81 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_3, i3 0)

ST_56: tmp_82 (315)  [1/1] 0.00ns  loc: minver.c:96
:1  %tmp_82 = zext i9 %tmp_81 to i64

ST_56: tmp_83 (316)  [1/1] 0.00ns  loc: minver.c:93
:2  %tmp_83 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %i_3, i3 %tmp_42)

ST_56: a_0_addr_8 (319)  [1/1] 0.00ns  loc: minver.c:96
:5  %a_0_addr_8 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_82

ST_56: a_1_addr_8 (342)  [1/1] 0.00ns  loc: minver.c:96
:28  %a_1_addr_8 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_82

ST_56: a_2_addr_8 (351)  [1/1] 0.00ns  loc: minver.c:96
:37  %a_2_addr_8 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_82

ST_56: a_3_addr_8 (360)  [1/1] 0.00ns  loc: minver.c:96
:46  %a_3_addr_8 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_82

ST_56: a_0_load_1 (384)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_1 = load float* %a_0_addr_8, align 4

ST_56: tmp_22_4 (419)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_0_load_8

ST_56: tmp_22_5 (428)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_0_load_10

ST_56: tmp_22_6 (437)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_0_load_12

ST_56: a_0_load_14 (445)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_14 = load float* %a_0_addr_21, align 4

ST_56: tmp_22_7 (446)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_0_load_14

ST_56: a_1_load_1 (456)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_1 = load float* %a_1_addr_8, align 4

ST_56: tmp_22_11 (491)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_1_load_8

ST_56: tmp_22_12 (500)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_1_load_10

ST_56: tmp_22_13 (509)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_1_load_12

ST_56: a_1_load_14 (517)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_14 = load float* %a_1_addr_21, align 4

ST_56: tmp_22_14 (518)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_1_load_14

ST_56: a_2_load_1 (528)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_1 = load float* %a_2_addr_8, align 4

ST_56: tmp_22_19 (563)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_19 = fmul float %w_1, %a_2_load_8

ST_56: tmp_22_20 (572)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_20 = fmul float %w_1, %a_2_load_10

ST_56: tmp_22_21 (581)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_21 = fmul float %w_1, %a_2_load_12

ST_56: a_2_load_14 (589)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_14 = load float* %a_2_addr_21, align 4

ST_56: tmp_22_22 (590)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_22 = fmul float %w_1, %a_2_load_14

ST_56: a_3_load_1 (600)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_1 = load float* %a_3_addr_8, align 4

ST_56: tmp_22_27 (635)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_27 = fmul float %w_1, %a_3_load_8

ST_56: tmp_22_28 (644)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_28 = fmul float %w_1, %a_3_load_10

ST_56: tmp_22_29 (653)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_29 = fmul float %w_1, %a_3_load_12

ST_56: a_3_load_14 (661)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_14 = load float* %a_3_addr_21, align 4

ST_56: tmp_22_30 (662)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_30 = fmul float %w_1, %a_3_load_14

ST_56: tmp_18 (670)  [8/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 57>: 6.30ns
ST_57: tmp_90 (320)  [1/1] 0.00ns  loc: minver.c:93
:6  %tmp_90 = or i9 %tmp_81, 1

ST_57: tmp_91 (321)  [1/1] 0.00ns  loc: minver.c:93
:7  %tmp_91 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_90)

ST_57: a_0_addr_10 (322)  [1/1] 0.00ns  loc: minver.c:93
:8  %a_0_addr_10 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_91

ST_57: a_1_addr_10 (343)  [1/1] 0.00ns  loc: minver.c:93
:29  %a_1_addr_10 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_91

ST_57: a_2_addr_10 (352)  [1/1] 0.00ns  loc: minver.c:93
:38  %a_2_addr_10 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_91

ST_57: a_3_addr_10 (361)  [1/1] 0.00ns  loc: minver.c:93
:47  %a_3_addr_10 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_91

ST_57: a_0_load_1 (384)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_1 = load float* %a_0_addr_8, align 4

ST_57: a_0_load_3 (393)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_3 = load float* %a_0_addr_10, align 4

ST_57: tmp_22_5 (428)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_0_load_10

ST_57: tmp_22_6 (437)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_0_load_12

ST_57: tmp_22_7 (446)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_0_load_14

ST_57: a_1_load_1 (456)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_1 = load float* %a_1_addr_8, align 4

ST_57: a_1_load_3 (465)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_3 = load float* %a_1_addr_10, align 4

ST_57: tmp_22_12 (500)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_1_load_10

ST_57: tmp_22_13 (509)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_1_load_12

ST_57: tmp_22_14 (518)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_1_load_14

ST_57: a_2_load_1 (528)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_1 = load float* %a_2_addr_8, align 4

ST_57: a_2_load_3 (537)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_3 = load float* %a_2_addr_10, align 4

ST_57: tmp_22_20 (572)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_20 = fmul float %w_1, %a_2_load_10

ST_57: tmp_22_21 (581)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_21 = fmul float %w_1, %a_2_load_12

ST_57: tmp_22_22 (590)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_22 = fmul float %w_1, %a_2_load_14

ST_57: a_3_load_1 (600)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_1 = load float* %a_3_addr_8, align 4

ST_57: a_3_load_3 (609)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_3 = load float* %a_3_addr_10, align 4

ST_57: tmp_22_28 (644)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_28 = fmul float %w_1, %a_3_load_10

ST_57: tmp_22_29 (653)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_29 = fmul float %w_1, %a_3_load_12

ST_57: tmp_22_30 (662)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_30 = fmul float %w_1, %a_3_load_14

ST_57: tmp_18 (670)  [7/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 58>: 8.26ns
ST_58: tmp_92 (323)  [1/1] 0.00ns  loc: minver.c:93
:9  %tmp_92 = or i9 %tmp_81, 2

ST_58: tmp_93 (324)  [1/1] 0.00ns  loc: minver.c:93
:10  %tmp_93 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_92)

ST_58: a_0_addr_12 (325)  [1/1] 0.00ns  loc: minver.c:93
:11  %a_0_addr_12 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_93

ST_58: a_1_addr_12 (344)  [1/1] 0.00ns  loc: minver.c:93
:30  %a_1_addr_12 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_93

ST_58: a_2_addr_12 (353)  [1/1] 0.00ns  loc: minver.c:93
:39  %a_2_addr_12 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_93

ST_58: a_3_addr_12 (362)  [1/1] 0.00ns  loc: minver.c:93
:48  %a_3_addr_12 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_93

ST_58: tmp_33 (385)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_58: a_0_load_3 (393)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_3 = load float* %a_0_addr_10, align 4

ST_58: a_0_load_5 (402)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_5 = load float* %a_0_addr_12, align 4

ST_58: tmp_22_6 (437)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_0_load_12

ST_58: tmp_22_7 (446)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_0_load_14

ST_58: tmp_23_8 (457)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_1_load_1, %tmp_22_8

ST_58: a_1_load_3 (465)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_3 = load float* %a_1_addr_10, align 4

ST_58: a_1_load_5 (474)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_5 = load float* %a_1_addr_12, align 4

ST_58: tmp_22_13 (509)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_1_load_12

ST_58: tmp_22_14 (518)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_1_load_14

ST_58: tmp_23_15 (529)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_15 = fsub float %a_2_load_1, %tmp_22_15

ST_58: a_2_load_3 (537)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_3 = load float* %a_2_addr_10, align 4

ST_58: a_2_load_5 (546)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_5 = load float* %a_2_addr_12, align 4

ST_58: tmp_22_21 (581)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_21 = fmul float %w_1, %a_2_load_12

ST_58: tmp_22_22 (590)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_22 = fmul float %w_1, %a_2_load_14

ST_58: tmp_23_23 (601)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_23 = fsub float %a_3_load_1, %tmp_22_23

ST_58: a_3_load_3 (609)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_3 = load float* %a_3_addr_10, align 4

ST_58: a_3_load_5 (618)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_5 = load float* %a_3_addr_12, align 4

ST_58: tmp_22_29 (653)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_29 = fmul float %w_1, %a_3_load_12

ST_58: tmp_22_30 (662)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_30 = fmul float %w_1, %a_3_load_14

ST_58: tmp_18 (670)  [6/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 59>: 8.26ns
ST_59: tmp_94 (326)  [1/1] 0.00ns  loc: minver.c:93
:12  %tmp_94 = or i9 %tmp_81, 3

ST_59: tmp_95 (327)  [1/1] 0.00ns  loc: minver.c:93
:13  %tmp_95 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_94)

ST_59: a_0_addr_14 (328)  [1/1] 0.00ns  loc: minver.c:93
:14  %a_0_addr_14 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_95

ST_59: a_1_addr_14 (345)  [1/1] 0.00ns  loc: minver.c:93
:31  %a_1_addr_14 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_95

ST_59: a_2_addr_14 (354)  [1/1] 0.00ns  loc: minver.c:93
:40  %a_2_addr_14 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_95

ST_59: a_3_addr_14 (363)  [1/1] 0.00ns  loc: minver.c:93
:49  %a_3_addr_14 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_95

ST_59: tmp_33 (385)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_59: tmp_23_1 (394)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_59: a_0_load_5 (402)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_5 = load float* %a_0_addr_12, align 4

ST_59: a_0_load_7 (411)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_7 = load float* %a_0_addr_14, align 4

ST_59: tmp_22_7 (446)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_0_load_14

ST_59: tmp_23_8 (457)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_1_load_1, %tmp_22_8

ST_59: tmp_23_9 (466)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_1_load_3, %tmp_22_9

ST_59: a_1_load_5 (474)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_5 = load float* %a_1_addr_12, align 4

ST_59: a_1_load_7 (483)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_7 = load float* %a_1_addr_14, align 4

ST_59: tmp_22_14 (518)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_1_load_14

ST_59: tmp_23_15 (529)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_15 = fsub float %a_2_load_1, %tmp_22_15

ST_59: tmp_23_16 (538)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_16 = fsub float %a_2_load_3, %tmp_22_16

ST_59: a_2_load_5 (546)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_5 = load float* %a_2_addr_12, align 4

ST_59: a_2_load_7 (555)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_7 = load float* %a_2_addr_14, align 4

ST_59: tmp_22_22 (590)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_22 = fmul float %w_1, %a_2_load_14

ST_59: tmp_23_23 (601)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_23 = fsub float %a_3_load_1, %tmp_22_23

ST_59: tmp_23_24 (610)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_24 = fsub float %a_3_load_3, %tmp_22_24

ST_59: a_3_load_5 (618)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_5 = load float* %a_3_addr_12, align 4

ST_59: a_3_load_7 (627)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_7 = load float* %a_3_addr_14, align 4

ST_59: tmp_22_30 (662)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_30 = fmul float %w_1, %a_3_load_14

ST_59: tmp_18 (670)  [5/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 60>: 8.26ns
ST_60: tmp_96 (329)  [1/1] 0.00ns  loc: minver.c:93
:15  %tmp_96 = or i9 %tmp_81, 4

ST_60: tmp_97 (330)  [1/1] 0.00ns  loc: minver.c:93
:16  %tmp_97 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_96)

ST_60: a_0_addr_16 (331)  [1/1] 0.00ns  loc: minver.c:93
:17  %a_0_addr_16 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_97

ST_60: a_1_addr_16 (346)  [1/1] 0.00ns  loc: minver.c:93
:32  %a_1_addr_16 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_97

ST_60: a_2_addr_16 (355)  [1/1] 0.00ns  loc: minver.c:93
:41  %a_2_addr_16 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_97

ST_60: a_3_addr_16 (364)  [1/1] 0.00ns  loc: minver.c:93
:50  %a_3_addr_16 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_97

ST_60: tmp_33 (385)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_60: tmp_23_1 (394)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_60: tmp_23_2 (403)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_60: a_0_load_7 (411)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_7 = load float* %a_0_addr_14, align 4

ST_60: a_0_load_9 (420)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_9 = load float* %a_0_addr_16, align 4

ST_60: tmp_23_8 (457)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_1_load_1, %tmp_22_8

ST_60: tmp_23_9 (466)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_1_load_3, %tmp_22_9

ST_60: tmp_23_s (475)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_1_load_5, %tmp_22_s

ST_60: a_1_load_7 (483)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_7 = load float* %a_1_addr_14, align 4

ST_60: a_1_load_9 (492)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_9 = load float* %a_1_addr_16, align 4

ST_60: tmp_23_15 (529)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_15 = fsub float %a_2_load_1, %tmp_22_15

ST_60: tmp_23_16 (538)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_16 = fsub float %a_2_load_3, %tmp_22_16

ST_60: tmp_23_17 (547)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_17 = fsub float %a_2_load_5, %tmp_22_17

ST_60: a_2_load_7 (555)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_7 = load float* %a_2_addr_14, align 4

ST_60: a_2_load_9 (564)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_9 = load float* %a_2_addr_16, align 4

ST_60: tmp_23_23 (601)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_23 = fsub float %a_3_load_1, %tmp_22_23

ST_60: tmp_23_24 (610)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_24 = fsub float %a_3_load_3, %tmp_22_24

ST_60: tmp_23_25 (619)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_25 = fsub float %a_3_load_5, %tmp_22_25

ST_60: a_3_load_7 (627)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_7 = load float* %a_3_addr_14, align 4

ST_60: a_3_load_9 (636)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_9 = load float* %a_3_addr_16, align 4

ST_60: tmp_18 (670)  [4/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 61>: 8.26ns
ST_61: tmp_98 (332)  [1/1] 0.00ns  loc: minver.c:93
:18  %tmp_98 = or i9 %tmp_81, 5

ST_61: tmp_99 (333)  [1/1] 0.00ns  loc: minver.c:93
:19  %tmp_99 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_98)

ST_61: a_0_addr_18 (334)  [1/1] 0.00ns  loc: minver.c:93
:20  %a_0_addr_18 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_99

ST_61: a_1_addr_18 (347)  [1/1] 0.00ns  loc: minver.c:93
:33  %a_1_addr_18 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_99

ST_61: a_2_addr_18 (356)  [1/1] 0.00ns  loc: minver.c:93
:42  %a_2_addr_18 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_99

ST_61: a_3_addr_18 (365)  [1/1] 0.00ns  loc: minver.c:93
:51  %a_3_addr_18 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_99

ST_61: tmp_33 (385)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_61: tmp_23_1 (394)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_61: tmp_23_2 (403)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_61: tmp_23_3 (412)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_61: a_0_load_9 (420)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_9 = load float* %a_0_addr_16, align 4

ST_61: a_0_load_11 (429)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_11 = load float* %a_0_addr_18, align 4

ST_61: tmp_23_8 (457)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_1_load_1, %tmp_22_8

ST_61: tmp_23_9 (466)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_1_load_3, %tmp_22_9

ST_61: tmp_23_s (475)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_1_load_5, %tmp_22_s

ST_61: tmp_23_10 (484)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_1_load_7, %tmp_22_10

ST_61: a_1_load_9 (492)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_9 = load float* %a_1_addr_16, align 4

ST_61: a_1_load_11 (501)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_11 = load float* %a_1_addr_18, align 4

ST_61: tmp_23_15 (529)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_15 = fsub float %a_2_load_1, %tmp_22_15

ST_61: tmp_23_16 (538)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_16 = fsub float %a_2_load_3, %tmp_22_16

ST_61: tmp_23_17 (547)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_17 = fsub float %a_2_load_5, %tmp_22_17

ST_61: tmp_23_18 (556)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_18 = fsub float %a_2_load_7, %tmp_22_18

ST_61: a_2_load_9 (564)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_9 = load float* %a_2_addr_16, align 4

ST_61: a_2_load_11 (573)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_11 = load float* %a_2_addr_18, align 4

ST_61: tmp_23_23 (601)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_23 = fsub float %a_3_load_1, %tmp_22_23

ST_61: tmp_23_24 (610)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_24 = fsub float %a_3_load_3, %tmp_22_24

ST_61: tmp_23_25 (619)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_25 = fsub float %a_3_load_5, %tmp_22_25

ST_61: tmp_23_26 (628)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_26 = fsub float %a_3_load_7, %tmp_22_26

ST_61: a_3_load_9 (636)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_9 = load float* %a_3_addr_16, align 4

ST_61: a_3_load_11 (645)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_11 = load float* %a_3_addr_18, align 4

ST_61: tmp_18 (670)  [3/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 62>: 8.26ns
ST_62: tmp_100 (335)  [1/1] 0.00ns  loc: minver.c:93
:21  %tmp_100 = or i9 %tmp_81, 6

ST_62: tmp_101 (336)  [1/1] 0.00ns  loc: minver.c:93
:22  %tmp_101 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_100)

ST_62: a_0_addr_20 (337)  [1/1] 0.00ns  loc: minver.c:93
:23  %a_0_addr_20 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_101

ST_62: a_1_addr_20 (348)  [1/1] 0.00ns  loc: minver.c:93
:34  %a_1_addr_20 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_101

ST_62: a_2_addr_20 (357)  [1/1] 0.00ns  loc: minver.c:93
:43  %a_2_addr_20 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_101

ST_62: a_3_addr_20 (366)  [1/1] 0.00ns  loc: minver.c:93
:52  %a_3_addr_20 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_101

ST_62: tmp_33 (385)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_62: tmp_23_1 (394)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_62: tmp_23_2 (403)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_62: tmp_23_3 (412)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_62: tmp_23_4 (421)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_0_load_9, %tmp_22_4

ST_62: a_0_load_11 (429)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_11 = load float* %a_0_addr_18, align 4

ST_62: a_0_load_13 (438)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_13 = load float* %a_0_addr_20, align 4

ST_62: tmp_23_8 (457)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_1_load_1, %tmp_22_8

ST_62: tmp_23_9 (466)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_1_load_3, %tmp_22_9

ST_62: tmp_23_s (475)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_1_load_5, %tmp_22_s

ST_62: tmp_23_10 (484)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_1_load_7, %tmp_22_10

ST_62: tmp_23_11 (493)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_1_load_9, %tmp_22_11

ST_62: a_1_load_11 (501)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_11 = load float* %a_1_addr_18, align 4

ST_62: a_1_load_13 (510)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_13 = load float* %a_1_addr_20, align 4

ST_62: tmp_23_15 (529)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_15 = fsub float %a_2_load_1, %tmp_22_15

ST_62: tmp_23_16 (538)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_16 = fsub float %a_2_load_3, %tmp_22_16

ST_62: tmp_23_17 (547)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_17 = fsub float %a_2_load_5, %tmp_22_17

ST_62: tmp_23_18 (556)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_18 = fsub float %a_2_load_7, %tmp_22_18

ST_62: tmp_23_19 (565)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_19 = fsub float %a_2_load_9, %tmp_22_19

ST_62: a_2_load_11 (573)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_11 = load float* %a_2_addr_18, align 4

ST_62: a_2_load_13 (582)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_13 = load float* %a_2_addr_20, align 4

ST_62: tmp_23_23 (601)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_23 = fsub float %a_3_load_1, %tmp_22_23

ST_62: tmp_23_24 (610)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_24 = fsub float %a_3_load_3, %tmp_22_24

ST_62: tmp_23_25 (619)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_25 = fsub float %a_3_load_5, %tmp_22_25

ST_62: tmp_23_26 (628)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_26 = fsub float %a_3_load_7, %tmp_22_26

ST_62: tmp_23_27 (637)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_27 = fsub float %a_3_load_9, %tmp_22_27

ST_62: a_3_load_11 (645)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_11 = load float* %a_3_addr_18, align 4

ST_62: a_3_load_13 (654)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_13 = load float* %a_3_addr_20, align 4

ST_62: tmp_18 (670)  [2/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 63>: 8.26ns
ST_63: tmp_102 (338)  [1/1] 0.00ns  loc: minver.c:93
:24  %tmp_102 = or i9 %tmp_81, 7

ST_63: tmp_103 (339)  [1/1] 0.00ns  loc: minver.c:93
:25  %tmp_103 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %tmp_102)

ST_63: a_0_addr_22 (340)  [1/1] 0.00ns  loc: minver.c:93
:26  %a_0_addr_22 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_103

ST_63: a_1_addr_22 (349)  [1/1] 0.00ns  loc: minver.c:93
:35  %a_1_addr_22 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_103

ST_63: a_2_addr_22 (358)  [1/1] 0.00ns  loc: minver.c:93
:44  %a_2_addr_22 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_103

ST_63: a_3_addr_22 (367)  [1/1] 0.00ns  loc: minver.c:93
:53  %a_3_addr_22 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_103

ST_63: tmp_23_1 (394)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_63: tmp_23_2 (403)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_63: tmp_23_3 (412)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_63: tmp_23_4 (421)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_0_load_9, %tmp_22_4

ST_63: tmp_23_5 (430)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_0_load_11, %tmp_22_5

ST_63: a_0_load_13 (438)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_13 = load float* %a_0_addr_20, align 4

ST_63: a_0_load_15 (447)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_15 = load float* %a_0_addr_22, align 4

ST_63: tmp_23_9 (466)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_1_load_3, %tmp_22_9

ST_63: tmp_23_s (475)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_1_load_5, %tmp_22_s

ST_63: tmp_23_10 (484)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_1_load_7, %tmp_22_10

ST_63: tmp_23_11 (493)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_1_load_9, %tmp_22_11

ST_63: tmp_23_12 (502)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_1_load_11, %tmp_22_12

ST_63: a_1_load_13 (510)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_13 = load float* %a_1_addr_20, align 4

ST_63: a_1_load_15 (519)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_15 = load float* %a_1_addr_22, align 4

ST_63: tmp_23_16 (538)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_16 = fsub float %a_2_load_3, %tmp_22_16

ST_63: tmp_23_17 (547)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_17 = fsub float %a_2_load_5, %tmp_22_17

ST_63: tmp_23_18 (556)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_18 = fsub float %a_2_load_7, %tmp_22_18

ST_63: tmp_23_19 (565)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_19 = fsub float %a_2_load_9, %tmp_22_19

ST_63: tmp_23_20 (574)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_20 = fsub float %a_2_load_11, %tmp_22_20

ST_63: a_2_load_13 (582)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_13 = load float* %a_2_addr_20, align 4

ST_63: a_2_load_15 (591)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_15 = load float* %a_2_addr_22, align 4

ST_63: tmp_23_24 (610)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_24 = fsub float %a_3_load_3, %tmp_22_24

ST_63: tmp_23_25 (619)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_25 = fsub float %a_3_load_5, %tmp_22_25

ST_63: tmp_23_26 (628)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_26 = fsub float %a_3_load_7, %tmp_22_26

ST_63: tmp_23_27 (637)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_27 = fsub float %a_3_load_9, %tmp_22_27

ST_63: tmp_23_28 (646)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_28 = fsub float %a_3_load_11, %tmp_22_28

ST_63: a_3_load_13 (654)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_13 = load float* %a_3_addr_20, align 4

ST_63: a_3_load_15 (663)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_15 = load float* %a_3_addr_22, align 4

ST_63: tmp_18 (670)  [1/16] 6.30ns  loc: minver.c:101
.preheader9.32:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 64>: 8.26ns
ST_64: StgValue_976 (386)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_33, float* %a_0_addr_8, align 4

ST_64: StgValue_977 (387)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.1

ST_64: tmp_23_2 (403)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_64: tmp_23_3 (412)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_64: tmp_23_4 (421)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_0_load_9, %tmp_22_4

ST_64: tmp_23_5 (430)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_0_load_11, %tmp_22_5

ST_64: tmp_23_6 (439)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_0_load_13, %tmp_22_6

ST_64: a_0_load_15 (447)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_15 = load float* %a_0_addr_22, align 4

ST_64: StgValue_984 (458)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_8, float* %a_1_addr_8, align 4

ST_64: StgValue_985 (459)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.9

ST_64: tmp_23_s (475)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_1_load_5, %tmp_22_s

ST_64: tmp_23_10 (484)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_1_load_7, %tmp_22_10

ST_64: tmp_23_11 (493)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_1_load_9, %tmp_22_11

ST_64: tmp_23_12 (502)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_1_load_11, %tmp_22_12

ST_64: tmp_23_13 (511)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_1_load_13, %tmp_22_13

ST_64: a_1_load_15 (519)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_15 = load float* %a_1_addr_22, align 4

ST_64: StgValue_992 (530)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_15, float* %a_2_addr_8, align 4

ST_64: StgValue_993 (531)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.17

ST_64: tmp_23_17 (547)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_17 = fsub float %a_2_load_5, %tmp_22_17

ST_64: tmp_23_18 (556)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_18 = fsub float %a_2_load_7, %tmp_22_18

ST_64: tmp_23_19 (565)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_19 = fsub float %a_2_load_9, %tmp_22_19

ST_64: tmp_23_20 (574)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_20 = fsub float %a_2_load_11, %tmp_22_20

ST_64: tmp_23_21 (583)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_21 = fsub float %a_2_load_13, %tmp_22_21

ST_64: a_2_load_15 (591)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_15 = load float* %a_2_addr_22, align 4

ST_64: StgValue_1000 (602)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_23, float* %a_3_addr_8, align 4

ST_64: StgValue_1001 (603)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.25

ST_64: tmp_23_25 (619)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_25 = fsub float %a_3_load_5, %tmp_22_25

ST_64: tmp_23_26 (628)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_26 = fsub float %a_3_load_7, %tmp_22_26

ST_64: tmp_23_27 (637)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_27 = fsub float %a_3_load_9, %tmp_22_27

ST_64: tmp_23_28 (646)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_28 = fsub float %a_3_load_11, %tmp_22_28

ST_64: tmp_23_29 (655)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_29 = fsub float %a_3_load_13, %tmp_22_29

ST_64: a_3_load_15 (663)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_15 = load float* %a_3_addr_22, align 4


 <State 65>: 8.26ns
ST_65: StgValue_1008 (395)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_1, float* %a_0_addr_10, align 4

ST_65: StgValue_1009 (396)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.2

ST_65: tmp_23_3 (412)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_65: tmp_23_4 (421)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_0_load_9, %tmp_22_4

ST_65: tmp_23_5 (430)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_0_load_11, %tmp_22_5

ST_65: tmp_23_6 (439)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_0_load_13, %tmp_22_6

ST_65: tmp_23_7 (448)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_0_load_15, %tmp_22_7

ST_65: StgValue_1015 (467)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_9, float* %a_1_addr_10, align 4

ST_65: StgValue_1016 (468)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.10

ST_65: tmp_23_10 (484)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_1_load_7, %tmp_22_10

ST_65: tmp_23_11 (493)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_1_load_9, %tmp_22_11

ST_65: tmp_23_12 (502)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_1_load_11, %tmp_22_12

ST_65: tmp_23_13 (511)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_1_load_13, %tmp_22_13

ST_65: tmp_23_14 (520)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_1_load_15, %tmp_22_14

ST_65: StgValue_1022 (539)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_16, float* %a_2_addr_10, align 4

ST_65: StgValue_1023 (540)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.18

ST_65: tmp_23_18 (556)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_18 = fsub float %a_2_load_7, %tmp_22_18

ST_65: tmp_23_19 (565)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_19 = fsub float %a_2_load_9, %tmp_22_19

ST_65: tmp_23_20 (574)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_20 = fsub float %a_2_load_11, %tmp_22_20

ST_65: tmp_23_21 (583)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_21 = fsub float %a_2_load_13, %tmp_22_21

ST_65: tmp_23_22 (592)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_22 = fsub float %a_2_load_15, %tmp_22_22

ST_65: StgValue_1029 (611)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_24, float* %a_3_addr_10, align 4

ST_65: StgValue_1030 (612)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.26

ST_65: tmp_23_26 (628)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_26 = fsub float %a_3_load_7, %tmp_22_26

ST_65: tmp_23_27 (637)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_27 = fsub float %a_3_load_9, %tmp_22_27

ST_65: tmp_23_28 (646)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_28 = fsub float %a_3_load_11, %tmp_22_28

ST_65: tmp_23_29 (655)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_29 = fsub float %a_3_load_13, %tmp_22_29

ST_65: tmp_23_30 (664)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_30 = fsub float %a_3_load_15, %tmp_22_30


 <State 66>: 8.26ns
ST_66: StgValue_1036 (404)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_2, float* %a_0_addr_12, align 4

ST_66: StgValue_1037 (405)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.3

ST_66: tmp_23_4 (421)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_0_load_9, %tmp_22_4

ST_66: tmp_23_5 (430)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_0_load_11, %tmp_22_5

ST_66: tmp_23_6 (439)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_0_load_13, %tmp_22_6

ST_66: tmp_23_7 (448)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_0_load_15, %tmp_22_7

ST_66: StgValue_1042 (476)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_s, float* %a_1_addr_12, align 4

ST_66: StgValue_1043 (477)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.11

ST_66: tmp_23_11 (493)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_1_load_9, %tmp_22_11

ST_66: tmp_23_12 (502)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_1_load_11, %tmp_22_12

ST_66: tmp_23_13 (511)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_1_load_13, %tmp_22_13

ST_66: tmp_23_14 (520)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_1_load_15, %tmp_22_14

ST_66: StgValue_1048 (548)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_17, float* %a_2_addr_12, align 4

ST_66: StgValue_1049 (549)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.19

ST_66: tmp_23_19 (565)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_19 = fsub float %a_2_load_9, %tmp_22_19

ST_66: tmp_23_20 (574)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_20 = fsub float %a_2_load_11, %tmp_22_20

ST_66: tmp_23_21 (583)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_21 = fsub float %a_2_load_13, %tmp_22_21

ST_66: tmp_23_22 (592)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_22 = fsub float %a_2_load_15, %tmp_22_22

ST_66: StgValue_1054 (620)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_25, float* %a_3_addr_12, align 4

ST_66: StgValue_1055 (621)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.27

ST_66: tmp_23_27 (637)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_27 = fsub float %a_3_load_9, %tmp_22_27

ST_66: tmp_23_28 (646)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_28 = fsub float %a_3_load_11, %tmp_22_28

ST_66: tmp_23_29 (655)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_29 = fsub float %a_3_load_13, %tmp_22_29

ST_66: tmp_23_30 (664)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_30 = fsub float %a_3_load_15, %tmp_22_30


 <State 67>: 8.26ns
ST_67: StgValue_1060 (413)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_3, float* %a_0_addr_14, align 4

ST_67: StgValue_1061 (414)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.4

ST_67: tmp_23_5 (430)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_0_load_11, %tmp_22_5

ST_67: tmp_23_6 (439)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_0_load_13, %tmp_22_6

ST_67: tmp_23_7 (448)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_0_load_15, %tmp_22_7

ST_67: StgValue_1065 (485)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_10, float* %a_1_addr_14, align 4

ST_67: StgValue_1066 (486)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.12

ST_67: tmp_23_12 (502)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_1_load_11, %tmp_22_12

ST_67: tmp_23_13 (511)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_1_load_13, %tmp_22_13

ST_67: tmp_23_14 (520)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_1_load_15, %tmp_22_14

ST_67: StgValue_1070 (557)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_18, float* %a_2_addr_14, align 4

ST_67: StgValue_1071 (558)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.20

ST_67: tmp_23_20 (574)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_20 = fsub float %a_2_load_11, %tmp_22_20

ST_67: tmp_23_21 (583)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_21 = fsub float %a_2_load_13, %tmp_22_21

ST_67: tmp_23_22 (592)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_22 = fsub float %a_2_load_15, %tmp_22_22

ST_67: StgValue_1075 (629)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_26, float* %a_3_addr_14, align 4

ST_67: StgValue_1076 (630)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.28

ST_67: tmp_23_28 (646)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_28 = fsub float %a_3_load_11, %tmp_22_28

ST_67: tmp_23_29 (655)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_29 = fsub float %a_3_load_13, %tmp_22_29

ST_67: tmp_23_30 (664)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_30 = fsub float %a_3_load_15, %tmp_22_30


 <State 68>: 8.26ns
ST_68: StgValue_1080 (422)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_4, float* %a_0_addr_16, align 4

ST_68: StgValue_1081 (423)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.5

ST_68: tmp_23_6 (439)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_0_load_13, %tmp_22_6

ST_68: tmp_23_7 (448)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_0_load_15, %tmp_22_7

ST_68: StgValue_1084 (494)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_11, float* %a_1_addr_16, align 4

ST_68: StgValue_1085 (495)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.13

ST_68: tmp_23_13 (511)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_1_load_13, %tmp_22_13

ST_68: tmp_23_14 (520)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_1_load_15, %tmp_22_14

ST_68: StgValue_1088 (566)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_19, float* %a_2_addr_16, align 4

ST_68: StgValue_1089 (567)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.21

ST_68: tmp_23_21 (583)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_21 = fsub float %a_2_load_13, %tmp_22_21

ST_68: tmp_23_22 (592)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_22 = fsub float %a_2_load_15, %tmp_22_22

ST_68: StgValue_1092 (638)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_27, float* %a_3_addr_16, align 4

ST_68: StgValue_1093 (639)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.29

ST_68: tmp_23_29 (655)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_29 = fsub float %a_3_load_13, %tmp_22_29

ST_68: tmp_23_30 (664)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_30 = fsub float %a_3_load_15, %tmp_22_30


 <State 69>: 8.26ns
ST_69: StgValue_1096 (431)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_5, float* %a_0_addr_18, align 4

ST_69: StgValue_1097 (432)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.6

ST_69: tmp_23_7 (448)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_0_load_15, %tmp_22_7

ST_69: StgValue_1099 (503)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_12, float* %a_1_addr_18, align 4

ST_69: StgValue_1100 (504)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.14

ST_69: tmp_23_14 (520)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_1_load_15, %tmp_22_14

ST_69: StgValue_1102 (575)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_20, float* %a_2_addr_18, align 4

ST_69: StgValue_1103 (576)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.22

ST_69: tmp_23_22 (592)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_22 = fsub float %a_2_load_15, %tmp_22_22

ST_69: StgValue_1105 (647)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_28, float* %a_3_addr_18, align 4

ST_69: StgValue_1106 (648)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.30

ST_69: tmp_23_30 (664)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_30 = fsub float %a_3_load_15, %tmp_22_30


 <State 70>: 2.71ns
ST_70: StgValue_1108 (440)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_6, float* %a_0_addr_20, align 4

ST_70: StgValue_1109 (441)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.7

ST_70: StgValue_1110 (512)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_13, float* %a_1_addr_20, align 4

ST_70: StgValue_1111 (513)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.15

ST_70: StgValue_1112 (584)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_21, float* %a_2_addr_20, align 4

ST_70: StgValue_1113 (585)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.23

ST_70: StgValue_1114 (656)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_29, float* %a_3_addr_20, align 4

ST_70: StgValue_1115 (657)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.31


 <State 71>: 2.71ns
ST_71: StgValue_1116 (449)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_7, float* %a_0_addr_22, align 4

ST_71: StgValue_1117 (450)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.8

ST_71: StgValue_1118 (521)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_14, float* %a_1_addr_22, align 4

ST_71: StgValue_1119 (522)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.16

ST_71: StgValue_1120 (593)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_22, float* %a_2_addr_22, align 4

ST_71: StgValue_1121 (594)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.24

ST_71: StgValue_1122 (665)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_30, float* %a_3_addr_22, align 4

ST_71: StgValue_1123 (666)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.32


 <State 72>: 2.71ns
ST_72: tmp_84 (317)  [1/1] 0.00ns  loc: minver.c:96
:3  %tmp_84 = zext i9 %tmp_83 to i64

ST_72: a_0_addr_6 (318)  [1/1] 0.00ns  loc: minver.c:96
:4  %a_0_addr_6 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_84

ST_72: a_1_addr_6 (341)  [1/1] 0.00ns  loc: minver.c:96
:27  %a_1_addr_6 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_84

ST_72: a_2_addr_6 (350)  [1/1] 0.00ns  loc: minver.c:96
:36  %a_2_addr_6 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_84

ST_72: a_3_addr_6 (359)  [1/1] 0.00ns  loc: minver.c:96
:45  %a_3_addr_6 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_84

ST_72: StgValue_1129 (673)  [1/1] 2.71ns  loc: minver.c:101
branch262:0  store float %tmp_18, float* %a_2_addr_6, align 4

ST_72: StgValue_1130 (674)  [1/1] 0.00ns  loc: minver.c:101
branch262:1  br label %.preheader9.32348

ST_72: StgValue_1131 (676)  [1/1] 2.71ns  loc: minver.c:101
branch261:0  store float %tmp_18, float* %a_1_addr_6, align 4

ST_72: StgValue_1132 (677)  [1/1] 0.00ns  loc: minver.c:101
branch261:1  br label %.preheader9.32348

ST_72: StgValue_1133 (679)  [1/1] 2.71ns  loc: minver.c:101
branch260:0  store float %tmp_18, float* %a_0_addr_6, align 4

ST_72: StgValue_1134 (680)  [1/1] 0.00ns  loc: minver.c:101
branch260:1  br label %.preheader9.32348

ST_72: StgValue_1135 (682)  [1/1] 2.71ns  loc: minver.c:101
branch263:0  store float %tmp_18, float* %a_3_addr_6, align 4

ST_72: StgValue_1136 (683)  [1/1] 0.00ns  loc: minver.c:101
branch263:1  br label %.preheader9.32348


 <State 73>: 6.30ns
ST_73: tmp_13 (692)  [16/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 74>: 6.30ns
ST_74: tmp_13 (692)  [15/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 75>: 6.30ns
ST_75: tmp_13 (692)  [14/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 76>: 6.30ns
ST_76: tmp_13 (692)  [13/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 77>: 6.30ns
ST_77: tmp_13 (692)  [12/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_13 (692)  [11/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_13 (692)  [10/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 80>: 6.30ns
ST_80: tmp_13 (692)  [9/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 81>: 6.30ns
ST_81: tmp_13 (692)  [8/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 82>: 6.30ns
ST_82: tmp_13 (692)  [7/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 83>: 6.30ns
ST_83: tmp_13 (692)  [6/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 84>: 6.30ns
ST_84: tmp_13 (692)  [5/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 85>: 6.30ns
ST_85: tmp_13 (692)  [4/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 86>: 6.30ns
ST_86: tmp_13 (692)  [3/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 87>: 6.30ns
ST_87: tmp_13 (692)  [2/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 88>: 6.30ns
ST_88: tmp_13 (692)  [1/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot

ST_88: StgValue_1153 (693)  [1/1] 2.33ns  loc: minver.c:105
:1  switch i3 %arrayNo2, label %branch259 [
    i3 0, label %branch256
    i3 1, label %branch257
    i3 2, label %branch258
  ]


 <State 89>: 2.71ns
ST_89: StgValue_1154 (695)  [1/1] 2.71ns  loc: minver.c:105
branch258:0  store float %tmp_13, float* %a_2_addr_5, align 4

ST_89: StgValue_1155 (696)  [1/1] 0.00ns  loc: minver.c:105
branch258:1  br label %46

ST_89: StgValue_1156 (698)  [1/1] 2.71ns  loc: minver.c:105
branch257:0  store float %tmp_13, float* %a_1_addr_5, align 4

ST_89: StgValue_1157 (699)  [1/1] 0.00ns  loc: minver.c:105
branch257:1  br label %46

ST_89: StgValue_1158 (701)  [1/1] 2.71ns  loc: minver.c:105
branch256:0  store float %tmp_13, float* %a_0_addr_5, align 4

ST_89: StgValue_1159 (702)  [1/1] 0.00ns  loc: minver.c:105
branch256:1  br label %46

ST_89: StgValue_1160 (704)  [1/1] 2.71ns  loc: minver.c:105
branch259:0  store float %tmp_13, float* %a_3_addr_5, align 4

ST_89: StgValue_1161 (705)  [1/1] 0.00ns  loc: minver.c:105
branch259:1  br label %46

ST_89: StgValue_1162 (707)  [1/1] 0.00ns  loc: minver.c:56
:0  br label %.preheader13


 <State 90>: 2.40ns
ST_90: i_4 (713)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i6 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_90: exitcond1 (714)  [1/1] 2.40ns  loc: minver.c:109
.preheader8:1  %exitcond1 = icmp eq i6 %i_4, -32

ST_90: i_7 (715)  [1/1] 1.67ns  loc: minver.c:129
.preheader8:2  %i_7 = add i6 %i_4, 1

ST_90: StgValue_1166 (716)  [1/1] 0.00ns  loc: minver.c:109
.preheader8:3  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_90: empty_25 (718)  [1/1] 0.00ns
.preheader.preheader:0  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_90: tmp_s (719)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:1  %tmp_s = zext i6 %i_4 to i64

ST_90: work_addr_1 (720)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:2  %work_addr_1 = getelementptr [500 x i6]* %work, i64 0, i64 %tmp_s

ST_90: arrayNo3 (721)  [1/1] 0.00ns  loc: minver.c:129
.preheader.preheader:3  %arrayNo3 = call i3 @_ssdm_op_PartSelect.i3.i6.i32.i32(i6 %i_4, i32 3, i32 5)

ST_90: tmp_46 (722)  [1/1] 0.00ns  loc: minver.c:129
.preheader.preheader:4  %tmp_46 = trunc i6 %i_4 to i3

ST_90: StgValue_1172 (723)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:5  br label %.preheader

ST_90: StgValue_1173 (1687)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 91>: 2.71ns
ST_91: work_load (725)  [2/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i6* %work_addr_1, align 1


 <State 92>: 5.42ns
ST_92: work_load (725)  [1/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i6* %work_addr_1, align 1

ST_92: tmp_8 (726)  [1/1] 2.40ns  loc: minver.c:116
.preheader:1  %tmp_8 = icmp eq i6 %work_load, %i_4

ST_92: StgValue_1177 (727)  [1/1] 0.00ns  loc: minver.c:116
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %47

ST_92: tmp_21 (729)  [1/1] 0.00ns  loc: minver.c:111
:0  %tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str10) nounwind

ST_92: tmp_10 (731)  [1/1] 0.00ns  loc: minver.c:118
:2  %tmp_10 = zext i6 %work_load to i64

ST_92: work_addr_2 (738)  [1/1] 0.00ns  loc: minver.c:118
:9  %work_addr_2 = getelementptr [500 x i6]* %work, i64 0, i64 %tmp_10

ST_92: work_load_1 (739)  [2/2] 2.71ns  loc: minver.c:118
:10  %work_load_1 = load i6* %work_addr_2, align 1

ST_92: tmp_68 (742)  [1/1] 0.00ns  loc: minver.c:114
:13  %tmp_68 = call i3 @_ssdm_op_PartSelect.i3.i6.i32.i32(i6 %work_load, i32 3, i32 5)

ST_92: StgValue_1183 (755)  [1/1] 2.33ns  loc: minver.c:124
:26  switch i3 %arrayNo3, label %branch255 [
    i3 0, label %branch252
    i3 1, label %branch253
    i3 2, label %branch254
  ]

ST_92: StgValue_1184 (769)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch127 [
    i3 0, label %branch124
    i3 1, label %branch125
    i3 2, label %branch126
  ]

ST_92: StgValue_1185 (798)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch123 [
    i3 0, label %branch120
    i3 1, label %branch121
    i3 2, label %branch122
  ]

ST_92: StgValue_1186 (827)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch119 [
    i3 0, label %branch116
    i3 1, label %branch117
    i3 2, label %branch118
  ]

ST_92: StgValue_1187 (856)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch115 [
    i3 0, label %branch112
    i3 1, label %branch113
    i3 2, label %branch114
  ]

ST_92: StgValue_1188 (885)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch111 [
    i3 0, label %branch108
    i3 1, label %branch109
    i3 2, label %branch110
  ]

ST_92: StgValue_1189 (914)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch107 [
    i3 0, label %branch104
    i3 1, label %branch105
    i3 2, label %branch106
  ]

ST_92: StgValue_1190 (943)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch103 [
    i3 0, label %branch100
    i3 1, label %branch101
    i3 2, label %branch102
  ]

ST_92: StgValue_1191 (972)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch99 [
    i3 0, label %branch96
    i3 1, label %branch97
    i3 2, label %branch98
  ]

ST_92: StgValue_1192 (1001)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch95 [
    i3 0, label %branch92
    i3 1, label %branch93
    i3 2, label %branch94
  ]

ST_92: StgValue_1193 (1030)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch91 [
    i3 0, label %branch88
    i3 1, label %branch89
    i3 2, label %branch90
  ]

ST_92: StgValue_1194 (1059)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch87 [
    i3 0, label %branch84
    i3 1, label %branch85
    i3 2, label %branch86
  ]

ST_92: StgValue_1195 (1088)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch83 [
    i3 0, label %branch80
    i3 1, label %branch81
    i3 2, label %branch82
  ]

ST_92: StgValue_1196 (1117)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch79 [
    i3 0, label %branch76
    i3 1, label %branch77
    i3 2, label %branch78
  ]

ST_92: StgValue_1197 (1146)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch75 [
    i3 0, label %branch72
    i3 1, label %branch73
    i3 2, label %branch74
  ]

ST_92: StgValue_1198 (1175)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch71 [
    i3 0, label %branch68
    i3 1, label %branch69
    i3 2, label %branch70
  ]

ST_92: StgValue_1199 (1204)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch67 [
    i3 0, label %branch64
    i3 1, label %branch65
    i3 2, label %branch66
  ]

ST_92: StgValue_1200 (1233)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch63 [
    i3 0, label %branch60
    i3 1, label %branch61
    i3 2, label %branch62
  ]

ST_92: StgValue_1201 (1262)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch59 [
    i3 0, label %branch56
    i3 1, label %branch57
    i3 2, label %branch58
  ]

ST_92: StgValue_1202 (1291)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch55 [
    i3 0, label %branch52
    i3 1, label %branch53
    i3 2, label %branch54
  ]

ST_92: StgValue_1203 (1320)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch51 [
    i3 0, label %branch48
    i3 1, label %branch49
    i3 2, label %branch50
  ]

ST_92: StgValue_1204 (1349)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch47 [
    i3 0, label %branch44
    i3 1, label %branch45
    i3 2, label %branch46
  ]

ST_92: StgValue_1205 (1378)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch43 [
    i3 0, label %branch40
    i3 1, label %branch41
    i3 2, label %branch42
  ]

ST_92: StgValue_1206 (1407)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch39 [
    i3 0, label %branch36
    i3 1, label %branch37
    i3 2, label %branch38
  ]

ST_92: StgValue_1207 (1436)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch35 [
    i3 0, label %branch32
    i3 1, label %branch33
    i3 2, label %branch34
  ]

ST_92: StgValue_1208 (1465)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch31 [
    i3 0, label %branch28
    i3 1, label %branch29
    i3 2, label %branch30
  ]

ST_92: StgValue_1209 (1494)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch27 [
    i3 0, label %branch24
    i3 1, label %branch25
    i3 2, label %branch26
  ]

ST_92: StgValue_1210 (1523)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch23 [
    i3 0, label %branch20
    i3 1, label %branch21
    i3 2, label %branch22
  ]

ST_92: StgValue_1211 (1552)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch19 [
    i3 0, label %branch16
    i3 1, label %branch17
    i3 2, label %branch18
  ]

ST_92: StgValue_1212 (1581)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch15 [
    i3 0, label %branch12
    i3 1, label %branch13
    i3 2, label %branch14
  ]

ST_92: StgValue_1213 (1610)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch11 [
    i3 0, label %branch8
    i3 1, label %branch9
    i3 2, label %branch10
  ]

ST_92: StgValue_1214 (1639)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch7 [
    i3 0, label %branch4
    i3 1, label %branch5
    i3 2, label %branch6
  ]

ST_92: StgValue_1215 (1668)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_68, label %branch3 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
  ]

ST_92: empty_26 (1682)  [1/1] 0.00ns  loc: minver.c:127
:0  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str10, i32 %tmp_21) nounwind

ST_92: StgValue_1217 (1683)  [1/1] 0.00ns  loc: minver.c:127
:1  br label %.preheader


 <State 93>: 5.74ns
ST_93: work_load_1 (739)  [1/2] 2.71ns  loc: minver.c:118
:10  %work_load_1 = load i6* %work_addr_2, align 1

ST_93: StgValue_1219 (740)  [1/1] 2.71ns  loc: minver.c:119
:11  store i6 %work_load, i6* %work_addr_2, align 1

ST_93: tmp_10_cast1 (750)  [1/1] 0.00ns  loc: minver.c:114
:21  %tmp_10_cast1 = zext i6 %work_load to i32

ST_93: arrayNo3_cast_cast1_s (751)  [1/1] 0.00ns  loc: minver.c:129
:22  %arrayNo3_cast_cast1_s = zext i3 %arrayNo3 to i5

ST_93: tmp_70 (752)  [2/2] 5.74ns  loc: minver.c:129
:23  %tmp_70 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 94>: 5.45ns
ST_94: StgValue_1223 (741)  [1/1] 2.71ns  loc: minver.c:120
:12  store i6 %work_load_1, i6* %work_addr_1, align 1

ST_94: tmp_70 (752)  [1/2] 5.45ns  loc: minver.c:129
:23  %tmp_70 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 95>: 5.74ns
ST_95: tmp_86 (743)  [1/1] 0.00ns  loc: minver.c:114
:14  %tmp_86 = trunc i6 %work_load to i3

ST_95: tmp_67_cast (753)  [1/1] 0.00ns  loc: minver.c:114
:24  %tmp_67_cast = zext i3 %tmp_68 to i5

ST_95: tmp_71 (754)  [2/2] 5.74ns  loc: minver.c:114
:25  %tmp_71 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %tmp_67_cast, i32 %tmp_10_cast1, i3 %tmp_86)


 <State 96>: 5.45ns
ST_96: tmp_71 (754)  [1/2] 5.45ns  loc: minver.c:114
:25  %tmp_71 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %tmp_67_cast, i32 %tmp_10_cast1, i3 %tmp_86)


 <State 97>: 2.71ns
ST_97: tmp_67 (732)  [1/1] 0.00ns  loc: minver.c:114
:3  %tmp_67 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %work_load, i3 %tmp_46)

ST_97: tmp_65 (733)  [1/1] 0.00ns  loc: minver.c:123
:4  %tmp_65 = zext i9 %tmp_67 to i64

ST_97: a_0_addr (734)  [1/1] 0.00ns  loc: minver.c:123
:5  %a_0_addr = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_65

ST_97: a_1_addr (735)  [1/1] 0.00ns  loc: minver.c:123
:6  %a_1_addr = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_65

ST_97: a_2_addr (736)  [1/1] 0.00ns  loc: minver.c:123
:7  %a_2_addr = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_65

ST_97: a_3_addr (737)  [1/1] 0.00ns  loc: minver.c:123
:8  %a_3_addr = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_65

ST_97: StgValue_1235 (757)  [1/1] 2.71ns  loc: minver.c:124
branch254:0  store float %tmp_71, float* %a_2_addr, align 4

ST_97: StgValue_1236 (758)  [1/1] 0.00ns  loc: minver.c:124
branch254:1  br label %48

ST_97: StgValue_1237 (760)  [1/1] 2.71ns  loc: minver.c:124
branch253:0  store float %tmp_71, float* %a_1_addr, align 4

ST_97: StgValue_1238 (761)  [1/1] 0.00ns  loc: minver.c:124
branch253:1  br label %48

ST_97: StgValue_1239 (763)  [1/1] 2.71ns  loc: minver.c:124
branch252:0  store float %tmp_71, float* %a_0_addr, align 4

ST_97: StgValue_1240 (764)  [1/1] 0.00ns  loc: minver.c:124
branch252:1  br label %48

ST_97: StgValue_1241 (766)  [1/1] 2.71ns  loc: minver.c:124
branch255:0  store float %tmp_71, float* %a_3_addr, align 4

ST_97: StgValue_1242 (767)  [1/1] 0.00ns  loc: minver.c:124
branch255:1  br label %48


 <State 98>: 2.71ns
ST_98: StgValue_1243 (730)  [1/1] 0.00ns  loc: minver.c:112
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_98: tmp_134 (744)  [1/1] 0.00ns  loc: minver.c:114
:15  %tmp_134 = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %work_load, i3 %tmp_86)

ST_98: tmp_69 (745)  [1/1] 0.00ns  loc: minver.c:124
:16  %tmp_69 = zext i9 %tmp_134 to i64

ST_98: a_0_addr_1 (746)  [1/1] 0.00ns  loc: minver.c:124
:17  %a_0_addr_1 = getelementptr [256 x float]* %a_0, i64 0, i64 %tmp_69

ST_98: a_1_addr_1 (747)  [1/1] 0.00ns  loc: minver.c:124
:18  %a_1_addr_1 = getelementptr [256 x float]* %a_1, i64 0, i64 %tmp_69

ST_98: a_2_addr_1 (748)  [1/1] 0.00ns  loc: minver.c:124
:19  %a_2_addr_1 = getelementptr [256 x float]* %a_2, i64 0, i64 %tmp_69

ST_98: a_3_addr_1 (749)  [1/1] 0.00ns  loc: minver.c:124
:20  %a_3_addr_1 = getelementptr [256 x float]* %a_3, i64 0, i64 %tmp_69

ST_98: StgValue_1250 (771)  [1/1] 2.71ns  loc: minver.c:125
branch126:0  store float %tmp_70, float* %a_2_addr_1, align 4

ST_98: StgValue_1251 (772)  [1/1] 0.00ns  loc: minver.c:125
branch126:1  br label %49

ST_98: StgValue_1252 (774)  [1/1] 2.71ns  loc: minver.c:125
branch125:0  store float %tmp_70, float* %a_1_addr_1, align 4

ST_98: StgValue_1253 (775)  [1/1] 0.00ns  loc: minver.c:125
branch125:1  br label %49

ST_98: StgValue_1254 (777)  [1/1] 2.71ns  loc: minver.c:125
branch124:0  store float %tmp_70, float* %a_0_addr_1, align 4

ST_98: StgValue_1255 (778)  [1/1] 0.00ns  loc: minver.c:125
branch124:1  br label %49

ST_98: StgValue_1256 (780)  [1/1] 2.71ns  loc: minver.c:125
branch127:0  store float %tmp_70, float* %a_3_addr_1, align 4

ST_98: StgValue_1257 (781)  [1/1] 0.00ns  loc: minver.c:125
branch127:1  br label %49


 <State 99>: 5.74ns
ST_99: tmp_77 (783)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_77 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_99: StgValue_1259 (784)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch251 [
    i3 0, label %branch248
    i3 1, label %branch249
    i3 2, label %branch250
  ]


 <State 100>: 5.45ns
ST_100: tmp_77 (783)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_77 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 101>: 2.71ns
ST_101: StgValue_1261 (786)  [1/1] 2.71ns  loc: minver.c:124
branch250:0  store float %tmp_70, float* %a_2_addr, align 4

ST_101: StgValue_1262 (787)  [1/1] 0.00ns  loc: minver.c:124
branch250:1  br label %50

ST_101: StgValue_1263 (789)  [1/1] 2.71ns  loc: minver.c:124
branch249:0  store float %tmp_70, float* %a_1_addr, align 4

ST_101: StgValue_1264 (790)  [1/1] 0.00ns  loc: minver.c:124
branch249:1  br label %50

ST_101: StgValue_1265 (792)  [1/1] 2.71ns  loc: minver.c:124
branch248:0  store float %tmp_70, float* %a_0_addr, align 4

ST_101: StgValue_1266 (793)  [1/1] 0.00ns  loc: minver.c:124
branch248:1  br label %50

ST_101: StgValue_1267 (795)  [1/1] 2.71ns  loc: minver.c:124
branch251:0  store float %tmp_70, float* %a_3_addr, align 4

ST_101: StgValue_1268 (796)  [1/1] 0.00ns  loc: minver.c:124
branch251:1  br label %50


 <State 102>: 2.71ns
ST_102: StgValue_1269 (800)  [1/1] 2.71ns  loc: minver.c:125
branch122:0  store float %tmp_77, float* %a_2_addr_1, align 4

ST_102: StgValue_1270 (801)  [1/1] 0.00ns  loc: minver.c:125
branch122:1  br label %51

ST_102: StgValue_1271 (803)  [1/1] 2.71ns  loc: minver.c:125
branch121:0  store float %tmp_77, float* %a_1_addr_1, align 4

ST_102: StgValue_1272 (804)  [1/1] 0.00ns  loc: minver.c:125
branch121:1  br label %51

ST_102: StgValue_1273 (806)  [1/1] 2.71ns  loc: minver.c:125
branch120:0  store float %tmp_77, float* %a_0_addr_1, align 4

ST_102: StgValue_1274 (807)  [1/1] 0.00ns  loc: minver.c:125
branch120:1  br label %51

ST_102: StgValue_1275 (809)  [1/1] 2.71ns  loc: minver.c:125
branch123:0  store float %tmp_77, float* %a_3_addr_1, align 4

ST_102: StgValue_1276 (810)  [1/1] 0.00ns  loc: minver.c:125
branch123:1  br label %51


 <State 103>: 5.74ns
ST_103: tmp_104 (812)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_104 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_103: StgValue_1278 (813)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch247 [
    i3 0, label %branch244
    i3 1, label %branch245
    i3 2, label %branch246
  ]


 <State 104>: 5.45ns
ST_104: tmp_104 (812)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_104 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 105>: 2.71ns
ST_105: StgValue_1280 (815)  [1/1] 2.71ns  loc: minver.c:124
branch246:0  store float %tmp_77, float* %a_2_addr, align 4

ST_105: StgValue_1281 (816)  [1/1] 0.00ns  loc: minver.c:124
branch246:1  br label %52

ST_105: StgValue_1282 (818)  [1/1] 2.71ns  loc: minver.c:124
branch245:0  store float %tmp_77, float* %a_1_addr, align 4

ST_105: StgValue_1283 (819)  [1/1] 0.00ns  loc: minver.c:124
branch245:1  br label %52

ST_105: StgValue_1284 (821)  [1/1] 2.71ns  loc: minver.c:124
branch244:0  store float %tmp_77, float* %a_0_addr, align 4

ST_105: StgValue_1285 (822)  [1/1] 0.00ns  loc: minver.c:124
branch244:1  br label %52

ST_105: StgValue_1286 (824)  [1/1] 2.71ns  loc: minver.c:124
branch247:0  store float %tmp_77, float* %a_3_addr, align 4

ST_105: StgValue_1287 (825)  [1/1] 0.00ns  loc: minver.c:124
branch247:1  br label %52


 <State 106>: 2.71ns
ST_106: StgValue_1288 (829)  [1/1] 2.71ns  loc: minver.c:125
branch118:0  store float %tmp_104, float* %a_2_addr_1, align 4

ST_106: StgValue_1289 (830)  [1/1] 0.00ns  loc: minver.c:125
branch118:1  br label %53

ST_106: StgValue_1290 (832)  [1/1] 2.71ns  loc: minver.c:125
branch117:0  store float %tmp_104, float* %a_1_addr_1, align 4

ST_106: StgValue_1291 (833)  [1/1] 0.00ns  loc: minver.c:125
branch117:1  br label %53

ST_106: StgValue_1292 (835)  [1/1] 2.71ns  loc: minver.c:125
branch116:0  store float %tmp_104, float* %a_0_addr_1, align 4

ST_106: StgValue_1293 (836)  [1/1] 0.00ns  loc: minver.c:125
branch116:1  br label %53

ST_106: StgValue_1294 (838)  [1/1] 2.71ns  loc: minver.c:125
branch119:0  store float %tmp_104, float* %a_3_addr_1, align 4

ST_106: StgValue_1295 (839)  [1/1] 0.00ns  loc: minver.c:125
branch119:1  br label %53


 <State 107>: 5.74ns
ST_107: tmp_105 (841)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_105 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_107: StgValue_1297 (842)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch243 [
    i3 0, label %branch240
    i3 1, label %branch241
    i3 2, label %branch242
  ]


 <State 108>: 5.45ns
ST_108: tmp_105 (841)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_105 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 109>: 2.71ns
ST_109: StgValue_1299 (844)  [1/1] 2.71ns  loc: minver.c:124
branch242:0  store float %tmp_104, float* %a_2_addr, align 4

ST_109: StgValue_1300 (845)  [1/1] 0.00ns  loc: minver.c:124
branch242:1  br label %54

ST_109: StgValue_1301 (847)  [1/1] 2.71ns  loc: minver.c:124
branch241:0  store float %tmp_104, float* %a_1_addr, align 4

ST_109: StgValue_1302 (848)  [1/1] 0.00ns  loc: minver.c:124
branch241:1  br label %54

ST_109: StgValue_1303 (850)  [1/1] 2.71ns  loc: minver.c:124
branch240:0  store float %tmp_104, float* %a_0_addr, align 4

ST_109: StgValue_1304 (851)  [1/1] 0.00ns  loc: minver.c:124
branch240:1  br label %54

ST_109: StgValue_1305 (853)  [1/1] 2.71ns  loc: minver.c:124
branch243:0  store float %tmp_104, float* %a_3_addr, align 4

ST_109: StgValue_1306 (854)  [1/1] 0.00ns  loc: minver.c:124
branch243:1  br label %54


 <State 110>: 2.71ns
ST_110: StgValue_1307 (858)  [1/1] 2.71ns  loc: minver.c:125
branch114:0  store float %tmp_105, float* %a_2_addr_1, align 4

ST_110: StgValue_1308 (859)  [1/1] 0.00ns  loc: minver.c:125
branch114:1  br label %55

ST_110: StgValue_1309 (861)  [1/1] 2.71ns  loc: minver.c:125
branch113:0  store float %tmp_105, float* %a_1_addr_1, align 4

ST_110: StgValue_1310 (862)  [1/1] 0.00ns  loc: minver.c:125
branch113:1  br label %55

ST_110: StgValue_1311 (864)  [1/1] 2.71ns  loc: minver.c:125
branch112:0  store float %tmp_105, float* %a_0_addr_1, align 4

ST_110: StgValue_1312 (865)  [1/1] 0.00ns  loc: minver.c:125
branch112:1  br label %55

ST_110: StgValue_1313 (867)  [1/1] 2.71ns  loc: minver.c:125
branch115:0  store float %tmp_105, float* %a_3_addr_1, align 4

ST_110: StgValue_1314 (868)  [1/1] 0.00ns  loc: minver.c:125
branch115:1  br label %55


 <State 111>: 5.74ns
ST_111: tmp_106 (870)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_106 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_111: StgValue_1316 (871)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch239 [
    i3 0, label %branch236
    i3 1, label %branch237
    i3 2, label %branch238
  ]


 <State 112>: 5.45ns
ST_112: tmp_106 (870)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_106 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 113>: 2.71ns
ST_113: StgValue_1318 (873)  [1/1] 2.71ns  loc: minver.c:124
branch238:0  store float %tmp_105, float* %a_2_addr, align 4

ST_113: StgValue_1319 (874)  [1/1] 0.00ns  loc: minver.c:124
branch238:1  br label %56

ST_113: StgValue_1320 (876)  [1/1] 2.71ns  loc: minver.c:124
branch237:0  store float %tmp_105, float* %a_1_addr, align 4

ST_113: StgValue_1321 (877)  [1/1] 0.00ns  loc: minver.c:124
branch237:1  br label %56

ST_113: StgValue_1322 (879)  [1/1] 2.71ns  loc: minver.c:124
branch236:0  store float %tmp_105, float* %a_0_addr, align 4

ST_113: StgValue_1323 (880)  [1/1] 0.00ns  loc: minver.c:124
branch236:1  br label %56

ST_113: StgValue_1324 (882)  [1/1] 2.71ns  loc: minver.c:124
branch239:0  store float %tmp_105, float* %a_3_addr, align 4

ST_113: StgValue_1325 (883)  [1/1] 0.00ns  loc: minver.c:124
branch239:1  br label %56


 <State 114>: 2.71ns
ST_114: StgValue_1326 (887)  [1/1] 2.71ns  loc: minver.c:125
branch110:0  store float %tmp_106, float* %a_2_addr_1, align 4

ST_114: StgValue_1327 (888)  [1/1] 0.00ns  loc: minver.c:125
branch110:1  br label %57

ST_114: StgValue_1328 (890)  [1/1] 2.71ns  loc: minver.c:125
branch109:0  store float %tmp_106, float* %a_1_addr_1, align 4

ST_114: StgValue_1329 (891)  [1/1] 0.00ns  loc: minver.c:125
branch109:1  br label %57

ST_114: StgValue_1330 (893)  [1/1] 2.71ns  loc: minver.c:125
branch108:0  store float %tmp_106, float* %a_0_addr_1, align 4

ST_114: StgValue_1331 (894)  [1/1] 0.00ns  loc: minver.c:125
branch108:1  br label %57

ST_114: StgValue_1332 (896)  [1/1] 2.71ns  loc: minver.c:125
branch111:0  store float %tmp_106, float* %a_3_addr_1, align 4

ST_114: StgValue_1333 (897)  [1/1] 0.00ns  loc: minver.c:125
branch111:1  br label %57


 <State 115>: 5.74ns
ST_115: tmp_107 (899)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_107 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_115: StgValue_1335 (900)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch235 [
    i3 0, label %branch232
    i3 1, label %branch233
    i3 2, label %branch234
  ]


 <State 116>: 5.45ns
ST_116: tmp_107 (899)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_107 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 117>: 2.71ns
ST_117: StgValue_1337 (902)  [1/1] 2.71ns  loc: minver.c:124
branch234:0  store float %tmp_106, float* %a_2_addr, align 4

ST_117: StgValue_1338 (903)  [1/1] 0.00ns  loc: minver.c:124
branch234:1  br label %58

ST_117: StgValue_1339 (905)  [1/1] 2.71ns  loc: minver.c:124
branch233:0  store float %tmp_106, float* %a_1_addr, align 4

ST_117: StgValue_1340 (906)  [1/1] 0.00ns  loc: minver.c:124
branch233:1  br label %58

ST_117: StgValue_1341 (908)  [1/1] 2.71ns  loc: minver.c:124
branch232:0  store float %tmp_106, float* %a_0_addr, align 4

ST_117: StgValue_1342 (909)  [1/1] 0.00ns  loc: minver.c:124
branch232:1  br label %58

ST_117: StgValue_1343 (911)  [1/1] 2.71ns  loc: minver.c:124
branch235:0  store float %tmp_106, float* %a_3_addr, align 4

ST_117: StgValue_1344 (912)  [1/1] 0.00ns  loc: minver.c:124
branch235:1  br label %58


 <State 118>: 2.71ns
ST_118: StgValue_1345 (916)  [1/1] 2.71ns  loc: minver.c:125
branch106:0  store float %tmp_107, float* %a_2_addr_1, align 4

ST_118: StgValue_1346 (917)  [1/1] 0.00ns  loc: minver.c:125
branch106:1  br label %59

ST_118: StgValue_1347 (919)  [1/1] 2.71ns  loc: minver.c:125
branch105:0  store float %tmp_107, float* %a_1_addr_1, align 4

ST_118: StgValue_1348 (920)  [1/1] 0.00ns  loc: minver.c:125
branch105:1  br label %59

ST_118: StgValue_1349 (922)  [1/1] 2.71ns  loc: minver.c:125
branch104:0  store float %tmp_107, float* %a_0_addr_1, align 4

ST_118: StgValue_1350 (923)  [1/1] 0.00ns  loc: minver.c:125
branch104:1  br label %59

ST_118: StgValue_1351 (925)  [1/1] 2.71ns  loc: minver.c:125
branch107:0  store float %tmp_107, float* %a_3_addr_1, align 4

ST_118: StgValue_1352 (926)  [1/1] 0.00ns  loc: minver.c:125
branch107:1  br label %59


 <State 119>: 5.74ns
ST_119: tmp_108 (928)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_108 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_119: StgValue_1354 (929)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch231 [
    i3 0, label %branch228
    i3 1, label %branch229
    i3 2, label %branch230
  ]


 <State 120>: 5.45ns
ST_120: tmp_108 (928)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_108 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 121>: 2.71ns
ST_121: StgValue_1356 (931)  [1/1] 2.71ns  loc: minver.c:124
branch230:0  store float %tmp_107, float* %a_2_addr, align 4

ST_121: StgValue_1357 (932)  [1/1] 0.00ns  loc: minver.c:124
branch230:1  br label %60

ST_121: StgValue_1358 (934)  [1/1] 2.71ns  loc: minver.c:124
branch229:0  store float %tmp_107, float* %a_1_addr, align 4

ST_121: StgValue_1359 (935)  [1/1] 0.00ns  loc: minver.c:124
branch229:1  br label %60

ST_121: StgValue_1360 (937)  [1/1] 2.71ns  loc: minver.c:124
branch228:0  store float %tmp_107, float* %a_0_addr, align 4

ST_121: StgValue_1361 (938)  [1/1] 0.00ns  loc: minver.c:124
branch228:1  br label %60

ST_121: StgValue_1362 (940)  [1/1] 2.71ns  loc: minver.c:124
branch231:0  store float %tmp_107, float* %a_3_addr, align 4

ST_121: StgValue_1363 (941)  [1/1] 0.00ns  loc: minver.c:124
branch231:1  br label %60


 <State 122>: 2.71ns
ST_122: StgValue_1364 (945)  [1/1] 2.71ns  loc: minver.c:125
branch102:0  store float %tmp_108, float* %a_2_addr_1, align 4

ST_122: StgValue_1365 (946)  [1/1] 0.00ns  loc: minver.c:125
branch102:1  br label %61

ST_122: StgValue_1366 (948)  [1/1] 2.71ns  loc: minver.c:125
branch101:0  store float %tmp_108, float* %a_1_addr_1, align 4

ST_122: StgValue_1367 (949)  [1/1] 0.00ns  loc: minver.c:125
branch101:1  br label %61

ST_122: StgValue_1368 (951)  [1/1] 2.71ns  loc: minver.c:125
branch100:0  store float %tmp_108, float* %a_0_addr_1, align 4

ST_122: StgValue_1369 (952)  [1/1] 0.00ns  loc: minver.c:125
branch100:1  br label %61

ST_122: StgValue_1370 (954)  [1/1] 2.71ns  loc: minver.c:125
branch103:0  store float %tmp_108, float* %a_3_addr_1, align 4

ST_122: StgValue_1371 (955)  [1/1] 0.00ns  loc: minver.c:125
branch103:1  br label %61


 <State 123>: 5.74ns
ST_123: tmp_109 (957)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_109 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_123: StgValue_1373 (958)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch227 [
    i3 0, label %branch224
    i3 1, label %branch225
    i3 2, label %branch226
  ]


 <State 124>: 5.45ns
ST_124: tmp_109 (957)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_109 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 125>: 2.71ns
ST_125: StgValue_1375 (960)  [1/1] 2.71ns  loc: minver.c:124
branch226:0  store float %tmp_108, float* %a_2_addr, align 4

ST_125: StgValue_1376 (961)  [1/1] 0.00ns  loc: minver.c:124
branch226:1  br label %62

ST_125: StgValue_1377 (963)  [1/1] 2.71ns  loc: minver.c:124
branch225:0  store float %tmp_108, float* %a_1_addr, align 4

ST_125: StgValue_1378 (964)  [1/1] 0.00ns  loc: minver.c:124
branch225:1  br label %62

ST_125: StgValue_1379 (966)  [1/1] 2.71ns  loc: minver.c:124
branch224:0  store float %tmp_108, float* %a_0_addr, align 4

ST_125: StgValue_1380 (967)  [1/1] 0.00ns  loc: minver.c:124
branch224:1  br label %62

ST_125: StgValue_1381 (969)  [1/1] 2.71ns  loc: minver.c:124
branch227:0  store float %tmp_108, float* %a_3_addr, align 4

ST_125: StgValue_1382 (970)  [1/1] 0.00ns  loc: minver.c:124
branch227:1  br label %62


 <State 126>: 2.71ns
ST_126: StgValue_1383 (974)  [1/1] 2.71ns  loc: minver.c:125
branch98:0  store float %tmp_109, float* %a_2_addr_1, align 4

ST_126: StgValue_1384 (975)  [1/1] 0.00ns  loc: minver.c:125
branch98:1  br label %63

ST_126: StgValue_1385 (977)  [1/1] 2.71ns  loc: minver.c:125
branch97:0  store float %tmp_109, float* %a_1_addr_1, align 4

ST_126: StgValue_1386 (978)  [1/1] 0.00ns  loc: minver.c:125
branch97:1  br label %63

ST_126: StgValue_1387 (980)  [1/1] 2.71ns  loc: minver.c:125
branch96:0  store float %tmp_109, float* %a_0_addr_1, align 4

ST_126: StgValue_1388 (981)  [1/1] 0.00ns  loc: minver.c:125
branch96:1  br label %63

ST_126: StgValue_1389 (983)  [1/1] 2.71ns  loc: minver.c:125
branch99:0  store float %tmp_109, float* %a_3_addr_1, align 4

ST_126: StgValue_1390 (984)  [1/1] 0.00ns  loc: minver.c:125
branch99:1  br label %63


 <State 127>: 5.74ns
ST_127: tmp_110 (986)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_110 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_127: StgValue_1392 (987)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch223 [
    i3 0, label %branch220
    i3 1, label %branch221
    i3 2, label %branch222
  ]


 <State 128>: 5.45ns
ST_128: tmp_110 (986)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_110 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 129>: 2.71ns
ST_129: StgValue_1394 (989)  [1/1] 2.71ns  loc: minver.c:124
branch222:0  store float %tmp_109, float* %a_2_addr, align 4

ST_129: StgValue_1395 (990)  [1/1] 0.00ns  loc: minver.c:124
branch222:1  br label %64

ST_129: StgValue_1396 (992)  [1/1] 2.71ns  loc: minver.c:124
branch221:0  store float %tmp_109, float* %a_1_addr, align 4

ST_129: StgValue_1397 (993)  [1/1] 0.00ns  loc: minver.c:124
branch221:1  br label %64

ST_129: StgValue_1398 (995)  [1/1] 2.71ns  loc: minver.c:124
branch220:0  store float %tmp_109, float* %a_0_addr, align 4

ST_129: StgValue_1399 (996)  [1/1] 0.00ns  loc: minver.c:124
branch220:1  br label %64

ST_129: StgValue_1400 (998)  [1/1] 2.71ns  loc: minver.c:124
branch223:0  store float %tmp_109, float* %a_3_addr, align 4

ST_129: StgValue_1401 (999)  [1/1] 0.00ns  loc: minver.c:124
branch223:1  br label %64


 <State 130>: 2.71ns
ST_130: StgValue_1402 (1003)  [1/1] 2.71ns  loc: minver.c:125
branch94:0  store float %tmp_110, float* %a_2_addr_1, align 4

ST_130: StgValue_1403 (1004)  [1/1] 0.00ns  loc: minver.c:125
branch94:1  br label %65

ST_130: StgValue_1404 (1006)  [1/1] 2.71ns  loc: minver.c:125
branch93:0  store float %tmp_110, float* %a_1_addr_1, align 4

ST_130: StgValue_1405 (1007)  [1/1] 0.00ns  loc: minver.c:125
branch93:1  br label %65

ST_130: StgValue_1406 (1009)  [1/1] 2.71ns  loc: minver.c:125
branch92:0  store float %tmp_110, float* %a_0_addr_1, align 4

ST_130: StgValue_1407 (1010)  [1/1] 0.00ns  loc: minver.c:125
branch92:1  br label %65

ST_130: StgValue_1408 (1012)  [1/1] 2.71ns  loc: minver.c:125
branch95:0  store float %tmp_110, float* %a_3_addr_1, align 4

ST_130: StgValue_1409 (1013)  [1/1] 0.00ns  loc: minver.c:125
branch95:1  br label %65


 <State 131>: 5.74ns
ST_131: tmp_111 (1015)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_111 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_131: StgValue_1411 (1016)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch219 [
    i3 0, label %branch216
    i3 1, label %branch217
    i3 2, label %branch218
  ]


 <State 132>: 5.45ns
ST_132: tmp_111 (1015)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_111 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 133>: 2.71ns
ST_133: StgValue_1413 (1018)  [1/1] 2.71ns  loc: minver.c:124
branch218:0  store float %tmp_110, float* %a_2_addr, align 4

ST_133: StgValue_1414 (1019)  [1/1] 0.00ns  loc: minver.c:124
branch218:1  br label %66

ST_133: StgValue_1415 (1021)  [1/1] 2.71ns  loc: minver.c:124
branch217:0  store float %tmp_110, float* %a_1_addr, align 4

ST_133: StgValue_1416 (1022)  [1/1] 0.00ns  loc: minver.c:124
branch217:1  br label %66

ST_133: StgValue_1417 (1024)  [1/1] 2.71ns  loc: minver.c:124
branch216:0  store float %tmp_110, float* %a_0_addr, align 4

ST_133: StgValue_1418 (1025)  [1/1] 0.00ns  loc: minver.c:124
branch216:1  br label %66

ST_133: StgValue_1419 (1027)  [1/1] 2.71ns  loc: minver.c:124
branch219:0  store float %tmp_110, float* %a_3_addr, align 4

ST_133: StgValue_1420 (1028)  [1/1] 0.00ns  loc: minver.c:124
branch219:1  br label %66


 <State 134>: 2.71ns
ST_134: StgValue_1421 (1032)  [1/1] 2.71ns  loc: minver.c:125
branch90:0  store float %tmp_111, float* %a_2_addr_1, align 4

ST_134: StgValue_1422 (1033)  [1/1] 0.00ns  loc: minver.c:125
branch90:1  br label %67

ST_134: StgValue_1423 (1035)  [1/1] 2.71ns  loc: minver.c:125
branch89:0  store float %tmp_111, float* %a_1_addr_1, align 4

ST_134: StgValue_1424 (1036)  [1/1] 0.00ns  loc: minver.c:125
branch89:1  br label %67

ST_134: StgValue_1425 (1038)  [1/1] 2.71ns  loc: minver.c:125
branch88:0  store float %tmp_111, float* %a_0_addr_1, align 4

ST_134: StgValue_1426 (1039)  [1/1] 0.00ns  loc: minver.c:125
branch88:1  br label %67

ST_134: StgValue_1427 (1041)  [1/1] 2.71ns  loc: minver.c:125
branch91:0  store float %tmp_111, float* %a_3_addr_1, align 4

ST_134: StgValue_1428 (1042)  [1/1] 0.00ns  loc: minver.c:125
branch91:1  br label %67


 <State 135>: 5.74ns
ST_135: tmp_112 (1044)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_112 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_135: StgValue_1430 (1045)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch215 [
    i3 0, label %branch212
    i3 1, label %branch213
    i3 2, label %branch214
  ]


 <State 136>: 5.45ns
ST_136: tmp_112 (1044)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_112 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 137>: 2.71ns
ST_137: StgValue_1432 (1047)  [1/1] 2.71ns  loc: minver.c:124
branch214:0  store float %tmp_111, float* %a_2_addr, align 4

ST_137: StgValue_1433 (1048)  [1/1] 0.00ns  loc: minver.c:124
branch214:1  br label %68

ST_137: StgValue_1434 (1050)  [1/1] 2.71ns  loc: minver.c:124
branch213:0  store float %tmp_111, float* %a_1_addr, align 4

ST_137: StgValue_1435 (1051)  [1/1] 0.00ns  loc: minver.c:124
branch213:1  br label %68

ST_137: StgValue_1436 (1053)  [1/1] 2.71ns  loc: minver.c:124
branch212:0  store float %tmp_111, float* %a_0_addr, align 4

ST_137: StgValue_1437 (1054)  [1/1] 0.00ns  loc: minver.c:124
branch212:1  br label %68

ST_137: StgValue_1438 (1056)  [1/1] 2.71ns  loc: minver.c:124
branch215:0  store float %tmp_111, float* %a_3_addr, align 4

ST_137: StgValue_1439 (1057)  [1/1] 0.00ns  loc: minver.c:124
branch215:1  br label %68


 <State 138>: 2.71ns
ST_138: StgValue_1440 (1061)  [1/1] 2.71ns  loc: minver.c:125
branch86:0  store float %tmp_112, float* %a_2_addr_1, align 4

ST_138: StgValue_1441 (1062)  [1/1] 0.00ns  loc: minver.c:125
branch86:1  br label %69

ST_138: StgValue_1442 (1064)  [1/1] 2.71ns  loc: minver.c:125
branch85:0  store float %tmp_112, float* %a_1_addr_1, align 4

ST_138: StgValue_1443 (1065)  [1/1] 0.00ns  loc: minver.c:125
branch85:1  br label %69

ST_138: StgValue_1444 (1067)  [1/1] 2.71ns  loc: minver.c:125
branch84:0  store float %tmp_112, float* %a_0_addr_1, align 4

ST_138: StgValue_1445 (1068)  [1/1] 0.00ns  loc: minver.c:125
branch84:1  br label %69

ST_138: StgValue_1446 (1070)  [1/1] 2.71ns  loc: minver.c:125
branch87:0  store float %tmp_112, float* %a_3_addr_1, align 4

ST_138: StgValue_1447 (1071)  [1/1] 0.00ns  loc: minver.c:125
branch87:1  br label %69


 <State 139>: 5.74ns
ST_139: tmp_113 (1073)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_113 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_139: StgValue_1449 (1074)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch211 [
    i3 0, label %branch208
    i3 1, label %branch209
    i3 2, label %branch210
  ]


 <State 140>: 5.45ns
ST_140: tmp_113 (1073)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_113 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 141>: 2.71ns
ST_141: StgValue_1451 (1076)  [1/1] 2.71ns  loc: minver.c:124
branch210:0  store float %tmp_112, float* %a_2_addr, align 4

ST_141: StgValue_1452 (1077)  [1/1] 0.00ns  loc: minver.c:124
branch210:1  br label %70

ST_141: StgValue_1453 (1079)  [1/1] 2.71ns  loc: minver.c:124
branch209:0  store float %tmp_112, float* %a_1_addr, align 4

ST_141: StgValue_1454 (1080)  [1/1] 0.00ns  loc: minver.c:124
branch209:1  br label %70

ST_141: StgValue_1455 (1082)  [1/1] 2.71ns  loc: minver.c:124
branch208:0  store float %tmp_112, float* %a_0_addr, align 4

ST_141: StgValue_1456 (1083)  [1/1] 0.00ns  loc: minver.c:124
branch208:1  br label %70

ST_141: StgValue_1457 (1085)  [1/1] 2.71ns  loc: minver.c:124
branch211:0  store float %tmp_112, float* %a_3_addr, align 4

ST_141: StgValue_1458 (1086)  [1/1] 0.00ns  loc: minver.c:124
branch211:1  br label %70


 <State 142>: 2.71ns
ST_142: StgValue_1459 (1090)  [1/1] 2.71ns  loc: minver.c:125
branch82:0  store float %tmp_113, float* %a_2_addr_1, align 4

ST_142: StgValue_1460 (1091)  [1/1] 0.00ns  loc: minver.c:125
branch82:1  br label %71

ST_142: StgValue_1461 (1093)  [1/1] 2.71ns  loc: minver.c:125
branch81:0  store float %tmp_113, float* %a_1_addr_1, align 4

ST_142: StgValue_1462 (1094)  [1/1] 0.00ns  loc: minver.c:125
branch81:1  br label %71

ST_142: StgValue_1463 (1096)  [1/1] 2.71ns  loc: minver.c:125
branch80:0  store float %tmp_113, float* %a_0_addr_1, align 4

ST_142: StgValue_1464 (1097)  [1/1] 0.00ns  loc: minver.c:125
branch80:1  br label %71

ST_142: StgValue_1465 (1099)  [1/1] 2.71ns  loc: minver.c:125
branch83:0  store float %tmp_113, float* %a_3_addr_1, align 4

ST_142: StgValue_1466 (1100)  [1/1] 0.00ns  loc: minver.c:125
branch83:1  br label %71


 <State 143>: 5.74ns
ST_143: tmp_114 (1102)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_114 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_143: StgValue_1468 (1103)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch207 [
    i3 0, label %branch204
    i3 1, label %branch205
    i3 2, label %branch206
  ]


 <State 144>: 5.45ns
ST_144: tmp_114 (1102)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_114 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 145>: 2.71ns
ST_145: StgValue_1470 (1105)  [1/1] 2.71ns  loc: minver.c:124
branch206:0  store float %tmp_113, float* %a_2_addr, align 4

ST_145: StgValue_1471 (1106)  [1/1] 0.00ns  loc: minver.c:124
branch206:1  br label %72

ST_145: StgValue_1472 (1108)  [1/1] 2.71ns  loc: minver.c:124
branch205:0  store float %tmp_113, float* %a_1_addr, align 4

ST_145: StgValue_1473 (1109)  [1/1] 0.00ns  loc: minver.c:124
branch205:1  br label %72

ST_145: StgValue_1474 (1111)  [1/1] 2.71ns  loc: minver.c:124
branch204:0  store float %tmp_113, float* %a_0_addr, align 4

ST_145: StgValue_1475 (1112)  [1/1] 0.00ns  loc: minver.c:124
branch204:1  br label %72

ST_145: StgValue_1476 (1114)  [1/1] 2.71ns  loc: minver.c:124
branch207:0  store float %tmp_113, float* %a_3_addr, align 4

ST_145: StgValue_1477 (1115)  [1/1] 0.00ns  loc: minver.c:124
branch207:1  br label %72


 <State 146>: 2.71ns
ST_146: StgValue_1478 (1119)  [1/1] 2.71ns  loc: minver.c:125
branch78:0  store float %tmp_114, float* %a_2_addr_1, align 4

ST_146: StgValue_1479 (1120)  [1/1] 0.00ns  loc: minver.c:125
branch78:1  br label %73

ST_146: StgValue_1480 (1122)  [1/1] 2.71ns  loc: minver.c:125
branch77:0  store float %tmp_114, float* %a_1_addr_1, align 4

ST_146: StgValue_1481 (1123)  [1/1] 0.00ns  loc: minver.c:125
branch77:1  br label %73

ST_146: StgValue_1482 (1125)  [1/1] 2.71ns  loc: minver.c:125
branch76:0  store float %tmp_114, float* %a_0_addr_1, align 4

ST_146: StgValue_1483 (1126)  [1/1] 0.00ns  loc: minver.c:125
branch76:1  br label %73

ST_146: StgValue_1484 (1128)  [1/1] 2.71ns  loc: minver.c:125
branch79:0  store float %tmp_114, float* %a_3_addr_1, align 4

ST_146: StgValue_1485 (1129)  [1/1] 0.00ns  loc: minver.c:125
branch79:1  br label %73


 <State 147>: 5.74ns
ST_147: tmp_115 (1131)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_115 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_147: StgValue_1487 (1132)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch203 [
    i3 0, label %branch200
    i3 1, label %branch201
    i3 2, label %branch202
  ]


 <State 148>: 5.45ns
ST_148: tmp_115 (1131)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_115 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 149>: 2.71ns
ST_149: StgValue_1489 (1134)  [1/1] 2.71ns  loc: minver.c:124
branch202:0  store float %tmp_114, float* %a_2_addr, align 4

ST_149: StgValue_1490 (1135)  [1/1] 0.00ns  loc: minver.c:124
branch202:1  br label %74

ST_149: StgValue_1491 (1137)  [1/1] 2.71ns  loc: minver.c:124
branch201:0  store float %tmp_114, float* %a_1_addr, align 4

ST_149: StgValue_1492 (1138)  [1/1] 0.00ns  loc: minver.c:124
branch201:1  br label %74

ST_149: StgValue_1493 (1140)  [1/1] 2.71ns  loc: minver.c:124
branch200:0  store float %tmp_114, float* %a_0_addr, align 4

ST_149: StgValue_1494 (1141)  [1/1] 0.00ns  loc: minver.c:124
branch200:1  br label %74

ST_149: StgValue_1495 (1143)  [1/1] 2.71ns  loc: minver.c:124
branch203:0  store float %tmp_114, float* %a_3_addr, align 4

ST_149: StgValue_1496 (1144)  [1/1] 0.00ns  loc: minver.c:124
branch203:1  br label %74


 <State 150>: 2.71ns
ST_150: StgValue_1497 (1148)  [1/1] 2.71ns  loc: minver.c:125
branch74:0  store float %tmp_115, float* %a_2_addr_1, align 4

ST_150: StgValue_1498 (1149)  [1/1] 0.00ns  loc: minver.c:125
branch74:1  br label %75

ST_150: StgValue_1499 (1151)  [1/1] 2.71ns  loc: minver.c:125
branch73:0  store float %tmp_115, float* %a_1_addr_1, align 4

ST_150: StgValue_1500 (1152)  [1/1] 0.00ns  loc: minver.c:125
branch73:1  br label %75

ST_150: StgValue_1501 (1154)  [1/1] 2.71ns  loc: minver.c:125
branch72:0  store float %tmp_115, float* %a_0_addr_1, align 4

ST_150: StgValue_1502 (1155)  [1/1] 0.00ns  loc: minver.c:125
branch72:1  br label %75

ST_150: StgValue_1503 (1157)  [1/1] 2.71ns  loc: minver.c:125
branch75:0  store float %tmp_115, float* %a_3_addr_1, align 4

ST_150: StgValue_1504 (1158)  [1/1] 0.00ns  loc: minver.c:125
branch75:1  br label %75


 <State 151>: 5.74ns
ST_151: tmp_116 (1160)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_116 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_151: StgValue_1506 (1161)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch199 [
    i3 0, label %branch196
    i3 1, label %branch197
    i3 2, label %branch198
  ]


 <State 152>: 5.45ns
ST_152: tmp_116 (1160)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_116 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 153>: 2.71ns
ST_153: StgValue_1508 (1163)  [1/1] 2.71ns  loc: minver.c:124
branch198:0  store float %tmp_115, float* %a_2_addr, align 4

ST_153: StgValue_1509 (1164)  [1/1] 0.00ns  loc: minver.c:124
branch198:1  br label %76

ST_153: StgValue_1510 (1166)  [1/1] 2.71ns  loc: minver.c:124
branch197:0  store float %tmp_115, float* %a_1_addr, align 4

ST_153: StgValue_1511 (1167)  [1/1] 0.00ns  loc: minver.c:124
branch197:1  br label %76

ST_153: StgValue_1512 (1169)  [1/1] 2.71ns  loc: minver.c:124
branch196:0  store float %tmp_115, float* %a_0_addr, align 4

ST_153: StgValue_1513 (1170)  [1/1] 0.00ns  loc: minver.c:124
branch196:1  br label %76

ST_153: StgValue_1514 (1172)  [1/1] 2.71ns  loc: minver.c:124
branch199:0  store float %tmp_115, float* %a_3_addr, align 4

ST_153: StgValue_1515 (1173)  [1/1] 0.00ns  loc: minver.c:124
branch199:1  br label %76


 <State 154>: 2.71ns
ST_154: StgValue_1516 (1177)  [1/1] 2.71ns  loc: minver.c:125
branch70:0  store float %tmp_116, float* %a_2_addr_1, align 4

ST_154: StgValue_1517 (1178)  [1/1] 0.00ns  loc: minver.c:125
branch70:1  br label %77

ST_154: StgValue_1518 (1180)  [1/1] 2.71ns  loc: minver.c:125
branch69:0  store float %tmp_116, float* %a_1_addr_1, align 4

ST_154: StgValue_1519 (1181)  [1/1] 0.00ns  loc: minver.c:125
branch69:1  br label %77

ST_154: StgValue_1520 (1183)  [1/1] 2.71ns  loc: minver.c:125
branch68:0  store float %tmp_116, float* %a_0_addr_1, align 4

ST_154: StgValue_1521 (1184)  [1/1] 0.00ns  loc: minver.c:125
branch68:1  br label %77

ST_154: StgValue_1522 (1186)  [1/1] 2.71ns  loc: minver.c:125
branch71:0  store float %tmp_116, float* %a_3_addr_1, align 4

ST_154: StgValue_1523 (1187)  [1/1] 0.00ns  loc: minver.c:125
branch71:1  br label %77


 <State 155>: 5.74ns
ST_155: tmp_117 (1189)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_117 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_155: StgValue_1525 (1190)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch195 [
    i3 0, label %branch192
    i3 1, label %branch193
    i3 2, label %branch194
  ]


 <State 156>: 5.45ns
ST_156: tmp_117 (1189)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_117 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 157>: 2.71ns
ST_157: StgValue_1527 (1192)  [1/1] 2.71ns  loc: minver.c:124
branch194:0  store float %tmp_116, float* %a_2_addr, align 4

ST_157: StgValue_1528 (1193)  [1/1] 0.00ns  loc: minver.c:124
branch194:1  br label %78

ST_157: StgValue_1529 (1195)  [1/1] 2.71ns  loc: minver.c:124
branch193:0  store float %tmp_116, float* %a_1_addr, align 4

ST_157: StgValue_1530 (1196)  [1/1] 0.00ns  loc: minver.c:124
branch193:1  br label %78

ST_157: StgValue_1531 (1198)  [1/1] 2.71ns  loc: minver.c:124
branch192:0  store float %tmp_116, float* %a_0_addr, align 4

ST_157: StgValue_1532 (1199)  [1/1] 0.00ns  loc: minver.c:124
branch192:1  br label %78

ST_157: StgValue_1533 (1201)  [1/1] 2.71ns  loc: minver.c:124
branch195:0  store float %tmp_116, float* %a_3_addr, align 4

ST_157: StgValue_1534 (1202)  [1/1] 0.00ns  loc: minver.c:124
branch195:1  br label %78


 <State 158>: 2.71ns
ST_158: StgValue_1535 (1206)  [1/1] 2.71ns  loc: minver.c:125
branch66:0  store float %tmp_117, float* %a_2_addr_1, align 4

ST_158: StgValue_1536 (1207)  [1/1] 0.00ns  loc: minver.c:125
branch66:1  br label %79

ST_158: StgValue_1537 (1209)  [1/1] 2.71ns  loc: minver.c:125
branch65:0  store float %tmp_117, float* %a_1_addr_1, align 4

ST_158: StgValue_1538 (1210)  [1/1] 0.00ns  loc: minver.c:125
branch65:1  br label %79

ST_158: StgValue_1539 (1212)  [1/1] 2.71ns  loc: minver.c:125
branch64:0  store float %tmp_117, float* %a_0_addr_1, align 4

ST_158: StgValue_1540 (1213)  [1/1] 0.00ns  loc: minver.c:125
branch64:1  br label %79

ST_158: StgValue_1541 (1215)  [1/1] 2.71ns  loc: minver.c:125
branch67:0  store float %tmp_117, float* %a_3_addr_1, align 4

ST_158: StgValue_1542 (1216)  [1/1] 0.00ns  loc: minver.c:125
branch67:1  br label %79


 <State 159>: 5.74ns
ST_159: tmp_118 (1218)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_118 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_159: StgValue_1544 (1219)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch191 [
    i3 0, label %branch188
    i3 1, label %branch189
    i3 2, label %branch190
  ]


 <State 160>: 5.45ns
ST_160: tmp_118 (1218)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_118 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 161>: 2.71ns
ST_161: StgValue_1546 (1221)  [1/1] 2.71ns  loc: minver.c:124
branch190:0  store float %tmp_117, float* %a_2_addr, align 4

ST_161: StgValue_1547 (1222)  [1/1] 0.00ns  loc: minver.c:124
branch190:1  br label %80

ST_161: StgValue_1548 (1224)  [1/1] 2.71ns  loc: minver.c:124
branch189:0  store float %tmp_117, float* %a_1_addr, align 4

ST_161: StgValue_1549 (1225)  [1/1] 0.00ns  loc: minver.c:124
branch189:1  br label %80

ST_161: StgValue_1550 (1227)  [1/1] 2.71ns  loc: minver.c:124
branch188:0  store float %tmp_117, float* %a_0_addr, align 4

ST_161: StgValue_1551 (1228)  [1/1] 0.00ns  loc: minver.c:124
branch188:1  br label %80

ST_161: StgValue_1552 (1230)  [1/1] 2.71ns  loc: minver.c:124
branch191:0  store float %tmp_117, float* %a_3_addr, align 4

ST_161: StgValue_1553 (1231)  [1/1] 0.00ns  loc: minver.c:124
branch191:1  br label %80


 <State 162>: 2.71ns
ST_162: StgValue_1554 (1235)  [1/1] 2.71ns  loc: minver.c:125
branch62:0  store float %tmp_118, float* %a_2_addr_1, align 4

ST_162: StgValue_1555 (1236)  [1/1] 0.00ns  loc: minver.c:125
branch62:1  br label %81

ST_162: StgValue_1556 (1238)  [1/1] 2.71ns  loc: minver.c:125
branch61:0  store float %tmp_118, float* %a_1_addr_1, align 4

ST_162: StgValue_1557 (1239)  [1/1] 0.00ns  loc: minver.c:125
branch61:1  br label %81

ST_162: StgValue_1558 (1241)  [1/1] 2.71ns  loc: minver.c:125
branch60:0  store float %tmp_118, float* %a_0_addr_1, align 4

ST_162: StgValue_1559 (1242)  [1/1] 0.00ns  loc: minver.c:125
branch60:1  br label %81

ST_162: StgValue_1560 (1244)  [1/1] 2.71ns  loc: minver.c:125
branch63:0  store float %tmp_118, float* %a_3_addr_1, align 4

ST_162: StgValue_1561 (1245)  [1/1] 0.00ns  loc: minver.c:125
branch63:1  br label %81


 <State 163>: 5.74ns
ST_163: tmp_119 (1247)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_119 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_163: StgValue_1563 (1248)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch187 [
    i3 0, label %branch184
    i3 1, label %branch185
    i3 2, label %branch186
  ]


 <State 164>: 5.45ns
ST_164: tmp_119 (1247)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_119 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 165>: 2.71ns
ST_165: StgValue_1565 (1250)  [1/1] 2.71ns  loc: minver.c:124
branch186:0  store float %tmp_118, float* %a_2_addr, align 4

ST_165: StgValue_1566 (1251)  [1/1] 0.00ns  loc: minver.c:124
branch186:1  br label %82

ST_165: StgValue_1567 (1253)  [1/1] 2.71ns  loc: minver.c:124
branch185:0  store float %tmp_118, float* %a_1_addr, align 4

ST_165: StgValue_1568 (1254)  [1/1] 0.00ns  loc: minver.c:124
branch185:1  br label %82

ST_165: StgValue_1569 (1256)  [1/1] 2.71ns  loc: minver.c:124
branch184:0  store float %tmp_118, float* %a_0_addr, align 4

ST_165: StgValue_1570 (1257)  [1/1] 0.00ns  loc: minver.c:124
branch184:1  br label %82

ST_165: StgValue_1571 (1259)  [1/1] 2.71ns  loc: minver.c:124
branch187:0  store float %tmp_118, float* %a_3_addr, align 4

ST_165: StgValue_1572 (1260)  [1/1] 0.00ns  loc: minver.c:124
branch187:1  br label %82


 <State 166>: 2.71ns
ST_166: StgValue_1573 (1264)  [1/1] 2.71ns  loc: minver.c:125
branch58:0  store float %tmp_119, float* %a_2_addr_1, align 4

ST_166: StgValue_1574 (1265)  [1/1] 0.00ns  loc: minver.c:125
branch58:1  br label %83

ST_166: StgValue_1575 (1267)  [1/1] 2.71ns  loc: minver.c:125
branch57:0  store float %tmp_119, float* %a_1_addr_1, align 4

ST_166: StgValue_1576 (1268)  [1/1] 0.00ns  loc: minver.c:125
branch57:1  br label %83

ST_166: StgValue_1577 (1270)  [1/1] 2.71ns  loc: minver.c:125
branch56:0  store float %tmp_119, float* %a_0_addr_1, align 4

ST_166: StgValue_1578 (1271)  [1/1] 0.00ns  loc: minver.c:125
branch56:1  br label %83

ST_166: StgValue_1579 (1273)  [1/1] 2.71ns  loc: minver.c:125
branch59:0  store float %tmp_119, float* %a_3_addr_1, align 4

ST_166: StgValue_1580 (1274)  [1/1] 0.00ns  loc: minver.c:125
branch59:1  br label %83


 <State 167>: 5.74ns
ST_167: tmp_120 (1276)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_120 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_167: StgValue_1582 (1277)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch183 [
    i3 0, label %branch180
    i3 1, label %branch181
    i3 2, label %branch182
  ]


 <State 168>: 5.45ns
ST_168: tmp_120 (1276)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_120 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 169>: 2.71ns
ST_169: StgValue_1584 (1279)  [1/1] 2.71ns  loc: minver.c:124
branch182:0  store float %tmp_119, float* %a_2_addr, align 4

ST_169: StgValue_1585 (1280)  [1/1] 0.00ns  loc: minver.c:124
branch182:1  br label %84

ST_169: StgValue_1586 (1282)  [1/1] 2.71ns  loc: minver.c:124
branch181:0  store float %tmp_119, float* %a_1_addr, align 4

ST_169: StgValue_1587 (1283)  [1/1] 0.00ns  loc: minver.c:124
branch181:1  br label %84

ST_169: StgValue_1588 (1285)  [1/1] 2.71ns  loc: minver.c:124
branch180:0  store float %tmp_119, float* %a_0_addr, align 4

ST_169: StgValue_1589 (1286)  [1/1] 0.00ns  loc: minver.c:124
branch180:1  br label %84

ST_169: StgValue_1590 (1288)  [1/1] 2.71ns  loc: minver.c:124
branch183:0  store float %tmp_119, float* %a_3_addr, align 4

ST_169: StgValue_1591 (1289)  [1/1] 0.00ns  loc: minver.c:124
branch183:1  br label %84


 <State 170>: 2.71ns
ST_170: StgValue_1592 (1293)  [1/1] 2.71ns  loc: minver.c:125
branch54:0  store float %tmp_120, float* %a_2_addr_1, align 4

ST_170: StgValue_1593 (1294)  [1/1] 0.00ns  loc: minver.c:125
branch54:1  br label %85

ST_170: StgValue_1594 (1296)  [1/1] 2.71ns  loc: minver.c:125
branch53:0  store float %tmp_120, float* %a_1_addr_1, align 4

ST_170: StgValue_1595 (1297)  [1/1] 0.00ns  loc: minver.c:125
branch53:1  br label %85

ST_170: StgValue_1596 (1299)  [1/1] 2.71ns  loc: minver.c:125
branch52:0  store float %tmp_120, float* %a_0_addr_1, align 4

ST_170: StgValue_1597 (1300)  [1/1] 0.00ns  loc: minver.c:125
branch52:1  br label %85

ST_170: StgValue_1598 (1302)  [1/1] 2.71ns  loc: minver.c:125
branch55:0  store float %tmp_120, float* %a_3_addr_1, align 4

ST_170: StgValue_1599 (1303)  [1/1] 0.00ns  loc: minver.c:125
branch55:1  br label %85


 <State 171>: 5.74ns
ST_171: tmp_121 (1305)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_121 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_171: StgValue_1601 (1306)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch179 [
    i3 0, label %branch176
    i3 1, label %branch177
    i3 2, label %branch178
  ]


 <State 172>: 5.45ns
ST_172: tmp_121 (1305)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_121 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 173>: 2.71ns
ST_173: StgValue_1603 (1308)  [1/1] 2.71ns  loc: minver.c:124
branch178:0  store float %tmp_120, float* %a_2_addr, align 4

ST_173: StgValue_1604 (1309)  [1/1] 0.00ns  loc: minver.c:124
branch178:1  br label %86

ST_173: StgValue_1605 (1311)  [1/1] 2.71ns  loc: minver.c:124
branch177:0  store float %tmp_120, float* %a_1_addr, align 4

ST_173: StgValue_1606 (1312)  [1/1] 0.00ns  loc: minver.c:124
branch177:1  br label %86

ST_173: StgValue_1607 (1314)  [1/1] 2.71ns  loc: minver.c:124
branch176:0  store float %tmp_120, float* %a_0_addr, align 4

ST_173: StgValue_1608 (1315)  [1/1] 0.00ns  loc: minver.c:124
branch176:1  br label %86

ST_173: StgValue_1609 (1317)  [1/1] 2.71ns  loc: minver.c:124
branch179:0  store float %tmp_120, float* %a_3_addr, align 4

ST_173: StgValue_1610 (1318)  [1/1] 0.00ns  loc: minver.c:124
branch179:1  br label %86


 <State 174>: 2.71ns
ST_174: StgValue_1611 (1322)  [1/1] 2.71ns  loc: minver.c:125
branch50:0  store float %tmp_121, float* %a_2_addr_1, align 4

ST_174: StgValue_1612 (1323)  [1/1] 0.00ns  loc: minver.c:125
branch50:1  br label %87

ST_174: StgValue_1613 (1325)  [1/1] 2.71ns  loc: minver.c:125
branch49:0  store float %tmp_121, float* %a_1_addr_1, align 4

ST_174: StgValue_1614 (1326)  [1/1] 0.00ns  loc: minver.c:125
branch49:1  br label %87

ST_174: StgValue_1615 (1328)  [1/1] 2.71ns  loc: minver.c:125
branch48:0  store float %tmp_121, float* %a_0_addr_1, align 4

ST_174: StgValue_1616 (1329)  [1/1] 0.00ns  loc: minver.c:125
branch48:1  br label %87

ST_174: StgValue_1617 (1331)  [1/1] 2.71ns  loc: minver.c:125
branch51:0  store float %tmp_121, float* %a_3_addr_1, align 4

ST_174: StgValue_1618 (1332)  [1/1] 0.00ns  loc: minver.c:125
branch51:1  br label %87


 <State 175>: 5.74ns
ST_175: tmp_122 (1334)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_122 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_175: StgValue_1620 (1335)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch175 [
    i3 0, label %branch172
    i3 1, label %branch173
    i3 2, label %branch174
  ]


 <State 176>: 5.45ns
ST_176: tmp_122 (1334)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_122 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 177>: 2.71ns
ST_177: StgValue_1622 (1337)  [1/1] 2.71ns  loc: minver.c:124
branch174:0  store float %tmp_121, float* %a_2_addr, align 4

ST_177: StgValue_1623 (1338)  [1/1] 0.00ns  loc: minver.c:124
branch174:1  br label %88

ST_177: StgValue_1624 (1340)  [1/1] 2.71ns  loc: minver.c:124
branch173:0  store float %tmp_121, float* %a_1_addr, align 4

ST_177: StgValue_1625 (1341)  [1/1] 0.00ns  loc: minver.c:124
branch173:1  br label %88

ST_177: StgValue_1626 (1343)  [1/1] 2.71ns  loc: minver.c:124
branch172:0  store float %tmp_121, float* %a_0_addr, align 4

ST_177: StgValue_1627 (1344)  [1/1] 0.00ns  loc: minver.c:124
branch172:1  br label %88

ST_177: StgValue_1628 (1346)  [1/1] 2.71ns  loc: minver.c:124
branch175:0  store float %tmp_121, float* %a_3_addr, align 4

ST_177: StgValue_1629 (1347)  [1/1] 0.00ns  loc: minver.c:124
branch175:1  br label %88


 <State 178>: 2.71ns
ST_178: StgValue_1630 (1351)  [1/1] 2.71ns  loc: minver.c:125
branch46:0  store float %tmp_122, float* %a_2_addr_1, align 4

ST_178: StgValue_1631 (1352)  [1/1] 0.00ns  loc: minver.c:125
branch46:1  br label %89

ST_178: StgValue_1632 (1354)  [1/1] 2.71ns  loc: minver.c:125
branch45:0  store float %tmp_122, float* %a_1_addr_1, align 4

ST_178: StgValue_1633 (1355)  [1/1] 0.00ns  loc: minver.c:125
branch45:1  br label %89

ST_178: StgValue_1634 (1357)  [1/1] 2.71ns  loc: minver.c:125
branch44:0  store float %tmp_122, float* %a_0_addr_1, align 4

ST_178: StgValue_1635 (1358)  [1/1] 0.00ns  loc: minver.c:125
branch44:1  br label %89

ST_178: StgValue_1636 (1360)  [1/1] 2.71ns  loc: minver.c:125
branch47:0  store float %tmp_122, float* %a_3_addr_1, align 4

ST_178: StgValue_1637 (1361)  [1/1] 0.00ns  loc: minver.c:125
branch47:1  br label %89


 <State 179>: 5.74ns
ST_179: tmp_123 (1363)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_123 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_179: StgValue_1639 (1364)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch171 [
    i3 0, label %branch168
    i3 1, label %branch169
    i3 2, label %branch170
  ]


 <State 180>: 5.45ns
ST_180: tmp_123 (1363)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_123 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 181>: 2.71ns
ST_181: StgValue_1641 (1366)  [1/1] 2.71ns  loc: minver.c:124
branch170:0  store float %tmp_122, float* %a_2_addr, align 4

ST_181: StgValue_1642 (1367)  [1/1] 0.00ns  loc: minver.c:124
branch170:1  br label %90

ST_181: StgValue_1643 (1369)  [1/1] 2.71ns  loc: minver.c:124
branch169:0  store float %tmp_122, float* %a_1_addr, align 4

ST_181: StgValue_1644 (1370)  [1/1] 0.00ns  loc: minver.c:124
branch169:1  br label %90

ST_181: StgValue_1645 (1372)  [1/1] 2.71ns  loc: minver.c:124
branch168:0  store float %tmp_122, float* %a_0_addr, align 4

ST_181: StgValue_1646 (1373)  [1/1] 0.00ns  loc: minver.c:124
branch168:1  br label %90

ST_181: StgValue_1647 (1375)  [1/1] 2.71ns  loc: minver.c:124
branch171:0  store float %tmp_122, float* %a_3_addr, align 4

ST_181: StgValue_1648 (1376)  [1/1] 0.00ns  loc: minver.c:124
branch171:1  br label %90


 <State 182>: 2.71ns
ST_182: StgValue_1649 (1380)  [1/1] 2.71ns  loc: minver.c:125
branch42:0  store float %tmp_123, float* %a_2_addr_1, align 4

ST_182: StgValue_1650 (1381)  [1/1] 0.00ns  loc: minver.c:125
branch42:1  br label %91

ST_182: StgValue_1651 (1383)  [1/1] 2.71ns  loc: minver.c:125
branch41:0  store float %tmp_123, float* %a_1_addr_1, align 4

ST_182: StgValue_1652 (1384)  [1/1] 0.00ns  loc: minver.c:125
branch41:1  br label %91

ST_182: StgValue_1653 (1386)  [1/1] 2.71ns  loc: minver.c:125
branch40:0  store float %tmp_123, float* %a_0_addr_1, align 4

ST_182: StgValue_1654 (1387)  [1/1] 0.00ns  loc: minver.c:125
branch40:1  br label %91

ST_182: StgValue_1655 (1389)  [1/1] 2.71ns  loc: minver.c:125
branch43:0  store float %tmp_123, float* %a_3_addr_1, align 4

ST_182: StgValue_1656 (1390)  [1/1] 0.00ns  loc: minver.c:125
branch43:1  br label %91


 <State 183>: 5.74ns
ST_183: tmp_124 (1392)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_124 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_183: StgValue_1658 (1393)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch167 [
    i3 0, label %branch164
    i3 1, label %branch165
    i3 2, label %branch166
  ]


 <State 184>: 5.45ns
ST_184: tmp_124 (1392)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_124 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 185>: 2.71ns
ST_185: StgValue_1660 (1395)  [1/1] 2.71ns  loc: minver.c:124
branch166:0  store float %tmp_123, float* %a_2_addr, align 4

ST_185: StgValue_1661 (1396)  [1/1] 0.00ns  loc: minver.c:124
branch166:1  br label %92

ST_185: StgValue_1662 (1398)  [1/1] 2.71ns  loc: minver.c:124
branch165:0  store float %tmp_123, float* %a_1_addr, align 4

ST_185: StgValue_1663 (1399)  [1/1] 0.00ns  loc: minver.c:124
branch165:1  br label %92

ST_185: StgValue_1664 (1401)  [1/1] 2.71ns  loc: minver.c:124
branch164:0  store float %tmp_123, float* %a_0_addr, align 4

ST_185: StgValue_1665 (1402)  [1/1] 0.00ns  loc: minver.c:124
branch164:1  br label %92

ST_185: StgValue_1666 (1404)  [1/1] 2.71ns  loc: minver.c:124
branch167:0  store float %tmp_123, float* %a_3_addr, align 4

ST_185: StgValue_1667 (1405)  [1/1] 0.00ns  loc: minver.c:124
branch167:1  br label %92


 <State 186>: 2.71ns
ST_186: StgValue_1668 (1409)  [1/1] 2.71ns  loc: minver.c:125
branch38:0  store float %tmp_124, float* %a_2_addr_1, align 4

ST_186: StgValue_1669 (1410)  [1/1] 0.00ns  loc: minver.c:125
branch38:1  br label %93

ST_186: StgValue_1670 (1412)  [1/1] 2.71ns  loc: minver.c:125
branch37:0  store float %tmp_124, float* %a_1_addr_1, align 4

ST_186: StgValue_1671 (1413)  [1/1] 0.00ns  loc: minver.c:125
branch37:1  br label %93

ST_186: StgValue_1672 (1415)  [1/1] 2.71ns  loc: minver.c:125
branch36:0  store float %tmp_124, float* %a_0_addr_1, align 4

ST_186: StgValue_1673 (1416)  [1/1] 0.00ns  loc: minver.c:125
branch36:1  br label %93

ST_186: StgValue_1674 (1418)  [1/1] 2.71ns  loc: minver.c:125
branch39:0  store float %tmp_124, float* %a_3_addr_1, align 4

ST_186: StgValue_1675 (1419)  [1/1] 0.00ns  loc: minver.c:125
branch39:1  br label %93


 <State 187>: 5.74ns
ST_187: tmp_125 (1421)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_125 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_187: StgValue_1677 (1422)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch163 [
    i3 0, label %branch160
    i3 1, label %branch161
    i3 2, label %branch162
  ]


 <State 188>: 5.45ns
ST_188: tmp_125 (1421)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_125 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 189>: 2.71ns
ST_189: StgValue_1679 (1424)  [1/1] 2.71ns  loc: minver.c:124
branch162:0  store float %tmp_124, float* %a_2_addr, align 4

ST_189: StgValue_1680 (1425)  [1/1] 0.00ns  loc: minver.c:124
branch162:1  br label %94

ST_189: StgValue_1681 (1427)  [1/1] 2.71ns  loc: minver.c:124
branch161:0  store float %tmp_124, float* %a_1_addr, align 4

ST_189: StgValue_1682 (1428)  [1/1] 0.00ns  loc: minver.c:124
branch161:1  br label %94

ST_189: StgValue_1683 (1430)  [1/1] 2.71ns  loc: minver.c:124
branch160:0  store float %tmp_124, float* %a_0_addr, align 4

ST_189: StgValue_1684 (1431)  [1/1] 0.00ns  loc: minver.c:124
branch160:1  br label %94

ST_189: StgValue_1685 (1433)  [1/1] 2.71ns  loc: minver.c:124
branch163:0  store float %tmp_124, float* %a_3_addr, align 4

ST_189: StgValue_1686 (1434)  [1/1] 0.00ns  loc: minver.c:124
branch163:1  br label %94


 <State 190>: 2.71ns
ST_190: StgValue_1687 (1438)  [1/1] 2.71ns  loc: minver.c:125
branch34:0  store float %tmp_125, float* %a_2_addr_1, align 4

ST_190: StgValue_1688 (1439)  [1/1] 0.00ns  loc: minver.c:125
branch34:1  br label %95

ST_190: StgValue_1689 (1441)  [1/1] 2.71ns  loc: minver.c:125
branch33:0  store float %tmp_125, float* %a_1_addr_1, align 4

ST_190: StgValue_1690 (1442)  [1/1] 0.00ns  loc: minver.c:125
branch33:1  br label %95

ST_190: StgValue_1691 (1444)  [1/1] 2.71ns  loc: minver.c:125
branch32:0  store float %tmp_125, float* %a_0_addr_1, align 4

ST_190: StgValue_1692 (1445)  [1/1] 0.00ns  loc: minver.c:125
branch32:1  br label %95

ST_190: StgValue_1693 (1447)  [1/1] 2.71ns  loc: minver.c:125
branch35:0  store float %tmp_125, float* %a_3_addr_1, align 4

ST_190: StgValue_1694 (1448)  [1/1] 0.00ns  loc: minver.c:125
branch35:1  br label %95


 <State 191>: 5.74ns
ST_191: tmp_126 (1450)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_126 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_191: StgValue_1696 (1451)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch159 [
    i3 0, label %branch156
    i3 1, label %branch157
    i3 2, label %branch158
  ]


 <State 192>: 5.45ns
ST_192: tmp_126 (1450)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_126 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 193>: 2.71ns
ST_193: StgValue_1698 (1453)  [1/1] 2.71ns  loc: minver.c:124
branch158:0  store float %tmp_125, float* %a_2_addr, align 4

ST_193: StgValue_1699 (1454)  [1/1] 0.00ns  loc: minver.c:124
branch158:1  br label %96

ST_193: StgValue_1700 (1456)  [1/1] 2.71ns  loc: minver.c:124
branch157:0  store float %tmp_125, float* %a_1_addr, align 4

ST_193: StgValue_1701 (1457)  [1/1] 0.00ns  loc: minver.c:124
branch157:1  br label %96

ST_193: StgValue_1702 (1459)  [1/1] 2.71ns  loc: minver.c:124
branch156:0  store float %tmp_125, float* %a_0_addr, align 4

ST_193: StgValue_1703 (1460)  [1/1] 0.00ns  loc: minver.c:124
branch156:1  br label %96

ST_193: StgValue_1704 (1462)  [1/1] 2.71ns  loc: minver.c:124
branch159:0  store float %tmp_125, float* %a_3_addr, align 4

ST_193: StgValue_1705 (1463)  [1/1] 0.00ns  loc: minver.c:124
branch159:1  br label %96


 <State 194>: 2.71ns
ST_194: StgValue_1706 (1467)  [1/1] 2.71ns  loc: minver.c:125
branch30:0  store float %tmp_126, float* %a_2_addr_1, align 4

ST_194: StgValue_1707 (1468)  [1/1] 0.00ns  loc: minver.c:125
branch30:1  br label %97

ST_194: StgValue_1708 (1470)  [1/1] 2.71ns  loc: minver.c:125
branch29:0  store float %tmp_126, float* %a_1_addr_1, align 4

ST_194: StgValue_1709 (1471)  [1/1] 0.00ns  loc: minver.c:125
branch29:1  br label %97

ST_194: StgValue_1710 (1473)  [1/1] 2.71ns  loc: minver.c:125
branch28:0  store float %tmp_126, float* %a_0_addr_1, align 4

ST_194: StgValue_1711 (1474)  [1/1] 0.00ns  loc: minver.c:125
branch28:1  br label %97

ST_194: StgValue_1712 (1476)  [1/1] 2.71ns  loc: minver.c:125
branch31:0  store float %tmp_126, float* %a_3_addr_1, align 4

ST_194: StgValue_1713 (1477)  [1/1] 0.00ns  loc: minver.c:125
branch31:1  br label %97


 <State 195>: 5.74ns
ST_195: tmp_127 (1479)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_127 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_195: StgValue_1715 (1480)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch155 [
    i3 0, label %branch152
    i3 1, label %branch153
    i3 2, label %branch154
  ]


 <State 196>: 5.45ns
ST_196: tmp_127 (1479)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_127 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 197>: 2.71ns
ST_197: StgValue_1717 (1482)  [1/1] 2.71ns  loc: minver.c:124
branch154:0  store float %tmp_126, float* %a_2_addr, align 4

ST_197: StgValue_1718 (1483)  [1/1] 0.00ns  loc: minver.c:124
branch154:1  br label %98

ST_197: StgValue_1719 (1485)  [1/1] 2.71ns  loc: minver.c:124
branch153:0  store float %tmp_126, float* %a_1_addr, align 4

ST_197: StgValue_1720 (1486)  [1/1] 0.00ns  loc: minver.c:124
branch153:1  br label %98

ST_197: StgValue_1721 (1488)  [1/1] 2.71ns  loc: minver.c:124
branch152:0  store float %tmp_126, float* %a_0_addr, align 4

ST_197: StgValue_1722 (1489)  [1/1] 0.00ns  loc: minver.c:124
branch152:1  br label %98

ST_197: StgValue_1723 (1491)  [1/1] 2.71ns  loc: minver.c:124
branch155:0  store float %tmp_126, float* %a_3_addr, align 4

ST_197: StgValue_1724 (1492)  [1/1] 0.00ns  loc: minver.c:124
branch155:1  br label %98


 <State 198>: 2.71ns
ST_198: StgValue_1725 (1496)  [1/1] 2.71ns  loc: minver.c:125
branch26:0  store float %tmp_127, float* %a_2_addr_1, align 4

ST_198: StgValue_1726 (1497)  [1/1] 0.00ns  loc: minver.c:125
branch26:1  br label %99

ST_198: StgValue_1727 (1499)  [1/1] 2.71ns  loc: minver.c:125
branch25:0  store float %tmp_127, float* %a_1_addr_1, align 4

ST_198: StgValue_1728 (1500)  [1/1] 0.00ns  loc: minver.c:125
branch25:1  br label %99

ST_198: StgValue_1729 (1502)  [1/1] 2.71ns  loc: minver.c:125
branch24:0  store float %tmp_127, float* %a_0_addr_1, align 4

ST_198: StgValue_1730 (1503)  [1/1] 0.00ns  loc: minver.c:125
branch24:1  br label %99

ST_198: StgValue_1731 (1505)  [1/1] 2.71ns  loc: minver.c:125
branch27:0  store float %tmp_127, float* %a_3_addr_1, align 4

ST_198: StgValue_1732 (1506)  [1/1] 0.00ns  loc: minver.c:125
branch27:1  br label %99


 <State 199>: 5.74ns
ST_199: tmp_128 (1508)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_128 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_199: StgValue_1734 (1509)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch151 [
    i3 0, label %branch148
    i3 1, label %branch149
    i3 2, label %branch150
  ]


 <State 200>: 5.45ns
ST_200: tmp_128 (1508)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_128 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 201>: 2.71ns
ST_201: StgValue_1736 (1511)  [1/1] 2.71ns  loc: minver.c:124
branch150:0  store float %tmp_127, float* %a_2_addr, align 4

ST_201: StgValue_1737 (1512)  [1/1] 0.00ns  loc: minver.c:124
branch150:1  br label %100

ST_201: StgValue_1738 (1514)  [1/1] 2.71ns  loc: minver.c:124
branch149:0  store float %tmp_127, float* %a_1_addr, align 4

ST_201: StgValue_1739 (1515)  [1/1] 0.00ns  loc: minver.c:124
branch149:1  br label %100

ST_201: StgValue_1740 (1517)  [1/1] 2.71ns  loc: minver.c:124
branch148:0  store float %tmp_127, float* %a_0_addr, align 4

ST_201: StgValue_1741 (1518)  [1/1] 0.00ns  loc: minver.c:124
branch148:1  br label %100

ST_201: StgValue_1742 (1520)  [1/1] 2.71ns  loc: minver.c:124
branch151:0  store float %tmp_127, float* %a_3_addr, align 4

ST_201: StgValue_1743 (1521)  [1/1] 0.00ns  loc: minver.c:124
branch151:1  br label %100


 <State 202>: 2.71ns
ST_202: StgValue_1744 (1525)  [1/1] 2.71ns  loc: minver.c:125
branch22:0  store float %tmp_128, float* %a_2_addr_1, align 4

ST_202: StgValue_1745 (1526)  [1/1] 0.00ns  loc: minver.c:125
branch22:1  br label %101

ST_202: StgValue_1746 (1528)  [1/1] 2.71ns  loc: minver.c:125
branch21:0  store float %tmp_128, float* %a_1_addr_1, align 4

ST_202: StgValue_1747 (1529)  [1/1] 0.00ns  loc: minver.c:125
branch21:1  br label %101

ST_202: StgValue_1748 (1531)  [1/1] 2.71ns  loc: minver.c:125
branch20:0  store float %tmp_128, float* %a_0_addr_1, align 4

ST_202: StgValue_1749 (1532)  [1/1] 0.00ns  loc: minver.c:125
branch20:1  br label %101

ST_202: StgValue_1750 (1534)  [1/1] 2.71ns  loc: minver.c:125
branch23:0  store float %tmp_128, float* %a_3_addr_1, align 4

ST_202: StgValue_1751 (1535)  [1/1] 0.00ns  loc: minver.c:125
branch23:1  br label %101


 <State 203>: 5.74ns
ST_203: tmp_129 (1537)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_129 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_203: StgValue_1753 (1538)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch147 [
    i3 0, label %branch144
    i3 1, label %branch145
    i3 2, label %branch146
  ]


 <State 204>: 5.45ns
ST_204: tmp_129 (1537)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_129 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 205>: 2.71ns
ST_205: StgValue_1755 (1540)  [1/1] 2.71ns  loc: minver.c:124
branch146:0  store float %tmp_128, float* %a_2_addr, align 4

ST_205: StgValue_1756 (1541)  [1/1] 0.00ns  loc: minver.c:124
branch146:1  br label %102

ST_205: StgValue_1757 (1543)  [1/1] 2.71ns  loc: minver.c:124
branch145:0  store float %tmp_128, float* %a_1_addr, align 4

ST_205: StgValue_1758 (1544)  [1/1] 0.00ns  loc: minver.c:124
branch145:1  br label %102

ST_205: StgValue_1759 (1546)  [1/1] 2.71ns  loc: minver.c:124
branch144:0  store float %tmp_128, float* %a_0_addr, align 4

ST_205: StgValue_1760 (1547)  [1/1] 0.00ns  loc: minver.c:124
branch144:1  br label %102

ST_205: StgValue_1761 (1549)  [1/1] 2.71ns  loc: minver.c:124
branch147:0  store float %tmp_128, float* %a_3_addr, align 4

ST_205: StgValue_1762 (1550)  [1/1] 0.00ns  loc: minver.c:124
branch147:1  br label %102


 <State 206>: 2.71ns
ST_206: StgValue_1763 (1554)  [1/1] 2.71ns  loc: minver.c:125
branch18:0  store float %tmp_129, float* %a_2_addr_1, align 4

ST_206: StgValue_1764 (1555)  [1/1] 0.00ns  loc: minver.c:125
branch18:1  br label %103

ST_206: StgValue_1765 (1557)  [1/1] 2.71ns  loc: minver.c:125
branch17:0  store float %tmp_129, float* %a_1_addr_1, align 4

ST_206: StgValue_1766 (1558)  [1/1] 0.00ns  loc: minver.c:125
branch17:1  br label %103

ST_206: StgValue_1767 (1560)  [1/1] 2.71ns  loc: minver.c:125
branch16:0  store float %tmp_129, float* %a_0_addr_1, align 4

ST_206: StgValue_1768 (1561)  [1/1] 0.00ns  loc: minver.c:125
branch16:1  br label %103

ST_206: StgValue_1769 (1563)  [1/1] 2.71ns  loc: minver.c:125
branch19:0  store float %tmp_129, float* %a_3_addr_1, align 4

ST_206: StgValue_1770 (1564)  [1/1] 0.00ns  loc: minver.c:125
branch19:1  br label %103


 <State 207>: 5.74ns
ST_207: tmp_130 (1566)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_130 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_207: StgValue_1772 (1567)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch143 [
    i3 0, label %branch140
    i3 1, label %branch141
    i3 2, label %branch142
  ]


 <State 208>: 5.45ns
ST_208: tmp_130 (1566)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_130 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 209>: 2.71ns
ST_209: StgValue_1774 (1569)  [1/1] 2.71ns  loc: minver.c:124
branch142:0  store float %tmp_129, float* %a_2_addr, align 4

ST_209: StgValue_1775 (1570)  [1/1] 0.00ns  loc: minver.c:124
branch142:1  br label %104

ST_209: StgValue_1776 (1572)  [1/1] 2.71ns  loc: minver.c:124
branch141:0  store float %tmp_129, float* %a_1_addr, align 4

ST_209: StgValue_1777 (1573)  [1/1] 0.00ns  loc: minver.c:124
branch141:1  br label %104

ST_209: StgValue_1778 (1575)  [1/1] 2.71ns  loc: minver.c:124
branch140:0  store float %tmp_129, float* %a_0_addr, align 4

ST_209: StgValue_1779 (1576)  [1/1] 0.00ns  loc: minver.c:124
branch140:1  br label %104

ST_209: StgValue_1780 (1578)  [1/1] 2.71ns  loc: minver.c:124
branch143:0  store float %tmp_129, float* %a_3_addr, align 4

ST_209: StgValue_1781 (1579)  [1/1] 0.00ns  loc: minver.c:124
branch143:1  br label %104


 <State 210>: 2.71ns
ST_210: StgValue_1782 (1583)  [1/1] 2.71ns  loc: minver.c:125
branch14:0  store float %tmp_130, float* %a_2_addr_1, align 4

ST_210: StgValue_1783 (1584)  [1/1] 0.00ns  loc: minver.c:125
branch14:1  br label %105

ST_210: StgValue_1784 (1586)  [1/1] 2.71ns  loc: minver.c:125
branch13:0  store float %tmp_130, float* %a_1_addr_1, align 4

ST_210: StgValue_1785 (1587)  [1/1] 0.00ns  loc: minver.c:125
branch13:1  br label %105

ST_210: StgValue_1786 (1589)  [1/1] 2.71ns  loc: minver.c:125
branch12:0  store float %tmp_130, float* %a_0_addr_1, align 4

ST_210: StgValue_1787 (1590)  [1/1] 0.00ns  loc: minver.c:125
branch12:1  br label %105

ST_210: StgValue_1788 (1592)  [1/1] 2.71ns  loc: minver.c:125
branch15:0  store float %tmp_130, float* %a_3_addr_1, align 4

ST_210: StgValue_1789 (1593)  [1/1] 0.00ns  loc: minver.c:125
branch15:1  br label %105


 <State 211>: 5.74ns
ST_211: tmp_131 (1595)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_131 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_211: StgValue_1791 (1596)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch139 [
    i3 0, label %branch136
    i3 1, label %branch137
    i3 2, label %branch138
  ]


 <State 212>: 5.45ns
ST_212: tmp_131 (1595)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_131 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 213>: 2.71ns
ST_213: StgValue_1793 (1598)  [1/1] 2.71ns  loc: minver.c:124
branch138:0  store float %tmp_130, float* %a_2_addr, align 4

ST_213: StgValue_1794 (1599)  [1/1] 0.00ns  loc: minver.c:124
branch138:1  br label %106

ST_213: StgValue_1795 (1601)  [1/1] 2.71ns  loc: minver.c:124
branch137:0  store float %tmp_130, float* %a_1_addr, align 4

ST_213: StgValue_1796 (1602)  [1/1] 0.00ns  loc: minver.c:124
branch137:1  br label %106

ST_213: StgValue_1797 (1604)  [1/1] 2.71ns  loc: minver.c:124
branch136:0  store float %tmp_130, float* %a_0_addr, align 4

ST_213: StgValue_1798 (1605)  [1/1] 0.00ns  loc: minver.c:124
branch136:1  br label %106

ST_213: StgValue_1799 (1607)  [1/1] 2.71ns  loc: minver.c:124
branch139:0  store float %tmp_130, float* %a_3_addr, align 4

ST_213: StgValue_1800 (1608)  [1/1] 0.00ns  loc: minver.c:124
branch139:1  br label %106


 <State 214>: 2.71ns
ST_214: StgValue_1801 (1612)  [1/1] 2.71ns  loc: minver.c:125
branch10:0  store float %tmp_131, float* %a_2_addr_1, align 4

ST_214: StgValue_1802 (1613)  [1/1] 0.00ns  loc: minver.c:125
branch10:1  br label %107

ST_214: StgValue_1803 (1615)  [1/1] 2.71ns  loc: minver.c:125
branch9:0  store float %tmp_131, float* %a_1_addr_1, align 4

ST_214: StgValue_1804 (1616)  [1/1] 0.00ns  loc: minver.c:125
branch9:1  br label %107

ST_214: StgValue_1805 (1618)  [1/1] 2.71ns  loc: minver.c:125
branch8:0  store float %tmp_131, float* %a_0_addr_1, align 4

ST_214: StgValue_1806 (1619)  [1/1] 0.00ns  loc: minver.c:125
branch8:1  br label %107

ST_214: StgValue_1807 (1621)  [1/1] 2.71ns  loc: minver.c:125
branch11:0  store float %tmp_131, float* %a_3_addr_1, align 4

ST_214: StgValue_1808 (1622)  [1/1] 0.00ns  loc: minver.c:125
branch11:1  br label %107


 <State 215>: 5.74ns
ST_215: tmp_132 (1624)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_132 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_215: StgValue_1810 (1625)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch135 [
    i3 0, label %branch132
    i3 1, label %branch133
    i3 2, label %branch134
  ]


 <State 216>: 5.45ns
ST_216: tmp_132 (1624)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_132 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 217>: 2.71ns
ST_217: StgValue_1812 (1627)  [1/1] 2.71ns  loc: minver.c:124
branch134:0  store float %tmp_131, float* %a_2_addr, align 4

ST_217: StgValue_1813 (1628)  [1/1] 0.00ns  loc: minver.c:124
branch134:1  br label %108

ST_217: StgValue_1814 (1630)  [1/1] 2.71ns  loc: minver.c:124
branch133:0  store float %tmp_131, float* %a_1_addr, align 4

ST_217: StgValue_1815 (1631)  [1/1] 0.00ns  loc: minver.c:124
branch133:1  br label %108

ST_217: StgValue_1816 (1633)  [1/1] 2.71ns  loc: minver.c:124
branch132:0  store float %tmp_131, float* %a_0_addr, align 4

ST_217: StgValue_1817 (1634)  [1/1] 0.00ns  loc: minver.c:124
branch132:1  br label %108

ST_217: StgValue_1818 (1636)  [1/1] 2.71ns  loc: minver.c:124
branch135:0  store float %tmp_131, float* %a_3_addr, align 4

ST_217: StgValue_1819 (1637)  [1/1] 0.00ns  loc: minver.c:124
branch135:1  br label %108


 <State 218>: 2.71ns
ST_218: StgValue_1820 (1641)  [1/1] 2.71ns  loc: minver.c:125
branch6:0  store float %tmp_132, float* %a_2_addr_1, align 4

ST_218: StgValue_1821 (1642)  [1/1] 0.00ns  loc: minver.c:125
branch6:1  br label %109

ST_218: StgValue_1822 (1644)  [1/1] 2.71ns  loc: minver.c:125
branch5:0  store float %tmp_132, float* %a_1_addr_1, align 4

ST_218: StgValue_1823 (1645)  [1/1] 0.00ns  loc: minver.c:125
branch5:1  br label %109

ST_218: StgValue_1824 (1647)  [1/1] 2.71ns  loc: minver.c:125
branch4:0  store float %tmp_132, float* %a_0_addr_1, align 4

ST_218: StgValue_1825 (1648)  [1/1] 0.00ns  loc: minver.c:125
branch4:1  br label %109

ST_218: StgValue_1826 (1650)  [1/1] 2.71ns  loc: minver.c:125
branch7:0  store float %tmp_132, float* %a_3_addr_1, align 4

ST_218: StgValue_1827 (1651)  [1/1] 0.00ns  loc: minver.c:125
branch7:1  br label %109


 <State 219>: 5.74ns
ST_219: tmp_133 (1653)  [2/2] 5.74ns  loc: minver.c:129
:0  %tmp_133 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)

ST_219: StgValue_1829 (1654)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch131 [
    i3 0, label %branch128
    i3 1, label %branch129
    i3 2, label %branch130
  ]


 <State 220>: 5.45ns
ST_220: tmp_133 (1653)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_133 = call fastcc float @aesl_mux_load_4_32_x([256 x float]* %a_0, [256 x float]* %a_1, [256 x float]* %a_2, [256 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i3 %tmp_46)


 <State 221>: 2.71ns
ST_221: StgValue_1831 (1656)  [1/1] 2.71ns  loc: minver.c:124
branch130:0  store float %tmp_132, float* %a_2_addr, align 4

ST_221: StgValue_1832 (1657)  [1/1] 0.00ns  loc: minver.c:124
branch130:1  br label %110

ST_221: StgValue_1833 (1659)  [1/1] 2.71ns  loc: minver.c:124
branch129:0  store float %tmp_132, float* %a_1_addr, align 4

ST_221: StgValue_1834 (1660)  [1/1] 0.00ns  loc: minver.c:124
branch129:1  br label %110

ST_221: StgValue_1835 (1662)  [1/1] 2.71ns  loc: minver.c:124
branch128:0  store float %tmp_132, float* %a_0_addr, align 4

ST_221: StgValue_1836 (1663)  [1/1] 0.00ns  loc: minver.c:124
branch128:1  br label %110

ST_221: StgValue_1837 (1665)  [1/1] 2.71ns  loc: minver.c:124
branch131:0  store float %tmp_132, float* %a_3_addr, align 4

ST_221: StgValue_1838 (1666)  [1/1] 0.00ns  loc: minver.c:124
branch131:1  br label %110


 <State 222>: 2.71ns
ST_222: StgValue_1839 (1670)  [1/1] 2.71ns  loc: minver.c:125
branch2:0  store float %tmp_133, float* %a_2_addr_1, align 4

ST_222: StgValue_1840 (1671)  [1/1] 0.00ns  loc: minver.c:125
branch2:1  br label %111

ST_222: StgValue_1841 (1673)  [1/1] 2.71ns  loc: minver.c:125
branch1:0  store float %tmp_133, float* %a_1_addr_1, align 4

ST_222: StgValue_1842 (1674)  [1/1] 0.00ns  loc: minver.c:125
branch1:1  br label %111

ST_222: StgValue_1843 (1676)  [1/1] 2.71ns  loc: minver.c:125
branch0:0  store float %tmp_133, float* %a_0_addr_1, align 4

ST_222: StgValue_1844 (1677)  [1/1] 0.00ns  loc: minver.c:125
branch0:1  br label %111

ST_222: StgValue_1845 (1679)  [1/1] 2.71ns  loc: minver.c:125
branch3:0  store float %tmp_133, float* %a_3_addr_1, align 4

ST_222: StgValue_1846 (1680)  [1/1] 0.00ns  loc: minver.c:125
branch3:1  br label %111


 <State 223>: 0.00ns
ST_223: StgValue_1847 (1685)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (0 ns)
	'store' operation (minver.c:52) of variable 'i' on array 'work', minver.c:41 [27]  (2.71 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'alloca' operation ('r') [31]  (0 ns)
	'store' operation of constant 0 on local variable 'r' [32]  (1.57 ns)

 <State 4>: 1.67ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:56) [35]  (0 ns)
	'add' operation ('k', minver.c:56) [37]  (1.67 ns)

 <State 5>: 2.93ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast', minver.c:59) ('i', minver.c:59) [102]  (0 ns)
	'icmp' operation ('exitcond6', minver.c:59) [103]  (2.93 ns)

 <State 6>: 5.74ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_32_x' [111]  (5.74 ns)

 <State 7>: 5.45ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_32_x' [111]  (5.45 ns)

 <State 8>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_53', minver_lib.c:11->minver.c:61) [118]  (6.37 ns)
	'and' operation ('tmp_54', minver_lib.c:11->minver.c:61) [119]  (0 ns)
	'select' operation ('w', minver.c:63) [122]  (1.37 ns)

 <State 9>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_62', minver.c:62) [136]  (6.37 ns)
	'and' operation ('tmp_63', minver.c:62) [137]  (1.37 ns)

 <State 10>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_1', minver.c:62) on local variable 'r' [106]  (0 ns)
	'select' operation ('r', minver.c:62) [139]  (1.37 ns)
	'store' operation (minver.c:62) of variable 'r', minver.c:62 on local variable 'r' [142]  (1.57 ns)

 <State 11>: 5.74ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [145]  (0 ns)
	'call' operation ('pivot', minver.c:56) to 'aesl_mux_load_4_32_x' [148]  (5.74 ns)

 <State 12>: 5.45ns
The critical path consists of the following:
	'call' operation ('pivot', minver.c:56) to 'aesl_mux_load_4_32_x' [148]  (5.45 ns)

 <State 13>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_16', minver_lib.c:11->minver.c:69) [155]  (6.37 ns)
	'and' operation ('tmp_20', minver_lib.c:11->minver.c:69) [156]  (0 ns)
	'select' operation ('api', minver.c:69) [159]  (1.37 ns)

 <State 14>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:70) [160]  (5.12 ns)

 <State 15>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_48', minver.c:70) [167]  (6.9 ns)
	'and' operation ('tmp_49', minver.c:70) [168]  (1.37 ns)

 <State 16>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:78) on array 'work', minver.c:41 [177]  (2.71 ns)
	'store' operation (minver.c:78) of variable 'work_load_3', minver.c:78 on array 'work', minver.c:41 [178]  (2.71 ns)

 <State 17>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:79) of variable 'work_load_2', minver.c:77 on array 'work', minver.c:41 [179]  (2.71 ns)

 <State 18>: 2.4ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:80) [182]  (0 ns)
	'icmp' operation ('exitcond5', minver.c:80) [183]  (2.4 ns)

 <State 19>: 5.74ns
The critical path consists of the following:
	'call' operation ('w', minver.c:80) to 'aesl_mux_load_4_32_x' [206]  (5.74 ns)

 <State 20>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:80) to 'aesl_mux_load_4_32_x' [206]  (5.45 ns)

 <State 21>: 5.74ns
The critical path consists of the following:
	'load' operation ('r_load_2') on local variable 'r' [187]  (0 ns)
	'call' operation ('tmp_76', minver.c:80) to 'aesl_mux_load_4_32_x' [207]  (5.74 ns)

 <State 22>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_76', minver.c:80) to 'aesl_mux_load_4_32_x' [207]  (5.45 ns)

 <State 23>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_2', minver.c:82) [201]  (0 ns)
	'store' operation (minver.c:83) of variable 'tmp_76', minver.c:80 on array 'a_2' [210]  (2.71 ns)

 <State 24>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:84) of variable 'w', minver.c:80 on array 'a_2' [211]  (2.71 ns)

 <State 25>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:88) [233]  (1.57 ns)

 <State 26>: 2.4ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:88) [233]  (0 ns)
	'icmp' operation ('exitcond4', minver.c:88) [234]  (2.4 ns)

 <State 27>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_80', minver.c:88) to 'aesl_mux_load_4_32_x' [250]  (5.74 ns)

 <State 28>: 11.8ns
The critical path consists of the following:
	'call' operation ('tmp_80', minver.c:88) to 'aesl_mux_load_4_32_x' [250]  (5.45 ns)
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 39>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 40>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 41>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 42>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)

 <State 43>: 9.01ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [251]  (6.3 ns)
	'store' operation (minver.c:90) of variable 'tmp_12', minver.c:90 on array 'a_2' [254]  (2.71 ns)

 <State 44>: 2.4ns
The critical path consists of the following:
	'icmp' operation ('tmp_27', minver.c:99) [269]  (2.4 ns)

 <State 45>: 2.4ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:93) [303]  (0 ns)
	'icmp' operation ('exitcond3', minver.c:93) [304]  (2.4 ns)

 <State 46>: 5.74ns
The critical path consists of the following:
	'call' operation ('w', minver.c:56) to 'aesl_mux_load_4_32_x' [369]  (5.74 ns)

 <State 47>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:56) to 'aesl_mux_load_4_32_x' [369]  (5.45 ns)

 <State 48>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_88', minver.c:97) [376]  (6.37 ns)
	'and' operation ('tmp_89', minver.c:97) [377]  (1.37 ns)

 <State 49>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load', minver.c:99) on array 'a_0' [382]  (2.71 ns)
	'fmul' operation ('tmp_32', minver.c:99) [383]  (5.78 ns)

 <State 50>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_2', minver.c:99) on array 'a_0' [391]  (2.71 ns)
	'fmul' operation ('tmp_22_1', minver.c:99) [392]  (5.78 ns)

 <State 51>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_4', minver.c:99) on array 'a_0' [400]  (2.71 ns)
	'fmul' operation ('tmp_22_2', minver.c:99) [401]  (5.78 ns)

 <State 52>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_6', minver.c:99) on array 'a_0' [409]  (2.71 ns)
	'fmul' operation ('tmp_22_3', minver.c:99) [410]  (5.78 ns)

 <State 53>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_8', minver.c:99) on array 'a_0' [418]  (2.71 ns)
	'fmul' operation ('tmp_22_4', minver.c:99) [419]  (5.78 ns)

 <State 54>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_10', minver.c:99) on array 'a_0' [427]  (2.71 ns)
	'fmul' operation ('tmp_22_5', minver.c:99) [428]  (5.78 ns)

 <State 55>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_12', minver.c:99) on array 'a_0' [436]  (2.71 ns)
	'fmul' operation ('tmp_22_6', minver.c:99) [437]  (5.78 ns)

 <State 56>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_14', minver.c:99) on array 'a_0' [445]  (2.71 ns)
	'fmul' operation ('tmp_22_7', minver.c:99) [446]  (5.78 ns)

 <State 57>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:101) [670]  (6.3 ns)

 <State 58>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [385]  (8.26 ns)

 <State 59>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [385]  (8.26 ns)

 <State 60>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [385]  (8.26 ns)

 <State 61>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [385]  (8.26 ns)

 <State 62>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [385]  (8.26 ns)

 <State 63>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [394]  (8.26 ns)

 <State 64>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [403]  (8.26 ns)

 <State 65>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_3', minver.c:99) [412]  (8.26 ns)

 <State 66>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_4', minver.c:99) [421]  (8.26 ns)

 <State 67>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_5', minver.c:99) [430]  (8.26 ns)

 <State 68>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_6', minver.c:99) [439]  (8.26 ns)

 <State 69>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_7', minver.c:99) [448]  (8.26 ns)

 <State 70>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_6', minver.c:99 on array 'a_0' [440]  (2.71 ns)

 <State 71>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:99) of variable 'tmp_23_7', minver.c:99 on array 'a_0' [449]  (2.71 ns)

 <State 72>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_6', minver.c:96) [350]  (0 ns)
	'store' operation (minver.c:101) of variable 'tmp_18', minver.c:101 on array 'a_2' [673]  (2.71 ns)

 <State 73>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 74>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 76>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 80>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 81>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 82>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 83>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 84>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 85>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 86>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 87>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 88>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [692]  (6.3 ns)

 <State 89>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:105) of variable 'tmp_13', minver.c:105 on array 'a_2' [695]  (2.71 ns)

 <State 90>: 2.4ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:129) [713]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:109) [714]  (2.4 ns)

 <State 91>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [725]  (2.71 ns)

 <State 92>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [725]  (2.71 ns)
	'getelementptr' operation ('work_addr_2', minver.c:118) [738]  (0 ns)
	'load' operation ('work_load_1', minver.c:118) on array 'work', minver.c:41 [739]  (2.71 ns)

 <State 93>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_70', minver.c:129) to 'aesl_mux_load_4_32_x' [752]  (5.74 ns)

 <State 94>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_70', minver.c:129) to 'aesl_mux_load_4_32_x' [752]  (5.45 ns)

 <State 95>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_71', minver.c:114) to 'aesl_mux_load_4_32_x' [754]  (5.74 ns)

 <State 96>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_71', minver.c:114) to 'aesl_mux_load_4_32_x' [754]  (5.45 ns)

 <State 97>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr', minver.c:123) [736]  (0 ns)
	'store' operation (minver.c:124) of variable 'tmp_71', minver.c:114 on array 'a_2' [757]  (2.71 ns)

 <State 98>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_1', minver.c:124) [748]  (0 ns)
	'store' operation (minver.c:125) of variable 'tmp_70', minver.c:129 on array 'a_2' [771]  (2.71 ns)

 <State 99>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_77', minver.c:129) to 'aesl_mux_load_4_32_x' [783]  (5.74 ns)

 <State 100>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_77', minver.c:129) to 'aesl_mux_load_4_32_x' [783]  (5.45 ns)

 <State 101>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_70', minver.c:129 on array 'a_2' [786]  (2.71 ns)

 <State 102>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_77', minver.c:129 on array 'a_2' [800]  (2.71 ns)

 <State 103>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_104', minver.c:129) to 'aesl_mux_load_4_32_x' [812]  (5.74 ns)

 <State 104>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_104', minver.c:129) to 'aesl_mux_load_4_32_x' [812]  (5.45 ns)

 <State 105>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_77', minver.c:129 on array 'a_2' [815]  (2.71 ns)

 <State 106>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_104', minver.c:129 on array 'a_2' [829]  (2.71 ns)

 <State 107>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_105', minver.c:129) to 'aesl_mux_load_4_32_x' [841]  (5.74 ns)

 <State 108>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_105', minver.c:129) to 'aesl_mux_load_4_32_x' [841]  (5.45 ns)

 <State 109>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_104', minver.c:129 on array 'a_2' [844]  (2.71 ns)

 <State 110>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_105', minver.c:129 on array 'a_2' [858]  (2.71 ns)

 <State 111>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_106', minver.c:129) to 'aesl_mux_load_4_32_x' [870]  (5.74 ns)

 <State 112>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_106', minver.c:129) to 'aesl_mux_load_4_32_x' [870]  (5.45 ns)

 <State 113>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_105', minver.c:129 on array 'a_2' [873]  (2.71 ns)

 <State 114>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_106', minver.c:129 on array 'a_2' [887]  (2.71 ns)

 <State 115>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_107', minver.c:129) to 'aesl_mux_load_4_32_x' [899]  (5.74 ns)

 <State 116>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_107', minver.c:129) to 'aesl_mux_load_4_32_x' [899]  (5.45 ns)

 <State 117>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_106', minver.c:129 on array 'a_2' [902]  (2.71 ns)

 <State 118>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_107', minver.c:129 on array 'a_2' [916]  (2.71 ns)

 <State 119>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_108', minver.c:129) to 'aesl_mux_load_4_32_x' [928]  (5.74 ns)

 <State 120>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_108', minver.c:129) to 'aesl_mux_load_4_32_x' [928]  (5.45 ns)

 <State 121>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_107', minver.c:129 on array 'a_2' [931]  (2.71 ns)

 <State 122>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_108', minver.c:129 on array 'a_2' [945]  (2.71 ns)

 <State 123>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_109', minver.c:129) to 'aesl_mux_load_4_32_x' [957]  (5.74 ns)

 <State 124>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_109', minver.c:129) to 'aesl_mux_load_4_32_x' [957]  (5.45 ns)

 <State 125>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_108', minver.c:129 on array 'a_2' [960]  (2.71 ns)

 <State 126>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_109', minver.c:129 on array 'a_2' [974]  (2.71 ns)

 <State 127>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_110', minver.c:129) to 'aesl_mux_load_4_32_x' [986]  (5.74 ns)

 <State 128>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_110', minver.c:129) to 'aesl_mux_load_4_32_x' [986]  (5.45 ns)

 <State 129>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_109', minver.c:129 on array 'a_2' [989]  (2.71 ns)

 <State 130>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_110', minver.c:129 on array 'a_2' [1003]  (2.71 ns)

 <State 131>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_111', minver.c:129) to 'aesl_mux_load_4_32_x' [1015]  (5.74 ns)

 <State 132>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_111', minver.c:129) to 'aesl_mux_load_4_32_x' [1015]  (5.45 ns)

 <State 133>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_110', minver.c:129 on array 'a_2' [1018]  (2.71 ns)

 <State 134>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_111', minver.c:129 on array 'a_2' [1032]  (2.71 ns)

 <State 135>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_112', minver.c:129) to 'aesl_mux_load_4_32_x' [1044]  (5.74 ns)

 <State 136>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_112', minver.c:129) to 'aesl_mux_load_4_32_x' [1044]  (5.45 ns)

 <State 137>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_111', minver.c:129 on array 'a_2' [1047]  (2.71 ns)

 <State 138>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_112', minver.c:129 on array 'a_2' [1061]  (2.71 ns)

 <State 139>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_113', minver.c:129) to 'aesl_mux_load_4_32_x' [1073]  (5.74 ns)

 <State 140>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_113', minver.c:129) to 'aesl_mux_load_4_32_x' [1073]  (5.45 ns)

 <State 141>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_112', minver.c:129 on array 'a_2' [1076]  (2.71 ns)

 <State 142>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_113', minver.c:129 on array 'a_2' [1090]  (2.71 ns)

 <State 143>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_114', minver.c:129) to 'aesl_mux_load_4_32_x' [1102]  (5.74 ns)

 <State 144>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_114', minver.c:129) to 'aesl_mux_load_4_32_x' [1102]  (5.45 ns)

 <State 145>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_113', minver.c:129 on array 'a_2' [1105]  (2.71 ns)

 <State 146>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_114', minver.c:129 on array 'a_2' [1119]  (2.71 ns)

 <State 147>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_115', minver.c:129) to 'aesl_mux_load_4_32_x' [1131]  (5.74 ns)

 <State 148>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_115', minver.c:129) to 'aesl_mux_load_4_32_x' [1131]  (5.45 ns)

 <State 149>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_114', minver.c:129 on array 'a_2' [1134]  (2.71 ns)

 <State 150>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_115', minver.c:129 on array 'a_2' [1148]  (2.71 ns)

 <State 151>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_116', minver.c:129) to 'aesl_mux_load_4_32_x' [1160]  (5.74 ns)

 <State 152>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_116', minver.c:129) to 'aesl_mux_load_4_32_x' [1160]  (5.45 ns)

 <State 153>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_115', minver.c:129 on array 'a_2' [1163]  (2.71 ns)

 <State 154>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_116', minver.c:129 on array 'a_2' [1177]  (2.71 ns)

 <State 155>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_117', minver.c:129) to 'aesl_mux_load_4_32_x' [1189]  (5.74 ns)

 <State 156>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_117', minver.c:129) to 'aesl_mux_load_4_32_x' [1189]  (5.45 ns)

 <State 157>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_116', minver.c:129 on array 'a_2' [1192]  (2.71 ns)

 <State 158>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_117', minver.c:129 on array 'a_2' [1206]  (2.71 ns)

 <State 159>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_118', minver.c:129) to 'aesl_mux_load_4_32_x' [1218]  (5.74 ns)

 <State 160>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_118', minver.c:129) to 'aesl_mux_load_4_32_x' [1218]  (5.45 ns)

 <State 161>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_117', minver.c:129 on array 'a_2' [1221]  (2.71 ns)

 <State 162>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_118', minver.c:129 on array 'a_2' [1235]  (2.71 ns)

 <State 163>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_119', minver.c:129) to 'aesl_mux_load_4_32_x' [1247]  (5.74 ns)

 <State 164>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_119', minver.c:129) to 'aesl_mux_load_4_32_x' [1247]  (5.45 ns)

 <State 165>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_118', minver.c:129 on array 'a_2' [1250]  (2.71 ns)

 <State 166>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_119', minver.c:129 on array 'a_2' [1264]  (2.71 ns)

 <State 167>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_120', minver.c:129) to 'aesl_mux_load_4_32_x' [1276]  (5.74 ns)

 <State 168>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_120', minver.c:129) to 'aesl_mux_load_4_32_x' [1276]  (5.45 ns)

 <State 169>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_119', minver.c:129 on array 'a_2' [1279]  (2.71 ns)

 <State 170>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_120', minver.c:129 on array 'a_2' [1293]  (2.71 ns)

 <State 171>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_121', minver.c:129) to 'aesl_mux_load_4_32_x' [1305]  (5.74 ns)

 <State 172>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_121', minver.c:129) to 'aesl_mux_load_4_32_x' [1305]  (5.45 ns)

 <State 173>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_120', minver.c:129 on array 'a_2' [1308]  (2.71 ns)

 <State 174>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_121', minver.c:129 on array 'a_2' [1322]  (2.71 ns)

 <State 175>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_122', minver.c:129) to 'aesl_mux_load_4_32_x' [1334]  (5.74 ns)

 <State 176>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_122', minver.c:129) to 'aesl_mux_load_4_32_x' [1334]  (5.45 ns)

 <State 177>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_121', minver.c:129 on array 'a_2' [1337]  (2.71 ns)

 <State 178>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_122', minver.c:129 on array 'a_2' [1351]  (2.71 ns)

 <State 179>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_123', minver.c:129) to 'aesl_mux_load_4_32_x' [1363]  (5.74 ns)

 <State 180>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_123', minver.c:129) to 'aesl_mux_load_4_32_x' [1363]  (5.45 ns)

 <State 181>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_122', minver.c:129 on array 'a_2' [1366]  (2.71 ns)

 <State 182>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_123', minver.c:129 on array 'a_2' [1380]  (2.71 ns)

 <State 183>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_124', minver.c:129) to 'aesl_mux_load_4_32_x' [1392]  (5.74 ns)

 <State 184>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_124', minver.c:129) to 'aesl_mux_load_4_32_x' [1392]  (5.45 ns)

 <State 185>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_123', minver.c:129 on array 'a_2' [1395]  (2.71 ns)

 <State 186>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_124', minver.c:129 on array 'a_2' [1409]  (2.71 ns)

 <State 187>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_125', minver.c:129) to 'aesl_mux_load_4_32_x' [1421]  (5.74 ns)

 <State 188>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_125', minver.c:129) to 'aesl_mux_load_4_32_x' [1421]  (5.45 ns)

 <State 189>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_124', minver.c:129 on array 'a_2' [1424]  (2.71 ns)

 <State 190>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_125', minver.c:129 on array 'a_2' [1438]  (2.71 ns)

 <State 191>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_126', minver.c:129) to 'aesl_mux_load_4_32_x' [1450]  (5.74 ns)

 <State 192>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_126', minver.c:129) to 'aesl_mux_load_4_32_x' [1450]  (5.45 ns)

 <State 193>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_125', minver.c:129 on array 'a_2' [1453]  (2.71 ns)

 <State 194>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_126', minver.c:129 on array 'a_2' [1467]  (2.71 ns)

 <State 195>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_127', minver.c:129) to 'aesl_mux_load_4_32_x' [1479]  (5.74 ns)

 <State 196>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_127', minver.c:129) to 'aesl_mux_load_4_32_x' [1479]  (5.45 ns)

 <State 197>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_126', minver.c:129 on array 'a_2' [1482]  (2.71 ns)

 <State 198>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_127', minver.c:129 on array 'a_2' [1496]  (2.71 ns)

 <State 199>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_128', minver.c:129) to 'aesl_mux_load_4_32_x' [1508]  (5.74 ns)

 <State 200>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_128', minver.c:129) to 'aesl_mux_load_4_32_x' [1508]  (5.45 ns)

 <State 201>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_127', minver.c:129 on array 'a_2' [1511]  (2.71 ns)

 <State 202>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_128', minver.c:129 on array 'a_2' [1525]  (2.71 ns)

 <State 203>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_129', minver.c:129) to 'aesl_mux_load_4_32_x' [1537]  (5.74 ns)

 <State 204>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_129', minver.c:129) to 'aesl_mux_load_4_32_x' [1537]  (5.45 ns)

 <State 205>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_128', minver.c:129 on array 'a_2' [1540]  (2.71 ns)

 <State 206>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_129', minver.c:129 on array 'a_2' [1554]  (2.71 ns)

 <State 207>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_130', minver.c:129) to 'aesl_mux_load_4_32_x' [1566]  (5.74 ns)

 <State 208>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_130', minver.c:129) to 'aesl_mux_load_4_32_x' [1566]  (5.45 ns)

 <State 209>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_129', minver.c:129 on array 'a_2' [1569]  (2.71 ns)

 <State 210>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_130', minver.c:129 on array 'a_2' [1583]  (2.71 ns)

 <State 211>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_131', minver.c:129) to 'aesl_mux_load_4_32_x' [1595]  (5.74 ns)

 <State 212>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_131', minver.c:129) to 'aesl_mux_load_4_32_x' [1595]  (5.45 ns)

 <State 213>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_130', minver.c:129 on array 'a_2' [1598]  (2.71 ns)

 <State 214>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_131', minver.c:129 on array 'a_2' [1612]  (2.71 ns)

 <State 215>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_132', minver.c:129) to 'aesl_mux_load_4_32_x' [1624]  (5.74 ns)

 <State 216>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_132', minver.c:129) to 'aesl_mux_load_4_32_x' [1624]  (5.45 ns)

 <State 217>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_131', minver.c:129 on array 'a_2' [1627]  (2.71 ns)

 <State 218>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_132', minver.c:129 on array 'a_2' [1641]  (2.71 ns)

 <State 219>: 5.74ns
The critical path consists of the following:
	'call' operation ('tmp_133', minver.c:129) to 'aesl_mux_load_4_32_x' [1653]  (5.74 ns)

 <State 220>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_133', minver.c:129) to 'aesl_mux_load_4_32_x' [1653]  (5.45 ns)

 <State 221>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_132', minver.c:129 on array 'a_2' [1656]  (2.71 ns)

 <State 222>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_133', minver.c:129 on array 'a_2' [1670]  (2.71 ns)

 <State 223>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204
	State 205
	State 206
	State 207
	State 208
	State 209
	State 210
	State 211
	State 212
	State 213
	State 214
	State 215
	State 216
	State 217
	State 218
	State 219
	State 220
	State 221
	State 222
	State 223


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
