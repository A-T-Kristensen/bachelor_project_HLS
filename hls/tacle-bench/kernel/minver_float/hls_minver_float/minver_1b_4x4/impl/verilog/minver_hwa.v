// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minver_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.691000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=5,HLS_SYN_FF=2367,HLS_SYN_LUT=2809}" *)

module minver_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 67'b1;
parameter    ap_ST_fsm_state2 = 67'b10;
parameter    ap_ST_fsm_state3 = 67'b100;
parameter    ap_ST_fsm_state4 = 67'b1000;
parameter    ap_ST_fsm_pp1_stage0 = 67'b10000;
parameter    ap_ST_fsm_state10 = 67'b100000;
parameter    ap_ST_fsm_state11 = 67'b1000000;
parameter    ap_ST_fsm_state12 = 67'b10000000;
parameter    ap_ST_fsm_state13 = 67'b100000000;
parameter    ap_ST_fsm_state14 = 67'b1000000000;
parameter    ap_ST_fsm_state15 = 67'b10000000000;
parameter    ap_ST_fsm_state16 = 67'b100000000000;
parameter    ap_ST_fsm_state17 = 67'b1000000000000;
parameter    ap_ST_fsm_state18 = 67'b10000000000000;
parameter    ap_ST_fsm_state19 = 67'b100000000000000;
parameter    ap_ST_fsm_state20 = 67'b1000000000000000;
parameter    ap_ST_fsm_state21 = 67'b10000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 67'b100000000000000000;
parameter    ap_ST_fsm_pp3_stage1 = 67'b1000000000000000000;
parameter    ap_ST_fsm_state40 = 67'b10000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 67'b100000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 67'b1000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 67'b10000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 67'b100000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 67'b1000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 67'b10000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage6 = 67'b100000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage7 = 67'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage8 = 67'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage9 = 67'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage10 = 67'b1000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage11 = 67'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage12 = 67'b100000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage13 = 67'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage14 = 67'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage15 = 67'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 67'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 67'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 67'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 67'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 67'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 67'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 67'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 67'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 67'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 67'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 67'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 67'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 67'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 67'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 67'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 67'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 67'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 67'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 67'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage2 = 67'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage3 = 67'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage4 = 67'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage5 = 67'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage6 = 67'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage7 = 67'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage8 = 67'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage9 = 67'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage10 = 67'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage11 = 67'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage12 = 67'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state99 = 67'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv64_3EB0C6F7A0B5ED8D = 64'b11111010110000110001101111011110100000101101011110110110001101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv5_5 = 5'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg[3:0] a_WEN_A;
reg[31:0] a_Din_A;

(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] wmax_reg_321;
reg   [31:0] r_1_reg_333;
reg   [31:0] ap_pipeline_reg_pp1_iter1_r_1_reg_333;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [31:0] ap_pipeline_reg_pp1_iter2_r_1_reg_333;
reg   [31:0] ap_pipeline_reg_pp1_iter3_r_1_reg_333;
reg   [2:0] i_2_reg_354;
reg   [2:0] i_3_reg_365;
reg   [31:0] reg_424;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond6_reg_1283;
wire   [0:0] ap_CS_fsm_state11;
wire   [2:0] work_q0;
reg   [2:0] reg_430;
wire   [0:0] ap_CS_fsm_state15;
wire   [2:0] work_q1;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] ap_CS_fsm_pp5_stage2;
reg   [0:0] tmp_8_reg_1508;
reg   [31:0] reg_437;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter0;
reg   [0:0] exitcond4_reg_1379;
wire   [0:0] ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] exitcond3_reg_1409;
reg   [0:0] tmp_15_reg_1418;
wire   [0:0] ap_CS_fsm_pp4_stage9;
reg   [0:0] tmp_54_reg_1435;
reg   [0:0] tmp_20_2_reg_1401;
wire   [0:0] ap_CS_fsm_pp5_stage6;
wire   [0:0] ap_CS_fsm_pp5_stage9;
wire   [0:0] ap_CS_fsm_pp5_stage12;
reg   [31:0] reg_446;
wire   [0:0] ap_CS_fsm_pp4_stage3;
reg   [0:0] tmp_26_reg_1393;
wire   [0:0] ap_CS_fsm_pp4_stage6;
reg   [0:0] tmp_20_3_reg_1405;
wire   [0:0] ap_CS_fsm_pp4_stage10;
reg   [31:0] reg_452;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg   [0:0] tmp_20_1_reg_1397;
wire   [0:0] ap_CS_fsm_pp4_stage7;
reg   [31:0] reg_458;
wire   [0:0] ap_CS_fsm_pp4_stage5;
wire   [0:0] ap_CS_fsm_pp4_stage8;
wire   [31:0] grp_fu_388_p2;
reg   [31:0] reg_464;
wire   [0:0] ap_CS_fsm_pp4_stage12;
wire   [0:0] ap_CS_fsm_pp4_stage13;
wire   [0:0] ap_CS_fsm_pp4_stage14;
wire   [0:0] ap_CS_fsm_pp4_stage15;
wire   [2:0] i_1_fu_475_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_2_fu_491_p3;
reg   [0:0] tmp_2_reg_1225;
wire   [0:0] ap_CS_fsm_state4;
wire   [2:0] k_fu_499_p2;
reg   [2:0] k_reg_1229;
wire   [31:0] i_5_cast6_fu_505_p1;
reg   [31:0] i_5_cast6_reg_1234;
wire   [63:0] tmp_3_fu_509_p1;
reg   [63:0] tmp_3_reg_1240;
wire   [5:0] tmp_3_cast_fu_513_p1;
reg   [5:0] tmp_3_cast_reg_1245;
wire   [5:0] tmp_16_cast_fu_530_p1;
reg   [5:0] tmp_16_cast_reg_1252;
reg   [3:0] a_addr_15_reg_1258;
reg   [3:0] a_addr_13_reg_1263;
reg   [3:0] a_addr_11_reg_1268;
reg   [3:0] a_addr_9_reg_1273;
reg   [3:0] a_addr_7_reg_1278;
wire   [0:0] exitcond6_fu_590_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_exitcond6_reg_1283;
reg   [0:0] ap_pipeline_reg_pp1_iter2_exitcond6_reg_1283;
reg   [0:0] ap_pipeline_reg_pp1_iter3_exitcond6_reg_1283;
wire   [31:0] i_6_fu_618_p2;
reg   [31:0] i_6_reg_1292;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] w_3_fu_676_p3;
reg   [31:0] w_3_reg_1297;
reg   [31:0] ap_pipeline_reg_pp1_iter3_w_3_reg_1297;
wire   [0:0] tmp_49_fu_761_p2;
reg   [0:0] tmp_49_reg_1304;
wire   [31:0] wmax_1_fu_767_p3;
reg    ap_enable_reg_pp1_iter4;
reg   [31:0] r_load_reg_1315;
wire   [0:0] ap_CS_fsm_state10;
wire   [5:0] tmp_63_cast_fu_789_p3;
reg   [5:0] tmp_63_cast_reg_1321;
wire   [31:0] api_fu_859_p3;
reg   [31:0] api_reg_1331;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_5_fu_403_p1;
reg   [63:0] tmp_5_reg_1336;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_1_fu_912_p2;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_35_fu_906_p2;
reg   [8:0] work_addr_3_reg_1349;
reg   [8:0] work_addr_4_reg_1355;
wire   [2:0] j_1_fu_922_p2;
reg   [2:0] j_1_reg_1364;
wire   [0:0] ap_CS_fsm_state17;
reg   [3:0] a_addr_4_reg_1369;
wire   [0:0] exitcond5_fu_916_p2;
reg   [3:0] a_addr_5_reg_1374;
wire   [0:0] exitcond4_fu_952_p2;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg   [0:0] ap_pipeline_reg_pp3_iter1_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter2_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter3_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter4_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter5_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter6_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter7_exitcond4_reg_1379;
reg   [0:0] ap_pipeline_reg_pp3_iter8_exitcond4_reg_1379;
wire   [2:0] i_8_fu_958_p2;
reg   [2:0] i_8_reg_1383;
reg   [3:0] a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1388;
reg   [3:0] ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1388;
wire   [0:0] tmp_26_fu_978_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] tmp_20_1_fu_984_p2;
wire   [0:0] tmp_20_2_fu_990_p2;
wire   [0:0] tmp_20_3_fu_996_p2;
wire   [0:0] exitcond3_fu_1002_p2;
wire   [0:0] ap_CS_fsm_pp4_stage0;
wire   [2:0] i_9_fu_1008_p2;
reg   [2:0] i_9_reg_1413;
wire   [0:0] tmp_15_fu_1014_p2;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_15_reg_1418;
wire   [4:0] tmp_70_fu_1020_p3;
reg   [4:0] tmp_70_reg_1422;
reg   [3:0] a_addr_8_reg_1430;
reg   [3:0] ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1430;
wire   [0:0] tmp_54_fu_1078_p2;
wire   [0:0] ap_CS_fsm_pp4_stage2;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_54_reg_1435;
wire   [31:0] tmp_18_fu_1090_p1;
reg   [3:0] a_addr_10_reg_1444;
wire   [31:0] grp_fu_392_p2;
reg   [31:0] tmp_27_reg_1449;
reg   [3:0] a_addr_12_reg_1454;
reg   [31:0] tmp_22_1_reg_1459;
reg   [3:0] a_addr_14_reg_1464;
reg   [3:0] a_addr_16_reg_1469;
reg   [31:0] tmp_22_2_reg_1474;
reg   [31:0] tmp_22_3_reg_1479;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] tmp_19_reg_1484;
reg    ap_enable_reg_pp4_iter1;
wire   [2:0] i_7_fu_1147_p2;
reg   [2:0] i_7_reg_1492;
wire   [0:0] ap_CS_fsm_state84;
wire   [5:0] tmp_cast_fu_1158_p1;
reg   [5:0] tmp_cast_reg_1497;
wire   [0:0] exitcond1_fu_1141_p2;
reg   [8:0] work_addr_1_reg_1502;
wire   [0:0] tmp_8_fu_1162_p2;
reg   [3:0] a_addr_2_reg_1512;
reg   [3:0] a_addr_3_reg_1517;
reg   [8:0] work_addr_2_reg_1522;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire   [0:0] ap_CS_fsm_state21;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp5_iter1;
reg   [8:0] work_address0;
reg    work_ce0;
reg    work_we0;
reg   [2:0] work_d0;
reg   [8:0] work_address1;
reg    work_ce1;
reg    work_we1;
reg   [2:0] work_d1;
reg   [2:0] i_reg_297;
wire   [0:0] exitcond7_fu_469_p2;
reg   [2:0] i_5_reg_309;
wire   [0:0] ap_CS_fsm_state83;
wire   [0:0] ap_CS_fsm_state3;
reg   [31:0] wmax_phi_fu_325_p4;
reg   [31:0] r_1_phi_fu_336_p4;
reg   [2:0] j_reg_343;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
reg   [2:0] i_2_phi_fu_358_p4;
reg   [2:0] i_3_phi_fu_369_p4;
reg   [2:0] i_4_reg_376;
wire   [0:0] ap_CS_fsm_state99;
wire   [63:0] tmp_fu_481_p1;
wire   [63:0] tmp_16_fu_540_p3;
wire   [63:0] tmp_32_fu_555_p3;
wire   [63:0] tmp_42_fu_570_p3;
wire   [63:0] tmp_11_fu_525_p1;
wire   [63:0] tmp_61_cast_fu_585_p1;
wire  signed [63:0] tmp_67_cast_fu_613_p1;
wire  signed [63:0] tmp_64_cast_fu_802_p1;
wire  signed [63:0] tmp_4_fu_867_p1;
wire   [63:0] tmp_72_cast_fu_937_p1;
wire  signed [63:0] tmp_73_cast_fu_947_p1;
wire   [63:0] tmp_74_cast_fu_973_p1;
wire   [63:0] tmp_77_cast_fu_1037_p1;
wire   [63:0] tmp_71_fu_1095_p1;
wire   [63:0] tmp_74_fu_1104_p3;
wire   [63:0] tmp_76_fu_1118_p3;
wire   [63:0] tmp_78_fu_1132_p3;
wire   [63:0] tmp_s_fu_1153_p1;
wire  signed [63:0] tmp_70_cast_fu_1194_p1;
wire  signed [63:0] tmp_71_cast_fu_1205_p1;
wire   [63:0] tmp_10_fu_1168_p1;
reg   [31:0] r_fu_118;
wire   [31:0] r_2_fu_773_p3;
wire   [0:0] ap_CS_fsm_pp5_stage0;
wire   [0:0] ap_CS_fsm_pp5_stage3;
reg   [31:0] a_Addr_A_orig;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] ap_CS_fsm_pp5_stage4;
wire   [0:0] ap_CS_fsm_pp5_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage7;
wire   [0:0] ap_CS_fsm_pp5_stage8;
wire   [0:0] ap_CS_fsm_pp5_stage10;
wire   [0:0] ap_CS_fsm_pp5_stage11;
reg   [31:0] grp_fu_388_p0;
reg   [31:0] grp_fu_388_p1;
wire   [0:0] ap_CS_fsm_pp4_stage11;
reg   [31:0] grp_fu_397_p0;
wire   [0:0] ap_CS_fsm_state68;
reg   [31:0] grp_fu_406_p0;
wire   [4:0] tmp_7_fu_517_p3;
wire   [4:0] tmp_12_fu_534_p2;
wire   [4:0] tmp_17_fu_549_p2;
wire   [4:0] tmp_37_fu_564_p2;
wire   [5:0] tmp_44_fu_579_p2;
wire   [3:0] tmp_58_fu_596_p1;
wire   [5:0] tmp_66_cast_fu_600_p3;
wire   [5:0] tmp_59_fu_608_p2;
wire   [31:0] n_assign_1_to_int_fu_624_p1;
wire   [7:0] tmp_36_fu_628_p4;
wire   [22:0] tmp_60_fu_638_p1;
wire   [0:0] notrhs_fu_648_p2;
wire   [0:0] notlhs_fu_642_p2;
wire   [0:0] tmp_38_fu_654_p2;
wire   [0:0] grp_fu_406_p2;
wire   [31:0] f_neg_i_fu_666_p2;
wire   [0:0] tmp_40_fu_660_p2;
wire   [31:0] f_1_fu_672_p1;
wire   [31:0] w_3_to_int_fu_684_p1;
wire   [31:0] wmax_to_int_fu_701_p1;
wire   [7:0] tmp_41_fu_687_p4;
wire   [22:0] tmp_61_fu_697_p1;
wire   [0:0] notrhs3_fu_725_p2;
wire   [0:0] notlhs3_fu_719_p2;
wire   [7:0] tmp_43_fu_705_p4;
wire   [22:0] tmp_62_fu_715_p1;
wire   [0:0] notrhs4_fu_743_p2;
wire   [0:0] notlhs4_fu_737_p2;
wire   [0:0] tmp_45_fu_731_p2;
wire   [0:0] tmp_46_fu_749_p2;
wire   [0:0] tmp_47_fu_755_p2;
wire   [0:0] tmp_48_fu_411_p2;
wire   [3:0] tmp_51_fu_785_p1;
wire   [5:0] tmp_55_fu_797_p2;
wire   [31:0] pivot_to_int_fu_807_p1;
wire   [7:0] tmp_9_fu_811_p4;
wire   [22:0] tmp_56_fu_821_p1;
wire   [0:0] notrhs1_fu_831_p2;
wire   [0:0] notlhs1_fu_825_p2;
wire   [0:0] tmp_20_fu_837_p2;
wire   [31:0] f_neg_i1_fu_849_p2;
wire   [0:0] tmp_30_fu_843_p2;
wire   [31:0] f_fu_855_p1;
wire   [63:0] tmp_5_to_int_fu_871_p1;
wire   [10:0] tmp_31_fu_874_p4;
wire   [51:0] tmp_57_fu_884_p1;
wire   [0:0] notrhs2_fu_894_p2;
wire   [0:0] notlhs2_fu_888_p2;
wire   [0:0] tmp_33_fu_900_p2;
wire   [0:0] tmp_34_fu_416_p2;
wire   [5:0] tmp_11_cast_fu_928_p1;
wire   [5:0] tmp_67_fu_932_p2;
wire   [5:0] tmp_68_fu_942_p2;
wire   [5:0] tmp_12_cast_fu_964_p1;
wire   [5:0] tmp_69_fu_968_p2;
wire   [5:0] tmp_76_cast_fu_1028_p1;
wire   [5:0] tmp_72_fu_1032_p2;
wire   [31:0] w_2_to_int_fu_1042_p1;
wire   [7:0] tmp_50_fu_1046_p4;
wire   [22:0] tmp_79_fu_1056_p1;
wire   [0:0] notrhs5_fu_1066_p2;
wire   [0:0] notlhs5_fu_1060_p2;
wire   [0:0] tmp_52_fu_1072_p2;
wire   [31:0] tmp_18_neg_fu_1084_p2;
wire   [4:0] tmp_73_fu_1099_p2;
wire   [4:0] tmp_75_fu_1113_p2;
wire   [4:0] tmp_77_fu_1127_p2;
wire   [4:0] tmp_63_fu_1177_p3;
wire   [5:0] tmp_64_fu_1185_p1;
wire   [5:0] tmp_65_fu_1189_p2;
wire   [5:0] tmp_10_cast_fu_1173_p1;
wire   [5:0] tmp_66_fu_1199_p2;
reg   [4:0] grp_fu_406_opcode;
reg   [66:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 67'b1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

minver_hwa_work #(
    .DataWidth( 3 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
work_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(work_address0),
    .ce0(work_ce0),
    .we0(work_we0),
    .d0(work_d0),
    .q0(work_q0),
    .address1(work_address1),
    .ce1(work_ce1),
    .we1(work_we1),
    .d1(work_d1),
    .q1(work_q1)
);

minver_hwa_fsub_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fsub_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_388_p0),
    .din1(grp_fu_388_p1),
    .ce(1'b1),
    .dout(grp_fu_388_p2)
);

minver_hwa_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fmul_3cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_437),
    .din1(a_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_392_p2)
);

minver_hwa_fdiv_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
minver_hwa_fdiv_3dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_397_p0),
    .din1(reg_424),
    .ce(1'b1),
    .dout(grp_fu_397_p2)
);

minver_hwa_fpext_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
minver_hwa_fpext_eOg_U4(
    .din0(api_reg_1331),
    .dout(tmp_5_fu_403_p1)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U5(
    .din0(grp_fu_406_p0),
    .din1(ap_const_lv32_0),
    .opcode(grp_fu_406_opcode),
    .dout(grp_fu_406_p2)
);

minver_hwa_fcmp_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
minver_hwa_fcmp_3fYi_U6(
    .din0(w_3_reg_1297),
    .din1(wmax_phi_fu_325_p4),
    .opcode(ap_const_lv5_2),
    .dout(tmp_48_fu_411_p2)
);

minver_hwa_dcmp_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
minver_hwa_dcmp_6g8j_U7(
    .din0(tmp_5_reg_1336),
    .din1(ap_const_lv64_3EB0C6F7A0B5ED8D),
    .opcode(ap_const_lv5_5),
    .dout(tmp_34_fu_416_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_590_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_491_p3))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_590_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_491_p3)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == exitcond6_fu_590_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond4_fu_952_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == exitcond4_reg_1379))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_pp3_stage1) & ~(1'b0 == exitcond4_reg_1379)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp3_stage1)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp3_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_1002_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1409) & (1'b1 == ap_CS_fsm_pp4_stage15))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp4_stage15) & ~(1'b0 == exitcond3_reg_1409)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == tmp_8_fu_1162_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state84) & (1'b0 == exitcond1_fu_1141_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage12))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state84) & (1'b0 == exitcond1_fu_1141_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage12) & ~(1'b0 == tmp_8_reg_1508)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond4_reg_1379) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_reg_354 <= i_8_reg_1383;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_354 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_3_reg_365 <= ap_const_lv3_0;
    end else if (((1'b0 == exitcond3_reg_1409) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_reg_365 <= i_9_reg_1413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_491_p3))) begin
        i_4_reg_376 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        i_4_reg_376 <= i_7_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_309 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        i_5_reg_309 <= k_reg_1229;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_469_p2))) begin
        i_reg_297 <= i_1_fu_475_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_297 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_reg_343 <= j_1_reg_1364;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_343 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_491_p3))) begin
        r_1_reg_333 <= i_5_cast6_fu_505_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1283 == 1'b0))) begin
        r_1_reg_333 <= i_6_reg_1292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1283))) begin
        r_fu_118 <= r_2_fu_773_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_fu_118 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        reg_430 <= work_q1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1508)))) begin
        reg_430 <= work_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_491_p3))) begin
        wmax_reg_321 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1283))) begin
        wmax_reg_321 <= wmax_1_fu_767_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_addr_10_reg_1444[3 : 2] <= tmp_71_fu_1095_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_491_p3))) begin
        a_addr_11_reg_1268[3 : 2] <= tmp_42_fu_570_p3[3 : 2];
        a_addr_13_reg_1263[3 : 2] <= tmp_32_fu_555_p3[3 : 2];
        a_addr_15_reg_1258[3 : 2] <= tmp_16_fu_540_p3[3 : 2];
        a_addr_7_reg_1278 <= tmp_61_cast_fu_585_p1;
        a_addr_9_reg_1273[3 : 2] <= tmp_11_fu_525_p1[3 : 2];
        i_5_cast6_reg_1234[2 : 0] <= i_5_cast6_fu_505_p1[2 : 0];
        tmp_16_cast_reg_1252[4 : 2] <= tmp_16_cast_fu_530_p1[4 : 2];
        tmp_3_cast_reg_1245[2 : 0] <= tmp_3_cast_fu_513_p1[2 : 0];
        tmp_3_reg_1240[2 : 0] <= tmp_3_fu_509_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        a_addr_12_reg_1454[3 : 2] <= tmp_74_fu_1104_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        a_addr_14_reg_1464[3 : 2] <= tmp_76_fu_1118_p3[3 : 2];
        a_addr_16_reg_1469[3 : 2] <= tmp_78_fu_1132_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == tmp_8_fu_1162_p2))) begin
        a_addr_2_reg_1512 <= tmp_70_cast_fu_1194_p1;
        a_addr_3_reg_1517 <= tmp_71_cast_fu_1205_p1;
        work_addr_2_reg_1522[2 : 0] <= tmp_10_fu_1168_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == exitcond5_fu_916_p2))) begin
        a_addr_4_reg_1369 <= tmp_72_cast_fu_937_p1;
        a_addr_5_reg_1374 <= tmp_73_cast_fu_947_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond4_fu_952_p2))) begin
        a_addr_6_reg_1388 <= tmp_74_cast_fu_973_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1002_p2) & (1'b0 == tmp_15_fu_1014_p2))) begin
        a_addr_8_reg_1430 <= tmp_77_cast_fu_1037_p1;
        tmp_70_reg_1422[4 : 2] <= tmp_70_fu_1020_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_exitcond6_reg_1283 <= exitcond6_reg_1283;
        ap_pipeline_reg_pp1_iter1_r_1_reg_333 <= r_1_reg_333;
        exitcond6_reg_1283 <= exitcond6_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp1_iter2_exitcond6_reg_1283 <= ap_pipeline_reg_pp1_iter1_exitcond6_reg_1283;
        ap_pipeline_reg_pp1_iter2_r_1_reg_333 <= ap_pipeline_reg_pp1_iter1_r_1_reg_333;
        ap_pipeline_reg_pp1_iter3_exitcond6_reg_1283 <= ap_pipeline_reg_pp1_iter2_exitcond6_reg_1283;
        ap_pipeline_reg_pp1_iter3_r_1_reg_333 <= ap_pipeline_reg_pp1_iter2_r_1_reg_333;
        ap_pipeline_reg_pp1_iter3_w_3_reg_1297 <= w_3_reg_1297;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1388 <= a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter1_exitcond4_reg_1379 <= exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter1_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter2_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter1_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter2_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter3_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter2_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter3_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter4_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter3_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter4_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter5_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter4_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter5_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter6_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter5_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter6_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter7_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter6_exitcond4_reg_1379;
        ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1388 <= ap_pipeline_reg_pp3_iter7_a_addr_6_reg_1388;
        ap_pipeline_reg_pp3_iter8_exitcond4_reg_1379 <= ap_pipeline_reg_pp3_iter7_exitcond4_reg_1379;
        exitcond4_reg_1379 <= exitcond4_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1430 <= a_addr_8_reg_1430;
        ap_pipeline_reg_pp4_iter1_tmp_15_reg_1418 <= tmp_15_reg_1418;
        exitcond3_reg_1409 <= exitcond3_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage2)) begin
        ap_pipeline_reg_pp4_iter1_tmp_54_reg_1435 <= tmp_54_reg_1435;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        api_reg_1331 <= api_fu_859_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == exitcond6_fu_590_p2) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        i_6_reg_1292 <= i_6_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_7_reg_1492 <= i_7_fu_1147_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_8_reg_1383 <= i_8_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_1413 <= i_9_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_1_reg_1364 <= j_1_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_1229 <= k_fu_499_p2;
        tmp_2_reg_1225 <= i_5_reg_309[ap_const_lv32_2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_load_reg_1315 <= r_fu_118;
        tmp_63_cast_reg_1321[5 : 2] <= tmp_63_cast_fu_789_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1283 == 1'b0)) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_424 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1508)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond4_reg_1379)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_2_reg_1401)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage12)))) begin
        reg_437 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == tmp_26_reg_1393)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == tmp_20_3_reg_1405)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_3_reg_1405) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
        reg_446 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == tmp_20_1_reg_1397)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_26_reg_1393) & (1'b1 == ap_CS_fsm_pp4_stage7)))) begin
        reg_452 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_2_reg_1401) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_1_reg_1397) & (1'b1 == ap_CS_fsm_pp4_stage8)))) begin
        reg_458 <= a_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_26_reg_1393) & (1'b1 == ap_CS_fsm_pp4_stage12)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_1_reg_1397) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_2_reg_1401) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_3_reg_1405) & (1'b1 == ap_CS_fsm_pp4_stage15)))) begin
        reg_464 <= grp_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1002_p2))) begin
        tmp_15_reg_1418 <= tmp_15_fu_1014_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == tmp_54_reg_1435) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1418))) begin
        tmp_19_reg_1484 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_20_1_reg_1397 <= tmp_20_1_fu_984_p2;
        tmp_20_2_reg_1401 <= tmp_20_2_fu_990_p2;
        tmp_20_3_reg_1405 <= tmp_20_3_fu_996_p2;
        tmp_26_reg_1393 <= tmp_26_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_1_reg_1397) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        tmp_22_1_reg_1459 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_2_reg_1401) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        tmp_22_2_reg_1474 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_3_reg_1405))) begin
        tmp_22_3_reg_1479 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_26_reg_1393) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        tmp_27_reg_1449 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter2_exitcond6_reg_1283)) begin
        tmp_49_reg_1304 <= tmp_49_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        tmp_54_reg_1435 <= tmp_54_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_5_reg_1336 <= tmp_5_fu_403_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
        tmp_8_reg_1508 <= tmp_8_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (1'b0 == exitcond1_fu_1141_p2))) begin
        tmp_cast_reg_1497[2 : 0] <= tmp_cast_fu_1158_p1[2 : 0];
        work_addr_1_reg_1502[2 : 0] <= tmp_s_fu_1153_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1283)) begin
        w_3_reg_1297 <= w_3_fu_676_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_2_reg_1225) & (1'b0 == tmp_35_fu_906_p2) & (1'b0 == tmp_1_fu_912_p2))) begin
        work_addr_3_reg_1349[2 : 0] <= tmp_3_reg_1240[2 : 0];
        work_addr_4_reg_1355 <= tmp_4_fu_867_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)))) begin
        a_Addr_A_orig = a_addr_2_reg_1512;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_Addr_A_orig = a_addr_3_reg_1517;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        a_Addr_A_orig = tmp_70_cast_fu_1194_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        a_Addr_A_orig = a_addr_7_reg_1278;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp4_iter1_a_addr_8_reg_1430;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15))) begin
        a_Addr_A_orig = a_addr_14_reg_1464;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14))) begin
        a_Addr_A_orig = a_addr_12_reg_1454;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13))) begin
        a_Addr_A_orig = a_addr_10_reg_1444;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage9)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_Addr_A_orig = a_addr_16_reg_1469;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
        a_Addr_A_orig = tmp_76_fu_1118_p3;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        a_Addr_A_orig = tmp_74_fu_1104_p3;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        a_Addr_A_orig = tmp_71_fu_1095_p1;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        a_Addr_A_orig = a_addr_15_reg_1258;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        a_Addr_A_orig = a_addr_13_reg_1263;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        a_Addr_A_orig = a_addr_11_reg_1268;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        a_Addr_A_orig = a_addr_9_reg_1273;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        a_Addr_A_orig = tmp_77_cast_fu_1037_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8))) begin
        a_Addr_A_orig = ap_pipeline_reg_pp3_iter8_a_addr_6_reg_1388;
    end else if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        a_Addr_A_orig = tmp_74_cast_fu_973_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        a_Addr_A_orig = a_addr_4_reg_1369;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
        a_Addr_A_orig = a_addr_5_reg_1374;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_Addr_A_orig = tmp_72_cast_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_Addr_A_orig = tmp_64_cast_fu_802_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        a_Addr_A_orig = tmp_67_cast_fu_613_p1;
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        a_Din_A = tmp_19_reg_1484;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)))) begin
        a_Din_A = reg_464;
    end else if (((1'b1 == ap_CS_fsm_state83) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8)))) begin
        a_Din_A = grp_fu_397_p2;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_Din_A = reg_437;
    end else if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19))) begin
        a_Din_A = a_Dout_A;
    end else begin
        a_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage12)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage8)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_enable_reg_pp4_iter1)) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter1)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage11)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage9)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage12)) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage3)) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8) & (1'b0 == ap_pipeline_reg_pp3_iter8_exitcond4_reg_1379)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_26_reg_1393) & (1'b1 == ap_CS_fsm_pp4_stage13)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_1_reg_1397) & (1'b1 == ap_CS_fsm_pp4_stage14)) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_2_reg_1401) & (1'b1 == ap_CS_fsm_pp4_stage15)) | ((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == tmp_54_reg_1435) & (1'b0 == tmp_20_3_reg_1405) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1418)) | ((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter1) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_15_reg_1418) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_54_reg_1435)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage10)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1)))) begin
        a_WEN_A = ap_const_lv4_F;
    end else begin
        a_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1225) | ~(1'b0 == tmp_35_fu_906_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (~(1'b0 == tmp_2_reg_1225) | ~(1'b0 == tmp_35_fu_906_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage11)) begin
            grp_fu_388_p0 = reg_446;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage10)) begin
            grp_fu_388_p0 = reg_437;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_388_p0 = reg_458;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_388_p0 = reg_452;
        end else begin
            grp_fu_388_p0 = 'bx;
        end
    end else begin
        grp_fu_388_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp4_stage11)) begin
            grp_fu_388_p1 = tmp_22_3_reg_1479;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage10)) begin
            grp_fu_388_p1 = tmp_22_2_reg_1474;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage9)) begin
            grp_fu_388_p1 = tmp_22_1_reg_1459;
        end else if ((1'b1 == ap_CS_fsm_pp4_stage8)) begin
            grp_fu_388_p1 = tmp_27_reg_1449;
        end else begin
            grp_fu_388_p1 = 'bx;
        end
    end else begin
        grp_fu_388_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_397_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_397_p0 = tmp_18_fu_1090_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        grp_fu_397_p0 = reg_437;
    end else begin
        grp_fu_397_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == exitcond3_reg_1409) & (1'b0 == tmp_15_reg_1418) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_406_opcode = ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_pipeline_reg_pp1_iter1_exitcond6_reg_1283) & (1'b1 == ap_enable_reg_pp1_iter2)))) begin
        grp_fu_406_opcode = ap_const_lv5_3;
    end else begin
        grp_fu_406_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_406_p0 = reg_437;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_enable_reg_pp1_iter2))) begin
        grp_fu_406_p0 = reg_424;
    end else begin
        grp_fu_406_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond4_reg_1379) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_2_phi_fu_358_p4 = i_8_reg_1383;
    end else begin
        i_2_phi_fu_358_p4 = i_2_reg_354;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond3_reg_1409) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        i_3_phi_fu_369_p4 = i_9_reg_1413;
    end else begin
        i_3_phi_fu_369_p4 = i_3_reg_365;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (exitcond6_reg_1283 == 1'b0))) begin
        r_1_phi_fu_336_p4 = i_6_reg_1292;
    end else begin
        r_1_phi_fu_336_p4 = r_1_reg_333;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_exitcond6_reg_1283))) begin
        wmax_phi_fu_325_p4 = wmax_1_fu_767_p3;
    end else begin
        wmax_phi_fu_325_p4 = wmax_reg_321;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3))) begin
        work_address0 = work_addr_1_reg_1502;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        work_address0 = tmp_10_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        work_address0 = work_addr_4_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address0 = tmp_3_reg_1240;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_address0 = tmp_fu_481_p1;
    end else begin
        work_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_address1 = work_addr_2_reg_1522;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        work_address1 = work_addr_1_reg_1502;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_address1 = work_addr_3_reg_1349;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        work_address1 = tmp_4_fu_867_p1;
    end else begin
        work_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_ce0 = 1'b1;
    end else begin
        work_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2)) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        work_ce1 = 1'b1;
    end else begin
        work_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_d0 = reg_430;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_d0 = i_reg_297;
    end else begin
        work_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2))) begin
        work_d1 = reg_430;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        work_d1 = work_q1;
    end else begin
        work_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond7_fu_469_p2)) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == tmp_8_reg_1508) & (1'b1 == ap_CS_fsm_pp5_stage3)))) begin
        work_we0 = 1'b1;
    end else begin
        work_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == tmp_8_reg_1508)))) begin
        work_we1 = 1'b1;
    end else begin
        work_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond7_fu_469_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == tmp_2_fu_491_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter4) & ~(1'b1 == ap_enable_reg_pp1_iter3)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_590_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond6_fu_590_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if ((~(1'b0 == tmp_2_reg_1225) | ~(1'b0 == tmp_35_fu_906_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_2_reg_1225) & (1'b0 == tmp_35_fu_906_p2) & ~(1'b0 == tmp_1_fu_912_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if ((1'b0 == exitcond5_fu_916_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond4_fu_952_p2) & ~(1'b1 == ap_enable_reg_pp3_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b1 == ap_enable_reg_pp3_iter8) & ~(1'b1 == ap_enable_reg_pp3_iter7))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_1002_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage4;
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage6;
        end
        ap_ST_fsm_pp4_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage7;
        end
        ap_ST_fsm_pp4_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage8;
        end
        ap_ST_fsm_pp4_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage9;
        end
        ap_ST_fsm_pp4_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage10;
        end
        ap_ST_fsm_pp4_stage10 : begin
            if (~((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b1 == ap_enable_reg_pp4_iter1) & ~(1'b1 == ap_enable_reg_pp4_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_pp4_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage12;
        end
        ap_ST_fsm_pp4_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage13;
        end
        ap_ST_fsm_pp4_stage13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage14;
        end
        ap_ST_fsm_pp4_stage14 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage15;
        end
        ap_ST_fsm_pp4_stage15 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state84 : begin
            if (~(1'b0 == exitcond1_fu_1141_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage1;
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == tmp_8_fu_1162_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage3;
        end
        ap_ST_fsm_pp5_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage4;
        end
        ap_ST_fsm_pp5_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage5;
        end
        ap_ST_fsm_pp5_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage6;
        end
        ap_ST_fsm_pp5_stage6 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage7;
        end
        ap_ST_fsm_pp5_stage7 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage8;
        end
        ap_ST_fsm_pp5_stage8 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage9;
        end
        ap_ST_fsm_pp5_stage9 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage10;
        end
        ap_ST_fsm_pp5_stage10 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage11;
        end
        ap_ST_fsm_pp5_stage11 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage12;
        end
        ap_ST_fsm_pp5_stage12 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Rst_A = ap_rst;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_pp4_stage12 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp4_stage13 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_pp4_stage14 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_pp4_stage15 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_35];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_pp5_stage10 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_pp5_stage11 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_pp5_stage12 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[ap_const_lv32_37];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[ap_const_lv32_38];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[ap_const_lv32_39];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[ap_const_lv32_3A];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[ap_const_lv32_3B];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state68 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state83 = ap_CS_fsm[ap_const_lv32_33];

assign ap_CS_fsm_state84 = ap_CS_fsm[ap_const_lv32_34];

assign ap_CS_fsm_state99 = ap_CS_fsm[ap_const_lv32_42];

assign ap_return = ap_const_lv32_1;

assign api_fu_859_p3 = ((tmp_30_fu_843_p2[0:0] === 1'b1) ? reg_424 : f_fu_855_p1);

assign exitcond1_fu_1141_p2 = ((i_4_reg_376 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond3_fu_1002_p2 = ((i_3_phi_fu_369_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond4_fu_952_p2 = ((i_2_phi_fu_358_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond5_fu_916_p2 = ((j_reg_343 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond6_fu_590_p2 = ((r_1_phi_fu_336_p4 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign exitcond7_fu_469_p2 = ((i_reg_297 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign f_1_fu_672_p1 = f_neg_i_fu_666_p2;

assign f_fu_855_p1 = f_neg_i1_fu_849_p2;

assign f_neg_i1_fu_849_p2 = (pivot_to_int_fu_807_p1 ^ ap_const_lv32_80000000);

assign f_neg_i_fu_666_p2 = (n_assign_1_to_int_fu_624_p1 ^ ap_const_lv32_80000000);

assign i_1_fu_475_p2 = (i_reg_297 + ap_const_lv3_1);

assign i_5_cast6_fu_505_p1 = i_5_reg_309;

assign i_6_fu_618_p2 = (ap_const_lv32_1 + r_1_phi_fu_336_p4);

assign i_7_fu_1147_p2 = (i_4_reg_376 + ap_const_lv3_1);

assign i_8_fu_958_p2 = (i_2_phi_fu_358_p4 + ap_const_lv3_1);

assign i_9_fu_1008_p2 = (i_3_phi_fu_369_p4 + ap_const_lv3_1);

assign j_1_fu_922_p2 = (j_reg_343 + ap_const_lv3_1);

assign k_fu_499_p2 = (i_5_reg_309 + ap_const_lv3_1);

assign n_assign_1_to_int_fu_624_p1 = reg_424;

assign notlhs1_fu_825_p2 = ((tmp_9_fu_811_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_888_p2 = ((tmp_31_fu_874_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_719_p2 = ((tmp_41_fu_687_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_737_p2 = ((tmp_43_fu_705_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_1060_p2 = ((tmp_50_fu_1046_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_642_p2 = ((tmp_36_fu_628_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_831_p2 = ((tmp_56_fu_821_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_894_p2 = ((tmp_57_fu_884_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_725_p2 = ((tmp_61_fu_697_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_743_p2 = ((tmp_62_fu_715_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1066_p2 = ((tmp_79_fu_1056_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_648_p2 = ((tmp_60_fu_638_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign pivot_to_int_fu_807_p1 = reg_424;

assign r_2_fu_773_p3 = ((tmp_49_reg_1304[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_r_1_reg_333 : r_fu_118);

assign tmp_10_cast_fu_1173_p1 = work_q1;

assign tmp_10_fu_1168_p1 = work_q1;

assign tmp_11_cast_fu_928_p1 = j_reg_343;

assign tmp_11_fu_525_p1 = tmp_7_fu_517_p3;

assign tmp_12_cast_fu_964_p1 = i_2_phi_fu_358_p4;

assign tmp_12_fu_534_p2 = (tmp_7_fu_517_p3 | ap_const_lv5_3);

assign tmp_15_fu_1014_p2 = ((i_3_phi_fu_369_p4 == i_5_reg_309) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_530_p1 = tmp_7_fu_517_p3;

assign tmp_16_fu_540_p3 = {{ap_const_lv59_0}, {tmp_12_fu_534_p2}};

assign tmp_17_fu_549_p2 = (tmp_7_fu_517_p3 | ap_const_lv5_2);

assign tmp_18_fu_1090_p1 = tmp_18_neg_fu_1084_p2;

assign tmp_18_neg_fu_1084_p2 = (w_2_to_int_fu_1042_p1 ^ ap_const_lv32_80000000);

assign tmp_1_fu_912_p2 = ((r_load_reg_1315 == i_5_cast6_reg_1234) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_984_p2 = ((i_5_reg_309 == ap_const_lv3_1) ? 1'b1 : 1'b0);

assign tmp_20_2_fu_990_p2 = ((i_5_reg_309 == ap_const_lv3_2) ? 1'b1 : 1'b0);

assign tmp_20_3_fu_996_p2 = ((i_5_reg_309 == ap_const_lv3_3) ? 1'b1 : 1'b0);

assign tmp_20_fu_837_p2 = (notrhs1_fu_831_p2 | notlhs1_fu_825_p2);

assign tmp_26_fu_978_p2 = ((i_5_reg_309 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_2_fu_491_p3 = i_5_reg_309[ap_const_lv32_2];

assign tmp_30_fu_843_p2 = (tmp_20_fu_837_p2 & grp_fu_406_p2);

assign tmp_31_fu_874_p4 = {{tmp_5_to_int_fu_871_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_32_fu_555_p3 = {{ap_const_lv59_0}, {tmp_17_fu_549_p2}};

assign tmp_33_fu_900_p2 = (notrhs2_fu_894_p2 | notlhs2_fu_888_p2);

assign tmp_35_fu_906_p2 = (tmp_33_fu_900_p2 & tmp_34_fu_416_p2);

assign tmp_36_fu_628_p4 = {{n_assign_1_to_int_fu_624_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_37_fu_564_p2 = (tmp_7_fu_517_p3 | ap_const_lv5_1);

assign tmp_38_fu_654_p2 = (notrhs_fu_648_p2 | notlhs_fu_642_p2);

assign tmp_3_cast_fu_513_p1 = i_5_reg_309;

assign tmp_3_fu_509_p1 = i_5_reg_309;

assign tmp_40_fu_660_p2 = (tmp_38_fu_654_p2 & grp_fu_406_p2);

assign tmp_41_fu_687_p4 = {{w_3_to_int_fu_684_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_42_fu_570_p3 = {{ap_const_lv59_0}, {tmp_37_fu_564_p2}};

assign tmp_43_fu_705_p4 = {{wmax_to_int_fu_701_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_44_fu_579_p2 = (tmp_3_cast_fu_513_p1 + tmp_16_cast_fu_530_p1);

assign tmp_45_fu_731_p2 = (notrhs3_fu_725_p2 | notlhs3_fu_719_p2);

assign tmp_46_fu_749_p2 = (notrhs4_fu_743_p2 | notlhs4_fu_737_p2);

assign tmp_47_fu_755_p2 = (tmp_45_fu_731_p2 & tmp_46_fu_749_p2);

assign tmp_49_fu_761_p2 = (tmp_47_fu_755_p2 & tmp_48_fu_411_p2);

assign tmp_4_fu_867_p1 = $signed(r_load_reg_1315);

assign tmp_50_fu_1046_p4 = {{w_2_to_int_fu_1042_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_51_fu_785_p1 = r_fu_118[3:0];

assign tmp_52_fu_1072_p2 = (notrhs5_fu_1066_p2 | notlhs5_fu_1060_p2);

assign tmp_54_fu_1078_p2 = (tmp_52_fu_1072_p2 & grp_fu_406_p2);

assign tmp_55_fu_797_p2 = (tmp_63_cast_fu_789_p3 + tmp_3_cast_reg_1245);

assign tmp_56_fu_821_p1 = pivot_to_int_fu_807_p1[22:0];

assign tmp_57_fu_884_p1 = tmp_5_to_int_fu_871_p1[51:0];

assign tmp_58_fu_596_p1 = r_1_phi_fu_336_p4[3:0];

assign tmp_59_fu_608_p2 = (tmp_66_cast_fu_600_p3 + tmp_3_cast_reg_1245);

assign tmp_5_to_int_fu_871_p1 = tmp_5_reg_1336;

assign tmp_60_fu_638_p1 = n_assign_1_to_int_fu_624_p1[22:0];

assign tmp_61_cast_fu_585_p1 = tmp_44_fu_579_p2;

assign tmp_61_fu_697_p1 = w_3_to_int_fu_684_p1[22:0];

assign tmp_62_fu_715_p1 = wmax_to_int_fu_701_p1[22:0];

assign tmp_63_cast_fu_789_p3 = {{tmp_51_fu_785_p1}, {ap_const_lv2_0}};

assign tmp_63_fu_1177_p3 = {{work_q1}, {ap_const_lv2_0}};

assign tmp_64_cast_fu_802_p1 = $signed(tmp_55_fu_797_p2);

assign tmp_64_fu_1185_p1 = tmp_63_fu_1177_p3;

assign tmp_65_fu_1189_p2 = (tmp_64_fu_1185_p1 + tmp_cast_reg_1497);

assign tmp_66_cast_fu_600_p3 = {{tmp_58_fu_596_p1}, {ap_const_lv2_0}};

assign tmp_66_fu_1199_p2 = (tmp_64_fu_1185_p1 + tmp_10_cast_fu_1173_p1);

assign tmp_67_cast_fu_613_p1 = $signed(tmp_59_fu_608_p2);

assign tmp_67_fu_932_p2 = (tmp_16_cast_reg_1252 + tmp_11_cast_fu_928_p1);

assign tmp_68_fu_942_p2 = (tmp_63_cast_reg_1321 + tmp_11_cast_fu_928_p1);

assign tmp_69_fu_968_p2 = (tmp_16_cast_reg_1252 + tmp_12_cast_fu_964_p1);

assign tmp_70_cast_fu_1194_p1 = $signed(tmp_65_fu_1189_p2);

assign tmp_70_fu_1020_p3 = {{i_3_phi_fu_369_p4}, {ap_const_lv2_0}};

assign tmp_71_cast_fu_1205_p1 = $signed(tmp_66_fu_1199_p2);

assign tmp_71_fu_1095_p1 = tmp_70_reg_1422;

assign tmp_72_cast_fu_937_p1 = tmp_67_fu_932_p2;

assign tmp_72_fu_1032_p2 = (tmp_76_cast_fu_1028_p1 + tmp_3_cast_reg_1245);

assign tmp_73_cast_fu_947_p1 = $signed(tmp_68_fu_942_p2);

assign tmp_73_fu_1099_p2 = (tmp_70_reg_1422 | ap_const_lv5_1);

assign tmp_74_cast_fu_973_p1 = tmp_69_fu_968_p2;

assign tmp_74_fu_1104_p3 = {{ap_const_lv59_0}, {tmp_73_fu_1099_p2}};

assign tmp_75_fu_1113_p2 = (tmp_70_reg_1422 | ap_const_lv5_2);

assign tmp_76_cast_fu_1028_p1 = tmp_70_fu_1020_p3;

assign tmp_76_fu_1118_p3 = {{ap_const_lv59_0}, {tmp_75_fu_1113_p2}};

assign tmp_77_cast_fu_1037_p1 = tmp_72_fu_1032_p2;

assign tmp_77_fu_1127_p2 = (tmp_70_reg_1422 | ap_const_lv5_3);

assign tmp_78_fu_1132_p3 = {{ap_const_lv59_0}, {tmp_77_fu_1127_p2}};

assign tmp_79_fu_1056_p1 = w_2_to_int_fu_1042_p1[22:0];

assign tmp_7_fu_517_p3 = {{i_5_reg_309}, {ap_const_lv2_0}};

assign tmp_8_fu_1162_p2 = ((work_q1 == i_4_reg_376) ? 1'b1 : 1'b0);

assign tmp_9_fu_811_p4 = {{pivot_to_int_fu_807_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_cast_fu_1158_p1 = i_4_reg_376;

assign tmp_fu_481_p1 = i_reg_297;

assign tmp_s_fu_1153_p1 = i_4_reg_376;

assign w_2_to_int_fu_1042_p1 = reg_437;

assign w_3_fu_676_p3 = ((tmp_40_fu_660_p2[0:0] === 1'b1) ? reg_424 : f_1_fu_672_p1);

assign w_3_to_int_fu_684_p1 = w_3_reg_1297;

assign wmax_1_fu_767_p3 = ((tmp_49_reg_1304[0:0] === 1'b1) ? ap_pipeline_reg_pp1_iter3_w_3_reg_1297 : wmax_reg_321);

assign wmax_to_int_fu_701_p1 = wmax_phi_fu_325_p4;

always @ (posedge ap_clk) begin
    i_5_cast6_reg_1234[31:3] <= 29'b00000000000000000000000000000;
    tmp_3_reg_1240[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_1245[5:3] <= 3'b000;
    tmp_16_cast_reg_1252[1:0] <= 2'b00;
    tmp_16_cast_reg_1252[5] <= 1'b0;
    a_addr_15_reg_1258[1:0] <= 2'b11;
    a_addr_13_reg_1263[1:0] <= 2'b10;
    a_addr_11_reg_1268[1:0] <= 2'b01;
    a_addr_9_reg_1273[1:0] <= 2'b00;
    tmp_63_cast_reg_1321[1:0] <= 2'b00;
    work_addr_3_reg_1349[8:3] <= 6'b000000;
    tmp_70_reg_1422[1:0] <= 2'b00;
    a_addr_10_reg_1444[1:0] <= 2'b00;
    a_addr_12_reg_1454[1:0] <= 2'b01;
    a_addr_14_reg_1464[1:0] <= 2'b10;
    a_addr_16_reg_1469[1:0] <= 2'b11;
    tmp_cast_reg_1497[5:3] <= 3'b000;
    work_addr_1_reg_1502[8:3] <= 6'b000000;
    work_addr_2_reg_1522[8:3] <= 6'b000000;
end

endmodule //minver_hwa
