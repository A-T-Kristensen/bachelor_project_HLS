

================================================================
== Vivado HLS Report for 'minver_hwa'
================================================================
* Date:           Thu May  4 21:44:26 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_minver_float
* Solution:       minver_4b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     11.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+
        |             |   Latency   | Iteration |  Initiation Interval  |  Trip  |          |
        |  Loop Name  | min |  max  |  Latency  |  achieved |   target  |  Count | Pipelined|
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+
        |- Loop 1     |   16|     16|          1|          1|          1|      16|    yes   |
        |- Loop 2     |  593|  11318| 593 ~ 707 |          -|          -| 1 ~ 16 |    no    |
        | + Loop 2.1  |    5|     20|          6|          1|          1| 1 ~ 16 |    yes   |
        | + Loop 2.2  |   96|     96|          7|          6|          1|      16|    yes   |
        | + Loop 2.3  |  272|    272|         18|         17|          1|      16|    yes   |
        | + Loop 2.4  |  288|    288|         19|         18|          1|      16|    yes   |
        |- Loop 3     |    ?|      ?|          ?|          -|          -|      16|    no    |
        | + Loop 3.1  |    ?|      ?|         68|         66|          1|       ?|    yes   |
        +-------------+-----+-------+-----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 6
  * Pipeline-2: initiation interval (II) = 6, depth = 7
  * Pipeline-3: initiation interval (II) = 17, depth = 18
  * Pipeline-4: initiation interval (II) = 18, depth = 19
  * Pipeline-5: initiation interval (II) = 66, depth = 68


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 150
* Pipeline: 6
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 1, D = 6, States = { 5 6 7 8 9 10 }
  Pipeline-2: II = 6, D = 7, States = { 18 19 20 21 22 23 24 }
  Pipeline-3: II = 17, D = 18, States = { 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 }
  Pipeline-4: II = 18, D = 19, States = { 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 }
  Pipeline-5: II = 66, D = 68, States = { 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond7)
	2  / (!exitcond7)
3 --> 
	4  / true
4 --> 
	5  / (!tmp_2)
	81  / (tmp_2)
5 --> 
	11  / (exitcond6)
	6  / (!exitcond6)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	5  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / (!tmp_2 & !tmp_41 & !tmp_1)
	25  / (!tmp_2 & !tmp_41 & tmp_1)
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	25  / (exitcond5)
	19  / (!exitcond5)
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	18  / true
25 --> 
	26  / true
26 --> 
	44  / (exitcond4)
	27  / (!exitcond4)
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	26  / true
44 --> 
	45  / true
45 --> 
	64  / (exitcond3)
	46  / (!exitcond3)
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	45  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	4  / true
81 --> 
	82  / (!exitcond1)
	15  / (exitcond1)
82 --> 
	83  / true
83 --> 
	150  / (tmp_8)
	84  / (!tmp_8)
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	82  / true
150 --> 
	81  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_151 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_3), !map !31

ST_1: StgValue_152 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_2), !map !37

ST_1: StgValue_153 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_1), !map !43

ST_1: StgValue_154 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_0), !map !49

ST_1: StgValue_155 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !55

ST_1: StgValue_156 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @minver_hwa_str) nounwind

ST_1: work (11)  [1/1] 0.00ns  loc: minver.c:41
:6  %work = alloca [500 x i5], align 1

ST_1: StgValue_158 (12)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecMemCore([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_159 (13)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_160 (14)  [1/1] 0.00ns  loc: minver.c:39
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_161 (15)  [1/1] 1.57ns  loc: minver.c:50
:10  br label %1


 <State 2>: 2.71ns
ST_2: i (17)  [1/1] 0.00ns
:0  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond7 (18)  [1/1] 2.37ns  loc: minver.c:50
:1  %exitcond7 = icmp eq i5 %i, -16

ST_2: i_1 (19)  [1/1] 1.67ns  loc: minver.c:50
:2  %i_1 = add i5 %i, 1

ST_2: StgValue_165 (20)  [1/1] 0.00ns  loc: minver.c:50
:3  br i1 %exitcond7, label %.preheader13.preheader, label %2

ST_2: empty (22)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: tmp_6 (23)  [1/1] 0.00ns  loc: minver.c:50
:1  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_2: StgValue_168 (24)  [1/1] 0.00ns  loc: minver.c:51
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp (25)  [1/1] 0.00ns  loc: minver.c:52
:3  %tmp = zext i5 %i to i64

ST_2: work_addr (26)  [1/1] 0.00ns  loc: minver.c:52
:4  %work_addr = getelementptr [500 x i5]* %work, i64 0, i64 %tmp

ST_2: StgValue_171 (27)  [1/1] 2.71ns  loc: minver.c:52
:5  store i5 %i, i5* %work_addr, align 1

ST_2: empty_15 (28)  [1/1] 0.00ns  loc: minver.c:53
:6  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_6) nounwind

ST_2: StgValue_173 (29)  [1/1] 0.00ns  loc: minver.c:50
:7  br label %1


 <State 3>: 1.57ns
ST_3: r (31)  [1/1] 0.00ns
.preheader13.preheader:0  %r = alloca i32

ST_3: StgValue_175 (32)  [1/1] 1.57ns
.preheader13.preheader:1  store i32 0, i32* %r

ST_3: StgValue_176 (33)  [1/1] 1.57ns  loc: minver.c:56
.preheader13.preheader:2  br label %.preheader13


 <State 4>: 1.67ns
ST_4: i_5 (35)  [1/1] 0.00ns
.preheader13:0  %i_5 = phi i5 [ %k, %30 ], [ 0, %.preheader13.preheader ]

ST_4: tmp_2 (36)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:1  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_5, i32 4)

ST_4: k (37)  [1/1] 1.67ns  loc: minver.c:56
.preheader13:2  %k = add i5 %i_5, 1

ST_4: StgValue_180 (38)  [1/1] 0.00ns  loc: minver.c:56
.preheader13:3  br i1 %tmp_2, label %.preheader8.preheader, label %.preheader12.preheader

ST_4: i_5_cast (40)  [1/1] 0.00ns  loc: minver.c:59
.preheader12.preheader:0  %i_5_cast = zext i5 %i_5 to i32

ST_4: empty_16 (41)  [1/1] 0.00ns
.preheader12.preheader:1  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 8) nounwind

ST_4: tmp_3 (42)  [1/1] 0.00ns  loc: minver.c:61
.preheader12.preheader:2  %tmp_3 = zext i5 %i_5 to i64

ST_4: tmp_9 (43)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:3  %tmp_9 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_5, i2 0)

ST_4: tmp_15 (44)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:4  %tmp_15 = zext i7 %tmp_9 to i64

ST_4: tmp_22 (45)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:5  %tmp_22 = or i7 %tmp_9, 3

ST_4: tmp_23 (46)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:6  %tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_22)

ST_4: a_0_addr_13 (47)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:7  %a_0_addr_13 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_23

ST_4: tmp_25 (48)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:8  %tmp_25 = or i7 %tmp_9, 2

ST_4: tmp_26 (49)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:9  %tmp_26 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_25)

ST_4: a_0_addr_11 (50)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:10  %a_0_addr_11 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_26

ST_4: tmp_29 (51)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:11  %tmp_29 = or i7 %tmp_9, 1

ST_4: tmp_31 (52)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:12  %tmp_31 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_29)

ST_4: a_0_addr_9 (53)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:13  %a_0_addr_9 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_31

ST_4: a_0_addr_7 (54)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:14  %a_0_addr_7 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_15

ST_4: a_1_addr_13 (55)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:15  %a_1_addr_13 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_23

ST_4: a_1_addr_11 (56)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:16  %a_1_addr_11 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_26

ST_4: a_1_addr_9 (57)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:17  %a_1_addr_9 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_31

ST_4: a_1_addr_7 (58)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:18  %a_1_addr_7 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_15

ST_4: a_2_addr_13 (59)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:19  %a_2_addr_13 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_23

ST_4: a_2_addr_11 (60)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:20  %a_2_addr_11 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_26

ST_4: a_2_addr_9 (61)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:21  %a_2_addr_9 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_31

ST_4: a_2_addr_7 (62)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:22  %a_2_addr_7 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_15

ST_4: a_3_addr_13 (63)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:23  %a_3_addr_13 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_23

ST_4: a_3_addr_11 (64)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:24  %a_3_addr_11 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_26

ST_4: a_3_addr_9 (65)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:25  %a_3_addr_9 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_31

ST_4: a_3_addr_7 (66)  [1/1] 0.00ns  loc: minver.c:82
.preheader12.preheader:26  %a_3_addr_7 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_15

ST_4: arrayNo2 (67)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:27  %arrayNo2 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_5, i32 2, i32 4)

ST_4: tmp_34 (68)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:28  %tmp_34 = trunc i5 %i_5 to i2

ST_4: tmp_35 (69)  [1/1] 0.00ns  loc: minver.c:56
.preheader12.preheader:29  %tmp_35 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_5, i2 %tmp_34)

ST_4: tmp_36 (70)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:30  %tmp_36 = zext i7 %tmp_35 to i64

ST_4: a_0_addr_5 (71)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:31  %a_0_addr_5 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_36

ST_4: a_1_addr_5 (72)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:32  %a_1_addr_5 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_36

ST_4: a_2_addr_5 (73)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:33  %a_2_addr_5 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_36

ST_4: a_3_addr_5 (74)  [1/1] 0.00ns  loc: minver.c:105
.preheader12.preheader:34  %a_3_addr_5 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_36

ST_4: StgValue_216 (75)  [1/1] 1.57ns  loc: minver.c:59
.preheader12.preheader:35  br label %.preheader12

ST_4: StgValue_217 (503)  [1/1] 1.57ns  loc: minver.c:109
.preheader8.preheader:0  br label %.preheader8


 <State 5>: 2.93ns
ST_5: wmax (77)  [1/1] 0.00ns
.preheader12:0  %wmax = phi float [ %wmax_1, %_ifconv ], [ 0.000000e+00, %.preheader12.preheader ]

ST_5: r_1 (78)  [1/1] 0.00ns
.preheader12:1  %r_1 = phi i32 [ %i_6, %_ifconv ], [ %i_5_cast, %.preheader12.preheader ]

ST_5: exitcond6 (79)  [1/1] 2.93ns  loc: minver.c:59
.preheader12:2  %exitcond6 = icmp eq i32 %r_1, 16

ST_5: StgValue_221 (80)  [1/1] 0.00ns  loc: minver.c:59
.preheader12:3  br i1 %exitcond6, label %_ifconv1, label %_ifconv

ST_5: i_6 (117)  [1/1] 2.39ns  loc: minver.c:59
_ifconv:35  %i_6 = add nsw i32 1, %r_1


 <State 6>: 5.20ns
ST_6: arrayNo2_cast_cast2_s (86)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:4  %arrayNo2_cast_cast2_s = zext i3 %arrayNo2 to i5

ST_6: n_assign_s (87)  [2/2] 5.20ns  loc: minver.c:56
_ifconv:5  %n_assign_s = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_s, i32 %r_1, i2 %tmp_34)


 <State 7>: 5.45ns
ST_7: n_assign_s (87)  [1/2] 5.45ns  loc: minver.c:56
_ifconv:5  %n_assign_s = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_s, i32 %r_1, i2 %tmp_34)


 <State 8>: 7.74ns
ST_8: n_assign_1_to_int (88)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:6  %n_assign_1_to_int = bitcast float %n_assign_s to i32

ST_8: tmp_42 (89)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:7  %tmp_42 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %n_assign_1_to_int, i32 23, i32 30)

ST_8: tmp_50 (90)  [1/1] 0.00ns  loc: minver.c:56
_ifconv:8  %tmp_50 = trunc i32 %n_assign_1_to_int to i23

ST_8: notlhs (91)  [1/1] 2.47ns  loc: minver.c:56
_ifconv:9  %notlhs = icmp ne i8 %tmp_42, -1

ST_8: notrhs (92)  [1/1] 2.84ns  loc: minver.c:56
_ifconv:10  %notrhs = icmp eq i23 %tmp_50, 0

ST_8: tmp_44 (93)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node w_3)
_ifconv:11  %tmp_44 = or i1 %notrhs, %notlhs

ST_8: tmp_45 (94)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:61
_ifconv:12  %tmp_45 = fcmp oge float %n_assign_s, 0.000000e+00

ST_8: tmp_46 (95)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:13  %tmp_46 = and i1 %tmp_44, %tmp_45

ST_8: f_neg_i (96)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:14  %f_neg_i = xor i32 %n_assign_1_to_int, -2147483648

ST_8: f_1 (97)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:61 (grouped into LUT with out node w_3)
_ifconv:15  %f_1 = bitcast i32 %f_neg_i to float

ST_8: w_3 (98)  [1/1] 1.37ns  loc: minver.c:63 (out node of the LUT)
_ifconv:16  %w_3 = select i1 %tmp_46, float %n_assign_s, float %f_1


 <State 9>: 7.74ns
ST_9: w_3_to_int (99)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:17  %w_3_to_int = bitcast float %w_3 to i32

ST_9: tmp_47 (100)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:18  %tmp_47 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_3_to_int, i32 23, i32 30)

ST_9: tmp_56 (101)  [1/1] 0.00ns  loc: minver.c:63
_ifconv:19  %tmp_56 = trunc i32 %w_3_to_int to i23

ST_9: wmax_to_int (102)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:20  %wmax_to_int = bitcast float %wmax to i32

ST_9: tmp_49 (103)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:21  %tmp_49 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %wmax_to_int, i32 23, i32 30)

ST_9: tmp_58 (104)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:22  %tmp_58 = trunc i32 %wmax_to_int to i23

ST_9: notlhs3 (105)  [1/1] 2.47ns  loc: minver.c:63
_ifconv:23  %notlhs3 = icmp ne i8 %tmp_47, -1

ST_9: notrhs3 (106)  [1/1] 2.84ns  loc: minver.c:63
_ifconv:24  %notrhs3 = icmp eq i23 %tmp_56, 0

ST_9: tmp_51 (107)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_55)
_ifconv:25  %tmp_51 = or i1 %notrhs3, %notlhs3

ST_9: notlhs4 (108)  [1/1] 2.47ns  loc: minver.c:62
_ifconv:26  %notlhs4 = icmp ne i8 %tmp_49, -1

ST_9: notrhs4 (109)  [1/1] 2.84ns  loc: minver.c:62
_ifconv:27  %notrhs4 = icmp eq i23 %tmp_58, 0

ST_9: tmp_52 (110)  [1/1] 0.00ns  loc: minver.c:62 (grouped into LUT with out node tmp_55)
_ifconv:28  %tmp_52 = or i1 %notrhs4, %notlhs4

ST_9: tmp_53 (111)  [1/1] 0.00ns  loc: minver.c:63 (grouped into LUT with out node tmp_55)
_ifconv:29  %tmp_53 = and i1 %tmp_51, %tmp_52

ST_9: tmp_54 (112)  [1/1] 6.37ns  loc: minver.c:62
_ifconv:30  %tmp_54 = fcmp ogt float %w_3, %wmax

ST_9: tmp_55 (113)  [1/1] 1.37ns  loc: minver.c:62 (out node of the LUT)
_ifconv:31  %tmp_55 = and i1 %tmp_53, %tmp_54


 <State 10>: 2.94ns
ST_10: r_load_2 (82)  [1/1] 0.00ns  loc: minver.c:62
_ifconv:0  %r_load_2 = load i32* %r

ST_10: empty_17 (83)  [1/1] 0.00ns
_ifconv:1  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 0) nounwind

ST_10: tmp_19 (84)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:2  %tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_10: StgValue_255 (85)  [1/1] 0.00ns  loc: minver.c:60
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_10: wmax_1 (114)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:32  %wmax_1 = select i1 %tmp_55, float %w_3, float %wmax

ST_10: r_2 (115)  [1/1] 1.37ns  loc: minver.c:62
_ifconv:33  %r_2 = select i1 %tmp_55, i32 %r_1, i32 %r_load_2

ST_10: empty_18 (116)  [1/1] 0.00ns  loc: minver.c:66
_ifconv:34  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_19) nounwind

ST_10: StgValue_259 (118)  [1/1] 1.57ns  loc: minver.c:62
_ifconv:36  store i32 %r_2, i32* %r

ST_10: StgValue_260 (119)  [1/1] 0.00ns  loc: minver.c:59
_ifconv:37  br label %.preheader12


 <State 11>: 5.20ns
ST_11: r_load_1 (121)  [1/1] 0.00ns
_ifconv1:0  %r_load_1 = load i32* %r

ST_11: arrayNo2_cast_cast2_1 (123)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:2  %arrayNo2_cast_cast2_1 = zext i3 %arrayNo2 to i5

ST_11: pivot (124)  [2/2] 5.20ns  loc: minver.c:56
_ifconv1:3  %pivot = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %r_load_1, i2 %tmp_34)


 <State 12>: 5.45ns
ST_12: pivot (124)  [1/2] 5.45ns  loc: minver.c:56
_ifconv1:3  %pivot = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %r_load_1, i2 %tmp_34)


 <State 13>: 7.74ns
ST_13: pivot_to_int (125)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:4  %pivot_to_int = bitcast float %pivot to i32

ST_13: tmp_7 (126)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:5  %tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %pivot_to_int, i32 23, i32 30)

ST_13: tmp_43 (127)  [1/1] 0.00ns  loc: minver.c:56
_ifconv1:6  %tmp_43 = trunc i32 %pivot_to_int to i23

ST_13: notlhs1 (128)  [1/1] 2.47ns  loc: minver.c:56
_ifconv1:7  %notlhs1 = icmp ne i8 %tmp_7, -1

ST_13: notrhs1 (129)  [1/1] 2.84ns  loc: minver.c:56
_ifconv1:8  %notrhs1 = icmp eq i23 %tmp_43, 0

ST_13: tmp_11 (130)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node api)
_ifconv1:9  %tmp_11 = or i1 %notrhs1, %notlhs1

ST_13: tmp_16 (131)  [1/1] 6.37ns  loc: minver_lib.c:11->minver.c:69
_ifconv1:10  %tmp_16 = fcmp oge float %pivot, 0.000000e+00

ST_13: tmp_20 (132)  [1/1] 0.00ns  loc: minver_lib.c:11->minver.c:69 (grouped into LUT with out node api)
_ifconv1:11  %tmp_20 = and i1 %tmp_11, %tmp_16

ST_13: f_neg_i1 (133)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:12  %f_neg_i1 = xor i32 %pivot_to_int, -2147483648

ST_13: f (134)  [1/1] 0.00ns  loc: minver_lib.c:14->minver.c:69 (grouped into LUT with out node api)
_ifconv1:13  %f = bitcast i32 %f_neg_i1 to float

ST_13: api (135)  [1/1] 1.37ns  loc: minver.c:69 (out node of the LUT)
_ifconv1:14  %api = select i1 %tmp_20, float %pivot, float %f


 <State 14>: 5.12ns
ST_14: tmp_5 (136)  [1/1] 5.12ns  loc: minver.c:70
_ifconv1:15  %tmp_5 = fpext float %api to double


 <State 15>: 8.27ns
ST_15: tmp_4 (122)  [1/1] 0.00ns  loc: minver.c:68
_ifconv1:1  %tmp_4 = sext i32 %r_load_1 to i64

ST_15: tmp_5_to_int (137)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:16  %tmp_5_to_int = bitcast double %tmp_5 to i64

ST_15: tmp_37 (138)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:17  %tmp_37 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %tmp_5_to_int, i32 52, i32 62)

ST_15: tmp_48 (139)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:18  %tmp_48 = trunc i64 %tmp_5_to_int to i52

ST_15: notlhs2 (140)  [1/1] 2.58ns  loc: minver.c:70
_ifconv1:19  %notlhs2 = icmp ne i11 %tmp_37, -1

ST_15: notrhs2 (141)  [1/1] 3.19ns  loc: minver.c:70
_ifconv1:20  %notrhs2 = icmp eq i52 %tmp_48, 0

ST_15: tmp_39 (142)  [1/1] 0.00ns  loc: minver.c:70 (grouped into LUT with out node tmp_41)
_ifconv1:21  %tmp_39 = or i1 %notrhs2, %notlhs2

ST_15: tmp_40 (143)  [1/1] 6.90ns  loc: minver.c:70
_ifconv1:22  %tmp_40 = fcmp ole double %tmp_5, 1.000000e-06

ST_15: tmp_41 (144)  [1/1] 1.37ns  loc: minver.c:70 (out node of the LUT)
_ifconv1:23  %tmp_41 = and i1 %tmp_39, %tmp_40

ST_15: StgValue_286 (145)  [1/1] 0.00ns  loc: minver.c:70
_ifconv1:24  br i1 %tmp_41, label %.loopexit.loopexit63, label %3

ST_15: tmp_1 (147)  [1/1] 2.93ns  loc: minver.c:75
:0  %tmp_1 = icmp eq i32 %r_load_1, %i_5_cast

ST_15: StgValue_288 (148)  [1/1] 0.00ns  loc: minver.c:75
:1  br i1 %tmp_1, label %.loopexit11, label %4

ST_15: work_addr_3 (150)  [1/1] 0.00ns  loc: minver.c:77
:0  %work_addr_3 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_3

ST_15: work_load_2 (151)  [2/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_15: work_addr_4 (152)  [1/1] 0.00ns  loc: minver.c:78
:2  %work_addr_4 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_4

ST_15: work_load_3 (153)  [2/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_15: StgValue_293 (501)  [1/1] 0.00ns
.loopexit.loopexit63:0  br label %.loopexit

ST_15: StgValue_294 (1017)  [1/1] 0.00ns  loc: minver.c:133
.loopexit:0  ret i32 1


 <State 16>: 5.42ns
ST_16: work_load_2 (151)  [1/2] 2.71ns  loc: minver.c:77
:1  %work_load_2 = load i5* %work_addr_3, align 1

ST_16: work_load_3 (153)  [1/2] 2.71ns  loc: minver.c:78
:3  %work_load_3 = load i5* %work_addr_4, align 1

ST_16: StgValue_297 (154)  [1/1] 2.71ns  loc: minver.c:78
:4  store i5 %work_load_3, i5* %work_addr_3, align 1


 <State 17>: 2.71ns
ST_17: StgValue_298 (155)  [1/1] 2.71ns  loc: minver.c:79
:5  store i5 %work_load_2, i5* %work_addr_4, align 1

ST_17: StgValue_299 (156)  [1/1] 1.57ns  loc: minver.c:80
:6  br label %5


 <State 18>: 2.37ns
ST_18: j (158)  [1/1] 0.00ns
:0  %j = phi i5 [ 0, %4 ], [ %j_1, %7 ]

ST_18: exitcond5 (159)  [1/1] 2.37ns  loc: minver.c:80
:1  %exitcond5 = icmp eq i5 %j, -16

ST_18: j_1 (160)  [1/1] 1.67ns  loc: minver.c:80
:2  %j_1 = add i5 %j, 1

ST_18: StgValue_303 (161)  [1/1] 0.00ns  loc: minver.c:80
:3  br i1 %exitcond5, label %.loopexit11.loopexit, label %6

ST_18: tmp_24 (165)  [1/1] 0.00ns  loc: minver.c:80
:2  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_18: arrayNo4 (167)  [1/1] 0.00ns  loc: minver.c:80
:4  %arrayNo4 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %j, i32 2, i32 4)

ST_18: tmp_103 (168)  [1/1] 0.00ns  loc: minver.c:80
:5  %tmp_103 = trunc i5 %j to i2

ST_18: empty_20 (202)  [1/1] 0.00ns  loc: minver.c:85
:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_24) nounwind

ST_18: StgValue_308 (203)  [1/1] 0.00ns  loc: minver.c:80
:1  br label %5


 <State 19>: 5.20ns
ST_19: arrayNo4_cast_cast1_s (181)  [1/1] 0.00ns  loc: minver.c:80
:18  %arrayNo4_cast_cast1_s = zext i3 %arrayNo4 to i5

ST_19: w (182)  [2/2] 5.20ns  loc: minver.c:80
:19  %w = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %i_5_cast, i2 %tmp_103)

ST_19: StgValue_311 (184)  [1/1] 2.33ns  loc: minver.c:83
:21  switch i3 %arrayNo4, label %branch147 [
    i3 0, label %branch144
    i3 1, label %branch145
    i3 2, label %branch146
  ]


 <State 20>: 5.45ns
ST_20: w (182)  [1/2] 5.45ns  loc: minver.c:80
:19  %w = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %i_5_cast, i2 %tmp_103)


 <State 21>: 5.20ns
ST_21: r_load (163)  [1/1] 0.00ns
:0  %r_load = load i32* %r

ST_21: tmp_66 (172)  [1/1] 0.00ns  loc: minver.c:80
:9  %tmp_66 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %r_load, i2 %tmp_103)

ST_21: tmp_67 (173)  [1/1] 0.00ns  loc: minver.c:83
:10  %tmp_67 = sext i34 %tmp_66 to i64

ST_21: a_0_addr_3 (174)  [1/1] 0.00ns  loc: minver.c:83
:11  %a_0_addr_3 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_67

ST_21: a_1_addr_3 (176)  [1/1] 0.00ns  loc: minver.c:83
:13  %a_1_addr_3 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_67

ST_21: a_2_addr_3 (178)  [1/1] 0.00ns  loc: minver.c:83
:15  %a_2_addr_3 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_67

ST_21: a_3_addr_3 (180)  [1/1] 0.00ns  loc: minver.c:83
:17  %a_3_addr_3 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_67

ST_21: tmp_68 (183)  [2/2] 5.20ns  loc: minver.c:80
:20  %tmp_68 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %r_load, i2 %tmp_103)


 <State 22>: 5.45ns
ST_22: tmp_68 (183)  [1/2] 5.45ns  loc: minver.c:80
:20  %tmp_68 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo4_cast_cast1_s, i32 %r_load, i2 %tmp_103)


 <State 23>: 2.71ns
ST_23: empty_19 (164)  [1/1] 0.00ns
:1  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_23: StgValue_323 (166)  [1/1] 0.00ns  loc: minver.c:81
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_23: tmp_64 (169)  [1/1] 0.00ns  loc: minver.c:56
:6  %tmp_64 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_5, i2 %tmp_103)

ST_23: tmp_65 (170)  [1/1] 0.00ns  loc: minver.c:82
:7  %tmp_65 = zext i7 %tmp_64 to i64

ST_23: a_0_addr_2 (171)  [1/1] 0.00ns  loc: minver.c:82
:8  %a_0_addr_2 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_65

ST_23: a_1_addr_2 (175)  [1/1] 0.00ns  loc: minver.c:82
:12  %a_1_addr_2 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_65

ST_23: a_2_addr_2 (177)  [1/1] 0.00ns  loc: minver.c:82
:14  %a_2_addr_2 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_65

ST_23: a_3_addr_2 (179)  [1/1] 0.00ns  loc: minver.c:82
:16  %a_3_addr_2 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_65

ST_23: StgValue_330 (186)  [1/1] 2.71ns  loc: minver.c:83
branch146:0  store float %tmp_68, float* %a_2_addr_2, align 4

ST_23: StgValue_331 (190)  [1/1] 2.71ns  loc: minver.c:83
branch145:0  store float %tmp_68, float* %a_1_addr_2, align 4

ST_23: StgValue_332 (194)  [1/1] 2.71ns  loc: minver.c:83
branch144:0  store float %tmp_68, float* %a_0_addr_2, align 4

ST_23: StgValue_333 (198)  [1/1] 2.71ns  loc: minver.c:83
branch147:0  store float %tmp_68, float* %a_3_addr_2, align 4


 <State 24>: 2.71ns
ST_24: StgValue_334 (187)  [1/1] 2.71ns  loc: minver.c:84
branch146:1  store float %w, float* %a_2_addr_3, align 4

ST_24: StgValue_335 (188)  [1/1] 0.00ns
branch146:2  br label %7

ST_24: StgValue_336 (191)  [1/1] 2.71ns  loc: minver.c:84
branch145:1  store float %w, float* %a_1_addr_3, align 4

ST_24: StgValue_337 (192)  [1/1] 0.00ns
branch145:2  br label %7

ST_24: StgValue_338 (195)  [1/1] 2.71ns  loc: minver.c:84
branch144:1  store float %w, float* %a_0_addr_3, align 4

ST_24: StgValue_339 (196)  [1/1] 0.00ns
branch144:2  br label %7

ST_24: StgValue_340 (199)  [1/1] 2.71ns  loc: minver.c:84
branch147:1  store float %w, float* %a_3_addr_3, align 4

ST_24: StgValue_341 (200)  [1/1] 0.00ns
branch147:2  br label %7


 <State 25>: 1.57ns
ST_25: StgValue_342 (205)  [1/1] 0.00ns
.loopexit11.loopexit:0  br label %.loopexit11

ST_25: StgValue_343 (207)  [1/1] 1.57ns  loc: minver.c:88
.loopexit11:0  br label %8


 <State 26>: 2.37ns
ST_26: i_2 (209)  [1/1] 0.00ns
:0  %i_2 = phi i5 [ 0, %.loopexit11 ], [ %i_8, %10 ]

ST_26: exitcond4 (210)  [1/1] 2.37ns  loc: minver.c:88
:1  %exitcond4 = icmp eq i5 %i_2, -16

ST_26: i_8 (211)  [1/1] 1.67ns  loc: minver.c:88
:2  %i_8 = add i5 %i_2, 1

ST_26: StgValue_347 (212)  [1/1] 0.00ns  loc: minver.c:88
:3  br i1 %exitcond4, label %.preheader10.preheader, label %9

ST_26: tmp_28 (215)  [1/1] 0.00ns  loc: minver.c:88
:1  %tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_26: arrayNo5 (217)  [1/1] 0.00ns  loc: minver.c:88
:3  %arrayNo5 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_2, i32 2, i32 4)

ST_26: tmp_104 (218)  [1/1] 0.00ns  loc: minver.c:88
:4  %tmp_104 = trunc i5 %i_2 to i2

ST_26: empty_22 (242)  [1/1] 0.00ns  loc: minver.c:91
:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_28) nounwind

ST_26: StgValue_352 (243)  [1/1] 0.00ns  loc: minver.c:88
:1  br label %8


 <State 27>: 5.20ns
ST_27: arrayNo5_cast_cast_c (225)  [1/1] 0.00ns  loc: minver.c:88
:11  %arrayNo5_cast_cast_c = zext i3 %arrayNo5 to i5

ST_27: tmp_77 (226)  [2/2] 5.20ns  loc: minver.c:88
:12  %tmp_77 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo5_cast_cast_c, i32 %i_5_cast, i2 %tmp_104)

ST_27: StgValue_355 (228)  [1/1] 2.33ns  loc: minver.c:90
:14  switch i3 %arrayNo5, label %branch139 [
    i3 0, label %branch136
    i3 1, label %branch137
    i3 2, label %branch138
  ]


 <State 28>: 11.75ns
ST_28: tmp_77 (226)  [1/2] 5.45ns  loc: minver.c:88
:12  %tmp_77 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo5_cast_cast_c, i32 %i_5_cast, i2 %tmp_104)

ST_28: tmp_12 (227)  [16/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 29>: 6.30ns
ST_29: tmp_12 (227)  [15/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 30>: 6.30ns
ST_30: tmp_12 (227)  [14/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 31>: 6.30ns
ST_31: tmp_12 (227)  [13/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 32>: 6.30ns
ST_32: tmp_12 (227)  [12/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 33>: 6.30ns
ST_33: tmp_12 (227)  [11/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 34>: 6.30ns
ST_34: tmp_12 (227)  [10/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 35>: 6.30ns
ST_35: tmp_12 (227)  [9/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 36>: 6.30ns
ST_36: tmp_12 (227)  [8/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 37>: 6.30ns
ST_37: tmp_12 (227)  [7/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 38>: 6.30ns
ST_38: tmp_12 (227)  [6/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 39>: 6.30ns
ST_39: tmp_12 (227)  [5/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 40>: 6.30ns
ST_40: tmp_12 (227)  [4/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 41>: 6.30ns
ST_41: tmp_12 (227)  [3/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 42>: 6.30ns
ST_42: tmp_12 (227)  [2/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot


 <State 43>: 9.01ns
ST_43: empty_21 (214)  [1/1] 0.00ns
:0  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_43: StgValue_373 (216)  [1/1] 0.00ns  loc: minver.c:89
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_43: tmp_75 (219)  [1/1] 0.00ns  loc: minver.c:56
:5  %tmp_75 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_5, i2 %tmp_104)

ST_43: tmp_76 (220)  [1/1] 0.00ns  loc: minver.c:90
:6  %tmp_76 = zext i7 %tmp_75 to i64

ST_43: a_0_addr_4 (221)  [1/1] 0.00ns  loc: minver.c:90
:7  %a_0_addr_4 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_76

ST_43: a_1_addr_4 (222)  [1/1] 0.00ns  loc: minver.c:90
:8  %a_1_addr_4 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_76

ST_43: a_2_addr_4 (223)  [1/1] 0.00ns  loc: minver.c:90
:9  %a_2_addr_4 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_76

ST_43: a_3_addr_4 (224)  [1/1] 0.00ns  loc: minver.c:90
:10  %a_3_addr_4 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_76

ST_43: tmp_12 (227)  [1/16] 6.30ns  loc: minver.c:90
:13  %tmp_12 = fdiv float %tmp_77, %pivot

ST_43: StgValue_381 (230)  [1/1] 2.71ns  loc: minver.c:90
branch138:0  store float %tmp_12, float* %a_2_addr_4, align 4

ST_43: StgValue_382 (231)  [1/1] 0.00ns  loc: minver.c:90
branch138:1  br label %10

ST_43: StgValue_383 (233)  [1/1] 2.71ns  loc: minver.c:90
branch137:0  store float %tmp_12, float* %a_1_addr_4, align 4

ST_43: StgValue_384 (234)  [1/1] 0.00ns  loc: minver.c:90
branch137:1  br label %10

ST_43: StgValue_385 (236)  [1/1] 2.71ns  loc: minver.c:90
branch136:0  store float %tmp_12, float* %a_0_addr_4, align 4

ST_43: StgValue_386 (237)  [1/1] 0.00ns  loc: minver.c:90
branch136:1  br label %10

ST_43: StgValue_387 (239)  [1/1] 2.71ns  loc: minver.c:90
branch139:0  store float %tmp_12, float* %a_3_addr_4, align 4

ST_43: StgValue_388 (240)  [1/1] 0.00ns  loc: minver.c:90
branch139:1  br label %10


 <State 44>: 2.37ns
ST_44: tmp_27 (245)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:0  %tmp_27 = icmp eq i5 %i_5, 0

ST_44: tmp_20_1 (246)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:1  %tmp_20_1 = icmp eq i5 %i_5, 1

ST_44: tmp_20_2 (247)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:2  %tmp_20_2 = icmp eq i5 %i_5, 2

ST_44: tmp_20_3 (248)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:3  %tmp_20_3 = icmp eq i5 %i_5, 3

ST_44: tmp_20_4 (249)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:4  %tmp_20_4 = icmp eq i5 %i_5, 4

ST_44: tmp_20_5 (250)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:5  %tmp_20_5 = icmp eq i5 %i_5, 5

ST_44: tmp_20_6 (251)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:6  %tmp_20_6 = icmp eq i5 %i_5, 6

ST_44: tmp_20_7 (252)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:7  %tmp_20_7 = icmp eq i5 %i_5, 7

ST_44: tmp_20_8 (253)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:8  %tmp_20_8 = icmp eq i5 %i_5, 8

ST_44: tmp_20_9 (254)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:9  %tmp_20_9 = icmp eq i5 %i_5, 9

ST_44: tmp_20_s (255)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:10  %tmp_20_s = icmp eq i5 %i_5, 10

ST_44: tmp_20_10 (256)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:11  %tmp_20_10 = icmp eq i5 %i_5, 11

ST_44: tmp_20_11 (257)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:12  %tmp_20_11 = icmp eq i5 %i_5, 12

ST_44: tmp_20_12 (258)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:13  %tmp_20_12 = icmp eq i5 %i_5, 13

ST_44: tmp_20_13 (259)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:14  %tmp_20_13 = icmp eq i5 %i_5, 14

ST_44: tmp_20_14 (260)  [1/1] 2.37ns  loc: minver.c:99
.preheader10.preheader:15  %tmp_20_14 = icmp eq i5 %i_5, 15

ST_44: StgValue_405 (261)  [1/1] 1.57ns  loc: minver.c:93
.preheader10.preheader:16  br label %.preheader10


 <State 45>: 2.37ns
ST_45: i_3 (263)  [1/1] 0.00ns
.preheader10:0  %i_3 = phi i5 [ %i_9, %._crit_edge ], [ 0, %.preheader10.preheader ]

ST_45: exitcond3 (264)  [1/1] 2.37ns  loc: minver.c:93
.preheader10:1  %exitcond3 = icmp eq i5 %i_3, -16

ST_45: i_9 (265)  [1/1] 1.67ns  loc: minver.c:93
.preheader10:2  %i_9 = add i5 %i_3, 1

ST_45: StgValue_409 (266)  [1/1] 0.00ns  loc: minver.c:93
.preheader10:3  br i1 %exitcond3, label %29, label %11

ST_45: empty_23 (268)  [1/1] 0.00ns
:0  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_45: tmp_30 (269)  [1/1] 0.00ns  loc: minver.c:93
:1  %tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9) nounwind

ST_45: StgValue_412 (270)  [1/1] 0.00ns  loc: minver.c:94
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_45: tmp_14 (271)  [1/1] 2.37ns  loc: minver.c:95
:3  %tmp_14 = icmp eq i5 %i_3, %i_5

ST_45: StgValue_414 (272)  [1/1] 0.00ns  loc: minver.c:95
:4  br i1 %tmp_14, label %._crit_edge, label %12

ST_45: StgValue_415 (479)  [1/1] 0.00ns  loc: minver.c:103
._crit_edge18:0  br label %._crit_edge

ST_45: empty_24 (481)  [1/1] 0.00ns  loc: minver.c:104
._crit_edge:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_30) nounwind

ST_45: StgValue_417 (482)  [1/1] 0.00ns  loc: minver.c:93
._crit_edge:1  br label %.preheader10


 <State 46>: 5.20ns
ST_46: tmp_15_cast (304)  [1/1] 0.00ns  loc: minver.c:93
:30  %tmp_15_cast = zext i5 %i_3 to i32

ST_46: w_1 (305)  [2/2] 5.20ns  loc: minver.c:56
:31  %w_1 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %tmp_15_cast, i2 %tmp_34)


 <State 47>: 5.45ns
ST_47: w_1 (305)  [1/2] 5.45ns  loc: minver.c:56
:31  %w_1 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo2_cast_cast2_1, i32 %tmp_15_cast, i2 %tmp_34)


 <State 48>: 7.74ns
ST_48: w_1_to_int (306)  [1/1] 0.00ns  loc: minver.c:56
:32  %w_1_to_int = bitcast float %w_1 to i32

ST_48: tmp_69 (307)  [1/1] 0.00ns  loc: minver.c:56
:33  %tmp_69 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %w_1_to_int, i32 23, i32 30)

ST_48: tmp_105 (308)  [1/1] 0.00ns  loc: minver.c:56
:34  %tmp_105 = trunc i32 %w_1_to_int to i23

ST_48: notlhs5 (309)  [1/1] 2.47ns  loc: minver.c:56
:35  %notlhs5 = icmp ne i8 %tmp_69, -1

ST_48: notrhs5 (310)  [1/1] 2.84ns  loc: minver.c:56
:36  %notrhs5 = icmp eq i23 %tmp_105, 0

ST_48: tmp_71 (311)  [1/1] 0.00ns  loc: minver.c:56 (grouped into LUT with out node tmp_73)
:37  %tmp_71 = or i1 %notrhs5, %notlhs5

ST_48: tmp_72 (312)  [1/1] 6.37ns  loc: minver.c:97
:38  %tmp_72 = fcmp oeq float %w_1, 0.000000e+00

ST_48: tmp_73 (313)  [1/1] 1.37ns  loc: minver.c:97 (out node of the LUT)
:39  %tmp_73 = and i1 %tmp_71, %tmp_72

ST_48: StgValue_429 (314)  [1/1] 0.00ns  loc: minver.c:97
:40  br i1 %tmp_73, label %._crit_edge18, label %.preheader9.0

ST_48: StgValue_430 (316)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.0:0  br i1 %tmp_27, label %.preheader9.1, label %13

ST_48: a_0_load (318)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load = load float* %a_0_addr_7, align 4

ST_48: StgValue_432 (325)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.1:0  br i1 %tmp_20_1, label %.preheader9.2, label %14

ST_48: StgValue_433 (334)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.2:0  br i1 %tmp_20_2, label %.preheader9.3, label %15

ST_48: StgValue_434 (343)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.3:0  br i1 %tmp_20_3, label %.preheader9.4, label %16

ST_48: StgValue_435 (352)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.4:0  br i1 %tmp_20_4, label %.preheader9.5, label %17

ST_48: a_1_load (354)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load = load float* %a_1_addr_7, align 4

ST_48: StgValue_437 (361)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.5:0  br i1 %tmp_20_5, label %.preheader9.6, label %18

ST_48: StgValue_438 (370)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.6:0  br i1 %tmp_20_6, label %.preheader9.7, label %19

ST_48: StgValue_439 (379)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.7:0  br i1 %tmp_20_7, label %.preheader9.8, label %20

ST_48: StgValue_440 (388)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.8:0  br i1 %tmp_20_8, label %.preheader9.9, label %21

ST_48: a_2_load (390)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load = load float* %a_2_addr_7, align 4

ST_48: StgValue_442 (397)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.9:0  br i1 %tmp_20_9, label %.preheader9.10, label %22

ST_48: StgValue_443 (406)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.10:0  br i1 %tmp_20_s, label %.preheader9.11, label %23

ST_48: StgValue_444 (415)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.11:0  br i1 %tmp_20_10, label %.preheader9.12, label %24

ST_48: StgValue_445 (424)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.12:0  br i1 %tmp_20_11, label %.preheader9.13, label %25

ST_48: a_3_load (426)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load = load float* %a_3_addr_7, align 4

ST_48: StgValue_447 (433)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.13:0  br i1 %tmp_20_12, label %.preheader9.14, label %26

ST_48: StgValue_448 (442)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.14:0  br i1 %tmp_20_13, label %.preheader9.15, label %27

ST_48: StgValue_449 (451)  [1/1] 0.00ns  loc: minver.c:99
.preheader9.15:0  br i1 %tmp_20_14, label %.preheader9.16, label %28

ST_48: tmp_18_neg (460)  [1/1] 1.37ns  loc: minver.c:101
.preheader9.16:0  %tmp_18_neg = xor i32 %w_1_to_int, -2147483648

ST_48: tmp_17 (461)  [1/1] 0.00ns  loc: minver.c:101
.preheader9.16:1  %tmp_17 = bitcast i32 %tmp_18_neg to float

ST_48: tmp_18 (462)  [16/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot

ST_48: StgValue_453 (477)  [1/1] 0.00ns  loc: minver.c:102
.preheader9.16188:0  br label %._crit_edge18


 <State 49>: 8.49ns
ST_49: a_0_load (318)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load = load float* %a_0_addr_7, align 4

ST_49: tmp_32 (319)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_49: a_0_load_2 (327)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_2 = load float* %a_0_addr_9, align 4

ST_49: a_1_load (354)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load = load float* %a_1_addr_7, align 4

ST_49: tmp_22_4 (355)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_1_load

ST_49: a_1_load_2 (363)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_2 = load float* %a_1_addr_9, align 4

ST_49: a_2_load (390)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load = load float* %a_2_addr_7, align 4

ST_49: tmp_22_8 (391)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_2_load

ST_49: a_2_load_2 (399)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_2 = load float* %a_2_addr_9, align 4

ST_49: a_3_load (426)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load = load float* %a_3_addr_7, align 4

ST_49: tmp_22_11 (427)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_3_load

ST_49: a_3_load_2 (435)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_2 = load float* %a_3_addr_9, align 4

ST_49: tmp_18 (462)  [15/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 50>: 8.49ns
ST_50: tmp_32 (319)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_50: a_0_load_2 (327)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_2 = load float* %a_0_addr_9, align 4

ST_50: tmp_22_1 (328)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_50: a_0_load_4 (336)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_4 = load float* %a_0_addr_11, align 4

ST_50: tmp_22_4 (355)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_1_load

ST_50: a_1_load_2 (363)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_2 = load float* %a_1_addr_9, align 4

ST_50: tmp_22_5 (364)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_1_load_2

ST_50: a_1_load_4 (372)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_4 = load float* %a_1_addr_11, align 4

ST_50: tmp_22_8 (391)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_2_load

ST_50: a_2_load_2 (399)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_2 = load float* %a_2_addr_9, align 4

ST_50: tmp_22_9 (400)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_2_load_2

ST_50: a_2_load_4 (408)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_4 = load float* %a_2_addr_11, align 4

ST_50: tmp_22_11 (427)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_3_load

ST_50: a_3_load_2 (435)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_2 = load float* %a_3_addr_9, align 4

ST_50: tmp_22_12 (436)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_3_load_2

ST_50: a_3_load_4 (444)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_4 = load float* %a_3_addr_11, align 4

ST_50: tmp_18 (462)  [14/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 51>: 8.49ns
ST_51: tmp_32 (319)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_51: tmp_22_1 (328)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_51: a_0_load_4 (336)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_4 = load float* %a_0_addr_11, align 4

ST_51: tmp_22_2 (337)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_51: a_0_load_6 (345)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_6 = load float* %a_0_addr_13, align 4

ST_51: tmp_22_4 (355)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_1_load

ST_51: tmp_22_5 (364)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_1_load_2

ST_51: a_1_load_4 (372)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_4 = load float* %a_1_addr_11, align 4

ST_51: tmp_22_6 (373)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_1_load_4

ST_51: a_1_load_6 (381)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_6 = load float* %a_1_addr_13, align 4

ST_51: tmp_22_8 (391)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_2_load

ST_51: tmp_22_9 (400)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_2_load_2

ST_51: a_2_load_4 (408)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_4 = load float* %a_2_addr_11, align 4

ST_51: tmp_22_s (409)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_2_load_4

ST_51: a_2_load_6 (417)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_6 = load float* %a_2_addr_13, align 4

ST_51: tmp_22_11 (427)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_3_load

ST_51: tmp_22_12 (436)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_3_load_2

ST_51: a_3_load_4 (444)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_4 = load float* %a_3_addr_11, align 4

ST_51: tmp_22_13 (445)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_3_load_4

ST_51: a_3_load_6 (453)  [2/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_6 = load float* %a_3_addr_13, align 4

ST_51: tmp_18 (462)  [13/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 52>: 8.49ns
ST_52: tmp_78 (274)  [1/1] 0.00ns  loc: minver.c:93
:0  %tmp_78 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_3, i2 0)

ST_52: tmp_79 (275)  [1/1] 0.00ns  loc: minver.c:96
:1  %tmp_79 = zext i7 %tmp_78 to i64

ST_52: tmp_80 (276)  [1/1] 0.00ns  loc: minver.c:93
:2  %tmp_80 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_3, i2 %tmp_34)

ST_52: a_0_addr_8 (279)  [1/1] 0.00ns  loc: minver.c:96
:5  %a_0_addr_8 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_79

ST_52: a_1_addr_8 (290)  [1/1] 0.00ns  loc: minver.c:96
:16  %a_1_addr_8 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_79

ST_52: a_2_addr_8 (295)  [1/1] 0.00ns  loc: minver.c:96
:21  %a_2_addr_8 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_79

ST_52: a_3_addr_8 (300)  [1/1] 0.00ns  loc: minver.c:96
:26  %a_3_addr_8 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_79

ST_52: tmp_32 (319)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_32 = fmul float %w_1, %a_0_load

ST_52: a_0_load_1 (320)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_1 = load float* %a_0_addr_8, align 4

ST_52: tmp_22_1 (328)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_52: tmp_22_2 (337)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_52: a_0_load_6 (345)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_0_load_6 = load float* %a_0_addr_13, align 4

ST_52: tmp_22_3 (346)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_52: tmp_22_4 (355)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_4 = fmul float %w_1, %a_1_load

ST_52: a_1_load_1 (356)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_1 = load float* %a_1_addr_8, align 4

ST_52: tmp_22_5 (364)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_1_load_2

ST_52: tmp_22_6 (373)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_1_load_4

ST_52: a_1_load_6 (381)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_1_load_6 = load float* %a_1_addr_13, align 4

ST_52: tmp_22_7 (382)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_1_load_6

ST_52: tmp_22_8 (391)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_8 = fmul float %w_1, %a_2_load

ST_52: a_2_load_1 (392)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_1 = load float* %a_2_addr_8, align 4

ST_52: tmp_22_9 (400)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_2_load_2

ST_52: tmp_22_s (409)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_2_load_4

ST_52: a_2_load_6 (417)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_2_load_6 = load float* %a_2_addr_13, align 4

ST_52: tmp_22_10 (418)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_2_load_6

ST_52: tmp_22_11 (427)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_11 = fmul float %w_1, %a_3_load

ST_52: a_3_load_1 (428)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_1 = load float* %a_3_addr_8, align 4

ST_52: tmp_22_12 (436)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_3_load_2

ST_52: tmp_22_13 (445)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_3_load_4

ST_52: a_3_load_6 (453)  [1/2] 2.71ns  loc: minver.c:99
:0  %a_3_load_6 = load float* %a_3_addr_13, align 4

ST_52: tmp_22_14 (454)  [4/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_3_load_6

ST_52: tmp_18 (462)  [12/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 53>: 6.30ns
ST_53: tmp_82 (280)  [1/1] 0.00ns  loc: minver.c:93
:6  %tmp_82 = or i7 %tmp_78, 1

ST_53: tmp_83 (281)  [1/1] 0.00ns  loc: minver.c:93
:7  %tmp_83 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_82)

ST_53: a_0_addr_10 (282)  [1/1] 0.00ns  loc: minver.c:93
:8  %a_0_addr_10 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_83

ST_53: a_1_addr_10 (291)  [1/1] 0.00ns  loc: minver.c:93
:17  %a_1_addr_10 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_83

ST_53: a_2_addr_10 (296)  [1/1] 0.00ns  loc: minver.c:93
:22  %a_2_addr_10 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_83

ST_53: a_3_addr_10 (301)  [1/1] 0.00ns  loc: minver.c:93
:27  %a_3_addr_10 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_83

ST_53: a_0_load_1 (320)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_1 = load float* %a_0_addr_8, align 4

ST_53: tmp_22_1 (328)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_1 = fmul float %w_1, %a_0_load_2

ST_53: a_0_load_3 (329)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_3 = load float* %a_0_addr_10, align 4

ST_53: tmp_22_2 (337)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_53: tmp_22_3 (346)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_53: a_1_load_1 (356)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_1 = load float* %a_1_addr_8, align 4

ST_53: tmp_22_5 (364)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_5 = fmul float %w_1, %a_1_load_2

ST_53: a_1_load_3 (365)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_3 = load float* %a_1_addr_10, align 4

ST_53: tmp_22_6 (373)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_1_load_4

ST_53: tmp_22_7 (382)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_1_load_6

ST_53: a_2_load_1 (392)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_1 = load float* %a_2_addr_8, align 4

ST_53: tmp_22_9 (400)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_9 = fmul float %w_1, %a_2_load_2

ST_53: a_2_load_3 (401)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_3 = load float* %a_2_addr_10, align 4

ST_53: tmp_22_s (409)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_2_load_4

ST_53: tmp_22_10 (418)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_2_load_6

ST_53: a_3_load_1 (428)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_1 = load float* %a_3_addr_8, align 4

ST_53: tmp_22_12 (436)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_12 = fmul float %w_1, %a_3_load_2

ST_53: a_3_load_3 (437)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_3 = load float* %a_3_addr_10, align 4

ST_53: tmp_22_13 (445)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_3_load_4

ST_53: tmp_22_14 (454)  [3/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_3_load_6

ST_53: tmp_18 (462)  [11/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 54>: 8.26ns
ST_54: tmp_84 (283)  [1/1] 0.00ns  loc: minver.c:93
:9  %tmp_84 = or i7 %tmp_78, 2

ST_54: tmp_85 (284)  [1/1] 0.00ns  loc: minver.c:93
:10  %tmp_85 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_84)

ST_54: a_0_addr_12 (285)  [1/1] 0.00ns  loc: minver.c:93
:11  %a_0_addr_12 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_85

ST_54: a_1_addr_12 (292)  [1/1] 0.00ns  loc: minver.c:93
:18  %a_1_addr_12 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_85

ST_54: a_2_addr_12 (297)  [1/1] 0.00ns  loc: minver.c:93
:23  %a_2_addr_12 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_85

ST_54: a_3_addr_12 (302)  [1/1] 0.00ns  loc: minver.c:93
:28  %a_3_addr_12 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_85

ST_54: tmp_33 (321)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_54: a_0_load_3 (329)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_3 = load float* %a_0_addr_10, align 4

ST_54: tmp_22_2 (337)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_2 = fmul float %w_1, %a_0_load_4

ST_54: a_0_load_5 (338)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_5 = load float* %a_0_addr_12, align 4

ST_54: tmp_22_3 (346)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_54: tmp_23_4 (357)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_1_load_1, %tmp_22_4

ST_54: a_1_load_3 (365)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_3 = load float* %a_1_addr_10, align 4

ST_54: tmp_22_6 (373)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_6 = fmul float %w_1, %a_1_load_4

ST_54: a_1_load_5 (374)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_5 = load float* %a_1_addr_12, align 4

ST_54: tmp_22_7 (382)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_1_load_6

ST_54: tmp_23_8 (393)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_2_load_1, %tmp_22_8

ST_54: a_2_load_3 (401)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_3 = load float* %a_2_addr_10, align 4

ST_54: tmp_22_s (409)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_s = fmul float %w_1, %a_2_load_4

ST_54: a_2_load_5 (410)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_5 = load float* %a_2_addr_12, align 4

ST_54: tmp_22_10 (418)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_2_load_6

ST_54: tmp_23_11 (429)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_3_load_1, %tmp_22_11

ST_54: a_3_load_3 (437)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_3 = load float* %a_3_addr_10, align 4

ST_54: tmp_22_13 (445)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_13 = fmul float %w_1, %a_3_load_4

ST_54: a_3_load_5 (446)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_5 = load float* %a_3_addr_12, align 4

ST_54: tmp_22_14 (454)  [2/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_3_load_6

ST_54: tmp_18 (462)  [10/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 55>: 8.26ns
ST_55: tmp_86 (286)  [1/1] 0.00ns  loc: minver.c:93
:12  %tmp_86 = or i7 %tmp_78, 3

ST_55: tmp_87 (287)  [1/1] 0.00ns  loc: minver.c:93
:13  %tmp_87 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_86)

ST_55: a_0_addr_14 (288)  [1/1] 0.00ns  loc: minver.c:93
:14  %a_0_addr_14 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_87

ST_55: a_1_addr_14 (293)  [1/1] 0.00ns  loc: minver.c:93
:19  %a_1_addr_14 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_87

ST_55: a_2_addr_14 (298)  [1/1] 0.00ns  loc: minver.c:93
:24  %a_2_addr_14 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_87

ST_55: a_3_addr_14 (303)  [1/1] 0.00ns  loc: minver.c:93
:29  %a_3_addr_14 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_87

ST_55: tmp_33 (321)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_55: tmp_23_1 (330)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_55: a_0_load_5 (338)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_5 = load float* %a_0_addr_12, align 4

ST_55: tmp_22_3 (346)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_3 = fmul float %w_1, %a_0_load_6

ST_55: a_0_load_7 (347)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_7 = load float* %a_0_addr_14, align 4

ST_55: tmp_23_4 (357)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_1_load_1, %tmp_22_4

ST_55: tmp_23_5 (366)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_1_load_3, %tmp_22_5

ST_55: a_1_load_5 (374)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_5 = load float* %a_1_addr_12, align 4

ST_55: tmp_22_7 (382)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_7 = fmul float %w_1, %a_1_load_6

ST_55: a_1_load_7 (383)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_7 = load float* %a_1_addr_14, align 4

ST_55: tmp_23_8 (393)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_2_load_1, %tmp_22_8

ST_55: tmp_23_9 (402)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_2_load_3, %tmp_22_9

ST_55: a_2_load_5 (410)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_5 = load float* %a_2_addr_12, align 4

ST_55: tmp_22_10 (418)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_10 = fmul float %w_1, %a_2_load_6

ST_55: a_2_load_7 (419)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_7 = load float* %a_2_addr_14, align 4

ST_55: tmp_23_11 (429)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_3_load_1, %tmp_22_11

ST_55: tmp_23_12 (438)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_3_load_3, %tmp_22_12

ST_55: a_3_load_5 (446)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_5 = load float* %a_3_addr_12, align 4

ST_55: tmp_22_14 (454)  [1/4] 5.78ns  loc: minver.c:99
:1  %tmp_22_14 = fmul float %w_1, %a_3_load_6

ST_55: a_3_load_7 (455)  [2/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_7 = load float* %a_3_addr_14, align 4

ST_55: tmp_18 (462)  [9/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 56>: 8.26ns
ST_56: tmp_33 (321)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_56: tmp_23_1 (330)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_56: tmp_23_2 (339)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_56: a_0_load_7 (347)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_0_load_7 = load float* %a_0_addr_14, align 4

ST_56: tmp_23_4 (357)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_1_load_1, %tmp_22_4

ST_56: tmp_23_5 (366)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_1_load_3, %tmp_22_5

ST_56: tmp_23_6 (375)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_1_load_5, %tmp_22_6

ST_56: a_1_load_7 (383)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_1_load_7 = load float* %a_1_addr_14, align 4

ST_56: tmp_23_8 (393)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_2_load_1, %tmp_22_8

ST_56: tmp_23_9 (402)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_2_load_3, %tmp_22_9

ST_56: tmp_23_s (411)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_2_load_5, %tmp_22_s

ST_56: a_2_load_7 (419)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_2_load_7 = load float* %a_2_addr_14, align 4

ST_56: tmp_23_11 (429)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_3_load_1, %tmp_22_11

ST_56: tmp_23_12 (438)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_3_load_3, %tmp_22_12

ST_56: tmp_23_13 (447)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_3_load_5, %tmp_22_13

ST_56: a_3_load_7 (455)  [1/2] 2.71ns  loc: minver.c:99
:2  %a_3_load_7 = load float* %a_3_addr_14, align 4

ST_56: tmp_18 (462)  [8/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 57>: 8.26ns
ST_57: tmp_33 (321)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_57: tmp_23_1 (330)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_57: tmp_23_2 (339)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_57: tmp_23_3 (348)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_57: tmp_23_4 (357)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_1_load_1, %tmp_22_4

ST_57: tmp_23_5 (366)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_1_load_3, %tmp_22_5

ST_57: tmp_23_6 (375)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_1_load_5, %tmp_22_6

ST_57: tmp_23_7 (384)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_1_load_7, %tmp_22_7

ST_57: tmp_23_8 (393)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_2_load_1, %tmp_22_8

ST_57: tmp_23_9 (402)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_2_load_3, %tmp_22_9

ST_57: tmp_23_s (411)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_2_load_5, %tmp_22_s

ST_57: tmp_23_10 (420)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_2_load_7, %tmp_22_10

ST_57: tmp_23_11 (429)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_3_load_1, %tmp_22_11

ST_57: tmp_23_12 (438)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_3_load_3, %tmp_22_12

ST_57: tmp_23_13 (447)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_3_load_5, %tmp_22_13

ST_57: tmp_23_14 (456)  [5/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_3_load_7, %tmp_22_14

ST_57: tmp_18 (462)  [7/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 58>: 8.26ns
ST_58: tmp_33 (321)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_33 = fsub float %a_0_load_1, %tmp_32

ST_58: tmp_23_1 (330)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_58: tmp_23_2 (339)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_58: tmp_23_3 (348)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_58: tmp_23_4 (357)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_4 = fsub float %a_1_load_1, %tmp_22_4

ST_58: tmp_23_5 (366)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_1_load_3, %tmp_22_5

ST_58: tmp_23_6 (375)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_1_load_5, %tmp_22_6

ST_58: tmp_23_7 (384)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_1_load_7, %tmp_22_7

ST_58: tmp_23_8 (393)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_8 = fsub float %a_2_load_1, %tmp_22_8

ST_58: tmp_23_9 (402)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_2_load_3, %tmp_22_9

ST_58: tmp_23_s (411)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_2_load_5, %tmp_22_s

ST_58: tmp_23_10 (420)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_2_load_7, %tmp_22_10

ST_58: tmp_23_11 (429)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_11 = fsub float %a_3_load_1, %tmp_22_11

ST_58: tmp_23_12 (438)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_3_load_3, %tmp_22_12

ST_58: tmp_23_13 (447)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_3_load_5, %tmp_22_13

ST_58: tmp_23_14 (456)  [4/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_3_load_7, %tmp_22_14

ST_58: tmp_18 (462)  [6/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 59>: 8.26ns
ST_59: StgValue_669 (322)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_33, float* %a_0_addr_8, align 4

ST_59: StgValue_670 (323)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.1

ST_59: tmp_23_1 (330)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_1 = fsub float %a_0_load_3, %tmp_22_1

ST_59: tmp_23_2 (339)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_59: tmp_23_3 (348)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_59: StgValue_674 (358)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_4, float* %a_1_addr_8, align 4

ST_59: StgValue_675 (359)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.5

ST_59: tmp_23_5 (366)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_5 = fsub float %a_1_load_3, %tmp_22_5

ST_59: tmp_23_6 (375)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_1_load_5, %tmp_22_6

ST_59: tmp_23_7 (384)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_1_load_7, %tmp_22_7

ST_59: StgValue_679 (394)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_8, float* %a_2_addr_8, align 4

ST_59: StgValue_680 (395)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.9

ST_59: tmp_23_9 (402)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_9 = fsub float %a_2_load_3, %tmp_22_9

ST_59: tmp_23_s (411)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_2_load_5, %tmp_22_s

ST_59: tmp_23_10 (420)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_2_load_7, %tmp_22_10

ST_59: StgValue_684 (430)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_11, float* %a_3_addr_8, align 4

ST_59: StgValue_685 (431)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.13

ST_59: tmp_23_12 (438)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_12 = fsub float %a_3_load_3, %tmp_22_12

ST_59: tmp_23_13 (447)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_3_load_5, %tmp_22_13

ST_59: tmp_23_14 (456)  [3/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_3_load_7, %tmp_22_14

ST_59: tmp_18 (462)  [5/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 60>: 8.26ns
ST_60: StgValue_690 (331)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_1, float* %a_0_addr_10, align 4

ST_60: StgValue_691 (332)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.2

ST_60: tmp_23_2 (339)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_2 = fsub float %a_0_load_5, %tmp_22_2

ST_60: tmp_23_3 (348)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_60: StgValue_694 (367)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_5, float* %a_1_addr_10, align 4

ST_60: StgValue_695 (368)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.6

ST_60: tmp_23_6 (375)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_6 = fsub float %a_1_load_5, %tmp_22_6

ST_60: tmp_23_7 (384)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_1_load_7, %tmp_22_7

ST_60: StgValue_698 (403)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_9, float* %a_2_addr_10, align 4

ST_60: StgValue_699 (404)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.10

ST_60: tmp_23_s (411)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_s = fsub float %a_2_load_5, %tmp_22_s

ST_60: tmp_23_10 (420)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_2_load_7, %tmp_22_10

ST_60: StgValue_702 (439)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_12, float* %a_3_addr_10, align 4

ST_60: StgValue_703 (440)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.14

ST_60: tmp_23_13 (447)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_13 = fsub float %a_3_load_5, %tmp_22_13

ST_60: tmp_23_14 (456)  [2/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_3_load_7, %tmp_22_14

ST_60: tmp_18 (462)  [4/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 61>: 8.26ns
ST_61: StgValue_707 (340)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_2, float* %a_0_addr_12, align 4

ST_61: StgValue_708 (341)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.3

ST_61: tmp_23_3 (348)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_3 = fsub float %a_0_load_7, %tmp_22_3

ST_61: StgValue_710 (376)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_6, float* %a_1_addr_12, align 4

ST_61: StgValue_711 (377)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.7

ST_61: tmp_23_7 (384)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_7 = fsub float %a_1_load_7, %tmp_22_7

ST_61: StgValue_713 (412)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_s, float* %a_2_addr_12, align 4

ST_61: StgValue_714 (413)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.11

ST_61: tmp_23_10 (420)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_10 = fsub float %a_2_load_7, %tmp_22_10

ST_61: StgValue_716 (448)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_13, float* %a_3_addr_12, align 4

ST_61: StgValue_717 (449)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.15

ST_61: tmp_23_14 (456)  [1/5] 8.26ns  loc: minver.c:99
:3  %tmp_23_14 = fsub float %a_3_load_7, %tmp_22_14

ST_61: tmp_18 (462)  [3/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot

ST_61: StgValue_720 (463)  [1/1] 2.33ns  loc: minver.c:101
.preheader9.16:3  switch i3 %arrayNo2, label %branch135 [
    i3 0, label %branch132
    i3 1, label %branch133
    i3 2, label %branch134
  ]


 <State 62>: 6.30ns
ST_62: StgValue_721 (349)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_3, float* %a_0_addr_14, align 4

ST_62: StgValue_722 (350)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.4

ST_62: StgValue_723 (385)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_7, float* %a_1_addr_14, align 4

ST_62: StgValue_724 (386)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.8

ST_62: StgValue_725 (421)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_10, float* %a_2_addr_14, align 4

ST_62: StgValue_726 (422)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.12

ST_62: StgValue_727 (457)  [1/1] 2.71ns  loc: minver.c:99
:4  store float %tmp_23_14, float* %a_3_addr_14, align 4

ST_62: StgValue_728 (458)  [1/1] 0.00ns  loc: minver.c:99
:5  br label %.preheader9.16

ST_62: tmp_18 (462)  [2/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot


 <State 63>: 9.01ns
ST_63: tmp_81 (277)  [1/1] 0.00ns  loc: minver.c:96
:3  %tmp_81 = zext i7 %tmp_80 to i64

ST_63: a_0_addr_6 (278)  [1/1] 0.00ns  loc: minver.c:96
:4  %a_0_addr_6 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_81

ST_63: a_1_addr_6 (289)  [1/1] 0.00ns  loc: minver.c:96
:15  %a_1_addr_6 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_81

ST_63: a_2_addr_6 (294)  [1/1] 0.00ns  loc: minver.c:96
:20  %a_2_addr_6 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_81

ST_63: a_3_addr_6 (299)  [1/1] 0.00ns  loc: minver.c:96
:25  %a_3_addr_6 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_81

ST_63: tmp_18 (462)  [1/16] 6.30ns  loc: minver.c:101
.preheader9.16:2  %tmp_18 = fdiv float %tmp_17, %pivot

ST_63: StgValue_736 (465)  [1/1] 2.71ns  loc: minver.c:101
branch134:0  store float %tmp_18, float* %a_2_addr_6, align 4

ST_63: StgValue_737 (466)  [1/1] 0.00ns  loc: minver.c:101
branch134:1  br label %.preheader9.16188

ST_63: StgValue_738 (468)  [1/1] 2.71ns  loc: minver.c:101
branch133:0  store float %tmp_18, float* %a_1_addr_6, align 4

ST_63: StgValue_739 (469)  [1/1] 0.00ns  loc: minver.c:101
branch133:1  br label %.preheader9.16188

ST_63: StgValue_740 (471)  [1/1] 2.71ns  loc: minver.c:101
branch132:0  store float %tmp_18, float* %a_0_addr_6, align 4

ST_63: StgValue_741 (472)  [1/1] 0.00ns  loc: minver.c:101
branch132:1  br label %.preheader9.16188

ST_63: StgValue_742 (474)  [1/1] 2.71ns  loc: minver.c:101
branch135:0  store float %tmp_18, float* %a_3_addr_6, align 4

ST_63: StgValue_743 (475)  [1/1] 0.00ns  loc: minver.c:101
branch135:1  br label %.preheader9.16188


 <State 64>: 6.30ns
ST_64: tmp_13 (484)  [16/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 65>: 6.30ns
ST_65: tmp_13 (484)  [15/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 66>: 6.30ns
ST_66: tmp_13 (484)  [14/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 67>: 6.30ns
ST_67: tmp_13 (484)  [13/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 68>: 6.30ns
ST_68: tmp_13 (484)  [12/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 69>: 6.30ns
ST_69: tmp_13 (484)  [11/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 70>: 6.30ns
ST_70: tmp_13 (484)  [10/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 71>: 6.30ns
ST_71: tmp_13 (484)  [9/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 72>: 6.30ns
ST_72: tmp_13 (484)  [8/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 73>: 6.30ns
ST_73: tmp_13 (484)  [7/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 74>: 6.30ns
ST_74: tmp_13 (484)  [6/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 75>: 6.30ns
ST_75: tmp_13 (484)  [5/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 76>: 6.30ns
ST_76: tmp_13 (484)  [4/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 77>: 6.30ns
ST_77: tmp_13 (484)  [3/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 78>: 6.30ns
ST_78: tmp_13 (484)  [2/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot


 <State 79>: 6.30ns
ST_79: tmp_13 (484)  [1/16] 6.30ns  loc: minver.c:105
:0  %tmp_13 = fdiv float 1.000000e+00, %pivot

ST_79: StgValue_760 (485)  [1/1] 2.33ns  loc: minver.c:105
:1  switch i3 %arrayNo2, label %branch131 [
    i3 0, label %branch128
    i3 1, label %branch129
    i3 2, label %branch130
  ]


 <State 80>: 2.71ns
ST_80: StgValue_761 (487)  [1/1] 2.71ns  loc: minver.c:105
branch130:0  store float %tmp_13, float* %a_2_addr_5, align 4

ST_80: StgValue_762 (488)  [1/1] 0.00ns  loc: minver.c:105
branch130:1  br label %30

ST_80: StgValue_763 (490)  [1/1] 2.71ns  loc: minver.c:105
branch129:0  store float %tmp_13, float* %a_1_addr_5, align 4

ST_80: StgValue_764 (491)  [1/1] 0.00ns  loc: minver.c:105
branch129:1  br label %30

ST_80: StgValue_765 (493)  [1/1] 2.71ns  loc: minver.c:105
branch128:0  store float %tmp_13, float* %a_0_addr_5, align 4

ST_80: StgValue_766 (494)  [1/1] 0.00ns  loc: minver.c:105
branch128:1  br label %30

ST_80: StgValue_767 (496)  [1/1] 2.71ns  loc: minver.c:105
branch131:0  store float %tmp_13, float* %a_3_addr_5, align 4

ST_80: StgValue_768 (497)  [1/1] 0.00ns  loc: minver.c:105
branch131:1  br label %30

ST_80: StgValue_769 (499)  [1/1] 0.00ns  loc: minver.c:56
:0  br label %.preheader13


 <State 81>: 2.37ns
ST_81: i_4 (505)  [1/1] 0.00ns
.preheader8:0  %i_4 = phi i5 [ %i_7, %.preheader8.loopexit ], [ 0, %.preheader8.preheader ]

ST_81: exitcond1 (506)  [1/1] 2.37ns  loc: minver.c:109
.preheader8:1  %exitcond1 = icmp eq i5 %i_4, -16

ST_81: i_7 (507)  [1/1] 1.67ns  loc: minver.c:129
.preheader8:2  %i_7 = add i5 %i_4, 1

ST_81: StgValue_773 (508)  [1/1] 0.00ns  loc: minver.c:109
.preheader8:3  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_81: empty_25 (510)  [1/1] 0.00ns
.preheader.preheader:0  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_81: tmp_s (511)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:1  %tmp_s = zext i5 %i_4 to i64

ST_81: work_addr_1 (512)  [1/1] 0.00ns  loc: minver.c:114
.preheader.preheader:2  %work_addr_1 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_s

ST_81: arrayNo3 (513)  [1/1] 0.00ns  loc: minver.c:129
.preheader.preheader:3  %arrayNo3 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_4, i32 2, i32 4)

ST_81: tmp_38 (514)  [1/1] 0.00ns  loc: minver.c:129
.preheader.preheader:4  %tmp_38 = trunc i5 %i_4 to i2

ST_81: StgValue_779 (515)  [1/1] 0.00ns  loc: minver.c:111
.preheader.preheader:5  br label %.preheader

ST_81: StgValue_780 (1015)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 82>: 2.71ns
ST_82: work_load (517)  [2/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i5* %work_addr_1, align 1


 <State 83>: 5.42ns
ST_83: work_load (517)  [1/2] 2.71ns  loc: minver.c:114
.preheader:0  %work_load = load i5* %work_addr_1, align 1

ST_83: tmp_8 (518)  [1/1] 2.37ns  loc: minver.c:116
.preheader:1  %tmp_8 = icmp eq i5 %work_load, %i_4

ST_83: StgValue_784 (519)  [1/1] 0.00ns  loc: minver.c:116
.preheader:2  br i1 %tmp_8, label %.preheader8.loopexit, label %31

ST_83: tmp_21 (521)  [1/1] 0.00ns  loc: minver.c:111
:0  %tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str10) nounwind

ST_83: tmp_10 (523)  [1/1] 0.00ns  loc: minver.c:118
:2  %tmp_10 = zext i5 %work_load to i64

ST_83: work_addr_2 (530)  [1/1] 0.00ns  loc: minver.c:118
:9  %work_addr_2 = getelementptr [500 x i5]* %work, i64 0, i64 %tmp_10

ST_83: work_load_1 (531)  [2/2] 2.71ns  loc: minver.c:118
:10  %work_load_1 = load i5* %work_addr_2, align 1

ST_83: tmp_60 (534)  [1/1] 0.00ns  loc: minver.c:114
:13  %tmp_60 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %work_load, i32 2, i32 4)

ST_83: StgValue_790 (561)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch63 [
    i3 0, label %branch60
    i3 1, label %branch61
    i3 2, label %branch62
  ]

ST_83: StgValue_791 (590)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch59 [
    i3 0, label %branch56
    i3 1, label %branch57
    i3 2, label %branch58
  ]

ST_83: StgValue_792 (619)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch55 [
    i3 0, label %branch52
    i3 1, label %branch53
    i3 2, label %branch54
  ]

ST_83: StgValue_793 (648)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch51 [
    i3 0, label %branch48
    i3 1, label %branch49
    i3 2, label %branch50
  ]

ST_83: StgValue_794 (677)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch47 [
    i3 0, label %branch44
    i3 1, label %branch45
    i3 2, label %branch46
  ]

ST_83: StgValue_795 (706)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch43 [
    i3 0, label %branch40
    i3 1, label %branch41
    i3 2, label %branch42
  ]

ST_83: StgValue_796 (735)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch39 [
    i3 0, label %branch36
    i3 1, label %branch37
    i3 2, label %branch38
  ]

ST_83: StgValue_797 (764)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch35 [
    i3 0, label %branch32
    i3 1, label %branch33
    i3 2, label %branch34
  ]

ST_83: StgValue_798 (793)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch31 [
    i3 0, label %branch28
    i3 1, label %branch29
    i3 2, label %branch30
  ]

ST_83: StgValue_799 (822)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch27 [
    i3 0, label %branch24
    i3 1, label %branch25
    i3 2, label %branch26
  ]

ST_83: StgValue_800 (851)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch23 [
    i3 0, label %branch20
    i3 1, label %branch21
    i3 2, label %branch22
  ]

ST_83: StgValue_801 (880)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch19 [
    i3 0, label %branch16
    i3 1, label %branch17
    i3 2, label %branch18
  ]

ST_83: StgValue_802 (909)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch15 [
    i3 0, label %branch12
    i3 1, label %branch13
    i3 2, label %branch14
  ]

ST_83: StgValue_803 (938)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch11 [
    i3 0, label %branch8
    i3 1, label %branch9
    i3 2, label %branch10
  ]

ST_83: StgValue_804 (967)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch7 [
    i3 0, label %branch4
    i3 1, label %branch5
    i3 2, label %branch6
  ]

ST_83: StgValue_805 (996)  [1/1] 2.33ns  loc: minver.c:125
:0  switch i3 %tmp_60, label %branch3 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
  ]

ST_83: empty_26 (1010)  [1/1] 0.00ns  loc: minver.c:127
:0  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str10, i32 %tmp_21) nounwind

ST_83: StgValue_807 (1011)  [1/1] 0.00ns  loc: minver.c:127
:1  br label %.preheader


 <State 84>: 5.20ns
ST_84: work_load_1 (531)  [1/2] 2.71ns  loc: minver.c:118
:10  %work_load_1 = load i5* %work_addr_2, align 1

ST_84: StgValue_809 (532)  [1/1] 2.71ns  loc: minver.c:119
:11  store i5 %work_load, i5* %work_addr_2, align 1

ST_84: tmp_10_cast1 (542)  [1/1] 0.00ns  loc: minver.c:114
:21  %tmp_10_cast1 = zext i5 %work_load to i32

ST_84: arrayNo3_cast_cast1_s (543)  [1/1] 0.00ns  loc: minver.c:129
:22  %arrayNo3_cast_cast1_s = zext i3 %arrayNo3 to i5

ST_84: tmp_62 (544)  [2/2] 5.20ns  loc: minver.c:129
:23  %tmp_62 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 85>: 5.45ns
ST_85: StgValue_813 (533)  [1/1] 2.71ns  loc: minver.c:120
:12  store i5 %work_load_1, i5* %work_addr_1, align 1

ST_85: tmp_62 (544)  [1/2] 5.45ns  loc: minver.c:129
:23  %tmp_62 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 86>: 5.20ns
ST_86: tmp_70 (535)  [1/1] 0.00ns  loc: minver.c:114
:14  %tmp_70 = trunc i5 %work_load to i2

ST_86: tmp_59_cast (545)  [1/1] 0.00ns  loc: minver.c:114
:24  %tmp_59_cast = zext i3 %tmp_60 to i5

ST_86: tmp_63 (546)  [2/2] 5.20ns  loc: minver.c:114
:25  %tmp_63 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %tmp_59_cast, i32 %tmp_10_cast1, i2 %tmp_70)


 <State 87>: 5.45ns
ST_87: tmp_63 (546)  [1/2] 5.45ns  loc: minver.c:114
:25  %tmp_63 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %tmp_59_cast, i32 %tmp_10_cast1, i2 %tmp_70)


 <State 88>: 2.71ns
ST_88: tmp_59 (524)  [1/1] 0.00ns  loc: minver.c:114
:3  %tmp_59 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %work_load, i2 %tmp_38)

ST_88: tmp_57 (525)  [1/1] 0.00ns  loc: minver.c:123
:4  %tmp_57 = zext i7 %tmp_59 to i64

ST_88: a_0_addr (526)  [1/1] 0.00ns  loc: minver.c:123
:5  %a_0_addr = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_57

ST_88: a_1_addr (527)  [1/1] 0.00ns  loc: minver.c:123
:6  %a_1_addr = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_57

ST_88: a_2_addr (528)  [1/1] 0.00ns  loc: minver.c:123
:7  %a_2_addr = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_57

ST_88: a_3_addr (529)  [1/1] 0.00ns  loc: minver.c:123
:8  %a_3_addr = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_57

ST_88: StgValue_825 (549)  [1/1] 2.71ns  loc: minver.c:124
branch126:0  store float %tmp_63, float* %a_2_addr, align 4

ST_88: StgValue_826 (550)  [1/1] 0.00ns  loc: minver.c:124
branch126:1  br label %32

ST_88: StgValue_827 (552)  [1/1] 2.71ns  loc: minver.c:124
branch125:0  store float %tmp_63, float* %a_1_addr, align 4

ST_88: StgValue_828 (553)  [1/1] 0.00ns  loc: minver.c:124
branch125:1  br label %32

ST_88: StgValue_829 (555)  [1/1] 2.71ns  loc: minver.c:124
branch124:0  store float %tmp_63, float* %a_0_addr, align 4

ST_88: StgValue_830 (556)  [1/1] 0.00ns  loc: minver.c:124
branch124:1  br label %32

ST_88: StgValue_831 (558)  [1/1] 2.71ns  loc: minver.c:124
branch127:0  store float %tmp_63, float* %a_3_addr, align 4

ST_88: StgValue_832 (559)  [1/1] 0.00ns  loc: minver.c:124
branch127:1  br label %32


 <State 89>: 2.71ns
ST_89: StgValue_833 (522)  [1/1] 0.00ns  loc: minver.c:112
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_89: tmp_102 (536)  [1/1] 0.00ns  loc: minver.c:114
:15  %tmp_102 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %work_load, i2 %tmp_70)

ST_89: tmp_61 (537)  [1/1] 0.00ns  loc: minver.c:124
:16  %tmp_61 = zext i7 %tmp_102 to i64

ST_89: a_0_addr_1 (538)  [1/1] 0.00ns  loc: minver.c:124
:17  %a_0_addr_1 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_61

ST_89: a_1_addr_1 (539)  [1/1] 0.00ns  loc: minver.c:124
:18  %a_1_addr_1 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_61

ST_89: a_2_addr_1 (540)  [1/1] 0.00ns  loc: minver.c:124
:19  %a_2_addr_1 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_61

ST_89: a_3_addr_1 (541)  [1/1] 0.00ns  loc: minver.c:124
:20  %a_3_addr_1 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_61

ST_89: StgValue_840 (547)  [1/1] 2.33ns  loc: minver.c:124
:26  switch i3 %arrayNo3, label %branch127 [
    i3 0, label %branch124
    i3 1, label %branch125
    i3 2, label %branch126
  ]

ST_89: StgValue_841 (563)  [1/1] 2.71ns  loc: minver.c:125
branch62:0  store float %tmp_62, float* %a_2_addr_1, align 4

ST_89: StgValue_842 (564)  [1/1] 0.00ns  loc: minver.c:125
branch62:1  br label %33

ST_89: StgValue_843 (566)  [1/1] 2.71ns  loc: minver.c:125
branch61:0  store float %tmp_62, float* %a_1_addr_1, align 4

ST_89: StgValue_844 (567)  [1/1] 0.00ns  loc: minver.c:125
branch61:1  br label %33

ST_89: StgValue_845 (569)  [1/1] 2.71ns  loc: minver.c:125
branch60:0  store float %tmp_62, float* %a_0_addr_1, align 4

ST_89: StgValue_846 (570)  [1/1] 0.00ns  loc: minver.c:125
branch60:1  br label %33

ST_89: StgValue_847 (572)  [1/1] 2.71ns  loc: minver.c:125
branch63:0  store float %tmp_62, float* %a_3_addr_1, align 4

ST_89: StgValue_848 (573)  [1/1] 0.00ns  loc: minver.c:125
branch63:1  br label %33


 <State 90>: 5.20ns
ST_90: tmp_74 (575)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_74 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 91>: 5.45ns
ST_91: tmp_74 (575)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_74 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_91: StgValue_851 (576)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch123 [
    i3 0, label %branch120
    i3 1, label %branch121
    i3 2, label %branch122
  ]


 <State 92>: 2.71ns
ST_92: StgValue_852 (578)  [1/1] 2.71ns  loc: minver.c:124
branch122:0  store float %tmp_62, float* %a_2_addr, align 4

ST_92: StgValue_853 (579)  [1/1] 0.00ns  loc: minver.c:124
branch122:1  br label %34

ST_92: StgValue_854 (581)  [1/1] 2.71ns  loc: minver.c:124
branch121:0  store float %tmp_62, float* %a_1_addr, align 4

ST_92: StgValue_855 (582)  [1/1] 0.00ns  loc: minver.c:124
branch121:1  br label %34

ST_92: StgValue_856 (584)  [1/1] 2.71ns  loc: minver.c:124
branch120:0  store float %tmp_62, float* %a_0_addr, align 4

ST_92: StgValue_857 (585)  [1/1] 0.00ns  loc: minver.c:124
branch120:1  br label %34

ST_92: StgValue_858 (587)  [1/1] 2.71ns  loc: minver.c:124
branch123:0  store float %tmp_62, float* %a_3_addr, align 4

ST_92: StgValue_859 (588)  [1/1] 0.00ns  loc: minver.c:124
branch123:1  br label %34


 <State 93>: 2.71ns
ST_93: StgValue_860 (592)  [1/1] 2.71ns  loc: minver.c:125
branch58:0  store float %tmp_74, float* %a_2_addr_1, align 4

ST_93: StgValue_861 (593)  [1/1] 0.00ns  loc: minver.c:125
branch58:1  br label %35

ST_93: StgValue_862 (595)  [1/1] 2.71ns  loc: minver.c:125
branch57:0  store float %tmp_74, float* %a_1_addr_1, align 4

ST_93: StgValue_863 (596)  [1/1] 0.00ns  loc: minver.c:125
branch57:1  br label %35

ST_93: StgValue_864 (598)  [1/1] 2.71ns  loc: minver.c:125
branch56:0  store float %tmp_74, float* %a_0_addr_1, align 4

ST_93: StgValue_865 (599)  [1/1] 0.00ns  loc: minver.c:125
branch56:1  br label %35

ST_93: StgValue_866 (601)  [1/1] 2.71ns  loc: minver.c:125
branch59:0  store float %tmp_74, float* %a_3_addr_1, align 4

ST_93: StgValue_867 (602)  [1/1] 0.00ns  loc: minver.c:125
branch59:1  br label %35


 <State 94>: 5.20ns
ST_94: tmp_88 (604)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_88 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 95>: 5.45ns
ST_95: tmp_88 (604)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_88 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_95: StgValue_870 (605)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch119 [
    i3 0, label %branch116
    i3 1, label %branch117
    i3 2, label %branch118
  ]


 <State 96>: 2.71ns
ST_96: StgValue_871 (607)  [1/1] 2.71ns  loc: minver.c:124
branch118:0  store float %tmp_74, float* %a_2_addr, align 4

ST_96: StgValue_872 (608)  [1/1] 0.00ns  loc: minver.c:124
branch118:1  br label %36

ST_96: StgValue_873 (610)  [1/1] 2.71ns  loc: minver.c:124
branch117:0  store float %tmp_74, float* %a_1_addr, align 4

ST_96: StgValue_874 (611)  [1/1] 0.00ns  loc: minver.c:124
branch117:1  br label %36

ST_96: StgValue_875 (613)  [1/1] 2.71ns  loc: minver.c:124
branch116:0  store float %tmp_74, float* %a_0_addr, align 4

ST_96: StgValue_876 (614)  [1/1] 0.00ns  loc: minver.c:124
branch116:1  br label %36

ST_96: StgValue_877 (616)  [1/1] 2.71ns  loc: minver.c:124
branch119:0  store float %tmp_74, float* %a_3_addr, align 4

ST_96: StgValue_878 (617)  [1/1] 0.00ns  loc: minver.c:124
branch119:1  br label %36


 <State 97>: 2.71ns
ST_97: StgValue_879 (621)  [1/1] 2.71ns  loc: minver.c:125
branch54:0  store float %tmp_88, float* %a_2_addr_1, align 4

ST_97: StgValue_880 (622)  [1/1] 0.00ns  loc: minver.c:125
branch54:1  br label %37

ST_97: StgValue_881 (624)  [1/1] 2.71ns  loc: minver.c:125
branch53:0  store float %tmp_88, float* %a_1_addr_1, align 4

ST_97: StgValue_882 (625)  [1/1] 0.00ns  loc: minver.c:125
branch53:1  br label %37

ST_97: StgValue_883 (627)  [1/1] 2.71ns  loc: minver.c:125
branch52:0  store float %tmp_88, float* %a_0_addr_1, align 4

ST_97: StgValue_884 (628)  [1/1] 0.00ns  loc: minver.c:125
branch52:1  br label %37

ST_97: StgValue_885 (630)  [1/1] 2.71ns  loc: minver.c:125
branch55:0  store float %tmp_88, float* %a_3_addr_1, align 4

ST_97: StgValue_886 (631)  [1/1] 0.00ns  loc: minver.c:125
branch55:1  br label %37


 <State 98>: 5.20ns
ST_98: tmp_89 (633)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_89 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 99>: 5.45ns
ST_99: tmp_89 (633)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_89 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_99: StgValue_889 (634)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch115 [
    i3 0, label %branch112
    i3 1, label %branch113
    i3 2, label %branch114
  ]


 <State 100>: 2.71ns
ST_100: StgValue_890 (636)  [1/1] 2.71ns  loc: minver.c:124
branch114:0  store float %tmp_88, float* %a_2_addr, align 4

ST_100: StgValue_891 (637)  [1/1] 0.00ns  loc: minver.c:124
branch114:1  br label %38

ST_100: StgValue_892 (639)  [1/1] 2.71ns  loc: minver.c:124
branch113:0  store float %tmp_88, float* %a_1_addr, align 4

ST_100: StgValue_893 (640)  [1/1] 0.00ns  loc: minver.c:124
branch113:1  br label %38

ST_100: StgValue_894 (642)  [1/1] 2.71ns  loc: minver.c:124
branch112:0  store float %tmp_88, float* %a_0_addr, align 4

ST_100: StgValue_895 (643)  [1/1] 0.00ns  loc: minver.c:124
branch112:1  br label %38

ST_100: StgValue_896 (645)  [1/1] 2.71ns  loc: minver.c:124
branch115:0  store float %tmp_88, float* %a_3_addr, align 4

ST_100: StgValue_897 (646)  [1/1] 0.00ns  loc: minver.c:124
branch115:1  br label %38


 <State 101>: 2.71ns
ST_101: StgValue_898 (650)  [1/1] 2.71ns  loc: minver.c:125
branch50:0  store float %tmp_89, float* %a_2_addr_1, align 4

ST_101: StgValue_899 (651)  [1/1] 0.00ns  loc: minver.c:125
branch50:1  br label %39

ST_101: StgValue_900 (653)  [1/1] 2.71ns  loc: minver.c:125
branch49:0  store float %tmp_89, float* %a_1_addr_1, align 4

ST_101: StgValue_901 (654)  [1/1] 0.00ns  loc: minver.c:125
branch49:1  br label %39

ST_101: StgValue_902 (656)  [1/1] 2.71ns  loc: minver.c:125
branch48:0  store float %tmp_89, float* %a_0_addr_1, align 4

ST_101: StgValue_903 (657)  [1/1] 0.00ns  loc: minver.c:125
branch48:1  br label %39

ST_101: StgValue_904 (659)  [1/1] 2.71ns  loc: minver.c:125
branch51:0  store float %tmp_89, float* %a_3_addr_1, align 4

ST_101: StgValue_905 (660)  [1/1] 0.00ns  loc: minver.c:125
branch51:1  br label %39


 <State 102>: 5.20ns
ST_102: tmp_90 (662)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_90 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 103>: 5.45ns
ST_103: tmp_90 (662)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_90 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_103: StgValue_908 (663)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch111 [
    i3 0, label %branch108
    i3 1, label %branch109
    i3 2, label %branch110
  ]


 <State 104>: 2.71ns
ST_104: StgValue_909 (665)  [1/1] 2.71ns  loc: minver.c:124
branch110:0  store float %tmp_89, float* %a_2_addr, align 4

ST_104: StgValue_910 (666)  [1/1] 0.00ns  loc: minver.c:124
branch110:1  br label %40

ST_104: StgValue_911 (668)  [1/1] 2.71ns  loc: minver.c:124
branch109:0  store float %tmp_89, float* %a_1_addr, align 4

ST_104: StgValue_912 (669)  [1/1] 0.00ns  loc: minver.c:124
branch109:1  br label %40

ST_104: StgValue_913 (671)  [1/1] 2.71ns  loc: minver.c:124
branch108:0  store float %tmp_89, float* %a_0_addr, align 4

ST_104: StgValue_914 (672)  [1/1] 0.00ns  loc: minver.c:124
branch108:1  br label %40

ST_104: StgValue_915 (674)  [1/1] 2.71ns  loc: minver.c:124
branch111:0  store float %tmp_89, float* %a_3_addr, align 4

ST_104: StgValue_916 (675)  [1/1] 0.00ns  loc: minver.c:124
branch111:1  br label %40


 <State 105>: 2.71ns
ST_105: StgValue_917 (679)  [1/1] 2.71ns  loc: minver.c:125
branch46:0  store float %tmp_90, float* %a_2_addr_1, align 4

ST_105: StgValue_918 (680)  [1/1] 0.00ns  loc: minver.c:125
branch46:1  br label %41

ST_105: StgValue_919 (682)  [1/1] 2.71ns  loc: minver.c:125
branch45:0  store float %tmp_90, float* %a_1_addr_1, align 4

ST_105: StgValue_920 (683)  [1/1] 0.00ns  loc: minver.c:125
branch45:1  br label %41

ST_105: StgValue_921 (685)  [1/1] 2.71ns  loc: minver.c:125
branch44:0  store float %tmp_90, float* %a_0_addr_1, align 4

ST_105: StgValue_922 (686)  [1/1] 0.00ns  loc: minver.c:125
branch44:1  br label %41

ST_105: StgValue_923 (688)  [1/1] 2.71ns  loc: minver.c:125
branch47:0  store float %tmp_90, float* %a_3_addr_1, align 4

ST_105: StgValue_924 (689)  [1/1] 0.00ns  loc: minver.c:125
branch47:1  br label %41


 <State 106>: 5.20ns
ST_106: tmp_91 (691)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_91 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 107>: 5.45ns
ST_107: tmp_91 (691)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_91 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_107: StgValue_927 (692)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch107 [
    i3 0, label %branch104
    i3 1, label %branch105
    i3 2, label %branch106
  ]


 <State 108>: 2.71ns
ST_108: StgValue_928 (694)  [1/1] 2.71ns  loc: minver.c:124
branch106:0  store float %tmp_90, float* %a_2_addr, align 4

ST_108: StgValue_929 (695)  [1/1] 0.00ns  loc: minver.c:124
branch106:1  br label %42

ST_108: StgValue_930 (697)  [1/1] 2.71ns  loc: minver.c:124
branch105:0  store float %tmp_90, float* %a_1_addr, align 4

ST_108: StgValue_931 (698)  [1/1] 0.00ns  loc: minver.c:124
branch105:1  br label %42

ST_108: StgValue_932 (700)  [1/1] 2.71ns  loc: minver.c:124
branch104:0  store float %tmp_90, float* %a_0_addr, align 4

ST_108: StgValue_933 (701)  [1/1] 0.00ns  loc: minver.c:124
branch104:1  br label %42

ST_108: StgValue_934 (703)  [1/1] 2.71ns  loc: minver.c:124
branch107:0  store float %tmp_90, float* %a_3_addr, align 4

ST_108: StgValue_935 (704)  [1/1] 0.00ns  loc: minver.c:124
branch107:1  br label %42


 <State 109>: 2.71ns
ST_109: StgValue_936 (708)  [1/1] 2.71ns  loc: minver.c:125
branch42:0  store float %tmp_91, float* %a_2_addr_1, align 4

ST_109: StgValue_937 (709)  [1/1] 0.00ns  loc: minver.c:125
branch42:1  br label %43

ST_109: StgValue_938 (711)  [1/1] 2.71ns  loc: minver.c:125
branch41:0  store float %tmp_91, float* %a_1_addr_1, align 4

ST_109: StgValue_939 (712)  [1/1] 0.00ns  loc: minver.c:125
branch41:1  br label %43

ST_109: StgValue_940 (714)  [1/1] 2.71ns  loc: minver.c:125
branch40:0  store float %tmp_91, float* %a_0_addr_1, align 4

ST_109: StgValue_941 (715)  [1/1] 0.00ns  loc: minver.c:125
branch40:1  br label %43

ST_109: StgValue_942 (717)  [1/1] 2.71ns  loc: minver.c:125
branch43:0  store float %tmp_91, float* %a_3_addr_1, align 4

ST_109: StgValue_943 (718)  [1/1] 0.00ns  loc: minver.c:125
branch43:1  br label %43


 <State 110>: 5.20ns
ST_110: tmp_92 (720)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_92 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 111>: 5.45ns
ST_111: tmp_92 (720)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_92 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_111: StgValue_946 (721)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch103 [
    i3 0, label %branch100
    i3 1, label %branch101
    i3 2, label %branch102
  ]


 <State 112>: 2.71ns
ST_112: StgValue_947 (723)  [1/1] 2.71ns  loc: minver.c:124
branch102:0  store float %tmp_91, float* %a_2_addr, align 4

ST_112: StgValue_948 (724)  [1/1] 0.00ns  loc: minver.c:124
branch102:1  br label %44

ST_112: StgValue_949 (726)  [1/1] 2.71ns  loc: minver.c:124
branch101:0  store float %tmp_91, float* %a_1_addr, align 4

ST_112: StgValue_950 (727)  [1/1] 0.00ns  loc: minver.c:124
branch101:1  br label %44

ST_112: StgValue_951 (729)  [1/1] 2.71ns  loc: minver.c:124
branch100:0  store float %tmp_91, float* %a_0_addr, align 4

ST_112: StgValue_952 (730)  [1/1] 0.00ns  loc: minver.c:124
branch100:1  br label %44

ST_112: StgValue_953 (732)  [1/1] 2.71ns  loc: minver.c:124
branch103:0  store float %tmp_91, float* %a_3_addr, align 4

ST_112: StgValue_954 (733)  [1/1] 0.00ns  loc: minver.c:124
branch103:1  br label %44


 <State 113>: 2.71ns
ST_113: StgValue_955 (737)  [1/1] 2.71ns  loc: minver.c:125
branch38:0  store float %tmp_92, float* %a_2_addr_1, align 4

ST_113: StgValue_956 (738)  [1/1] 0.00ns  loc: minver.c:125
branch38:1  br label %45

ST_113: StgValue_957 (740)  [1/1] 2.71ns  loc: minver.c:125
branch37:0  store float %tmp_92, float* %a_1_addr_1, align 4

ST_113: StgValue_958 (741)  [1/1] 0.00ns  loc: minver.c:125
branch37:1  br label %45

ST_113: StgValue_959 (743)  [1/1] 2.71ns  loc: minver.c:125
branch36:0  store float %tmp_92, float* %a_0_addr_1, align 4

ST_113: StgValue_960 (744)  [1/1] 0.00ns  loc: minver.c:125
branch36:1  br label %45

ST_113: StgValue_961 (746)  [1/1] 2.71ns  loc: minver.c:125
branch39:0  store float %tmp_92, float* %a_3_addr_1, align 4

ST_113: StgValue_962 (747)  [1/1] 0.00ns  loc: minver.c:125
branch39:1  br label %45


 <State 114>: 5.20ns
ST_114: tmp_93 (749)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_93 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 115>: 5.45ns
ST_115: tmp_93 (749)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_93 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_115: StgValue_965 (750)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch99 [
    i3 0, label %branch96
    i3 1, label %branch97
    i3 2, label %branch98
  ]


 <State 116>: 2.71ns
ST_116: StgValue_966 (752)  [1/1] 2.71ns  loc: minver.c:124
branch98:0  store float %tmp_92, float* %a_2_addr, align 4

ST_116: StgValue_967 (753)  [1/1] 0.00ns  loc: minver.c:124
branch98:1  br label %46

ST_116: StgValue_968 (755)  [1/1] 2.71ns  loc: minver.c:124
branch97:0  store float %tmp_92, float* %a_1_addr, align 4

ST_116: StgValue_969 (756)  [1/1] 0.00ns  loc: minver.c:124
branch97:1  br label %46

ST_116: StgValue_970 (758)  [1/1] 2.71ns  loc: minver.c:124
branch96:0  store float %tmp_92, float* %a_0_addr, align 4

ST_116: StgValue_971 (759)  [1/1] 0.00ns  loc: minver.c:124
branch96:1  br label %46

ST_116: StgValue_972 (761)  [1/1] 2.71ns  loc: minver.c:124
branch99:0  store float %tmp_92, float* %a_3_addr, align 4

ST_116: StgValue_973 (762)  [1/1] 0.00ns  loc: minver.c:124
branch99:1  br label %46


 <State 117>: 2.71ns
ST_117: StgValue_974 (766)  [1/1] 2.71ns  loc: minver.c:125
branch34:0  store float %tmp_93, float* %a_2_addr_1, align 4

ST_117: StgValue_975 (767)  [1/1] 0.00ns  loc: minver.c:125
branch34:1  br label %47

ST_117: StgValue_976 (769)  [1/1] 2.71ns  loc: minver.c:125
branch33:0  store float %tmp_93, float* %a_1_addr_1, align 4

ST_117: StgValue_977 (770)  [1/1] 0.00ns  loc: minver.c:125
branch33:1  br label %47

ST_117: StgValue_978 (772)  [1/1] 2.71ns  loc: minver.c:125
branch32:0  store float %tmp_93, float* %a_0_addr_1, align 4

ST_117: StgValue_979 (773)  [1/1] 0.00ns  loc: minver.c:125
branch32:1  br label %47

ST_117: StgValue_980 (775)  [1/1] 2.71ns  loc: minver.c:125
branch35:0  store float %tmp_93, float* %a_3_addr_1, align 4

ST_117: StgValue_981 (776)  [1/1] 0.00ns  loc: minver.c:125
branch35:1  br label %47


 <State 118>: 5.20ns
ST_118: tmp_94 (778)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_94 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 119>: 5.45ns
ST_119: tmp_94 (778)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_94 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_119: StgValue_984 (779)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch95 [
    i3 0, label %branch92
    i3 1, label %branch93
    i3 2, label %branch94
  ]


 <State 120>: 2.71ns
ST_120: StgValue_985 (781)  [1/1] 2.71ns  loc: minver.c:124
branch94:0  store float %tmp_93, float* %a_2_addr, align 4

ST_120: StgValue_986 (782)  [1/1] 0.00ns  loc: minver.c:124
branch94:1  br label %48

ST_120: StgValue_987 (784)  [1/1] 2.71ns  loc: minver.c:124
branch93:0  store float %tmp_93, float* %a_1_addr, align 4

ST_120: StgValue_988 (785)  [1/1] 0.00ns  loc: minver.c:124
branch93:1  br label %48

ST_120: StgValue_989 (787)  [1/1] 2.71ns  loc: minver.c:124
branch92:0  store float %tmp_93, float* %a_0_addr, align 4

ST_120: StgValue_990 (788)  [1/1] 0.00ns  loc: minver.c:124
branch92:1  br label %48

ST_120: StgValue_991 (790)  [1/1] 2.71ns  loc: minver.c:124
branch95:0  store float %tmp_93, float* %a_3_addr, align 4

ST_120: StgValue_992 (791)  [1/1] 0.00ns  loc: minver.c:124
branch95:1  br label %48


 <State 121>: 2.71ns
ST_121: StgValue_993 (795)  [1/1] 2.71ns  loc: minver.c:125
branch30:0  store float %tmp_94, float* %a_2_addr_1, align 4

ST_121: StgValue_994 (796)  [1/1] 0.00ns  loc: minver.c:125
branch30:1  br label %49

ST_121: StgValue_995 (798)  [1/1] 2.71ns  loc: minver.c:125
branch29:0  store float %tmp_94, float* %a_1_addr_1, align 4

ST_121: StgValue_996 (799)  [1/1] 0.00ns  loc: minver.c:125
branch29:1  br label %49

ST_121: StgValue_997 (801)  [1/1] 2.71ns  loc: minver.c:125
branch28:0  store float %tmp_94, float* %a_0_addr_1, align 4

ST_121: StgValue_998 (802)  [1/1] 0.00ns  loc: minver.c:125
branch28:1  br label %49

ST_121: StgValue_999 (804)  [1/1] 2.71ns  loc: minver.c:125
branch31:0  store float %tmp_94, float* %a_3_addr_1, align 4

ST_121: StgValue_1000 (805)  [1/1] 0.00ns  loc: minver.c:125
branch31:1  br label %49


 <State 122>: 5.20ns
ST_122: tmp_95 (807)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_95 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 123>: 5.45ns
ST_123: tmp_95 (807)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_95 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_123: StgValue_1003 (808)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch91 [
    i3 0, label %branch88
    i3 1, label %branch89
    i3 2, label %branch90
  ]


 <State 124>: 2.71ns
ST_124: StgValue_1004 (810)  [1/1] 2.71ns  loc: minver.c:124
branch90:0  store float %tmp_94, float* %a_2_addr, align 4

ST_124: StgValue_1005 (811)  [1/1] 0.00ns  loc: minver.c:124
branch90:1  br label %50

ST_124: StgValue_1006 (813)  [1/1] 2.71ns  loc: minver.c:124
branch89:0  store float %tmp_94, float* %a_1_addr, align 4

ST_124: StgValue_1007 (814)  [1/1] 0.00ns  loc: minver.c:124
branch89:1  br label %50

ST_124: StgValue_1008 (816)  [1/1] 2.71ns  loc: minver.c:124
branch88:0  store float %tmp_94, float* %a_0_addr, align 4

ST_124: StgValue_1009 (817)  [1/1] 0.00ns  loc: minver.c:124
branch88:1  br label %50

ST_124: StgValue_1010 (819)  [1/1] 2.71ns  loc: minver.c:124
branch91:0  store float %tmp_94, float* %a_3_addr, align 4

ST_124: StgValue_1011 (820)  [1/1] 0.00ns  loc: minver.c:124
branch91:1  br label %50


 <State 125>: 2.71ns
ST_125: StgValue_1012 (824)  [1/1] 2.71ns  loc: minver.c:125
branch26:0  store float %tmp_95, float* %a_2_addr_1, align 4

ST_125: StgValue_1013 (825)  [1/1] 0.00ns  loc: minver.c:125
branch26:1  br label %51

ST_125: StgValue_1014 (827)  [1/1] 2.71ns  loc: minver.c:125
branch25:0  store float %tmp_95, float* %a_1_addr_1, align 4

ST_125: StgValue_1015 (828)  [1/1] 0.00ns  loc: minver.c:125
branch25:1  br label %51

ST_125: StgValue_1016 (830)  [1/1] 2.71ns  loc: minver.c:125
branch24:0  store float %tmp_95, float* %a_0_addr_1, align 4

ST_125: StgValue_1017 (831)  [1/1] 0.00ns  loc: minver.c:125
branch24:1  br label %51

ST_125: StgValue_1018 (833)  [1/1] 2.71ns  loc: minver.c:125
branch27:0  store float %tmp_95, float* %a_3_addr_1, align 4

ST_125: StgValue_1019 (834)  [1/1] 0.00ns  loc: minver.c:125
branch27:1  br label %51


 <State 126>: 5.20ns
ST_126: tmp_96 (836)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_96 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 127>: 5.45ns
ST_127: tmp_96 (836)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_96 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_127: StgValue_1022 (837)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch87 [
    i3 0, label %branch84
    i3 1, label %branch85
    i3 2, label %branch86
  ]


 <State 128>: 2.71ns
ST_128: StgValue_1023 (839)  [1/1] 2.71ns  loc: minver.c:124
branch86:0  store float %tmp_95, float* %a_2_addr, align 4

ST_128: StgValue_1024 (840)  [1/1] 0.00ns  loc: minver.c:124
branch86:1  br label %52

ST_128: StgValue_1025 (842)  [1/1] 2.71ns  loc: minver.c:124
branch85:0  store float %tmp_95, float* %a_1_addr, align 4

ST_128: StgValue_1026 (843)  [1/1] 0.00ns  loc: minver.c:124
branch85:1  br label %52

ST_128: StgValue_1027 (845)  [1/1] 2.71ns  loc: minver.c:124
branch84:0  store float %tmp_95, float* %a_0_addr, align 4

ST_128: StgValue_1028 (846)  [1/1] 0.00ns  loc: minver.c:124
branch84:1  br label %52

ST_128: StgValue_1029 (848)  [1/1] 2.71ns  loc: minver.c:124
branch87:0  store float %tmp_95, float* %a_3_addr, align 4

ST_128: StgValue_1030 (849)  [1/1] 0.00ns  loc: minver.c:124
branch87:1  br label %52


 <State 129>: 2.71ns
ST_129: StgValue_1031 (853)  [1/1] 2.71ns  loc: minver.c:125
branch22:0  store float %tmp_96, float* %a_2_addr_1, align 4

ST_129: StgValue_1032 (854)  [1/1] 0.00ns  loc: minver.c:125
branch22:1  br label %53

ST_129: StgValue_1033 (856)  [1/1] 2.71ns  loc: minver.c:125
branch21:0  store float %tmp_96, float* %a_1_addr_1, align 4

ST_129: StgValue_1034 (857)  [1/1] 0.00ns  loc: minver.c:125
branch21:1  br label %53

ST_129: StgValue_1035 (859)  [1/1] 2.71ns  loc: minver.c:125
branch20:0  store float %tmp_96, float* %a_0_addr_1, align 4

ST_129: StgValue_1036 (860)  [1/1] 0.00ns  loc: minver.c:125
branch20:1  br label %53

ST_129: StgValue_1037 (862)  [1/1] 2.71ns  loc: minver.c:125
branch23:0  store float %tmp_96, float* %a_3_addr_1, align 4

ST_129: StgValue_1038 (863)  [1/1] 0.00ns  loc: minver.c:125
branch23:1  br label %53


 <State 130>: 5.20ns
ST_130: tmp_97 (865)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_97 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 131>: 5.45ns
ST_131: tmp_97 (865)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_97 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_131: StgValue_1041 (866)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch83 [
    i3 0, label %branch80
    i3 1, label %branch81
    i3 2, label %branch82
  ]


 <State 132>: 2.71ns
ST_132: StgValue_1042 (868)  [1/1] 2.71ns  loc: minver.c:124
branch82:0  store float %tmp_96, float* %a_2_addr, align 4

ST_132: StgValue_1043 (869)  [1/1] 0.00ns  loc: minver.c:124
branch82:1  br label %54

ST_132: StgValue_1044 (871)  [1/1] 2.71ns  loc: minver.c:124
branch81:0  store float %tmp_96, float* %a_1_addr, align 4

ST_132: StgValue_1045 (872)  [1/1] 0.00ns  loc: minver.c:124
branch81:1  br label %54

ST_132: StgValue_1046 (874)  [1/1] 2.71ns  loc: minver.c:124
branch80:0  store float %tmp_96, float* %a_0_addr, align 4

ST_132: StgValue_1047 (875)  [1/1] 0.00ns  loc: minver.c:124
branch80:1  br label %54

ST_132: StgValue_1048 (877)  [1/1] 2.71ns  loc: minver.c:124
branch83:0  store float %tmp_96, float* %a_3_addr, align 4

ST_132: StgValue_1049 (878)  [1/1] 0.00ns  loc: minver.c:124
branch83:1  br label %54


 <State 133>: 2.71ns
ST_133: StgValue_1050 (882)  [1/1] 2.71ns  loc: minver.c:125
branch18:0  store float %tmp_97, float* %a_2_addr_1, align 4

ST_133: StgValue_1051 (883)  [1/1] 0.00ns  loc: minver.c:125
branch18:1  br label %55

ST_133: StgValue_1052 (885)  [1/1] 2.71ns  loc: minver.c:125
branch17:0  store float %tmp_97, float* %a_1_addr_1, align 4

ST_133: StgValue_1053 (886)  [1/1] 0.00ns  loc: minver.c:125
branch17:1  br label %55

ST_133: StgValue_1054 (888)  [1/1] 2.71ns  loc: minver.c:125
branch16:0  store float %tmp_97, float* %a_0_addr_1, align 4

ST_133: StgValue_1055 (889)  [1/1] 0.00ns  loc: minver.c:125
branch16:1  br label %55

ST_133: StgValue_1056 (891)  [1/1] 2.71ns  loc: minver.c:125
branch19:0  store float %tmp_97, float* %a_3_addr_1, align 4

ST_133: StgValue_1057 (892)  [1/1] 0.00ns  loc: minver.c:125
branch19:1  br label %55


 <State 134>: 5.20ns
ST_134: tmp_98 (894)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_98 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 135>: 5.45ns
ST_135: tmp_98 (894)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_98 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_135: StgValue_1060 (895)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch79 [
    i3 0, label %branch76
    i3 1, label %branch77
    i3 2, label %branch78
  ]


 <State 136>: 2.71ns
ST_136: StgValue_1061 (897)  [1/1] 2.71ns  loc: minver.c:124
branch78:0  store float %tmp_97, float* %a_2_addr, align 4

ST_136: StgValue_1062 (898)  [1/1] 0.00ns  loc: minver.c:124
branch78:1  br label %56

ST_136: StgValue_1063 (900)  [1/1] 2.71ns  loc: minver.c:124
branch77:0  store float %tmp_97, float* %a_1_addr, align 4

ST_136: StgValue_1064 (901)  [1/1] 0.00ns  loc: minver.c:124
branch77:1  br label %56

ST_136: StgValue_1065 (903)  [1/1] 2.71ns  loc: minver.c:124
branch76:0  store float %tmp_97, float* %a_0_addr, align 4

ST_136: StgValue_1066 (904)  [1/1] 0.00ns  loc: minver.c:124
branch76:1  br label %56

ST_136: StgValue_1067 (906)  [1/1] 2.71ns  loc: minver.c:124
branch79:0  store float %tmp_97, float* %a_3_addr, align 4

ST_136: StgValue_1068 (907)  [1/1] 0.00ns  loc: minver.c:124
branch79:1  br label %56


 <State 137>: 2.71ns
ST_137: StgValue_1069 (911)  [1/1] 2.71ns  loc: minver.c:125
branch14:0  store float %tmp_98, float* %a_2_addr_1, align 4

ST_137: StgValue_1070 (912)  [1/1] 0.00ns  loc: minver.c:125
branch14:1  br label %57

ST_137: StgValue_1071 (914)  [1/1] 2.71ns  loc: minver.c:125
branch13:0  store float %tmp_98, float* %a_1_addr_1, align 4

ST_137: StgValue_1072 (915)  [1/1] 0.00ns  loc: minver.c:125
branch13:1  br label %57

ST_137: StgValue_1073 (917)  [1/1] 2.71ns  loc: minver.c:125
branch12:0  store float %tmp_98, float* %a_0_addr_1, align 4

ST_137: StgValue_1074 (918)  [1/1] 0.00ns  loc: minver.c:125
branch12:1  br label %57

ST_137: StgValue_1075 (920)  [1/1] 2.71ns  loc: minver.c:125
branch15:0  store float %tmp_98, float* %a_3_addr_1, align 4

ST_137: StgValue_1076 (921)  [1/1] 0.00ns  loc: minver.c:125
branch15:1  br label %57


 <State 138>: 5.20ns
ST_138: tmp_99 (923)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_99 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 139>: 5.45ns
ST_139: tmp_99 (923)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_99 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_139: StgValue_1079 (924)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch75 [
    i3 0, label %branch72
    i3 1, label %branch73
    i3 2, label %branch74
  ]


 <State 140>: 2.71ns
ST_140: StgValue_1080 (926)  [1/1] 2.71ns  loc: minver.c:124
branch74:0  store float %tmp_98, float* %a_2_addr, align 4

ST_140: StgValue_1081 (927)  [1/1] 0.00ns  loc: minver.c:124
branch74:1  br label %58

ST_140: StgValue_1082 (929)  [1/1] 2.71ns  loc: minver.c:124
branch73:0  store float %tmp_98, float* %a_1_addr, align 4

ST_140: StgValue_1083 (930)  [1/1] 0.00ns  loc: minver.c:124
branch73:1  br label %58

ST_140: StgValue_1084 (932)  [1/1] 2.71ns  loc: minver.c:124
branch72:0  store float %tmp_98, float* %a_0_addr, align 4

ST_140: StgValue_1085 (933)  [1/1] 0.00ns  loc: minver.c:124
branch72:1  br label %58

ST_140: StgValue_1086 (935)  [1/1] 2.71ns  loc: minver.c:124
branch75:0  store float %tmp_98, float* %a_3_addr, align 4

ST_140: StgValue_1087 (936)  [1/1] 0.00ns  loc: minver.c:124
branch75:1  br label %58


 <State 141>: 2.71ns
ST_141: StgValue_1088 (940)  [1/1] 2.71ns  loc: minver.c:125
branch10:0  store float %tmp_99, float* %a_2_addr_1, align 4

ST_141: StgValue_1089 (941)  [1/1] 0.00ns  loc: minver.c:125
branch10:1  br label %59

ST_141: StgValue_1090 (943)  [1/1] 2.71ns  loc: minver.c:125
branch9:0  store float %tmp_99, float* %a_1_addr_1, align 4

ST_141: StgValue_1091 (944)  [1/1] 0.00ns  loc: minver.c:125
branch9:1  br label %59

ST_141: StgValue_1092 (946)  [1/1] 2.71ns  loc: minver.c:125
branch8:0  store float %tmp_99, float* %a_0_addr_1, align 4

ST_141: StgValue_1093 (947)  [1/1] 0.00ns  loc: minver.c:125
branch8:1  br label %59

ST_141: StgValue_1094 (949)  [1/1] 2.71ns  loc: minver.c:125
branch11:0  store float %tmp_99, float* %a_3_addr_1, align 4

ST_141: StgValue_1095 (950)  [1/1] 0.00ns  loc: minver.c:125
branch11:1  br label %59


 <State 142>: 5.20ns
ST_142: tmp_100 (952)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_100 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)

ST_142: StgValue_1097 (953)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch71 [
    i3 0, label %branch68
    i3 1, label %branch69
    i3 2, label %branch70
  ]

ST_142: StgValue_1098 (982)  [1/1] 2.33ns  loc: minver.c:124
:1  switch i3 %arrayNo3, label %branch67 [
    i3 0, label %branch64
    i3 1, label %branch65
    i3 2, label %branch66
  ]


 <State 143>: 5.45ns
ST_143: tmp_100 (952)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_100 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 144>: 2.71ns
ST_144: StgValue_1100 (955)  [1/1] 2.71ns  loc: minver.c:124
branch70:0  store float %tmp_99, float* %a_2_addr, align 4

ST_144: StgValue_1101 (956)  [1/1] 0.00ns  loc: minver.c:124
branch70:1  br label %60

ST_144: StgValue_1102 (958)  [1/1] 2.71ns  loc: minver.c:124
branch69:0  store float %tmp_99, float* %a_1_addr, align 4

ST_144: StgValue_1103 (959)  [1/1] 0.00ns  loc: minver.c:124
branch69:1  br label %60

ST_144: StgValue_1104 (961)  [1/1] 2.71ns  loc: minver.c:124
branch68:0  store float %tmp_99, float* %a_0_addr, align 4

ST_144: StgValue_1105 (962)  [1/1] 0.00ns  loc: minver.c:124
branch68:1  br label %60

ST_144: StgValue_1106 (964)  [1/1] 2.71ns  loc: minver.c:124
branch71:0  store float %tmp_99, float* %a_3_addr, align 4

ST_144: StgValue_1107 (965)  [1/1] 0.00ns  loc: minver.c:124
branch71:1  br label %60


 <State 145>: 2.71ns
ST_145: StgValue_1108 (969)  [1/1] 2.71ns  loc: minver.c:125
branch6:0  store float %tmp_100, float* %a_2_addr_1, align 4

ST_145: StgValue_1109 (970)  [1/1] 0.00ns  loc: minver.c:125
branch6:1  br label %61

ST_145: StgValue_1110 (972)  [1/1] 2.71ns  loc: minver.c:125
branch5:0  store float %tmp_100, float* %a_1_addr_1, align 4

ST_145: StgValue_1111 (973)  [1/1] 0.00ns  loc: minver.c:125
branch5:1  br label %61

ST_145: StgValue_1112 (975)  [1/1] 2.71ns  loc: minver.c:125
branch4:0  store float %tmp_100, float* %a_0_addr_1, align 4

ST_145: StgValue_1113 (976)  [1/1] 0.00ns  loc: minver.c:125
branch4:1  br label %61

ST_145: StgValue_1114 (978)  [1/1] 2.71ns  loc: minver.c:125
branch7:0  store float %tmp_100, float* %a_3_addr_1, align 4

ST_145: StgValue_1115 (979)  [1/1] 0.00ns  loc: minver.c:125
branch7:1  br label %61


 <State 146>: 5.20ns
ST_146: tmp_101 (981)  [2/2] 5.20ns  loc: minver.c:129
:0  %tmp_101 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 147>: 5.45ns
ST_147: tmp_101 (981)  [1/2] 5.45ns  loc: minver.c:129
:0  %tmp_101 = call fastcc float @aesl_mux_load_4_16_x([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, i5 %arrayNo3_cast_cast1_s, i32 %tmp_10_cast1, i2 %tmp_38)


 <State 148>: 2.71ns
ST_148: StgValue_1118 (984)  [1/1] 2.71ns  loc: minver.c:124
branch66:0  store float %tmp_100, float* %a_2_addr, align 4

ST_148: StgValue_1119 (985)  [1/1] 0.00ns  loc: minver.c:124
branch66:1  br label %62

ST_148: StgValue_1120 (987)  [1/1] 2.71ns  loc: minver.c:124
branch65:0  store float %tmp_100, float* %a_1_addr, align 4

ST_148: StgValue_1121 (988)  [1/1] 0.00ns  loc: minver.c:124
branch65:1  br label %62

ST_148: StgValue_1122 (990)  [1/1] 2.71ns  loc: minver.c:124
branch64:0  store float %tmp_100, float* %a_0_addr, align 4

ST_148: StgValue_1123 (991)  [1/1] 0.00ns  loc: minver.c:124
branch64:1  br label %62

ST_148: StgValue_1124 (993)  [1/1] 2.71ns  loc: minver.c:124
branch67:0  store float %tmp_100, float* %a_3_addr, align 4

ST_148: StgValue_1125 (994)  [1/1] 0.00ns  loc: minver.c:124
branch67:1  br label %62


 <State 149>: 2.71ns
ST_149: StgValue_1126 (998)  [1/1] 2.71ns  loc: minver.c:125
branch2:0  store float %tmp_101, float* %a_2_addr_1, align 4

ST_149: StgValue_1127 (999)  [1/1] 0.00ns  loc: minver.c:125
branch2:1  br label %63

ST_149: StgValue_1128 (1001)  [1/1] 2.71ns  loc: minver.c:125
branch1:0  store float %tmp_101, float* %a_1_addr_1, align 4

ST_149: StgValue_1129 (1002)  [1/1] 0.00ns  loc: minver.c:125
branch1:1  br label %63

ST_149: StgValue_1130 (1004)  [1/1] 2.71ns  loc: minver.c:125
branch0:0  store float %tmp_101, float* %a_0_addr_1, align 4

ST_149: StgValue_1131 (1005)  [1/1] 0.00ns  loc: minver.c:125
branch0:1  br label %63

ST_149: StgValue_1132 (1007)  [1/1] 2.71ns  loc: minver.c:125
branch3:0  store float %tmp_101, float* %a_3_addr_1, align 4

ST_149: StgValue_1133 (1008)  [1/1] 0.00ns  loc: minver.c:125
branch3:1  br label %63


 <State 150>: 0.00ns
ST_150: StgValue_1134 (1013)  [1/1] 0.00ns
.preheader8.loopexit:0  br label %.preheader8



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:50) [17]  (0 ns)
	'store' operation (minver.c:52) of variable 'i' on array 'work', minver.c:41 [27]  (2.71 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	'alloca' operation ('r') [31]  (0 ns)
	'store' operation of constant 0 on local variable 'r' [32]  (1.57 ns)

 <State 4>: 1.67ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', minver.c:56) [35]  (0 ns)
	'add' operation ('k', minver.c:56) [37]  (1.67 ns)

 <State 5>: 2.93ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_5_cast', minver.c:59) ('i', minver.c:59) [78]  (0 ns)
	'icmp' operation ('exitcond6', minver.c:59) [79]  (2.93 ns)

 <State 6>: 5.2ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_16_x' [87]  (5.2 ns)

 <State 7>: 5.45ns
The critical path consists of the following:
	'call' operation ('n', minver.c:56) to 'aesl_mux_load_4_16_x' [87]  (5.45 ns)

 <State 8>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_45', minver_lib.c:11->minver.c:61) [94]  (6.37 ns)
	'and' operation ('tmp_46', minver_lib.c:11->minver.c:61) [95]  (0 ns)
	'select' operation ('w', minver.c:63) [98]  (1.37 ns)

 <State 9>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_54', minver.c:62) [112]  (6.37 ns)
	'and' operation ('tmp_55', minver.c:62) [113]  (1.37 ns)

 <State 10>: 2.94ns
The critical path consists of the following:
	'load' operation ('r_load_2', minver.c:62) on local variable 'r' [82]  (0 ns)
	'select' operation ('r', minver.c:62) [115]  (1.37 ns)
	'store' operation (minver.c:62) of variable 'r', minver.c:62 on local variable 'r' [118]  (1.57 ns)

 <State 11>: 5.2ns
The critical path consists of the following:
	'load' operation ('r_load_1') on local variable 'r' [121]  (0 ns)
	'call' operation ('pivot', minver.c:56) to 'aesl_mux_load_4_16_x' [124]  (5.2 ns)

 <State 12>: 5.45ns
The critical path consists of the following:
	'call' operation ('pivot', minver.c:56) to 'aesl_mux_load_4_16_x' [124]  (5.45 ns)

 <State 13>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_16', minver_lib.c:11->minver.c:69) [131]  (6.37 ns)
	'and' operation ('tmp_20', minver_lib.c:11->minver.c:69) [132]  (0 ns)
	'select' operation ('api', minver.c:69) [135]  (1.37 ns)

 <State 14>: 5.12ns
The critical path consists of the following:
	'fpext' operation ('tmp_5', minver.c:70) [136]  (5.12 ns)

 <State 15>: 8.27ns
The critical path consists of the following:
	'dcmp' operation ('tmp_40', minver.c:70) [143]  (6.9 ns)
	'and' operation ('tmp_41', minver.c:70) [144]  (1.37 ns)

 <State 16>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load_3', minver.c:78) on array 'work', minver.c:41 [153]  (2.71 ns)
	'store' operation (minver.c:78) of variable 'work_load_3', minver.c:78 on array 'work', minver.c:41 [154]  (2.71 ns)

 <State 17>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:79) of variable 'work_load_2', minver.c:77 on array 'work', minver.c:41 [155]  (2.71 ns)

 <State 18>: 2.37ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', minver.c:80) [158]  (0 ns)
	'icmp' operation ('exitcond5', minver.c:80) [159]  (2.37 ns)

 <State 19>: 5.2ns
The critical path consists of the following:
	'call' operation ('w', minver.c:80) to 'aesl_mux_load_4_16_x' [182]  (5.2 ns)

 <State 20>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:80) to 'aesl_mux_load_4_16_x' [182]  (5.45 ns)

 <State 21>: 5.2ns
The critical path consists of the following:
	'load' operation ('r_load') on local variable 'r' [163]  (0 ns)
	'call' operation ('tmp_68', minver.c:80) to 'aesl_mux_load_4_16_x' [183]  (5.2 ns)

 <State 22>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_68', minver.c:80) to 'aesl_mux_load_4_16_x' [183]  (5.45 ns)

 <State 23>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_2', minver.c:82) [177]  (0 ns)
	'store' operation (minver.c:83) of variable 'tmp_68', minver.c:80 on array 'a_2' [186]  (2.71 ns)

 <State 24>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:84) of variable 'w', minver.c:80 on array 'a_2' [187]  (2.71 ns)

 <State 25>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', minver.c:88) [209]  (1.57 ns)

 <State 26>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:88) [209]  (0 ns)
	'icmp' operation ('exitcond4', minver.c:88) [210]  (2.37 ns)

 <State 27>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_77', minver.c:88) to 'aesl_mux_load_4_16_x' [226]  (5.2 ns)

 <State 28>: 11.8ns
The critical path consists of the following:
	'call' operation ('tmp_77', minver.c:88) to 'aesl_mux_load_4_16_x' [226]  (5.45 ns)
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 29>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 30>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 31>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 32>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 33>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 34>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 35>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 36>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 37>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 38>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 39>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 40>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 41>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 42>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)

 <State 43>: 9.01ns
The critical path consists of the following:
	'fdiv' operation ('tmp_12', minver.c:90) [227]  (6.3 ns)
	'store' operation (minver.c:90) of variable 'tmp_12', minver.c:90 on array 'a_2' [230]  (2.71 ns)

 <State 44>: 2.37ns
The critical path consists of the following:
	'icmp' operation ('tmp_27', minver.c:99) [245]  (2.37 ns)

 <State 45>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:93) [263]  (0 ns)
	'icmp' operation ('exitcond3', minver.c:93) [264]  (2.37 ns)

 <State 46>: 5.2ns
The critical path consists of the following:
	'call' operation ('w', minver.c:56) to 'aesl_mux_load_4_16_x' [305]  (5.2 ns)

 <State 47>: 5.45ns
The critical path consists of the following:
	'call' operation ('w', minver.c:56) to 'aesl_mux_load_4_16_x' [305]  (5.45 ns)

 <State 48>: 7.74ns
The critical path consists of the following:
	'fcmp' operation ('tmp_72', minver.c:97) [312]  (6.37 ns)
	'and' operation ('tmp_73', minver.c:97) [313]  (1.37 ns)

 <State 49>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load', minver.c:99) on array 'a_0' [318]  (2.71 ns)
	'fmul' operation ('tmp_32', minver.c:99) [319]  (5.78 ns)

 <State 50>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_2', minver.c:99) on array 'a_0' [327]  (2.71 ns)
	'fmul' operation ('tmp_22_1', minver.c:99) [328]  (5.78 ns)

 <State 51>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_4', minver.c:99) on array 'a_0' [336]  (2.71 ns)
	'fmul' operation ('tmp_22_2', minver.c:99) [337]  (5.78 ns)

 <State 52>: 8.49ns
The critical path consists of the following:
	'load' operation ('a_0_load_6', minver.c:99) on array 'a_0' [345]  (2.71 ns)
	'fmul' operation ('tmp_22_3', minver.c:99) [346]  (5.78 ns)

 <State 53>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:101) [462]  (6.3 ns)

 <State 54>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [321]  (8.26 ns)

 <State 55>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [321]  (8.26 ns)

 <State 56>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [321]  (8.26 ns)

 <State 57>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [321]  (8.26 ns)

 <State 58>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_33', minver.c:99) [321]  (8.26 ns)

 <State 59>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_1', minver.c:99) [330]  (8.26 ns)

 <State 60>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_2', minver.c:99) [339]  (8.26 ns)

 <State 61>: 8.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_23_3', minver.c:99) [348]  (8.26 ns)

 <State 62>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:101) [462]  (6.3 ns)

 <State 63>: 9.01ns
The critical path consists of the following:
	'fdiv' operation ('tmp_18', minver.c:101) [462]  (6.3 ns)
	'store' operation (minver.c:101) of variable 'tmp_18', minver.c:101 on array 'a_1' [468]  (2.71 ns)

 <State 64>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 65>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 66>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 67>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 68>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 69>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 70>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 71>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 72>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 73>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 74>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 75>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 76>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 77>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 78>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 79>: 6.3ns
The critical path consists of the following:
	'fdiv' operation ('tmp_13', minver.c:105) [484]  (6.3 ns)

 <State 80>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:105) of variable 'tmp_13', minver.c:105 on array 'a_2' [487]  (2.71 ns)

 <State 81>: 2.37ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', minver.c:129) [505]  (0 ns)
	'icmp' operation ('exitcond1', minver.c:109) [506]  (2.37 ns)

 <State 82>: 2.71ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [517]  (2.71 ns)

 <State 83>: 5.42ns
The critical path consists of the following:
	'load' operation ('work_load', minver.c:114) on array 'work', minver.c:41 [517]  (2.71 ns)
	'getelementptr' operation ('work_addr_2', minver.c:118) [530]  (0 ns)
	'load' operation ('work_load_1', minver.c:118) on array 'work', minver.c:41 [531]  (2.71 ns)

 <State 84>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_62', minver.c:129) to 'aesl_mux_load_4_16_x' [544]  (5.2 ns)

 <State 85>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_62', minver.c:129) to 'aesl_mux_load_4_16_x' [544]  (5.45 ns)

 <State 86>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_63', minver.c:114) to 'aesl_mux_load_4_16_x' [546]  (5.2 ns)

 <State 87>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_63', minver.c:114) to 'aesl_mux_load_4_16_x' [546]  (5.45 ns)

 <State 88>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr', minver.c:123) [528]  (0 ns)
	'store' operation (minver.c:124) of variable 'tmp_63', minver.c:114 on array 'a_2' [549]  (2.71 ns)

 <State 89>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('a_2_addr_1', minver.c:124) [540]  (0 ns)
	'store' operation (minver.c:125) of variable 'tmp_62', minver.c:129 on array 'a_2' [563]  (2.71 ns)

 <State 90>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_74', minver.c:129) to 'aesl_mux_load_4_16_x' [575]  (5.2 ns)

 <State 91>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_74', minver.c:129) to 'aesl_mux_load_4_16_x' [575]  (5.45 ns)

 <State 92>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_62', minver.c:129 on array 'a_2' [578]  (2.71 ns)

 <State 93>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_74', minver.c:129 on array 'a_2' [592]  (2.71 ns)

 <State 94>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_88', minver.c:129) to 'aesl_mux_load_4_16_x' [604]  (5.2 ns)

 <State 95>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_88', minver.c:129) to 'aesl_mux_load_4_16_x' [604]  (5.45 ns)

 <State 96>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_74', minver.c:129 on array 'a_2' [607]  (2.71 ns)

 <State 97>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_88', minver.c:129 on array 'a_2' [621]  (2.71 ns)

 <State 98>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_89', minver.c:129) to 'aesl_mux_load_4_16_x' [633]  (5.2 ns)

 <State 99>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_89', minver.c:129) to 'aesl_mux_load_4_16_x' [633]  (5.45 ns)

 <State 100>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_88', minver.c:129 on array 'a_2' [636]  (2.71 ns)

 <State 101>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_89', minver.c:129 on array 'a_2' [650]  (2.71 ns)

 <State 102>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_90', minver.c:129) to 'aesl_mux_load_4_16_x' [662]  (5.2 ns)

 <State 103>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_90', minver.c:129) to 'aesl_mux_load_4_16_x' [662]  (5.45 ns)

 <State 104>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_89', minver.c:129 on array 'a_2' [665]  (2.71 ns)

 <State 105>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_90', minver.c:129 on array 'a_2' [679]  (2.71 ns)

 <State 106>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_91', minver.c:129) to 'aesl_mux_load_4_16_x' [691]  (5.2 ns)

 <State 107>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_91', minver.c:129) to 'aesl_mux_load_4_16_x' [691]  (5.45 ns)

 <State 108>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_90', minver.c:129 on array 'a_2' [694]  (2.71 ns)

 <State 109>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_91', minver.c:129 on array 'a_2' [708]  (2.71 ns)

 <State 110>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_92', minver.c:129) to 'aesl_mux_load_4_16_x' [720]  (5.2 ns)

 <State 111>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_92', minver.c:129) to 'aesl_mux_load_4_16_x' [720]  (5.45 ns)

 <State 112>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_91', minver.c:129 on array 'a_2' [723]  (2.71 ns)

 <State 113>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_92', minver.c:129 on array 'a_2' [737]  (2.71 ns)

 <State 114>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_93', minver.c:129) to 'aesl_mux_load_4_16_x' [749]  (5.2 ns)

 <State 115>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_93', minver.c:129) to 'aesl_mux_load_4_16_x' [749]  (5.45 ns)

 <State 116>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_92', minver.c:129 on array 'a_2' [752]  (2.71 ns)

 <State 117>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_93', minver.c:129 on array 'a_2' [766]  (2.71 ns)

 <State 118>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_94', minver.c:129) to 'aesl_mux_load_4_16_x' [778]  (5.2 ns)

 <State 119>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_94', minver.c:129) to 'aesl_mux_load_4_16_x' [778]  (5.45 ns)

 <State 120>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_93', minver.c:129 on array 'a_2' [781]  (2.71 ns)

 <State 121>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_94', minver.c:129 on array 'a_2' [795]  (2.71 ns)

 <State 122>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_95', minver.c:129) to 'aesl_mux_load_4_16_x' [807]  (5.2 ns)

 <State 123>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_95', minver.c:129) to 'aesl_mux_load_4_16_x' [807]  (5.45 ns)

 <State 124>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_94', minver.c:129 on array 'a_2' [810]  (2.71 ns)

 <State 125>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_95', minver.c:129 on array 'a_2' [824]  (2.71 ns)

 <State 126>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_96', minver.c:129) to 'aesl_mux_load_4_16_x' [836]  (5.2 ns)

 <State 127>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_96', minver.c:129) to 'aesl_mux_load_4_16_x' [836]  (5.45 ns)

 <State 128>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_95', minver.c:129 on array 'a_2' [839]  (2.71 ns)

 <State 129>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_96', minver.c:129 on array 'a_2' [853]  (2.71 ns)

 <State 130>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_97', minver.c:129) to 'aesl_mux_load_4_16_x' [865]  (5.2 ns)

 <State 131>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_97', minver.c:129) to 'aesl_mux_load_4_16_x' [865]  (5.45 ns)

 <State 132>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_96', minver.c:129 on array 'a_2' [868]  (2.71 ns)

 <State 133>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_97', minver.c:129 on array 'a_2' [882]  (2.71 ns)

 <State 134>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_98', minver.c:129) to 'aesl_mux_load_4_16_x' [894]  (5.2 ns)

 <State 135>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_98', minver.c:129) to 'aesl_mux_load_4_16_x' [894]  (5.45 ns)

 <State 136>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_97', minver.c:129 on array 'a_2' [897]  (2.71 ns)

 <State 137>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_98', minver.c:129 on array 'a_2' [911]  (2.71 ns)

 <State 138>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_99', minver.c:129) to 'aesl_mux_load_4_16_x' [923]  (5.2 ns)

 <State 139>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_99', minver.c:129) to 'aesl_mux_load_4_16_x' [923]  (5.45 ns)

 <State 140>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_98', minver.c:129 on array 'a_2' [926]  (2.71 ns)

 <State 141>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_99', minver.c:129 on array 'a_2' [940]  (2.71 ns)

 <State 142>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_100', minver.c:129) to 'aesl_mux_load_4_16_x' [952]  (5.2 ns)

 <State 143>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_100', minver.c:129) to 'aesl_mux_load_4_16_x' [952]  (5.45 ns)

 <State 144>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_99', minver.c:129 on array 'a_2' [955]  (2.71 ns)

 <State 145>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_100', minver.c:129 on array 'a_2' [969]  (2.71 ns)

 <State 146>: 5.2ns
The critical path consists of the following:
	'call' operation ('tmp_101', minver.c:129) to 'aesl_mux_load_4_16_x' [981]  (5.2 ns)

 <State 147>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_101', minver.c:129) to 'aesl_mux_load_4_16_x' [981]  (5.45 ns)

 <State 148>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:124) of variable 'tmp_100', minver.c:129 on array 'a_2' [984]  (2.71 ns)

 <State 149>: 2.71ns
The critical path consists of the following:
	'store' operation (minver.c:125) of variable 'tmp_101', minver.c:129 on array 'a_2' [998]  (2.71 ns)

 <State 150>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
