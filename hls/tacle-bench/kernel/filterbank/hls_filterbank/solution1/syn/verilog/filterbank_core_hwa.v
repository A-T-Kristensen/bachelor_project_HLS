// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="filterbank_core_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.973000,HLS_SYN_LAT=428915,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=5,HLS_SYN_FF=699,HLS_SYN_LUT=974}" *)

module filterbank_core_hwa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_Addr_A,
        r_EN_A,
        r_WEN_A,
        r_Din_A,
        r_Dout_A,
        r_Clk_A,
        r_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        H_Addr_A,
        H_EN_A,
        H_WEN_A,
        H_Din_A,
        H_Dout_A,
        H_Clk_A,
        H_Rst_A,
        F_Addr_A,
        F_EN_A,
        F_WEN_A,
        F_Din_A,
        F_Dout_A,
        F_Clk_A,
        F_Rst_A
);

parameter    ap_ST_fsm_state1 = 30'b1;
parameter    ap_ST_fsm_state2 = 30'b10;
parameter    ap_ST_fsm_state3 = 30'b100;
parameter    ap_ST_fsm_state4 = 30'b1000;
parameter    ap_ST_fsm_state5 = 30'b10000;
parameter    ap_ST_fsm_state6 = 30'b100000;
parameter    ap_ST_fsm_state7 = 30'b1000000;
parameter    ap_ST_fsm_state8 = 30'b10000000;
parameter    ap_ST_fsm_pp1_stage0 = 30'b100000000;
parameter    ap_ST_fsm_pp1_stage1 = 30'b1000000000;
parameter    ap_ST_fsm_pp1_stage2 = 30'b10000000000;
parameter    ap_ST_fsm_pp1_stage3 = 30'b100000000000;
parameter    ap_ST_fsm_pp1_stage4 = 30'b1000000000000;
parameter    ap_ST_fsm_pp1_stage5 = 30'b10000000000000;
parameter    ap_ST_fsm_state19 = 30'b100000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 30'b1000000000000000;
parameter    ap_ST_fsm_state22 = 30'b10000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 30'b100000000000000000;
parameter    ap_ST_fsm_state25 = 30'b1000000000000000000;
parameter    ap_ST_fsm_state26 = 30'b10000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 30'b100000000000000000000;
parameter    ap_ST_fsm_pp4_stage1 = 30'b1000000000000000000000;
parameter    ap_ST_fsm_pp4_stage2 = 30'b10000000000000000000000;
parameter    ap_ST_fsm_pp4_stage3 = 30'b100000000000000000000000;
parameter    ap_ST_fsm_pp4_stage4 = 30'b1000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage5 = 30'b10000000000000000000000000;
parameter    ap_ST_fsm_state37 = 30'b100000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 30'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 30'b10000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 30'b100000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv3_0 = 3'b000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] r_Addr_A;
output   r_EN_A;
output  [3:0] r_WEN_A;
output  [31:0] r_Din_A;
input  [31:0] r_Dout_A;
output   r_Clk_A;
output   r_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [3:0] y_WEN_A;
output  [31:0] y_Din_A;
input  [31:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
output  [31:0] H_Addr_A;
output   H_EN_A;
output  [3:0] H_WEN_A;
output  [31:0] H_Din_A;
input  [31:0] H_Dout_A;
output   H_Clk_A;
output   H_Rst_A;
output  [31:0] F_Addr_A;
output   F_EN_A;
output  [3:0] F_WEN_A;
output  [31:0] F_Din_A;
input  [31:0] F_Dout_A;
output   F_Clk_A;
output   F_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg r_EN_A;
reg y_EN_A;
reg[3:0] y_WEN_A;
reg[31:0] y_Din_A;
reg H_EN_A;
reg F_EN_A;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [5:0] k_reg_351;
reg   [5:0] j_1_reg_362;
reg   [5:0] j_2_reg_374;
reg   [5:0] k_1_reg_397;
reg   [8:0] j_4_reg_408;
wire   [31:0] grp_fu_427_p2;
reg   [31:0] reg_435;
wire   [0:0] ap_CS_fsm_pp1_stage4;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] tmp_13_reg_827;
reg   [0:0] tmp_26_reg_836;
wire   [0:0] ap_CS_fsm_pp4_stage4;
reg    ap_enable_reg_pp4_iter0;
reg   [0:0] tmp_34_reg_912;
reg   [0:0] tmp_37_reg_921;
wire   [31:0] Vect_F_q0;
reg   [31:0] reg_440;
wire   [0:0] ap_CS_fsm_pp4_stage5;
wire   [0:0] ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
reg   [0:0] exitcond_reg_945;
wire   [8:0] i_2_fu_452_p2;
wire   [0:0] ap_CS_fsm_state2;
wire   [3:0] i_3_fu_469_p2;
reg   [3:0] i_3_reg_778;
wire   [0:0] ap_CS_fsm_state4;
wire   [7:0] indvarinc_fu_475_p2;
wire   [0:0] ap_CS_fsm_state5;
wire   [7:0] indvarinc1_fu_492_p2;
wire   [0:0] ap_CS_fsm_state6;
wire   [7:0] indvarinc2_fu_509_p2;
wire   [0:0] ap_CS_fsm_state7;
wire   [9:0] tmp_37_cast_fu_534_p1;
reg   [9:0] tmp_37_cast_reg_807;
wire   [0:0] tmp_7_fu_520_p2;
wire   [0:0] exitcond4_fu_538_p2;
wire   [0:0] ap_CS_fsm_state8;
wire   [8:0] j_6_fu_544_p2;
reg   [8:0] j_6_reg_817;
reg   [7:0] Vect_H_addr_1_reg_822;
wire   [0:0] tmp_13_fu_555_p3;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg   [0:0] ap_pipeline_reg_pp1_iter1_tmp_13_reg_827;
wire   [5:0] k_2_fu_563_p2;
reg   [5:0] k_2_reg_831;
wire   [0:0] tmp_26_fu_583_p3;
reg   [0:0] ap_pipeline_reg_pp1_iter1_tmp_26_reg_836;
wire   [0:0] ap_CS_fsm_pp1_stage1;
wire   [31:0] Vect_H_q0;
wire   [0:0] ap_CS_fsm_pp1_stage5;
wire   [0:0] exitcond3_fu_610_p2;
reg   [0:0] exitcond3_reg_865;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [5:0] j_5_fu_616_p2;
reg   [5:0] j_5_reg_869;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond2_fu_644_p2;
reg   [0:0] exitcond2_reg_879;
wire   [0:0] ap_CS_fsm_pp3_stage0;
wire   [5:0] j_7_fu_650_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [4:0] tmp_33_fu_661_p1;
reg   [4:0] tmp_33_reg_893;
wire   [0:0] exitcond1_fu_677_p2;
wire   [0:0] ap_CS_fsm_state26;
wire   [8:0] j_9_fu_683_p2;
reg   [8:0] j_9_reg_902;
reg   [7:0] Vect_F_addr_1_reg_907;
wire   [0:0] tmp_34_fu_694_p3;
wire   [0:0] ap_CS_fsm_pp4_stage0;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_34_reg_912;
wire   [5:0] k_3_fu_702_p2;
reg   [5:0] k_3_reg_916;
wire   [0:0] tmp_37_fu_722_p3;
reg   [0:0] ap_pipeline_reg_pp4_iter1_tmp_37_reg_921;
wire   [0:0] ap_CS_fsm_pp4_stage1;
wire   [31:0] Vect_Up_q0;
wire   [0:0] exitcond_fu_749_p2;
wire   [0:0] ap_CS_fsm_pp5_stage0;
reg   [0:0] ap_pipeline_reg_pp5_iter1_exitcond_reg_945;
reg   [0:0] ap_pipeline_reg_pp5_iter2_exitcond_reg_945;
reg   [0:0] ap_pipeline_reg_pp5_iter3_exitcond_reg_945;
wire   [8:0] j_8_fu_755_p2;
reg   [8:0] j_8_reg_949;
reg   [7:0] y_addr_1_reg_959;
reg   [7:0] ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959;
reg   [7:0] ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959;
reg   [7:0] ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959;
reg   [31:0] y_load_reg_964;
wire   [31:0] grp_fu_419_p2;
reg   [31:0] tmp_24_reg_969;
reg    ap_enable_reg_pp5_iter3;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp2_iter1;
wire   [0:0] ap_CS_fsm_state22;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg   [7:0] Vect_H_address0;
reg    Vect_H_ce0;
reg    Vect_H_we0;
reg   [31:0] Vect_H_d0;
reg   [4:0] Vect_Dn_address0;
reg    Vect_Dn_ce0;
reg    Vect_Dn_we0;
wire   [31:0] Vect_Dn_q0;
reg   [7:0] Vect_Up_address0;
reg    Vect_Up_ce0;
reg    Vect_Up_we0;
reg   [31:0] Vect_Up_d0;
reg   [7:0] Vect_F_address0;
reg    Vect_F_ce0;
reg    Vect_F_we0;
reg   [31:0] Vect_F_d0;
reg   [8:0] i_reg_283;
wire   [0:0] exitcond6_fu_446_p2;
reg   [3:0] i_1_reg_294;
wire   [0:0] ap_CS_fsm_state46;
wire   [0:0] ap_CS_fsm_state3;
reg   [7:0] invdar_reg_306;
wire   [0:0] tmp_3_fu_486_p2;
wire   [0:0] exitcond5_fu_463_p2;
reg   [7:0] invdar1_reg_317;
wire   [0:0] tmp_5_fu_503_p2;
reg   [7:0] invdar2_reg_328;
reg   [8:0] j_reg_339;
wire   [0:0] ap_CS_fsm_state19;
reg   [5:0] k_phi_fu_355_p4;
reg   [5:0] j_1_phi_fu_366_p4;
reg   [8:0] j_3_reg_385;
wire   [0:0] ap_CS_fsm_state37;
wire   [0:0] ap_CS_fsm_state25;
reg   [5:0] k_1_phi_fu_401_p4;
reg   [8:0] j_4_phi_fu_412_p4;
wire   [63:0] tmp_fu_458_p1;
wire   [63:0] tmp_2_fu_481_p1;
wire   [63:0] tmp_4_fu_498_p1;
wire   [63:0] tmp_6_fu_515_p1;
wire   [63:0] tmp_9_fu_550_p1;
wire   [63:0] tmp_39_cast_fu_600_p1;
wire   [63:0] tmp_15_fu_605_p1;
wire   [63:0] tmp_10_fu_634_p1;
wire   [63:0] tmp_11_fu_639_p1;
wire   [63:0] tmp_18_fu_656_p1;
wire   [63:0] tmp_20_fu_672_p1;
wire   [63:0] tmp_21_fu_689_p1;
wire   [63:0] tmp_41_cast_fu_739_p1;
wire   [63:0] tmp_28_fu_744_p1;
wire   [63:0] tmp_23_fu_761_p1;
reg   [31:0] y_Addr_A_orig;
wire   [0:0] ap_CS_fsm_pp1_stage3;
wire   [0:0] ap_CS_fsm_pp4_stage3;
wire   [31:0] H_Addr_A_orig;
wire   [31:0] r_Addr_A_orig;
wire   [31:0] F_Addr_A_orig;
reg   [31:0] grp_fu_419_p0;
reg   [31:0] grp_fu_419_p1;
reg   [31:0] grp_fu_427_p0;
reg   [31:0] grp_fu_427_p1;
wire   [8:0] tmp_s_fu_526_p3;
wire   [8:0] k_cast9_fu_569_p1;
wire   [8:0] tmp_12_fu_573_p2;
wire   [9:0] tmp_14_cast_fu_591_p1;
wire   [9:0] tmp_31_fu_595_p2;
wire  signed [31:0] tmp_12_cast_fu_579_p1;
wire   [4:0] tmp_22_fu_622_p1;
wire   [7:0] tmp_1_fu_626_p3;
wire   [7:0] tmp_19_fu_665_p3;
wire   [8:0] k_1_cast2_fu_708_p1;
wire   [8:0] tmp_25_fu_712_p2;
wire   [9:0] tmp_27_cast_fu_730_p1;
wire   [9:0] tmp_38_fu_734_p2;
wire  signed [31:0] tmp_25_cast_fu_718_p1;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'b1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
end

filterbank_core_hbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Vect_H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Vect_H_address0),
    .ce0(Vect_H_ce0),
    .we0(Vect_H_we0),
    .d0(Vect_H_d0),
    .q0(Vect_H_q0)
);

filterbank_core_hcud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
Vect_Dn_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Vect_Dn_address0),
    .ce0(Vect_Dn_ce0),
    .we0(Vect_Dn_we0),
    .d0(Vect_H_q0),
    .q0(Vect_Dn_q0)
);

filterbank_core_hbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Vect_Up_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Vect_Up_address0),
    .ce0(Vect_Up_ce0),
    .we0(Vect_Up_we0),
    .d0(Vect_Up_d0),
    .q0(Vect_Up_q0)
);

filterbank_core_hbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Vect_F_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Vect_F_address0),
    .ce0(Vect_F_ce0),
    .we0(Vect_F_we0),
    .d0(Vect_F_d0),
    .q0(Vect_F_q0)
);

filterbank_core_hfYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
filterbank_core_hfYi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_419_p0),
    .din1(grp_fu_419_p1),
    .ce(1'b1),
    .dout(grp_fu_419_p2)
);

filterbank_core_hg8j #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
filterbank_core_hg8j_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_427_p0),
    .din1(grp_fu_427_p1),
    .ce(1'b1),
    .dout(grp_fu_427_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (~(1'b0 == tmp_13_fu_555_p3) | ((1'b0 == tmp_13_fu_555_p3) & ~(1'b0 == tmp_26_fu_583_p3))))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == exitcond4_fu_538_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage5) & ~(~(tmp_13_reg_827 == 1'b0) | ((tmp_13_reg_827 == 1'b0) & ~(1'b0 == tmp_26_reg_836))))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state8) & (1'b0 == exitcond4_fu_538_p2)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (~(tmp_13_reg_827 == 1'b0) | ((tmp_13_reg_827 == 1'b0) & ~(1'b0 == tmp_26_reg_836)))))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond3_fu_610_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == exitcond4_fu_538_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == exitcond3_fu_610_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == exitcond4_fu_538_p2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(1'b0 == exitcond3_fu_610_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond2_fu_644_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond2_fu_644_p2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~(1'b0 == exitcond2_fu_644_p2)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (~(1'b0 == tmp_34_fu_694_p3) | ((1'b0 == tmp_34_fu_694_p3) & ~(1'b0 == tmp_37_fu_722_p3))))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state26) & (1'b0 == exitcond1_fu_677_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage5) & ~(~(1'b0 == tmp_34_reg_912) | ((1'b0 == tmp_34_reg_912) & ~(1'b0 == tmp_37_reg_921))))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state26) & (1'b0 == exitcond1_fu_677_p2)) | ((1'b1 == ap_CS_fsm_pp4_stage5) & (~(1'b0 == tmp_34_reg_912) | ((1'b0 == tmp_34_reg_912) & ~(1'b0 == tmp_37_reg_921)))))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & ~(1'b0 == exitcond_fu_749_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state26) & ~(1'b0 == exitcond1_fu_677_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == exitcond_reg_945))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state26) & ~(1'b0 == exitcond1_fu_677_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == exitcond_reg_945)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end else if (((1'b1 == ap_CS_fsm_state26) & ~(1'b0 == exitcond1_fu_677_p2))) begin
            ap_enable_reg_pp5_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_294 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_1_reg_294 <= i_3_reg_778;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond6_fu_446_p2))) begin
        i_reg_283 <= i_2_fu_452_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_283 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == tmp_3_fu_486_p2))) begin
        invdar1_reg_317 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == tmp_5_fu_503_p2))) begin
        invdar1_reg_317 <= indvarinc1_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_5_fu_503_p2))) begin
        invdar2_reg_328 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == tmp_7_fu_520_p2))) begin
        invdar2_reg_328 <= indvarinc2_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == exitcond5_fu_463_p2))) begin
        invdar_reg_306 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == tmp_3_fu_486_p2))) begin
        invdar_reg_306 <= indvarinc_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == exitcond4_fu_538_p2))) begin
        j_1_reg_362 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_865))) begin
        j_1_reg_362 <= j_5_reg_869;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_2_reg_374 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond2_fu_644_p2))) begin
        j_2_reg_374 <= j_7_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_3_reg_385 <= ap_const_lv9_0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        j_3_reg_385 <= j_9_reg_902;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & ~(1'b0 == exitcond1_fu_677_p2))) begin
        j_4_reg_408 <= ap_const_lv9_0;
    end else if (((1'b0 == exitcond_reg_945) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        j_4_reg_408 <= j_8_reg_949;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_reg_339 <= j_6_reg_817;
    end else if (((1'b1 == ap_CS_fsm_state7) & ~(1'b0 == tmp_7_fu_520_p2))) begin
        j_reg_339 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'b0 == exitcond1_fu_677_p2))) begin
        k_1_reg_397 <= ap_const_lv6_0;
    end else if (((1'b0 == tmp_34_reg_912) & (1'b0 == tmp_37_reg_921) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        k_1_reg_397 <= k_3_reg_916;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == exitcond4_fu_538_p2))) begin
        k_reg_351 <= ap_const_lv6_0;
    end else if (((tmp_13_reg_827 == 1'b0) & (1'b0 == tmp_26_reg_836) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        k_reg_351 <= k_2_reg_831;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'b0 == exitcond1_fu_677_p2))) begin
        Vect_F_addr_1_reg_907 <= tmp_21_fu_689_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == exitcond4_fu_538_p2))) begin
        Vect_H_addr_1_reg_822 <= tmp_9_fu_550_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_tmp_13_reg_827 <= tmp_13_reg_827;
        ap_pipeline_reg_pp1_iter1_tmp_26_reg_836 <= tmp_26_reg_836;
        tmp_13_reg_827 <= k_phi_fu_355_p4[ap_const_lv32_5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_tmp_34_reg_912 <= tmp_34_reg_912;
        ap_pipeline_reg_pp4_iter1_tmp_37_reg_921 <= tmp_37_reg_921;
        tmp_34_reg_912 <= k_1_phi_fu_401_p4[ap_const_lv32_5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage0)) begin
        ap_pipeline_reg_pp5_iter1_exitcond_reg_945 <= exitcond_reg_945;
        ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959 <= y_addr_1_reg_959;
        ap_pipeline_reg_pp5_iter2_exitcond_reg_945 <= ap_pipeline_reg_pp5_iter1_exitcond_reg_945;
        ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959 <= ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959;
        ap_pipeline_reg_pp5_iter3_exitcond_reg_945 <= ap_pipeline_reg_pp5_iter2_exitcond_reg_945;
        ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959 <= ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959;
        exitcond_reg_945 <= exitcond_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp3_stage0)) begin
        exitcond2_reg_879 <= exitcond2_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp2_stage0)) begin
        exitcond3_reg_865 <= exitcond3_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_3_reg_778 <= i_3_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        j_5_reg_869 <= j_5_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_6_reg_817 <= j_6_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_8_reg_949 <= j_8_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_9_reg_902 <= j_9_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        k_2_reg_831 <= k_2_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        k_3_reg_916 <= k_3_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_enable_reg_pp1_iter0) & (tmp_13_reg_827 == 1'b0) & (1'b0 == tmp_26_reg_836)) | ((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == tmp_34_reg_912) & (1'b0 == tmp_37_reg_921)))) begin
        reg_435 <= grp_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b0 == tmp_34_reg_912) & (1'b0 == tmp_37_reg_921) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == exitcond_reg_945)))) begin
        reg_440 <= Vect_F_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter3) & (1'b0 == ap_pipeline_reg_pp5_iter2_exitcond_reg_945))) begin
        tmp_24_reg_969 <= grp_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == tmp_13_fu_555_p3))) begin
        tmp_26_reg_836 <= tmp_12_fu_573_p2[ap_const_lv32_8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == exitcond2_fu_644_p2))) begin
        tmp_33_reg_893 <= tmp_33_fu_661_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~(1'b0 == tmp_7_fu_520_p2))) begin
        tmp_37_cast_reg_807[8 : 5] <= tmp_37_cast_fu_534_p1[8 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == tmp_34_fu_694_p3))) begin
        tmp_37_reg_921 <= tmp_25_fu_712_p2[ap_const_lv32_8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == exitcond_fu_749_p2))) begin
        y_addr_1_reg_959 <= tmp_23_fu_761_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter0) & (1'b0 == exitcond_reg_945))) begin
        y_load_reg_964 <= y_Dout_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        F_EN_A = 1'b1;
    end else begin
        F_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        H_EN_A = 1'b1;
    end else begin
        H_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0))) begin
        Vect_Dn_address0 = tmp_18_fu_656_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        Vect_Dn_address0 = tmp_11_fu_639_p1;
    end else begin
        Vect_Dn_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)))) begin
        Vect_Dn_ce0 = 1'b1;
    end else begin
        Vect_Dn_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_865))) begin
        Vect_Dn_we0 = 1'b1;
    end else begin
        Vect_Dn_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        Vect_F_address0 = tmp_23_fu_761_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        Vect_F_address0 = Vect_F_addr_1_reg_907;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Vect_F_address0 = tmp_6_fu_515_p1;
    end else begin
        Vect_F_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b1 == ap_enable_reg_pp4_iter0)) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3)))) begin
        Vect_F_ce0 = 1'b1;
    end else begin
        Vect_F_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Vect_F_d0 = grp_fu_419_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Vect_F_d0 = ap_const_lv32_0;
    end else begin
        Vect_F_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_34_reg_912) & (1'b0 == ap_pipeline_reg_pp4_iter1_tmp_37_reg_921)))) begin
        Vect_F_we0 = 1'b1;
    end else begin
        Vect_F_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        Vect_H_address0 = tmp_10_fu_634_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage3)))) begin
        Vect_H_address0 = Vect_H_addr_1_reg_822;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Vect_H_address0 = tmp_2_fu_481_p1;
    end else begin
        Vect_H_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0)) | ((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage3)))) begin
        Vect_H_ce0 = 1'b1;
    end else begin
        Vect_H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        Vect_H_d0 = grp_fu_419_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Vect_H_d0 = ap_const_lv32_0;
    end else begin
        Vect_H_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_pipeline_reg_pp1_iter1_tmp_13_reg_827) & (1'b0 == ap_pipeline_reg_pp1_iter1_tmp_26_reg_836)))) begin
        Vect_H_we0 = 1'b1;
    end else begin
        Vect_H_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        Vect_Up_address0 = tmp_28_fu_744_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        Vect_Up_address0 = tmp_20_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Vect_Up_address0 = tmp_4_fu_498_p1;
    end else begin
        Vect_Up_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)))) begin
        Vect_Up_ce0 = 1'b1;
    end else begin
        Vect_Up_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        Vect_Up_d0 = Vect_Dn_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Vect_Up_d0 = ap_const_lv32_0;
    end else begin
        Vect_Up_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond2_reg_879)))) begin
        Vect_Up_we0 = 1'b1;
    end else begin
        Vect_Up_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == exitcond5_fu_463_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == exitcond5_fu_463_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        grp_fu_419_p0 = y_load_reg_964;
    end else if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_419_p0 = Vect_F_q0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
        grp_fu_419_p0 = Vect_H_q0;
    end else begin
        grp_fu_419_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        grp_fu_419_p1 = reg_440;
    end else if ((((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5)))) begin
        grp_fu_419_p1 = reg_435;
    end else begin
        grp_fu_419_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_427_p0 = F_Dout_A;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        grp_fu_427_p0 = H_Dout_A;
    end else begin
        grp_fu_427_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_427_p1 = Vect_Up_q0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        grp_fu_427_p1 = r_Dout_A;
    end else begin
        grp_fu_427_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond3_reg_865))) begin
        j_1_phi_fu_366_p4 = j_5_reg_869;
    end else begin
        j_1_phi_fu_366_p4 = j_1_reg_362;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond_reg_945) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        j_4_phi_fu_412_p4 = j_8_reg_949;
    end else begin
        j_4_phi_fu_412_p4 = j_4_reg_408;
    end
end

always @ (*) begin
    if (((1'b0 == tmp_34_reg_912) & (1'b0 == tmp_37_reg_921) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter1))) begin
        k_1_phi_fu_401_p4 = k_3_reg_916;
    end else begin
        k_1_phi_fu_401_p4 = k_1_reg_397;
    end
end

always @ (*) begin
    if (((tmp_13_reg_827 == 1'b0) & (1'b0 == tmp_26_reg_836) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        k_phi_fu_355_p4 = k_2_reg_831;
    end else begin
        k_phi_fu_355_p4 = k_reg_351;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        r_EN_A = 1'b1;
    end else begin
        r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3))) begin
        y_Addr_A_orig = ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959;
    end else if (((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        y_Addr_A_orig = tmp_23_fu_761_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_Addr_A_orig = tmp_fu_458_p1;
    end else begin
        y_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3))) begin
        y_Din_A = tmp_24_reg_969;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_Din_A = ap_const_lv32_0;
    end else begin
        y_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_enable_reg_pp5_iter0) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3)))) begin
        y_EN_A = 1'b1;
    end else begin
        y_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond6_fu_446_p2)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3) & (1'b0 == ap_pipeline_reg_pp5_iter3_exitcond_reg_945)))) begin
        y_WEN_A = ap_const_lv4_F;
    end else begin
        y_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((1'b0 == exitcond6_fu_446_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(1'b0 == exitcond5_fu_463_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(1'b0 == tmp_3_fu_486_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == tmp_5_fu_503_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (~(1'b0 == tmp_7_fu_520_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (~(1'b0 == exitcond4_fu_538_p2)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter0) & (~(1'b0 == tmp_13_fu_555_p3) | ((1'b0 == tmp_13_fu_555_p3) & ~(1'b0 == tmp_26_fu_583_p3))) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage2;
        end
        ap_ST_fsm_pp1_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage3;
        end
        ap_ST_fsm_pp1_stage3 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage3) & ~(1'b1 == ap_enable_reg_pp1_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage5;
        end
        ap_ST_fsm_pp1_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond3_fu_610_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond2_fu_644_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (~(1'b0 == exitcond1_fu_677_p2)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter0) & (~(1'b0 == tmp_34_fu_694_p3) | ((1'b0 == tmp_34_fu_694_p3) & ~(1'b0 == tmp_37_fu_722_p3))) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage2;
        end
        ap_ST_fsm_pp4_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage3;
        end
        ap_ST_fsm_pp4_stage3 : begin
            if (~((1'b1 == ap_enable_reg_pp4_iter1) & (1'b1 == ap_CS_fsm_pp4_stage3) & ~(1'b1 == ap_enable_reg_pp4_iter0))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage5;
        end
        ap_ST_fsm_pp4_stage5 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == exitcond_fu_749_p2) & ~(1'b1 == ap_enable_reg_pp5_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3) & ~(1'b1 == ap_enable_reg_pp5_iter2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F_Addr_A = F_Addr_A_orig << ap_const_lv32_2;

assign F_Addr_A_orig = tmp_41_cast_fu_739_p1;

assign F_Clk_A = ap_clk;

assign F_Din_A = ap_const_lv32_0;

assign F_Rst_A = ap_rst;

assign F_WEN_A = ap_const_lv4_0;

assign H_Addr_A = H_Addr_A_orig << ap_const_lv32_2;

assign H_Addr_A_orig = tmp_39_cast_fu_600_p1;

assign H_Clk_A = ap_clk;

assign H_Din_A = ap_const_lv32_0;

assign H_Rst_A = ap_rst;

assign H_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state37 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state46 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign exitcond1_fu_677_p2 = ((j_3_reg_385 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond2_fu_644_p2 = ((j_2_reg_374 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond3_fu_610_p2 = ((j_1_phi_fu_366_p4 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond4_fu_538_p2 = ((j_reg_339 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond5_fu_463_p2 = ((i_1_reg_294 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond6_fu_446_p2 = ((i_reg_283 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_749_p2 = ((j_4_phi_fu_412_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign i_2_fu_452_p2 = (i_reg_283 + ap_const_lv9_1);

assign i_3_fu_469_p2 = (i_1_reg_294 + ap_const_lv4_1);

assign indvarinc1_fu_492_p2 = (invdar1_reg_317 + ap_const_lv8_1);

assign indvarinc2_fu_509_p2 = (invdar2_reg_328 + ap_const_lv8_1);

assign indvarinc_fu_475_p2 = (invdar_reg_306 + ap_const_lv8_1);

assign j_5_fu_616_p2 = (j_1_phi_fu_366_p4 + ap_const_lv6_1);

assign j_6_fu_544_p2 = (j_reg_339 + ap_const_lv9_1);

assign j_7_fu_650_p2 = (j_2_reg_374 + ap_const_lv6_1);

assign j_8_fu_755_p2 = (j_4_phi_fu_412_p4 + ap_const_lv9_1);

assign j_9_fu_683_p2 = (j_3_reg_385 + ap_const_lv9_1);

assign k_1_cast2_fu_708_p1 = k_1_phi_fu_401_p4;

assign k_2_fu_563_p2 = (k_phi_fu_355_p4 + ap_const_lv6_1);

assign k_3_fu_702_p2 = (k_1_phi_fu_401_p4 + ap_const_lv6_1);

assign k_cast9_fu_569_p1 = k_phi_fu_355_p4;

assign r_Addr_A = r_Addr_A_orig << ap_const_lv32_2;

assign r_Addr_A_orig = tmp_15_fu_605_p1;

assign r_Clk_A = ap_clk;

assign r_Din_A = ap_const_lv32_0;

assign r_Rst_A = ap_rst;

assign r_WEN_A = ap_const_lv4_0;

assign tmp_10_fu_634_p1 = tmp_1_fu_626_p3;

assign tmp_11_fu_639_p1 = j_1_reg_362;

assign tmp_12_cast_fu_579_p1 = $signed(tmp_12_fu_573_p2);

assign tmp_12_fu_573_p2 = (j_reg_339 - k_cast9_fu_569_p1);

assign tmp_13_fu_555_p3 = k_phi_fu_355_p4[ap_const_lv32_5];

assign tmp_14_cast_fu_591_p1 = k_phi_fu_355_p4;

assign tmp_15_fu_605_p1 = $unsigned(tmp_12_cast_fu_579_p1);

assign tmp_18_fu_656_p1 = j_2_reg_374;

assign tmp_19_fu_665_p3 = {{tmp_33_reg_893}, {ap_const_lv3_0}};

assign tmp_1_fu_626_p3 = {{tmp_22_fu_622_p1}, {ap_const_lv3_0}};

assign tmp_20_fu_672_p1 = tmp_19_fu_665_p3;

assign tmp_21_fu_689_p1 = j_3_reg_385;

assign tmp_22_fu_622_p1 = j_1_phi_fu_366_p4[4:0];

assign tmp_23_fu_761_p1 = j_4_phi_fu_412_p4;

assign tmp_25_cast_fu_718_p1 = $signed(tmp_25_fu_712_p2);

assign tmp_25_fu_712_p2 = (j_3_reg_385 - k_1_cast2_fu_708_p1);

assign tmp_26_fu_583_p3 = tmp_12_fu_573_p2[ap_const_lv32_8];

assign tmp_27_cast_fu_730_p1 = k_1_phi_fu_401_p4;

assign tmp_28_fu_744_p1 = $unsigned(tmp_25_cast_fu_718_p1);

assign tmp_2_fu_481_p1 = invdar_reg_306;

assign tmp_31_fu_595_p2 = (tmp_37_cast_reg_807 + tmp_14_cast_fu_591_p1);

assign tmp_33_fu_661_p1 = j_2_reg_374[4:0];

assign tmp_34_fu_694_p3 = k_1_phi_fu_401_p4[ap_const_lv32_5];

assign tmp_37_cast_fu_534_p1 = tmp_s_fu_526_p3;

assign tmp_37_fu_722_p3 = tmp_25_fu_712_p2[ap_const_lv32_8];

assign tmp_38_fu_734_p2 = (tmp_37_cast_reg_807 + tmp_27_cast_fu_730_p1);

assign tmp_39_cast_fu_600_p1 = tmp_31_fu_595_p2;

assign tmp_3_fu_486_p2 = ((invdar_reg_306 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign tmp_41_cast_fu_739_p1 = tmp_38_fu_734_p2;

assign tmp_4_fu_498_p1 = invdar1_reg_317;

assign tmp_5_fu_503_p2 = ((invdar1_reg_317 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign tmp_6_fu_515_p1 = invdar2_reg_328;

assign tmp_7_fu_520_p2 = ((invdar2_reg_328 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign tmp_9_fu_550_p1 = j_reg_339;

assign tmp_fu_458_p1 = i_reg_283;

assign tmp_s_fu_526_p3 = {{i_1_reg_294}, {ap_const_lv5_0}};

assign y_Addr_A = y_Addr_A_orig << ap_const_lv32_2;

assign y_Clk_A = ap_clk;

assign y_Rst_A = ap_rst;

always @ (posedge ap_clk) begin
    tmp_37_cast_reg_807[4:0] <= 5'b00000;
    tmp_37_cast_reg_807[9] <= 1'b0;
end

endmodule //filterbank_core_hwa
