-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filterbank_core_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    r_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_EN_A : OUT STD_LOGIC;
    r_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    r_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    r_Clk_A : OUT STD_LOGIC;
    r_Rst_A : OUT STD_LOGIC;
    y_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_EN_A : OUT STD_LOGIC;
    y_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    y_Clk_A : OUT STD_LOGIC;
    y_Rst_A : OUT STD_LOGIC;
    H_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    H_EN_A : OUT STD_LOGIC;
    H_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    H_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    H_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    H_Clk_A : OUT STD_LOGIC;
    H_Rst_A : OUT STD_LOGIC;
    F_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_EN_A : OUT STD_LOGIC;
    F_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    F_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    F_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    F_Clk_A : OUT STD_LOGIC;
    F_Rst_A : OUT STD_LOGIC );
end;


architecture behav of filterbank_core_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "filterbank_core_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.973000,HLS_SYN_LAT=428915,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=5,HLS_SYN_FF=699,HLS_SYN_LUT=974}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000100000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000001000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000010000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000100000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (29 downto 0) := "000000000001000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (29 downto 0) := "000000000010000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000100000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (29 downto 0) := "000000001000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (29 downto 0) := "000000010000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (29 downto 0) := "000000100000000000000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (29 downto 0) := "000001000000000000000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (29 downto 0) := "000010000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (29 downto 0) := "000100000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (29 downto 0) := "001000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (29 downto 0) := "010000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_reg_351 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_362 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_2_reg_374 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_1_reg_397 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_4_reg_408 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_13_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage4 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal tmp_34_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_921 : STD_LOGIC_VECTOR (0 downto 0);
    signal Vect_F_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage5 : signal is "none";
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal exitcond_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_452_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_3_fu_469_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_778 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal indvarinc_fu_475_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal indvarinc1_fu_492_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal indvarinc2_fu_509_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_37_cast_fu_534_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_cast_reg_807 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal j_6_fu_544_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_6_reg_817 : STD_LOGIC_VECTOR (8 downto 0);
    signal Vect_H_addr_1_reg_822 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_pipeline_reg_pp1_iter1_tmp_13_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_2_fu_563_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_2_reg_831 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_26_fu_583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_tmp_26_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal Vect_H_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal exitcond3_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_865 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal j_5_fu_616_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_reg_869 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal exitcond2_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal j_7_fu_650_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal tmp_33_fu_661_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_reg_893 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal j_9_fu_683_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_9_reg_902 : STD_LOGIC_VECTOR (8 downto 0);
    signal Vect_F_addr_1_reg_907 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_694_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_pipeline_reg_pp4_iter1_tmp_34_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_3_fu_702_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_3_reg_916 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_37_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp4_iter1_tmp_37_reg_921 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal Vect_Up_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_pipeline_reg_pp5_iter1_exitcond_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp5_iter2_exitcond_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp5_iter3_exitcond_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_8_fu_755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_8_reg_949 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_addr_1_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_load_reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp5_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal Vect_H_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Vect_H_ce0 : STD_LOGIC;
    signal Vect_H_we0 : STD_LOGIC;
    signal Vect_H_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vect_Dn_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Vect_Dn_ce0 : STD_LOGIC;
    signal Vect_Dn_we0 : STD_LOGIC;
    signal Vect_Dn_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vect_Up_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Vect_Up_ce0 : STD_LOGIC;
    signal Vect_Up_we0 : STD_LOGIC;
    signal Vect_Up_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vect_F_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Vect_F_ce0 : STD_LOGIC;
    signal Vect_F_we0 : STD_LOGIC;
    signal Vect_F_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_283 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond6_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_294 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal invdar_reg_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar1_reg_317 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal invdar2_reg_328 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_339 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal k_phi_fu_355_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_phi_fu_366_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_3_reg_385 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal k_1_phi_fu_401_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_4_phi_fu_412_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_cast_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_cast_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal H_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal r_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal F_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_427_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_526_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_cast9_fu_569_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_cast_fu_591_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_595_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_cast_fu_579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_622_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_626_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_665_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_1_cast2_fu_708_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_712_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_cast_fu_730_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_fu_734_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_cast_fu_718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (29 downto 0);

    component filterbank_core_hfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filterbank_core_hg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filterbank_core_hbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filterbank_core_hcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Vect_H_U : component filterbank_core_hbkb
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Vect_H_address0,
        ce0 => Vect_H_ce0,
        we0 => Vect_H_we0,
        d0 => Vect_H_d0,
        q0 => Vect_H_q0);

    Vect_Dn_U : component filterbank_core_hcud
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Vect_Dn_address0,
        ce0 => Vect_Dn_ce0,
        we0 => Vect_Dn_we0,
        d0 => Vect_H_q0,
        q0 => Vect_Dn_q0);

    Vect_Up_U : component filterbank_core_hbkb
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Vect_Up_address0,
        ce0 => Vect_Up_ce0,
        we0 => Vect_Up_we0,
        d0 => Vect_Up_d0,
        q0 => Vect_Up_q0);

    Vect_F_U : component filterbank_core_hbkb
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Vect_F_address0,
        ce0 => Vect_F_ce0,
        we0 => Vect_F_we0,
        d0 => Vect_F_d0,
        q0 => Vect_F_q0);

    filterbank_core_hfYi_U1 : component filterbank_core_hfYi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_419_p0,
        din1 => grp_fu_419_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_419_p2);

    filterbank_core_hg8j_U2 : component filterbank_core_hg8j
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_427_p0,
        din1 => grp_fu_427_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_427_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (not((ap_const_lv1_0 = tmp_13_fu_555_p3)) or ((ap_const_lv1_0 = tmp_13_fu_555_p3) and not((ap_const_lv1_0 = tmp_26_fu_583_p3)))))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond4_fu_538_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage5) and not((not((tmp_13_reg_827 = ap_const_lv1_0)) or ((tmp_13_reg_827 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_26_reg_836))))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond4_fu_538_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage5) and (not((tmp_13_reg_827 = ap_const_lv1_0)) or ((tmp_13_reg_827 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_26_reg_836))))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond3_fu_610_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = exitcond4_fu_538_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond3_fu_610_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = exitcond4_fu_538_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond3_fu_610_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond2_fu_644_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond2_fu_644_p2))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond2_fu_644_p2))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (not((ap_const_lv1_0 = tmp_34_fu_694_p3)) or ((ap_const_lv1_0 = tmp_34_fu_694_p3) and not((ap_const_lv1_0 = tmp_37_fu_722_p3)))))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond1_fu_677_p2))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage5) and not((not((ap_const_lv1_0 = tmp_34_reg_912)) or ((ap_const_lv1_0 = tmp_34_reg_912) and not((ap_const_lv1_0 = tmp_37_reg_921))))))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond1_fu_677_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage5) and (not((ap_const_lv1_0 = tmp_34_reg_912)) or ((ap_const_lv1_0 = tmp_34_reg_912) and not((ap_const_lv1_0 = tmp_37_reg_921))))))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and not((ap_const_lv1_0 = exitcond_fu_749_p2)))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state26) and not((ap_const_lv1_0 = exitcond1_fu_677_p2)))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_lv1_0 = exitcond_reg_945))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state26) and not((ap_const_lv1_0 = exitcond1_fu_677_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and not((ap_const_lv1_0 = exitcond_reg_945))))) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1)) then 
                    ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state26) and not((ap_const_lv1_0 = exitcond1_fu_677_p2)))) then 
                    ap_enable_reg_pp5_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_1_reg_294 <= ap_const_lv4_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
                i_1_reg_294 <= i_3_reg_778;
            end if; 
        end if;
    end process;

    i_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond6_fu_446_p2))) then 
                i_reg_283 <= i_2_fu_452_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_283 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    invdar1_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = tmp_3_fu_486_p2)))) then 
                invdar1_reg_317 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_5_fu_503_p2))) then 
                invdar1_reg_317 <= indvarinc1_fu_492_p2;
            end if; 
        end if;
    end process;

    invdar2_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_lv1_0 = tmp_5_fu_503_p2)))) then 
                invdar2_reg_328 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_7_fu_520_p2))) then 
                invdar2_reg_328 <= indvarinc2_fu_509_p2;
            end if; 
        end if;
    end process;

    invdar_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond5_fu_463_p2))) then 
                invdar_reg_306 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = tmp_3_fu_486_p2))) then 
                invdar_reg_306 <= indvarinc_fu_475_p2;
            end if; 
        end if;
    end process;

    j_1_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = exitcond4_fu_538_p2)))) then 
                j_1_reg_362 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond3_reg_865))) then 
                j_1_reg_362 <= j_5_reg_869;
            end if; 
        end if;
    end process;

    j_2_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
                j_2_reg_374 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond2_fu_644_p2))) then 
                j_2_reg_374 <= j_7_fu_650_p2;
            end if; 
        end if;
    end process;

    j_3_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
                j_3_reg_385 <= ap_const_lv9_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
                j_3_reg_385 <= j_9_reg_902;
            end if; 
        end if;
    end process;

    j_4_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state26) and not((ap_const_lv1_0 = exitcond1_fu_677_p2)))) then 
                j_4_reg_408 <= ap_const_lv9_0;
            elsif (((ap_const_lv1_0 = exitcond_reg_945) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1))) then 
                j_4_reg_408 <= j_8_reg_949;
            end if; 
        end if;
    end process;

    j_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                j_reg_339 <= j_6_reg_817;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_7_fu_520_p2)))) then 
                j_reg_339 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    k_1_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond1_fu_677_p2))) then 
                k_1_reg_397 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_0 = tmp_34_reg_912) and (ap_const_lv1_0 = tmp_37_reg_921) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
                k_1_reg_397 <= k_3_reg_916;
            end if; 
        end if;
    end process;

    k_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond4_fu_538_p2))) then 
                k_reg_351 <= ap_const_lv6_0;
            elsif (((tmp_13_reg_827 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_26_reg_836) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
                k_reg_351 <= k_2_reg_831;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = exitcond1_fu_677_p2))) then
                Vect_F_addr_1_reg_907 <= tmp_21_fu_689_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond4_fu_538_p2))) then
                Vect_H_addr_1_reg_822 <= tmp_9_fu_550_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_tmp_13_reg_827 <= tmp_13_reg_827;
                ap_pipeline_reg_pp1_iter1_tmp_26_reg_836 <= tmp_26_reg_836;
                tmp_13_reg_827 <= k_phi_fu_355_p4(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                ap_pipeline_reg_pp4_iter1_tmp_34_reg_912 <= tmp_34_reg_912;
                ap_pipeline_reg_pp4_iter1_tmp_37_reg_921 <= tmp_37_reg_921;
                tmp_34_reg_912 <= k_1_phi_fu_401_p4(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then
                ap_pipeline_reg_pp5_iter1_exitcond_reg_945 <= exitcond_reg_945;
                ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959 <= y_addr_1_reg_959;
                ap_pipeline_reg_pp5_iter2_exitcond_reg_945 <= ap_pipeline_reg_pp5_iter1_exitcond_reg_945;
                ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959 <= ap_pipeline_reg_pp5_iter1_y_addr_1_reg_959;
                ap_pipeline_reg_pp5_iter3_exitcond_reg_945 <= ap_pipeline_reg_pp5_iter2_exitcond_reg_945;
                ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959 <= ap_pipeline_reg_pp5_iter2_y_addr_1_reg_959;
                exitcond_reg_945 <= exitcond_fu_749_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond2_reg_879 <= exitcond2_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond3_reg_865 <= exitcond3_fu_610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                i_3_reg_778 <= i_3_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then
                j_5_reg_869 <= j_5_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then
                j_6_reg_817 <= j_6_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then
                j_8_reg_949 <= j_8_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state26))) then
                j_9_reg_902 <= j_9_fu_683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                k_2_reg_831 <= k_2_fu_563_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then
                k_3_reg_916 <= k_3_fu_702_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage4) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (tmp_13_reg_827 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_26_reg_836)) or ((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = tmp_34_reg_912) and (ap_const_lv1_0 = tmp_37_reg_921)))) then
                reg_435 <= grp_fu_427_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_0 = tmp_34_reg_912) and (ap_const_lv1_0 = tmp_37_reg_921) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = exitcond_reg_945)))) then
                reg_440 <= Vect_F_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp5_iter2_exitcond_reg_945))) then
                tmp_24_reg_969 <= grp_fu_419_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = tmp_13_fu_555_p3))) then
                tmp_26_reg_836 <= tmp_12_fu_573_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond2_fu_644_p2))) then
                tmp_33_reg_893 <= tmp_33_fu_661_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_7_fu_520_p2)))) then
                    tmp_37_cast_reg_807(8 downto 5) <= tmp_37_cast_fu_534_p1(8 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_lv1_0 = tmp_34_fu_694_p3))) then
                tmp_37_reg_921 <= tmp_25_fu_712_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_lv1_0 = exitcond_fu_749_p2))) then
                y_addr_1_reg_959 <= tmp_23_fu_761_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_0 = exitcond_reg_945))) then
                y_load_reg_964 <= y_Dout_A;
            end if;
        end if;
    end process;
    tmp_37_cast_reg_807(4 downto 0) <= "00000";
    tmp_37_cast_reg_807(9) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp1_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, tmp_7_fu_520_p2, exitcond4_fu_538_p2, tmp_13_fu_555_p3, tmp_26_fu_583_p3, exitcond3_fu_610_p2, ap_enable_reg_pp2_iter0, exitcond2_fu_644_p2, ap_enable_reg_pp3_iter0, exitcond1_fu_677_p2, tmp_34_fu_694_p3, tmp_37_fu_722_p3, exitcond_fu_749_p2, ap_enable_reg_pp5_iter3, ap_enable_reg_pp1_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, exitcond6_fu_446_p2, tmp_3_fu_486_p2, exitcond5_fu_463_p2, tmp_5_fu_503_p2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp4_stage3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = exitcond6_fu_446_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_463_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_lv1_0 = tmp_3_fu_486_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (not((ap_const_lv1_0 = tmp_5_fu_503_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (not((ap_const_lv1_0 = tmp_7_fu_520_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_538_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (not((ap_const_lv1_0 = tmp_13_fu_555_p3)) or ((ap_const_lv1_0 = tmp_13_fu_555_p3) and not((ap_const_lv1_0 = tmp_26_fu_583_p3)))) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
            when ap_ST_fsm_pp1_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
            when ap_ST_fsm_pp1_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage3) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
            when ap_ST_fsm_pp1_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond3_fu_610_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond2_fu_644_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_677_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (not((ap_const_lv1_0 = tmp_34_fu_694_p3)) or ((ap_const_lv1_0 = tmp_34_fu_694_p3) and not((ap_const_lv1_0 = tmp_37_fu_722_p3)))) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
            when ap_ST_fsm_pp4_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
            when ap_ST_fsm_pp4_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3) and not((ap_const_logic_1 = ap_enable_reg_pp4_iter0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_pp4_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
            when ap_ST_fsm_pp4_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_pp5_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and not((ap_const_lv1_0 = exitcond_fu_749_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp5_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_pp5_stage1 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3) and not((ap_const_logic_1 = ap_enable_reg_pp5_iter2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F_Addr_A <= std_logic_vector(shift_left(unsigned(F_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    F_Addr_A_orig <= tmp_41_cast_fu_739_p1(32 - 1 downto 0);
    F_Clk_A <= ap_clk;
    F_Din_A <= ap_const_lv32_0;

    F_EN_A_assign_proc : process(ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            F_EN_A <= ap_const_logic_1;
        else 
            F_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    F_Rst_A <= ap_rst;
    F_WEN_A <= ap_const_lv4_0;
    H_Addr_A <= std_logic_vector(shift_left(unsigned(H_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    H_Addr_A_orig <= tmp_39_cast_fu_600_p1(32 - 1 downto 0);
    H_Clk_A <= ap_clk;
    H_Din_A <= ap_const_lv32_0;

    H_EN_A_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then 
            H_EN_A <= ap_const_logic_1;
        else 
            H_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    H_Rst_A <= ap_rst;
    H_WEN_A <= ap_const_lv4_0;

    Vect_Dn_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, tmp_11_fu_639_p1, tmp_18_fu_656_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            Vect_Dn_address0 <= tmp_18_fu_656_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            Vect_Dn_address0 <= tmp_11_fu_639_p1(5 - 1 downto 0);
        else 
            Vect_Dn_address0 <= "XXXXX";
        end if; 
    end process;


    Vect_Dn_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then 
            Vect_Dn_ce0 <= ap_const_logic_1;
        else 
            Vect_Dn_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_Dn_we0_assign_proc : process(exitcond3_reg_865, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond3_reg_865)))) then 
            Vect_Dn_we0 <= ap_const_logic_1;
        else 
            Vect_Dn_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_F_address0_assign_proc : process(ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state7, Vect_F_addr_1_reg_907, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp4_iter1, tmp_6_fu_515_p1, tmp_23_fu_761_p1, ap_CS_fsm_pp4_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then 
            Vect_F_address0 <= tmp_23_fu_761_p1(8 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)))) then 
            Vect_F_address0 <= Vect_F_addr_1_reg_907;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            Vect_F_address0 <= tmp_6_fu_515_p1(8 - 1 downto 0);
        else 
            Vect_F_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Vect_F_ce0_assign_proc : process(ap_CS_fsm_pp4_stage4, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state7, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp4_stage4) and (ap_const_logic_1 = ap_enable_reg_pp4_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3)))) then 
            Vect_F_ce0 <= ap_const_logic_1;
        else 
            Vect_F_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_F_d0_assign_proc : process(ap_CS_fsm_state7, grp_fu_419_p2, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3))) then 
            Vect_F_d0 <= grp_fu_419_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            Vect_F_d0 <= ap_const_lv32_0;
        else 
            Vect_F_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Vect_F_we0_assign_proc : process(ap_CS_fsm_state7, ap_pipeline_reg_pp4_iter1_tmp_34_reg_912, ap_pipeline_reg_pp4_iter1_tmp_37_reg_921, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp4_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_34_reg_912) and (ap_const_lv1_0 = ap_pipeline_reg_pp4_iter1_tmp_37_reg_921)))) then 
            Vect_F_we0 <= ap_const_logic_1;
        else 
            Vect_F_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_H_address0_assign_proc : process(ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter0, ap_CS_fsm_state5, Vect_H_addr_1_reg_822, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter1, tmp_2_fu_481_p1, tmp_10_fu_634_p1, ap_CS_fsm_pp1_stage3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            Vect_H_address0 <= tmp_10_fu_634_p1(8 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage4) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage3)))) then 
            Vect_H_address0 <= Vect_H_addr_1_reg_822;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            Vect_H_address0 <= tmp_2_fu_481_p1(8 - 1 downto 0);
        else 
            Vect_H_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Vect_H_ce0_assign_proc : process(ap_CS_fsm_pp1_stage4, ap_enable_reg_pp1_iter0, ap_CS_fsm_state5, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage4) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage3)))) then 
            Vect_H_ce0 <= ap_const_logic_1;
        else 
            Vect_H_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_H_d0_assign_proc : process(ap_CS_fsm_state5, grp_fu_419_p2, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage3))) then 
            Vect_H_d0 <= grp_fu_419_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            Vect_H_d0 <= ap_const_lv32_0;
        else 
            Vect_H_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Vect_H_we0_assign_proc : process(ap_CS_fsm_state5, ap_pipeline_reg_pp1_iter1_tmp_13_reg_827, ap_pipeline_reg_pp1_iter1_tmp_26_reg_836, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_tmp_13_reg_827) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter1_tmp_26_reg_836)))) then 
            Vect_H_we0 <= ap_const_logic_1;
        else 
            Vect_H_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_Up_address0_assign_proc : process(ap_enable_reg_pp4_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp3_iter1, tmp_4_fu_498_p1, tmp_20_fu_672_p1, tmp_28_fu_744_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0))) then 
            Vect_Up_address0 <= tmp_28_fu_744_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            Vect_Up_address0 <= tmp_20_fu_672_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            Vect_Up_address0 <= tmp_4_fu_498_p1(8 - 1 downto 0);
        else 
            Vect_Up_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Vect_Up_ce0_assign_proc : process(ap_enable_reg_pp4_iter0, ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)))) then 
            Vect_Up_ce0 <= ap_const_logic_1;
        else 
            Vect_Up_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Vect_Up_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, Vect_Dn_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            Vect_Up_d0 <= Vect_Dn_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            Vect_Up_d0 <= ap_const_lv32_0;
        else 
            Vect_Up_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Vect_Up_we0_assign_proc : process(ap_CS_fsm_state6, exitcond2_reg_879, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond2_reg_879)))) then 
            Vect_Up_we0 <= ap_const_logic_1;
        else 
            Vect_Up_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp4_stage4 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_pp4_stage5 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state19 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state22 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state25 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state26 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state37 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state46 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);

    ap_done_assign_proc : process(ap_CS_fsm_state4, exitcond5_fu_463_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond5_fu_463_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, exitcond5_fu_463_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond5_fu_463_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_677_p2 <= "1" when (j_3_reg_385 = ap_const_lv9_100) else "0";
    exitcond2_fu_644_p2 <= "1" when (j_2_reg_374 = ap_const_lv6_20) else "0";
    exitcond3_fu_610_p2 <= "1" when (j_1_phi_fu_366_p4 = ap_const_lv6_20) else "0";
    exitcond4_fu_538_p2 <= "1" when (j_reg_339 = ap_const_lv9_100) else "0";
    exitcond5_fu_463_p2 <= "1" when (i_1_reg_294 = ap_const_lv4_8) else "0";
    exitcond6_fu_446_p2 <= "1" when (i_reg_283 = ap_const_lv9_100) else "0";
    exitcond_fu_749_p2 <= "1" when (j_4_phi_fu_412_p4 = ap_const_lv9_100) else "0";

    grp_fu_419_p0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp4_iter0, Vect_F_q0, ap_CS_fsm_pp4_stage5, Vect_H_q0, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp5_stage0, y_load_reg_964, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1))) then 
            grp_fu_419_p0 <= y_load_reg_964;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5))) then 
            grp_fu_419_p0 <= Vect_F_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage5))) then 
            grp_fu_419_p0 <= Vect_H_q0;
        else 
            grp_fu_419_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_419_p1_assign_proc : process(reg_435, ap_enable_reg_pp1_iter0, ap_enable_reg_pp4_iter0, reg_440, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1))) then 
            grp_fu_419_p1 <= reg_440;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage5)))) then 
            grp_fu_419_p1 <= reg_435;
        else 
            grp_fu_419_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p0_assign_proc : process(H_Dout_A, F_Dout_A, ap_enable_reg_pp1_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp4_stage1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then 
            grp_fu_427_p0 <= F_Dout_A;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_fu_427_p0 <= H_Dout_A;
        else 
            grp_fu_427_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p1_assign_proc : process(r_Dout_A, ap_enable_reg_pp1_iter0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp4_stage1, Vect_Up_q0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp4_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage1))) then 
            grp_fu_427_p1 <= Vect_Up_q0;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage1))) then 
            grp_fu_427_p1 <= r_Dout_A;
        else 
            grp_fu_427_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_2_fu_452_p2 <= std_logic_vector(unsigned(i_reg_283) + unsigned(ap_const_lv9_1));
    i_3_fu_469_p2 <= std_logic_vector(unsigned(i_1_reg_294) + unsigned(ap_const_lv4_1));
    indvarinc1_fu_492_p2 <= std_logic_vector(unsigned(invdar1_reg_317) + unsigned(ap_const_lv8_1));
    indvarinc2_fu_509_p2 <= std_logic_vector(unsigned(invdar2_reg_328) + unsigned(ap_const_lv8_1));
    indvarinc_fu_475_p2 <= std_logic_vector(unsigned(invdar_reg_306) + unsigned(ap_const_lv8_1));

    j_1_phi_fu_366_p4_assign_proc : process(j_1_reg_362, exitcond3_reg_865, ap_CS_fsm_pp2_stage0, j_5_reg_869, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond3_reg_865))) then 
            j_1_phi_fu_366_p4 <= j_5_reg_869;
        else 
            j_1_phi_fu_366_p4 <= j_1_reg_362;
        end if; 
    end process;


    j_4_phi_fu_412_p4_assign_proc : process(j_4_reg_408, exitcond_reg_945, ap_CS_fsm_pp5_stage0, j_8_reg_949, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond_reg_945) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_enable_reg_pp5_iter1))) then 
            j_4_phi_fu_412_p4 <= j_8_reg_949;
        else 
            j_4_phi_fu_412_p4 <= j_4_reg_408;
        end if; 
    end process;

    j_5_fu_616_p2 <= std_logic_vector(unsigned(j_1_phi_fu_366_p4) + unsigned(ap_const_lv6_1));
    j_6_fu_544_p2 <= std_logic_vector(unsigned(j_reg_339) + unsigned(ap_const_lv9_1));
    j_7_fu_650_p2 <= std_logic_vector(unsigned(j_2_reg_374) + unsigned(ap_const_lv6_1));
    j_8_fu_755_p2 <= std_logic_vector(unsigned(j_4_phi_fu_412_p4) + unsigned(ap_const_lv9_1));
    j_9_fu_683_p2 <= std_logic_vector(unsigned(j_3_reg_385) + unsigned(ap_const_lv9_1));
    k_1_cast2_fu_708_p1 <= std_logic_vector(resize(unsigned(k_1_phi_fu_401_p4),9));

    k_1_phi_fu_401_p4_assign_proc : process(k_1_reg_397, tmp_34_reg_912, tmp_37_reg_921, ap_CS_fsm_pp4_stage0, k_3_reg_916, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_const_lv1_0 = tmp_34_reg_912) and (ap_const_lv1_0 = tmp_37_reg_921) and (ap_const_lv1_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_enable_reg_pp4_iter1))) then 
            k_1_phi_fu_401_p4 <= k_3_reg_916;
        else 
            k_1_phi_fu_401_p4 <= k_1_reg_397;
        end if; 
    end process;

    k_2_fu_563_p2 <= std_logic_vector(unsigned(k_phi_fu_355_p4) + unsigned(ap_const_lv6_1));
    k_3_fu_702_p2 <= std_logic_vector(unsigned(k_1_phi_fu_401_p4) + unsigned(ap_const_lv6_1));
    k_cast9_fu_569_p1 <= std_logic_vector(resize(unsigned(k_phi_fu_355_p4),9));

    k_phi_fu_355_p4_assign_proc : process(k_reg_351, tmp_13_reg_827, tmp_26_reg_836, ap_CS_fsm_pp1_stage0, k_2_reg_831, ap_enable_reg_pp1_iter1)
    begin
        if (((tmp_13_reg_827 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_26_reg_836) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            k_phi_fu_355_p4 <= k_2_reg_831;
        else 
            k_phi_fu_355_p4 <= k_reg_351;
        end if; 
    end process;

    r_Addr_A <= std_logic_vector(shift_left(unsigned(r_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    r_Addr_A_orig <= tmp_15_fu_605_p1(32 - 1 downto 0);
    r_Clk_A <= ap_clk;
    r_Din_A <= ap_const_lv32_0;

    r_EN_A_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then 
            r_EN_A <= ap_const_logic_1;
        else 
            r_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    r_Rst_A <= ap_rst;
    r_WEN_A <= ap_const_lv4_0;
    tmp_10_fu_634_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_626_p3),64));
    tmp_11_fu_639_p1 <= std_logic_vector(resize(unsigned(j_1_reg_362),64));
        tmp_12_cast_fu_579_p1 <= std_logic_vector(resize(signed(tmp_12_fu_573_p2),32));

    tmp_12_fu_573_p2 <= std_logic_vector(unsigned(j_reg_339) - unsigned(k_cast9_fu_569_p1));
    tmp_13_fu_555_p3 <= k_phi_fu_355_p4(5 downto 5);
    tmp_14_cast_fu_591_p1 <= std_logic_vector(resize(unsigned(k_phi_fu_355_p4),10));
    tmp_15_fu_605_p1 <= std_logic_vector(resize(unsigned(tmp_12_cast_fu_579_p1),64));
    tmp_18_fu_656_p1 <= std_logic_vector(resize(unsigned(j_2_reg_374),64));
    tmp_19_fu_665_p3 <= (tmp_33_reg_893 & ap_const_lv3_0);
    tmp_1_fu_626_p3 <= (tmp_22_fu_622_p1 & ap_const_lv3_0);
    tmp_20_fu_672_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_665_p3),64));
    tmp_21_fu_689_p1 <= std_logic_vector(resize(unsigned(j_3_reg_385),64));
    tmp_22_fu_622_p1 <= j_1_phi_fu_366_p4(5 - 1 downto 0);
    tmp_23_fu_761_p1 <= std_logic_vector(resize(unsigned(j_4_phi_fu_412_p4),64));
        tmp_25_cast_fu_718_p1 <= std_logic_vector(resize(signed(tmp_25_fu_712_p2),32));

    tmp_25_fu_712_p2 <= std_logic_vector(unsigned(j_3_reg_385) - unsigned(k_1_cast2_fu_708_p1));
    tmp_26_fu_583_p3 <= tmp_12_fu_573_p2(8 downto 8);
    tmp_27_cast_fu_730_p1 <= std_logic_vector(resize(unsigned(k_1_phi_fu_401_p4),10));
    tmp_28_fu_744_p1 <= std_logic_vector(resize(unsigned(tmp_25_cast_fu_718_p1),64));
    tmp_2_fu_481_p1 <= std_logic_vector(resize(unsigned(invdar_reg_306),64));
    tmp_31_fu_595_p2 <= std_logic_vector(unsigned(tmp_37_cast_reg_807) + unsigned(tmp_14_cast_fu_591_p1));
    tmp_33_fu_661_p1 <= j_2_reg_374(5 - 1 downto 0);
    tmp_34_fu_694_p3 <= k_1_phi_fu_401_p4(5 downto 5);
    tmp_37_cast_fu_534_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_526_p3),10));
    tmp_37_fu_722_p3 <= tmp_25_fu_712_p2(8 downto 8);
    tmp_38_fu_734_p2 <= std_logic_vector(unsigned(tmp_37_cast_reg_807) + unsigned(tmp_27_cast_fu_730_p1));
    tmp_39_cast_fu_600_p1 <= std_logic_vector(resize(unsigned(tmp_31_fu_595_p2),64));
    tmp_3_fu_486_p2 <= "1" when (invdar_reg_306 = ap_const_lv8_FF) else "0";
    tmp_41_cast_fu_739_p1 <= std_logic_vector(resize(unsigned(tmp_38_fu_734_p2),64));
    tmp_4_fu_498_p1 <= std_logic_vector(resize(unsigned(invdar1_reg_317),64));
    tmp_5_fu_503_p2 <= "1" when (invdar1_reg_317 = ap_const_lv8_FF) else "0";
    tmp_6_fu_515_p1 <= std_logic_vector(resize(unsigned(invdar2_reg_328),64));
    tmp_7_fu_520_p2 <= "1" when (invdar2_reg_328 = ap_const_lv8_FF) else "0";
    tmp_9_fu_550_p1 <= std_logic_vector(resize(unsigned(j_reg_339),64));
    tmp_fu_458_p1 <= std_logic_vector(resize(unsigned(i_reg_283),64));
    tmp_s_fu_526_p3 <= (i_1_reg_294 & ap_const_lv5_0);
    y_Addr_A <= std_logic_vector(shift_left(unsigned(y_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    y_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, ap_CS_fsm_pp5_stage0, ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959, ap_enable_reg_pp5_iter3, tmp_fu_458_p1, tmp_23_fu_761_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3))) then 
            y_Addr_A_orig <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp5_iter3_y_addr_1_reg_959),32));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0))) then 
            y_Addr_A_orig <= tmp_23_fu_761_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            y_Addr_A_orig <= tmp_fu_458_p1(32 - 1 downto 0);
        else 
            y_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    y_Clk_A <= ap_clk;

    y_Din_A_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_state2, tmp_24_reg_969, ap_enable_reg_pp5_iter3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3))) then 
            y_Din_A <= tmp_24_reg_969;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            y_Din_A <= ap_const_lv32_0;
        else 
            y_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_EN_A_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_CS_fsm_state2, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter3)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_enable_reg_pp5_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3)))) then 
            y_EN_A <= ap_const_logic_1;
        else 
            y_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    y_Rst_A <= ap_rst;

    y_WEN_A_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_CS_fsm_state2, ap_pipeline_reg_pp5_iter3_exitcond_reg_945, ap_enable_reg_pp5_iter3, exitcond6_fu_446_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond6_fu_446_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp5_stage1) and (ap_const_logic_1 = ap_enable_reg_pp5_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp5_iter3_exitcond_reg_945)))) then 
            y_WEN_A <= ap_const_lv4_F;
        else 
            y_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

end behav;
