

================================================================
== Vivado HLS Report for 'filterbank_core_hwa'
================================================================
* Date:           Fri Apr  7 09:48:00 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_filterbank
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     10.97|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+--------+-------+--------+---------+
    |     Latency    |    Interval    | Pipeline|
    |  min  |   max  |  min  |   max  |   Type  |
    +-------+--------+-------+--------+---------+
    |  60275|  822131|  60276|  822132|   none  |
    +-------+--------+-------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+-------+--------+---------------+-----------+-----------+--------+----------+
        |                   |     Latency    |   Iteration   |  Initiation Interval  |  Trip  |          |
        |     Loop Name     |  min  |   max  |    Latency    |  achieved |   target  |  Count | Pipelined|
        +-------------------+-------+--------+---------------+-----------+-----------+--------+----------+
        |- Loop 1           |    256|     256|              1|          1|          1|     256|    yes   |
        |- Loop 2           |  60016|  821872| 7502 ~ 102734 |          -|          -|       8|    no    |
        | + memset_Vect_H   |    255|     255|              1|          -|          -|     256|    no    |
        | + memset_Vect_Up  |    255|     255|              1|          -|          -|     256|    no    |
        | + memset_Vect_F   |    255|     255|              1|          -|          -|     256|    no    |
        | + Loop 2.4        |   3072|   50688|    12 ~ 198   |          -|          -|     256|    no    |
        |  ++ Loop 2.4.1    |      9|     195|             10|          6|          1| 1 ~ 32 |    yes   |
        | + Loop 2.5        |     32|      32|              2|          1|          1|      32|    yes   |
        | + Loop 2.6        |     32|      32|              2|          1|          1|      32|    yes   |
        | + Loop 2.7        |   3072|   50688|    12 ~ 198   |          -|          -|     256|    no    |
        |  ++ Loop 2.7.1    |      9|     195|             10|          6|          1| 1 ~ 32 |    yes   |
        | + Loop 2.8        |    517|     517|              8|          2|          1|     256|    yes   |
        +-------------------+-------+--------+---------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 6, depth = 10
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 1, depth = 2
  * Pipeline-4: initiation interval (II) = 6, depth = 10
  * Pipeline-5: initiation interval (II) = 2, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 46
* Pipeline: 6
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 6, D = 10, States = { 9 10 11 12 13 14 15 16 17 18 }
  Pipeline-2: II = 1, D = 2, States = { 20 21 }
  Pipeline-3: II = 1, D = 2, States = { 23 24 }
  Pipeline-4: II = 6, D = 10, States = { 27 28 29 30 31 32 33 34 35 36 }
  Pipeline-5: II = 2, D = 8, States = { 38 39 40 41 42 43 44 45 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond6)
	2  / (!exitcond6)
3 --> 
	4  / true
4 --> 
	5  / (!exitcond5)
5 --> 
	5  / (!tmp_3)
	6  / (tmp_3)
6 --> 
	6  / (!tmp_5)
	7  / (tmp_5)
7 --> 
	7  / (!tmp_7)
	8  / (tmp_7)
8 --> 
	9  / (!exitcond4)
	20  / (exitcond4)
9 --> 
	19  / (tmp_13) | (!tmp_13 & tmp_26)
	10  / (!tmp_13 & !tmp_26)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	9  / true
19 --> 
	8  / true
20 --> 
	22  / (exitcond3)
	21  / (!exitcond3)
21 --> 
	20  / true
22 --> 
	23  / true
23 --> 
	25  / (exitcond2)
	24  / (!exitcond2)
24 --> 
	23  / true
25 --> 
	26  / true
26 --> 
	27  / (!exitcond1)
	38  / (exitcond1)
27 --> 
	37  / (tmp_34) | (!tmp_34 & tmp_37)
	28  / (!tmp_34 & !tmp_37)
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	27  / true
37 --> 
	26  / true
38 --> 
	46  / (exitcond)
	39  / (!exitcond)
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	38  / true
46 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_47 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %r) nounwind, !map !7

ST_1: StgValue_48 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %y) nounwind, !map !13

ST_1: StgValue_49 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %H) nounwind, !map !17

ST_1: StgValue_50 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %F) nounwind, !map !24

ST_1: StgValue_51 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @filterbank_core_hwa_s) nounwind

ST_1: Vect_H (10)  [1/1] 0.00ns  loc: filterbank.c:61
:5  %Vect_H = alloca [256 x float], align 16

ST_1: Vect_Dn (11)  [1/1] 0.00ns  loc: filterbank.c:63
:6  %Vect_Dn = alloca [32 x float], align 16

ST_1: Vect_Up (12)  [1/1] 0.00ns  loc: filterbank.c:65
:7  %Vect_Up = alloca [256 x float], align 16

ST_1: Vect_F (13)  [1/1] 0.00ns  loc: filterbank.c:67
:8  %Vect_F = alloca [256 x float], align 16

ST_1: StgValue_56 (14)  [1/1] 0.00ns  loc: filterbank.c:38
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_57 (15)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %r, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_58 (16)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %r, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_59 (17)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %y, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_60 (18)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %y, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_61 (19)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %H, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_62 (20)  [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %H, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_63 (21)  [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %F, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_64 (22)  [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %F, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_65 (23)  [1/1] 1.57ns  loc: filterbank.c:54
:18  br label %1


 <State 2>: 2.71ns
ST_2: i (25)  [1/1] 0.00ns
:0  %i = phi i9 [ 0, %0 ], [ %i_2, %2 ]

ST_2: exitcond6 (26)  [1/1] 2.51ns  loc: filterbank.c:54
:1  %exitcond6 = icmp eq i9 %i, -256

ST_2: i_2 (27)  [1/1] 1.79ns  loc: filterbank.c:54
:2  %i_2 = add i9 %i, 1

ST_2: StgValue_69 (28)  [1/1] 0.00ns  loc: filterbank.c:54
:3  br i1 %exitcond6, label %.preheader13.preheader, label %2

ST_2: empty (30)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_2: tmp_8 (31)  [1/1] 0.00ns  loc: filterbank.c:54
:1  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4) nounwind

ST_2: StgValue_72 (32)  [1/1] 0.00ns  loc: filterbank.c:55
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp (33)  [1/1] 0.00ns  loc: filterbank.c:56
:3  %tmp = zext i9 %i to i64

ST_2: y_addr (34)  [1/1] 0.00ns  loc: filterbank.c:56
:4  %y_addr = getelementptr [256 x float]* %y, i64 0, i64 %tmp

ST_2: StgValue_75 (35)  [1/1] 2.71ns  loc: filterbank.c:56
:5  store float 0.000000e+00, float* %y_addr, align 4

ST_2: empty_3 (36)  [1/1] 0.00ns  loc: filterbank.c:57
:6  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_8) nounwind

ST_2: StgValue_77 (37)  [1/1] 0.00ns  loc: filterbank.c:54
:7  br label %1


 <State 3>: 1.57ns
ST_3: StgValue_78 (39)  [1/1] 1.57ns  loc: filterbank.c:59
.preheader13.preheader:0  br label %.preheader13


 <State 4>: 2.33ns
ST_4: i_1 (41)  [1/1] 0.00ns
.preheader13:0  %i_1 = phi i4 [ %i_3, %.preheader13.loopexit ], [ 0, %.preheader13.preheader ]

ST_4: exitcond5 (42)  [1/1] 2.33ns  loc: filterbank.c:59
.preheader13:1  %exitcond5 = icmp eq i4 %i_1, -8

ST_4: i_3 (43)  [1/1] 0.75ns  loc: filterbank.c:59
.preheader13:2  %i_3 = add i4 %i_1, 1

ST_4: StgValue_82 (44)  [1/1] 0.00ns  loc: filterbank.c:59
.preheader13:3  br i1 %exitcond5, label %12, label %meminst.preheader

ST_4: empty_4 (46)  [1/1] 0.00ns
meminst.preheader:0  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind

ST_4: StgValue_84 (47)  [1/1] 1.57ns  loc: filterbank.c:61
meminst.preheader:1  br label %meminst

ST_4: StgValue_85 (235)  [1/1] 0.00ns  loc: filterbank.c:105
:0  ret void


 <State 5>: 2.71ns
ST_5: invdar (49)  [1/1] 0.00ns  loc: filterbank.c:61
meminst:0  %invdar = phi i8 [ %indvarinc, %meminst ], [ 0, %meminst.preheader ]

ST_5: indvarinc (50)  [1/1] 1.67ns  loc: filterbank.c:61
meminst:1  %indvarinc = add i8 %invdar, 1

ST_5: tmp_2 (51)  [1/1] 0.00ns  loc: filterbank.c:61
meminst:2  %tmp_2 = zext i8 %invdar to i64

ST_5: Vect_H_addr (52)  [1/1] 0.00ns  loc: filterbank.c:61
meminst:3  %Vect_H_addr = getelementptr [256 x float]* %Vect_H, i64 0, i64 %tmp_2

ST_5: StgValue_90 (53)  [1/1] 2.71ns  loc: filterbank.c:61
meminst:4  store float 0.000000e+00, float* %Vect_H_addr, align 4

ST_5: tmp_3 (54)  [1/1] 2.47ns  loc: filterbank.c:61
meminst:5  %tmp_3 = icmp eq i8 %invdar, -1

ST_5: empty_5 (55)  [1/1] 0.00ns
meminst:6  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopName([14 x i8]* @memset_Vect_H_str) nounwind

ST_5: empty_6 (56)  [1/1] 0.00ns
meminst:7  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_5: StgValue_94 (57)  [1/1] 0.00ns  loc: filterbank.c:61
meminst:8  br i1 %tmp_3, label %meminst14.preheader, label %meminst

ST_5: StgValue_95 (59)  [1/1] 1.57ns  loc: filterbank.c:65
meminst14.preheader:0  br label %meminst14


 <State 6>: 2.71ns
ST_6: invdar1 (61)  [1/1] 0.00ns  loc: filterbank.c:65
meminst14:0  %invdar1 = phi i8 [ %indvarinc1, %meminst14 ], [ 0, %meminst14.preheader ]

ST_6: indvarinc1 (62)  [1/1] 1.67ns  loc: filterbank.c:65
meminst14:1  %indvarinc1 = add i8 %invdar1, 1

ST_6: tmp_4 (63)  [1/1] 0.00ns  loc: filterbank.c:65
meminst14:2  %tmp_4 = zext i8 %invdar1 to i64

ST_6: Vect_Up_addr (64)  [1/1] 0.00ns  loc: filterbank.c:65
meminst14:3  %Vect_Up_addr = getelementptr [256 x float]* %Vect_Up, i64 0, i64 %tmp_4

ST_6: StgValue_100 (65)  [1/1] 2.71ns  loc: filterbank.c:65
meminst14:4  store float 0.000000e+00, float* %Vect_Up_addr, align 4

ST_6: tmp_5 (66)  [1/1] 2.47ns  loc: filterbank.c:65
meminst14:5  %tmp_5 = icmp eq i8 %invdar1, -1

ST_6: empty_7 (67)  [1/1] 0.00ns
meminst14:6  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopName([15 x i8]* @memset_Vect_Up_str) nounwind

ST_6: empty_8 (68)  [1/1] 0.00ns
meminst14:7  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_6: StgValue_104 (69)  [1/1] 0.00ns  loc: filterbank.c:65
meminst14:8  br i1 %tmp_5, label %meminst17.preheader, label %meminst14

ST_6: StgValue_105 (71)  [1/1] 1.57ns  loc: filterbank.c:67
meminst17.preheader:0  br label %meminst17


 <State 7>: 2.71ns
ST_7: invdar2 (73)  [1/1] 0.00ns  loc: filterbank.c:67
meminst17:0  %invdar2 = phi i8 [ %indvarinc2, %meminst17 ], [ 0, %meminst17.preheader ]

ST_7: indvarinc2 (74)  [1/1] 1.67ns  loc: filterbank.c:67
meminst17:1  %indvarinc2 = add i8 %invdar2, 1

ST_7: tmp_6 (75)  [1/1] 0.00ns  loc: filterbank.c:67
meminst17:2  %tmp_6 = zext i8 %invdar2 to i64

ST_7: Vect_F_addr (76)  [1/1] 0.00ns  loc: filterbank.c:67
meminst17:3  %Vect_F_addr = getelementptr [256 x float]* %Vect_F, i64 0, i64 %tmp_6

ST_7: StgValue_110 (77)  [1/1] 2.71ns  loc: filterbank.c:67
meminst17:4  store float 0.000000e+00, float* %Vect_F_addr, align 4

ST_7: tmp_7 (78)  [1/1] 2.47ns  loc: filterbank.c:67
meminst17:5  %tmp_7 = icmp eq i8 %invdar2, -1

ST_7: empty_9 (79)  [1/1] 0.00ns
meminst17:6  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopName([14 x i8]* @memset_Vect_F_str) nounwind

ST_7: empty_10 (80)  [1/1] 0.00ns
meminst17:7  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_7: StgValue_114 (81)  [1/1] 0.00ns  loc: filterbank.c:67
meminst17:8  br i1 %tmp_7, label %3, label %meminst17

ST_7: tmp_s (83)  [1/1] 0.00ns  loc: filterbank.c:59
:0  %tmp_s = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %i_1, i5 0)

ST_7: tmp_37_cast (84)  [1/1] 0.00ns  loc: filterbank.c:71
:1  %tmp_37_cast = zext i9 %tmp_s to i10

ST_7: StgValue_117 (85)  [1/1] 1.57ns  loc: filterbank.c:71
:2  br label %4


 <State 8>: 2.51ns
ST_8: j (87)  [1/1] 0.00ns
:0  %j = phi i9 [ 0, %3 ], [ %j_6, %.critedge ]

ST_8: exitcond4 (88)  [1/1] 2.51ns  loc: filterbank.c:71
:1  %exitcond4 = icmp eq i9 %j, -256

ST_8: j_6 (89)  [1/1] 1.79ns  loc: filterbank.c:71
:2  %j_6 = add i9 %j, 1

ST_8: StgValue_121 (90)  [1/1] 0.00ns  loc: filterbank.c:71
:3  br i1 %exitcond4, label %.preheader11.preheader, label %.preheader12.preheader

ST_8: empty_11 (92)  [1/1] 0.00ns
.preheader12.preheader:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_8: tmp_9 (93)  [1/1] 0.00ns  loc: filterbank.c:74
.preheader12.preheader:1  %tmp_9 = zext i9 %j to i64

ST_8: Vect_H_addr_1 (94)  [1/1] 0.00ns  loc: filterbank.c:74
.preheader12.preheader:2  %Vect_H_addr_1 = getelementptr inbounds [256 x float]* %Vect_H, i64 0, i64 %tmp_9

ST_8: StgValue_125 (95)  [1/1] 1.57ns  loc: filterbank.c:72
.preheader12.preheader:3  br label %.preheader12

ST_8: StgValue_126 (128)  [1/1] 1.57ns  loc: filterbank.c:78
.preheader11.preheader:0  br label %.preheader11


 <State 9>: 4.50ns
ST_9: k (97)  [1/1] 0.00ns
.preheader12:0  %k = phi i6 [ %k_2, %6 ], [ 0, %.preheader12.preheader ]

ST_9: tmp_13 (98)  [1/1] 0.00ns  loc: filterbank.c:72
.preheader12:1  %tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %k, i32 5)

ST_9: k_2 (99)  [1/1] 1.67ns  loc: filterbank.c:72
.preheader12:2  %k_2 = add i6 %k, 1

ST_9: StgValue_130 (100)  [1/1] 0.00ns  loc: filterbank.c:72
.preheader12:3  br i1 %tmp_13, label %.critedge, label %5

ST_9: k_cast9 (102)  [1/1] 0.00ns  loc: filterbank.c:72
:0  %k_cast9 = zext i6 %k to i9

ST_9: empty_12 (103)  [1/1] 0.00ns
:1  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 32, i64 16) nounwind

ST_9: tmp_12 (104)  [1/1] 1.79ns  loc: filterbank.c:72
:2  %tmp_12 = sub i9 %j, %k_cast9

ST_9: tmp_12_cast (105)  [1/1] 0.00ns  loc: filterbank.c:72
:3  %tmp_12_cast = sext i9 %tmp_12 to i32

ST_9: tmp_26 (106)  [1/1] 0.00ns  loc: filterbank.c:72
:4  %tmp_26 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_12, i32 8)

ST_9: StgValue_136 (107)  [1/1] 0.00ns  loc: filterbank.c:72
:5  br i1 %tmp_26, label %.critedge, label %6

ST_9: tmp_14_cast (111)  [1/1] 0.00ns  loc: filterbank.c:74
:2  %tmp_14_cast = zext i6 %k to i10

ST_9: tmp_31 (112)  [1/1] 1.79ns  loc: filterbank.c:74
:3  %tmp_31 = add i10 %tmp_37_cast, %tmp_14_cast

ST_9: tmp_39_cast (113)  [1/1] 0.00ns  loc: filterbank.c:74
:4  %tmp_39_cast = zext i10 %tmp_31 to i64

ST_9: H_addr (114)  [1/1] 0.00ns  loc: filterbank.c:74
:5  %H_addr = getelementptr [256 x float]* %H, i64 0, i64 %tmp_39_cast

ST_9: H_load (115)  [2/2] 2.71ns  loc: filterbank.c:74
:6  %H_load = load float* %H_addr, align 4

ST_9: tmp_15 (116)  [1/1] 0.00ns  loc: filterbank.c:74
:7  %tmp_15 = zext i32 %tmp_12_cast to i64

ST_9: r_addr (117)  [1/1] 0.00ns  loc: filterbank.c:74
:8  %r_addr = getelementptr [256 x float]* %r, i64 0, i64 %tmp_15

ST_9: r_load (118)  [2/2] 2.71ns  loc: filterbank.c:74
:9  %r_load = load float* %r_addr, align 4


 <State 10>: 8.49ns
ST_10: H_load (115)  [1/2] 2.71ns  loc: filterbank.c:74
:6  %H_load = load float* %H_addr, align 4

ST_10: r_load (118)  [1/2] 2.71ns  loc: filterbank.c:74
:9  %r_load = load float* %r_addr, align 4

ST_10: tmp_16 (119)  [4/4] 5.78ns  loc: filterbank.c:74
:10  %tmp_16 = fmul float %H_load, %r_load


 <State 11>: 5.78ns
ST_11: tmp_16 (119)  [3/4] 5.78ns  loc: filterbank.c:74
:10  %tmp_16 = fmul float %H_load, %r_load


 <State 12>: 5.78ns
ST_12: tmp_16 (119)  [2/4] 5.78ns  loc: filterbank.c:74
:10  %tmp_16 = fmul float %H_load, %r_load


 <State 13>: 5.78ns
ST_13: tmp_16 (119)  [1/4] 5.78ns  loc: filterbank.c:74
:10  %tmp_16 = fmul float %H_load, %r_load

ST_13: Vect_H_load_1 (120)  [2/2] 2.71ns  loc: filterbank.c:74
:11  %Vect_H_load_1 = load float* %Vect_H_addr_1, align 4


 <State 14>: 10.97ns
ST_14: Vect_H_load_1 (120)  [1/2] 2.71ns  loc: filterbank.c:74
:11  %Vect_H_load_1 = load float* %Vect_H_addr_1, align 4

ST_14: tmp_17 (121)  [5/5] 8.26ns  loc: filterbank.c:74
:12  %tmp_17 = fadd float %Vect_H_load_1, %tmp_16


 <State 15>: 8.26ns
ST_15: tmp_17 (121)  [4/5] 8.26ns  loc: filterbank.c:74
:12  %tmp_17 = fadd float %Vect_H_load_1, %tmp_16


 <State 16>: 8.26ns
ST_16: tmp_17 (121)  [3/5] 8.26ns  loc: filterbank.c:74
:12  %tmp_17 = fadd float %Vect_H_load_1, %tmp_16


 <State 17>: 8.26ns
ST_17: tmp_17 (121)  [2/5] 8.26ns  loc: filterbank.c:74
:12  %tmp_17 = fadd float %Vect_H_load_1, %tmp_16


 <State 18>: 10.97ns
ST_18: tmp_27 (109)  [1/1] 0.00ns  loc: filterbank.c:74
:0  %tmp_27 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5) nounwind

ST_18: StgValue_158 (110)  [1/1] 0.00ns  loc: filterbank.c:73
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_18: tmp_17 (121)  [1/5] 8.26ns  loc: filterbank.c:74
:12  %tmp_17 = fadd float %Vect_H_load_1, %tmp_16

ST_18: StgValue_160 (122)  [1/1] 2.71ns  loc: filterbank.c:74
:13  store float %tmp_17, float* %Vect_H_addr_1, align 4

ST_18: empty_13 (123)  [1/1] 0.00ns  loc: filterbank.c:74
:14  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp_27) nounwind

ST_18: StgValue_162 (124)  [1/1] 0.00ns  loc: filterbank.c:72
:15  br label %.preheader12


 <State 19>: 0.00ns
ST_19: StgValue_163 (126)  [1/1] 0.00ns  loc: filterbank.c:71
.critedge:0  br label %4


 <State 20>: 2.71ns
ST_20: j_1 (130)  [1/1] 0.00ns
.preheader11:0  %j_1 = phi i6 [ %j_5, %7 ], [ 0, %.preheader11.preheader ]

ST_20: exitcond3 (131)  [1/1] 2.40ns  loc: filterbank.c:78
.preheader11:1  %exitcond3 = icmp eq i6 %j_1, -32

ST_20: j_5 (132)  [1/1] 1.67ns  loc: filterbank.c:78
.preheader11:2  %j_5 = add i6 %j_1, 1

ST_20: StgValue_167 (133)  [1/1] 0.00ns  loc: filterbank.c:78
.preheader11:3  br i1 %exitcond3, label %.preheader10.preheader, label %7

ST_20: tmp_22 (138)  [1/1] 0.00ns  loc: filterbank.c:78
:3  %tmp_22 = trunc i6 %j_1 to i5

ST_20: tmp_1 (139)  [1/1] 0.00ns  loc: filterbank.c:80
:4  %tmp_1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_22, i3 0)

ST_20: tmp_10 (140)  [1/1] 0.00ns  loc: filterbank.c:80
:5  %tmp_10 = zext i8 %tmp_1 to i64

ST_20: Vect_H_addr_2 (141)  [1/1] 0.00ns  loc: filterbank.c:80
:6  %Vect_H_addr_2 = getelementptr inbounds [256 x float]* %Vect_H, i64 0, i64 %tmp_10

ST_20: Vect_H_load (142)  [2/2] 2.71ns  loc: filterbank.c:80
:7  %Vect_H_load = load float* %Vect_H_addr_2, align 16


 <State 21>: 5.42ns
ST_21: empty_14 (135)  [1/1] 0.00ns
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_21: tmp_14 (136)  [1/1] 0.00ns  loc: filterbank.c:78
:1  %tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6) nounwind

ST_21: StgValue_175 (137)  [1/1] 0.00ns  loc: filterbank.c:79
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_21: Vect_H_load (142)  [1/2] 2.71ns  loc: filterbank.c:80
:7  %Vect_H_load = load float* %Vect_H_addr_2, align 16

ST_21: tmp_11 (143)  [1/1] 0.00ns  loc: filterbank.c:80
:8  %tmp_11 = zext i6 %j_1 to i64

ST_21: Vect_Dn_addr (144)  [1/1] 0.00ns  loc: filterbank.c:80
:9  %Vect_Dn_addr = getelementptr inbounds [32 x float]* %Vect_Dn, i64 0, i64 %tmp_11

ST_21: StgValue_179 (145)  [1/1] 2.71ns  loc: filterbank.c:80
:10  store float %Vect_H_load, float* %Vect_Dn_addr, align 4

ST_21: empty_15 (146)  [1/1] 0.00ns  loc: filterbank.c:81
:11  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_14) nounwind

ST_21: StgValue_181 (147)  [1/1] 0.00ns  loc: filterbank.c:78
:12  br label %.preheader11


 <State 22>: 1.57ns
ST_22: StgValue_182 (149)  [1/1] 1.57ns  loc: filterbank.c:85
.preheader10.preheader:0  br label %.preheader10


 <State 23>: 2.71ns
ST_23: j_2 (151)  [1/1] 0.00ns
.preheader10:0  %j_2 = phi i6 [ %j_7, %8 ], [ 0, %.preheader10.preheader ]

ST_23: exitcond2 (152)  [1/1] 2.40ns  loc: filterbank.c:85
.preheader10:1  %exitcond2 = icmp eq i6 %j_2, -32

ST_23: j_7 (153)  [1/1] 1.67ns  loc: filterbank.c:85
.preheader10:2  %j_7 = add i6 %j_2, 1

ST_23: StgValue_186 (154)  [1/1] 0.00ns  loc: filterbank.c:85
.preheader10:3  br i1 %exitcond2, label %.preheader9.preheader, label %8

ST_23: tmp_18 (159)  [1/1] 0.00ns  loc: filterbank.c:87
:3  %tmp_18 = zext i6 %j_2 to i64

ST_23: Vect_Dn_addr_1 (160)  [1/1] 0.00ns  loc: filterbank.c:87
:4  %Vect_Dn_addr_1 = getelementptr inbounds [32 x float]* %Vect_Dn, i64 0, i64 %tmp_18

ST_23: Vect_Dn_load (161)  [2/2] 2.71ns  loc: filterbank.c:87
:5  %Vect_Dn_load = load float* %Vect_Dn_addr_1, align 4

ST_23: tmp_33 (162)  [1/1] 0.00ns  loc: filterbank.c:85
:6  %tmp_33 = trunc i6 %j_2 to i5


 <State 24>: 5.42ns
ST_24: empty_16 (156)  [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_24: tmp_32 (157)  [1/1] 0.00ns  loc: filterbank.c:85
:1  %tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7) nounwind

ST_24: StgValue_193 (158)  [1/1] 0.00ns  loc: filterbank.c:86
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_24: Vect_Dn_load (161)  [1/2] 2.71ns  loc: filterbank.c:87
:5  %Vect_Dn_load = load float* %Vect_Dn_addr_1, align 4

ST_24: tmp_19 (163)  [1/1] 0.00ns  loc: filterbank.c:87
:7  %tmp_19 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_33, i3 0)

ST_24: tmp_20 (164)  [1/1] 0.00ns  loc: filterbank.c:87
:8  %tmp_20 = zext i8 %tmp_19 to i64

ST_24: Vect_Up_addr_1 (165)  [1/1] 0.00ns  loc: filterbank.c:87
:9  %Vect_Up_addr_1 = getelementptr inbounds [256 x float]* %Vect_Up, i64 0, i64 %tmp_20

ST_24: StgValue_198 (166)  [1/1] 2.71ns  loc: filterbank.c:87
:10  store float %Vect_Dn_load, float* %Vect_Up_addr_1, align 16

ST_24: empty_17 (167)  [1/1] 0.00ns  loc: filterbank.c:88
:11  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_32) nounwind

ST_24: StgValue_200 (168)  [1/1] 0.00ns  loc: filterbank.c:85
:12  br label %.preheader10


 <State 25>: 1.57ns
ST_25: StgValue_201 (170)  [1/1] 1.57ns  loc: filterbank.c:92
.preheader9.preheader:0  br label %.preheader9


 <State 26>: 2.51ns
ST_26: j_3 (172)  [1/1] 0.00ns
.preheader9:0  %j_3 = phi i9 [ %j_9, %.critedge7 ], [ 0, %.preheader9.preheader ]

ST_26: exitcond1 (173)  [1/1] 2.51ns  loc: filterbank.c:92
.preheader9:1  %exitcond1 = icmp eq i9 %j_3, -256

ST_26: j_9 (174)  [1/1] 1.79ns  loc: filterbank.c:92
.preheader9:2  %j_9 = add i9 %j_3, 1

ST_26: StgValue_205 (175)  [1/1] 0.00ns  loc: filterbank.c:92
.preheader9:3  br i1 %exitcond1, label %.preheader.preheader, label %.preheader8.preheader

ST_26: empty_18 (177)  [1/1] 0.00ns
.preheader8.preheader:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_26: tmp_21 (178)  [1/1] 0.00ns  loc: filterbank.c:95
.preheader8.preheader:1  %tmp_21 = zext i9 %j_3 to i64

ST_26: Vect_F_addr_1 (179)  [1/1] 0.00ns  loc: filterbank.c:95
.preheader8.preheader:2  %Vect_F_addr_1 = getelementptr inbounds [256 x float]* %Vect_F, i64 0, i64 %tmp_21

ST_26: StgValue_209 (180)  [1/1] 1.57ns  loc: filterbank.c:93
.preheader8.preheader:3  br label %.preheader8

ST_26: StgValue_210 (213)  [1/1] 1.57ns  loc: filterbank.c:100
.preheader.preheader:0  br label %.preheader


 <State 27>: 4.50ns
ST_27: k_1 (182)  [1/1] 0.00ns
.preheader8:0  %k_1 = phi i6 [ %k_3, %10 ], [ 0, %.preheader8.preheader ]

ST_27: tmp_34 (183)  [1/1] 0.00ns  loc: filterbank.c:93
.preheader8:1  %tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %k_1, i32 5)

ST_27: k_3 (184)  [1/1] 1.67ns  loc: filterbank.c:93
.preheader8:2  %k_3 = add i6 %k_1, 1

ST_27: StgValue_214 (185)  [1/1] 0.00ns  loc: filterbank.c:93
.preheader8:3  br i1 %tmp_34, label %.critedge7, label %9

ST_27: k_1_cast2 (187)  [1/1] 0.00ns  loc: filterbank.c:93
:0  %k_1_cast2 = zext i6 %k_1 to i9

ST_27: empty_19 (188)  [1/1] 0.00ns
:1  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 32, i64 16) nounwind

ST_27: tmp_25 (189)  [1/1] 1.79ns  loc: filterbank.c:93
:2  %tmp_25 = sub i9 %j_3, %k_1_cast2

ST_27: tmp_25_cast (190)  [1/1] 0.00ns  loc: filterbank.c:93
:3  %tmp_25_cast = sext i9 %tmp_25 to i32

ST_27: tmp_37 (191)  [1/1] 0.00ns  loc: filterbank.c:93
:4  %tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_25, i32 8)

ST_27: StgValue_220 (192)  [1/1] 0.00ns  loc: filterbank.c:93
:5  br i1 %tmp_37, label %.critedge7, label %10

ST_27: tmp_27_cast (196)  [1/1] 0.00ns  loc: filterbank.c:95
:2  %tmp_27_cast = zext i6 %k_1 to i10

ST_27: tmp_38 (197)  [1/1] 1.79ns  loc: filterbank.c:95
:3  %tmp_38 = add i10 %tmp_37_cast, %tmp_27_cast

ST_27: tmp_41_cast (198)  [1/1] 0.00ns  loc: filterbank.c:95
:4  %tmp_41_cast = zext i10 %tmp_38 to i64

ST_27: F_addr (199)  [1/1] 0.00ns  loc: filterbank.c:95
:5  %F_addr = getelementptr [256 x float]* %F, i64 0, i64 %tmp_41_cast

ST_27: F_load (200)  [2/2] 2.71ns  loc: filterbank.c:95
:6  %F_load = load float* %F_addr, align 4

ST_27: tmp_28 (201)  [1/1] 0.00ns  loc: filterbank.c:95
:7  %tmp_28 = zext i32 %tmp_25_cast to i64

ST_27: Vect_Up_addr_2 (202)  [1/1] 0.00ns  loc: filterbank.c:95
:8  %Vect_Up_addr_2 = getelementptr inbounds [256 x float]* %Vect_Up, i64 0, i64 %tmp_28

ST_27: Vect_Up_load (203)  [2/2] 2.71ns  loc: filterbank.c:95
:9  %Vect_Up_load = load float* %Vect_Up_addr_2, align 4


 <State 28>: 8.49ns
ST_28: F_load (200)  [1/2] 2.71ns  loc: filterbank.c:95
:6  %F_load = load float* %F_addr, align 4

ST_28: Vect_Up_load (203)  [1/2] 2.71ns  loc: filterbank.c:95
:9  %Vect_Up_load = load float* %Vect_Up_addr_2, align 4

ST_28: tmp_29 (204)  [4/4] 5.78ns  loc: filterbank.c:95
:10  %tmp_29 = fmul float %F_load, %Vect_Up_load


 <State 29>: 5.78ns
ST_29: tmp_29 (204)  [3/4] 5.78ns  loc: filterbank.c:95
:10  %tmp_29 = fmul float %F_load, %Vect_Up_load


 <State 30>: 5.78ns
ST_30: tmp_29 (204)  [2/4] 5.78ns  loc: filterbank.c:95
:10  %tmp_29 = fmul float %F_load, %Vect_Up_load


 <State 31>: 5.78ns
ST_31: tmp_29 (204)  [1/4] 5.78ns  loc: filterbank.c:95
:10  %tmp_29 = fmul float %F_load, %Vect_Up_load

ST_31: Vect_F_load_1 (205)  [2/2] 2.71ns  loc: filterbank.c:95
:11  %Vect_F_load_1 = load float* %Vect_F_addr_1, align 4


 <State 32>: 10.97ns
ST_32: Vect_F_load_1 (205)  [1/2] 2.71ns  loc: filterbank.c:95
:11  %Vect_F_load_1 = load float* %Vect_F_addr_1, align 4

ST_32: tmp_30 (206)  [5/5] 8.26ns  loc: filterbank.c:95
:12  %tmp_30 = fadd float %Vect_F_load_1, %tmp_29


 <State 33>: 8.26ns
ST_33: tmp_30 (206)  [4/5] 8.26ns  loc: filterbank.c:95
:12  %tmp_30 = fadd float %Vect_F_load_1, %tmp_29


 <State 34>: 8.26ns
ST_34: tmp_30 (206)  [3/5] 8.26ns  loc: filterbank.c:95
:12  %tmp_30 = fadd float %Vect_F_load_1, %tmp_29


 <State 35>: 8.26ns
ST_35: tmp_30 (206)  [2/5] 8.26ns  loc: filterbank.c:95
:12  %tmp_30 = fadd float %Vect_F_load_1, %tmp_29


 <State 36>: 10.97ns
ST_36: tmp_36 (194)  [1/1] 0.00ns  loc: filterbank.c:95
:0  %tmp_36 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8) nounwind

ST_36: StgValue_242 (195)  [1/1] 0.00ns  loc: filterbank.c:94
:1  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_36: tmp_30 (206)  [1/5] 8.26ns  loc: filterbank.c:95
:12  %tmp_30 = fadd float %Vect_F_load_1, %tmp_29

ST_36: StgValue_244 (207)  [1/1] 2.71ns  loc: filterbank.c:95
:13  store float %tmp_30, float* %Vect_F_addr_1, align 4

ST_36: empty_20 (208)  [1/1] 0.00ns  loc: filterbank.c:95
:14  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_36) nounwind

ST_36: StgValue_246 (209)  [1/1] 0.00ns  loc: filterbank.c:93
:15  br label %.preheader8


 <State 37>: 0.00ns
ST_37: StgValue_247 (211)  [1/1] 0.00ns  loc: filterbank.c:92
.critedge7:0  br label %.preheader9


 <State 38>: 2.71ns
ST_38: j_4 (215)  [1/1] 0.00ns
.preheader:0  %j_4 = phi i9 [ %j_8, %11 ], [ 0, %.preheader.preheader ]

ST_38: exitcond (216)  [1/1] 2.51ns  loc: filterbank.c:100
.preheader:1  %exitcond = icmp eq i9 %j_4, -256

ST_38: j_8 (217)  [1/1] 1.79ns  loc: filterbank.c:100
.preheader:2  %j_8 = add i9 %j_4, 1

ST_38: StgValue_251 (218)  [1/1] 0.00ns  loc: filterbank.c:100
.preheader:3  br i1 %exitcond, label %.preheader13.loopexit, label %11

ST_38: tmp_23 (223)  [1/1] 0.00ns  loc: filterbank.c:102
:3  %tmp_23 = zext i9 %j_4 to i64

ST_38: Vect_F_addr_2 (224)  [1/1] 0.00ns  loc: filterbank.c:102
:4  %Vect_F_addr_2 = getelementptr inbounds [256 x float]* %Vect_F, i64 0, i64 %tmp_23

ST_38: Vect_F_load (225)  [2/2] 2.71ns  loc: filterbank.c:102
:5  %Vect_F_load = load float* %Vect_F_addr_2, align 4

ST_38: y_addr_1 (226)  [1/1] 0.00ns  loc: filterbank.c:102
:6  %y_addr_1 = getelementptr [256 x float]* %y, i64 0, i64 %tmp_23

ST_38: y_load (227)  [2/2] 2.71ns  loc: filterbank.c:102
:7  %y_load = load float* %y_addr_1, align 4


 <State 39>: 2.71ns
ST_39: Vect_F_load (225)  [1/2] 2.71ns  loc: filterbank.c:102
:5  %Vect_F_load = load float* %Vect_F_addr_2, align 4

ST_39: y_load (227)  [1/2] 2.71ns  loc: filterbank.c:102
:7  %y_load = load float* %y_addr_1, align 4


 <State 40>: 8.26ns
ST_40: tmp_24 (228)  [5/5] 8.26ns  loc: filterbank.c:102
:8  %tmp_24 = fadd float %y_load, %Vect_F_load


 <State 41>: 8.26ns
ST_41: tmp_24 (228)  [4/5] 8.26ns  loc: filterbank.c:102
:8  %tmp_24 = fadd float %y_load, %Vect_F_load


 <State 42>: 8.26ns
ST_42: tmp_24 (228)  [3/5] 8.26ns  loc: filterbank.c:102
:8  %tmp_24 = fadd float %y_load, %Vect_F_load


 <State 43>: 8.26ns
ST_43: tmp_24 (228)  [2/5] 8.26ns  loc: filterbank.c:102
:8  %tmp_24 = fadd float %y_load, %Vect_F_load


 <State 44>: 8.26ns
ST_44: tmp_24 (228)  [1/5] 8.26ns  loc: filterbank.c:102
:8  %tmp_24 = fadd float %y_load, %Vect_F_load


 <State 45>: 2.71ns
ST_45: empty_21 (220)  [1/1] 0.00ns
:0  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_45: tmp_35 (221)  [1/1] 0.00ns  loc: filterbank.c:100
:1  %tmp_35 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9) nounwind

ST_45: StgValue_266 (222)  [1/1] 0.00ns  loc: filterbank.c:101
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_45: StgValue_267 (229)  [1/1] 2.71ns  loc: filterbank.c:102
:9  store float %tmp_24, float* %y_addr_1, align 4

ST_45: empty_22 (230)  [1/1] 0.00ns  loc: filterbank.c:103
:10  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_35) nounwind

ST_45: StgValue_269 (231)  [1/1] 0.00ns  loc: filterbank.c:100
:11  br label %.preheader


 <State 46>: 0.00ns
ST_46: StgValue_270 (233)  [1/1] 0.00ns
.preheader13.loopexit:0  br label %.preheader13



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', filterbank.c:54) [25]  (1.57 ns)

 <State 2>: 2.71ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', filterbank.c:54) [25]  (0 ns)
	'getelementptr' operation ('y_addr', filterbank.c:56) [34]  (0 ns)
	'store' operation (filterbank.c:56) of constant 0 on array 'y' [35]  (2.71 ns)

 <State 3>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', filterbank.c:59) [41]  (1.57 ns)

 <State 4>: 2.33ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', filterbank.c:59) [41]  (0 ns)
	'icmp' operation ('exitcond5', filterbank.c:59) [42]  (2.33 ns)

 <State 5>: 2.71ns
The critical path consists of the following:
	'phi' operation ('invdar', filterbank.c:61) with incoming values : ('indvarinc', filterbank.c:61) [49]  (0 ns)
	'getelementptr' operation ('Vect_H_addr', filterbank.c:61) [52]  (0 ns)
	'store' operation (filterbank.c:61) of constant 0 on array 'Vect_H', filterbank.c:61 [53]  (2.71 ns)

 <State 6>: 2.71ns
The critical path consists of the following:
	'phi' operation ('invdar1', filterbank.c:65) with incoming values : ('indvarinc1', filterbank.c:65) [61]  (0 ns)
	'getelementptr' operation ('Vect_Up_addr', filterbank.c:65) [64]  (0 ns)
	'store' operation (filterbank.c:65) of constant 0 on array 'Vect_Up', filterbank.c:65 [65]  (2.71 ns)

 <State 7>: 2.71ns
The critical path consists of the following:
	'phi' operation ('invdar2', filterbank.c:67) with incoming values : ('indvarinc2', filterbank.c:67) [73]  (0 ns)
	'getelementptr' operation ('Vect_F_addr', filterbank.c:67) [76]  (0 ns)
	'store' operation (filterbank.c:67) of constant 0 on array 'Vect_F', filterbank.c:67 [77]  (2.71 ns)

 <State 8>: 2.51ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', filterbank.c:71) [87]  (0 ns)
	'icmp' operation ('exitcond4', filterbank.c:71) [88]  (2.51 ns)

 <State 9>: 4.5ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', filterbank.c:72) [97]  (0 ns)
	'add' operation ('tmp_31', filterbank.c:74) [112]  (1.79 ns)
	'getelementptr' operation ('H_addr', filterbank.c:74) [114]  (0 ns)
	'load' operation ('H_load', filterbank.c:74) on array 'H' [115]  (2.71 ns)

 <State 10>: 8.49ns
The critical path consists of the following:
	'load' operation ('H_load', filterbank.c:74) on array 'H' [115]  (2.71 ns)
	'fmul' operation ('tmp_16', filterbank.c:74) [119]  (5.78 ns)

 <State 11>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_16', filterbank.c:74) [119]  (5.78 ns)

 <State 12>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_16', filterbank.c:74) [119]  (5.78 ns)

 <State 13>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_16', filterbank.c:74) [119]  (5.78 ns)

 <State 14>: 11ns
The critical path consists of the following:
	'load' operation ('Vect_H_load_1', filterbank.c:74) on array 'Vect_H', filterbank.c:61 [120]  (2.71 ns)
	'fadd' operation ('tmp_17', filterbank.c:74) [121]  (8.26 ns)

 <State 15>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_17', filterbank.c:74) [121]  (8.26 ns)

 <State 16>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_17', filterbank.c:74) [121]  (8.26 ns)

 <State 17>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_17', filterbank.c:74) [121]  (8.26 ns)

 <State 18>: 11ns
The critical path consists of the following:
	'fadd' operation ('tmp_17', filterbank.c:74) [121]  (8.26 ns)
	'store' operation (filterbank.c:74) of variable 'tmp_17', filterbank.c:74 on array 'Vect_H', filterbank.c:61 [122]  (2.71 ns)

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 2.71ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', filterbank.c:78) [130]  (0 ns)
	'getelementptr' operation ('Vect_H_addr_2', filterbank.c:80) [141]  (0 ns)
	'load' operation ('Vect_H_load', filterbank.c:80) on array 'Vect_H', filterbank.c:61 [142]  (2.71 ns)

 <State 21>: 5.42ns
The critical path consists of the following:
	'load' operation ('Vect_H_load', filterbank.c:80) on array 'Vect_H', filterbank.c:61 [142]  (2.71 ns)
	'store' operation (filterbank.c:80) of variable 'Vect_H_load', filterbank.c:80 on array 'Vect_Dn', filterbank.c:63 [145]  (2.71 ns)

 <State 22>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', filterbank.c:85) [151]  (1.57 ns)

 <State 23>: 2.71ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', filterbank.c:85) [151]  (0 ns)
	'getelementptr' operation ('Vect_Dn_addr_1', filterbank.c:87) [160]  (0 ns)
	'load' operation ('Vect_Dn_load', filterbank.c:87) on array 'Vect_Dn', filterbank.c:63 [161]  (2.71 ns)

 <State 24>: 5.42ns
The critical path consists of the following:
	'load' operation ('Vect_Dn_load', filterbank.c:87) on array 'Vect_Dn', filterbank.c:63 [161]  (2.71 ns)
	'store' operation (filterbank.c:87) of variable 'Vect_Dn_load', filterbank.c:87 on array 'Vect_Up', filterbank.c:65 [166]  (2.71 ns)

 <State 25>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', filterbank.c:92) [172]  (1.57 ns)

 <State 26>: 2.51ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', filterbank.c:92) [172]  (0 ns)
	'icmp' operation ('exitcond1', filterbank.c:92) [173]  (2.51 ns)

 <State 27>: 4.5ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', filterbank.c:93) [182]  (0 ns)
	'add' operation ('tmp_38', filterbank.c:95) [197]  (1.79 ns)
	'getelementptr' operation ('F_addr', filterbank.c:95) [199]  (0 ns)
	'load' operation ('F_load', filterbank.c:95) on array 'F' [200]  (2.71 ns)

 <State 28>: 8.49ns
The critical path consists of the following:
	'load' operation ('F_load', filterbank.c:95) on array 'F' [200]  (2.71 ns)
	'fmul' operation ('tmp_29', filterbank.c:95) [204]  (5.78 ns)

 <State 29>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_29', filterbank.c:95) [204]  (5.78 ns)

 <State 30>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_29', filterbank.c:95) [204]  (5.78 ns)

 <State 31>: 5.78ns
The critical path consists of the following:
	'fmul' operation ('tmp_29', filterbank.c:95) [204]  (5.78 ns)

 <State 32>: 11ns
The critical path consists of the following:
	'load' operation ('Vect_F_load_1', filterbank.c:95) on array 'Vect_F', filterbank.c:67 [205]  (2.71 ns)
	'fadd' operation ('tmp_30', filterbank.c:95) [206]  (8.26 ns)

 <State 33>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_30', filterbank.c:95) [206]  (8.26 ns)

 <State 34>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_30', filterbank.c:95) [206]  (8.26 ns)

 <State 35>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_30', filterbank.c:95) [206]  (8.26 ns)

 <State 36>: 11ns
The critical path consists of the following:
	'fadd' operation ('tmp_30', filterbank.c:95) [206]  (8.26 ns)
	'store' operation (filterbank.c:95) of variable 'tmp_30', filterbank.c:95 on array 'Vect_F', filterbank.c:67 [207]  (2.71 ns)

 <State 37>: 0ns
The critical path consists of the following:

 <State 38>: 2.71ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', filterbank.c:100) [215]  (0 ns)
	'getelementptr' operation ('Vect_F_addr_2', filterbank.c:102) [224]  (0 ns)
	'load' operation ('Vect_F_load', filterbank.c:102) on array 'Vect_F', filterbank.c:67 [225]  (2.71 ns)

 <State 39>: 2.71ns
The critical path consists of the following:
	'load' operation ('Vect_F_load', filterbank.c:102) on array 'Vect_F', filterbank.c:67 [225]  (2.71 ns)

 <State 40>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_24', filterbank.c:102) [228]  (8.26 ns)

 <State 41>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_24', filterbank.c:102) [228]  (8.26 ns)

 <State 42>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_24', filterbank.c:102) [228]  (8.26 ns)

 <State 43>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_24', filterbank.c:102) [228]  (8.26 ns)

 <State 44>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_24', filterbank.c:102) [228]  (8.26 ns)

 <State 45>: 2.71ns
The critical path consists of the following:
	'store' operation (filterbank.c:102) of variable 'tmp_24', filterbank.c:102 on array 'y' [229]  (2.71 ns)

 <State 46>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
