// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aesl_mux_load_4_256_s_HH_
#define _aesl_mux_load_4_256_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aesl_mux_load_4_256_s : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_lv<32> > empty_15_Addr_A;
    sc_out< sc_logic > empty_15_EN_A;
    sc_out< sc_lv<4> > empty_15_WEN_A;
    sc_out< sc_lv<32> > empty_15_Din_A;
    sc_in< sc_lv<32> > empty_15_Dout_A;
    sc_out< sc_lv<32> > empty_16_Addr_A;
    sc_out< sc_logic > empty_16_EN_A;
    sc_out< sc_lv<4> > empty_16_WEN_A;
    sc_out< sc_lv<32> > empty_16_Din_A;
    sc_in< sc_lv<32> > empty_16_Dout_A;
    sc_out< sc_lv<32> > empty_17_Addr_A;
    sc_out< sc_logic > empty_17_EN_A;
    sc_out< sc_lv<4> > empty_17_WEN_A;
    sc_out< sc_lv<32> > empty_17_Din_A;
    sc_in< sc_lv<32> > empty_17_Dout_A;
    sc_out< sc_lv<32> > empty_18_Addr_A;
    sc_out< sc_logic > empty_18_EN_A;
    sc_out< sc_lv<4> > empty_18_WEN_A;
    sc_out< sc_lv<32> > empty_18_Din_A;
    sc_in< sc_lv<32> > empty_18_Dout_A;
    sc_in< sc_lv<57> > empty_19;
    sc_in< sc_lv<8> > empty;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    aesl_mux_load_4_256_s(sc_module_name name);
    SC_HAS_PROCESS(aesl_mux_load_4_256_s);

    ~aesl_mux_load_4_256_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > sel_tmp_fu_106_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_165;
    sc_signal< sc_lv<1> > sel_tmp2_fu_112_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_170;
    sc_signal< sc_lv<1> > sel_tmp4_fu_118_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_175;
    sc_signal< sc_lv<64> > p_cast1_fu_98_p1;
    sc_signal< sc_lv<32> > empty_18_Addr_A_orig;
    sc_signal< sc_lv<32> > empty_15_Addr_A_orig;
    sc_signal< sc_lv<32> > empty_16_Addr_A_orig;
    sc_signal< sc_lv<32> > empty_17_Addr_A_orig;
    sc_signal< sc_lv<32> > sel_tmp1_fu_124_p3;
    sc_signal< sc_lv<32> > sel_tmp3_fu_131_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_pipeline_idle_pp0;
    sc_signal< sc_logic > ap_pipeline_start_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<57> ap_const_lv57_0;
    static const sc_lv<57> ap_const_lv57_1;
    static const sc_lv<57> ap_const_lv57_2;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_done();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_pipeline_idle_pp0();
    void thread_ap_pipeline_start_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_empty_15_Addr_A();
    void thread_empty_15_Addr_A_orig();
    void thread_empty_15_Din_A();
    void thread_empty_15_EN_A();
    void thread_empty_15_WEN_A();
    void thread_empty_16_Addr_A();
    void thread_empty_16_Addr_A_orig();
    void thread_empty_16_Din_A();
    void thread_empty_16_EN_A();
    void thread_empty_16_WEN_A();
    void thread_empty_17_Addr_A();
    void thread_empty_17_Addr_A_orig();
    void thread_empty_17_Din_A();
    void thread_empty_17_EN_A();
    void thread_empty_17_WEN_A();
    void thread_empty_18_Addr_A();
    void thread_empty_18_Addr_A_orig();
    void thread_empty_18_Din_A();
    void thread_empty_18_EN_A();
    void thread_empty_18_WEN_A();
    void thread_p_cast1_fu_98_p1();
    void thread_sel_tmp1_fu_124_p3();
    void thread_sel_tmp2_fu_112_p2();
    void thread_sel_tmp3_fu_131_p3();
    void thread_sel_tmp4_fu_118_p2();
    void thread_sel_tmp_fu_106_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
