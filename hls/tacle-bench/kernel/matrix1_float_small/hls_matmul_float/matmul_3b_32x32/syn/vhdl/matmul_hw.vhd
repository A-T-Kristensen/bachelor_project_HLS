-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_EN_A : OUT STD_LOGIC;
    a_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_Clk_A : OUT STD_LOGIC;
    a_Rst_A : OUT STD_LOGIC;
    b_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_EN_A : OUT STD_LOGIC;
    b_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_Clk_A : OUT STD_LOGIC;
    b_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.436600,HLS_SYN_LAT=32903,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1972,HLS_SYN_LUT=2630}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv9_E0 : STD_LOGIC_VECTOR (8 downto 0) := "011100000";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv9_160 : STD_LOGIC_VECTOR (8 downto 0) := "101100000";
    constant ap_const_lv10_1E0 : STD_LOGIC_VECTOR (9 downto 0) := "0111100000";
    constant ap_const_lv10_220 : STD_LOGIC_VECTOR (9 downto 0) := "1000100000";
    constant ap_const_lv10_260 : STD_LOGIC_VECTOR (9 downto 0) := "1001100000";
    constant ap_const_lv10_2A0 : STD_LOGIC_VECTOR (9 downto 0) := "1010100000";
    constant ap_const_lv10_2E0 : STD_LOGIC_VECTOR (9 downto 0) := "1011100000";
    constant ap_const_lv11_3E0 : STD_LOGIC_VECTOR (10 downto 0) := "01111100000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv53_0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv58_1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv58_2 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv58_3 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv58_4 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv11_9 : STD_LOGIC_VECTOR (10 downto 0) := "00000001001";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv58_5 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv58_6 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv58_7 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv11_F : STD_LOGIC_VECTOR (10 downto 0) := "00000001111";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv58_8 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv11_11 : STD_LOGIC_VECTOR (10 downto 0) := "00000010001";
    constant ap_const_lv11_12 : STD_LOGIC_VECTOR (10 downto 0) := "00000010010";
    constant ap_const_lv58_9 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv11_13 : STD_LOGIC_VECTOR (10 downto 0) := "00000010011";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv58_A : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv11_15 : STD_LOGIC_VECTOR (10 downto 0) := "00000010101";
    constant ap_const_lv11_16 : STD_LOGIC_VECTOR (10 downto 0) := "00000010110";
    constant ap_const_lv58_B : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv11_17 : STD_LOGIC_VECTOR (10 downto 0) := "00000010111";
    constant ap_const_lv11_18 : STD_LOGIC_VECTOR (10 downto 0) := "00000011000";
    constant ap_const_lv58_C : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv11_19 : STD_LOGIC_VECTOR (10 downto 0) := "00000011001";
    constant ap_const_lv11_1A : STD_LOGIC_VECTOR (10 downto 0) := "00000011010";
    constant ap_const_lv58_D : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv11_1B : STD_LOGIC_VECTOR (10 downto 0) := "00000011011";
    constant ap_const_lv11_1C : STD_LOGIC_VECTOR (10 downto 0) := "00000011100";
    constant ap_const_lv58_E : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv11_1D : STD_LOGIC_VECTOR (10 downto 0) := "00000011101";
    constant ap_const_lv11_1E : STD_LOGIC_VECTOR (10 downto 0) := "00000011110";
    constant ap_const_lv58_F : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv11_1F : STD_LOGIC_VECTOR (10 downto 0) := "00000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_728 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_740 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_751 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_762_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal reg_773 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal indvar_flatten_next_reg_778 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal j_1_reg_797 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal reg_804 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal tmp_77_reg_812 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal tmp_80_reg_818 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal tmp_82_reg_824 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal tmp_84_reg_830 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal tmp_86_reg_836 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal tmp_88_reg_842 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal tmp_93_reg_848 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal tmp_94_reg_852 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_tmp_94_reg_852 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_94_reg_852 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_94_reg_852 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_94_reg_852 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal grp_fu_961_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1099 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal reg_1115 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_1143_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_mid2_reg_1864 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_1151_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_reg_1890 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1159_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_1895 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_cast5_cast1_fu_1214_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast5_cast1_reg_1956 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_1_reg_1996 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast5_cast_fu_1300_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast5_cast_reg_2006 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_2_reg_2016 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_3_reg_2031 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_4_reg_2046 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast5_fu_1367_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_cast5_reg_2056 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_6_reg_2076 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_7_reg_2091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_8_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_9_reg_2121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_2121 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_s_reg_2136 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_2136 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_10_reg_2151 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_2151 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_11_reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_11_reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_12_reg_2181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_12_reg_2181 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_13_reg_2196 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_13_reg_2196 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_14_reg_2211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_14_reg_2211 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_15_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_15_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_15_reg_2226 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_16_reg_2241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_16_reg_2241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_16_reg_2241 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_17_reg_2256 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_17_reg_2256 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_17_reg_2256 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_18_reg_2271 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_18_reg_2271 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_18_reg_2271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_19_reg_2286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_19_reg_2286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_19_reg_2286 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_20_reg_2301 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_20_reg_2301 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_20_reg_2301 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_21_reg_2316 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_21_reg_2316 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_21_reg_2316 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_22_reg_2331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_22_reg_2331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_22_reg_2331 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_23_reg_2346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_23_reg_2346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_23_reg_2346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_23_reg_2346 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_24_reg_2361 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_24_reg_2361 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_24_reg_2361 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_24_reg_2361 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_25_reg_2376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_25_reg_2376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_25_reg_2376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_25_reg_2376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal tmp_6_26_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_26_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_26_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_26_reg_2391 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_27_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_27_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_27_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_27_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_28_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_28_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_28_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_28_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_29_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_29_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_29_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_29_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_30_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_30_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_30_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_30_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_29_reg_2436 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_phi_fu_732_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_phi_fu_744_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_phi_fu_755_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_1167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1182_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_cast_fu_1195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1205_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_68_fu_1218_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_1231_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_69_cast_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1250_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_fu_1259_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_1272_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_cast_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1291_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_fu_1304_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1317_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_cast_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1336_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_fu_1345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1358_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_cast_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1381_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_1390_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1403_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_cast_fu_1412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1422_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_1431_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1444_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_cast_fu_1457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1467_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_1480_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_1497_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_cast_fu_1510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1520_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_81_fu_1529_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1542_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_83_cast_fu_1551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1561_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_83_fu_1570_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1583_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_cast_fu_1592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_1602_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_fu_1611_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1624_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_cast_fu_1633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_1643_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_fu_1652_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1665_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_cast_fu_1674_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_1684_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_fu_1693_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_1706_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_cast_fu_1719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_1729_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_fu_1738_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_1751_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_cast_fu_1764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_1774_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_1783_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_1796_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_cast_fu_1809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_1819_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_92_fu_1828_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_fu_1841_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_cast_fu_1850_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_98_cast_fu_1855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_762_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_cast_fu_1191_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_cast6_fu_1476_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_cast_fu_1488_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_762_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_cast7_fu_1506_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_856_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_v_fu_1151_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_1177_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_67_cast_fu_1195_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_1200_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_fu_1226_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_11_fu_1245_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_1267_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_1286_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_1312_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_fu_1331_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_1353_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_1376_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_1398_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_1417_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_fu_1439_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_79_cast1_fu_1453_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_1462_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_33_fu_1492_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_1515_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_fu_1537_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_39_fu_1556_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_fu_1578_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_fu_1597_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_fu_1619_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_fu_1638_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_fu_1660_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_1679_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_fu_1701_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_91_cast1_fu_1715_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_fu_1724_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_57_fu_1746_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_93_cast9_fu_1760_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_fu_1769_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_61_fu_1791_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_95_cast8_fu_1805_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_63_fu_1814_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_65_fu_1836_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state168 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state168 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);

    component matmul_hw_fadd_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32bkb_U1 : component matmul_hw_fadd_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_856_p0,
        din1 => grp_fu_856_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_856_p2);

    matmul_hw_fmul_32cud_U2 : component matmul_hw_fmul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_Dout_A,
        din1 => b_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_961_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and not((exitcond_flatten_reg_1860 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31) and not((exitcond_flatten_reg_1860 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_740 <= tmp_mid2_v_reg_1890;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_740 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_728 <= indvar_flatten_next_reg_778;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_728 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_reg_751_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_751 <= j_1_reg_797;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_751 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860 <= exitcond_flatten_reg_1860;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860;
                ap_pipeline_reg_pp0_iter2_tmp_6_27_reg_2406 <= tmp_6_27_reg_2406;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860;
                ap_pipeline_reg_pp0_iter3_tmp_6_27_reg_2406 <= ap_pipeline_reg_pp0_iter2_tmp_6_27_reg_2406;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860;
                ap_pipeline_reg_pp0_iter4_tmp_6_27_reg_2406 <= ap_pipeline_reg_pp0_iter3_tmp_6_27_reg_2406;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1860 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860;
                exitcond_flatten_reg_1860 <= exitcond_flatten_fu_1131_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_2151 <= tmp_6_10_reg_2151;
                ap_pipeline_reg_pp0_iter1_tmp_94_reg_852 <= tmp_94_reg_852;
                ap_pipeline_reg_pp0_iter2_tmp_94_reg_852 <= ap_pipeline_reg_pp0_iter1_tmp_94_reg_852;
                ap_pipeline_reg_pp0_iter3_tmp_94_reg_852 <= ap_pipeline_reg_pp0_iter2_tmp_94_reg_852;
                ap_pipeline_reg_pp0_iter4_tmp_94_reg_852 <= ap_pipeline_reg_pp0_iter3_tmp_94_reg_852;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_11_reg_2166 <= tmp_6_11_reg_2166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_12_reg_2181 <= tmp_6_12_reg_2181;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_13_reg_2196 <= tmp_6_13_reg_2196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_14_reg_2211 <= tmp_6_14_reg_2211;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_15_reg_2226 <= tmp_6_15_reg_2226;
                ap_pipeline_reg_pp0_iter2_tmp_6_15_reg_2226 <= ap_pipeline_reg_pp0_iter1_tmp_6_15_reg_2226;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_16_reg_2241 <= tmp_6_16_reg_2241;
                ap_pipeline_reg_pp0_iter2_tmp_6_16_reg_2241 <= ap_pipeline_reg_pp0_iter1_tmp_6_16_reg_2241;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_17_reg_2256 <= tmp_6_17_reg_2256;
                ap_pipeline_reg_pp0_iter2_tmp_6_17_reg_2256 <= ap_pipeline_reg_pp0_iter1_tmp_6_17_reg_2256;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_18_reg_2271 <= tmp_6_18_reg_2271;
                ap_pipeline_reg_pp0_iter2_tmp_6_18_reg_2271 <= ap_pipeline_reg_pp0_iter1_tmp_6_18_reg_2271;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_19_reg_2286 <= tmp_6_19_reg_2286;
                ap_pipeline_reg_pp0_iter2_tmp_6_19_reg_2286 <= ap_pipeline_reg_pp0_iter1_tmp_6_19_reg_2286;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_20_reg_2301 <= tmp_6_20_reg_2301;
                ap_pipeline_reg_pp0_iter2_tmp_6_20_reg_2301 <= ap_pipeline_reg_pp0_iter1_tmp_6_20_reg_2301;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_21_reg_2316 <= tmp_6_21_reg_2316;
                ap_pipeline_reg_pp0_iter2_tmp_6_21_reg_2316 <= ap_pipeline_reg_pp0_iter1_tmp_6_21_reg_2316;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_22_reg_2331 <= tmp_6_22_reg_2331;
                ap_pipeline_reg_pp0_iter2_tmp_6_22_reg_2331 <= ap_pipeline_reg_pp0_iter1_tmp_6_22_reg_2331;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_23_reg_2346 <= tmp_6_23_reg_2346;
                ap_pipeline_reg_pp0_iter2_tmp_6_23_reg_2346 <= ap_pipeline_reg_pp0_iter1_tmp_6_23_reg_2346;
                ap_pipeline_reg_pp0_iter3_tmp_6_23_reg_2346 <= ap_pipeline_reg_pp0_iter2_tmp_6_23_reg_2346;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage29))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_24_reg_2361 <= tmp_6_24_reg_2361;
                ap_pipeline_reg_pp0_iter2_tmp_6_24_reg_2361 <= ap_pipeline_reg_pp0_iter1_tmp_6_24_reg_2361;
                ap_pipeline_reg_pp0_iter3_tmp_6_24_reg_2361 <= ap_pipeline_reg_pp0_iter2_tmp_6_24_reg_2361;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage30))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_25_reg_2376 <= tmp_6_25_reg_2376;
                ap_pipeline_reg_pp0_iter2_tmp_6_25_reg_2376 <= ap_pipeline_reg_pp0_iter1_tmp_6_25_reg_2376;
                ap_pipeline_reg_pp0_iter3_tmp_6_25_reg_2376 <= ap_pipeline_reg_pp0_iter2_tmp_6_25_reg_2376;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_26_reg_2391 <= tmp_6_26_reg_2391;
                ap_pipeline_reg_pp0_iter2_tmp_6_26_reg_2391 <= ap_pipeline_reg_pp0_iter1_tmp_6_26_reg_2391;
                ap_pipeline_reg_pp0_iter3_tmp_6_26_reg_2391 <= ap_pipeline_reg_pp0_iter2_tmp_6_26_reg_2391;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_2106 <= tmp_6_8_reg_2106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_2121 <= tmp_6_9_reg_2121;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_2136 <= tmp_6_s_reg_2136;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_28_reg_2421 <= tmp_6_28_reg_2421;
                ap_pipeline_reg_pp0_iter3_tmp_6_28_reg_2421 <= ap_pipeline_reg_pp0_iter2_tmp_6_28_reg_2421;
                ap_pipeline_reg_pp0_iter4_tmp_6_28_reg_2421 <= ap_pipeline_reg_pp0_iter3_tmp_6_28_reg_2421;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_29_reg_2426 <= tmp_6_29_reg_2426;
                ap_pipeline_reg_pp0_iter3_tmp_6_29_reg_2426 <= ap_pipeline_reg_pp0_iter2_tmp_6_29_reg_2426;
                ap_pipeline_reg_pp0_iter4_tmp_6_29_reg_2426 <= ap_pipeline_reg_pp0_iter3_tmp_6_29_reg_2426;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_30_reg_2431 <= tmp_6_30_reg_2431;
                ap_pipeline_reg_pp0_iter3_tmp_6_30_reg_2431 <= ap_pipeline_reg_pp0_iter2_tmp_6_30_reg_2431;
                ap_pipeline_reg_pp0_iter4_tmp_6_30_reg_2431 <= ap_pipeline_reg_pp0_iter3_tmp_6_30_reg_2431;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                indvar_flatten_next_reg_778 <= grp_fu_762_p2(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                j_1_reg_797 <= grp_fu_762_p2(6 - 1 downto 0);
                tmp_6_1_reg_1996 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_1131_p2))) then
                j_mid2_reg_1864 <= j_mid2_fu_1143_p3;
                    tmp_reg_1895(10 downto 5) <= tmp_fu_1159_p3(10 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_1099 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)))) then
                reg_1105 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then
                reg_1110 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage30) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1860)))) then
                reg_1115 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1860)))) then
                reg_1121 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860)))) then
                reg_1126 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_773 <= grp_fu_762_p2(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_804 <= grp_fu_762_p2(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1860) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31))) then
                tmp_1_29_reg_2436 <= grp_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_1860 = ap_const_lv1_0))) then
                    tmp_2_cast5_cast1_reg_1956(5 downto 0) <= tmp_2_cast5_cast1_fu_1214_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                    tmp_2_cast5_cast_reg_2006(5 downto 0) <= tmp_2_cast5_cast_fu_1300_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                    tmp_2_cast5_reg_2056(5 downto 0) <= tmp_2_cast5_fu_1367_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                tmp_6_10_reg_2151 <= grp_fu_961_p2;
                tmp_94_reg_852 <= grp_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16))) then
                tmp_6_11_reg_2166 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then
                tmp_6_12_reg_2181 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then
                tmp_6_13_reg_2196 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then
                tmp_6_14_reg_2211 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then
                tmp_6_15_reg_2226 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then
                tmp_6_16_reg_2241 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22))) then
                tmp_6_17_reg_2256 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then
                tmp_6_18_reg_2271 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24))) then
                tmp_6_19_reg_2286 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25))) then
                tmp_6_20_reg_2301 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26))) then
                tmp_6_21_reg_2316 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage27))) then
                tmp_6_22_reg_2331 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage28))) then
                tmp_6_23_reg_2346 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage29))) then
                tmp_6_24_reg_2361 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage30))) then
                tmp_6_25_reg_2376 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31))) then
                tmp_6_26_reg_2391 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_6_27_reg_2406 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860))) then
                tmp_6_28_reg_2421 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860))) then
                tmp_6_29_reg_2426 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_6_2_reg_2016 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1860))) then
                tmp_6_30_reg_2431 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_6_3_reg_2031 <= grp_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                tmp_6_4_reg_2046 <= grp_fu_961_p2;
                tmp_77_reg_812 <= grp_fu_762_p2(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_6_6_reg_2076 <= grp_fu_961_p2;
                tmp_82_reg_824 <= grp_fu_762_p2(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                tmp_6_7_reg_2091 <= grp_fu_961_p2;
                tmp_84_reg_830 <= grp_fu_762_p2(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                tmp_6_8_reg_2106 <= grp_fu_961_p2;
                tmp_86_reg_836 <= grp_fu_762_p2(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                tmp_6_9_reg_2121 <= grp_fu_961_p2;
                tmp_88_reg_842 <= grp_fu_762_p2(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                tmp_6_s_reg_2136 <= grp_fu_961_p2;
                tmp_93_reg_848 <= grp_fu_762_p2(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                tmp_80_reg_818 <= grp_fu_762_p2(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_1131_p2))) then
                tmp_mid2_v_reg_1890 <= tmp_mid2_v_fu_1151_p3;
            end if;
        end if;
    end process;
    tmp_reg_1895(4 downto 0) <= "00000";
    tmp_2_cast5_cast1_reg_1956(7 downto 6) <= "00";
    tmp_2_cast5_cast_reg_2006(8 downto 6) <= "000";
    tmp_2_cast5_reg_2056(9 downto 6) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_1860, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_reg_1860 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state168;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state168;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
            when ap_ST_fsm_pp0_stage16 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
            when ap_ST_fsm_pp0_stage17 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
            when ap_ST_fsm_pp0_stage18 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
            when ap_ST_fsm_pp0_stage19 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
            when ap_ST_fsm_pp0_stage20 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
            when ap_ST_fsm_pp0_stage21 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
            when ap_ST_fsm_pp0_stage22 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
            when ap_ST_fsm_pp0_stage23 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
            when ap_ST_fsm_pp0_stage24 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
            when ap_ST_fsm_pp0_stage25 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
            when ap_ST_fsm_pp0_stage26 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
            when ap_ST_fsm_pp0_stage27 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
            when ap_ST_fsm_pp0_stage28 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
            when ap_ST_fsm_pp0_stage29 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
            when ap_ST_fsm_pp0_stage30 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
            when ap_ST_fsm_pp0_stage31 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_Addr_A <= std_logic_vector(shift_left(unsigned(a_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, tmp_3_fu_1167_p1, tmp_5_fu_1182_p3, tmp_8_fu_1205_p3, tmp_10_fu_1231_p3, tmp_12_fu_1250_p3, tmp_14_fu_1272_p3, tmp_16_fu_1291_p3, tmp_18_fu_1317_p3, tmp_20_fu_1336_p3, tmp_22_fu_1358_p3, tmp_24_fu_1381_p3, tmp_26_fu_1403_p3, tmp_28_fu_1422_p3, tmp_30_fu_1444_p3, tmp_32_fu_1467_p3, tmp_34_fu_1497_p3, tmp_36_fu_1520_p3, tmp_38_fu_1542_p3, tmp_40_fu_1561_p3, tmp_42_fu_1583_p3, tmp_44_fu_1602_p3, tmp_46_fu_1624_p3, tmp_48_fu_1643_p3, tmp_50_fu_1665_p3, tmp_52_fu_1684_p3, tmp_54_fu_1706_p3, tmp_56_fu_1729_p3, tmp_58_fu_1751_p3, tmp_60_fu_1774_p3, tmp_62_fu_1796_p3, tmp_64_fu_1819_p3, tmp_66_fu_1841_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                a_Addr_A_orig <= tmp_66_fu_1841_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage30)) then 
                a_Addr_A_orig <= tmp_64_fu_1819_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage29)) then 
                a_Addr_A_orig <= tmp_62_fu_1796_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28)) then 
                a_Addr_A_orig <= tmp_60_fu_1774_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27)) then 
                a_Addr_A_orig <= tmp_58_fu_1751_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) then 
                a_Addr_A_orig <= tmp_56_fu_1729_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) then 
                a_Addr_A_orig <= tmp_54_fu_1706_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) then 
                a_Addr_A_orig <= tmp_52_fu_1684_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                a_Addr_A_orig <= tmp_50_fu_1665_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                a_Addr_A_orig <= tmp_48_fu_1643_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                a_Addr_A_orig <= tmp_46_fu_1624_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) then 
                a_Addr_A_orig <= tmp_44_fu_1602_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                a_Addr_A_orig <= tmp_42_fu_1583_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) then 
                a_Addr_A_orig <= tmp_40_fu_1561_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                a_Addr_A_orig <= tmp_38_fu_1542_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                a_Addr_A_orig <= tmp_36_fu_1520_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                a_Addr_A_orig <= tmp_34_fu_1497_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                a_Addr_A_orig <= tmp_32_fu_1467_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                a_Addr_A_orig <= tmp_30_fu_1444_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                a_Addr_A_orig <= tmp_28_fu_1422_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                a_Addr_A_orig <= tmp_26_fu_1403_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                a_Addr_A_orig <= tmp_24_fu_1381_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                a_Addr_A_orig <= tmp_22_fu_1358_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                a_Addr_A_orig <= tmp_20_fu_1336_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_Addr_A_orig <= tmp_18_fu_1317_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_Addr_A_orig <= tmp_16_fu_1291_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_Addr_A_orig <= tmp_14_fu_1272_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_Addr_A_orig <= tmp_12_fu_1250_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_Addr_A_orig <= tmp_10_fu_1231_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_Addr_A_orig <= tmp_8_fu_1205_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_Addr_A_orig <= tmp_5_fu_1182_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_Addr_A_orig <= tmp_3_fu_1167_p1(32 - 1 downto 0);
            else 
                a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_Clk_A <= ap_clk;
    a_Din_A <= ap_const_lv32_0;

    a_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)))) then 
            a_EN_A <= ap_const_logic_1;
        else 
            a_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_Rst_A <= ap_rst;
    a_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state168 <= ap_CS_fsm(33 downto 33);

    ap_done_assign_proc : process(ap_CS_fsm_state168)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state168))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state168)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state168))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_Addr_A <= std_logic_vector(shift_left(unsigned(b_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, tmp_2_fu_1172_p1, tmp_67_cast_fu_1195_p1, tmp_68_fu_1218_p3, tmp_69_cast_fu_1240_p1, tmp_70_fu_1259_p3, tmp_71_cast_fu_1281_p1, tmp_72_fu_1304_p3, tmp_73_cast_fu_1326_p1, tmp_74_fu_1345_p3, tmp_75_cast_fu_1371_p1, tmp_76_fu_1390_p3, tmp_77_cast_fu_1412_p1, tmp_78_fu_1431_p3, tmp_79_cast_fu_1457_p1, tmp_79_fu_1480_p3, tmp_81_cast_fu_1510_p1, tmp_81_fu_1529_p3, tmp_83_cast_fu_1551_p1, tmp_83_fu_1570_p3, tmp_85_cast_fu_1592_p1, tmp_85_fu_1611_p3, tmp_87_cast_fu_1633_p1, tmp_87_fu_1652_p3, tmp_89_cast_fu_1674_p1, tmp_89_fu_1693_p3, tmp_91_cast_fu_1719_p1, tmp_90_fu_1738_p3, tmp_93_cast_fu_1764_p1, tmp_91_fu_1783_p3, tmp_95_cast_fu_1809_p1, tmp_92_fu_1828_p3, tmp_97_cast_fu_1850_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)) then 
                b_Addr_A_orig <= tmp_97_cast_fu_1850_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage30)) then 
                b_Addr_A_orig <= tmp_92_fu_1828_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage29)) then 
                b_Addr_A_orig <= tmp_95_cast_fu_1809_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28)) then 
                b_Addr_A_orig <= tmp_91_fu_1783_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27)) then 
                b_Addr_A_orig <= tmp_93_cast_fu_1764_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) then 
                b_Addr_A_orig <= tmp_90_fu_1738_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) then 
                b_Addr_A_orig <= tmp_91_cast_fu_1719_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) then 
                b_Addr_A_orig <= tmp_89_fu_1693_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                b_Addr_A_orig <= tmp_89_cast_fu_1674_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                b_Addr_A_orig <= tmp_87_fu_1652_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                b_Addr_A_orig <= tmp_87_cast_fu_1633_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) then 
                b_Addr_A_orig <= tmp_85_fu_1611_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                b_Addr_A_orig <= tmp_85_cast_fu_1592_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) then 
                b_Addr_A_orig <= tmp_83_fu_1570_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                b_Addr_A_orig <= tmp_83_cast_fu_1551_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                b_Addr_A_orig <= tmp_81_fu_1529_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                b_Addr_A_orig <= tmp_81_cast_fu_1510_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                b_Addr_A_orig <= tmp_79_fu_1480_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                b_Addr_A_orig <= tmp_79_cast_fu_1457_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                b_Addr_A_orig <= tmp_78_fu_1431_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                b_Addr_A_orig <= tmp_77_cast_fu_1412_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                b_Addr_A_orig <= tmp_76_fu_1390_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                b_Addr_A_orig <= tmp_75_cast_fu_1371_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                b_Addr_A_orig <= tmp_74_fu_1345_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_Addr_A_orig <= tmp_73_cast_fu_1326_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_Addr_A_orig <= tmp_72_fu_1304_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_Addr_A_orig <= tmp_71_cast_fu_1281_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_Addr_A_orig <= tmp_70_fu_1259_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_Addr_A_orig <= tmp_69_cast_fu_1240_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_Addr_A_orig <= tmp_68_fu_1218_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_Addr_A_orig <= tmp_67_cast_fu_1195_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_Addr_A_orig <= tmp_2_fu_1172_p1(32 - 1 downto 0);
            else 
                b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_Clk_A <= ap_clk;
    b_Din_A <= ap_const_lv32_0;

    b_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)))) then 
            b_EN_A <= ap_const_logic_1;
        else 
            b_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_Rst_A <= ap_rst;
    b_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_98_cast_fu_1855_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= reg_1115;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter5, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1860)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1860)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_1131_p2 <= "1" when (indvar_flatten_phi_fu_732_p4 = ap_const_lv11_400) else "0";
    exitcond_fu_1137_p2 <= "1" when (j_phi_fu_755_p4 = ap_const_lv6_20) else "0";

    grp_fu_762_p0_assign_proc : process(indvar_flatten_reg_728, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, j_mid2_reg_1864, tmp_2_cast5_cast1_fu_1214_p1, tmp_2_cast5_cast1_reg_1956, tmp_2_cast5_cast_fu_1300_p1, tmp_2_cast5_cast_reg_2006, tmp_2_cast5_fu_1367_p1, tmp_2_cast5_reg_2056, i_phi_fu_744_p4, tmp_2_cast_fu_1191_p1, tmp_2_cast6_fu_1476_p1, tmp_3_cast_fu_1488_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_762_p0 <= tmp_3_cast_fu_1488_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast6_fu_1476_p1),12));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_reg_2056),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_fu_1367_p1),12));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_cast_reg_2006),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_cast_fu_1300_p1),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(indvar_flatten_reg_728),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_cast1_reg_1956),12));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast5_cast1_fu_1214_p1),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast_fu_1191_p1),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_762_p0 <= std_logic_vector(resize(unsigned(i_phi_fu_744_p4),12));
        else 
            grp_fu_762_p0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_762_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_2_cast7_fu_1506_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_762_p1 <= tmp_2_cast7_fu_1506_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv11_3E0),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv10_2E0),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv10_2A0),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv10_260),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv10_220),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv10_1E0),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv9_160),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv9_120),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv9_E0),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv11_1),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv8_A0),12));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv8_60),12));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv7_20),12));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_762_p1 <= std_logic_vector(resize(unsigned(ap_const_lv6_1),12));
        else 
            grp_fu_762_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_762_p2 <= std_logic_vector(unsigned(grp_fu_762_p0) + unsigned(grp_fu_762_p1));

    grp_fu_856_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, reg_1099, reg_1105, ap_enable_reg_pp0_iter1, reg_1110, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, reg_1115, ap_enable_reg_pp0_iter5, reg_1121, ap_enable_reg_pp0_iter3, reg_1126, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage31, tmp_1_29_reg_2436)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_856_p0 <= tmp_1_29_reg_2436;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) then 
            grp_fu_856_p0 <= reg_1126;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage29) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) then 
            grp_fu_856_p0 <= reg_1121;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31)))) then 
            grp_fu_856_p0 <= reg_1115;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            grp_fu_856_p0 <= reg_1110;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_856_p0 <= reg_1105;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_856_p0 <= reg_1099;
        else 
            grp_fu_856_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_856_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, reg_1099, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, tmp_6_1_reg_1996, tmp_6_2_reg_2016, tmp_6_3_reg_2031, tmp_6_4_reg_2046, tmp_6_6_reg_2076, tmp_6_7_reg_2091, ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_2106, ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_2121, ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_2136, ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_2151, ap_pipeline_reg_pp0_iter1_tmp_6_11_reg_2166, ap_pipeline_reg_pp0_iter1_tmp_6_12_reg_2181, ap_pipeline_reg_pp0_iter1_tmp_6_13_reg_2196, ap_pipeline_reg_pp0_iter1_tmp_6_14_reg_2211, ap_pipeline_reg_pp0_iter2_tmp_6_15_reg_2226, ap_pipeline_reg_pp0_iter2_tmp_6_16_reg_2241, ap_pipeline_reg_pp0_iter2_tmp_6_17_reg_2256, ap_pipeline_reg_pp0_iter2_tmp_6_18_reg_2271, ap_pipeline_reg_pp0_iter2_tmp_6_19_reg_2286, ap_pipeline_reg_pp0_iter2_tmp_6_20_reg_2301, ap_pipeline_reg_pp0_iter2_tmp_6_21_reg_2316, ap_pipeline_reg_pp0_iter2_tmp_6_22_reg_2331, ap_pipeline_reg_pp0_iter3_tmp_6_23_reg_2346, ap_pipeline_reg_pp0_iter3_tmp_6_24_reg_2361, ap_pipeline_reg_pp0_iter3_tmp_6_25_reg_2376, ap_CS_fsm_pp0_stage31, ap_pipeline_reg_pp0_iter3_tmp_6_26_reg_2391, ap_pipeline_reg_pp0_iter4_tmp_6_27_reg_2406, ap_pipeline_reg_pp0_iter4_tmp_6_28_reg_2421, ap_pipeline_reg_pp0_iter4_tmp_6_29_reg_2426, ap_pipeline_reg_pp0_iter4_tmp_6_30_reg_2431)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_30_reg_2431;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage27) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_29_reg_2426;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_28_reg_2421;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_27_reg_2406;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_26_reg_2391;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_25_reg_2376;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_24_reg_2361;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage29) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_23_reg_2346;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_22_reg_2331;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_21_reg_2316;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_20_reg_2301;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_19_reg_2286;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_18_reg_2271;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage31))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_17_reg_2256;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_16_reg_2241;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_15_reg_2226;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_14_reg_2211;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_13_reg_2196;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_12_reg_2181;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_11_reg_2166;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage28) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_2151;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_2136;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_2121;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_2106;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= tmp_6_7_reg_2091;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_856_p1 <= tmp_6_6_reg_2076;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage30))) then 
            grp_fu_856_p1 <= reg_1099;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25))) then 
            grp_fu_856_p1 <= tmp_6_4_reg_2046;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_856_p1 <= tmp_6_3_reg_2031;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_856_p1 <= tmp_6_2_reg_2016;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_856_p1 <= tmp_6_1_reg_1996;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_856_p1 <= ap_const_lv32_0;
        else 
            grp_fu_856_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_phi_fu_744_p4_assign_proc : process(i_reg_740, exitcond_flatten_reg_1860, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_1890)
    begin
        if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_744_p4 <= tmp_mid2_v_reg_1890;
        else 
            i_phi_fu_744_p4 <= i_reg_740;
        end if; 
    end process;


    indvar_flatten_phi_fu_732_p4_assign_proc : process(indvar_flatten_reg_728, exitcond_flatten_reg_1860, indvar_flatten_next_reg_778, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_732_p4 <= indvar_flatten_next_reg_778;
        else 
            indvar_flatten_phi_fu_732_p4 <= indvar_flatten_reg_728;
        end if; 
    end process;

    j_mid2_fu_1143_p3 <= 
        ap_const_lv6_0 when (exitcond_fu_1137_p2(0) = '1') else 
        j_phi_fu_755_p4;

    j_phi_fu_755_p4_assign_proc : process(j_reg_751, exitcond_flatten_reg_1860, j_1_reg_797, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_1860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_755_p4 <= j_1_reg_797;
        else 
            j_phi_fu_755_p4 <= j_reg_751;
        end if; 
    end process;

    tmp_10_fu_1231_p3 <= (ap_const_lv53_0 & tmp_9_fu_1226_p2);
    tmp_11_fu_1245_p2 <= (tmp_reg_1895 or ap_const_lv11_4);
    tmp_12_fu_1250_p3 <= (ap_const_lv53_0 & tmp_11_fu_1245_p2);
    tmp_13_fu_1267_p2 <= (tmp_reg_1895 or ap_const_lv11_5);
    tmp_14_fu_1272_p3 <= (ap_const_lv53_0 & tmp_13_fu_1267_p2);
    tmp_15_fu_1286_p2 <= (tmp_reg_1895 or ap_const_lv11_6);
    tmp_16_fu_1291_p3 <= (ap_const_lv53_0 & tmp_15_fu_1286_p2);
    tmp_17_fu_1312_p2 <= (tmp_reg_1895 or ap_const_lv11_7);
    tmp_18_fu_1317_p3 <= (ap_const_lv53_0 & tmp_17_fu_1312_p2);
    tmp_19_fu_1331_p2 <= (tmp_reg_1895 or ap_const_lv11_8);
    tmp_20_fu_1336_p3 <= (ap_const_lv53_0 & tmp_19_fu_1331_p2);
    tmp_21_fu_1353_p2 <= (tmp_reg_1895 or ap_const_lv11_9);
    tmp_22_fu_1358_p3 <= (ap_const_lv53_0 & tmp_21_fu_1353_p2);
    tmp_23_fu_1376_p2 <= (tmp_reg_1895 or ap_const_lv11_A);
    tmp_24_fu_1381_p3 <= (ap_const_lv53_0 & tmp_23_fu_1376_p2);
    tmp_25_fu_1398_p2 <= (tmp_reg_1895 or ap_const_lv11_B);
    tmp_26_fu_1403_p3 <= (ap_const_lv53_0 & tmp_25_fu_1398_p2);
    tmp_27_fu_1417_p2 <= (tmp_reg_1895 or ap_const_lv11_C);
    tmp_28_fu_1422_p3 <= (ap_const_lv53_0 & tmp_27_fu_1417_p2);
    tmp_29_fu_1439_p2 <= (tmp_reg_1895 or ap_const_lv11_D);
    tmp_2_cast5_cast1_fu_1214_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),8));
    tmp_2_cast5_cast_fu_1300_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),9));
    tmp_2_cast5_fu_1367_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),10));
    tmp_2_cast6_fu_1476_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),11));
    tmp_2_cast7_fu_1506_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),12));
    tmp_2_cast_fu_1191_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1864),7));
    tmp_2_fu_1172_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_1143_p3),64));
    tmp_30_fu_1444_p3 <= (ap_const_lv53_0 & tmp_29_fu_1439_p2);
    tmp_31_fu_1462_p2 <= (tmp_reg_1895 or ap_const_lv11_E);
    tmp_32_fu_1467_p3 <= (ap_const_lv53_0 & tmp_31_fu_1462_p2);
    tmp_33_fu_1492_p2 <= (tmp_reg_1895 or ap_const_lv11_F);
    tmp_34_fu_1497_p3 <= (ap_const_lv53_0 & tmp_33_fu_1492_p2);
    tmp_35_fu_1515_p2 <= (tmp_reg_1895 or ap_const_lv11_10);
    tmp_36_fu_1520_p3 <= (ap_const_lv53_0 & tmp_35_fu_1515_p2);
    tmp_37_fu_1537_p2 <= (tmp_reg_1895 or ap_const_lv11_11);
    tmp_38_fu_1542_p3 <= (ap_const_lv53_0 & tmp_37_fu_1537_p2);
    tmp_39_fu_1556_p2 <= (tmp_reg_1895 or ap_const_lv11_12);
    tmp_3_cast_fu_1488_p1 <= std_logic_vector(resize(unsigned(tmp_reg_1895),12));
    tmp_3_fu_1167_p1 <= std_logic_vector(resize(unsigned(tmp_fu_1159_p3),64));
    tmp_40_fu_1561_p3 <= (ap_const_lv53_0 & tmp_39_fu_1556_p2);
    tmp_41_fu_1578_p2 <= (tmp_reg_1895 or ap_const_lv11_13);
    tmp_42_fu_1583_p3 <= (ap_const_lv53_0 & tmp_41_fu_1578_p2);
    tmp_43_fu_1597_p2 <= (tmp_reg_1895 or ap_const_lv11_14);
    tmp_44_fu_1602_p3 <= (ap_const_lv53_0 & tmp_43_fu_1597_p2);
    tmp_45_fu_1619_p2 <= (tmp_reg_1895 or ap_const_lv11_15);
    tmp_46_fu_1624_p3 <= (ap_const_lv53_0 & tmp_45_fu_1619_p2);
    tmp_47_fu_1638_p2 <= (tmp_reg_1895 or ap_const_lv11_16);
    tmp_48_fu_1643_p3 <= (ap_const_lv53_0 & tmp_47_fu_1638_p2);
    tmp_49_fu_1660_p2 <= (tmp_reg_1895 or ap_const_lv11_17);
    tmp_4_fu_1177_p2 <= (tmp_reg_1895 or ap_const_lv11_1);
    tmp_50_fu_1665_p3 <= (ap_const_lv53_0 & tmp_49_fu_1660_p2);
    tmp_51_fu_1679_p2 <= (tmp_reg_1895 or ap_const_lv11_18);
    tmp_52_fu_1684_p3 <= (ap_const_lv53_0 & tmp_51_fu_1679_p2);
    tmp_53_fu_1701_p2 <= (tmp_reg_1895 or ap_const_lv11_19);
    tmp_54_fu_1706_p3 <= (ap_const_lv53_0 & tmp_53_fu_1701_p2);
    tmp_55_fu_1724_p2 <= (tmp_reg_1895 or ap_const_lv11_1A);
    tmp_56_fu_1729_p3 <= (ap_const_lv53_0 & tmp_55_fu_1724_p2);
    tmp_57_fu_1746_p2 <= (tmp_reg_1895 or ap_const_lv11_1B);
    tmp_58_fu_1751_p3 <= (ap_const_lv53_0 & tmp_57_fu_1746_p2);
    tmp_59_fu_1769_p2 <= (tmp_reg_1895 or ap_const_lv11_1C);
    tmp_5_fu_1182_p3 <= (ap_const_lv53_0 & tmp_4_fu_1177_p2);
    tmp_60_fu_1774_p3 <= (ap_const_lv53_0 & tmp_59_fu_1769_p2);
    tmp_61_fu_1791_p2 <= (tmp_reg_1895 or ap_const_lv11_1D);
    tmp_62_fu_1796_p3 <= (ap_const_lv53_0 & tmp_61_fu_1791_p2);
    tmp_63_fu_1814_p2 <= (tmp_reg_1895 or ap_const_lv11_1E);
    tmp_64_fu_1819_p3 <= (ap_const_lv53_0 & tmp_63_fu_1814_p2);
    tmp_65_fu_1836_p2 <= (tmp_reg_1895 or ap_const_lv11_1F);
    tmp_66_fu_1841_p3 <= (ap_const_lv53_0 & tmp_65_fu_1836_p2);
    tmp_67_cast_fu_1195_p0 <= grp_fu_762_p2(7 - 1 downto 0);
    tmp_67_cast_fu_1195_p1 <= std_logic_vector(resize(unsigned(tmp_67_cast_fu_1195_p0),64));
    tmp_68_fu_1218_p3 <= (ap_const_lv58_1 & j_mid2_reg_1864);
    tmp_69_cast_fu_1240_p1 <= std_logic_vector(resize(unsigned(reg_773),64));
    tmp_70_fu_1259_p3 <= (ap_const_lv58_2 & j_mid2_reg_1864);
    tmp_71_cast_fu_1281_p1 <= std_logic_vector(resize(unsigned(reg_773),64));
    tmp_72_fu_1304_p3 <= (ap_const_lv58_3 & j_mid2_reg_1864);
    tmp_73_cast_fu_1326_p1 <= std_logic_vector(resize(unsigned(reg_804),64));
    tmp_74_fu_1345_p3 <= (ap_const_lv58_4 & j_mid2_reg_1864);
    tmp_75_cast_fu_1371_p1 <= std_logic_vector(resize(unsigned(reg_804),64));
    tmp_76_fu_1390_p3 <= (ap_const_lv58_5 & j_mid2_reg_1864);
    tmp_77_cast_fu_1412_p1 <= std_logic_vector(resize(unsigned(tmp_77_reg_812),64));
    tmp_78_fu_1431_p3 <= (ap_const_lv58_6 & j_mid2_reg_1864);
        tmp_79_cast1_fu_1453_p1 <= std_logic_vector(resize(signed(reg_773),9));

    tmp_79_cast_fu_1457_p1 <= std_logic_vector(resize(unsigned(tmp_79_cast1_fu_1453_p1),64));
    tmp_79_fu_1480_p3 <= (ap_const_lv58_7 & j_mid2_reg_1864);
    tmp_7_fu_1200_p2 <= (tmp_reg_1895 or ap_const_lv11_2);
    tmp_81_cast_fu_1510_p1 <= std_logic_vector(resize(unsigned(tmp_80_reg_818),64));
    tmp_81_fu_1529_p3 <= (ap_const_lv58_8 & j_mid2_reg_1864);
    tmp_83_cast_fu_1551_p1 <= std_logic_vector(resize(unsigned(tmp_82_reg_824),64));
    tmp_83_fu_1570_p3 <= (ap_const_lv58_9 & j_mid2_reg_1864);
    tmp_85_cast_fu_1592_p1 <= std_logic_vector(resize(unsigned(tmp_84_reg_830),64));
    tmp_85_fu_1611_p3 <= (ap_const_lv58_A & j_mid2_reg_1864);
    tmp_87_cast_fu_1633_p1 <= std_logic_vector(resize(unsigned(tmp_86_reg_836),64));
    tmp_87_fu_1652_p3 <= (ap_const_lv58_B & j_mid2_reg_1864);
    tmp_89_cast_fu_1674_p1 <= std_logic_vector(resize(unsigned(tmp_88_reg_842),64));
    tmp_89_fu_1693_p3 <= (ap_const_lv58_C & j_mid2_reg_1864);
    tmp_8_fu_1205_p3 <= (ap_const_lv53_0 & tmp_7_fu_1200_p2);
    tmp_90_fu_1738_p3 <= (ap_const_lv58_D & j_mid2_reg_1864);
        tmp_91_cast1_fu_1715_p1 <= std_logic_vector(resize(signed(reg_804),10));

    tmp_91_cast_fu_1719_p1 <= std_logic_vector(resize(unsigned(tmp_91_cast1_fu_1715_p1),64));
    tmp_91_fu_1783_p3 <= (ap_const_lv58_E & j_mid2_reg_1864);
    tmp_92_fu_1828_p3 <= (ap_const_lv58_F & j_mid2_reg_1864);
        tmp_93_cast9_fu_1760_p1 <= std_logic_vector(resize(signed(tmp_77_reg_812),10));

    tmp_93_cast_fu_1764_p1 <= std_logic_vector(resize(unsigned(tmp_93_cast9_fu_1760_p1),64));
        tmp_95_cast8_fu_1805_p1 <= std_logic_vector(resize(signed(reg_773),10));

    tmp_95_cast_fu_1809_p1 <= std_logic_vector(resize(unsigned(tmp_95_cast8_fu_1805_p1),64));
    tmp_97_cast_fu_1850_p1 <= std_logic_vector(resize(unsigned(tmp_93_reg_848),64));
    tmp_98_cast_fu_1855_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_tmp_94_reg_852),64));
    tmp_9_fu_1226_p2 <= (tmp_reg_1895 or ap_const_lv11_3);
    tmp_fu_1159_p3 <= (tmp_mid2_v_fu_1151_p3 & ap_const_lv5_0);
    tmp_mid2_v_fu_1151_p1 <= grp_fu_762_p2(6 - 1 downto 0);
    tmp_mid2_v_fu_1151_p3 <= 
        tmp_mid2_v_fu_1151_p1 when (exitcond_fu_1137_p2(0) = '1') else 
        i_phi_fu_744_p4;
end behav;
