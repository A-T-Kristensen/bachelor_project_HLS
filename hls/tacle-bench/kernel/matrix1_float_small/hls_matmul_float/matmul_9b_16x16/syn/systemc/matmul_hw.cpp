// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage15 = "10000000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_state88 = "100000000000000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_A = "1010";
const sc_lv<32> matmul_hw::ap_const_lv32_F = "1111";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<32> matmul_hw::ap_const_lv32_9 = "1001";
const sc_lv<32> matmul_hw::ap_const_lv32_E = "1110";
const sc_lv<32> matmul_hw::ap_const_lv32_8 = "1000";
const sc_lv<32> matmul_hw::ap_const_lv32_D = "1101";
const sc_lv<32> matmul_hw::ap_const_lv32_7 = "111";
const sc_lv<32> matmul_hw::ap_const_lv32_C = "1100";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_B = "1011";
const sc_lv<32> matmul_hw::ap_const_lv32_10 = "10000";
const sc_lv<9> matmul_hw::ap_const_lv9_0 = "000000000";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<6> matmul_hw::ap_const_lv6_10 = "10000";
const sc_lv<9> matmul_hw::ap_const_lv9_1 = "1";
const sc_lv<7> matmul_hw::ap_const_lv7_30 = "110000";
const sc_lv<9> matmul_hw::ap_const_lv9_100 = "100000000";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<2> matmul_hw::ap_const_lv2_0 = "00";
const sc_lv<7> matmul_hw::ap_const_lv7_1 = "1";
const sc_lv<57> matmul_hw::ap_const_lv57_0 = "000000000000000000000000000000000000000000000000000000000";
const sc_lv<7> matmul_hw::ap_const_lv7_2 = "10";
const sc_lv<59> matmul_hw::ap_const_lv59_1 = "1";
const sc_lv<7> matmul_hw::ap_const_lv7_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_11 = "10001";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_fadd_32fYi_U1 = new matmul_hw_fadd_32fYi<1,5,32,32,32>("matmul_hw_fadd_32fYi_U1");
    matmul_hw_fadd_32fYi_U1->clk(ap_clk);
    matmul_hw_fadd_32fYi_U1->reset(ap_rst);
    matmul_hw_fadd_32fYi_U1->din0(grp_fu_486_p0);
    matmul_hw_fadd_32fYi_U1->din1(grp_fu_486_p1);
    matmul_hw_fadd_32fYi_U1->ce(ap_var_for_const0);
    matmul_hw_fadd_32fYi_U1->dout(grp_fu_486_p2);
    matmul_hw_fmul_32g8j_U2 = new matmul_hw_fmul_32g8j<1,4,32,32,32>("matmul_hw_fmul_32g8j_U2");
    matmul_hw_fmul_32g8j_U2->clk(ap_clk);
    matmul_hw_fmul_32g8j_U2->reset(ap_rst);
    matmul_hw_fmul_32g8j_U2->din0(grp_fu_543_p0);
    matmul_hw_fmul_32g8j_U2->din1(grp_fu_543_p1);
    matmul_hw_fmul_32g8j_U2->ce(ap_var_for_const0);
    matmul_hw_fmul_32g8j_U2->dout(grp_fu_543_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_Addr_A);
    sensitive << ( a_0_Addr_A_orig );

    SC_METHOD(thread_a_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_675_p1 );
    sensitive << ( tmp_5_fu_696_p3 );
    sensitive << ( tmp_8_fu_725_p3 );
    sensitive << ( tmp_10_fu_753_p3 );

    SC_METHOD(thread_a_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_0_Din_A);

    SC_METHOD(thread_a_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_0_WEN_A);

    SC_METHOD(thread_a_1_Addr_A);
    sensitive << ( a_1_Addr_A_orig );

    SC_METHOD(thread_a_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_675_p1 );
    sensitive << ( tmp_5_fu_696_p3 );
    sensitive << ( tmp_8_fu_725_p3 );
    sensitive << ( tmp_10_fu_753_p3 );

    SC_METHOD(thread_a_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_1_Din_A);

    SC_METHOD(thread_a_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_1_WEN_A);

    SC_METHOD(thread_a_2_Addr_A);
    sensitive << ( a_2_Addr_A_orig );

    SC_METHOD(thread_a_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_675_p1 );
    sensitive << ( tmp_5_fu_696_p3 );
    sensitive << ( tmp_8_fu_725_p3 );
    sensitive << ( tmp_10_fu_753_p3 );

    SC_METHOD(thread_a_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_2_Din_A);

    SC_METHOD(thread_a_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_2_WEN_A);

    SC_METHOD(thread_a_3_Addr_A);
    sensitive << ( a_3_Addr_A_orig );

    SC_METHOD(thread_a_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_675_p1 );
    sensitive << ( tmp_5_fu_696_p3 );
    sensitive << ( tmp_8_fu_725_p3 );
    sensitive << ( tmp_10_fu_753_p3 );

    SC_METHOD(thread_a_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_3_Din_A);

    SC_METHOD(thread_a_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_3_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state88 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state88 );

    SC_METHOD(thread_b_0_Addr_A);
    sensitive << ( b_0_Addr_A_orig );

    SC_METHOD(thread_b_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_fu_683_p1 );
    sensitive << ( tmp_13_cast_fu_712_p1 );
    sensitive << ( tmp_13_fu_737_p3 );
    sensitive << ( tmp_15_cast_fu_769_p1 );

    SC_METHOD(thread_b_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_0_Din_A);

    SC_METHOD(thread_b_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_b_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_0_WEN_A);

    SC_METHOD(thread_b_1_Addr_A);
    sensitive << ( b_1_Addr_A_orig );

    SC_METHOD(thread_b_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_fu_683_p1 );
    sensitive << ( tmp_13_cast_fu_712_p1 );
    sensitive << ( tmp_13_fu_737_p3 );
    sensitive << ( tmp_15_cast_fu_769_p1 );

    SC_METHOD(thread_b_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_1_Din_A);

    SC_METHOD(thread_b_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_b_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_1_WEN_A);

    SC_METHOD(thread_b_2_Addr_A);
    sensitive << ( b_2_Addr_A_orig );

    SC_METHOD(thread_b_2_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_fu_683_p1 );
    sensitive << ( tmp_13_cast_fu_712_p1 );
    sensitive << ( tmp_13_fu_737_p3 );
    sensitive << ( tmp_15_cast_fu_769_p1 );

    SC_METHOD(thread_b_2_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_2_Din_A);

    SC_METHOD(thread_b_2_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_b_2_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_2_WEN_A);

    SC_METHOD(thread_b_3_Addr_A);
    sensitive << ( b_3_Addr_A_orig );

    SC_METHOD(thread_b_3_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_fu_683_p1 );
    sensitive << ( tmp_13_cast_fu_712_p1 );
    sensitive << ( tmp_13_fu_737_p3 );
    sensitive << ( tmp_15_cast_fu_769_p1 );

    SC_METHOD(thread_b_3_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_3_Din_A);

    SC_METHOD(thread_b_3_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_b_3_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_3_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_16_cast_fu_793_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( reg_633 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798 );

    SC_METHOD(thread_exitcond_flatten_fu_639_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_414_p4 );

    SC_METHOD(thread_exitcond_fu_645_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_639_p2 );
    sensitive << ( j_phi_fu_437_p4 );

    SC_METHOD(thread_grp_fu_444_p0);
    sensitive << ( indvar_flatten_reg_410 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_mid2_reg_802 );
    sensitive << ( i_phi_fu_426_p4 );
    sensitive << ( tmp_2_cast_fu_708_p1 );
    sensitive << ( tmp_2_cast3_fu_765_p1 );
    sensitive << ( tmp_2_cast4_fu_789_p1 );

    SC_METHOD(thread_grp_fu_444_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_12_cast_fu_784_p1 );

    SC_METHOD(thread_grp_fu_444_p2);
    sensitive << ( grp_fu_444_p0 );
    sensitive << ( grp_fu_444_p1 );

    SC_METHOD(thread_grp_fu_486_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( reg_613 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_618 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( reg_623 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( reg_628 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( reg_633 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_6_reg_1094 );

    SC_METHOD(thread_grp_fu_486_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_6_1_reg_1129 );
    sensitive << ( tmp_6_2_reg_1134 );
    sensitive << ( tmp_6_3_reg_1139 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1144 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1149 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1154 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1159 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1164 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1169 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1174 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1179 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1184 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1189 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1194 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1199 );

    SC_METHOD(thread_grp_fu_543_p0);
    sensitive << ( a_0_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( a_1_load_reg_904 );
    sensitive << ( a_2_load_reg_914 );
    sensitive << ( a_3_load_reg_924 );
    sensitive << ( a_1_load_1_reg_984 );
    sensitive << ( a_2_load_1_reg_994 );
    sensitive << ( a_3_load_1_reg_1004 );
    sensitive << ( a_1_load_2_reg_1064 );
    sensitive << ( a_2_load_2_reg_1074 );
    sensitive << ( a_3_load_2_reg_1084 );
    sensitive << ( a_1_load_3_reg_1099 );
    sensitive << ( a_2_load_3_reg_1109 );
    sensitive << ( a_3_load_3_reg_1119 );

    SC_METHOD(thread_grp_fu_543_p1);
    sensitive << ( b_0_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( b_1_load_reg_909 );
    sensitive << ( b_2_load_reg_919 );
    sensitive << ( b_3_load_reg_929 );
    sensitive << ( b_1_load_1_reg_989 );
    sensitive << ( b_2_load_1_reg_999 );
    sensitive << ( b_3_load_1_reg_1009 );
    sensitive << ( b_1_load_2_reg_1069 );
    sensitive << ( b_2_load_2_reg_1079 );
    sensitive << ( b_3_load_2_reg_1089 );
    sensitive << ( b_1_load_3_reg_1104 );
    sensitive << ( b_2_load_3_reg_1114 );
    sensitive << ( b_3_load_3_reg_1124 );

    SC_METHOD(thread_i_phi_fu_426_p4);
    sensitive << ( i_reg_422 );
    sensitive << ( exitcond_flatten_reg_798 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_811 );

    SC_METHOD(thread_indvar_flatten_phi_fu_414_p4);
    sensitive << ( indvar_flatten_reg_410 );
    sensitive << ( indvar_flatten_next_reg_455 );
    sensitive << ( exitcond_flatten_reg_798 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_j_mid2_fu_651_p3);
    sensitive << ( j_phi_fu_437_p4 );
    sensitive << ( exitcond_fu_645_p2 );

    SC_METHOD(thread_j_phi_fu_437_p4);
    sensitive << ( j_reg_433 );
    sensitive << ( j_1_reg_460 );
    sensitive << ( exitcond_flatten_reg_798 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_tmp_10_fu_753_p3);
    sensitive << ( tmp_9_fu_748_p2 );

    SC_METHOD(thread_tmp_11_fu_777_p3);
    sensitive << ( tmp_mid2_v_reg_811 );

    SC_METHOD(thread_tmp_12_cast_fu_784_p1);
    sensitive << ( tmp_11_fu_777_p3 );

    SC_METHOD(thread_tmp_13_cast_fu_712_p0);
    sensitive << ( grp_fu_444_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_tmp_13_cast_fu_712_p1);
    sensitive << ( tmp_13_cast_fu_712_p0 );

    SC_METHOD(thread_tmp_13_fu_737_p3);
    sensitive << ( j_mid2_reg_802 );

    SC_METHOD(thread_tmp_15_cast_fu_769_p0);
    sensitive << ( grp_fu_444_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );

    SC_METHOD(thread_tmp_15_cast_fu_769_p1);
    sensitive << ( tmp_15_cast_fu_769_p0 );

    SC_METHOD(thread_tmp_16_cast_fu_793_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_15_reg_475 );

    SC_METHOD(thread_tmp_2_cast3_fu_765_p1);
    sensitive << ( j_mid2_reg_802 );

    SC_METHOD(thread_tmp_2_cast4_fu_789_p1);
    sensitive << ( j_mid2_reg_802 );

    SC_METHOD(thread_tmp_2_cast_fu_708_p1);
    sensitive << ( j_mid2_reg_802 );

    SC_METHOD(thread_tmp_2_fu_683_p1);
    sensitive << ( j_mid2_fu_651_p3 );

    SC_METHOD(thread_tmp_3_fu_675_p1);
    sensitive << ( tmp_fu_667_p3 );

    SC_METHOD(thread_tmp_4_fu_691_p2);
    sensitive << ( tmp_reg_817 );

    SC_METHOD(thread_tmp_5_fu_696_p3);
    sensitive << ( tmp_4_fu_691_p2 );

    SC_METHOD(thread_tmp_7_fu_720_p2);
    sensitive << ( tmp_reg_817 );

    SC_METHOD(thread_tmp_8_fu_725_p3);
    sensitive << ( tmp_7_fu_720_p2 );

    SC_METHOD(thread_tmp_9_fu_748_p2);
    sensitive << ( tmp_reg_817 );

    SC_METHOD(thread_tmp_fu_667_p3);
    sensitive << ( tmp_mid2_v_fu_659_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_659_p1);
    sensitive << ( grp_fu_444_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_tmp_mid2_v_fu_659_p3);
    sensitive << ( i_phi_fu_426_p4 );
    sensitive << ( exitcond_fu_645_p2 );
    sensitive << ( tmp_mid2_v_fu_659_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_798 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_Addr_A, "(port)a_0_Addr_A");
    sc_trace(mVcdFile, a_0_EN_A, "(port)a_0_EN_A");
    sc_trace(mVcdFile, a_0_WEN_A, "(port)a_0_WEN_A");
    sc_trace(mVcdFile, a_0_Din_A, "(port)a_0_Din_A");
    sc_trace(mVcdFile, a_0_Dout_A, "(port)a_0_Dout_A");
    sc_trace(mVcdFile, a_0_Clk_A, "(port)a_0_Clk_A");
    sc_trace(mVcdFile, a_0_Rst_A, "(port)a_0_Rst_A");
    sc_trace(mVcdFile, a_1_Addr_A, "(port)a_1_Addr_A");
    sc_trace(mVcdFile, a_1_EN_A, "(port)a_1_EN_A");
    sc_trace(mVcdFile, a_1_WEN_A, "(port)a_1_WEN_A");
    sc_trace(mVcdFile, a_1_Din_A, "(port)a_1_Din_A");
    sc_trace(mVcdFile, a_1_Dout_A, "(port)a_1_Dout_A");
    sc_trace(mVcdFile, a_1_Clk_A, "(port)a_1_Clk_A");
    sc_trace(mVcdFile, a_1_Rst_A, "(port)a_1_Rst_A");
    sc_trace(mVcdFile, a_2_Addr_A, "(port)a_2_Addr_A");
    sc_trace(mVcdFile, a_2_EN_A, "(port)a_2_EN_A");
    sc_trace(mVcdFile, a_2_WEN_A, "(port)a_2_WEN_A");
    sc_trace(mVcdFile, a_2_Din_A, "(port)a_2_Din_A");
    sc_trace(mVcdFile, a_2_Dout_A, "(port)a_2_Dout_A");
    sc_trace(mVcdFile, a_2_Clk_A, "(port)a_2_Clk_A");
    sc_trace(mVcdFile, a_2_Rst_A, "(port)a_2_Rst_A");
    sc_trace(mVcdFile, a_3_Addr_A, "(port)a_3_Addr_A");
    sc_trace(mVcdFile, a_3_EN_A, "(port)a_3_EN_A");
    sc_trace(mVcdFile, a_3_WEN_A, "(port)a_3_WEN_A");
    sc_trace(mVcdFile, a_3_Din_A, "(port)a_3_Din_A");
    sc_trace(mVcdFile, a_3_Dout_A, "(port)a_3_Dout_A");
    sc_trace(mVcdFile, a_3_Clk_A, "(port)a_3_Clk_A");
    sc_trace(mVcdFile, a_3_Rst_A, "(port)a_3_Rst_A");
    sc_trace(mVcdFile, b_0_Addr_A, "(port)b_0_Addr_A");
    sc_trace(mVcdFile, b_0_EN_A, "(port)b_0_EN_A");
    sc_trace(mVcdFile, b_0_WEN_A, "(port)b_0_WEN_A");
    sc_trace(mVcdFile, b_0_Din_A, "(port)b_0_Din_A");
    sc_trace(mVcdFile, b_0_Dout_A, "(port)b_0_Dout_A");
    sc_trace(mVcdFile, b_0_Clk_A, "(port)b_0_Clk_A");
    sc_trace(mVcdFile, b_0_Rst_A, "(port)b_0_Rst_A");
    sc_trace(mVcdFile, b_1_Addr_A, "(port)b_1_Addr_A");
    sc_trace(mVcdFile, b_1_EN_A, "(port)b_1_EN_A");
    sc_trace(mVcdFile, b_1_WEN_A, "(port)b_1_WEN_A");
    sc_trace(mVcdFile, b_1_Din_A, "(port)b_1_Din_A");
    sc_trace(mVcdFile, b_1_Dout_A, "(port)b_1_Dout_A");
    sc_trace(mVcdFile, b_1_Clk_A, "(port)b_1_Clk_A");
    sc_trace(mVcdFile, b_1_Rst_A, "(port)b_1_Rst_A");
    sc_trace(mVcdFile, b_2_Addr_A, "(port)b_2_Addr_A");
    sc_trace(mVcdFile, b_2_EN_A, "(port)b_2_EN_A");
    sc_trace(mVcdFile, b_2_WEN_A, "(port)b_2_WEN_A");
    sc_trace(mVcdFile, b_2_Din_A, "(port)b_2_Din_A");
    sc_trace(mVcdFile, b_2_Dout_A, "(port)b_2_Dout_A");
    sc_trace(mVcdFile, b_2_Clk_A, "(port)b_2_Clk_A");
    sc_trace(mVcdFile, b_2_Rst_A, "(port)b_2_Rst_A");
    sc_trace(mVcdFile, b_3_Addr_A, "(port)b_3_Addr_A");
    sc_trace(mVcdFile, b_3_EN_A, "(port)b_3_EN_A");
    sc_trace(mVcdFile, b_3_WEN_A, "(port)b_3_WEN_A");
    sc_trace(mVcdFile, b_3_Din_A, "(port)b_3_Din_A");
    sc_trace(mVcdFile, b_3_Dout_A, "(port)b_3_Dout_A");
    sc_trace(mVcdFile, b_3_Clk_A, "(port)b_3_Clk_A");
    sc_trace(mVcdFile, b_3_Rst_A, "(port)b_3_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_410, "indvar_flatten_reg_410");
    sc_trace(mVcdFile, i_reg_422, "i_reg_422");
    sc_trace(mVcdFile, j_reg_433, "j_reg_433");
    sc_trace(mVcdFile, grp_fu_444_p2, "grp_fu_444_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_455, "indvar_flatten_next_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, j_1_reg_460, "j_1_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, exitcond_flatten_reg_798, "exitcond_flatten_reg_798");
    sc_trace(mVcdFile, tmp_15_reg_475, "tmp_15_reg_475");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_15_reg_475, "ap_pipeline_reg_pp0_iter1_tmp_15_reg_475");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_15_reg_475, "ap_pipeline_reg_pp0_iter2_tmp_15_reg_475");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_15_reg_475, "ap_pipeline_reg_pp0_iter3_tmp_15_reg_475");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_15_reg_475, "ap_pipeline_reg_pp0_iter4_tmp_15_reg_475");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, grp_fu_486_p2, "grp_fu_486_p2");
    sc_trace(mVcdFile, reg_613, "reg_613");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798");
    sc_trace(mVcdFile, reg_618, "reg_618");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798");
    sc_trace(mVcdFile, reg_623, "reg_623");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798");
    sc_trace(mVcdFile, reg_628, "reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, reg_633, "reg_633");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798");
    sc_trace(mVcdFile, exitcond_flatten_fu_639_p2, "exitcond_flatten_fu_639_p2");
    sc_trace(mVcdFile, j_mid2_fu_651_p3, "j_mid2_fu_651_p3");
    sc_trace(mVcdFile, j_mid2_reg_802, "j_mid2_reg_802");
    sc_trace(mVcdFile, tmp_mid2_v_fu_659_p3, "tmp_mid2_v_fu_659_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_811, "tmp_mid2_v_reg_811");
    sc_trace(mVcdFile, tmp_fu_667_p3, "tmp_fu_667_p3");
    sc_trace(mVcdFile, tmp_reg_817, "tmp_reg_817");
    sc_trace(mVcdFile, a_1_load_reg_904, "a_1_load_reg_904");
    sc_trace(mVcdFile, b_1_load_reg_909, "b_1_load_reg_909");
    sc_trace(mVcdFile, a_2_load_reg_914, "a_2_load_reg_914");
    sc_trace(mVcdFile, b_2_load_reg_919, "b_2_load_reg_919");
    sc_trace(mVcdFile, a_3_load_reg_924, "a_3_load_reg_924");
    sc_trace(mVcdFile, b_3_load_reg_929, "b_3_load_reg_929");
    sc_trace(mVcdFile, a_1_load_1_reg_984, "a_1_load_1_reg_984");
    sc_trace(mVcdFile, b_1_load_1_reg_989, "b_1_load_1_reg_989");
    sc_trace(mVcdFile, a_2_load_1_reg_994, "a_2_load_1_reg_994");
    sc_trace(mVcdFile, b_2_load_1_reg_999, "b_2_load_1_reg_999");
    sc_trace(mVcdFile, a_3_load_1_reg_1004, "a_3_load_1_reg_1004");
    sc_trace(mVcdFile, b_3_load_1_reg_1009, "b_3_load_1_reg_1009");
    sc_trace(mVcdFile, a_1_load_2_reg_1064, "a_1_load_2_reg_1064");
    sc_trace(mVcdFile, b_1_load_2_reg_1069, "b_1_load_2_reg_1069");
    sc_trace(mVcdFile, a_2_load_2_reg_1074, "a_2_load_2_reg_1074");
    sc_trace(mVcdFile, b_2_load_2_reg_1079, "b_2_load_2_reg_1079");
    sc_trace(mVcdFile, a_3_load_2_reg_1084, "a_3_load_2_reg_1084");
    sc_trace(mVcdFile, b_3_load_2_reg_1089, "b_3_load_2_reg_1089");
    sc_trace(mVcdFile, grp_fu_543_p2, "grp_fu_543_p2");
    sc_trace(mVcdFile, tmp_6_reg_1094, "tmp_6_reg_1094");
    sc_trace(mVcdFile, a_1_load_3_reg_1099, "a_1_load_3_reg_1099");
    sc_trace(mVcdFile, b_1_load_3_reg_1104, "b_1_load_3_reg_1104");
    sc_trace(mVcdFile, a_2_load_3_reg_1109, "a_2_load_3_reg_1109");
    sc_trace(mVcdFile, b_2_load_3_reg_1114, "b_2_load_3_reg_1114");
    sc_trace(mVcdFile, a_3_load_3_reg_1119, "a_3_load_3_reg_1119");
    sc_trace(mVcdFile, b_3_load_3_reg_1124, "b_3_load_3_reg_1124");
    sc_trace(mVcdFile, tmp_6_1_reg_1129, "tmp_6_1_reg_1129");
    sc_trace(mVcdFile, tmp_6_2_reg_1134, "tmp_6_2_reg_1134");
    sc_trace(mVcdFile, tmp_6_3_reg_1139, "tmp_6_3_reg_1139");
    sc_trace(mVcdFile, tmp_6_4_reg_1144, "tmp_6_4_reg_1144");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1144, "ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1144");
    sc_trace(mVcdFile, tmp_6_5_reg_1149, "tmp_6_5_reg_1149");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1149, "ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1149");
    sc_trace(mVcdFile, tmp_6_6_reg_1154, "tmp_6_6_reg_1154");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1154, "ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1154");
    sc_trace(mVcdFile, tmp_6_7_reg_1159, "tmp_6_7_reg_1159");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1159, "ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1159");
    sc_trace(mVcdFile, tmp_6_8_reg_1164, "tmp_6_8_reg_1164");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1164, "ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1164");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1164, "ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1164");
    sc_trace(mVcdFile, tmp_6_9_reg_1169, "tmp_6_9_reg_1169");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1169, "ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1169");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1169, "ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1169");
    sc_trace(mVcdFile, tmp_6_s_reg_1174, "tmp_6_s_reg_1174");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1174, "ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1174");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1174, "ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1174");
    sc_trace(mVcdFile, tmp_6_10_reg_1179, "tmp_6_10_reg_1179");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1179, "ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1179");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1179, "ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1179");
    sc_trace(mVcdFile, tmp_6_11_reg_1184, "tmp_6_11_reg_1184");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1184, "ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1184");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1184, "ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1184");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1184, "ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1184");
    sc_trace(mVcdFile, tmp_6_12_reg_1189, "tmp_6_12_reg_1189");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1189, "ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1189");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1189, "ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1189");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1189, "ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1189");
    sc_trace(mVcdFile, tmp_6_13_reg_1194, "tmp_6_13_reg_1194");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1194, "ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1194");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1194, "ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1194");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1194, "ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1194");
    sc_trace(mVcdFile, tmp_6_14_reg_1199, "tmp_6_14_reg_1199");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1199, "ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1199");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1199, "ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1199");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1199, "ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1199");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_414_p4, "indvar_flatten_phi_fu_414_p4");
    sc_trace(mVcdFile, i_phi_fu_426_p4, "i_phi_fu_426_p4");
    sc_trace(mVcdFile, j_phi_fu_437_p4, "j_phi_fu_437_p4");
    sc_trace(mVcdFile, tmp_3_fu_675_p1, "tmp_3_fu_675_p1");
    sc_trace(mVcdFile, tmp_2_fu_683_p1, "tmp_2_fu_683_p1");
    sc_trace(mVcdFile, tmp_5_fu_696_p3, "tmp_5_fu_696_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_712_p1, "tmp_13_cast_fu_712_p1");
    sc_trace(mVcdFile, tmp_8_fu_725_p3, "tmp_8_fu_725_p3");
    sc_trace(mVcdFile, tmp_13_fu_737_p3, "tmp_13_fu_737_p3");
    sc_trace(mVcdFile, tmp_10_fu_753_p3, "tmp_10_fu_753_p3");
    sc_trace(mVcdFile, tmp_15_cast_fu_769_p1, "tmp_15_cast_fu_769_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_793_p1, "tmp_16_cast_fu_793_p1");
    sc_trace(mVcdFile, a_0_Addr_A_orig, "a_0_Addr_A_orig");
    sc_trace(mVcdFile, b_0_Addr_A_orig, "b_0_Addr_A_orig");
    sc_trace(mVcdFile, a_1_Addr_A_orig, "a_1_Addr_A_orig");
    sc_trace(mVcdFile, b_1_Addr_A_orig, "b_1_Addr_A_orig");
    sc_trace(mVcdFile, a_2_Addr_A_orig, "a_2_Addr_A_orig");
    sc_trace(mVcdFile, b_2_Addr_A_orig, "b_2_Addr_A_orig");
    sc_trace(mVcdFile, a_3_Addr_A_orig, "a_3_Addr_A_orig");
    sc_trace(mVcdFile, b_3_Addr_A_orig, "b_3_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_444_p0, "grp_fu_444_p0");
    sc_trace(mVcdFile, tmp_2_cast_fu_708_p1, "tmp_2_cast_fu_708_p1");
    sc_trace(mVcdFile, tmp_2_cast3_fu_765_p1, "tmp_2_cast3_fu_765_p1");
    sc_trace(mVcdFile, tmp_2_cast4_fu_789_p1, "tmp_2_cast4_fu_789_p1");
    sc_trace(mVcdFile, grp_fu_444_p1, "grp_fu_444_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_784_p1, "tmp_12_cast_fu_784_p1");
    sc_trace(mVcdFile, grp_fu_486_p0, "grp_fu_486_p0");
    sc_trace(mVcdFile, grp_fu_486_p1, "grp_fu_486_p1");
    sc_trace(mVcdFile, grp_fu_543_p0, "grp_fu_543_p0");
    sc_trace(mVcdFile, grp_fu_543_p1, "grp_fu_543_p1");
    sc_trace(mVcdFile, exitcond_fu_645_p2, "exitcond_fu_645_p2");
    sc_trace(mVcdFile, tmp_mid2_v_fu_659_p1, "tmp_mid2_v_fu_659_p1");
    sc_trace(mVcdFile, tmp_4_fu_691_p2, "tmp_4_fu_691_p2");
    sc_trace(mVcdFile, tmp_13_cast_fu_712_p0, "tmp_13_cast_fu_712_p0");
    sc_trace(mVcdFile, tmp_7_fu_720_p2, "tmp_7_fu_720_p2");
    sc_trace(mVcdFile, tmp_9_fu_748_p2, "tmp_9_fu_748_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_769_p0, "tmp_15_cast_fu_769_p0");
    sc_trace(mVcdFile, tmp_11_fu_777_p3, "tmp_11_fu_777_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_fadd_32fYi_U1;
    delete matmul_hw_fmul_32g8j_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_reg_422 = tmp_mid2_v_reg_811.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_422 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_reg_410 = indvar_flatten_next_reg_455.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_410 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_reg_433 = j_1_reg_460.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_433 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0))) {
        a_1_load_1_reg_984 = a_1_Dout_A.read();
        a_2_load_1_reg_994 = a_2_Dout_A.read();
        a_3_load_1_reg_1004 = a_3_Dout_A.read();
        b_1_load_1_reg_989 = b_1_Dout_A.read();
        b_2_load_1_reg_999 = b_2_Dout_A.read();
        b_3_load_1_reg_1009 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        a_1_load_2_reg_1064 = a_1_Dout_A.read();
        a_2_load_2_reg_1074 = a_2_Dout_A.read();
        a_3_load_2_reg_1084 = a_3_Dout_A.read();
        b_1_load_2_reg_1069 = b_1_Dout_A.read();
        b_2_load_2_reg_1079 = b_2_Dout_A.read();
        b_3_load_2_reg_1089 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0))) {
        a_1_load_3_reg_1099 = a_1_Dout_A.read();
        a_2_load_3_reg_1109 = a_2_Dout_A.read();
        a_3_load_3_reg_1119 = a_3_Dout_A.read();
        b_1_load_3_reg_1104 = b_1_Dout_A.read();
        b_2_load_3_reg_1114 = b_2_Dout_A.read();
        b_3_load_3_reg_1124 = b_3_Dout_A.read();
        j_1_reg_460 =  (sc_lv<5>) (grp_fu_444_p2.read());
        tmp_6_reg_1094 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        a_1_load_reg_904 = a_1_Dout_A.read();
        a_2_load_reg_914 = a_2_Dout_A.read();
        a_3_load_reg_924 = a_3_Dout_A.read();
        b_1_load_reg_909 = b_1_Dout_A.read();
        b_2_load_reg_919 = b_2_Dout_A.read();
        b_3_load_reg_929 = b_3_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798 = exitcond_flatten_reg_798.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1184 = tmp_6_11_reg_1184.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1184 = ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1184.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1184 = ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1184.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798.read();
        exitcond_flatten_reg_798 = exitcond_flatten_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_15_reg_475 = tmp_15_reg_475.read();
        ap_pipeline_reg_pp0_iter2_tmp_15_reg_475 = ap_pipeline_reg_pp0_iter1_tmp_15_reg_475.read();
        ap_pipeline_reg_pp0_iter3_tmp_15_reg_475 = ap_pipeline_reg_pp0_iter2_tmp_15_reg_475.read();
        ap_pipeline_reg_pp0_iter4_tmp_15_reg_475 = ap_pipeline_reg_pp0_iter3_tmp_15_reg_475.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1179 = tmp_6_10_reg_1179.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1179 = ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1179.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1144 = tmp_6_4_reg_1144.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1149 = tmp_6_5_reg_1149.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1154 = tmp_6_6_reg_1154.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1159 = tmp_6_7_reg_1159.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1164 = tmp_6_8_reg_1164.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1164 = ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1164.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1169 = tmp_6_9_reg_1169.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1169 = ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1169.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1174 = tmp_6_s_reg_1174.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1174 = ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1174.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1189 = tmp_6_12_reg_1189.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1189 = ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1189.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1189 = ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1189.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1194 = tmp_6_13_reg_1194.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1194 = ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1194.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1194 = ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1194.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1199 = tmp_6_14_reg_1199.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1199 = ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1199.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1199 = ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1199.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_455 =  (sc_lv<9>) (grp_fu_444_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_639_p2.read()))) {
        j_mid2_reg_802 = j_mid2_fu_651_p3.read();
        tmp_reg_817 = tmp_fu_667_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read())))) {
        reg_613 = grp_fu_486_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798.read())))) {
        reg_618 = grp_fu_486_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798.read())))) {
        reg_623 = grp_fu_486_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        reg_628 = grp_fu_486_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_798.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798.read())))) {
        reg_633 = grp_fu_486_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_15_reg_475 = grp_fu_444_p2.read();
        tmp_6_1_reg_1129 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        tmp_6_10_reg_1179 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        tmp_6_11_reg_1184 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read()))) {
        tmp_6_12_reg_1189 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read()))) {
        tmp_6_13_reg_1194 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_798.read()))) {
        tmp_6_14_reg_1199 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        tmp_6_2_reg_1134 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        tmp_6_3_reg_1139 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        tmp_6_4_reg_1144 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        tmp_6_5_reg_1149 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        tmp_6_6_reg_1154 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        tmp_6_7_reg_1159 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        tmp_6_8_reg_1164 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        tmp_6_9_reg_1169 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        tmp_6_s_reg_1174 = grp_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_639_p2.read()))) {
        tmp_mid2_v_reg_811 = tmp_mid2_v_fu_659_p3.read();
    }
}

void matmul_hw::thread_a_0_Addr_A() {
    a_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_753_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_725_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_696_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_675_p1.read());
        } else {
            a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_0_Clk_A() {
    a_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_0_Din_A() {
    a_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        a_0_EN_A = ap_const_logic_1;
    } else {
        a_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_0_Rst_A() {
    a_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_0_WEN_A() {
    a_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_1_Addr_A() {
    a_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_753_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_725_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_696_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_675_p1.read());
        } else {
            a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_1_Clk_A() {
    a_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_1_Din_A() {
    a_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        a_1_EN_A = ap_const_logic_1;
    } else {
        a_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_1_Rst_A() {
    a_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_1_WEN_A() {
    a_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_2_Addr_A() {
    a_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_753_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_725_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_696_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_2_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_675_p1.read());
        } else {
            a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_2_Clk_A() {
    a_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_2_Din_A() {
    a_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        a_2_EN_A = ap_const_logic_1;
    } else {
        a_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_2_Rst_A() {
    a_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_2_WEN_A() {
    a_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_3_Addr_A() {
    a_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_753_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_725_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_696_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_3_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_675_p1.read());
        } else {
            a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_3_Clk_A() {
    a_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_3_Din_A() {
    a_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        a_3_EN_A = ap_const_logic_1;
    } else {
        a_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_3_Rst_A() {
    a_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_3_WEN_A() {
    a_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read().range(11, 11);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read().range(12, 12);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read().range(13, 13);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read().range(14, 14);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read().range(15, 15);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read().range(16, 16);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read().range(7, 7);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read().range(8, 8);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read().range(9, 9);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read().range(10, 10);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read().range(17, 17);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state88.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state88.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Addr_A() {
    b_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_769_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_737_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_712_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_683_p1.read());
        } else {
            b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_0_Clk_A() {
    b_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_0_Din_A() {
    b_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_0_EN_A = ap_const_logic_1;
    } else {
        b_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Rst_A() {
    b_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_0_WEN_A() {
    b_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_1_Addr_A() {
    b_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_769_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_737_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_712_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_683_p1.read());
        } else {
            b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_1_Clk_A() {
    b_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_1_Din_A() {
    b_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_1_EN_A = ap_const_logic_1;
    } else {
        b_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_1_Rst_A() {
    b_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_1_WEN_A() {
    b_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_2_Addr_A() {
    b_2_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_2_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_2_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_769_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_737_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_712_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_2_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_683_p1.read());
        } else {
            b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_2_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_2_Clk_A() {
    b_2_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_2_Din_A() {
    b_2_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_2_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_2_EN_A = ap_const_logic_1;
    } else {
        b_2_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_2_Rst_A() {
    b_2_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_2_WEN_A() {
    b_2_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_3_Addr_A() {
    b_3_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_3_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_3_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_15_cast_fu_769_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_737_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_712_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_3_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_683_p1.read());
        } else {
            b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_3_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_3_Clk_A() {
    b_3_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_3_Din_A() {
    b_3_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_3_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_3_EN_A = ap_const_logic_1;
    } else {
        b_3_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_3_Rst_A() {
    b_3_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_3_WEN_A() {
    b_3_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_16_cast_fu_793_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = reg_633.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_798.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_639_p2() {
    exitcond_flatten_fu_639_p2 = (!indvar_flatten_phi_fu_414_p4.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_414_p4.read() == ap_const_lv9_100);
}

void matmul_hw::thread_exitcond_fu_645_p2() {
    exitcond_fu_645_p2 = (!j_phi_fu_437_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_437_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_grp_fu_444_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            grp_fu_444_p0 = tmp_2_cast4_fu_789_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            grp_fu_444_p0 =  (sc_lv<10>) (j_mid2_reg_802.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            grp_fu_444_p0 =  (sc_lv<10>) (tmp_2_cast3_fu_765_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            grp_fu_444_p0 =  (sc_lv<10>) (indvar_flatten_reg_410.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_444_p0 =  (sc_lv<10>) (tmp_2_cast_fu_708_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_444_p0 =  (sc_lv<10>) (i_phi_fu_426_p4.read());
        } else {
            grp_fu_444_p0 =  (sc_lv<10>) ("XXXXXXXXXX");
        }
    } else {
        grp_fu_444_p0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void matmul_hw::thread_grp_fu_444_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_444_p1 = tmp_12_cast_fu_784_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_444_p1 =  (sc_lv<10>) (ap_const_lv7_30);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_444_p1 =  (sc_lv<10>) (ap_const_lv9_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        grp_fu_444_p1 =  (sc_lv<10>) (ap_const_lv6_10);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        grp_fu_444_p1 =  (sc_lv<10>) (ap_const_lv5_1);
    } else {
        grp_fu_444_p1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void matmul_hw::thread_grp_fu_444_p2() {
    grp_fu_444_p2 = (!grp_fu_444_p0.read().is_01() || !grp_fu_444_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(grp_fu_444_p0.read()) + sc_biguint<10>(grp_fu_444_p1.read()));
}

void matmul_hw::thread_grp_fu_486_p0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        grp_fu_486_p0 = reg_633.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        grp_fu_486_p0 = reg_628.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        grp_fu_486_p0 = reg_623.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        grp_fu_486_p0 = reg_618.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        grp_fu_486_p0 = reg_613.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_486_p0 = tmp_6_reg_1094.read();
    } else {
        grp_fu_486_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_486_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1199.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1194.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1189.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1184.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1179.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1174.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1169.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1164.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1159.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1154.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1149.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_486_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1144.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_486_p1 = tmp_6_3_reg_1139.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        grp_fu_486_p1 = tmp_6_2_reg_1134.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_486_p1 = tmp_6_1_reg_1129.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_486_p1 = ap_const_lv32_0;
    } else {
        grp_fu_486_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_543_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_543_p0 = a_3_load_3_reg_1119.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        grp_fu_543_p0 = a_3_load_2_reg_1084.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_543_p0 = a_3_load_1_reg_1004.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        grp_fu_543_p0 = a_3_load_reg_924.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        grp_fu_543_p0 = a_2_load_3_reg_1109.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        grp_fu_543_p0 = a_2_load_2_reg_1074.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_543_p0 = a_2_load_1_reg_994.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        grp_fu_543_p0 = a_2_load_reg_914.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        grp_fu_543_p0 = a_1_load_3_reg_1099.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        grp_fu_543_p0 = a_1_load_2_reg_1064.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_543_p0 = a_1_load_1_reg_984.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_543_p0 = a_1_load_reg_904.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        grp_fu_543_p0 = a_0_Dout_A.read();
    } else {
        grp_fu_543_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_543_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_543_p1 = b_3_load_3_reg_1124.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        grp_fu_543_p1 = b_3_load_2_reg_1089.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        grp_fu_543_p1 = b_3_load_1_reg_1009.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        grp_fu_543_p1 = b_3_load_reg_929.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        grp_fu_543_p1 = b_2_load_3_reg_1114.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        grp_fu_543_p1 = b_2_load_2_reg_1079.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_543_p1 = b_2_load_1_reg_999.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        grp_fu_543_p1 = b_2_load_reg_919.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        grp_fu_543_p1 = b_1_load_3_reg_1104.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        grp_fu_543_p1 = b_1_load_2_reg_1069.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        grp_fu_543_p1 = b_1_load_1_reg_989.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_543_p1 = b_1_load_reg_909.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        grp_fu_543_p1 = b_0_Dout_A.read();
    } else {
        grp_fu_543_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_i_phi_fu_426_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_phi_fu_426_p4 = tmp_mid2_v_reg_811.read();
    } else {
        i_phi_fu_426_p4 = i_reg_422.read();
    }
}

void matmul_hw::thread_indvar_flatten_phi_fu_414_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_phi_fu_414_p4 = indvar_flatten_next_reg_455.read();
    } else {
        indvar_flatten_phi_fu_414_p4 = indvar_flatten_reg_410.read();
    }
}

void matmul_hw::thread_j_mid2_fu_651_p3() {
    j_mid2_fu_651_p3 = (!exitcond_fu_645_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_645_p2.read()[0].to_bool())? ap_const_lv5_0: j_phi_fu_437_p4.read());
}

void matmul_hw::thread_j_phi_fu_437_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_phi_fu_437_p4 = j_1_reg_460.read();
    } else {
        j_phi_fu_437_p4 = j_reg_433.read();
    }
}

void matmul_hw::thread_tmp_10_fu_753_p3() {
    tmp_10_fu_753_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_9_fu_748_p2.read());
}

void matmul_hw::thread_tmp_11_fu_777_p3() {
    tmp_11_fu_777_p3 = esl_concat<5,4>(tmp_mid2_v_reg_811.read(), ap_const_lv4_0);
}

void matmul_hw::thread_tmp_12_cast_fu_784_p1() {
    tmp_12_cast_fu_784_p1 = esl_zext<10,9>(tmp_11_fu_777_p3.read());
}

void matmul_hw::thread_tmp_13_cast_fu_712_p0() {
    tmp_13_cast_fu_712_p0 =  (sc_lv<6>) (grp_fu_444_p2.read());
}

void matmul_hw::thread_tmp_13_cast_fu_712_p1() {
    tmp_13_cast_fu_712_p1 = esl_zext<64,6>(tmp_13_cast_fu_712_p0.read());
}

void matmul_hw::thread_tmp_13_fu_737_p3() {
    tmp_13_fu_737_p3 = esl_concat<59,5>(ap_const_lv59_1, j_mid2_reg_802.read());
}

void matmul_hw::thread_tmp_15_cast_fu_769_p0() {
    tmp_15_cast_fu_769_p0 =  (sc_lv<7>) (grp_fu_444_p2.read());
}

void matmul_hw::thread_tmp_15_cast_fu_769_p1() {
    tmp_15_cast_fu_769_p1 = esl_zext<64,7>(tmp_15_cast_fu_769_p0.read());
}

void matmul_hw::thread_tmp_16_cast_fu_793_p1() {
    tmp_16_cast_fu_793_p1 = esl_zext<64,10>(ap_pipeline_reg_pp0_iter4_tmp_15_reg_475.read());
}

void matmul_hw::thread_tmp_2_cast3_fu_765_p1() {
    tmp_2_cast3_fu_765_p1 = esl_zext<7,5>(j_mid2_reg_802.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_789_p1() {
    tmp_2_cast4_fu_789_p1 = esl_zext<10,5>(j_mid2_reg_802.read());
}

void matmul_hw::thread_tmp_2_cast_fu_708_p1() {
    tmp_2_cast_fu_708_p1 = esl_zext<6,5>(j_mid2_reg_802.read());
}

void matmul_hw::thread_tmp_2_fu_683_p1() {
    tmp_2_fu_683_p1 = esl_zext<64,5>(j_mid2_fu_651_p3.read());
}

void matmul_hw::thread_tmp_3_fu_675_p1() {
    tmp_3_fu_675_p1 = esl_zext<64,7>(tmp_fu_667_p3.read());
}

void matmul_hw::thread_tmp_4_fu_691_p2() {
    tmp_4_fu_691_p2 = (tmp_reg_817.read() | ap_const_lv7_1);
}

void matmul_hw::thread_tmp_5_fu_696_p3() {
    tmp_5_fu_696_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_4_fu_691_p2.read());
}

void matmul_hw::thread_tmp_7_fu_720_p2() {
    tmp_7_fu_720_p2 = (tmp_reg_817.read() | ap_const_lv7_2);
}

void matmul_hw::thread_tmp_8_fu_725_p3() {
    tmp_8_fu_725_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_7_fu_720_p2.read());
}

void matmul_hw::thread_tmp_9_fu_748_p2() {
    tmp_9_fu_748_p2 = (tmp_reg_817.read() | ap_const_lv7_3);
}

void matmul_hw::thread_tmp_fu_667_p3() {
    tmp_fu_667_p3 = esl_concat<5,2>(tmp_mid2_v_fu_659_p3.read(), ap_const_lv2_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_659_p1() {
    tmp_mid2_v_fu_659_p1 =  (sc_lv<5>) (grp_fu_444_p2.read());
}

void matmul_hw::thread_tmp_mid2_v_fu_659_p3() {
    tmp_mid2_v_fu_659_p3 = (!exitcond_fu_645_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_645_p2.read()[0].to_bool())? tmp_mid2_v_fu_659_p1.read(): i_phi_fu_426_p4.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_reg_798.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state88;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state88;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Addr_A\" :  \"" << a_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_EN_A\" :  \"" << a_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_WEN_A\" :  \"" << a_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Din_A\" :  \"" << a_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_Dout_A\" :  \"" << a_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Clk_A\" :  \"" << a_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Rst_A\" :  \"" << a_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Addr_A\" :  \"" << a_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_EN_A\" :  \"" << a_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_WEN_A\" :  \"" << a_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Din_A\" :  \"" << a_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_Dout_A\" :  \"" << a_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Clk_A\" :  \"" << a_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Rst_A\" :  \"" << a_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Addr_A\" :  \"" << a_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_EN_A\" :  \"" << a_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_WEN_A\" :  \"" << a_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Din_A\" :  \"" << a_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_2_Dout_A\" :  \"" << a_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Clk_A\" :  \"" << a_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_Rst_A\" :  \"" << a_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Addr_A\" :  \"" << a_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_EN_A\" :  \"" << a_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_WEN_A\" :  \"" << a_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Din_A\" :  \"" << a_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_3_Dout_A\" :  \"" << a_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Clk_A\" :  \"" << a_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_Rst_A\" :  \"" << a_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Addr_A\" :  \"" << b_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_EN_A\" :  \"" << b_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_WEN_A\" :  \"" << b_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Din_A\" :  \"" << b_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_Dout_A\" :  \"" << b_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Clk_A\" :  \"" << b_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Rst_A\" :  \"" << b_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Addr_A\" :  \"" << b_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_EN_A\" :  \"" << b_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_WEN_A\" :  \"" << b_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Din_A\" :  \"" << b_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_Dout_A\" :  \"" << b_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Clk_A\" :  \"" << b_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Rst_A\" :  \"" << b_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Addr_A\" :  \"" << b_2_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_EN_A\" :  \"" << b_2_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_WEN_A\" :  \"" << b_2_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Din_A\" :  \"" << b_2_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_2_Dout_A\" :  \"" << b_2_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Clk_A\" :  \"" << b_2_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_Rst_A\" :  \"" << b_2_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Addr_A\" :  \"" << b_3_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_EN_A\" :  \"" << b_3_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_WEN_A\" :  \"" << b_3_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Din_A\" :  \"" << b_3_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_3_Dout_A\" :  \"" << b_3_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Clk_A\" :  \"" << b_3_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_3_Rst_A\" :  \"" << b_3_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

