-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.436600,HLS_SYN_LAT=4167,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1724,HLS_SYN_LUT=1429}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_402 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_414 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_425 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_436_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_447 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_1_reg_452 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal tmp_27_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_tmp_27_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_27_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_27_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_27_reg_478 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal grp_fu_488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_673_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_902 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_fu_681_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_914 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_689_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_920 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_1_load_reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_1_reg_1001 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_1_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast3_fu_773_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_cast3_reg_1021 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_1_load_2_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_2_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_3_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_3_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_4_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_4_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_2_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_5_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_5_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_3_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_6_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_6_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_4_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_7_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_7_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_5_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_6_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_7_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_8_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_9_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_s_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_10_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_11_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_12_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_13_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_14_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_phi_fu_406_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_418_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_429_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_714_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_739_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_749_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_763_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_cast_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_788_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_798_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_812_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_833_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_847_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_861_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_cast_fu_724_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_cast4_fu_843_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast5_fu_883_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_436_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_cast_fu_878_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_488_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_v_fu_681_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_cast_fu_728_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_734_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_758_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_cast_fu_777_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_783_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_807_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_cast_fu_822_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_fu_828_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_856_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component matmul_hw_fadd_32dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32dEe_U1 : component matmul_hw_fadd_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_488_p0,
        din1 => grp_fu_488_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_488_p2);

    matmul_hw_fmul_32eOg_U2 : component matmul_hw_fmul_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_545_p0,
        din1 => grp_fu_545_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_545_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and not((exitcond_flatten_reg_898 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and not((exitcond_flatten_reg_898 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_414 <= tmp_mid2_v_reg_914;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_414 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_402 <= indvar_flatten_next_reg_447;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_402 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_425 <= j_1_reg_452;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_425 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0))) then
                a_1_load_1_reg_1001 <= a_1_Dout_A;
                b_1_load_1_reg_1006 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_1_load_2_reg_1036 <= a_1_Dout_A;
                b_1_load_2_reg_1041 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten_reg_898 = ap_const_lv1_0))) then
                a_1_load_3_reg_1071 <= a_1_Dout_A;
                b_1_load_3_reg_1076 <= b_1_Dout_A;
                j_1_reg_452 <= grp_fu_436_p2(5 - 1 downto 0);
                tmp_6_reg_1066 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_1_load_4_reg_1106 <= a_1_Dout_A;
                b_1_load_4_reg_1111 <= b_1_Dout_A;
                tmp_6_1_reg_1101 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_1_load_5_reg_1141 <= a_1_Dout_A;
                b_1_load_5_reg_1146 <= b_1_Dout_A;
                tmp_26_reg_467 <= grp_fu_436_p2(8 - 1 downto 0);
                tmp_6_2_reg_1136 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                a_1_load_6_reg_1176 <= a_1_Dout_A;
                b_1_load_6_reg_1181 <= b_1_Dout_A;
                tmp_27_reg_478 <= grp_fu_436_p2;
                tmp_6_3_reg_1171 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                a_1_load_7_reg_1191 <= a_1_Dout_A;
                b_1_load_7_reg_1196 <= b_1_Dout_A;
                tmp_6_4_reg_1186 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                a_1_load_reg_971 <= a_1_Dout_A;
                b_1_load_reg_976 <= b_1_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898 <= exitcond_flatten_reg_898;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898;
                ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1236 <= tmp_6_11_reg_1236;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898;
                ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1236 <= ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1236;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898;
                ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1236 <= ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1236;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_898 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898;
                exitcond_flatten_reg_898 <= exitcond_flatten_fu_661_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                ap_pipeline_reg_pp0_iter1_tmp_27_reg_478 <= tmp_27_reg_478;
                ap_pipeline_reg_pp0_iter2_tmp_27_reg_478 <= ap_pipeline_reg_pp0_iter1_tmp_27_reg_478;
                ap_pipeline_reg_pp0_iter3_tmp_27_reg_478 <= ap_pipeline_reg_pp0_iter2_tmp_27_reg_478;
                ap_pipeline_reg_pp0_iter4_tmp_27_reg_478 <= ap_pipeline_reg_pp0_iter3_tmp_27_reg_478;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1231 <= tmp_6_10_reg_1231;
                ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1231 <= ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1231;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1186 <= tmp_6_4_reg_1186;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1201 <= tmp_6_5_reg_1201;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1206 <= tmp_6_6_reg_1206;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1211 <= tmp_6_7_reg_1211;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1216 <= tmp_6_8_reg_1216;
                ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1216 <= ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1216;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1221 <= tmp_6_9_reg_1221;
                ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1221 <= ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1221;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1226 <= tmp_6_s_reg_1226;
                ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1226 <= ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1226;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1241 <= tmp_6_12_reg_1241;
                ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1241 <= ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1241;
                ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1241 <= ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1241;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1246 <= tmp_6_13_reg_1246;
                ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1246 <= ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1246;
                ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1246 <= ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1246;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1251 <= tmp_6_14_reg_1251;
                ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1251 <= ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1251;
                ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1251 <= ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1251;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_447 <= grp_fu_436_p2(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_661_p2))) then
                j_mid2_reg_902 <= j_mid2_fu_673_p3;
                    tmp_reg_920(7 downto 3) <= tmp_fu_689_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898)))) then
                reg_635 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898)))) then
                reg_640 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898)))) then
                reg_645 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) then
                reg_650 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_898) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_898)))) then
                reg_655 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    tmp_2_cast3_reg_1021(4 downto 0) <= tmp_2_cast3_fu_773_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then
                tmp_6_10_reg_1231 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_6_11_reg_1236 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898))) then
                tmp_6_12_reg_1241 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898))) then
                tmp_6_13_reg_1246 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_898))) then
                tmp_6_14_reg_1251 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then
                tmp_6_5_reg_1201 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_6_6_reg_1206 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then
                tmp_6_7_reg_1211 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                tmp_6_8_reg_1216 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then
                tmp_6_9_reg_1221 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then
                tmp_6_s_reg_1226 <= grp_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_661_p2))) then
                tmp_mid2_v_reg_914 <= tmp_mid2_v_fu_681_p3;
            end if;
        end if;
    end process;
    tmp_reg_920(2 downto 0) <= "000";
    tmp_2_cast3_reg_1021(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_898, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_reg_898 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_3_fu_697_p1, tmp_5_fu_714_p3, tmp_8_fu_739_p3, tmp_10_fu_763_p3, tmp_12_fu_788_p3, tmp_14_fu_812_p3, tmp_16_fu_833_p3, tmp_18_fu_861_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_18_fu_861_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_16_fu_833_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_14_fu_812_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_12_fu_788_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_10_fu_763_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_8_fu_739_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_5_fu_714_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_697_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_3_fu_697_p1, tmp_5_fu_714_p3, tmp_8_fu_739_p3, tmp_10_fu_763_p3, tmp_12_fu_788_p3, tmp_14_fu_812_p3, tmp_16_fu_833_p3, tmp_18_fu_861_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_18_fu_861_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_16_fu_833_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_14_fu_812_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_12_fu_788_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_10_fu_763_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_8_fu_739_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_5_fu_714_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_3_fu_697_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state88 <= ap_CS_fsm(17 downto 17);

    ap_done_assign_proc : process(ap_CS_fsm_state88)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state88))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state88)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state88))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_2_fu_703_p1, tmp_21_cast_fu_728_p1, tmp_21_fu_749_p3, tmp_23_cast_fu_777_p1, tmp_23_fu_798_p3, tmp_25_cast_fu_822_p1, tmp_25_fu_847_p3, tmp_27_cast_fu_887_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_0_Addr_A_orig <= tmp_27_cast_fu_887_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_0_Addr_A_orig <= tmp_25_fu_847_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_0_Addr_A_orig <= tmp_25_cast_fu_822_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_0_Addr_A_orig <= tmp_23_fu_798_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_0_Addr_A_orig <= tmp_23_cast_fu_777_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_0_Addr_A_orig <= tmp_21_fu_749_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_21_cast_fu_728_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_2_fu_703_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_2_fu_703_p1, tmp_21_cast_fu_728_p1, tmp_21_fu_749_p3, tmp_23_cast_fu_777_p1, tmp_23_fu_798_p3, tmp_25_cast_fu_822_p1, tmp_25_fu_847_p3, tmp_27_cast_fu_887_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_1_Addr_A_orig <= tmp_27_cast_fu_887_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_Addr_A_orig <= tmp_25_fu_847_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_Addr_A_orig <= tmp_25_cast_fu_822_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_Addr_A_orig <= tmp_23_fu_798_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_Addr_A_orig <= tmp_23_cast_fu_777_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_Addr_A_orig <= tmp_21_fu_749_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_21_cast_fu_728_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_2_fu_703_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_28_cast_fu_893_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= reg_655;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter5, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_898)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_898)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_661_p2 <= "1" when (indvar_flatten_phi_fu_406_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_667_p2 <= "1" when (j_phi_fu_429_p4 = ap_const_lv5_10) else "0";

    grp_fu_436_p0_assign_proc : process(indvar_flatten_reg_402, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, j_mid2_reg_902, tmp_2_cast3_fu_773_p1, tmp_2_cast3_reg_1021, i_phi_fu_418_p4, tmp_2_cast_fu_724_p1, tmp_2_cast4_fu_843_p1, tmp_2_cast5_fu_883_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                grp_fu_436_p0 <= tmp_2_cast5_fu_883_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast4_fu_843_p1),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast3_reg_1021),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(j_mid2_reg_902),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast3_fu_773_p1),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(indvar_flatten_reg_402),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(tmp_2_cast_fu_724_p1),10));
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_436_p0 <= std_logic_vector(resize(unsigned(i_phi_fu_418_p4),10));
            else 
                grp_fu_436_p0 <= "XXXXXXXXXX";
            end if;
        else 
            grp_fu_436_p0 <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_20_cast_fu_878_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_436_p1 <= tmp_20_cast_fu_878_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv8_70),10));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv7_50),10));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv7_30),10));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv9_1),10));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv6_10),10));
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_436_p1 <= std_logic_vector(resize(unsigned(ap_const_lv5_1),10));
        else 
            grp_fu_436_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_436_p2 <= std_logic_vector(unsigned(grp_fu_436_p0) + unsigned(grp_fu_436_p1));

    grp_fu_488_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, reg_635, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage14, ap_enable_reg_pp0_iter1, reg_640, ap_CS_fsm_pp0_stage13, ap_enable_reg_pp0_iter2, reg_645, ap_CS_fsm_pp0_stage12, ap_enable_reg_pp0_iter3, reg_650, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, reg_655, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter5, tmp_6_reg_1066)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5)))) then 
            grp_fu_488_p0 <= reg_655;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) then 
            grp_fu_488_p0 <= reg_650;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3)))) then 
            grp_fu_488_p0 <= reg_645;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            grp_fu_488_p0 <= reg_640;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_488_p0 <= reg_635;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_488_p0 <= tmp_6_reg_1066;
        else 
            grp_fu_488_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_488_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage14, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage13, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage12, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_enable_reg_pp0_iter5, tmp_6_1_reg_1101, tmp_6_2_reg_1136, tmp_6_3_reg_1171, ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1186, ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1201, ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1206, ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1211, ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1216, ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1221, ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1226, ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1231, ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1236, ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1241, ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1246, ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1251)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1251;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1246;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1241;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1236;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1231;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1226;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1221;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1216;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1211;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1206;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1201;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_488_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1186;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_488_p1 <= tmp_6_3_reg_1171;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_488_p1 <= tmp_6_2_reg_1136;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_488_p1 <= tmp_6_1_reg_1101;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_488_p1 <= ap_const_lv32_0;
        else 
            grp_fu_488_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_545_p0_assign_proc : process(a_0_Dout_A, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage14, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, a_1_load_reg_971, a_1_load_1_reg_1001, a_1_load_2_reg_1036, a_1_load_3_reg_1071, a_1_load_4_reg_1106, a_1_load_5_reg_1141, a_1_load_6_reg_1176, a_1_load_7_reg_1191)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_545_p0 <= a_1_load_7_reg_1191;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_545_p0 <= a_1_load_6_reg_1176;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_545_p0 <= a_1_load_5_reg_1141;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_545_p0 <= a_1_load_4_reg_1106;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_545_p0 <= a_1_load_3_reg_1071;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_545_p0 <= a_1_load_2_reg_1036;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_545_p0 <= a_1_load_1_reg_1001;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_545_p0 <= a_1_load_reg_971;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_545_p0 <= a_0_Dout_A;
        else 
            grp_fu_545_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_545_p1_assign_proc : process(b_0_Dout_A, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage14, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, b_1_load_reg_976, b_1_load_1_reg_1006, b_1_load_2_reg_1041, b_1_load_3_reg_1076, b_1_load_4_reg_1111, b_1_load_5_reg_1146, b_1_load_6_reg_1181, b_1_load_7_reg_1196)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_545_p1 <= b_1_load_7_reg_1196;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_545_p1 <= b_1_load_6_reg_1181;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_545_p1 <= b_1_load_5_reg_1146;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_545_p1 <= b_1_load_4_reg_1111;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_545_p1 <= b_1_load_3_reg_1076;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_545_p1 <= b_1_load_2_reg_1041;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_545_p1 <= b_1_load_1_reg_1006;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_545_p1 <= b_1_load_reg_976;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_545_p1 <= b_0_Dout_A;
        else 
            grp_fu_545_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_phi_fu_418_p4_assign_proc : process(i_reg_414, exitcond_flatten_reg_898, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_914)
    begin
        if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_418_p4 <= tmp_mid2_v_reg_914;
        else 
            i_phi_fu_418_p4 <= i_reg_414;
        end if; 
    end process;


    indvar_flatten_phi_fu_406_p4_assign_proc : process(indvar_flatten_reg_402, indvar_flatten_next_reg_447, exitcond_flatten_reg_898, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_406_p4 <= indvar_flatten_next_reg_447;
        else 
            indvar_flatten_phi_fu_406_p4 <= indvar_flatten_reg_402;
        end if; 
    end process;

    j_mid2_fu_673_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_667_p2(0) = '1') else 
        j_phi_fu_429_p4;

    j_phi_fu_429_p4_assign_proc : process(j_reg_425, j_1_reg_452, exitcond_flatten_reg_898, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_429_p4 <= j_1_reg_452;
        else 
            j_phi_fu_429_p4 <= j_reg_425;
        end if; 
    end process;

    tmp_10_fu_763_p3 <= (ap_const_lv56_0 & tmp_9_fu_758_p2);
    tmp_11_fu_783_p2 <= (tmp_reg_920 or ap_const_lv8_4);
    tmp_12_fu_788_p3 <= (ap_const_lv56_0 & tmp_11_fu_783_p2);
    tmp_13_fu_807_p2 <= (tmp_reg_920 or ap_const_lv8_5);
    tmp_14_fu_812_p3 <= (ap_const_lv56_0 & tmp_13_fu_807_p2);
    tmp_15_fu_828_p2 <= (tmp_reg_920 or ap_const_lv8_6);
    tmp_16_fu_833_p3 <= (ap_const_lv56_0 & tmp_15_fu_828_p2);
    tmp_17_fu_856_p2 <= (tmp_reg_920 or ap_const_lv8_7);
    tmp_18_fu_861_p3 <= (ap_const_lv56_0 & tmp_17_fu_856_p2);
    tmp_19_fu_871_p3 <= (tmp_mid2_v_reg_914 & ap_const_lv4_0);
    tmp_20_cast_fu_878_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_871_p3),10));
    tmp_21_cast_fu_728_p0 <= grp_fu_436_p2(6 - 1 downto 0);
    tmp_21_cast_fu_728_p1 <= std_logic_vector(resize(unsigned(tmp_21_cast_fu_728_p0),64));
    tmp_21_fu_749_p3 <= (ap_const_lv59_1 & j_mid2_reg_902);
    tmp_23_cast_fu_777_p0 <= grp_fu_436_p2(7 - 1 downto 0);
    tmp_23_cast_fu_777_p1 <= std_logic_vector(resize(unsigned(tmp_23_cast_fu_777_p0),64));
    tmp_23_fu_798_p3 <= (ap_const_lv59_2 & j_mid2_reg_902);
    tmp_25_cast_fu_822_p0 <= grp_fu_436_p2(7 - 1 downto 0);
    tmp_25_cast_fu_822_p1 <= std_logic_vector(resize(unsigned(tmp_25_cast_fu_822_p0),64));
    tmp_25_fu_847_p3 <= (ap_const_lv59_3 & j_mid2_reg_902);
    tmp_27_cast_fu_887_p1 <= std_logic_vector(resize(unsigned(tmp_26_reg_467),64));
    tmp_28_cast_fu_893_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_tmp_27_reg_478),64));
    tmp_2_cast3_fu_773_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_902),7));
    tmp_2_cast4_fu_843_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_902),8));
    tmp_2_cast5_fu_883_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_902),10));
    tmp_2_cast_fu_724_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_902),6));
    tmp_2_fu_703_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_673_p3),64));
    tmp_3_fu_697_p1 <= std_logic_vector(resize(unsigned(tmp_fu_689_p3),64));
    tmp_4_fu_709_p2 <= (tmp_reg_920 or ap_const_lv8_1);
    tmp_5_fu_714_p3 <= (ap_const_lv56_0 & tmp_4_fu_709_p2);
    tmp_7_fu_734_p2 <= (tmp_reg_920 or ap_const_lv8_2);
    tmp_8_fu_739_p3 <= (ap_const_lv56_0 & tmp_7_fu_734_p2);
    tmp_9_fu_758_p2 <= (tmp_reg_920 or ap_const_lv8_3);
    tmp_fu_689_p3 <= (tmp_mid2_v_fu_681_p3 & ap_const_lv3_0);
    tmp_mid2_v_fu_681_p1 <= grp_fu_436_p2(5 - 1 downto 0);
    tmp_mid2_v_fu_681_p3 <= 
        tmp_mid2_v_fu_681_p1 when (exitcond_fu_667_p2(0) = '1') else 
        i_phi_fu_418_p4;
end behav;
