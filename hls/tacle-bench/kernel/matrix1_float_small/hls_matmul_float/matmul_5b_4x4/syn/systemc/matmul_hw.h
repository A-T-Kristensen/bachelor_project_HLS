// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmul_hw_HH_
#define _matmul_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmul_hw_fadd_32dEe.h"
#include "matmul_hw_fmul_32eOg.h"

namespace ap_rtl {

struct matmul_hw : public sc_module {
    // Port declarations 41
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > a_0_Addr_A;
    sc_out< sc_logic > a_0_EN_A;
    sc_out< sc_lv<4> > a_0_WEN_A;
    sc_out< sc_lv<32> > a_0_Din_A;
    sc_in< sc_lv<32> > a_0_Dout_A;
    sc_out< sc_logic > a_0_Clk_A;
    sc_out< sc_logic > a_0_Rst_A;
    sc_out< sc_lv<32> > a_1_Addr_A;
    sc_out< sc_logic > a_1_EN_A;
    sc_out< sc_lv<4> > a_1_WEN_A;
    sc_out< sc_lv<32> > a_1_Din_A;
    sc_in< sc_lv<32> > a_1_Dout_A;
    sc_out< sc_logic > a_1_Clk_A;
    sc_out< sc_logic > a_1_Rst_A;
    sc_out< sc_lv<32> > b_0_Addr_A;
    sc_out< sc_logic > b_0_EN_A;
    sc_out< sc_lv<4> > b_0_WEN_A;
    sc_out< sc_lv<32> > b_0_Din_A;
    sc_in< sc_lv<32> > b_0_Dout_A;
    sc_out< sc_logic > b_0_Clk_A;
    sc_out< sc_logic > b_0_Rst_A;
    sc_out< sc_lv<32> > b_1_Addr_A;
    sc_out< sc_logic > b_1_EN_A;
    sc_out< sc_lv<4> > b_1_WEN_A;
    sc_out< sc_lv<32> > b_1_Din_A;
    sc_in< sc_lv<32> > b_1_Dout_A;
    sc_out< sc_logic > b_1_Clk_A;
    sc_out< sc_logic > b_1_Rst_A;
    sc_out< sc_lv<32> > c_Addr_A;
    sc_out< sc_logic > c_EN_A;
    sc_out< sc_lv<4> > c_WEN_A;
    sc_out< sc_lv<32> > c_Din_A;
    sc_in< sc_lv<32> > c_Dout_A;
    sc_out< sc_logic > c_Clk_A;
    sc_out< sc_logic > c_Rst_A;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matmul_hw(sc_module_name name);
    SC_HAS_PROCESS(matmul_hw);

    ~matmul_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matmul_hw_fadd_32dEe<1,5,32,32,32>* matmul_hw_fadd_32dEe_U1;
    matmul_hw_fmul_32eOg<1,4,32,32,32>* matmul_hw_fmul_32eOg_U2;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > indvar_flatten_reg_184;
    sc_signal< sc_lv<3> > i_reg_196;
    sc_signal< sc_lv<3> > j_reg_207;
    sc_signal< sc_lv<6> > grp_fu_218_p2;
    sc_signal< sc_lv<5> > indvar_flatten_next_reg_229;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > j_1_reg_240;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_391;
    sc_signal< sc_lv<6> > tmp_8_reg_247;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage4;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter1_tmp_8_reg_247;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter2_tmp_8_reg_247;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter3_tmp_8_reg_247;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter4_tmp_8_reg_247;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_297_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_391;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391;
    sc_signal< sc_lv<3> > j_mid2_fu_309_p3;
    sc_signal< sc_lv<3> > j_mid2_reg_395;
    sc_signal< sc_lv<3> > tmp_mid2_v_fu_317_p3;
    sc_signal< sc_lv<3> > tmp_mid2_v_reg_402;
    sc_signal< sc_lv<4> > tmp_fu_325_p3;
    sc_signal< sc_lv<4> > tmp_reg_408;
    sc_signal< sc_lv<32> > a_1_load_reg_453;
    sc_signal< sc_lv<32> > b_1_load_reg_458;
    sc_signal< sc_lv<32> > a_0_load_1_reg_463;
    sc_signal< sc_lv<32> > a_1_load_1_reg_468;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_lv<32> > grp_fu_273_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_483;
    sc_signal< sc_lv<32> > b_1_load_1_reg_493;
    sc_signal< sc_lv<32> > tmp_6_2_reg_498;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498;
    sc_signal< sc_lv<32> > tmp_6_1_reg_503;
    sc_signal< sc_lv<32> > tmp_6_3_reg_508;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_508;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508;
    sc_signal< sc_lv<32> > grp_fu_252_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_513;
    sc_signal< sc_lv<32> > tmp_1_1_reg_518;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<32> > tmp_1_2_reg_523;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<32> > tmp_1_3_reg_528;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > indvar_flatten_phi_fu_188_p4;
    sc_signal< sc_lv<3> > i_phi_fu_200_p4;
    sc_signal< sc_lv<3> > j_phi_fu_211_p4;
    sc_signal< sc_lv<64> > tmp_3_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_339_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_350_p3;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_364_p1;
    sc_signal< sc_lv<64> > tmp_10_cast_fu_386_p1;
    sc_signal< sc_lv<32> > a_0_Addr_A_orig;
    sc_signal< sc_lv<32> > b_0_Addr_A_orig;
    sc_signal< sc_lv<32> > a_1_Addr_A_orig;
    sc_signal< sc_lv<32> > b_1_Addr_A_orig;
    sc_signal< sc_lv<32> > c_Addr_A_orig;
    sc_signal< sc_lv<6> > grp_fu_218_p0;
    sc_signal< sc_lv<4> > tmp_2_cast_fu_360_p1;
    sc_signal< sc_lv<6> > tmp_2_cast3_fu_382_p1;
    sc_signal< sc_lv<6> > grp_fu_218_p1;
    sc_signal< sc_lv<6> > tmp_8_cast_fu_377_p1;
    sc_signal< sc_lv<32> > grp_fu_252_p0;
    sc_signal< sc_lv<32> > grp_fu_252_p1;
    sc_signal< sc_lv<32> > grp_fu_273_p0;
    sc_signal< sc_lv<32> > grp_fu_273_p1;
    sc_signal< sc_lv<1> > exitcond_fu_303_p2;
    sc_signal< sc_lv<3> > tmp_mid2_v_fu_317_p1;
    sc_signal< sc_lv<4> > tmp_4_fu_345_p2;
    sc_signal< sc_lv<4> > tmp_9_cast_fu_364_p0;
    sc_signal< sc_lv<5> > tmp_7_fu_370_p3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state31;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_pp0_stage4;
    static const sc_lv<7> ap_ST_fsm_state31;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<60> ap_const_lv60_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_0_Addr_A();
    void thread_a_0_Addr_A_orig();
    void thread_a_0_Clk_A();
    void thread_a_0_Din_A();
    void thread_a_0_EN_A();
    void thread_a_0_Rst_A();
    void thread_a_0_WEN_A();
    void thread_a_1_Addr_A();
    void thread_a_1_Addr_A_orig();
    void thread_a_1_Clk_A();
    void thread_a_1_Din_A();
    void thread_a_1_EN_A();
    void thread_a_1_Rst_A();
    void thread_a_1_WEN_A();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state31();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_0_Addr_A();
    void thread_b_0_Addr_A_orig();
    void thread_b_0_Clk_A();
    void thread_b_0_Din_A();
    void thread_b_0_EN_A();
    void thread_b_0_Rst_A();
    void thread_b_0_WEN_A();
    void thread_b_1_Addr_A();
    void thread_b_1_Addr_A_orig();
    void thread_b_1_Clk_A();
    void thread_b_1_Din_A();
    void thread_b_1_EN_A();
    void thread_b_1_Rst_A();
    void thread_b_1_WEN_A();
    void thread_c_Addr_A();
    void thread_c_Addr_A_orig();
    void thread_c_Clk_A();
    void thread_c_Din_A();
    void thread_c_EN_A();
    void thread_c_Rst_A();
    void thread_c_WEN_A();
    void thread_exitcond_flatten_fu_297_p2();
    void thread_exitcond_fu_303_p2();
    void thread_grp_fu_218_p0();
    void thread_grp_fu_218_p1();
    void thread_grp_fu_218_p2();
    void thread_grp_fu_252_p0();
    void thread_grp_fu_252_p1();
    void thread_grp_fu_273_p0();
    void thread_grp_fu_273_p1();
    void thread_i_phi_fu_200_p4();
    void thread_indvar_flatten_phi_fu_188_p4();
    void thread_j_mid2_fu_309_p3();
    void thread_j_phi_fu_211_p4();
    void thread_tmp_10_cast_fu_386_p1();
    void thread_tmp_2_cast3_fu_382_p1();
    void thread_tmp_2_cast_fu_360_p1();
    void thread_tmp_2_fu_339_p1();
    void thread_tmp_3_fu_333_p1();
    void thread_tmp_4_fu_345_p2();
    void thread_tmp_5_fu_350_p3();
    void thread_tmp_7_fu_370_p3();
    void thread_tmp_8_cast_fu_377_p1();
    void thread_tmp_9_cast_fu_364_p0();
    void thread_tmp_9_cast_fu_364_p1();
    void thread_tmp_fu_325_p3();
    void thread_tmp_mid2_v_fu_317_p1();
    void thread_tmp_mid2_v_fu_317_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
