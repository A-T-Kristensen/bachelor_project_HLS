// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<7> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<7> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<7> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<7> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<7> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<7> matmul_hw::ap_ST_fsm_state31 = "1000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<3> matmul_hw::ap_const_lv3_0 = "000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<3> matmul_hw::ap_const_lv3_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<4> matmul_hw::ap_const_lv4_4 = "100";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<3> matmul_hw::ap_const_lv3_4 = "100";
const sc_lv<4> matmul_hw::ap_const_lv4_1 = "1";
const sc_lv<60> matmul_hw::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> matmul_hw::ap_const_lv2_0 = "00";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_fadd_32dEe_U1 = new matmul_hw_fadd_32dEe<1,5,32,32,32>("matmul_hw_fadd_32dEe_U1");
    matmul_hw_fadd_32dEe_U1->clk(ap_clk);
    matmul_hw_fadd_32dEe_U1->reset(ap_rst);
    matmul_hw_fadd_32dEe_U1->din0(grp_fu_252_p0);
    matmul_hw_fadd_32dEe_U1->din1(grp_fu_252_p1);
    matmul_hw_fadd_32dEe_U1->ce(ap_var_for_const0);
    matmul_hw_fadd_32dEe_U1->dout(grp_fu_252_p2);
    matmul_hw_fmul_32eOg_U2 = new matmul_hw_fmul_32eOg<1,4,32,32,32>("matmul_hw_fmul_32eOg_U2");
    matmul_hw_fmul_32eOg_U2->clk(ap_clk);
    matmul_hw_fmul_32eOg_U2->reset(ap_rst);
    matmul_hw_fmul_32eOg_U2->din0(grp_fu_273_p0);
    matmul_hw_fmul_32eOg_U2->din1(grp_fu_273_p1);
    matmul_hw_fmul_32eOg_U2->ce(ap_var_for_const0);
    matmul_hw_fmul_32eOg_U2->dout(grp_fu_273_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_Addr_A);
    sensitive << ( a_0_Addr_A_orig );

    SC_METHOD(thread_a_0_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_333_p1 );
    sensitive << ( tmp_5_fu_350_p3 );

    SC_METHOD(thread_a_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_0_Din_A);

    SC_METHOD(thread_a_0_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_0_WEN_A);

    SC_METHOD(thread_a_1_Addr_A);
    sensitive << ( a_1_Addr_A_orig );

    SC_METHOD(thread_a_1_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_333_p1 );
    sensitive << ( tmp_5_fu_350_p3 );

    SC_METHOD(thread_a_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_1_Din_A);

    SC_METHOD(thread_a_1_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_1_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_b_0_Addr_A);
    sensitive << ( b_0_Addr_A_orig );

    SC_METHOD(thread_b_0_Addr_A_orig);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_2_fu_339_p1 );
    sensitive << ( tmp_9_cast_fu_364_p1 );

    SC_METHOD(thread_b_0_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_0_Din_A);

    SC_METHOD(thread_b_0_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );

    SC_METHOD(thread_b_0_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_0_WEN_A);

    SC_METHOD(thread_b_1_Addr_A);
    sensitive << ( b_1_Addr_A_orig );

    SC_METHOD(thread_b_1_Addr_A_orig);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_2_fu_339_p1 );
    sensitive << ( tmp_9_cast_fu_364_p1 );

    SC_METHOD(thread_b_1_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_1_Din_A);

    SC_METHOD(thread_b_1_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );

    SC_METHOD(thread_b_1_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_1_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_10_cast_fu_386_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_1_3_reg_528 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_exitcond_flatten_fu_297_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_188_p4 );

    SC_METHOD(thread_exitcond_fu_303_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_297_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_phi_fu_211_p4 );

    SC_METHOD(thread_grp_fu_218_p0);
    sensitive << ( indvar_flatten_reg_184 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_mid2_reg_395 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( i_phi_fu_200_p4 );
    sensitive << ( tmp_2_cast_fu_360_p1 );
    sensitive << ( tmp_2_cast3_fu_382_p1 );

    SC_METHOD(thread_grp_fu_218_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_8_cast_fu_377_p1 );

    SC_METHOD(thread_grp_fu_218_p2);
    sensitive << ( grp_fu_218_p0 );
    sensitive << ( grp_fu_218_p1 );

    SC_METHOD(thread_grp_fu_252_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_6_reg_483 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_513 );
    sensitive << ( tmp_1_1_reg_518 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_1_2_reg_523 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_252_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498 );
    sensitive << ( tmp_6_1_reg_503 );
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_273_p0);
    sensitive << ( a_0_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( a_1_load_reg_453 );
    sensitive << ( a_0_load_1_reg_463 );
    sensitive << ( a_1_load_1_reg_468 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_grp_fu_273_p1);
    sensitive << ( b_0_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( b_1_load_reg_458 );
    sensitive << ( b_1_load_1_reg_493 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_i_phi_fu_200_p4);
    sensitive << ( i_reg_196 );
    sensitive << ( exitcond_flatten_reg_391 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_402 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_indvar_flatten_phi_fu_188_p4);
    sensitive << ( indvar_flatten_reg_184 );
    sensitive << ( indvar_flatten_next_reg_229 );
    sensitive << ( exitcond_flatten_reg_391 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_j_mid2_fu_309_p3);
    sensitive << ( j_phi_fu_211_p4 );
    sensitive << ( exitcond_fu_303_p2 );

    SC_METHOD(thread_j_phi_fu_211_p4);
    sensitive << ( j_reg_207 );
    sensitive << ( j_1_reg_240 );
    sensitive << ( exitcond_flatten_reg_391 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_10_cast_fu_386_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_8_reg_247 );

    SC_METHOD(thread_tmp_2_cast3_fu_382_p1);
    sensitive << ( j_mid2_reg_395 );

    SC_METHOD(thread_tmp_2_cast_fu_360_p1);
    sensitive << ( j_mid2_reg_395 );

    SC_METHOD(thread_tmp_2_fu_339_p1);
    sensitive << ( j_mid2_fu_309_p3 );

    SC_METHOD(thread_tmp_3_fu_333_p1);
    sensitive << ( tmp_fu_325_p3 );

    SC_METHOD(thread_tmp_4_fu_345_p2);
    sensitive << ( tmp_reg_408 );

    SC_METHOD(thread_tmp_5_fu_350_p3);
    sensitive << ( tmp_4_fu_345_p2 );

    SC_METHOD(thread_tmp_7_fu_370_p3);
    sensitive << ( tmp_mid2_v_reg_402 );

    SC_METHOD(thread_tmp_8_cast_fu_377_p1);
    sensitive << ( tmp_7_fu_370_p3 );

    SC_METHOD(thread_tmp_9_cast_fu_364_p0);
    sensitive << ( grp_fu_218_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );

    SC_METHOD(thread_tmp_9_cast_fu_364_p1);
    sensitive << ( tmp_9_cast_fu_364_p0 );

    SC_METHOD(thread_tmp_fu_325_p3);
    sensitive << ( tmp_mid2_v_fu_317_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_317_p1);
    sensitive << ( grp_fu_218_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_tmp_mid2_v_fu_317_p3);
    sensitive << ( i_phi_fu_200_p4 );
    sensitive << ( exitcond_fu_303_p2 );
    sensitive << ( tmp_mid2_v_fu_317_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_391 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_Addr_A, "(port)a_0_Addr_A");
    sc_trace(mVcdFile, a_0_EN_A, "(port)a_0_EN_A");
    sc_trace(mVcdFile, a_0_WEN_A, "(port)a_0_WEN_A");
    sc_trace(mVcdFile, a_0_Din_A, "(port)a_0_Din_A");
    sc_trace(mVcdFile, a_0_Dout_A, "(port)a_0_Dout_A");
    sc_trace(mVcdFile, a_0_Clk_A, "(port)a_0_Clk_A");
    sc_trace(mVcdFile, a_0_Rst_A, "(port)a_0_Rst_A");
    sc_trace(mVcdFile, a_1_Addr_A, "(port)a_1_Addr_A");
    sc_trace(mVcdFile, a_1_EN_A, "(port)a_1_EN_A");
    sc_trace(mVcdFile, a_1_WEN_A, "(port)a_1_WEN_A");
    sc_trace(mVcdFile, a_1_Din_A, "(port)a_1_Din_A");
    sc_trace(mVcdFile, a_1_Dout_A, "(port)a_1_Dout_A");
    sc_trace(mVcdFile, a_1_Clk_A, "(port)a_1_Clk_A");
    sc_trace(mVcdFile, a_1_Rst_A, "(port)a_1_Rst_A");
    sc_trace(mVcdFile, b_0_Addr_A, "(port)b_0_Addr_A");
    sc_trace(mVcdFile, b_0_EN_A, "(port)b_0_EN_A");
    sc_trace(mVcdFile, b_0_WEN_A, "(port)b_0_WEN_A");
    sc_trace(mVcdFile, b_0_Din_A, "(port)b_0_Din_A");
    sc_trace(mVcdFile, b_0_Dout_A, "(port)b_0_Dout_A");
    sc_trace(mVcdFile, b_0_Clk_A, "(port)b_0_Clk_A");
    sc_trace(mVcdFile, b_0_Rst_A, "(port)b_0_Rst_A");
    sc_trace(mVcdFile, b_1_Addr_A, "(port)b_1_Addr_A");
    sc_trace(mVcdFile, b_1_EN_A, "(port)b_1_EN_A");
    sc_trace(mVcdFile, b_1_WEN_A, "(port)b_1_WEN_A");
    sc_trace(mVcdFile, b_1_Din_A, "(port)b_1_Din_A");
    sc_trace(mVcdFile, b_1_Dout_A, "(port)b_1_Dout_A");
    sc_trace(mVcdFile, b_1_Clk_A, "(port)b_1_Clk_A");
    sc_trace(mVcdFile, b_1_Rst_A, "(port)b_1_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_184, "indvar_flatten_reg_184");
    sc_trace(mVcdFile, i_reg_196, "i_reg_196");
    sc_trace(mVcdFile, j_reg_207, "j_reg_207");
    sc_trace(mVcdFile, grp_fu_218_p2, "grp_fu_218_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_229, "indvar_flatten_next_reg_229");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, j_1_reg_240, "j_1_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, exitcond_flatten_reg_391, "exitcond_flatten_reg_391");
    sc_trace(mVcdFile, tmp_8_reg_247, "tmp_8_reg_247");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_8_reg_247, "ap_pipeline_reg_pp0_iter1_tmp_8_reg_247");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_8_reg_247, "ap_pipeline_reg_pp0_iter2_tmp_8_reg_247");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_8_reg_247, "ap_pipeline_reg_pp0_iter3_tmp_8_reg_247");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_8_reg_247, "ap_pipeline_reg_pp0_iter4_tmp_8_reg_247");
    sc_trace(mVcdFile, exitcond_flatten_fu_297_p2, "exitcond_flatten_fu_297_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_391, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_391");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391");
    sc_trace(mVcdFile, j_mid2_fu_309_p3, "j_mid2_fu_309_p3");
    sc_trace(mVcdFile, j_mid2_reg_395, "j_mid2_reg_395");
    sc_trace(mVcdFile, tmp_mid2_v_fu_317_p3, "tmp_mid2_v_fu_317_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_402, "tmp_mid2_v_reg_402");
    sc_trace(mVcdFile, tmp_fu_325_p3, "tmp_fu_325_p3");
    sc_trace(mVcdFile, tmp_reg_408, "tmp_reg_408");
    sc_trace(mVcdFile, a_1_load_reg_453, "a_1_load_reg_453");
    sc_trace(mVcdFile, b_1_load_reg_458, "b_1_load_reg_458");
    sc_trace(mVcdFile, a_0_load_1_reg_463, "a_0_load_1_reg_463");
    sc_trace(mVcdFile, a_1_load_1_reg_468, "a_1_load_1_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, grp_fu_273_p2, "grp_fu_273_p2");
    sc_trace(mVcdFile, tmp_6_reg_483, "tmp_6_reg_483");
    sc_trace(mVcdFile, b_1_load_1_reg_493, "b_1_load_1_reg_493");
    sc_trace(mVcdFile, tmp_6_2_reg_498, "tmp_6_2_reg_498");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498, "ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498, "ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498");
    sc_trace(mVcdFile, tmp_6_1_reg_503, "tmp_6_1_reg_503");
    sc_trace(mVcdFile, tmp_6_3_reg_508, "tmp_6_3_reg_508");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_508, "ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_508");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508, "ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508");
    sc_trace(mVcdFile, grp_fu_252_p2, "grp_fu_252_p2");
    sc_trace(mVcdFile, tmp_s_reg_513, "tmp_s_reg_513");
    sc_trace(mVcdFile, tmp_1_1_reg_518, "tmp_1_1_reg_518");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_1_2_reg_523, "tmp_1_2_reg_523");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, tmp_1_3_reg_528, "tmp_1_3_reg_528");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_188_p4, "indvar_flatten_phi_fu_188_p4");
    sc_trace(mVcdFile, i_phi_fu_200_p4, "i_phi_fu_200_p4");
    sc_trace(mVcdFile, j_phi_fu_211_p4, "j_phi_fu_211_p4");
    sc_trace(mVcdFile, tmp_3_fu_333_p1, "tmp_3_fu_333_p1");
    sc_trace(mVcdFile, tmp_2_fu_339_p1, "tmp_2_fu_339_p1");
    sc_trace(mVcdFile, tmp_5_fu_350_p3, "tmp_5_fu_350_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_364_p1, "tmp_9_cast_fu_364_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_386_p1, "tmp_10_cast_fu_386_p1");
    sc_trace(mVcdFile, a_0_Addr_A_orig, "a_0_Addr_A_orig");
    sc_trace(mVcdFile, b_0_Addr_A_orig, "b_0_Addr_A_orig");
    sc_trace(mVcdFile, a_1_Addr_A_orig, "a_1_Addr_A_orig");
    sc_trace(mVcdFile, b_1_Addr_A_orig, "b_1_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_218_p0, "grp_fu_218_p0");
    sc_trace(mVcdFile, tmp_2_cast_fu_360_p1, "tmp_2_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_2_cast3_fu_382_p1, "tmp_2_cast3_fu_382_p1");
    sc_trace(mVcdFile, grp_fu_218_p1, "grp_fu_218_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_377_p1, "tmp_8_cast_fu_377_p1");
    sc_trace(mVcdFile, grp_fu_252_p0, "grp_fu_252_p0");
    sc_trace(mVcdFile, grp_fu_252_p1, "grp_fu_252_p1");
    sc_trace(mVcdFile, grp_fu_273_p0, "grp_fu_273_p0");
    sc_trace(mVcdFile, grp_fu_273_p1, "grp_fu_273_p1");
    sc_trace(mVcdFile, exitcond_fu_303_p2, "exitcond_fu_303_p2");
    sc_trace(mVcdFile, tmp_mid2_v_fu_317_p1, "tmp_mid2_v_fu_317_p1");
    sc_trace(mVcdFile, tmp_4_fu_345_p2, "tmp_4_fu_345_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_364_p0, "tmp_9_cast_fu_364_p0");
    sc_trace(mVcdFile, tmp_7_fu_370_p3, "tmp_7_fu_370_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_fadd_32dEe_U1;
    delete matmul_hw_fmul_32eOg_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_196 = tmp_mid2_v_reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_196 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_184 = indvar_flatten_next_reg_229.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_184 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_207 = j_1_reg_240.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_207 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0))) {
        a_0_load_1_reg_463 = a_0_Dout_A.read();
        a_1_load_1_reg_468 = a_1_Dout_A.read();
        j_1_reg_240 =  (sc_lv<3>) (grp_fu_218_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0))) {
        a_1_load_reg_453 = a_1_Dout_A.read();
        b_1_load_reg_458 = b_1_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391 = exitcond_flatten_reg_391.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498 = tmp_6_2_reg_498.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_391 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498 = ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_391.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391.read();
        exitcond_flatten_reg_391 = exitcond_flatten_fu_297_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_8_reg_247 = tmp_8_reg_247.read();
        ap_pipeline_reg_pp0_iter2_tmp_8_reg_247 = ap_pipeline_reg_pp0_iter1_tmp_8_reg_247.read();
        ap_pipeline_reg_pp0_iter3_tmp_8_reg_247 = ap_pipeline_reg_pp0_iter2_tmp_8_reg_247.read();
        ap_pipeline_reg_pp0_iter4_tmp_8_reg_247 = ap_pipeline_reg_pp0_iter3_tmp_8_reg_247.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_508 = tmp_6_3_reg_508.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508 = ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_508.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        b_1_load_1_reg_493 = b_1_Dout_A.read();
        tmp_6_reg_483 = grp_fu_273_p2.read();
        tmp_8_reg_247 = grp_fu_218_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_229 =  (sc_lv<5>) (grp_fu_218_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_297_p2.read()))) {
        j_mid2_reg_395 = j_mid2_fu_309_p3.read();
        tmp_reg_408 = tmp_fu_325_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_391.read()))) {
        tmp_1_1_reg_518 = grp_fu_252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_391.read()))) {
        tmp_1_2_reg_523 = grp_fu_252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391.read()))) {
        tmp_1_3_reg_528 = grp_fu_252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391.read()))) {
        tmp_6_1_reg_503 = grp_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_6_2_reg_498 = grp_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391.read()))) {
        tmp_6_3_reg_508 = grp_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_297_p2.read()))) {
        tmp_mid2_v_reg_402 = tmp_mid2_v_fu_317_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_391.read()))) {
        tmp_s_reg_513 = grp_fu_252_p2.read();
    }
}

void matmul_hw::thread_a_0_Addr_A() {
    a_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_350_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_0_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_333_p1.read());
        } else {
            a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_0_Clk_A() {
    a_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_0_Din_A() {
    a_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        a_0_EN_A = ap_const_logic_1;
    } else {
        a_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_0_Rst_A() {
    a_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_0_WEN_A() {
    a_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_a_1_Addr_A() {
    a_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_350_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_1_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_333_p1.read());
        } else {
            a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_1_Clk_A() {
    a_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_1_Din_A() {
    a_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        a_1_EN_A = ap_const_logic_1;
    } else {
        a_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_1_Rst_A() {
    a_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_1_WEN_A() {
    a_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Addr_A() {
    b_0_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_0_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_0_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_9_cast_fu_364_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_0_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_339_p1.read());
        } else {
            b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_0_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_0_Clk_A() {
    b_0_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_0_Din_A() {
    b_0_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_0_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_0_EN_A = ap_const_logic_1;
    } else {
        b_0_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_0_Rst_A() {
    b_0_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_0_WEN_A() {
    b_0_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_b_1_Addr_A() {
    b_1_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_1_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_1_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_9_cast_fu_364_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_1_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_339_p1.read());
        } else {
            b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_1_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_1_Clk_A() {
    b_1_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_1_Din_A() {
    b_1_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_1_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())))) {
        b_1_EN_A = ap_const_logic_1;
    } else {
        b_1_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_1_Rst_A() {
    b_1_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_1_WEN_A() {
    b_1_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_10_cast_fu_386_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = tmp_1_3_reg_528.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_391.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_297_p2() {
    exitcond_flatten_fu_297_p2 = (!indvar_flatten_phi_fu_188_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_188_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_exitcond_fu_303_p2() {
    exitcond_fu_303_p2 = (!j_phi_fu_211_p4.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_211_p4.read() == ap_const_lv3_4);
}

void matmul_hw::thread_grp_fu_218_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            grp_fu_218_p0 = tmp_2_cast3_fu_382_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            grp_fu_218_p0 =  (sc_lv<6>) (tmp_2_cast_fu_360_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            grp_fu_218_p0 =  (sc_lv<6>) (j_mid2_reg_395.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_218_p0 =  (sc_lv<6>) (indvar_flatten_reg_184.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_218_p0 =  (sc_lv<6>) (i_phi_fu_200_p4.read());
        } else {
            grp_fu_218_p0 =  (sc_lv<6>) ("XXXXXX");
        }
    } else {
        grp_fu_218_p0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matmul_hw::thread_grp_fu_218_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_218_p1 = tmp_8_cast_fu_377_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        grp_fu_218_p1 =  (sc_lv<6>) (ap_const_lv4_4);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_218_p1 =  (sc_lv<6>) (ap_const_lv5_1);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        grp_fu_218_p1 =  (sc_lv<6>) (ap_const_lv3_1);
    } else {
        grp_fu_218_p1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matmul_hw::thread_grp_fu_218_p2() {
    grp_fu_218_p2 = (!grp_fu_218_p0.read().is_01() || !grp_fu_218_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(grp_fu_218_p0.read()) + sc_biguint<6>(grp_fu_218_p1.read()));
}

void matmul_hw::thread_grp_fu_252_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_252_p0 = tmp_1_2_reg_523.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_252_p0 = tmp_1_1_reg_518.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_252_p0 = tmp_s_reg_513.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_252_p0 = tmp_6_reg_483.read();
    } else {
        grp_fu_252_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_252_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_252_p1 = ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_508.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_252_p1 = ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_252_p1 = tmp_6_1_reg_503.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_252_p1 = ap_const_lv32_0;
    } else {
        grp_fu_252_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_273_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_273_p0 = a_1_load_1_reg_468.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_273_p0 = a_0_load_1_reg_463.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_273_p0 = a_1_load_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_273_p0 = a_0_Dout_A.read();
    } else {
        grp_fu_273_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_273_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_273_p1 = b_1_load_1_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_273_p1 = b_1_load_reg_458.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())))) {
        grp_fu_273_p1 = b_0_Dout_A.read();
    } else {
        grp_fu_273_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_i_phi_fu_200_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_phi_fu_200_p4 = tmp_mid2_v_reg_402.read();
    } else {
        i_phi_fu_200_p4 = i_reg_196.read();
    }
}

void matmul_hw::thread_indvar_flatten_phi_fu_188_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_phi_fu_188_p4 = indvar_flatten_next_reg_229.read();
    } else {
        indvar_flatten_phi_fu_188_p4 = indvar_flatten_reg_184.read();
    }
}

void matmul_hw::thread_j_mid2_fu_309_p3() {
    j_mid2_fu_309_p3 = (!exitcond_fu_303_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_303_p2.read()[0].to_bool())? ap_const_lv3_0: j_phi_fu_211_p4.read());
}

void matmul_hw::thread_j_phi_fu_211_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_phi_fu_211_p4 = j_1_reg_240.read();
    } else {
        j_phi_fu_211_p4 = j_reg_207.read();
    }
}

void matmul_hw::thread_tmp_10_cast_fu_386_p1() {
    tmp_10_cast_fu_386_p1 = esl_zext<64,6>(ap_pipeline_reg_pp0_iter4_tmp_8_reg_247.read());
}

void matmul_hw::thread_tmp_2_cast3_fu_382_p1() {
    tmp_2_cast3_fu_382_p1 = esl_zext<6,3>(j_mid2_reg_395.read());
}

void matmul_hw::thread_tmp_2_cast_fu_360_p1() {
    tmp_2_cast_fu_360_p1 = esl_zext<4,3>(j_mid2_reg_395.read());
}

void matmul_hw::thread_tmp_2_fu_339_p1() {
    tmp_2_fu_339_p1 = esl_zext<64,3>(j_mid2_fu_309_p3.read());
}

void matmul_hw::thread_tmp_3_fu_333_p1() {
    tmp_3_fu_333_p1 = esl_zext<64,4>(tmp_fu_325_p3.read());
}

void matmul_hw::thread_tmp_4_fu_345_p2() {
    tmp_4_fu_345_p2 = (tmp_reg_408.read() | ap_const_lv4_1);
}

void matmul_hw::thread_tmp_5_fu_350_p3() {
    tmp_5_fu_350_p3 = esl_concat<60,4>(ap_const_lv60_0, tmp_4_fu_345_p2.read());
}

void matmul_hw::thread_tmp_7_fu_370_p3() {
    tmp_7_fu_370_p3 = esl_concat<3,2>(tmp_mid2_v_reg_402.read(), ap_const_lv2_0);
}

void matmul_hw::thread_tmp_8_cast_fu_377_p1() {
    tmp_8_cast_fu_377_p1 = esl_zext<6,5>(tmp_7_fu_370_p3.read());
}

void matmul_hw::thread_tmp_9_cast_fu_364_p0() {
    tmp_9_cast_fu_364_p0 =  (sc_lv<4>) (grp_fu_218_p2.read());
}

void matmul_hw::thread_tmp_9_cast_fu_364_p1() {
    tmp_9_cast_fu_364_p1 = esl_zext<64,4>(tmp_9_cast_fu_364_p0.read());
}

void matmul_hw::thread_tmp_fu_325_p3() {
    tmp_fu_325_p3 = esl_concat<3,1>(tmp_mid2_v_fu_317_p3.read(), ap_const_lv1_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_317_p1() {
    tmp_mid2_v_fu_317_p1 =  (sc_lv<3>) (grp_fu_218_p2.read());
}

void matmul_hw::thread_tmp_mid2_v_fu_317_p3() {
    tmp_mid2_v_fu_317_p3 = (!exitcond_fu_303_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_303_p2.read()[0].to_bool())? tmp_mid2_v_fu_317_p1.read(): i_phi_fu_200_p4.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_reg_391.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Addr_A\" :  \"" << a_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_EN_A\" :  \"" << a_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_WEN_A\" :  \"" << a_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Din_A\" :  \"" << a_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_Dout_A\" :  \"" << a_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Clk_A\" :  \"" << a_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_Rst_A\" :  \"" << a_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Addr_A\" :  \"" << a_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_EN_A\" :  \"" << a_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_WEN_A\" :  \"" << a_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Din_A\" :  \"" << a_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_Dout_A\" :  \"" << a_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Clk_A\" :  \"" << a_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_Rst_A\" :  \"" << a_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Addr_A\" :  \"" << b_0_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_EN_A\" :  \"" << b_0_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_WEN_A\" :  \"" << b_0_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Din_A\" :  \"" << b_0_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_Dout_A\" :  \"" << b_0_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Clk_A\" :  \"" << b_0_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_Rst_A\" :  \"" << b_0_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Addr_A\" :  \"" << b_1_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_EN_A\" :  \"" << b_1_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_WEN_A\" :  \"" << b_1_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Din_A\" :  \"" << b_1_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_Dout_A\" :  \"" << b_1_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Clk_A\" :  \"" << b_1_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_Rst_A\" :  \"" << b_1_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

