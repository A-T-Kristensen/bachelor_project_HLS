// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmul_hw_HH_
#define _matmul_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmul_hw_fadd_32bkb.h"
#include "matmul_hw_fmul_32cud.h"

namespace ap_rtl {

struct matmul_hw : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > a_Addr_A;
    sc_out< sc_logic > a_EN_A;
    sc_out< sc_lv<4> > a_WEN_A;
    sc_out< sc_lv<32> > a_Din_A;
    sc_in< sc_lv<32> > a_Dout_A;
    sc_out< sc_logic > a_Clk_A;
    sc_out< sc_logic > a_Rst_A;
    sc_out< sc_lv<32> > b_Addr_A;
    sc_out< sc_logic > b_EN_A;
    sc_out< sc_lv<4> > b_WEN_A;
    sc_out< sc_lv<32> > b_Din_A;
    sc_in< sc_lv<32> > b_Dout_A;
    sc_out< sc_logic > b_Clk_A;
    sc_out< sc_logic > b_Rst_A;
    sc_out< sc_lv<32> > c_Addr_A;
    sc_out< sc_logic > c_EN_A;
    sc_out< sc_lv<4> > c_WEN_A;
    sc_out< sc_lv<32> > c_Din_A;
    sc_in< sc_lv<32> > c_Dout_A;
    sc_out< sc_logic > c_Clk_A;
    sc_out< sc_logic > c_Rst_A;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matmul_hw(sc_module_name name);
    SC_HAS_PROCESS(matmul_hw);

    ~matmul_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matmul_hw_fadd_32bkb<1,5,32,32,32>* matmul_hw_fadd_32bkb_U1;
    matmul_hw_fmul_32cud<1,4,32,32,32>* matmul_hw_fmul_32cud_U2;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > indvar_flatten_reg_176;
    sc_signal< sc_lv<3> > i_reg_188;
    sc_signal< sc_lv<3> > j_reg_199;
    sc_signal< sc_lv<6> > grp_fu_210_p2;
    sc_signal< sc_lv<5> > indvar_flatten_next_reg_221;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > j_1_reg_234;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_426;
    sc_signal< sc_lv<6> > tmp_14_reg_243;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage5;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter1_tmp_14_reg_243;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter2_tmp_14_reg_243;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter3_tmp_14_reg_243;
    sc_signal< sc_lv<32> > grp_fu_248_p2;
    sc_signal< sc_lv<32> > reg_293;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_299_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426;
    sc_signal< sc_lv<3> > j_mid2_fu_311_p3;
    sc_signal< sc_lv<3> > j_mid2_reg_430;
    sc_signal< sc_lv<3> > tmp_mid2_v_fu_319_p3;
    sc_signal< sc_lv<3> > tmp_mid2_v_reg_439;
    sc_signal< sc_lv<5> > tmp_fu_327_p3;
    sc_signal< sc_lv<5> > tmp_reg_444;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_lv<32> > a_load_1_reg_492;
    sc_signal< sc_lv<32> > b_load_2_reg_497;
    sc_signal< sc_lv<32> > a_load_2_reg_512;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage4;
    sc_signal< sc_lv<32> > grp_fu_269_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_522;
    sc_signal< sc_lv<32> > a_load_3_reg_527;
    sc_signal< sc_lv<32> > tmp_6_1_reg_537;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > tmp_6_2_reg_542;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542;
    sc_signal< sc_lv<32> > tmp_6_3_reg_547;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547;
    sc_signal< sc_lv<32> > tmp_s_reg_552;
    sc_signal< sc_lv<32> > tmp_1_1_reg_557;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > indvar_flatten_phi_fu_180_p4;
    sc_signal< sc_lv<3> > i_phi_fu_192_p4;
    sc_signal< sc_lv<3> > j_phi_fu_203_p4;
    sc_signal< sc_lv<64> > tmp_3_fu_335_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_340_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_350_p3;
    sc_signal< sc_lv<64> > tmp_12_fu_359_p3;
    sc_signal< sc_lv<64> > tmp_8_fu_372_p3;
    sc_signal< sc_lv<64> > tmp_11_cast_fu_385_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_395_p3;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_408_p1;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_421_p1;
    sc_signal< sc_lv<32> > a_Addr_A_orig;
    sc_signal< sc_lv<32> > b_Addr_A_orig;
    sc_signal< sc_lv<32> > c_Addr_A_orig;
    sc_signal< sc_lv<6> > grp_fu_210_p0;
    sc_signal< sc_lv<4> > tmp_2_cast_fu_381_p1;
    sc_signal< sc_lv<5> > tmp_2_cast3_fu_404_p1;
    sc_signal< sc_lv<6> > tmp_2_cast4_fu_417_p1;
    sc_signal< sc_lv<6> > grp_fu_210_p1;
    sc_signal< sc_lv<6> > tmp_3_cast_fu_413_p1;
    sc_signal< sc_lv<32> > grp_fu_248_p0;
    sc_signal< sc_lv<32> > grp_fu_248_p1;
    sc_signal< sc_lv<32> > grp_fu_269_p0;
    sc_signal< sc_lv<32> > grp_fu_269_p1;
    sc_signal< sc_lv<1> > exitcond_fu_305_p2;
    sc_signal< sc_lv<3> > tmp_mid2_v_fu_319_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_345_p2;
    sc_signal< sc_lv<5> > tmp_7_fu_367_p2;
    sc_signal< sc_lv<4> > tmp_11_cast_fu_385_p0;
    sc_signal< sc_lv<5> > tmp_9_fu_390_p2;
    sc_signal< sc_lv<5> > tmp_13_cast_fu_408_p0;
    sc_signal< sc_lv<1> > ap_CS_fsm_state28;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage3;
    static const sc_lv<8> ap_ST_fsm_pp0_stage4;
    static const sc_lv<8> ap_ST_fsm_pp0_stage5;
    static const sc_lv<8> ap_ST_fsm_state28;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<61> ap_const_lv61_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_Addr_A();
    void thread_a_Addr_A_orig();
    void thread_a_Clk_A();
    void thread_a_Din_A();
    void thread_a_EN_A();
    void thread_a_Rst_A();
    void thread_a_WEN_A();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state28();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_Addr_A();
    void thread_b_Addr_A_orig();
    void thread_b_Clk_A();
    void thread_b_Din_A();
    void thread_b_EN_A();
    void thread_b_Rst_A();
    void thread_b_WEN_A();
    void thread_c_Addr_A();
    void thread_c_Addr_A_orig();
    void thread_c_Clk_A();
    void thread_c_Din_A();
    void thread_c_EN_A();
    void thread_c_Rst_A();
    void thread_c_WEN_A();
    void thread_exitcond_flatten_fu_299_p2();
    void thread_exitcond_fu_305_p2();
    void thread_grp_fu_210_p0();
    void thread_grp_fu_210_p1();
    void thread_grp_fu_210_p2();
    void thread_grp_fu_248_p0();
    void thread_grp_fu_248_p1();
    void thread_grp_fu_269_p0();
    void thread_grp_fu_269_p1();
    void thread_i_phi_fu_192_p4();
    void thread_indvar_flatten_phi_fu_180_p4();
    void thread_j_mid2_fu_311_p3();
    void thread_j_phi_fu_203_p4();
    void thread_tmp_10_fu_395_p3();
    void thread_tmp_11_cast_fu_385_p0();
    void thread_tmp_11_cast_fu_385_p1();
    void thread_tmp_12_fu_359_p3();
    void thread_tmp_13_cast_fu_408_p0();
    void thread_tmp_13_cast_fu_408_p1();
    void thread_tmp_14_cast_fu_421_p1();
    void thread_tmp_2_cast3_fu_404_p1();
    void thread_tmp_2_cast4_fu_417_p1();
    void thread_tmp_2_cast_fu_381_p1();
    void thread_tmp_2_fu_340_p1();
    void thread_tmp_3_cast_fu_413_p1();
    void thread_tmp_3_fu_335_p1();
    void thread_tmp_4_fu_345_p2();
    void thread_tmp_5_fu_350_p3();
    void thread_tmp_7_fu_367_p2();
    void thread_tmp_8_fu_372_p3();
    void thread_tmp_9_fu_390_p2();
    void thread_tmp_fu_327_p3();
    void thread_tmp_mid2_v_fu_319_p1();
    void thread_tmp_mid2_v_fu_319_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
