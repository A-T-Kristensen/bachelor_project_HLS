// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<8> matmul_hw::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<8> matmul_hw::ap_ST_fsm_state28 = "10000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<3> matmul_hw::ap_const_lv3_0 = "000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<3> matmul_hw::ap_const_lv3_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<4> matmul_hw::ap_const_lv4_4 = "100";
const sc_lv<5> matmul_hw::ap_const_lv5_C = "1100";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<3> matmul_hw::ap_const_lv3_4 = "100";
const sc_lv<2> matmul_hw::ap_const_lv2_0 = "00";
const sc_lv<59> matmul_hw::ap_const_lv59_0 = "00000000000000000000000000000000000000000000000000000000000";
const sc_lv<61> matmul_hw::ap_const_lv61_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_2 = "10";
const sc_lv<5> matmul_hw::ap_const_lv5_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_7 = "111";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_fadd_32bkb_U1 = new matmul_hw_fadd_32bkb<1,5,32,32,32>("matmul_hw_fadd_32bkb_U1");
    matmul_hw_fadd_32bkb_U1->clk(ap_clk);
    matmul_hw_fadd_32bkb_U1->reset(ap_rst);
    matmul_hw_fadd_32bkb_U1->din0(grp_fu_248_p0);
    matmul_hw_fadd_32bkb_U1->din1(grp_fu_248_p1);
    matmul_hw_fadd_32bkb_U1->ce(ap_var_for_const0);
    matmul_hw_fadd_32bkb_U1->dout(grp_fu_248_p2);
    matmul_hw_fmul_32cud_U2 = new matmul_hw_fmul_32cud<1,4,32,32,32>("matmul_hw_fmul_32cud_U2");
    matmul_hw_fmul_32cud_U2->clk(ap_clk);
    matmul_hw_fmul_32cud_U2->reset(ap_rst);
    matmul_hw_fmul_32cud_U2->din0(grp_fu_269_p0);
    matmul_hw_fmul_32cud_U2->din1(grp_fu_269_p1);
    matmul_hw_fmul_32cud_U2->ce(ap_var_for_const0);
    matmul_hw_fmul_32cud_U2->dout(grp_fu_269_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_Addr_A);
    sensitive << ( a_Addr_A_orig );

    SC_METHOD(thread_a_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_3_fu_335_p1 );
    sensitive << ( tmp_5_fu_350_p3 );
    sensitive << ( tmp_8_fu_372_p3 );
    sensitive << ( tmp_10_fu_395_p3 );

    SC_METHOD(thread_a_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_Din_A);

    SC_METHOD(thread_a_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_a_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_b_Addr_A);
    sensitive << ( b_Addr_A_orig );

    SC_METHOD(thread_b_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_2_fu_340_p1 );
    sensitive << ( tmp_12_fu_359_p3 );
    sensitive << ( tmp_11_cast_fu_385_p1 );
    sensitive << ( tmp_13_cast_fu_408_p1 );

    SC_METHOD(thread_b_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_Din_A);

    SC_METHOD(thread_b_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );

    SC_METHOD(thread_b_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_14_cast_fu_421_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( reg_293 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426 );

    SC_METHOD(thread_exitcond_flatten_fu_299_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_180_p4 );

    SC_METHOD(thread_exitcond_fu_305_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_299_p2 );
    sensitive << ( j_phi_fu_203_p4 );

    SC_METHOD(thread_grp_fu_210_p0);
    sensitive << ( indvar_flatten_reg_176 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_mid2_reg_430 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( i_phi_fu_192_p4 );
    sensitive << ( tmp_2_cast_fu_381_p1 );
    sensitive << ( tmp_2_cast3_fu_404_p1 );
    sensitive << ( tmp_2_cast4_fu_417_p1 );

    SC_METHOD(thread_grp_fu_210_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_3_cast_fu_413_p1 );

    SC_METHOD(thread_grp_fu_210_p2);
    sensitive << ( grp_fu_210_p0 );
    sensitive << ( grp_fu_210_p1 );

    SC_METHOD(thread_grp_fu_248_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( reg_293 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_6_reg_522 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_s_reg_552 );
    sensitive << ( tmp_1_1_reg_557 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_248_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_6_1_reg_537 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_269_p0);
    sensitive << ( a_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( a_load_1_reg_492 );
    sensitive << ( a_load_2_reg_512 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( a_load_3_reg_527 );

    SC_METHOD(thread_grp_fu_269_p1);
    sensitive << ( b_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( b_load_2_reg_497 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );

    SC_METHOD(thread_i_phi_fu_192_p4);
    sensitive << ( i_reg_188 );
    sensitive << ( exitcond_flatten_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_439 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_indvar_flatten_phi_fu_180_p4);
    sensitive << ( indvar_flatten_reg_176 );
    sensitive << ( indvar_flatten_next_reg_221 );
    sensitive << ( exitcond_flatten_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_j_mid2_fu_311_p3);
    sensitive << ( j_phi_fu_203_p4 );
    sensitive << ( exitcond_fu_305_p2 );

    SC_METHOD(thread_j_phi_fu_203_p4);
    sensitive << ( j_reg_199 );
    sensitive << ( j_1_reg_234 );
    sensitive << ( exitcond_flatten_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_10_fu_395_p3);
    sensitive << ( tmp_9_fu_390_p2 );

    SC_METHOD(thread_tmp_11_cast_fu_385_p0);
    sensitive << ( grp_fu_210_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_tmp_11_cast_fu_385_p1);
    sensitive << ( tmp_11_cast_fu_385_p0 );

    SC_METHOD(thread_tmp_12_fu_359_p3);
    sensitive << ( j_mid2_reg_430 );

    SC_METHOD(thread_tmp_13_cast_fu_408_p0);
    sensitive << ( grp_fu_210_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );

    SC_METHOD(thread_tmp_13_cast_fu_408_p1);
    sensitive << ( tmp_13_cast_fu_408_p0 );

    SC_METHOD(thread_tmp_14_cast_fu_421_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter3_tmp_14_reg_243 );

    SC_METHOD(thread_tmp_2_cast3_fu_404_p1);
    sensitive << ( j_mid2_reg_430 );

    SC_METHOD(thread_tmp_2_cast4_fu_417_p1);
    sensitive << ( j_mid2_reg_430 );

    SC_METHOD(thread_tmp_2_cast_fu_381_p1);
    sensitive << ( j_mid2_reg_430 );

    SC_METHOD(thread_tmp_2_fu_340_p1);
    sensitive << ( j_mid2_fu_311_p3 );

    SC_METHOD(thread_tmp_3_cast_fu_413_p1);
    sensitive << ( tmp_reg_444 );

    SC_METHOD(thread_tmp_3_fu_335_p1);
    sensitive << ( tmp_fu_327_p3 );

    SC_METHOD(thread_tmp_4_fu_345_p2);
    sensitive << ( tmp_reg_444 );

    SC_METHOD(thread_tmp_5_fu_350_p3);
    sensitive << ( tmp_4_fu_345_p2 );

    SC_METHOD(thread_tmp_7_fu_367_p2);
    sensitive << ( tmp_reg_444 );

    SC_METHOD(thread_tmp_8_fu_372_p3);
    sensitive << ( tmp_7_fu_367_p2 );

    SC_METHOD(thread_tmp_9_fu_390_p2);
    sensitive << ( tmp_reg_444 );

    SC_METHOD(thread_tmp_fu_327_p3);
    sensitive << ( tmp_mid2_v_fu_319_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_319_p1);
    sensitive << ( grp_fu_210_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_tmp_mid2_v_fu_319_p3);
    sensitive << ( i_phi_fu_192_p4 );
    sensitive << ( exitcond_fu_305_p2 );
    sensitive << ( tmp_mid2_v_fu_319_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_426 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_Addr_A, "(port)a_Addr_A");
    sc_trace(mVcdFile, a_EN_A, "(port)a_EN_A");
    sc_trace(mVcdFile, a_WEN_A, "(port)a_WEN_A");
    sc_trace(mVcdFile, a_Din_A, "(port)a_Din_A");
    sc_trace(mVcdFile, a_Dout_A, "(port)a_Dout_A");
    sc_trace(mVcdFile, a_Clk_A, "(port)a_Clk_A");
    sc_trace(mVcdFile, a_Rst_A, "(port)a_Rst_A");
    sc_trace(mVcdFile, b_Addr_A, "(port)b_Addr_A");
    sc_trace(mVcdFile, b_EN_A, "(port)b_EN_A");
    sc_trace(mVcdFile, b_WEN_A, "(port)b_WEN_A");
    sc_trace(mVcdFile, b_Din_A, "(port)b_Din_A");
    sc_trace(mVcdFile, b_Dout_A, "(port)b_Dout_A");
    sc_trace(mVcdFile, b_Clk_A, "(port)b_Clk_A");
    sc_trace(mVcdFile, b_Rst_A, "(port)b_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_176, "indvar_flatten_reg_176");
    sc_trace(mVcdFile, i_reg_188, "i_reg_188");
    sc_trace(mVcdFile, j_reg_199, "j_reg_199");
    sc_trace(mVcdFile, grp_fu_210_p2, "grp_fu_210_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_221, "indvar_flatten_next_reg_221");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, j_1_reg_234, "j_1_reg_234");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, exitcond_flatten_reg_426, "exitcond_flatten_reg_426");
    sc_trace(mVcdFile, tmp_14_reg_243, "tmp_14_reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_14_reg_243, "ap_pipeline_reg_pp0_iter1_tmp_14_reg_243");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_14_reg_243, "ap_pipeline_reg_pp0_iter2_tmp_14_reg_243");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_14_reg_243, "ap_pipeline_reg_pp0_iter3_tmp_14_reg_243");
    sc_trace(mVcdFile, grp_fu_248_p2, "grp_fu_248_p2");
    sc_trace(mVcdFile, reg_293, "reg_293");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, exitcond_flatten_fu_299_p2, "exitcond_flatten_fu_299_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426");
    sc_trace(mVcdFile, j_mid2_fu_311_p3, "j_mid2_fu_311_p3");
    sc_trace(mVcdFile, j_mid2_reg_430, "j_mid2_reg_430");
    sc_trace(mVcdFile, tmp_mid2_v_fu_319_p3, "tmp_mid2_v_fu_319_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_439, "tmp_mid2_v_reg_439");
    sc_trace(mVcdFile, tmp_fu_327_p3, "tmp_fu_327_p3");
    sc_trace(mVcdFile, tmp_reg_444, "tmp_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, a_load_1_reg_492, "a_load_1_reg_492");
    sc_trace(mVcdFile, b_load_2_reg_497, "b_load_2_reg_497");
    sc_trace(mVcdFile, a_load_2_reg_512, "a_load_2_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, grp_fu_269_p2, "grp_fu_269_p2");
    sc_trace(mVcdFile, tmp_6_reg_522, "tmp_6_reg_522");
    sc_trace(mVcdFile, a_load_3_reg_527, "a_load_3_reg_527");
    sc_trace(mVcdFile, tmp_6_1_reg_537, "tmp_6_1_reg_537");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_6_2_reg_542, "tmp_6_2_reg_542");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542, "ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542");
    sc_trace(mVcdFile, tmp_6_3_reg_547, "tmp_6_3_reg_547");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547, "ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547");
    sc_trace(mVcdFile, tmp_s_reg_552, "tmp_s_reg_552");
    sc_trace(mVcdFile, tmp_1_1_reg_557, "tmp_1_1_reg_557");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_180_p4, "indvar_flatten_phi_fu_180_p4");
    sc_trace(mVcdFile, i_phi_fu_192_p4, "i_phi_fu_192_p4");
    sc_trace(mVcdFile, j_phi_fu_203_p4, "j_phi_fu_203_p4");
    sc_trace(mVcdFile, tmp_3_fu_335_p1, "tmp_3_fu_335_p1");
    sc_trace(mVcdFile, tmp_2_fu_340_p1, "tmp_2_fu_340_p1");
    sc_trace(mVcdFile, tmp_5_fu_350_p3, "tmp_5_fu_350_p3");
    sc_trace(mVcdFile, tmp_12_fu_359_p3, "tmp_12_fu_359_p3");
    sc_trace(mVcdFile, tmp_8_fu_372_p3, "tmp_8_fu_372_p3");
    sc_trace(mVcdFile, tmp_11_cast_fu_385_p1, "tmp_11_cast_fu_385_p1");
    sc_trace(mVcdFile, tmp_10_fu_395_p3, "tmp_10_fu_395_p3");
    sc_trace(mVcdFile, tmp_13_cast_fu_408_p1, "tmp_13_cast_fu_408_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_421_p1, "tmp_14_cast_fu_421_p1");
    sc_trace(mVcdFile, a_Addr_A_orig, "a_Addr_A_orig");
    sc_trace(mVcdFile, b_Addr_A_orig, "b_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_210_p0, "grp_fu_210_p0");
    sc_trace(mVcdFile, tmp_2_cast_fu_381_p1, "tmp_2_cast_fu_381_p1");
    sc_trace(mVcdFile, tmp_2_cast3_fu_404_p1, "tmp_2_cast3_fu_404_p1");
    sc_trace(mVcdFile, tmp_2_cast4_fu_417_p1, "tmp_2_cast4_fu_417_p1");
    sc_trace(mVcdFile, grp_fu_210_p1, "grp_fu_210_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_413_p1, "tmp_3_cast_fu_413_p1");
    sc_trace(mVcdFile, grp_fu_248_p0, "grp_fu_248_p0");
    sc_trace(mVcdFile, grp_fu_248_p1, "grp_fu_248_p1");
    sc_trace(mVcdFile, grp_fu_269_p0, "grp_fu_269_p0");
    sc_trace(mVcdFile, grp_fu_269_p1, "grp_fu_269_p1");
    sc_trace(mVcdFile, exitcond_fu_305_p2, "exitcond_fu_305_p2");
    sc_trace(mVcdFile, tmp_mid2_v_fu_319_p1, "tmp_mid2_v_fu_319_p1");
    sc_trace(mVcdFile, tmp_4_fu_345_p2, "tmp_4_fu_345_p2");
    sc_trace(mVcdFile, tmp_7_fu_367_p2, "tmp_7_fu_367_p2");
    sc_trace(mVcdFile, tmp_11_cast_fu_385_p0, "tmp_11_cast_fu_385_p0");
    sc_trace(mVcdFile, tmp_9_fu_390_p2, "tmp_9_fu_390_p2");
    sc_trace(mVcdFile, tmp_13_cast_fu_408_p0, "tmp_13_cast_fu_408_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_fadd_32bkb_U1;
    delete matmul_hw_fmul_32cud_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_188 = tmp_mid2_v_reg_439.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_188 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_176 = indvar_flatten_next_reg_221.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_176 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_199 = j_1_reg_234.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_199 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        a_load_1_reg_492 = a_Dout_A.read();
        b_load_2_reg_497 = b_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0))) {
        a_load_2_reg_512 = a_Dout_A.read();
        j_1_reg_234 =  (sc_lv<3>) (grp_fu_210_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        a_load_3_reg_527 = a_Dout_A.read();
        tmp_6_reg_522 = grp_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426 = exitcond_flatten_reg_426.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426.read();
        exitcond_flatten_reg_426 = exitcond_flatten_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_14_reg_243 = tmp_14_reg_243.read();
        ap_pipeline_reg_pp0_iter2_tmp_14_reg_243 = ap_pipeline_reg_pp0_iter1_tmp_14_reg_243.read();
        ap_pipeline_reg_pp0_iter3_tmp_14_reg_243 = ap_pipeline_reg_pp0_iter2_tmp_14_reg_243.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542 = tmp_6_2_reg_542.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547 = tmp_6_3_reg_547.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_221 =  (sc_lv<5>) (grp_fu_210_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_299_p2.read()))) {
        j_mid2_reg_430 = j_mid2_fu_311_p3.read();
        tmp_reg_444 = tmp_fu_327_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_426.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        reg_293 = grp_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_14_reg_243 = grp_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_426.read()))) {
        tmp_1_1_reg_557 = grp_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_6_1_reg_537 = grp_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426.read()))) {
        tmp_6_2_reg_542 = grp_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426.read()))) {
        tmp_6_3_reg_547 = grp_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_299_p2.read()))) {
        tmp_mid2_v_reg_439 = tmp_mid2_v_fu_319_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_426.read()))) {
        tmp_s_reg_552 = grp_fu_248_p2.read();
    }
}

void matmul_hw::thread_a_Addr_A() {
    a_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_395_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_372_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_350_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_335_p1.read());
        } else {
            a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_Clk_A() {
    a_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_Din_A() {
    a_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())))) {
        a_EN_A = ap_const_logic_1;
    } else {
        a_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_Rst_A() {
    a_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_WEN_A() {
    a_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(7, 7);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Addr_A() {
    b_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_13_cast_fu_408_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_11_cast_fu_385_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_359_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_340_p1.read());
        } else {
            b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_Clk_A() {
    b_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_Din_A() {
    b_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())))) {
        b_EN_A = ap_const_logic_1;
    } else {
        b_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Rst_A() {
    b_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_WEN_A() {
    b_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_14_cast_fu_421_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = reg_293.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_426.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_299_p2() {
    exitcond_flatten_fu_299_p2 = (!indvar_flatten_phi_fu_180_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_180_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_exitcond_fu_305_p2() {
    exitcond_fu_305_p2 = (!j_phi_fu_203_p4.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_203_p4.read() == ap_const_lv3_4);
}

void matmul_hw::thread_grp_fu_210_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            grp_fu_210_p0 = tmp_2_cast4_fu_417_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            grp_fu_210_p0 =  (sc_lv<6>) (tmp_2_cast3_fu_404_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            grp_fu_210_p0 =  (sc_lv<6>) (j_mid2_reg_430.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            grp_fu_210_p0 =  (sc_lv<6>) (tmp_2_cast_fu_381_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_210_p0 =  (sc_lv<6>) (indvar_flatten_reg_176.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            grp_fu_210_p0 =  (sc_lv<6>) (i_phi_fu_192_p4.read());
        } else {
            grp_fu_210_p0 =  (sc_lv<6>) ("XXXXXX");
        }
    } else {
        grp_fu_210_p0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matmul_hw::thread_grp_fu_210_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_210_p1 = tmp_3_cast_fu_413_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_210_p1 =  (sc_lv<6>) (ap_const_lv5_C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_210_p1 =  (sc_lv<6>) (ap_const_lv4_4);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        grp_fu_210_p1 =  (sc_lv<6>) (ap_const_lv5_1);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        grp_fu_210_p1 =  (sc_lv<6>) (ap_const_lv3_1);
    } else {
        grp_fu_210_p1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matmul_hw::thread_grp_fu_210_p2() {
    grp_fu_210_p2 = (!grp_fu_210_p0.read().is_01() || !grp_fu_210_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(grp_fu_210_p0.read()) + sc_biguint<6>(grp_fu_210_p1.read()));
}

void matmul_hw::thread_grp_fu_248_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_248_p0 = reg_293.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_248_p0 = tmp_1_1_reg_557.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_248_p0 = tmp_s_reg_552.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_248_p0 = tmp_6_reg_522.read();
    } else {
        grp_fu_248_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_248_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        grp_fu_248_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_547.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_248_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_542.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_248_p1 = tmp_6_1_reg_537.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_248_p1 = ap_const_lv32_0;
    } else {
        grp_fu_248_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_269_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            grp_fu_269_p0 = a_load_3_reg_527.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            grp_fu_269_p0 = a_load_2_reg_512.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            grp_fu_269_p0 = a_load_1_reg_492.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            grp_fu_269_p0 = a_Dout_A.read();
        } else {
            grp_fu_269_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_269_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_269_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        grp_fu_269_p1 = b_load_2_reg_497.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())))) {
        grp_fu_269_p1 = b_Dout_A.read();
    } else {
        grp_fu_269_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_i_phi_fu_192_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_phi_fu_192_p4 = tmp_mid2_v_reg_439.read();
    } else {
        i_phi_fu_192_p4 = i_reg_188.read();
    }
}

void matmul_hw::thread_indvar_flatten_phi_fu_180_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_phi_fu_180_p4 = indvar_flatten_next_reg_221.read();
    } else {
        indvar_flatten_phi_fu_180_p4 = indvar_flatten_reg_176.read();
    }
}

void matmul_hw::thread_j_mid2_fu_311_p3() {
    j_mid2_fu_311_p3 = (!exitcond_fu_305_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_305_p2.read()[0].to_bool())? ap_const_lv3_0: j_phi_fu_203_p4.read());
}

void matmul_hw::thread_j_phi_fu_203_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_phi_fu_203_p4 = j_1_reg_234.read();
    } else {
        j_phi_fu_203_p4 = j_reg_199.read();
    }
}

void matmul_hw::thread_tmp_10_fu_395_p3() {
    tmp_10_fu_395_p3 = esl_concat<59,5>(ap_const_lv59_0, tmp_9_fu_390_p2.read());
}

void matmul_hw::thread_tmp_11_cast_fu_385_p0() {
    tmp_11_cast_fu_385_p0 =  (sc_lv<4>) (grp_fu_210_p2.read());
}

void matmul_hw::thread_tmp_11_cast_fu_385_p1() {
    tmp_11_cast_fu_385_p1 = esl_zext<64,4>(tmp_11_cast_fu_385_p0.read());
}

void matmul_hw::thread_tmp_12_fu_359_p3() {
    tmp_12_fu_359_p3 = esl_concat<61,3>(ap_const_lv61_1, j_mid2_reg_430.read());
}

void matmul_hw::thread_tmp_13_cast_fu_408_p0() {
    tmp_13_cast_fu_408_p0 =  (sc_lv<5>) (grp_fu_210_p2.read());
}

void matmul_hw::thread_tmp_13_cast_fu_408_p1() {
    tmp_13_cast_fu_408_p1 = esl_zext<64,5>(tmp_13_cast_fu_408_p0.read());
}

void matmul_hw::thread_tmp_14_cast_fu_421_p1() {
    tmp_14_cast_fu_421_p1 = esl_zext<64,6>(ap_pipeline_reg_pp0_iter3_tmp_14_reg_243.read());
}

void matmul_hw::thread_tmp_2_cast3_fu_404_p1() {
    tmp_2_cast3_fu_404_p1 = esl_zext<5,3>(j_mid2_reg_430.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_417_p1() {
    tmp_2_cast4_fu_417_p1 = esl_zext<6,3>(j_mid2_reg_430.read());
}

void matmul_hw::thread_tmp_2_cast_fu_381_p1() {
    tmp_2_cast_fu_381_p1 = esl_zext<4,3>(j_mid2_reg_430.read());
}

void matmul_hw::thread_tmp_2_fu_340_p1() {
    tmp_2_fu_340_p1 = esl_zext<64,3>(j_mid2_fu_311_p3.read());
}

void matmul_hw::thread_tmp_3_cast_fu_413_p1() {
    tmp_3_cast_fu_413_p1 = esl_zext<6,5>(tmp_reg_444.read());
}

void matmul_hw::thread_tmp_3_fu_335_p1() {
    tmp_3_fu_335_p1 = esl_zext<64,5>(tmp_fu_327_p3.read());
}

void matmul_hw::thread_tmp_4_fu_345_p2() {
    tmp_4_fu_345_p2 = (tmp_reg_444.read() | ap_const_lv5_1);
}

void matmul_hw::thread_tmp_5_fu_350_p3() {
    tmp_5_fu_350_p3 = esl_concat<59,5>(ap_const_lv59_0, tmp_4_fu_345_p2.read());
}

void matmul_hw::thread_tmp_7_fu_367_p2() {
    tmp_7_fu_367_p2 = (tmp_reg_444.read() | ap_const_lv5_2);
}

void matmul_hw::thread_tmp_8_fu_372_p3() {
    tmp_8_fu_372_p3 = esl_concat<59,5>(ap_const_lv59_0, tmp_7_fu_367_p2.read());
}

void matmul_hw::thread_tmp_9_fu_390_p2() {
    tmp_9_fu_390_p2 = (tmp_reg_444.read() | ap_const_lv5_3);
}

void matmul_hw::thread_tmp_fu_327_p3() {
    tmp_fu_327_p3 = esl_concat<3,2>(tmp_mid2_v_fu_319_p3.read(), ap_const_lv2_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_319_p1() {
    tmp_mid2_v_fu_319_p1 =  (sc_lv<3>) (grp_fu_210_p2.read());
}

void matmul_hw::thread_tmp_mid2_v_fu_319_p3() {
    tmp_mid2_v_fu_319_p3 = (!exitcond_fu_305_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_305_p2.read()[0].to_bool())? tmp_mid2_v_fu_319_p1.read(): i_phi_fu_192_p4.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_reg_426.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Addr_A\" :  \"" << a_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_EN_A\" :  \"" << a_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_WEN_A\" :  \"" << a_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Din_A\" :  \"" << a_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_Dout_A\" :  \"" << a_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Clk_A\" :  \"" << a_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Rst_A\" :  \"" << a_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Addr_A\" :  \"" << b_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_EN_A\" :  \"" << b_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_WEN_A\" :  \"" << b_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Din_A\" :  \"" << b_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_Dout_A\" :  \"" << b_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Clk_A\" :  \"" << b_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Rst_A\" :  \"" << b_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

