// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=1902,HLS_SYN_LUT=3172}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_Addr_A,
        a_0_EN_A,
        a_0_WEN_A,
        a_0_Din_A,
        a_0_Dout_A,
        a_0_Clk_A,
        a_0_Rst_A,
        a_1_Addr_A,
        a_1_EN_A,
        a_1_WEN_A,
        a_1_Din_A,
        a_1_Dout_A,
        a_1_Clk_A,
        a_1_Rst_A,
        a_2_Addr_A,
        a_2_EN_A,
        a_2_WEN_A,
        a_2_Din_A,
        a_2_Dout_A,
        a_2_Clk_A,
        a_2_Rst_A,
        b_0_Addr_A,
        b_0_EN_A,
        b_0_WEN_A,
        b_0_Din_A,
        b_0_Dout_A,
        b_0_Clk_A,
        b_0_Rst_A,
        b_1_Addr_A,
        b_1_EN_A,
        b_1_WEN_A,
        b_1_Din_A,
        b_1_Dout_A,
        b_1_Clk_A,
        b_1_Rst_A,
        b_2_Addr_A,
        b_2_EN_A,
        b_2_WEN_A,
        b_2_Din_A,
        b_2_Dout_A,
        b_2_Clk_A,
        b_2_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 4'b1;
parameter    ap_ST_fsm_pp0_stage0 = 4'b10;
parameter    ap_ST_fsm_pp0_stage1 = 4'b100;
parameter    ap_ST_fsm_state29 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv60_0 = 60'b000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3 = 32'b11;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_0_Addr_A;
output   a_0_EN_A;
output  [3:0] a_0_WEN_A;
output  [31:0] a_0_Din_A;
input  [31:0] a_0_Dout_A;
output   a_0_Clk_A;
output   a_0_Rst_A;
output  [31:0] a_1_Addr_A;
output   a_1_EN_A;
output  [3:0] a_1_WEN_A;
output  [31:0] a_1_Din_A;
input  [31:0] a_1_Dout_A;
output   a_1_Clk_A;
output   a_1_Rst_A;
output  [31:0] a_2_Addr_A;
output   a_2_EN_A;
output  [3:0] a_2_WEN_A;
output  [31:0] a_2_Din_A;
input  [31:0] a_2_Dout_A;
output   a_2_Clk_A;
output   a_2_Rst_A;
output  [31:0] b_0_Addr_A;
output   b_0_EN_A;
output  [3:0] b_0_WEN_A;
output  [31:0] b_0_Din_A;
input  [31:0] b_0_Dout_A;
output   b_0_Clk_A;
output   b_0_Rst_A;
output  [31:0] b_1_Addr_A;
output   b_1_EN_A;
output  [3:0] b_1_WEN_A;
output  [31:0] b_1_Din_A;
input  [31:0] b_1_Dout_A;
output   b_1_Clk_A;
output   b_1_Rst_A;
output  [31:0] b_2_Addr_A;
output   b_2_EN_A;
output  [3:0] b_2_WEN_A;
output  [31:0] b_2_Din_A;
input  [31:0] b_2_Dout_A;
output   b_2_Clk_A;
output   b_2_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_EN_A;
reg a_1_EN_A;
reg b_0_EN_A;
reg b_1_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_264;
reg   [2:0] i_reg_275;
reg   [2:0] j_reg_286;
wire   [0:0] exitcond_flatten_fu_314_p2;
reg   [0:0] exitcond_flatten_reg_1220;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220;
reg   [0:0] ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220;
wire   [4:0] indvar_flatten_next_fu_320_p2;
reg   [4:0] indvar_flatten_next_reg_1224;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] j_mid2_fu_338_p3;
reg   [2:0] j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229;
reg   [2:0] ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229;
wire   [0:0] tmp_mid2_fu_358_p3;
reg   [0:0] tmp_mid2_reg_1237;
wire   [2:0] tmp_1_mid2_v_fu_366_p3;
reg   [2:0] tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257;
reg   [2:0] ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257;
wire   [3:0] tmp_1_fu_374_p3;
reg   [3:0] tmp_1_reg_1263;
wire   [1:0] tmp_fu_394_p1;
reg   [1:0] tmp_reg_1288;
wire   [0:0] ap_CS_fsm_pp0_stage1;
wire   [0:0] tmp_3_fu_437_p2;
reg   [0:0] tmp_3_reg_1309;
reg   [31:0] a_0_load_reg_1317;
reg   [31:0] a_1_load_reg_1322;
wire   [0:0] sel_tmp_fu_457_p2;
reg   [0:0] sel_tmp_reg_1337;
wire   [0:0] sel_tmp2_fu_470_p2;
reg   [0:0] sel_tmp2_reg_1345;
wire   [0:0] sel_tmp4_fu_483_p2;
reg   [0:0] sel_tmp4_reg_1355;
wire   [31:0] tmp_4_fu_672_p6;
reg   [31:0] tmp_4_reg_1367;
wire   [31:0] tmp_8_fu_685_p6;
reg   [31:0] tmp_8_reg_1372;
wire   [2:0] j_1_fu_698_p2;
reg   [2:0] j_1_reg_1377;
wire   [31:0] a_row_load_3_fu_779_p3;
reg   [31:0] a_row_load_3_reg_1382;
wire   [31:0] a_row_load_2_fu_786_p3;
wire   [31:0] a_row_load_1_fu_793_p3;
reg   [31:0] a_row_load_1_reg_1392;
wire   [31:0] a_row_load_fu_800_p3;
wire   [31:0] tmp_7_fu_989_p6;
reg   [31:0] tmp_7_reg_1402;
wire   [31:0] tmp_9_fu_1002_p6;
reg   [31:0] tmp_9_reg_1407;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] tmp_s_reg_1412;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_310_p2;
reg   [31:0] tmp_2_2_reg_1417;
reg   [31:0] ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417;
reg   [31:0] ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417;
reg   [31:0] tmp_2_1_reg_1422;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422;
reg   [31:0] tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427;
reg   [31:0] ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] tmp_5_reg_1432;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_5_1_reg_1437;
reg    ap_enable_reg_pp0_iter7;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] tmp_5_2_reg_1442;
reg    ap_enable_reg_pp0_iter10;
reg   [31:0] tmp_5_3_reg_1447;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg   [4:0] indvar_flatten_phi_fu_268_p4;
reg   [2:0] i_phi_fu_279_p4;
reg   [2:0] j_phi_fu_290_p4;
wire   [63:0] tmp_10_fu_382_p1;
wire   [63:0] tmp_6_fu_388_p1;
wire   [63:0] tmp_12_fu_427_p3;
wire   [63:0] tmp_15_cast_fu_451_p1;
wire   [63:0] tmp_16_cast_fu_1095_p1;
reg   [31:0] a_row_load_s_fu_92;
reg   [31:0] a_row_load_9_fu_96;
reg   [31:0] a_row_load_8_fu_100;
reg   [31:0] a_row_load_7_fu_104;
reg   [31:0] b_copy_0_3_11_fu_108;
wire   [31:0] b_copy_0_3_18_fu_665_p3;
reg   [31:0] b_copy_0_3_8_fu_112;
wire   [31:0] b_copy_0_3_17_fu_658_p3;
reg   [31:0] b_copy_0_3_12_fu_116;
wire   [31:0] b_copy_0_3_16_fu_651_p3;
reg   [31:0] b_copy_0_3_1_fu_120;
wire   [31:0] b_copy_0_3_3_fu_644_p3;
reg   [31:0] b_copy_1_3_11_fu_124;
wire   [31:0] b_copy_1_3_18_fu_982_p3;
reg   [31:0] b_copy_1_3_8_fu_128;
wire   [31:0] b_copy_1_3_17_fu_975_p3;
reg   [31:0] b_copy_1_3_12_fu_132;
wire   [31:0] b_copy_1_3_16_fu_968_p3;
reg   [31:0] b_copy_1_3_1_fu_136;
wire   [31:0] b_copy_1_3_3_fu_961_p3;
reg   [31:0] b_copy_2_3_11_fu_140;
wire   [31:0] b_copy_2_3_18_fu_637_p3;
reg   [31:0] b_copy_2_3_8_fu_144;
wire   [31:0] b_copy_2_3_17_fu_630_p3;
reg   [31:0] b_copy_2_3_12_fu_148;
wire   [31:0] b_copy_2_3_16_fu_623_p3;
reg   [31:0] b_copy_2_3_1_fu_152;
wire   [31:0] b_copy_2_3_3_fu_616_p3;
reg   [31:0] b_copy_3_3_11_fu_156;
wire   [31:0] b_copy_3_3_18_fu_954_p3;
reg   [31:0] b_copy_3_3_8_fu_160;
wire   [31:0] b_copy_3_3_17_fu_947_p3;
reg   [31:0] b_copy_3_3_12_fu_164;
wire   [31:0] b_copy_3_3_16_fu_940_p3;
reg   [31:0] b_copy_3_3_1_fu_168;
wire   [31:0] b_copy_3_3_3_fu_933_p3;
reg   [31:0] a_0_Addr_A_orig;
reg   [31:0] a_1_Addr_A_orig;
reg   [31:0] b_0_Addr_A_orig;
reg   [31:0] b_1_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg   [31:0] grp_fu_297_p0;
reg   [31:0] grp_fu_297_p1;
reg   [31:0] grp_fu_302_p0;
reg   [31:0] grp_fu_302_p1;
reg   [31:0] grp_fu_306_p0;
reg   [31:0] grp_fu_306_p1;
reg   [31:0] grp_fu_310_p0;
reg   [31:0] grp_fu_310_p1;
wire   [0:0] exitcond_fu_332_p2;
wire   [2:0] i_1_fu_326_p2;
wire   [0:0] tmp_mid1_fu_346_p2;
wire   [0:0] tmp1_fu_352_p2;
wire   [3:0] tmp_11_fu_422_p2;
wire   [3:0] tmp_6_cast_fu_442_p1;
wire   [3:0] tmp_14_fu_445_p2;
wire   [31:0] b_copy_0_3_fu_462_p3;
wire   [31:0] b_copy_0_3_4_fu_475_p3;
wire   [31:0] b_copy_0_3_5_fu_496_p3;
wire   [31:0] b_copy_0_3_6_fu_504_p3;
wire   [31:0] b_copy_0_3_9_fu_520_p3;
wire   [31:0] b_copy_2_3_fu_544_p3;
wire   [31:0] b_copy_2_3_4_fu_552_p3;
wire   [31:0] b_copy_2_3_5_fu_568_p3;
wire   [31:0] b_copy_2_3_6_fu_576_p3;
wire   [31:0] b_copy_2_3_9_fu_592_p3;
wire   [31:0] b_copy_2_3_2_fu_560_p3;
wire   [31:0] b_copy_2_3_7_fu_584_p3;
wire   [31:0] b_copy_2_3_14_fu_600_p3;
wire   [31:0] b_copy_2_3_15_fu_608_p3;
wire   [31:0] b_copy_0_3_2_fu_488_p3;
wire   [31:0] b_copy_0_3_7_fu_512_p3;
wire   [31:0] b_copy_0_3_14_fu_528_p3;
wire   [31:0] b_copy_0_3_15_fu_536_p3;
wire   [31:0] tmp_4_fu_672_p1;
wire   [31:0] tmp_4_fu_672_p2;
wire   [31:0] tmp_4_fu_672_p3;
wire   [31:0] tmp_4_fu_672_p4;
wire   [31:0] tmp_8_fu_685_p1;
wire   [31:0] tmp_8_fu_685_p2;
wire   [31:0] tmp_8_fu_685_p3;
wire   [31:0] tmp_8_fu_685_p4;
wire   [31:0] b_copy_1_3_fu_807_p3;
wire   [31:0] b_copy_1_3_4_fu_814_p3;
wire   [31:0] b_copy_1_3_5_fu_828_p3;
wire   [31:0] b_copy_1_3_6_fu_835_p3;
wire   [31:0] b_copy_1_3_9_fu_849_p3;
wire   [31:0] b_copy_3_3_fu_870_p3;
wire   [31:0] b_copy_3_3_4_fu_877_p3;
wire   [31:0] b_copy_3_3_5_fu_891_p3;
wire   [31:0] b_copy_3_3_6_fu_898_p3;
wire   [31:0] b_copy_3_3_9_fu_912_p3;
wire   [31:0] b_copy_3_3_2_fu_884_p3;
wire   [31:0] b_copy_3_3_7_fu_905_p3;
wire   [31:0] b_copy_3_3_14_fu_919_p3;
wire   [31:0] b_copy_3_3_15_fu_926_p3;
wire   [31:0] b_copy_1_3_2_fu_821_p3;
wire   [31:0] b_copy_1_3_7_fu_842_p3;
wire   [31:0] b_copy_1_3_14_fu_856_p3;
wire   [31:0] b_copy_1_3_15_fu_863_p3;
wire   [31:0] tmp_7_fu_989_p1;
wire   [31:0] tmp_7_fu_989_p2;
wire   [31:0] tmp_7_fu_989_p3;
wire   [31:0] tmp_7_fu_989_p4;
wire   [31:0] tmp_9_fu_1002_p1;
wire   [31:0] tmp_9_fu_1002_p2;
wire   [31:0] tmp_9_fu_1002_p3;
wire   [31:0] tmp_9_fu_1002_p4;
wire   [4:0] tmp_13_fu_1075_p3;
wire   [5:0] tmp_14_cast_fu_1082_p1;
wire   [5:0] tmp_6_cast5_fu_1086_p1;
wire   [5:0] tmp_15_fu_1089_p2;
wire   [0:0] ap_CS_fsm_state29;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
end

matmul_hw_fadd_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32hbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(grp_fu_297_p1),
    .ce(1'b1),
    .dout(grp_fu_297_p2)
);

matmul_hw_fadd_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32hbi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_302_p0),
    .din1(grp_fu_302_p1),
    .ce(1'b1),
    .dout(grp_fu_302_p2)
);

matmul_hw_fmul_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32ibs_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

matmul_hw_fmul_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32ibs_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_310_p0),
    .din1(grp_fu_310_p1),
    .ce(1'b1),
    .dout(grp_fu_310_p2)
);

matmul_hw_mux_42_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_jbC_U5(
    .din1(tmp_4_fu_672_p1),
    .din2(tmp_4_fu_672_p2),
    .din3(tmp_4_fu_672_p3),
    .din4(tmp_4_fu_672_p4),
    .din5(tmp_reg_1288),
    .dout(tmp_4_fu_672_p6)
);

matmul_hw_mux_42_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_jbC_U6(
    .din1(tmp_8_fu_685_p1),
    .din2(tmp_8_fu_685_p2),
    .din3(tmp_8_fu_685_p3),
    .din4(tmp_8_fu_685_p4),
    .din5(tmp_reg_1288),
    .dout(tmp_8_fu_685_p6)
);

matmul_hw_mux_42_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_jbC_U7(
    .din1(tmp_7_fu_989_p1),
    .din2(tmp_7_fu_989_p2),
    .din3(tmp_7_fu_989_p3),
    .din4(tmp_7_fu_989_p4),
    .din5(tmp_reg_1288),
    .dout(tmp_7_fu_989_p6)
);

matmul_hw_mux_42_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
matmul_hw_mux_42_jbC_U8(
    .din1(tmp_9_fu_1002_p1),
    .din2(tmp_9_fu_1002_p2),
    .din3(tmp_9_fu_1002_p3),
    .din4(tmp_9_fu_1002_p4),
    .din5(tmp_reg_1288),
    .dout(tmp_9_fu_1002_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(exitcond_flatten_fu_314_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1220 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & ~(exitcond_flatten_reg_1220 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_275 <= tmp_1_mid2_v_reg_1257;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_275 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_264 <= indvar_flatten_next_reg_1224;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_264 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_286 <= j_1_reg_1377;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_286 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1220 == 1'b0))) begin
        a_0_load_reg_1317 <= a_0_Dout_A;
        a_1_load_reg_1322 <= a_1_Dout_A;
        b_copy_0_3_11_fu_108 <= b_copy_0_3_18_fu_665_p3;
        b_copy_0_3_12_fu_116 <= b_copy_0_3_16_fu_651_p3;
        b_copy_0_3_1_fu_120 <= b_copy_0_3_3_fu_644_p3;
        b_copy_0_3_8_fu_112 <= b_copy_0_3_17_fu_658_p3;
        b_copy_2_3_11_fu_140 <= b_copy_2_3_18_fu_637_p3;
        b_copy_2_3_12_fu_148 <= b_copy_2_3_16_fu_623_p3;
        b_copy_2_3_1_fu_152 <= b_copy_2_3_3_fu_616_p3;
        b_copy_2_3_8_fu_144 <= b_copy_2_3_17_fu_630_p3;
        j_1_reg_1377 <= j_1_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0))) begin
        a_row_load_1_reg_1392 <= a_row_load_1_fu_793_p3;
        a_row_load_3_reg_1382 <= a_row_load_3_fu_779_p3;
        tmp_7_reg_1402 <= tmp_7_fu_989_p6;
        tmp_9_reg_1407 <= tmp_9_fu_1002_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_row_load_7_fu_104 <= a_row_load_3_fu_779_p3;
        a_row_load_8_fu_100 <= a_row_load_2_fu_786_p3;
        a_row_load_9_fu_96 <= a_row_load_1_fu_793_p3;
        a_row_load_s_fu_92 <= a_row_load_fu_800_p3;
        b_copy_1_3_11_fu_124 <= b_copy_1_3_18_fu_982_p3;
        b_copy_1_3_12_fu_132 <= b_copy_1_3_16_fu_968_p3;
        b_copy_1_3_1_fu_136 <= b_copy_1_3_3_fu_961_p3;
        b_copy_1_3_8_fu_128 <= b_copy_1_3_17_fu_975_p3;
        b_copy_3_3_11_fu_156 <= b_copy_3_3_18_fu_954_p3;
        b_copy_3_3_12_fu_164 <= b_copy_3_3_16_fu_940_p3;
        b_copy_3_3_1_fu_168 <= b_copy_3_3_3_fu_933_p3;
        b_copy_3_3_8_fu_160 <= b_copy_3_3_17_fu_947_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220 <= exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229 <= j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257 <= tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422 <= tmp_2_1_reg_1422;
        ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427 <= tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422 <= ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422;
        ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427;
        ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220;
        ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229;
        ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257;
        ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427;
        exitcond_flatten_reg_1220 <= exitcond_flatten_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417 <= tmp_2_2_reg_1417;
        ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417;
        ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417;
        ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417;
        ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1224 <= indvar_flatten_next_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_314_p2 == 1'b0))) begin
        j_mid2_reg_1229 <= j_mid2_fu_338_p3;
        tmp_1_reg_1263[3 : 1] <= tmp_1_fu_374_p3[3 : 1];
        tmp_mid2_reg_1237 <= tmp_mid2_fu_358_p3;
        tmp_reg_1288 <= tmp_fu_394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1220 == 1'b0))) begin
        sel_tmp2_reg_1345 <= sel_tmp2_fu_470_p2;
        sel_tmp4_reg_1355 <= sel_tmp4_fu_483_p2;
        sel_tmp_reg_1337 <= sel_tmp_fu_457_p2;
        tmp_3_reg_1309 <= tmp_3_fu_437_p2;
        tmp_4_reg_1367 <= tmp_4_fu_672_p6;
        tmp_8_reg_1372 <= tmp_8_fu_685_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_314_p2 == 1'b0))) begin
        tmp_1_mid2_v_reg_1257 <= tmp_1_mid2_v_fu_366_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        tmp_2_1_reg_1422 <= grp_fu_306_p2;
        tmp_2_3_reg_1427 <= grp_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 == 1'b0))) begin
        tmp_2_2_reg_1417 <= grp_fu_310_p2;
        tmp_s_reg_1412 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter7) & (ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220 == 1'b0))) begin
        tmp_5_1_reg_1437 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220 == 1'b0))) begin
        tmp_5_2_reg_1442 <= grp_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter12) & (ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 == 1'b0))) begin
        tmp_5_3_reg_1447 <= grp_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter5) & (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220 == 1'b0))) begin
        tmp_5_reg_1432 <= grp_fu_297_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_0_Addr_A_orig = tmp_12_fu_427_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_0_Addr_A_orig = tmp_10_fu_382_p1;
        end else begin
            a_0_Addr_A_orig = 'bx;
        end
    end else begin
        a_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_0_EN_A = 1'b1;
    end else begin
        a_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_1_Addr_A_orig = tmp_12_fu_427_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_1_Addr_A_orig = tmp_10_fu_382_p1;
        end else begin
            a_1_Addr_A_orig = 'bx;
        end
    end else begin
        a_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        a_1_EN_A = 1'b1;
    end else begin
        a_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_0_Addr_A_orig = tmp_15_cast_fu_451_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_0_Addr_A_orig = tmp_6_fu_388_p1;
        end else begin
            b_0_Addr_A_orig = 'bx;
        end
    end else begin
        b_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_0_EN_A = 1'b1;
    end else begin
        b_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_1_Addr_A_orig = tmp_15_cast_fu_451_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_1_Addr_A_orig = tmp_6_fu_388_p1;
        end else begin
            b_1_Addr_A_orig = 'bx;
        end
    end else begin
        b_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        b_1_EN_A = 1'b1;
    end else begin
        b_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter13))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter13))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_297_p0 = tmp_5_reg_1432;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_297_p0 = tmp_s_reg_1412;
    end else begin
        grp_fu_297_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_297_p1 = ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_297_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_297_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        grp_fu_302_p0 = tmp_5_2_reg_1442;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter8))) begin
        grp_fu_302_p0 = tmp_5_1_reg_1437;
    end else begin
        grp_fu_302_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter10))) begin
        grp_fu_302_p1 = ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter8))) begin
        grp_fu_302_p1 = ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417;
    end else begin
        grp_fu_302_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_306_p0 = a_row_load_1_reg_1392;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_306_p0 = a_row_load_fu_800_p3;
        end else begin
            grp_fu_306_p0 = 'bx;
        end
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_306_p1 = tmp_7_reg_1402;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_306_p1 = tmp_4_reg_1367;
        end else begin
            grp_fu_306_p1 = 'bx;
        end
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_310_p0 = a_row_load_3_reg_1382;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_310_p0 = a_row_load_2_fu_786_p3;
        end else begin
            grp_fu_310_p0 = 'bx;
        end
    end else begin
        grp_fu_310_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter1)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            grp_fu_310_p1 = tmp_9_reg_1407;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            grp_fu_310_p1 = tmp_8_reg_1372;
        end else begin
            grp_fu_310_p1 = 'bx;
        end
    end else begin
        grp_fu_310_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_279_p4 = tmp_1_mid2_v_reg_1257;
    end else begin
        i_phi_fu_279_p4 = i_reg_275;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_268_p4 = indvar_flatten_next_reg_1224;
    end else begin
        indvar_flatten_phi_fu_268_p4 = indvar_flatten_reg_264;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1220 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_290_p4 = j_1_reg_1377;
    end else begin
        j_phi_fu_290_p4 = j_reg_286;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter13) & ~(1'b1 == ap_enable_reg_pp0_iter12)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_314_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_314_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_Addr_A = a_0_Addr_A_orig << ap_const_lv32_2;

assign a_0_Clk_A = ap_clk;

assign a_0_Din_A = ap_const_lv32_0;

assign a_0_Rst_A = ap_rst;

assign a_0_WEN_A = ap_const_lv4_0;

assign a_1_Addr_A = a_1_Addr_A_orig << ap_const_lv32_2;

assign a_1_Clk_A = ap_clk;

assign a_1_Din_A = ap_const_lv32_0;

assign a_1_Rst_A = ap_rst;

assign a_1_WEN_A = ap_const_lv4_0;

assign a_2_Addr_A = ap_const_lv32_0;

assign a_2_Clk_A = ap_clk;

assign a_2_Din_A = ap_const_lv32_0;

assign a_2_EN_A = 1'b0;

assign a_2_Rst_A = ap_rst;

assign a_2_WEN_A = ap_const_lv4_0;

assign a_row_load_1_fu_793_p3 = ((tmp_3_reg_1309[0:0] === 1'b1) ? a_0_Dout_A : a_row_load_9_fu_96);

assign a_row_load_2_fu_786_p3 = ((tmp_3_reg_1309[0:0] === 1'b1) ? a_1_load_reg_1322 : a_row_load_8_fu_100);

assign a_row_load_3_fu_779_p3 = ((tmp_3_reg_1309[0:0] === 1'b1) ? a_1_Dout_A : a_row_load_7_fu_104);

assign a_row_load_fu_800_p3 = ((tmp_3_reg_1309[0:0] === 1'b1) ? a_0_load_reg_1317 : a_row_load_s_fu_92);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_3];

assign b_0_Addr_A = b_0_Addr_A_orig << ap_const_lv32_2;

assign b_0_Clk_A = ap_clk;

assign b_0_Din_A = ap_const_lv32_0;

assign b_0_Rst_A = ap_rst;

assign b_0_WEN_A = ap_const_lv4_0;

assign b_1_Addr_A = b_1_Addr_A_orig << ap_const_lv32_2;

assign b_1_Clk_A = ap_clk;

assign b_1_Din_A = ap_const_lv32_0;

assign b_1_Rst_A = ap_rst;

assign b_1_WEN_A = ap_const_lv4_0;

assign b_2_Addr_A = ap_const_lv32_0;

assign b_2_Clk_A = ap_clk;

assign b_2_Din_A = ap_const_lv32_0;

assign b_2_EN_A = 1'b0;

assign b_2_Rst_A = ap_rst;

assign b_2_WEN_A = ap_const_lv4_0;

assign b_copy_0_3_14_fu_528_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_0_3_8_fu_112 : b_copy_0_3_9_fu_520_p3);

assign b_copy_0_3_15_fu_536_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_0_Dout_A : b_copy_0_3_11_fu_108);

assign b_copy_0_3_16_fu_651_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_7_fu_512_p3 : b_copy_0_3_12_fu_116);

assign b_copy_0_3_17_fu_658_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_14_fu_528_p3 : b_copy_0_3_8_fu_112);

assign b_copy_0_3_18_fu_665_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_15_fu_536_p3 : b_copy_0_3_11_fu_108);

assign b_copy_0_3_2_fu_488_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : b_copy_0_3_4_fu_475_p3);

assign b_copy_0_3_3_fu_644_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_2_fu_488_p3 : b_copy_0_3_1_fu_120);

assign b_copy_0_3_4_fu_475_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : b_copy_0_3_fu_462_p3);

assign b_copy_0_3_5_fu_496_p3 = ((sel_tmp_fu_457_p2[0:0] === 1'b1) ? b_0_Dout_A : b_copy_0_3_12_fu_116);

assign b_copy_0_3_6_fu_504_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_116 : b_copy_0_3_5_fu_496_p3);

assign b_copy_0_3_7_fu_512_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_0_3_12_fu_116 : b_copy_0_3_6_fu_504_p3);

assign b_copy_0_3_9_fu_520_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_0_Dout_A : b_copy_0_3_8_fu_112);

assign b_copy_0_3_fu_462_p3 = ((sel_tmp_fu_457_p2[0:0] === 1'b1) ? b_copy_0_3_1_fu_120 : b_0_Dout_A);

assign b_copy_1_3_14_fu_856_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_1_3_8_fu_128 : b_copy_1_3_9_fu_849_p3);

assign b_copy_1_3_15_fu_863_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_0_Dout_A : b_copy_1_3_11_fu_124);

assign b_copy_1_3_16_fu_968_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_7_fu_842_p3 : b_copy_1_3_12_fu_132);

assign b_copy_1_3_17_fu_975_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_14_fu_856_p3 : b_copy_1_3_8_fu_128);

assign b_copy_1_3_18_fu_982_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_15_fu_863_p3 : b_copy_1_3_11_fu_124);

assign b_copy_1_3_2_fu_821_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : b_copy_1_3_4_fu_814_p3);

assign b_copy_1_3_3_fu_961_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_2_fu_821_p3 : b_copy_1_3_1_fu_136);

assign b_copy_1_3_4_fu_814_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : b_copy_1_3_fu_807_p3);

assign b_copy_1_3_5_fu_828_p3 = ((sel_tmp_reg_1337[0:0] === 1'b1) ? b_0_Dout_A : b_copy_1_3_12_fu_132);

assign b_copy_1_3_6_fu_835_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_copy_1_3_12_fu_132 : b_copy_1_3_5_fu_828_p3);

assign b_copy_1_3_7_fu_842_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_1_3_12_fu_132 : b_copy_1_3_6_fu_835_p3);

assign b_copy_1_3_9_fu_849_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_0_Dout_A : b_copy_1_3_8_fu_128);

assign b_copy_1_3_fu_807_p3 = ((sel_tmp_reg_1337[0:0] === 1'b1) ? b_copy_1_3_1_fu_136 : b_0_Dout_A);

assign b_copy_2_3_14_fu_600_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_2_3_8_fu_144 : b_copy_2_3_9_fu_592_p3);

assign b_copy_2_3_15_fu_608_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_1_Dout_A : b_copy_2_3_11_fu_140);

assign b_copy_2_3_16_fu_623_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_7_fu_584_p3 : b_copy_2_3_12_fu_148);

assign b_copy_2_3_17_fu_630_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_14_fu_600_p3 : b_copy_2_3_8_fu_144);

assign b_copy_2_3_18_fu_637_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_15_fu_608_p3 : b_copy_2_3_11_fu_140);

assign b_copy_2_3_2_fu_560_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_copy_2_3_4_fu_552_p3);

assign b_copy_2_3_3_fu_616_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_2_fu_560_p3 : b_copy_2_3_1_fu_152);

assign b_copy_2_3_4_fu_552_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_copy_2_3_fu_544_p3);

assign b_copy_2_3_5_fu_568_p3 = ((sel_tmp_fu_457_p2[0:0] === 1'b1) ? b_1_Dout_A : b_copy_2_3_12_fu_148);

assign b_copy_2_3_6_fu_576_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_148 : b_copy_2_3_5_fu_568_p3);

assign b_copy_2_3_7_fu_584_p3 = ((sel_tmp4_fu_483_p2[0:0] === 1'b1) ? b_copy_2_3_12_fu_148 : b_copy_2_3_6_fu_576_p3);

assign b_copy_2_3_9_fu_592_p3 = ((sel_tmp2_fu_470_p2[0:0] === 1'b1) ? b_1_Dout_A : b_copy_2_3_8_fu_144);

assign b_copy_2_3_fu_544_p3 = ((sel_tmp_fu_457_p2[0:0] === 1'b1) ? b_copy_2_3_1_fu_152 : b_1_Dout_A);

assign b_copy_3_3_14_fu_919_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_3_3_8_fu_160 : b_copy_3_3_9_fu_912_p3);

assign b_copy_3_3_15_fu_926_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_1_Dout_A : b_copy_3_3_11_fu_156);

assign b_copy_3_3_16_fu_940_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_7_fu_905_p3 : b_copy_3_3_12_fu_164);

assign b_copy_3_3_17_fu_947_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_14_fu_919_p3 : b_copy_3_3_8_fu_160);

assign b_copy_3_3_18_fu_954_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_15_fu_926_p3 : b_copy_3_3_11_fu_156);

assign b_copy_3_3_2_fu_884_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_copy_3_3_4_fu_877_p3);

assign b_copy_3_3_3_fu_933_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_2_fu_884_p3 : b_copy_3_3_1_fu_168);

assign b_copy_3_3_4_fu_877_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_copy_3_3_fu_870_p3);

assign b_copy_3_3_5_fu_891_p3 = ((sel_tmp_reg_1337[0:0] === 1'b1) ? b_1_Dout_A : b_copy_3_3_12_fu_164);

assign b_copy_3_3_6_fu_898_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_copy_3_3_12_fu_164 : b_copy_3_3_5_fu_891_p3);

assign b_copy_3_3_7_fu_905_p3 = ((sel_tmp4_reg_1355[0:0] === 1'b1) ? b_copy_3_3_12_fu_164 : b_copy_3_3_6_fu_898_p3);

assign b_copy_3_3_9_fu_912_p3 = ((sel_tmp2_reg_1345[0:0] === 1'b1) ? b_1_Dout_A : b_copy_3_3_8_fu_160);

assign b_copy_3_3_fu_870_p3 = ((sel_tmp_reg_1337[0:0] === 1'b1) ? b_copy_3_3_1_fu_168 : b_1_Dout_A);

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_16_cast_fu_1095_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = tmp_5_3_reg_1447;

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_314_p2 = ((indvar_flatten_phi_fu_268_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_332_p2 = ((j_phi_fu_290_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i_1_fu_326_p2 = (ap_const_lv3_1 + i_phi_fu_279_p4);

assign indvar_flatten_next_fu_320_p2 = (indvar_flatten_phi_fu_268_p4 + ap_const_lv5_1);

assign j_1_fu_698_p2 = (ap_const_lv3_1 + j_mid2_reg_1229);

assign j_mid2_fu_338_p3 = ((exitcond_fu_332_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_290_p4);

assign sel_tmp2_fu_470_p2 = ((tmp_reg_1288 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_483_p2 = ((tmp_reg_1288 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_457_p2 = ((tmp_reg_1288 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp1_fu_352_p2 = ((i_phi_fu_279_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_10_fu_382_p1 = tmp_1_fu_374_p3;

assign tmp_11_fu_422_p2 = (tmp_1_reg_1263 | ap_const_lv4_1);

assign tmp_12_fu_427_p3 = {{ap_const_lv60_0}, {tmp_11_fu_422_p2}};

assign tmp_13_fu_1075_p3 = {{ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257}, {ap_const_lv2_0}};

assign tmp_14_cast_fu_1082_p1 = tmp_13_fu_1075_p3;

assign tmp_14_fu_445_p2 = (ap_const_lv4_4 + tmp_6_cast_fu_442_p1);

assign tmp_15_cast_fu_451_p1 = tmp_14_fu_445_p2;

assign tmp_15_fu_1089_p2 = (tmp_14_cast_fu_1082_p1 + tmp_6_cast5_fu_1086_p1);

assign tmp_16_cast_fu_1095_p1 = tmp_15_fu_1089_p2;

assign tmp_1_fu_374_p3 = {{tmp_1_mid2_v_fu_366_p3}, {1'b0}};

assign tmp_1_mid2_v_fu_366_p3 = ((exitcond_fu_332_p2[0:0] === 1'b1) ? i_1_fu_326_p2 : i_phi_fu_279_p4);

assign tmp_3_fu_437_p2 = ((j_mid2_reg_1229 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_672_p1 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_15_fu_536_p3 : b_copy_0_3_11_fu_108);

assign tmp_4_fu_672_p2 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_14_fu_528_p3 : b_copy_0_3_8_fu_112);

assign tmp_4_fu_672_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_7_fu_512_p3 : b_copy_0_3_12_fu_116);

assign tmp_4_fu_672_p4 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_0_3_2_fu_488_p3 : b_copy_0_3_1_fu_120);

assign tmp_6_cast5_fu_1086_p1 = ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229;

assign tmp_6_cast_fu_442_p1 = j_mid2_reg_1229;

assign tmp_6_fu_388_p1 = j_mid2_fu_338_p3;

assign tmp_7_fu_989_p1 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_15_fu_863_p3 : b_copy_1_3_11_fu_124);

assign tmp_7_fu_989_p2 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_14_fu_856_p3 : b_copy_1_3_8_fu_128);

assign tmp_7_fu_989_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_7_fu_842_p3 : b_copy_1_3_12_fu_132);

assign tmp_7_fu_989_p4 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_1_3_2_fu_821_p3 : b_copy_1_3_1_fu_136);

assign tmp_8_fu_685_p1 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_15_fu_608_p3 : b_copy_2_3_11_fu_140);

assign tmp_8_fu_685_p2 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_14_fu_600_p3 : b_copy_2_3_8_fu_144);

assign tmp_8_fu_685_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_7_fu_584_p3 : b_copy_2_3_12_fu_148);

assign tmp_8_fu_685_p4 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_2_3_2_fu_560_p3 : b_copy_2_3_1_fu_152);

assign tmp_9_fu_1002_p1 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_15_fu_926_p3 : b_copy_3_3_11_fu_156);

assign tmp_9_fu_1002_p2 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_14_fu_919_p3 : b_copy_3_3_8_fu_160);

assign tmp_9_fu_1002_p3 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_7_fu_905_p3 : b_copy_3_3_12_fu_164);

assign tmp_9_fu_1002_p4 = ((tmp_mid2_reg_1237[0:0] === 1'b1) ? b_copy_3_3_2_fu_884_p3 : b_copy_3_3_1_fu_168);

assign tmp_fu_394_p1 = j_mid2_fu_338_p3[1:0];

assign tmp_mid1_fu_346_p2 = ((i_1_fu_326_p2 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_358_p3 = ((exitcond_fu_332_p2[0:0] === 1'b1) ? tmp_mid1_fu_346_p2 : tmp1_fu_352_p2);

always @ (posedge ap_clk) begin
    tmp_1_reg_1263[0] <= 1'b0;
end

endmodule //matmul_hw
