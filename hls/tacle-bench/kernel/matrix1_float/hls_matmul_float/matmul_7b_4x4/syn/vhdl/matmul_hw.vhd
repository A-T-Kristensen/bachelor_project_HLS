-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    b_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_EN_A : OUT STD_LOGIC;
    b_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_2_Clk_A : OUT STD_LOGIC;
    b_2_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=1902,HLS_SYN_LUT=3172}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_264 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_275 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_286 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_320_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1224 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_338_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_mid2_v_fu_366_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_374_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_reg_1263 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_394_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1288 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal tmp_3_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_0_load_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_672_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1367 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_685_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_698_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1377 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_load_3_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_786_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_fu_800_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_989_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1402 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1002_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1407 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1432 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_5_1_reg_1437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_2_reg_1442 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal tmp_5_3_reg_1447 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_268_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_279_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_290_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_427_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_cast_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_s_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_665_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_982_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_968_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_961_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_630_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_302_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_326_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_cast_fu_442_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_445_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_3_fu_462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_520_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_536_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_672_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_672_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_685_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_685_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_814_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_905_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_919_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_926_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_989_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_989_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1002_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1002_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1075_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_cast_fu_1082_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_cast5_fu_1086_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_1089_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component matmul_hw_fadd_32hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_mux_42_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32hbi_U1 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_297_p0,
        din1 => grp_fu_297_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_297_p2);

    matmul_hw_fadd_32hbi_U2 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_302_p0,
        din1 => grp_fu_302_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_302_p2);

    matmul_hw_fmul_32ibs_U3 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_306_p0,
        din1 => grp_fu_306_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_306_p2);

    matmul_hw_fmul_32ibs_U4 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_310_p0,
        din1 => grp_fu_310_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_310_p2);

    matmul_hw_mux_42_jbC_U5 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_4_fu_672_p1,
        din2 => tmp_4_fu_672_p2,
        din3 => tmp_4_fu_672_p3,
        din4 => tmp_4_fu_672_p4,
        din5 => tmp_reg_1288,
        dout => tmp_4_fu_672_p6);

    matmul_hw_mux_42_jbC_U6 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_8_fu_685_p1,
        din2 => tmp_8_fu_685_p2,
        din3 => tmp_8_fu_685_p3,
        din4 => tmp_8_fu_685_p4,
        din5 => tmp_reg_1288,
        dout => tmp_8_fu_685_p6);

    matmul_hw_mux_42_jbC_U7 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_989_p1,
        din2 => tmp_7_fu_989_p2,
        din3 => tmp_7_fu_989_p3,
        din4 => tmp_7_fu_989_p4,
        din5 => tmp_reg_1288,
        dout => tmp_7_fu_989_p6);

    matmul_hw_mux_42_jbC_U8 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1002_p1,
        din2 => tmp_9_fu_1002_p2,
        din3 => tmp_9_fu_1002_p3,
        din4 => tmp_9_fu_1002_p4,
        din5 => tmp_reg_1288,
        dout => tmp_9_fu_1002_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_314_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1220 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and not((exitcond_flatten_reg_1220 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_275 <= tmp_1_mid2_v_reg_1257;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_275 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_264 <= indvar_flatten_next_reg_1224;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_264 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_286 <= j_1_reg_1377;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_286 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                a_0_load_reg_1317 <= a_0_Dout_A;
                a_1_load_reg_1322 <= a_1_Dout_A;
                b_copy_0_3_11_fu_108 <= b_copy_0_3_18_fu_665_p3;
                b_copy_0_3_12_fu_116 <= b_copy_0_3_16_fu_651_p3;
                b_copy_0_3_1_fu_120 <= b_copy_0_3_3_fu_644_p3;
                b_copy_0_3_8_fu_112 <= b_copy_0_3_17_fu_658_p3;
                b_copy_2_3_11_fu_140 <= b_copy_2_3_18_fu_637_p3;
                b_copy_2_3_12_fu_148 <= b_copy_2_3_16_fu_623_p3;
                b_copy_2_3_1_fu_152 <= b_copy_2_3_3_fu_616_p3;
                b_copy_2_3_8_fu_144 <= b_copy_2_3_17_fu_630_p3;
                j_1_reg_1377 <= j_1_fu_698_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                a_row_load_1_reg_1392 <= a_row_load_1_fu_793_p3;
                a_row_load_3_reg_1382 <= a_row_load_3_fu_779_p3;
                tmp_7_reg_1402 <= tmp_7_fu_989_p6;
                tmp_9_reg_1407 <= tmp_9_fu_1002_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_7_fu_104 <= a_row_load_3_fu_779_p3;
                a_row_load_8_fu_100 <= a_row_load_2_fu_786_p3;
                a_row_load_9_fu_96 <= a_row_load_1_fu_793_p3;
                a_row_load_s_fu_92 <= a_row_load_fu_800_p3;
                b_copy_1_3_11_fu_124 <= b_copy_1_3_18_fu_982_p3;
                b_copy_1_3_12_fu_132 <= b_copy_1_3_16_fu_968_p3;
                b_copy_1_3_1_fu_136 <= b_copy_1_3_3_fu_961_p3;
                b_copy_1_3_8_fu_128 <= b_copy_1_3_17_fu_975_p3;
                b_copy_3_3_11_fu_156 <= b_copy_3_3_18_fu_954_p3;
                b_copy_3_3_12_fu_164 <= b_copy_3_3_16_fu_940_p3;
                b_copy_3_3_1_fu_168 <= b_copy_3_3_3_fu_933_p3;
                b_copy_3_3_8_fu_160 <= b_copy_3_3_17_fu_947_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter10_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter11_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220 <= exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229 <= j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257 <= tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422 <= tmp_2_1_reg_1422;
                ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427 <= tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter4_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422 <= ap_pipeline_reg_pp0_iter4_tmp_2_1_reg_1422;
                ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter5_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter6_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter7_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1427;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1220;
                ap_pipeline_reg_pp0_iter9_j_mid2_reg_1229 <= ap_pipeline_reg_pp0_iter8_j_mid2_reg_1229;
                ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1257 <= ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1257;
                ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1427 <= ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1427;
                exitcond_flatten_reg_1220 <= exitcond_flatten_fu_314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417 <= tmp_2_2_reg_1417;
                ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1417;
                ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter4_tmp_2_2_reg_1417;
                ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter5_tmp_2_2_reg_1417;
                ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417 <= ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1417;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_1224 <= indvar_flatten_next_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_314_p2 = ap_const_lv1_0))) then
                j_mid2_reg_1229 <= j_mid2_fu_338_p3;
                    tmp_1_reg_1263(3 downto 1) <= tmp_1_fu_374_p3(3 downto 1);
                tmp_mid2_reg_1237 <= tmp_mid2_fu_358_p3;
                tmp_reg_1288 <= tmp_fu_394_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                sel_tmp2_reg_1345 <= sel_tmp2_fu_470_p2;
                sel_tmp4_reg_1355 <= sel_tmp4_fu_483_p2;
                sel_tmp_reg_1337 <= sel_tmp_fu_457_p2;
                tmp_3_reg_1309 <= tmp_3_fu_437_p2;
                tmp_4_reg_1367 <= tmp_4_fu_672_p6;
                tmp_8_reg_1372 <= tmp_8_fu_685_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_314_p2 = ap_const_lv1_0))) then
                tmp_1_mid2_v_reg_1257 <= tmp_1_mid2_v_fu_366_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then
                tmp_2_1_reg_1422 <= grp_fu_306_p2;
                tmp_2_3_reg_1427 <= grp_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                tmp_2_2_reg_1417 <= grp_fu_310_p2;
                tmp_s_reg_1412 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                tmp_5_1_reg_1437 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                tmp_5_2_reg_1442 <= grp_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12) and (ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                tmp_5_3_reg_1447 <= grp_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1220 = ap_const_lv1_0))) then
                tmp_5_reg_1432 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1263(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_314_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter13) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter12)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_314_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_314_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_10_fu_382_p1, tmp_12_fu_427_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_12_fu_427_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_10_fu_382_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_10_fu_382_p1, tmp_12_fu_427_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_12_fu_427_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_10_fu_382_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= ap_const_lv32_0;
    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= ap_const_lv32_0;
    a_2_EN_A <= ap_const_logic_0;
    a_2_Rst_A <= ap_rst;
    a_2_WEN_A <= ap_const_lv4_0;
    a_row_load_1_fu_793_p3 <= 
        a_0_Dout_A when (tmp_3_reg_1309(0) = '1') else 
        a_row_load_9_fu_96;
    a_row_load_2_fu_786_p3 <= 
        a_1_load_reg_1322 when (tmp_3_reg_1309(0) = '1') else 
        a_row_load_8_fu_100;
    a_row_load_3_fu_779_p3 <= 
        a_1_Dout_A when (tmp_3_reg_1309(0) = '1') else 
        a_row_load_7_fu_104;
    a_row_load_fu_800_p3 <= 
        a_0_load_reg_1317 when (tmp_3_reg_1309(0) = '1') else 
        a_row_load_s_fu_92;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state29 <= ap_CS_fsm(3 downto 3);

    ap_done_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_6_fu_388_p1, tmp_15_cast_fu_451_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_15_cast_fu_451_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_6_fu_388_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, tmp_6_fu_388_p1, tmp_15_cast_fu_451_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_15_cast_fu_451_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_6_fu_388_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    b_2_Addr_A <= ap_const_lv32_0;
    b_2_Clk_A <= ap_clk;
    b_2_Din_A <= ap_const_lv32_0;
    b_2_EN_A <= ap_const_logic_0;
    b_2_Rst_A <= ap_rst;
    b_2_WEN_A <= ap_const_lv4_0;
    b_copy_0_3_14_fu_528_p3 <= 
        b_copy_0_3_8_fu_112 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_0_3_9_fu_520_p3;
    b_copy_0_3_15_fu_536_p3 <= 
        b_0_Dout_A when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_0_3_11_fu_108;
    b_copy_0_3_16_fu_651_p3 <= 
        b_copy_0_3_7_fu_512_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_12_fu_116;
    b_copy_0_3_17_fu_658_p3 <= 
        b_copy_0_3_14_fu_528_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_8_fu_112;
    b_copy_0_3_18_fu_665_p3 <= 
        b_copy_0_3_15_fu_536_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_11_fu_108;
    b_copy_0_3_2_fu_488_p3 <= 
        b_copy_0_3_1_fu_120 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_0_3_4_fu_475_p3;
    b_copy_0_3_3_fu_644_p3 <= 
        b_copy_0_3_2_fu_488_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_1_fu_120;
    b_copy_0_3_4_fu_475_p3 <= 
        b_copy_0_3_1_fu_120 when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_0_3_fu_462_p3;
    b_copy_0_3_5_fu_496_p3 <= 
        b_0_Dout_A when (sel_tmp_fu_457_p2(0) = '1') else 
        b_copy_0_3_12_fu_116;
    b_copy_0_3_6_fu_504_p3 <= 
        b_copy_0_3_12_fu_116 when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_0_3_5_fu_496_p3;
    b_copy_0_3_7_fu_512_p3 <= 
        b_copy_0_3_12_fu_116 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_0_3_6_fu_504_p3;
    b_copy_0_3_9_fu_520_p3 <= 
        b_0_Dout_A when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_0_3_8_fu_112;
    b_copy_0_3_fu_462_p3 <= 
        b_copy_0_3_1_fu_120 when (sel_tmp_fu_457_p2(0) = '1') else 
        b_0_Dout_A;
    b_copy_1_3_14_fu_856_p3 <= 
        b_copy_1_3_8_fu_128 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_1_3_9_fu_849_p3;
    b_copy_1_3_15_fu_863_p3 <= 
        b_0_Dout_A when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_1_3_11_fu_124;
    b_copy_1_3_16_fu_968_p3 <= 
        b_copy_1_3_7_fu_842_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_12_fu_132;
    b_copy_1_3_17_fu_975_p3 <= 
        b_copy_1_3_14_fu_856_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_8_fu_128;
    b_copy_1_3_18_fu_982_p3 <= 
        b_copy_1_3_15_fu_863_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_11_fu_124;
    b_copy_1_3_2_fu_821_p3 <= 
        b_copy_1_3_1_fu_136 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_1_3_4_fu_814_p3;
    b_copy_1_3_3_fu_961_p3 <= 
        b_copy_1_3_2_fu_821_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_1_fu_136;
    b_copy_1_3_4_fu_814_p3 <= 
        b_copy_1_3_1_fu_136 when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_1_3_fu_807_p3;
    b_copy_1_3_5_fu_828_p3 <= 
        b_0_Dout_A when (sel_tmp_reg_1337(0) = '1') else 
        b_copy_1_3_12_fu_132;
    b_copy_1_3_6_fu_835_p3 <= 
        b_copy_1_3_12_fu_132 when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_1_3_5_fu_828_p3;
    b_copy_1_3_7_fu_842_p3 <= 
        b_copy_1_3_12_fu_132 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_1_3_6_fu_835_p3;
    b_copy_1_3_9_fu_849_p3 <= 
        b_0_Dout_A when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_1_3_8_fu_128;
    b_copy_1_3_fu_807_p3 <= 
        b_copy_1_3_1_fu_136 when (sel_tmp_reg_1337(0) = '1') else 
        b_0_Dout_A;
    b_copy_2_3_14_fu_600_p3 <= 
        b_copy_2_3_8_fu_144 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_2_3_9_fu_592_p3;
    b_copy_2_3_15_fu_608_p3 <= 
        b_1_Dout_A when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_2_3_11_fu_140;
    b_copy_2_3_16_fu_623_p3 <= 
        b_copy_2_3_7_fu_584_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_12_fu_148;
    b_copy_2_3_17_fu_630_p3 <= 
        b_copy_2_3_14_fu_600_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_8_fu_144;
    b_copy_2_3_18_fu_637_p3 <= 
        b_copy_2_3_15_fu_608_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_11_fu_140;
    b_copy_2_3_2_fu_560_p3 <= 
        b_copy_2_3_1_fu_152 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_2_3_4_fu_552_p3;
    b_copy_2_3_3_fu_616_p3 <= 
        b_copy_2_3_2_fu_560_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_1_fu_152;
    b_copy_2_3_4_fu_552_p3 <= 
        b_copy_2_3_1_fu_152 when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_2_3_fu_544_p3;
    b_copy_2_3_5_fu_568_p3 <= 
        b_1_Dout_A when (sel_tmp_fu_457_p2(0) = '1') else 
        b_copy_2_3_12_fu_148;
    b_copy_2_3_6_fu_576_p3 <= 
        b_copy_2_3_12_fu_148 when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_2_3_5_fu_568_p3;
    b_copy_2_3_7_fu_584_p3 <= 
        b_copy_2_3_12_fu_148 when (sel_tmp4_fu_483_p2(0) = '1') else 
        b_copy_2_3_6_fu_576_p3;
    b_copy_2_3_9_fu_592_p3 <= 
        b_1_Dout_A when (sel_tmp2_fu_470_p2(0) = '1') else 
        b_copy_2_3_8_fu_144;
    b_copy_2_3_fu_544_p3 <= 
        b_copy_2_3_1_fu_152 when (sel_tmp_fu_457_p2(0) = '1') else 
        b_1_Dout_A;
    b_copy_3_3_14_fu_919_p3 <= 
        b_copy_3_3_8_fu_160 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_3_3_9_fu_912_p3;
    b_copy_3_3_15_fu_926_p3 <= 
        b_1_Dout_A when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_3_3_11_fu_156;
    b_copy_3_3_16_fu_940_p3 <= 
        b_copy_3_3_7_fu_905_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_12_fu_164;
    b_copy_3_3_17_fu_947_p3 <= 
        b_copy_3_3_14_fu_919_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_8_fu_160;
    b_copy_3_3_18_fu_954_p3 <= 
        b_copy_3_3_15_fu_926_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_11_fu_156;
    b_copy_3_3_2_fu_884_p3 <= 
        b_copy_3_3_1_fu_168 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_3_3_4_fu_877_p3;
    b_copy_3_3_3_fu_933_p3 <= 
        b_copy_3_3_2_fu_884_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_1_fu_168;
    b_copy_3_3_4_fu_877_p3 <= 
        b_copy_3_3_1_fu_168 when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_3_3_fu_870_p3;
    b_copy_3_3_5_fu_891_p3 <= 
        b_1_Dout_A when (sel_tmp_reg_1337(0) = '1') else 
        b_copy_3_3_12_fu_164;
    b_copy_3_3_6_fu_898_p3 <= 
        b_copy_3_3_12_fu_164 when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_3_3_5_fu_891_p3;
    b_copy_3_3_7_fu_905_p3 <= 
        b_copy_3_3_12_fu_164 when (sel_tmp4_reg_1355(0) = '1') else 
        b_copy_3_3_6_fu_898_p3;
    b_copy_3_3_9_fu_912_p3 <= 
        b_1_Dout_A when (sel_tmp2_reg_1345(0) = '1') else 
        b_copy_3_3_8_fu_160;
    b_copy_3_3_fu_870_p3 <= 
        b_copy_3_3_1_fu_168 when (sel_tmp_reg_1337(0) = '1') else 
        b_1_Dout_A;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_16_cast_fu_1095_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= tmp_5_3_reg_1447;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter13))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220, ap_enable_reg_pp0_iter13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter13)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_314_p2 <= "1" when (indvar_flatten_phi_fu_268_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_332_p2 <= "1" when (j_phi_fu_290_p4 = ap_const_lv3_4) else "0";

    grp_fu_297_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_s_reg_1412, ap_enable_reg_pp0_iter3, tmp_5_reg_1432, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_297_p0 <= tmp_5_reg_1432;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_297_p0 <= tmp_s_reg_1412;
        else 
            grp_fu_297_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_297_p1 <= ap_pipeline_reg_pp0_iter5_tmp_2_1_reg_1422;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_297_p1 <= ap_const_lv32_0;
        else 
            grp_fu_297_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_302_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_5_1_reg_1437, tmp_5_2_reg_1442, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_302_p0 <= tmp_5_2_reg_1442;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_302_p0 <= tmp_5_1_reg_1437;
        else 
            grp_fu_302_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_302_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417, ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            grp_fu_302_p1 <= ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1427;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_302_p1 <= ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1417;
        else 
            grp_fu_302_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_306_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, a_row_load_1_reg_1392, a_row_load_fu_800_p3, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_306_p0 <= a_row_load_1_reg_1392;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_306_p0 <= a_row_load_fu_800_p3;
            else 
                grp_fu_306_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_306_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_306_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_4_reg_1367, tmp_7_reg_1402, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_306_p1 <= tmp_7_reg_1402;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_306_p1 <= tmp_4_reg_1367;
            else 
                grp_fu_306_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_306_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_310_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, a_row_load_3_reg_1382, a_row_load_2_fu_786_p3, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_310_p0 <= a_row_load_3_reg_1382;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_310_p0 <= a_row_load_2_fu_786_p3;
            else 
                grp_fu_310_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_310_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_310_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_8_reg_1372, tmp_9_reg_1407, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                grp_fu_310_p1 <= tmp_9_reg_1407;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                grp_fu_310_p1 <= tmp_8_reg_1372;
            else 
                grp_fu_310_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_310_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_326_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_279_p4));

    i_phi_fu_279_p4_assign_proc : process(i_reg_275, exitcond_flatten_reg_1220, ap_CS_fsm_pp0_stage0, tmp_1_mid2_v_reg_1257, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_279_p4 <= tmp_1_mid2_v_reg_1257;
        else 
            i_phi_fu_279_p4 <= i_reg_275;
        end if; 
    end process;

    indvar_flatten_next_fu_320_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_268_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_268_p4_assign_proc : process(indvar_flatten_reg_264, exitcond_flatten_reg_1220, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1224, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_268_p4 <= indvar_flatten_next_reg_1224;
        else 
            indvar_flatten_phi_fu_268_p4 <= indvar_flatten_reg_264;
        end if; 
    end process;

    j_1_fu_698_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_1229));
    j_mid2_fu_338_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_332_p2(0) = '1') else 
        j_phi_fu_290_p4;

    j_phi_fu_290_p4_assign_proc : process(j_reg_286, exitcond_flatten_reg_1220, ap_CS_fsm_pp0_stage0, j_1_reg_1377, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1220 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_290_p4 <= j_1_reg_1377;
        else 
            j_phi_fu_290_p4 <= j_reg_286;
        end if; 
    end process;

    sel_tmp2_fu_470_p2 <= "1" when (tmp_reg_1288 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_483_p2 <= "1" when (tmp_reg_1288 = ap_const_lv2_0) else "0";
    sel_tmp_fu_457_p2 <= "1" when (tmp_reg_1288 = ap_const_lv2_2) else "0";
    tmp1_fu_352_p2 <= "1" when (i_phi_fu_279_p4 = ap_const_lv3_0) else "0";
    tmp_10_fu_382_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_374_p3),64));
    tmp_11_fu_422_p2 <= (tmp_1_reg_1263 or ap_const_lv4_1);
    tmp_12_fu_427_p3 <= (ap_const_lv60_0 & tmp_11_fu_422_p2);
    tmp_13_fu_1075_p3 <= (ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1257 & ap_const_lv2_0);
    tmp_14_cast_fu_1082_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_1075_p3),6));
    tmp_14_fu_445_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_6_cast_fu_442_p1));
    tmp_15_cast_fu_451_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_445_p2),64));
    tmp_15_fu_1089_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_1082_p1) + unsigned(tmp_6_cast5_fu_1086_p1));
    tmp_16_cast_fu_1095_p1 <= std_logic_vector(resize(unsigned(tmp_15_fu_1089_p2),64));
    tmp_1_fu_374_p3 <= (tmp_1_mid2_v_fu_366_p3 & ap_const_lv1_0);
    tmp_1_mid2_v_fu_366_p3 <= 
        i_1_fu_326_p2 when (exitcond_fu_332_p2(0) = '1') else 
        i_phi_fu_279_p4;
    tmp_3_fu_437_p2 <= "1" when (j_mid2_reg_1229 = ap_const_lv3_0) else "0";
    tmp_4_fu_672_p1 <= 
        b_copy_0_3_15_fu_536_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_11_fu_108;
    tmp_4_fu_672_p2 <= 
        b_copy_0_3_14_fu_528_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_8_fu_112;
    tmp_4_fu_672_p3 <= 
        b_copy_0_3_7_fu_512_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_12_fu_116;
    tmp_4_fu_672_p4 <= 
        b_copy_0_3_2_fu_488_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_0_3_1_fu_120;
    tmp_6_cast5_fu_1086_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter12_j_mid2_reg_1229),6));
    tmp_6_cast_fu_442_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1229),4));
    tmp_6_fu_388_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_338_p3),64));
    tmp_7_fu_989_p1 <= 
        b_copy_1_3_15_fu_863_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_11_fu_124;
    tmp_7_fu_989_p2 <= 
        b_copy_1_3_14_fu_856_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_8_fu_128;
    tmp_7_fu_989_p3 <= 
        b_copy_1_3_7_fu_842_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_12_fu_132;
    tmp_7_fu_989_p4 <= 
        b_copy_1_3_2_fu_821_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_1_3_1_fu_136;
    tmp_8_fu_685_p1 <= 
        b_copy_2_3_15_fu_608_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_11_fu_140;
    tmp_8_fu_685_p2 <= 
        b_copy_2_3_14_fu_600_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_8_fu_144;
    tmp_8_fu_685_p3 <= 
        b_copy_2_3_7_fu_584_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_12_fu_148;
    tmp_8_fu_685_p4 <= 
        b_copy_2_3_2_fu_560_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_2_3_1_fu_152;
    tmp_9_fu_1002_p1 <= 
        b_copy_3_3_15_fu_926_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_11_fu_156;
    tmp_9_fu_1002_p2 <= 
        b_copy_3_3_14_fu_919_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_8_fu_160;
    tmp_9_fu_1002_p3 <= 
        b_copy_3_3_7_fu_905_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_12_fu_164;
    tmp_9_fu_1002_p4 <= 
        b_copy_3_3_2_fu_884_p3 when (tmp_mid2_reg_1237(0) = '1') else 
        b_copy_3_3_1_fu_168;
    tmp_fu_394_p1 <= j_mid2_fu_338_p3(2 - 1 downto 0);
    tmp_mid1_fu_346_p2 <= "1" when (i_1_fu_326_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_358_p3 <= 
        tmp_mid1_fu_346_p2 when (exitcond_fu_332_p2(0) = '1') else 
        tmp1_fu_352_p2;
end behav;
