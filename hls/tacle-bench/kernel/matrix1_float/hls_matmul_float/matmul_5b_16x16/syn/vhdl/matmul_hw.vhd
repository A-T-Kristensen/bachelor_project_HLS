-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.494000,HLS_SYN_LAT=2127,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=1795,HLS_SYN_LUT=1834}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv59_1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv59_2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv59_3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_392 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_403 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_414 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_790 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_518_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next_reg_794 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_mid2_fu_536_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter5_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter6_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter7_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter8_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter9_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter10_j_mid2_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_fu_544_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_mid2_v_reg_811 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_552_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_817 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast3_fu_641_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_cast3_reg_898 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_8_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_1_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_9_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_2_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_2_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_s_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal tmp_6_3_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_3_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_10_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_760_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_1053 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_4_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter2_tmp_6_4_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_4_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_6_11_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1088 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_5_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_5_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_5_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_6_12_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_6_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_6_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_6_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_6_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_6_13_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_7_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_7_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_7_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_7_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_6_14_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1123 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_1_3_reg_1133 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_1_4_reg_1138 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_5_reg_1143 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_1_6_reg_1148 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_7_reg_1153 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_1_8_reg_1158 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_s_reg_1163 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_1_10_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_1_11_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_12_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_1_13_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_phi_fu_396_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_phi_fu_407_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_418_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_577_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_607_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_617_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_631_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_cast_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_661_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_671_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_685_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_711_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_721_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_735_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_425_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_425_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_524_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_572_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast_fu_587_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_fu_590_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_602_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_626_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_644_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_680_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_695_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_fu_706_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_730_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast4_fu_745_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_748_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_765_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast5_fu_776_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_cast_fu_772_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_779_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);

    component matmul_hw_fadd_32dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32dEe_U1 : component matmul_hw_fadd_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_425_p0,
        din1 => grp_fu_425_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_425_p2);

    matmul_hw_fadd_32dEe_U2 : component matmul_hw_fadd_32dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_430_p0,
        din1 => grp_fu_430_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_430_p2);

    matmul_hw_fmul_32eOg_U3 : component matmul_hw_fmul_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_0_Dout_A,
        din1 => b_0_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_434_p2);

    matmul_hw_fmul_32eOg_U4 : component matmul_hw_fmul_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_1_Dout_A,
        din1 => b_1_Dout_A,
        ce => ap_const_logic_1,
        dout => grp_fu_440_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_512_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((exitcond_flatten_reg_790 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_403 <= tmp_mid2_v_reg_811;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_403 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_392 <= indvar_flatten_next_reg_794;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_392 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_414 <= j_1_reg_1053;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_414 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter10_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter9_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter10_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter9_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790 <= exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_799 <= j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_811 <= tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1073 <= tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter2_tmp_6_4_reg_1058 <= tmp_6_4_reg_1058;
                ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter3_tmp_6_4_reg_1058 <= ap_pipeline_reg_pp0_iter2_tmp_6_4_reg_1058;
                ap_pipeline_reg_pp0_iter3_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter2_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter4_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter3_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter5_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter4_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter5_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter5_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter4_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter6_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter5_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter6_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter5_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter6_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter5_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter7_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter6_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter7_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter6_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter7_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter6_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter8_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter7_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter8_tmp_6_11_reg_1073 <= ap_pipeline_reg_pp0_iter7_tmp_6_11_reg_1073;
                ap_pipeline_reg_pp0_iter8_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter7_tmp_mid2_v_reg_811;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_790 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_790;
                ap_pipeline_reg_pp0_iter9_j_mid2_reg_799 <= ap_pipeline_reg_pp0_iter8_j_mid2_reg_799;
                ap_pipeline_reg_pp0_iter9_tmp_mid2_v_reg_811 <= ap_pipeline_reg_pp0_iter8_tmp_mid2_v_reg_811;
                exitcond_flatten_reg_790 <= exitcond_flatten_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1038 <= tmp_6_10_reg_1038;
                ap_pipeline_reg_pp0_iter1_tmp_6_3_reg_1023 <= tmp_6_3_reg_1023;
                ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1038 <= ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1038;
                ap_pipeline_reg_pp0_iter3_tmp_6_10_reg_1038 <= ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1038;
                ap_pipeline_reg_pp0_iter4_tmp_6_10_reg_1038 <= ap_pipeline_reg_pp0_iter3_tmp_6_10_reg_1038;
                ap_pipeline_reg_pp0_iter5_tmp_6_10_reg_1038 <= ap_pipeline_reg_pp0_iter4_tmp_6_10_reg_1038;
                ap_pipeline_reg_pp0_iter6_tmp_6_10_reg_1038 <= ap_pipeline_reg_pp0_iter5_tmp_6_10_reg_1038;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_2_reg_993 <= tmp_6_2_reg_993;
                ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_998 <= tmp_6_s_reg_998;
                ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_998 <= ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_998;
                ap_pipeline_reg_pp0_iter3_tmp_6_s_reg_998 <= ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_998;
                ap_pipeline_reg_pp0_iter4_tmp_6_s_reg_998 <= ap_pipeline_reg_pp0_iter3_tmp_6_s_reg_998;
                ap_pipeline_reg_pp0_iter5_tmp_6_s_reg_998 <= ap_pipeline_reg_pp0_iter4_tmp_6_s_reg_998;
                ap_pipeline_reg_pp0_iter6_tmp_6_s_reg_998 <= ap_pipeline_reg_pp0_iter5_tmp_6_s_reg_998;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_938 <= tmp_6_8_reg_938;
                ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_938 <= ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_938;
                ap_pipeline_reg_pp0_iter3_tmp_6_8_reg_938 <= ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_938;
                ap_pipeline_reg_pp0_iter4_tmp_6_8_reg_938 <= ap_pipeline_reg_pp0_iter3_tmp_6_8_reg_938;
                ap_pipeline_reg_pp0_iter5_tmp_6_8_reg_938 <= ap_pipeline_reg_pp0_iter4_tmp_6_8_reg_938;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_968 <= tmp_6_9_reg_968;
                ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_968 <= ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_968;
                ap_pipeline_reg_pp0_iter3_tmp_6_9_reg_968 <= ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_968;
                ap_pipeline_reg_pp0_iter4_tmp_6_9_reg_968 <= ap_pipeline_reg_pp0_iter3_tmp_6_9_reg_968;
                ap_pipeline_reg_pp0_iter5_tmp_6_9_reg_968 <= ap_pipeline_reg_pp0_iter4_tmp_6_9_reg_968;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1098 <= tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter2_tmp_6_5_reg_1093 <= tmp_6_5_reg_1093;
                ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter3_tmp_6_5_reg_1093 <= ap_pipeline_reg_pp0_iter2_tmp_6_5_reg_1093;
                ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter5_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter6_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter5_tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter7_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter6_tmp_6_12_reg_1098;
                ap_pipeline_reg_pp0_iter8_tmp_6_12_reg_1098 <= ap_pipeline_reg_pp0_iter7_tmp_6_12_reg_1098;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1108 <= tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter2_tmp_6_6_reg_1103 <= tmp_6_6_reg_1103;
                ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter3_tmp_6_6_reg_1103 <= ap_pipeline_reg_pp0_iter2_tmp_6_6_reg_1103;
                ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter4_tmp_6_6_reg_1103 <= ap_pipeline_reg_pp0_iter3_tmp_6_6_reg_1103;
                ap_pipeline_reg_pp0_iter5_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter6_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter5_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter7_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter6_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter8_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter7_tmp_6_13_reg_1108;
                ap_pipeline_reg_pp0_iter9_tmp_6_13_reg_1108 <= ap_pipeline_reg_pp0_iter8_tmp_6_13_reg_1108;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1118 <= tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter2_tmp_6_7_reg_1113 <= tmp_6_7_reg_1113;
                ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter3_tmp_6_7_reg_1113 <= ap_pipeline_reg_pp0_iter2_tmp_6_7_reg_1113;
                ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter4_tmp_6_7_reg_1113 <= ap_pipeline_reg_pp0_iter3_tmp_6_7_reg_1113;
                ap_pipeline_reg_pp0_iter5_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter6_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter5_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter7_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter6_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter8_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter7_tmp_6_14_reg_1118;
                ap_pipeline_reg_pp0_iter9_tmp_6_14_reg_1118 <= ap_pipeline_reg_pp0_iter8_tmp_6_14_reg_1118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_794 <= indvar_flatten_next_fu_518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then
                j_1_reg_1053 <= j_1_fu_760_p2;
                tmp_6_10_reg_1038 <= grp_fu_440_p2;
                tmp_6_3_reg_1023 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_512_p2))) then
                j_mid2_reg_799 <= j_mid2_fu_536_p3;
                    tmp_reg_817(7 downto 3) <= tmp_fu_552_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_790)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_790)))) then
                reg_506 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_790) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then
                tmp_1_10_reg_1168 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_790))) then
                tmp_1_11_reg_1173 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_790))) then
                tmp_1_12_reg_1178 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_790))) then
                tmp_1_13_reg_1183 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790))) then
                tmp_1_1_reg_1123 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_790))) then
                tmp_1_2_reg_1128 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_790) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then
                tmp_1_3_reg_1133 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_790))) then
                tmp_1_4_reg_1138 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_790))) then
                tmp_1_5_reg_1143 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_790))) then
                tmp_1_6_reg_1148 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_790))) then
                tmp_1_7_reg_1153 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_790))) then
                tmp_1_8_reg_1158 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_790))) then
                tmp_1_s_reg_1163 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    tmp_2_cast3_reg_898(4 downto 0) <= tmp_2_cast3_fu_641_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                tmp_6_11_reg_1073 <= grp_fu_440_p2;
                tmp_6_4_reg_1058 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790))) then
                tmp_6_12_reg_1098 <= grp_fu_440_p2;
                tmp_6_5_reg_1093 <= grp_fu_434_p2;
                tmp_s_reg_1088 <= grp_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790))) then
                tmp_6_13_reg_1108 <= grp_fu_440_p2;
                tmp_6_6_reg_1103 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_790))) then
                tmp_6_14_reg_1118 <= grp_fu_440_p2;
                tmp_6_7_reg_1113 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_6_1_reg_963 <= grp_fu_434_p2;
                tmp_6_9_reg_968 <= grp_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_6_2_reg_993 <= grp_fu_434_p2;
                tmp_6_s_reg_998 <= grp_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_6_8_reg_938 <= grp_fu_440_p2;
                tmp_6_reg_933 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_512_p2))) then
                tmp_mid2_v_reg_811 <= tmp_mid2_v_fu_544_p3;
            end if;
        end if;
    end process;
    tmp_reg_817(2 downto 0) <= "000";
    tmp_2_cast3_reg_898(6 downto 5) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter10, exitcond_flatten_fu_512_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_512_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter9))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, tmp_3_fu_560_p1, tmp_5_fu_577_p3, tmp_8_fu_607_p3, tmp_10_fu_631_p3, tmp_12_fu_661_p3, tmp_14_fu_685_p3, tmp_16_fu_711_p3, tmp_18_fu_735_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_18_fu_735_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_16_fu_711_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_14_fu_685_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_12_fu_661_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_10_fu_631_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_8_fu_607_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_5_fu_577_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_560_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, tmp_3_fu_560_p1, tmp_5_fu_577_p3, tmp_8_fu_607_p3, tmp_10_fu_631_p3, tmp_12_fu_661_p3, tmp_14_fu_685_p3, tmp_16_fu_711_p3, tmp_18_fu_735_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_18_fu_735_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_16_fu_711_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_14_fu_685_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_12_fu_661_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_10_fu_631_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_8_fu_607_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_5_fu_577_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_3_fu_560_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state88 <= ap_CS_fsm(9 downto 9);

    ap_done_assign_proc : process(ap_CS_fsm_state88)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state88))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state88)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state88))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, tmp_2_fu_566_p1, tmp_21_cast_fu_596_p1, tmp_21_fu_617_p3, tmp_23_cast_fu_650_p1, tmp_23_fu_671_p3, tmp_25_cast_fu_700_p1, tmp_25_fu_721_p3, tmp_27_cast_fu_754_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_0_Addr_A_orig <= tmp_27_cast_fu_754_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_0_Addr_A_orig <= tmp_25_fu_721_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_0_Addr_A_orig <= tmp_25_cast_fu_700_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_0_Addr_A_orig <= tmp_23_fu_671_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_0_Addr_A_orig <= tmp_23_cast_fu_650_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_0_Addr_A_orig <= tmp_21_fu_617_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_21_cast_fu_596_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_2_fu_566_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, tmp_2_fu_566_p1, tmp_21_cast_fu_596_p1, tmp_21_fu_617_p3, tmp_23_cast_fu_650_p1, tmp_23_fu_671_p3, tmp_25_cast_fu_700_p1, tmp_25_fu_721_p3, tmp_27_cast_fu_754_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_1_Addr_A_orig <= tmp_27_cast_fu_754_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_Addr_A_orig <= tmp_25_fu_721_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_Addr_A_orig <= tmp_25_cast_fu_700_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_Addr_A_orig <= tmp_23_fu_671_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_Addr_A_orig <= tmp_23_cast_fu_650_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_Addr_A_orig <= tmp_21_fu_617_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_21_cast_fu_596_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_2_fu_566_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_28_cast_fu_785_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= reg_506;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter10, ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_790)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_790)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_512_p2 <= "1" when (indvar_flatten_phi_fu_396_p4 = ap_const_lv9_100) else "0";
    exitcond_fu_530_p2 <= "1" when (j_phi_fu_418_p4 = ap_const_lv5_10) else "0";

    grp_fu_425_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_6_reg_933, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, tmp_s_reg_1088, tmp_1_1_reg_1123, tmp_1_2_reg_1128, ap_enable_reg_pp0_iter2, tmp_1_3_reg_1133, ap_enable_reg_pp0_iter3, tmp_1_4_reg_1138, tmp_1_5_reg_1143, ap_enable_reg_pp0_iter4, tmp_1_6_reg_1148, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_425_p0 <= tmp_1_6_reg_1148;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_425_p0 <= tmp_1_5_reg_1143;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_425_p0 <= tmp_1_4_reg_1138;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_425_p0 <= tmp_1_3_reg_1133;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_425_p0 <= tmp_1_2_reg_1128;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_425_p0 <= tmp_1_1_reg_1123;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_425_p0 <= tmp_s_reg_1088;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_425_p0 <= tmp_6_reg_933;
        else 
            grp_fu_425_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_425_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, tmp_6_1_reg_963, ap_pipeline_reg_pp0_iter1_tmp_6_2_reg_993, ap_CS_fsm_pp0_stage7, ap_pipeline_reg_pp0_iter1_tmp_6_3_reg_1023, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter3_tmp_6_4_reg_1058, ap_pipeline_reg_pp0_iter3_tmp_6_5_reg_1093, ap_pipeline_reg_pp0_iter4_tmp_6_6_reg_1103, ap_pipeline_reg_pp0_iter4_tmp_6_7_reg_1113, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_7_reg_1113;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter4_tmp_6_6_reg_1103;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_5_reg_1093;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter3_tmp_6_4_reg_1058;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_3_reg_1023;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_425_p1 <= ap_pipeline_reg_pp0_iter1_tmp_6_2_reg_993;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_425_p1 <= tmp_6_1_reg_963;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_425_p1 <= ap_const_lv32_0;
        else 
            grp_fu_425_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_430_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, reg_506, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, tmp_1_7_reg_1153, ap_enable_reg_pp0_iter5, tmp_1_8_reg_1158, tmp_1_s_reg_1163, ap_enable_reg_pp0_iter7, tmp_1_10_reg_1168, ap_enable_reg_pp0_iter8, tmp_1_11_reg_1173, tmp_1_12_reg_1178, ap_enable_reg_pp0_iter9, tmp_1_13_reg_1183)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_p0 <= tmp_1_13_reg_1183;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_430_p0 <= tmp_1_12_reg_1178;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_430_p0 <= tmp_1_11_reg_1173;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_430_p0 <= tmp_1_10_reg_1168;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_430_p0 <= tmp_1_s_reg_1163;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_430_p0 <= reg_506;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_430_p0 <= tmp_1_8_reg_1158;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_430_p0 <= tmp_1_7_reg_1153;
        else 
            grp_fu_430_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_430_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage0, ap_pipeline_reg_pp0_iter5_tmp_6_8_reg_938, ap_pipeline_reg_pp0_iter5_tmp_6_9_reg_968, ap_pipeline_reg_pp0_iter6_tmp_6_s_reg_998, ap_CS_fsm_pp0_stage7, ap_pipeline_reg_pp0_iter6_tmp_6_10_reg_1038, ap_pipeline_reg_pp0_iter8_tmp_6_11_reg_1073, ap_pipeline_reg_pp0_iter8_tmp_6_12_reg_1098, ap_pipeline_reg_pp0_iter9_tmp_6_13_reg_1108, ap_pipeline_reg_pp0_iter9_tmp_6_14_reg_1118, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter9_tmp_6_14_reg_1118;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter9))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter9_tmp_6_13_reg_1108;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter8_tmp_6_12_reg_1098;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter8))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter8_tmp_6_11_reg_1073;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter6_tmp_6_10_reg_1038;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter6_tmp_6_s_reg_998;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter5_tmp_6_9_reg_968;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_430_p1 <= ap_pipeline_reg_pp0_iter5_tmp_6_8_reg_938;
        else 
            grp_fu_430_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_524_p2 <= std_logic_vector(unsigned(i_phi_fu_407_p4) + unsigned(ap_const_lv5_1));

    i_phi_fu_407_p4_assign_proc : process(i_reg_403, exitcond_flatten_reg_790, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_811, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_407_p4 <= tmp_mid2_v_reg_811;
        else 
            i_phi_fu_407_p4 <= i_reg_403;
        end if; 
    end process;

    indvar_flatten_next_fu_518_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_396_p4) + unsigned(ap_const_lv9_1));

    indvar_flatten_phi_fu_396_p4_assign_proc : process(indvar_flatten_reg_392, exitcond_flatten_reg_790, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_794, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_396_p4 <= indvar_flatten_next_reg_794;
        else 
            indvar_flatten_phi_fu_396_p4 <= indvar_flatten_reg_392;
        end if; 
    end process;

    j_1_fu_760_p2 <= std_logic_vector(unsigned(j_mid2_reg_799) + unsigned(ap_const_lv5_1));
    j_mid2_fu_536_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_530_p2(0) = '1') else 
        j_phi_fu_418_p4;

    j_phi_fu_418_p4_assign_proc : process(j_reg_414, exitcond_flatten_reg_790, ap_CS_fsm_pp0_stage0, j_1_reg_1053, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_790 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_418_p4 <= j_1_reg_1053;
        else 
            j_phi_fu_418_p4 <= j_reg_414;
        end if; 
    end process;

    tmp_10_fu_631_p3 <= (ap_const_lv56_0 & tmp_9_fu_626_p2);
    tmp_11_fu_656_p2 <= (tmp_reg_817 or ap_const_lv8_4);
    tmp_12_fu_661_p3 <= (ap_const_lv56_0 & tmp_11_fu_656_p2);
    tmp_13_fu_680_p2 <= (tmp_reg_817 or ap_const_lv8_5);
    tmp_14_fu_685_p3 <= (ap_const_lv56_0 & tmp_13_fu_680_p2);
    tmp_15_fu_706_p2 <= (tmp_reg_817 or ap_const_lv8_6);
    tmp_16_fu_711_p3 <= (ap_const_lv56_0 & tmp_15_fu_706_p2);
    tmp_17_fu_730_p2 <= (tmp_reg_817 or ap_const_lv8_7);
    tmp_18_fu_735_p3 <= (ap_const_lv56_0 & tmp_17_fu_730_p2);
    tmp_19_fu_765_p3 <= (ap_pipeline_reg_pp0_iter10_tmp_mid2_v_reg_811 & ap_const_lv4_0);
    tmp_20_cast_fu_772_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_765_p3),10));
    tmp_20_fu_590_p2 <= std_logic_vector(unsigned(tmp_2_cast_fu_587_p1) + unsigned(ap_const_lv6_10));
    tmp_21_cast_fu_596_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_590_p2),64));
    tmp_21_fu_617_p3 <= (ap_const_lv59_1 & j_mid2_reg_799);
    tmp_22_fu_644_p2 <= std_logic_vector(unsigned(tmp_2_cast3_fu_641_p1) + unsigned(ap_const_lv7_30));
    tmp_23_cast_fu_650_p1 <= std_logic_vector(resize(unsigned(tmp_22_fu_644_p2),64));
    tmp_23_fu_671_p3 <= (ap_const_lv59_2 & j_mid2_reg_799);
    tmp_24_fu_695_p2 <= std_logic_vector(unsigned(tmp_2_cast3_reg_898) + unsigned(ap_const_lv7_50));
    tmp_25_cast_fu_700_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_695_p2),64));
    tmp_25_fu_721_p3 <= (ap_const_lv59_3 & j_mid2_reg_799);
    tmp_26_fu_748_p2 <= std_logic_vector(unsigned(tmp_2_cast4_fu_745_p1) + unsigned(ap_const_lv8_70));
    tmp_27_cast_fu_754_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_748_p2),64));
    tmp_27_fu_779_p2 <= std_logic_vector(unsigned(tmp_2_cast5_fu_776_p1) + unsigned(tmp_20_cast_fu_772_p1));
    tmp_28_cast_fu_785_p1 <= std_logic_vector(resize(unsigned(tmp_27_fu_779_p2),64));
    tmp_2_cast3_fu_641_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_799),7));
    tmp_2_cast4_fu_745_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_799),8));
    tmp_2_cast5_fu_776_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter10_j_mid2_reg_799),10));
    tmp_2_cast_fu_587_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_799),6));
    tmp_2_fu_566_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_536_p3),64));
    tmp_3_fu_560_p1 <= std_logic_vector(resize(unsigned(tmp_fu_552_p3),64));
    tmp_4_fu_572_p2 <= (tmp_reg_817 or ap_const_lv8_1);
    tmp_5_fu_577_p3 <= (ap_const_lv56_0 & tmp_4_fu_572_p2);
    tmp_7_fu_602_p2 <= (tmp_reg_817 or ap_const_lv8_2);
    tmp_8_fu_607_p3 <= (ap_const_lv56_0 & tmp_7_fu_602_p2);
    tmp_9_fu_626_p2 <= (tmp_reg_817 or ap_const_lv8_3);
    tmp_fu_552_p3 <= (tmp_mid2_v_fu_544_p3 & ap_const_lv3_0);
    tmp_mid2_v_fu_544_p3 <= 
        i_1_fu_524_p2 when (exitcond_fu_530_p2(0) = '1') else 
        i_phi_fu_407_p4;
end behav;
