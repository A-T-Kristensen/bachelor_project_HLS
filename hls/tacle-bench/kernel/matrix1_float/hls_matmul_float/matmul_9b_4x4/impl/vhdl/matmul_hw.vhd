-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    a_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_EN_A : OUT STD_LOGIC;
    a_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_3_Clk_A : OUT STD_LOGIC;
    a_3_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    b_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_EN_A : OUT STD_LOGIC;
    b_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_2_Clk_A : OUT STD_LOGIC;
    b_2_Rst_A : OUT STD_LOGIC;
    b_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_3_EN_A : OUT STD_LOGIC;
    b_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_3_Clk_A : OUT STD_LOGIC;
    b_3_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=43,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=20,HLS_SYN_FF=2595,HLS_SYN_LUT=3462}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_272 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_283 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_294 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter18_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter19_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter20_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter21_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter22_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter23_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter24_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter25_exitcond_flatten_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_344_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_mid2_fu_362_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter5_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter6_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter7_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter8_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter9_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter10_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter11_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter12_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter13_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter14_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter15_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter16_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter17_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter18_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter19_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter20_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter21_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter22_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter23_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter24_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter25_j_mid2_reg_1242 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1248 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_mid2_v_fu_390_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter18_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter19_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter20_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter21_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter22_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter23_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter24_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter25_tmp_1_mid2_v_reg_1268 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_414_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1299 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_fu_418_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_load_3_fu_489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_reg_1330 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_reg_1335 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_reg_1340 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_fu_513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_reg_1345 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_936_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1350 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_949_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1355 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_962_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1360 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_975_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1365 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1370 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_2_1_reg_1375 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_2_2_reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter11_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter18_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter19_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter20_tmp_2_3_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1390 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_1_reg_1395 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_2_reg_1400 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_3_reg_1405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal i_phi_fu_287_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid2_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_cast_fu_1108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_s_fu_84 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_922_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_350_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_0_3_fu_526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_0_3_4_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_640_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_656_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_fu_680_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_728_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_752_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_760_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_800_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_768_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_792_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_808_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_696_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_720_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_648_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_664_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_936_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_936_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_936_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_949_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_949_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_962_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_962_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_975_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1088_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_cast_fu_1095_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_cast_fu_1099_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_1102_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component matmul_hw_fadd_32hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_mux_42_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32hbi_U1 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_reg_1370,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_305_p2);

    matmul_hw_fadd_32hbi_U2 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_reg_1390,
        din1 => ap_pipeline_reg_pp0_iter10_tmp_2_1_reg_1375,
        ce => ap_const_logic_1,
        dout => grp_fu_310_p2);

    matmul_hw_fadd_32hbi_U3 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_1_reg_1395,
        din1 => ap_pipeline_reg_pp0_iter15_tmp_2_2_reg_1380,
        ce => ap_const_logic_1,
        dout => grp_fu_314_p2);

    matmul_hw_fadd_32hbi_U4 : component matmul_hw_fadd_32hbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_2_reg_1400,
        din1 => ap_pipeline_reg_pp0_iter20_tmp_2_3_reg_1385,
        ce => ap_const_logic_1,
        dout => grp_fu_318_p2);

    matmul_hw_fmul_32ibs_U5 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_load_reg_1345,
        din1 => tmp_4_reg_1350,
        ce => ap_const_logic_1,
        dout => grp_fu_322_p2);

    matmul_hw_fmul_32ibs_U6 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_load_1_reg_1340,
        din1 => tmp_7_reg_1355,
        ce => ap_const_logic_1,
        dout => grp_fu_326_p2);

    matmul_hw_fmul_32ibs_U7 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_load_2_reg_1335,
        din1 => tmp_8_reg_1360,
        ce => ap_const_logic_1,
        dout => grp_fu_330_p2);

    matmul_hw_fmul_32ibs_U8 : component matmul_hw_fmul_32ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => a_row_load_3_reg_1330,
        din1 => tmp_9_reg_1365,
        ce => ap_const_logic_1,
        dout => grp_fu_334_p2);

    matmul_hw_mux_42_jbC_U9 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_4_fu_936_p1,
        din2 => tmp_4_fu_936_p2,
        din3 => tmp_4_fu_936_p3,
        din4 => tmp_4_fu_936_p4,
        din5 => tmp_reg_1299,
        dout => tmp_4_fu_936_p6);

    matmul_hw_mux_42_jbC_U10 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_949_p1,
        din2 => tmp_7_fu_949_p2,
        din3 => tmp_7_fu_949_p3,
        din4 => tmp_7_fu_949_p4,
        din5 => tmp_reg_1299,
        dout => tmp_7_fu_949_p6);

    matmul_hw_mux_42_jbC_U11 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_8_fu_962_p1,
        din2 => tmp_8_fu_962_p2,
        din3 => tmp_8_fu_962_p3,
        din4 => tmp_8_fu_962_p4,
        din5 => tmp_reg_1299,
        dout => tmp_8_fu_962_p6);

    matmul_hw_mux_42_jbC_U12 : component matmul_hw_mux_42_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_975_p1,
        din2 => tmp_9_fu_975_p2,
        din3 => tmp_9_fu_975_p3,
        din4 => tmp_9_fu_975_p4,
        din5 => tmp_reg_1299,
        dout => tmp_9_fu_975_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_338_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_338_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_338_p2 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
            end if;
        end if;
    end process;


    i_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1233 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_283 <= tmp_1_mid2_v_reg_1268;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_283 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_338_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_272 <= indvar_flatten_next_fu_344_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_272 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_338_p2 = ap_const_lv1_0))) then 
                j_reg_294 <= j_1_fu_418_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_294 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1233 = ap_const_lv1_0))) then
                a_row_load_1_reg_1340 <= a_row_load_1_fu_505_p3;
                a_row_load_2_reg_1335 <= a_row_load_2_fu_497_p3;
                a_row_load_3_reg_1330 <= a_row_load_3_fu_489_p3;
                a_row_load_reg_1345 <= a_row_load_fu_513_p3;
                tmp_4_reg_1350 <= tmp_4_fu_936_p6;
                tmp_7_reg_1355 <= tmp_7_fu_949_p6;
                tmp_8_reg_1360 <= tmp_8_fu_962_p6;
                tmp_9_reg_1365 <= tmp_9_fu_975_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1233 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_7_fu_96 <= a_row_load_3_fu_489_p3;
                a_row_load_8_fu_92 <= a_row_load_2_fu_497_p3;
                a_row_load_9_fu_88 <= a_row_load_1_fu_505_p3;
                a_row_load_s_fu_84 <= a_row_load_fu_513_p3;
                b_copy_0_3_11_fu_100 <= b_copy_0_3_18_fu_929_p3;
                b_copy_0_3_12_fu_108 <= b_copy_0_3_16_fu_915_p3;
                b_copy_0_3_1_fu_112 <= b_copy_0_3_3_fu_908_p3;
                b_copy_0_3_8_fu_104 <= b_copy_0_3_17_fu_922_p3;
                b_copy_1_3_11_fu_116 <= b_copy_1_3_18_fu_901_p3;
                b_copy_1_3_12_fu_124 <= b_copy_1_3_16_fu_887_p3;
                b_copy_1_3_1_fu_128 <= b_copy_1_3_3_fu_880_p3;
                b_copy_1_3_8_fu_120 <= b_copy_1_3_17_fu_894_p3;
                b_copy_2_3_11_fu_132 <= b_copy_2_3_18_fu_873_p3;
                b_copy_2_3_12_fu_140 <= b_copy_2_3_16_fu_859_p3;
                b_copy_2_3_1_fu_144 <= b_copy_2_3_3_fu_852_p3;
                b_copy_2_3_8_fu_136 <= b_copy_2_3_17_fu_866_p3;
                b_copy_3_3_11_fu_148 <= b_copy_3_3_18_fu_845_p3;
                b_copy_3_3_12_fu_156 <= b_copy_3_3_16_fu_831_p3;
                b_copy_3_3_1_fu_160 <= b_copy_3_3_3_fu_824_p3;
                b_copy_3_3_8_fu_152 <= b_copy_3_3_17_fu_838_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter10_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter9_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter10_tmp_2_1_reg_1375 <= ap_pipeline_reg_pp0_iter9_tmp_2_1_reg_1375;
                ap_pipeline_reg_pp0_iter10_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter9_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter11_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter10_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter10_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter11_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter10_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter11_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter10_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter12_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter11_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter11_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter12_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter11_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter12_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter11_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter13_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter12_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter13_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter12_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter13_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter12_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter13_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter12_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter14_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter13_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter14_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter13_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter14_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter13_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter14_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter13_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter15_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter14_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter15_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter14_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter15_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter14_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter15_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter14_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter15_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter16_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter15_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter16_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter15_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter16_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter15_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter16_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter17_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter16_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter17_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter16_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter17_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter16_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter18_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter17_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter18_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter17_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter18_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter17_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter18_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter17_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter19_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter18_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter19_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter18_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter19_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter18_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter19_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter18_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter20_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter19_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter20_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter19_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter20_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter19_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter20_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter19_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter21_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter20_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter21_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter20_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter21_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter20_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter22_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter21_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter22_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter21_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter22_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter21_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter23_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter22_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter23_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter22_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter23_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter22_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter24_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter23_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter24_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter23_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter24_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter23_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter25_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter24_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter25_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter24_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter25_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter24_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter2_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter1_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter3_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter2_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter2_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter4_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter3_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter3_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter5_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter4_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter4_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter6_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter5_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter5_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter6_tmp_2_1_reg_1375 <= tmp_2_1_reg_1375;
                ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1380 <= tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1385 <= tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter7_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter6_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter6_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter7_tmp_2_1_reg_1375 <= ap_pipeline_reg_pp0_iter6_tmp_2_1_reg_1375;
                ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter6_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter6_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter8_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter7_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter7_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter8_tmp_2_1_reg_1375 <= ap_pipeline_reg_pp0_iter7_tmp_2_1_reg_1375;
                ap_pipeline_reg_pp0_iter8_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter7_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter7_tmp_2_3_reg_1385;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1233 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter9_j_mid2_reg_1242 <= ap_pipeline_reg_pp0_iter8_j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter9_tmp_1_mid2_v_reg_1268 <= ap_pipeline_reg_pp0_iter8_tmp_1_mid2_v_reg_1268;
                ap_pipeline_reg_pp0_iter9_tmp_2_1_reg_1375 <= ap_pipeline_reg_pp0_iter8_tmp_2_1_reg_1375;
                ap_pipeline_reg_pp0_iter9_tmp_2_2_reg_1380 <= ap_pipeline_reg_pp0_iter8_tmp_2_2_reg_1380;
                ap_pipeline_reg_pp0_iter9_tmp_2_3_reg_1385 <= ap_pipeline_reg_pp0_iter8_tmp_2_3_reg_1385;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1233 <= exitcond_flatten_reg_1233;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1242 <= j_mid2_reg_1242;
                ap_pipeline_reg_pp0_iter1_tmp_1_mid2_v_reg_1268 <= tmp_1_mid2_v_reg_1268;
                exitcond_flatten_reg_1233 <= exitcond_flatten_fu_338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_338_p2 = ap_const_lv1_0))) then
                j_mid2_reg_1242 <= j_mid2_fu_362_p3;
                tmp_mid2_reg_1248 <= tmp_mid2_fu_382_p3;
                tmp_reg_1299 <= tmp_fu_414_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_338_p2 = ap_const_lv1_0))) then
                tmp_1_mid2_v_reg_1268 <= tmp_1_mid2_v_fu_390_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1233 = ap_const_lv1_0)) then
                tmp_2_1_reg_1375 <= grp_fu_326_p2;
                tmp_2_2_reg_1380 <= grp_fu_330_p2;
                tmp_2_3_reg_1385 <= grp_fu_334_p2;
                tmp_s_reg_1370 <= grp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter14_exitcond_flatten_reg_1233 = ap_const_lv1_0)) then
                tmp_5_1_reg_1395 <= grp_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter19_exitcond_flatten_reg_1233 = ap_const_lv1_0)) then
                tmp_5_2_reg_1400 <= grp_fu_314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter24_exitcond_flatten_reg_1233 = ap_const_lv1_0)) then
                tmp_5_3_reg_1405 <= grp_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1233 = ap_const_lv1_0)) then
                tmp_5_reg_1390 <= grp_fu_305_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_338_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter26) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter25)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_338_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_338_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_0_Addr_A_orig <= tmp_1_mid2_fu_398_p1(32 - 1 downto 0);
    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_1_Addr_A_orig <= tmp_1_mid2_fu_398_p1(32 - 1 downto 0);
    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_2_Addr_A_orig <= tmp_1_mid2_fu_398_p1(32 - 1 downto 0);
    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= ap_const_lv32_0;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;
    a_2_WEN_A <= ap_const_lv4_0;
    a_3_Addr_A <= std_logic_vector(shift_left(unsigned(a_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a_3_Addr_A_orig <= tmp_1_mid2_fu_398_p1(32 - 1 downto 0);
    a_3_Clk_A <= ap_clk;
    a_3_Din_A <= ap_const_lv32_0;

    a_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            a_3_EN_A <= ap_const_logic_1;
        else 
            a_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_3_Rst_A <= ap_rst;
    a_3_WEN_A <= ap_const_lv4_0;
    a_row_load_1_fu_505_p3 <= 
        a_1_Dout_A when (tmp_3_fu_484_p2(0) = '1') else 
        a_row_load_9_fu_88;
    a_row_load_2_fu_497_p3 <= 
        a_2_Dout_A when (tmp_3_fu_484_p2(0) = '1') else 
        a_row_load_8_fu_92;
    a_row_load_3_fu_489_p3 <= 
        a_3_Dout_A when (tmp_3_fu_484_p2(0) = '1') else 
        a_row_load_7_fu_96;
    a_row_load_fu_513_p3 <= 
        a_0_Dout_A when (tmp_3_fu_484_p2(0) = '1') else 
        a_row_load_s_fu_84;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state29 <= ap_CS_fsm(2 downto 2);

    ap_done_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b_0_Addr_A_orig <= tmp_6_fu_406_p1(32 - 1 downto 0);
    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b_1_Addr_A_orig <= tmp_6_fu_406_p1(32 - 1 downto 0);
    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    b_2_Addr_A <= std_logic_vector(shift_left(unsigned(b_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b_2_Addr_A_orig <= tmp_6_fu_406_p1(32 - 1 downto 0);
    b_2_Clk_A <= ap_clk;
    b_2_Din_A <= ap_const_lv32_0;

    b_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            b_2_EN_A <= ap_const_logic_1;
        else 
            b_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_2_Rst_A <= ap_rst;
    b_2_WEN_A <= ap_const_lv4_0;
    b_3_Addr_A <= std_logic_vector(shift_left(unsigned(b_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b_3_Addr_A_orig <= tmp_6_fu_406_p1(32 - 1 downto 0);
    b_3_Clk_A <= ap_clk;
    b_3_Din_A <= ap_const_lv32_0;

    b_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            b_3_EN_A <= ap_const_logic_1;
        else 
            b_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_3_Rst_A <= ap_rst;
    b_3_WEN_A <= ap_const_lv4_0;
    b_copy_0_3_14_fu_592_p3 <= 
        b_copy_0_3_8_fu_104 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_0_3_9_fu_584_p3;
    b_copy_0_3_15_fu_600_p3 <= 
        b_0_Dout_A when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_0_3_11_fu_100;
    b_copy_0_3_16_fu_915_p3 <= 
        b_copy_0_3_7_fu_576_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_12_fu_108;
    b_copy_0_3_17_fu_922_p3 <= 
        b_copy_0_3_14_fu_592_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_8_fu_104;
    b_copy_0_3_18_fu_929_p3 <= 
        b_copy_0_3_15_fu_600_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_11_fu_100;
    b_copy_0_3_2_fu_552_p3 <= 
        b_copy_0_3_1_fu_112 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_0_3_4_fu_539_p3;
    b_copy_0_3_3_fu_908_p3 <= 
        b_copy_0_3_2_fu_552_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_1_fu_112;
    b_copy_0_3_4_fu_539_p3 <= 
        b_copy_0_3_1_fu_112 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_0_3_fu_526_p3;
    b_copy_0_3_5_fu_560_p3 <= 
        b_0_Dout_A when (sel_tmp_fu_521_p2(0) = '1') else 
        b_copy_0_3_12_fu_108;
    b_copy_0_3_6_fu_568_p3 <= 
        b_copy_0_3_12_fu_108 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_0_3_5_fu_560_p3;
    b_copy_0_3_7_fu_576_p3 <= 
        b_copy_0_3_12_fu_108 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_0_3_6_fu_568_p3;
    b_copy_0_3_9_fu_584_p3 <= 
        b_0_Dout_A when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_0_3_8_fu_104;
    b_copy_0_3_fu_526_p3 <= 
        b_copy_0_3_1_fu_112 when (sel_tmp_fu_521_p2(0) = '1') else 
        b_0_Dout_A;
    b_copy_1_3_14_fu_664_p3 <= 
        b_copy_1_3_8_fu_120 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_1_3_9_fu_656_p3;
    b_copy_1_3_15_fu_672_p3 <= 
        b_1_Dout_A when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_1_3_11_fu_116;
    b_copy_1_3_16_fu_887_p3 <= 
        b_copy_1_3_7_fu_648_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_12_fu_124;
    b_copy_1_3_17_fu_894_p3 <= 
        b_copy_1_3_14_fu_664_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_8_fu_120;
    b_copy_1_3_18_fu_901_p3 <= 
        b_copy_1_3_15_fu_672_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_11_fu_116;
    b_copy_1_3_2_fu_624_p3 <= 
        b_copy_1_3_1_fu_128 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_1_3_4_fu_616_p3;
    b_copy_1_3_3_fu_880_p3 <= 
        b_copy_1_3_2_fu_624_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_1_fu_128;
    b_copy_1_3_4_fu_616_p3 <= 
        b_copy_1_3_1_fu_128 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_1_3_fu_608_p3;
    b_copy_1_3_5_fu_632_p3 <= 
        b_1_Dout_A when (sel_tmp_fu_521_p2(0) = '1') else 
        b_copy_1_3_12_fu_124;
    b_copy_1_3_6_fu_640_p3 <= 
        b_copy_1_3_12_fu_124 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_1_3_5_fu_632_p3;
    b_copy_1_3_7_fu_648_p3 <= 
        b_copy_1_3_12_fu_124 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_1_3_6_fu_640_p3;
    b_copy_1_3_9_fu_656_p3 <= 
        b_1_Dout_A when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_1_3_8_fu_120;
    b_copy_1_3_fu_608_p3 <= 
        b_copy_1_3_1_fu_128 when (sel_tmp_fu_521_p2(0) = '1') else 
        b_1_Dout_A;
    b_copy_2_3_14_fu_736_p3 <= 
        b_copy_2_3_8_fu_136 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_2_3_9_fu_728_p3;
    b_copy_2_3_15_fu_744_p3 <= 
        b_2_Dout_A when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_2_3_11_fu_132;
    b_copy_2_3_16_fu_859_p3 <= 
        b_copy_2_3_7_fu_720_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_12_fu_140;
    b_copy_2_3_17_fu_866_p3 <= 
        b_copy_2_3_14_fu_736_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_8_fu_136;
    b_copy_2_3_18_fu_873_p3 <= 
        b_copy_2_3_15_fu_744_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_11_fu_132;
    b_copy_2_3_2_fu_696_p3 <= 
        b_copy_2_3_1_fu_144 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_2_3_4_fu_688_p3;
    b_copy_2_3_3_fu_852_p3 <= 
        b_copy_2_3_2_fu_696_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_1_fu_144;
    b_copy_2_3_4_fu_688_p3 <= 
        b_copy_2_3_1_fu_144 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_2_3_fu_680_p3;
    b_copy_2_3_5_fu_704_p3 <= 
        b_2_Dout_A when (sel_tmp_fu_521_p2(0) = '1') else 
        b_copy_2_3_12_fu_140;
    b_copy_2_3_6_fu_712_p3 <= 
        b_copy_2_3_12_fu_140 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_2_3_5_fu_704_p3;
    b_copy_2_3_7_fu_720_p3 <= 
        b_copy_2_3_12_fu_140 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_2_3_6_fu_712_p3;
    b_copy_2_3_9_fu_728_p3 <= 
        b_2_Dout_A when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_2_3_8_fu_136;
    b_copy_2_3_fu_680_p3 <= 
        b_copy_2_3_1_fu_144 when (sel_tmp_fu_521_p2(0) = '1') else 
        b_2_Dout_A;
    b_copy_3_3_14_fu_808_p3 <= 
        b_copy_3_3_8_fu_152 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_3_3_9_fu_800_p3;
    b_copy_3_3_15_fu_816_p3 <= 
        b_3_Dout_A when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_3_3_11_fu_148;
    b_copy_3_3_16_fu_831_p3 <= 
        b_copy_3_3_7_fu_792_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_12_fu_156;
    b_copy_3_3_17_fu_838_p3 <= 
        b_copy_3_3_14_fu_808_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_8_fu_152;
    b_copy_3_3_18_fu_845_p3 <= 
        b_copy_3_3_15_fu_816_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_11_fu_148;
    b_copy_3_3_2_fu_768_p3 <= 
        b_copy_3_3_1_fu_160 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_3_3_4_fu_760_p3;
    b_copy_3_3_3_fu_824_p3 <= 
        b_copy_3_3_2_fu_768_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_1_fu_160;
    b_copy_3_3_4_fu_760_p3 <= 
        b_copy_3_3_1_fu_160 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_3_3_fu_752_p3;
    b_copy_3_3_5_fu_776_p3 <= 
        b_3_Dout_A when (sel_tmp_fu_521_p2(0) = '1') else 
        b_copy_3_3_12_fu_156;
    b_copy_3_3_6_fu_784_p3 <= 
        b_copy_3_3_12_fu_156 when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_3_3_5_fu_776_p3;
    b_copy_3_3_7_fu_792_p3 <= 
        b_copy_3_3_12_fu_156 when (sel_tmp4_fu_547_p2(0) = '1') else 
        b_copy_3_3_6_fu_784_p3;
    b_copy_3_3_9_fu_800_p3 <= 
        b_3_Dout_A when (sel_tmp2_fu_534_p2(0) = '1') else 
        b_copy_3_3_8_fu_152;
    b_copy_3_3_fu_752_p3 <= 
        b_copy_3_3_1_fu_160 when (sel_tmp_fu_521_p2(0) = '1') else 
        b_3_Dout_A;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_11_cast_fu_1108_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= tmp_5_3_reg_1405;

    c_EN_A_assign_proc : process(ap_enable_reg_pp0_iter26)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter26)) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_pipeline_reg_pp0_iter25_exitcond_flatten_reg_1233, ap_enable_reg_pp0_iter26)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter26) and (ap_pipeline_reg_pp0_iter25_exitcond_flatten_reg_1233 = ap_const_lv1_0)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_338_p2 <= "1" when (indvar_flatten_reg_272 = ap_const_lv5_10) else "0";
    exitcond_fu_356_p2 <= "1" when (j_reg_294 = ap_const_lv3_4) else "0";
    i_1_fu_350_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_287_p4));

    i_phi_fu_287_p4_assign_proc : process(i_reg_283, exitcond_flatten_reg_1233, ap_CS_fsm_pp0_stage0, tmp_1_mid2_v_reg_1268, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1233 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_287_p4 <= tmp_1_mid2_v_reg_1268;
        else 
            i_phi_fu_287_p4 <= i_reg_283;
        end if; 
    end process;

    indvar_flatten_next_fu_344_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_272) + unsigned(ap_const_lv5_1));
    j_1_fu_418_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_fu_362_p3));
    j_mid2_fu_362_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_356_p2(0) = '1') else 
        j_reg_294;
    sel_tmp2_fu_534_p2 <= "1" when (tmp_reg_1299 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_547_p2 <= "1" when (tmp_reg_1299 = ap_const_lv2_0) else "0";
    sel_tmp_fu_521_p2 <= "1" when (tmp_reg_1299 = ap_const_lv2_2) else "0";
    tmp1_fu_376_p2 <= "1" when (i_phi_fu_287_p4 = ap_const_lv3_0) else "0";
    tmp_10_cast_fu_1095_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_1088_p3),6));
    tmp_10_fu_1102_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_1095_p1) + unsigned(tmp_6_cast_fu_1099_p1));
    tmp_11_cast_fu_1108_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_1102_p2),64));
    tmp_1_fu_1088_p3 <= (ap_pipeline_reg_pp0_iter25_tmp_1_mid2_v_reg_1268 & ap_const_lv2_0);
    tmp_1_mid2_fu_398_p1 <= std_logic_vector(resize(unsigned(tmp_1_mid2_v_fu_390_p3),64));
    tmp_1_mid2_v_fu_390_p3 <= 
        i_1_fu_350_p2 when (exitcond_fu_356_p2(0) = '1') else 
        i_phi_fu_287_p4;
    tmp_3_fu_484_p2 <= "1" when (j_mid2_reg_1242 = ap_const_lv3_0) else "0";
    tmp_4_fu_936_p1 <= 
        b_copy_0_3_15_fu_600_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_11_fu_100;
    tmp_4_fu_936_p2 <= 
        b_copy_0_3_14_fu_592_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_8_fu_104;
    tmp_4_fu_936_p3 <= 
        b_copy_0_3_7_fu_576_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_12_fu_108;
    tmp_4_fu_936_p4 <= 
        b_copy_0_3_2_fu_552_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_0_3_1_fu_112;
    tmp_6_cast_fu_1099_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter25_j_mid2_reg_1242),6));
    tmp_6_fu_406_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_362_p3),64));
    tmp_7_fu_949_p1 <= 
        b_copy_1_3_15_fu_672_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_11_fu_116;
    tmp_7_fu_949_p2 <= 
        b_copy_1_3_14_fu_664_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_8_fu_120;
    tmp_7_fu_949_p3 <= 
        b_copy_1_3_7_fu_648_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_12_fu_124;
    tmp_7_fu_949_p4 <= 
        b_copy_1_3_2_fu_624_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_1_3_1_fu_128;
    tmp_8_fu_962_p1 <= 
        b_copy_2_3_15_fu_744_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_11_fu_132;
    tmp_8_fu_962_p2 <= 
        b_copy_2_3_14_fu_736_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_8_fu_136;
    tmp_8_fu_962_p3 <= 
        b_copy_2_3_7_fu_720_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_12_fu_140;
    tmp_8_fu_962_p4 <= 
        b_copy_2_3_2_fu_696_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_2_3_1_fu_144;
    tmp_9_fu_975_p1 <= 
        b_copy_3_3_15_fu_816_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_11_fu_148;
    tmp_9_fu_975_p2 <= 
        b_copy_3_3_14_fu_808_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_8_fu_152;
    tmp_9_fu_975_p3 <= 
        b_copy_3_3_7_fu_792_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_12_fu_156;
    tmp_9_fu_975_p4 <= 
        b_copy_3_3_2_fu_768_p3 when (tmp_mid2_reg_1248(0) = '1') else 
        b_copy_3_3_1_fu_160;
    tmp_fu_414_p1 <= j_mid2_fu_362_p3(2 - 1 downto 0);
    tmp_mid1_fu_370_p2 <= "1" when (i_1_fu_350_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_382_p3 <= 
        tmp_mid1_fu_370_p2 when (exitcond_fu_356_p2(0) = '1') else 
        tmp1_fu_376_p2;
end behav;
