

================================================================
== Vivado HLS Report for 'matmul_hw'
================================================================
* Date:           Thu Apr 27 18:22:38 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        hls_matmul_float
* Solution:       matmul_9b_16x16
* Product family: artix7
* Target device:  xc7a100tcsg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1109|  1109|  1110|  1110|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- L_col   |  1107|  1107|        88|          4|          1|   256|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 88


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 90
* Pipeline: 1
  Pipeline-0: II = 4, D = 88, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	90  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	2  / true
90 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_row_load_015 (10)  [1/1] 0.00ns
:0  %a_row_load_015 = alloca float

ST_1: a_row_load_29 (11)  [1/1] 0.00ns
:1  %a_row_load_29 = alloca float

ST_1: a_row_load_28 (12)  [1/1] 0.00ns
:2  %a_row_load_28 = alloca float

ST_1: a_row_load_27 (13)  [1/1] 0.00ns
:3  %a_row_load_27 = alloca float

ST_1: a_row_load_26 (14)  [1/1] 0.00ns
:4  %a_row_load_26 = alloca float

ST_1: a_row_load_25 (15)  [1/1] 0.00ns
:5  %a_row_load_25 = alloca float

ST_1: a_row_load_24 (16)  [1/1] 0.00ns
:6  %a_row_load_24 = alloca float

ST_1: a_row_load_23 (17)  [1/1] 0.00ns
:7  %a_row_load_23 = alloca float

ST_1: a_row_load_22 (18)  [1/1] 0.00ns
:8  %a_row_load_22 = alloca float

ST_1: a_row_load_21 (19)  [1/1] 0.00ns
:9  %a_row_load_21 = alloca float

ST_1: a_row_load_20 (20)  [1/1] 0.00ns
:10  %a_row_load_20 = alloca float

ST_1: a_row_load_19 (21)  [1/1] 0.00ns
:11  %a_row_load_19 = alloca float

ST_1: a_row_load_18 (22)  [1/1] 0.00ns
:12  %a_row_load_18 = alloca float

ST_1: a_row_load_17 (23)  [1/1] 0.00ns
:13  %a_row_load_17 = alloca float

ST_1: a_row_load_16 (24)  [1/1] 0.00ns
:14  %a_row_load_16 = alloca float

ST_1: a_row_load_s (25)  [1/1] 0.00ns
:15  %a_row_load_s = alloca float

ST_1: StgValue_107 (26)  [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_3), !map !7

ST_1: StgValue_108 (27)  [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_2), !map !14

ST_1: StgValue_109 (28)  [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_1), !map !20

ST_1: StgValue_110 (29)  [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %a_0), !map !26

ST_1: StgValue_111 (30)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %b_3), !map !32

ST_1: StgValue_112 (31)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %b_2), !map !37

ST_1: StgValue_113 (32)  [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %b_1), !map !42

ST_1: StgValue_114 (33)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecBitsMap([64 x float]* %b_0), !map !47

ST_1: StgValue_115 (34)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecBitsMap([256 x float]* %c), !map !52

ST_1: StgValue_116 (35)  [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matmul_hw_str) nounwind

ST_1: b_copy_0 (36)  [1/1] 0.00ns  loc: matmul.c:18
:26  %b_copy_0 = alloca [16 x float], align 16

ST_1: b_copy_1 (37)  [1/1] 0.00ns  loc: matmul.c:18
:27  %b_copy_1 = alloca [16 x float], align 16

ST_1: b_copy_2 (38)  [1/1] 0.00ns  loc: matmul.c:18
:28  %b_copy_2 = alloca [16 x float], align 16

ST_1: b_copy_3 (39)  [1/1] 0.00ns  loc: matmul.c:18
:29  %b_copy_3 = alloca [16 x float], align 16

ST_1: b_copy_4 (40)  [1/1] 0.00ns  loc: matmul.c:18
:30  %b_copy_4 = alloca [16 x float], align 16

ST_1: b_copy_5 (41)  [1/1] 0.00ns  loc: matmul.c:18
:31  %b_copy_5 = alloca [16 x float], align 16

ST_1: b_copy_6 (42)  [1/1] 0.00ns  loc: matmul.c:18
:32  %b_copy_6 = alloca [16 x float], align 16

ST_1: b_copy_7 (43)  [1/1] 0.00ns  loc: matmul.c:18
:33  %b_copy_7 = alloca [16 x float], align 16

ST_1: b_copy_8 (44)  [1/1] 0.00ns  loc: matmul.c:18
:34  %b_copy_8 = alloca [16 x float], align 16

ST_1: b_copy_9 (45)  [1/1] 0.00ns  loc: matmul.c:18
:35  %b_copy_9 = alloca [16 x float], align 16

ST_1: b_copy_10 (46)  [1/1] 0.00ns  loc: matmul.c:18
:36  %b_copy_10 = alloca [16 x float], align 16

ST_1: b_copy_11 (47)  [1/1] 0.00ns  loc: matmul.c:18
:37  %b_copy_11 = alloca [16 x float], align 16

ST_1: b_copy_12 (48)  [1/1] 0.00ns  loc: matmul.c:18
:38  %b_copy_12 = alloca [16 x float], align 16

ST_1: b_copy_13 (49)  [1/1] 0.00ns  loc: matmul.c:18
:39  %b_copy_13 = alloca [16 x float], align 16

ST_1: b_copy_14 (50)  [1/1] 0.00ns  loc: matmul.c:18
:40  %b_copy_14 = alloca [16 x float], align 16

ST_1: b_copy_15 (51)  [1/1] 0.00ns  loc: matmul.c:18
:41  %b_copy_15 = alloca [16 x float], align 16

ST_1: StgValue_133 (52)  [1/1] 0.00ns  loc: matmul.c:6
:42  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_134 (53)  [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecInterface([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_135 (54)  [1/1] 0.00ns
:44  call void (...)* @_ssdm_op_SpecMemCore([64 x float]* %a_0, [64 x float]* %a_1, [64 x float]* %a_2, [64 x float]* %a_3, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_136 (55)  [1/1] 0.00ns
:45  call void (...)* @_ssdm_op_SpecInterface([64 x float]* %b_0, [64 x float]* %b_1, [64 x float]* %b_2, [64 x float]* %b_3, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_137 (56)  [1/1] 0.00ns
:46  call void (...)* @_ssdm_op_SpecMemCore([64 x float]* %b_0, [64 x float]* %b_1, [64 x float]* %b_2, [64 x float]* %b_3, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_138 (57)  [1/1] 0.00ns
:47  call void (...)* @_ssdm_op_SpecInterface([256 x float]* %c, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_139 (58)  [1/1] 0.00ns
:48  call void (...)* @_ssdm_op_SpecMemCore([256 x float]* %c, [1 x i8]* @p_str1, [12 x i8]* @p_str4, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: StgValue_140 (59)  [1/1] 1.57ns  loc: matmul.c:21
:49  br label %.preheader7


 <State 2>: 6.45ns
ST_2: indvar_flatten (61)  [1/1] 0.00ns
.preheader7:0  %indvar_flatten = phi i9 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit ]

ST_2: i (62)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7:1  %i = phi i5 [ 0, %0 ], [ %tmp_1_mid2_v, %.loopexit ]

ST_2: j (63)  [1/1] 0.00ns
.preheader7:2  %j = phi i5 [ 0, %0 ], [ %j_1, %.loopexit ]

ST_2: exitcond_flatten (64)  [1/1] 2.51ns
.preheader7:3  %exitcond_flatten = icmp eq i9 %indvar_flatten, -256

ST_2: indvar_flatten_next (65)  [1/1] 1.79ns
.preheader7:4  %indvar_flatten_next = add i9 %indvar_flatten, 1

ST_2: StgValue_146 (66)  [1/1] 0.00ns
.preheader7:5  br i1 %exitcond_flatten, label %1, label %.preheader7.preheader

ST_2: i_1 (84)  [1/1] 1.67ns  loc: matmul.c:21
.preheader7.preheader:16  %i_1 = add i5 %i, 1

ST_2: exitcond (87)  [1/1] 2.37ns  loc: matmul.c:23
.preheader7.preheader:19  %exitcond = icmp eq i5 %j, -16

ST_2: j_mid2 (88)  [1/1] 1.37ns  loc: matmul.c:23
.preheader7.preheader:20  %j_mid2 = select i1 %exitcond, i5 0, i5 %j

ST_2: tmp_mid1 (89)  [1/1] 2.37ns  loc: matmul.c:36
.preheader7.preheader:21  %tmp_mid1 = icmp eq i5 %i_1, 0

ST_2: tmp1 (90)  [1/1] 2.37ns  loc: matmul.c:36
.preheader7.preheader:22  %tmp1 = icmp eq i5 %i, 0

ST_2: tmp_mid2 (91)  [1/1] 1.37ns  loc: matmul.c:36
.preheader7.preheader:23  %tmp_mid2 = select i1 %exitcond, i1 %tmp_mid1, i1 %tmp1

ST_2: tmp_1_mid2_v (92)  [1/1] 1.37ns  loc: matmul.c:46
.preheader7.preheader:24  %tmp_1_mid2_v = select i1 %exitcond, i5 %i_1, i5 %i

ST_2: tmp_1 (93)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:25  %tmp_1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_1_mid2_v, i2 0)

ST_2: tmp_4 (94)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:26  %tmp_4 = zext i7 %tmp_1 to i64

ST_2: a_0_addr (95)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:27  %a_0_addr = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_4

ST_2: a_1_addr (105)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:37  %a_1_addr = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_4

ST_2: a_2_addr (109)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:41  %a_2_addr = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_4

ST_2: a_3_addr (113)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:45  %a_3_addr = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_4

ST_2: a_0_load (123)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:55  %a_0_load = load float* %a_0_addr, align 4

ST_2: a_1_load (127)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:59  %a_1_load = load float* %a_1_addr, align 4

ST_2: a_2_load (131)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:63  %a_2_load = load float* %a_2_addr, align 4

ST_2: a_3_load (135)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:67  %a_3_load = load float* %a_3_addr, align 4

ST_2: StgValue_164 (171)  [1/1] 0.00ns  loc: matmul.c:36
.preheader7.preheader:103  br i1 %tmp_mid2, label %.preheader.preheader, label %.loopexit

ST_2: tmp_6 (173)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:0  %tmp_6 = zext i5 %j_mid2 to i64

ST_2: b_0_addr (176)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:3  %b_0_addr = getelementptr [64 x float]* %b_0, i64 0, i64 %tmp_6

ST_2: b_1_addr (185)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:12  %b_1_addr = getelementptr [64 x float]* %b_1, i64 0, i64 %tmp_6

ST_2: b_2_addr (189)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:16  %b_2_addr = getelementptr [64 x float]* %b_2, i64 0, i64 %tmp_6

ST_2: b_3_addr (193)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:20  %b_3_addr = getelementptr [64 x float]* %b_3, i64 0, i64 %tmp_6

ST_2: b_0_load (197)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:24  %b_0_load = load float* %b_0_addr, align 4

ST_2: b_1_load (209)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:36  %b_1_load = load float* %b_1_addr, align 4

ST_2: b_2_load (221)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:48  %b_2_load = load float* %b_2_addr, align 4

ST_2: b_3_load (233)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:60  %b_3_load = load float* %b_3_addr, align 4


 <State 3>: 5.10ns
ST_3: tmp_7 (96)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:28  %tmp_7 = or i7 %tmp_1, 1

ST_3: tmp_8 (97)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:29  %tmp_8 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_7)

ST_3: a_0_addr_1 (98)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:30  %a_0_addr_1 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_8

ST_3: a_1_addr_1 (106)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:38  %a_1_addr_1 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_8

ST_3: a_2_addr_1 (110)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:42  %a_2_addr_1 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_8

ST_3: a_3_addr_1 (114)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:46  %a_3_addr_1 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_8

ST_3: a_0_load (123)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:55  %a_0_load = load float* %a_0_addr, align 4

ST_3: a_0_load_1 (124)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:56  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_3: a_1_load (127)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:59  %a_1_load = load float* %a_1_addr, align 4

ST_3: a_1_load_1 (128)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:60  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_3: a_2_load (131)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:63  %a_2_load = load float* %a_2_addr, align 4

ST_3: a_2_load_1 (132)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:64  %a_2_load_1 = load float* %a_2_addr_1, align 4

ST_3: a_3_load (135)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:67  %a_3_load = load float* %a_3_addr, align 4

ST_3: a_3_load_1 (136)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:68  %a_3_load_1 = load float* %a_3_addr_1, align 4

ST_3: tmp_6_cast (175)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:2  %tmp_6_cast = zext i5 %j_mid2 to i6

ST_3: tmp_15 (177)  [1/1] 1.67ns  loc: matmul.c:23
.preheader.preheader:4  %tmp_15 = add i6 %tmp_6_cast, 16

ST_3: tmp_16_cast (178)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:5  %tmp_16_cast = zext i6 %tmp_15 to i64

ST_3: b_0_addr_1 (179)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:6  %b_0_addr_1 = getelementptr [64 x float]* %b_0, i64 0, i64 %tmp_16_cast

ST_3: b_1_addr_1 (186)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:13  %b_1_addr_1 = getelementptr [64 x float]* %b_1, i64 0, i64 %tmp_16_cast

ST_3: b_2_addr_1 (190)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:17  %b_2_addr_1 = getelementptr [64 x float]* %b_2, i64 0, i64 %tmp_16_cast

ST_3: b_3_addr_1 (194)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:21  %b_3_addr_1 = getelementptr [64 x float]* %b_3, i64 0, i64 %tmp_16_cast

ST_3: b_0_load (197)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:24  %b_0_load = load float* %b_0_addr, align 4

ST_3: b_copy_0_addr (198)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:25  %b_copy_0_addr = getelementptr [16 x float]* %b_copy_0, i64 0, i64 %tmp_6

ST_3: StgValue_197 (199)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:26  store float %b_0_load, float* %b_copy_0_addr, align 4

ST_3: b_0_load_1 (200)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:27  %b_0_load_1 = load float* %b_0_addr_1, align 4

ST_3: b_1_load (209)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:36  %b_1_load = load float* %b_1_addr, align 4

ST_3: b_copy_4_addr (210)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:37  %b_copy_4_addr = getelementptr [16 x float]* %b_copy_4, i64 0, i64 %tmp_6

ST_3: StgValue_201 (211)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:38  store float %b_1_load, float* %b_copy_4_addr, align 4

ST_3: b_1_load_1 (212)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:39  %b_1_load_1 = load float* %b_1_addr_1, align 4

ST_3: b_2_load (221)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:48  %b_2_load = load float* %b_2_addr, align 4

ST_3: b_copy_8_addr (222)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:49  %b_copy_8_addr = getelementptr [16 x float]* %b_copy_8, i64 0, i64 %tmp_6

ST_3: StgValue_205 (223)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:50  store float %b_2_load, float* %b_copy_8_addr, align 4

ST_3: b_2_load_1 (224)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:51  %b_2_load_1 = load float* %b_2_addr_1, align 4

ST_3: b_3_load (233)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:60  %b_3_load = load float* %b_3_addr, align 4

ST_3: b_copy_12_addr (234)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:61  %b_copy_12_addr = getelementptr [16 x float]* %b_copy_12, i64 0, i64 %tmp_6

ST_3: StgValue_209 (235)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:62  store float %b_3_load, float* %b_copy_12_addr, align 4

ST_3: b_3_load_1 (236)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:63  %b_3_load_1 = load float* %b_3_addr_1, align 4


 <State 4>: 5.10ns
ST_4: tmp_10 (99)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:31  %tmp_10 = or i7 %tmp_1, 2

ST_4: tmp_11 (100)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:32  %tmp_11 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_10)

ST_4: a_0_addr_2 (101)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:33  %a_0_addr_2 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_11

ST_4: a_1_addr_2 (107)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:39  %a_1_addr_2 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_11

ST_4: a_2_addr_2 (111)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:43  %a_2_addr_2 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_11

ST_4: a_3_addr_2 (115)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:47  %a_3_addr_2 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_11

ST_4: tmp_3 (122)  [1/1] 2.37ns  loc: matmul.c:30
.preheader7.preheader:54  %tmp_3 = icmp eq i5 %j_mid2, 0

ST_4: a_0_load_1 (124)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:56  %a_0_load_1 = load float* %a_0_addr_1, align 4

ST_4: a_0_load_2 (125)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:57  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_4: a_1_load_1 (128)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:60  %a_1_load_1 = load float* %a_1_addr_1, align 4

ST_4: a_1_load_2 (129)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:61  %a_1_load_2 = load float* %a_1_addr_2, align 4

ST_4: a_2_load_1 (132)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:64  %a_2_load_1 = load float* %a_2_addr_1, align 4

ST_4: a_2_load_2 (133)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:65  %a_2_load_2 = load float* %a_2_addr_2, align 4

ST_4: a_3_load_1 (136)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:68  %a_3_load_1 = load float* %a_3_addr_1, align 4

ST_4: a_3_load_2 (137)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:69  %a_3_load_2 = load float* %a_3_addr_2, align 4

ST_4: tmp_16 (180)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:7  %tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 1, i5 %j_mid2)

ST_4: b_0_addr_2 (181)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:8  %b_0_addr_2 = getelementptr [64 x float]* %b_0, i64 0, i64 %tmp_16

ST_4: b_1_addr_2 (187)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:14  %b_1_addr_2 = getelementptr [64 x float]* %b_1, i64 0, i64 %tmp_16

ST_4: b_2_addr_2 (191)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:18  %b_2_addr_2 = getelementptr [64 x float]* %b_2, i64 0, i64 %tmp_16

ST_4: b_3_addr_2 (195)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:22  %b_3_addr_2 = getelementptr [64 x float]* %b_3, i64 0, i64 %tmp_16

ST_4: b_0_load_1 (200)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:27  %b_0_load_1 = load float* %b_0_addr_1, align 4

ST_4: b_copy_1_addr (201)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:28  %b_copy_1_addr = getelementptr [16 x float]* %b_copy_1, i64 0, i64 %tmp_6

ST_4: StgValue_233 (202)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:29  store float %b_0_load_1, float* %b_copy_1_addr, align 4

ST_4: b_0_load_2 (203)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:30  %b_0_load_2 = load float* %b_0_addr_2, align 4

ST_4: b_1_load_1 (212)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:39  %b_1_load_1 = load float* %b_1_addr_1, align 4

ST_4: b_copy_5_addr (213)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:40  %b_copy_5_addr = getelementptr [16 x float]* %b_copy_5, i64 0, i64 %tmp_6

ST_4: StgValue_237 (214)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:41  store float %b_1_load_1, float* %b_copy_5_addr, align 4

ST_4: b_1_load_2 (215)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:42  %b_1_load_2 = load float* %b_1_addr_2, align 4

ST_4: b_2_load_1 (224)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:51  %b_2_load_1 = load float* %b_2_addr_1, align 4

ST_4: b_copy_9_addr (225)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:52  %b_copy_9_addr = getelementptr [16 x float]* %b_copy_9, i64 0, i64 %tmp_6

ST_4: StgValue_241 (226)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:53  store float %b_2_load_1, float* %b_copy_9_addr, align 4

ST_4: b_2_load_2 (227)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:54  %b_2_load_2 = load float* %b_2_addr_2, align 4

ST_4: b_3_load_1 (236)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:63  %b_3_load_1 = load float* %b_3_addr_1, align 4

ST_4: b_copy_13_addr (237)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:64  %b_copy_13_addr = getelementptr [16 x float]* %b_copy_13, i64 0, i64 %tmp_6

ST_4: StgValue_245 (238)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:65  store float %b_3_load_1, float* %b_copy_13_addr, align 4

ST_4: b_3_load_2 (239)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:66  %b_3_load_2 = load float* %b_3_addr_2, align 4

ST_4: tmp_9 (247)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:0  %tmp_9 = zext i5 %j_mid2 to i64

ST_4: b_copy_0_addr_1 (252)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:5  %b_copy_0_addr_1 = getelementptr [16 x float]* %b_copy_0, i64 0, i64 %tmp_9

ST_4: b_copy_0_load (253)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:6  %b_copy_0_load = load float* %b_copy_0_addr_1, align 4

ST_4: b_copy_4_addr_1 (268)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:21  %b_copy_4_addr_1 = getelementptr [16 x float]* %b_copy_4, i64 0, i64 %tmp_9

ST_4: b_copy_4_load (269)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:22  %b_copy_4_load = load float* %b_copy_4_addr_1, align 4

ST_4: b_copy_8_addr_1 (284)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:37  %b_copy_8_addr_1 = getelementptr [16 x float]* %b_copy_8, i64 0, i64 %tmp_9

ST_4: b_copy_8_load (285)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:38  %b_copy_8_load = load float* %b_copy_8_addr_1, align 4

ST_4: b_copy_12_addr_1 (300)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:53  %b_copy_12_addr_1 = getelementptr [16 x float]* %b_copy_12, i64 0, i64 %tmp_9

ST_4: b_copy_12_load (301)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:54  %b_copy_12_load = load float* %b_copy_12_addr_1, align 4


 <State 5>: 8.17ns
ST_5: a_row_load_30 (68)  [1/1] 0.00ns
.preheader7.preheader:0  %a_row_load_30 = load float* %a_row_load_015

ST_5: a_row_load_34 (72)  [1/1] 0.00ns
.preheader7.preheader:4  %a_row_load_34 = load float* %a_row_load_26

ST_5: a_row_load_38 (76)  [1/1] 0.00ns
.preheader7.preheader:8  %a_row_load_38 = load float* %a_row_load_22

ST_5: a_row_load_42 (80)  [1/1] 0.00ns
.preheader7.preheader:12  %a_row_load_42 = load float* %a_row_load_18

ST_5: tmp_12 (102)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:34  %tmp_12 = or i7 %tmp_1, 3

ST_5: tmp_13 (103)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:35  %tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_12)

ST_5: a_0_addr_3 (104)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:36  %a_0_addr_3 = getelementptr [64 x float]* %a_0, i64 0, i64 %tmp_13

ST_5: a_1_addr_3 (108)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:40  %a_1_addr_3 = getelementptr [64 x float]* %a_1, i64 0, i64 %tmp_13

ST_5: a_2_addr_3 (112)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:44  %a_2_addr_3 = getelementptr [64 x float]* %a_2, i64 0, i64 %tmp_13

ST_5: a_3_addr_3 (116)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:48  %a_3_addr_3 = getelementptr [64 x float]* %a_3, i64 0, i64 %tmp_13

ST_5: a_0_load_2 (125)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:57  %a_0_load_2 = load float* %a_0_addr_2, align 4

ST_5: a_0_load_3 (126)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:58  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_5: a_1_load_2 (129)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:61  %a_1_load_2 = load float* %a_1_addr_2, align 4

ST_5: a_1_load_3 (130)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:62  %a_1_load_3 = load float* %a_1_addr_3, align 4

ST_5: a_2_load_2 (133)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:65  %a_2_load_2 = load float* %a_2_addr_2, align 4

ST_5: a_2_load_3 (134)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:66  %a_2_load_3 = load float* %a_2_addr_3, align 4

ST_5: a_3_load_2 (137)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:69  %a_3_load_2 = load float* %a_3_addr_2, align 4

ST_5: a_3_load_3 (138)  [2/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:70  %a_3_load_3 = load float* %a_3_addr_3, align 4

ST_5: a_row_load_12 (142)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:74  %a_row_load_12 = select i1 %tmp_3, float %a_3_load, float %a_row_load_42

ST_5: a_row_load_8 (146)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:78  %a_row_load_8 = select i1 %tmp_3, float %a_2_load, float %a_row_load_38

ST_5: a_row_load_4 (150)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:82  %a_row_load_4 = select i1 %tmp_3, float %a_1_load, float %a_row_load_34

ST_5: a_row_load (154)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:86  %a_row_load = select i1 %tmp_3, float %a_0_load, float %a_row_load_30

ST_5: StgValue_278 (158)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:90  store float %a_row_load_12, float* %a_row_load_18

ST_5: StgValue_279 (162)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:94  store float %a_row_load_8, float* %a_row_load_22

ST_5: StgValue_280 (166)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:98  store float %a_row_load_4, float* %a_row_load_26

ST_5: StgValue_281 (170)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:102  store float %a_row_load, float* %a_row_load_015

ST_5: tmp_6_cast5 (174)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:1  %tmp_6_cast5 = zext i5 %j_mid2 to i7

ST_5: tmp_17 (182)  [1/1] 1.67ns  loc: matmul.c:23
.preheader.preheader:9  %tmp_17 = add i7 %tmp_6_cast5, 48

ST_5: tmp_18_cast (183)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:10  %tmp_18_cast = zext i7 %tmp_17 to i64

ST_5: b_0_addr_3 (184)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:11  %b_0_addr_3 = getelementptr [64 x float]* %b_0, i64 0, i64 %tmp_18_cast

ST_5: b_1_addr_3 (188)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:15  %b_1_addr_3 = getelementptr [64 x float]* %b_1, i64 0, i64 %tmp_18_cast

ST_5: b_2_addr_3 (192)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:19  %b_2_addr_3 = getelementptr [64 x float]* %b_2, i64 0, i64 %tmp_18_cast

ST_5: b_3_addr_3 (196)  [1/1] 0.00ns  loc: matmul.c:23
.preheader.preheader:23  %b_3_addr_3 = getelementptr [64 x float]* %b_3, i64 0, i64 %tmp_18_cast

ST_5: b_0_load_2 (203)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:30  %b_0_load_2 = load float* %b_0_addr_2, align 4

ST_5: b_copy_2_addr (204)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:31  %b_copy_2_addr = getelementptr [16 x float]* %b_copy_2, i64 0, i64 %tmp_6

ST_5: StgValue_291 (205)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:32  store float %b_0_load_2, float* %b_copy_2_addr, align 4

ST_5: b_0_load_3 (206)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:33  %b_0_load_3 = load float* %b_0_addr_3, align 4

ST_5: b_1_load_2 (215)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:42  %b_1_load_2 = load float* %b_1_addr_2, align 4

ST_5: b_copy_6_addr (216)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:43  %b_copy_6_addr = getelementptr [16 x float]* %b_copy_6, i64 0, i64 %tmp_6

ST_5: StgValue_295 (217)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:44  store float %b_1_load_2, float* %b_copy_6_addr, align 4

ST_5: b_1_load_3 (218)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:45  %b_1_load_3 = load float* %b_1_addr_3, align 4

ST_5: b_2_load_2 (227)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:54  %b_2_load_2 = load float* %b_2_addr_2, align 4

ST_5: b_copy_10_addr (228)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:55  %b_copy_10_addr = getelementptr [16 x float]* %b_copy_10, i64 0, i64 %tmp_6

ST_5: StgValue_299 (229)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:56  store float %b_2_load_2, float* %b_copy_10_addr, align 4

ST_5: b_2_load_3 (230)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:57  %b_2_load_3 = load float* %b_2_addr_3, align 4

ST_5: b_3_load_2 (239)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:66  %b_3_load_2 = load float* %b_3_addr_2, align 4

ST_5: b_copy_14_addr (240)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:67  %b_copy_14_addr = getelementptr [16 x float]* %b_copy_14, i64 0, i64 %tmp_6

ST_5: StgValue_303 (241)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:68  store float %b_3_load_2, float* %b_copy_14_addr, align 4

ST_5: b_3_load_3 (242)  [2/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:69  %b_3_load_3 = load float* %b_3_addr_3, align 4

ST_5: b_copy_0_load (253)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:6  %b_copy_0_load = load float* %b_copy_0_addr_1, align 4

ST_5: tmp_s (254)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:7  %tmp_s = fmul float %a_row_load, %b_copy_0_load

ST_5: b_copy_1_addr_1 (256)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:9  %b_copy_1_addr_1 = getelementptr [16 x float]* %b_copy_1, i64 0, i64 %tmp_9

ST_5: b_copy_1_load (257)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:10  %b_copy_1_load = load float* %b_copy_1_addr_1, align 4

ST_5: b_copy_4_load (269)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:22  %b_copy_4_load = load float* %b_copy_4_addr_1, align 4

ST_5: tmp_2_4 (270)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:23  %tmp_2_4 = fmul float %a_row_load_4, %b_copy_4_load

ST_5: b_copy_5_addr_1 (272)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:25  %b_copy_5_addr_1 = getelementptr [16 x float]* %b_copy_5, i64 0, i64 %tmp_9

ST_5: b_copy_5_load (273)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:26  %b_copy_5_load = load float* %b_copy_5_addr_1, align 4

ST_5: b_copy_8_load (285)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:38  %b_copy_8_load = load float* %b_copy_8_addr_1, align 4

ST_5: tmp_2_8 (286)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:39  %tmp_2_8 = fmul float %a_row_load_8, %b_copy_8_load

ST_5: b_copy_9_addr_1 (288)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:41  %b_copy_9_addr_1 = getelementptr [16 x float]* %b_copy_9, i64 0, i64 %tmp_9

ST_5: b_copy_9_load (289)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:42  %b_copy_9_load = load float* %b_copy_9_addr_1, align 4

ST_5: b_copy_12_load (301)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:54  %b_copy_12_load = load float* %b_copy_12_addr_1, align 4

ST_5: tmp_2_11 (302)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:55  %tmp_2_11 = fmul float %a_row_load_12, %b_copy_12_load

ST_5: b_copy_13_addr_1 (304)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:57  %b_copy_13_addr_1 = getelementptr [16 x float]* %b_copy_13, i64 0, i64 %tmp_9

ST_5: b_copy_13_load (305)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:58  %b_copy_13_load = load float* %b_copy_13_addr_1, align 4

ST_5: j_1 (318)  [1/1] 1.67ns  loc: matmul.c:23
.loopexit:71  %j_1 = add i5 %j_mid2, 1


 <State 6>: 8.17ns
ST_6: a_row_load_31 (69)  [1/1] 0.00ns
.preheader7.preheader:1  %a_row_load_31 = load float* %a_row_load_29

ST_6: a_row_load_32 (70)  [1/1] 0.00ns
.preheader7.preheader:2  %a_row_load_32 = load float* %a_row_load_28

ST_6: a_row_load_33 (71)  [1/1] 0.00ns
.preheader7.preheader:3  %a_row_load_33 = load float* %a_row_load_27

ST_6: a_row_load_35 (73)  [1/1] 0.00ns
.preheader7.preheader:5  %a_row_load_35 = load float* %a_row_load_25

ST_6: a_row_load_36 (74)  [1/1] 0.00ns
.preheader7.preheader:6  %a_row_load_36 = load float* %a_row_load_24

ST_6: a_row_load_37 (75)  [1/1] 0.00ns
.preheader7.preheader:7  %a_row_load_37 = load float* %a_row_load_23

ST_6: a_row_load_39 (77)  [1/1] 0.00ns
.preheader7.preheader:9  %a_row_load_39 = load float* %a_row_load_21

ST_6: a_row_load_40 (78)  [1/1] 0.00ns
.preheader7.preheader:10  %a_row_load_40 = load float* %a_row_load_20

ST_6: a_row_load_41 (79)  [1/1] 0.00ns
.preheader7.preheader:11  %a_row_load_41 = load float* %a_row_load_19

ST_6: a_row_load_43 (81)  [1/1] 0.00ns
.preheader7.preheader:13  %a_row_load_43 = load float* %a_row_load_17

ST_6: a_row_load_44 (82)  [1/1] 0.00ns
.preheader7.preheader:14  %a_row_load_44 = load float* %a_row_load_16

ST_6: a_row_load_45 (83)  [1/1] 0.00ns
.preheader7.preheader:15  %a_row_load_45 = load float* %a_row_load_s

ST_6: StgValue_334 (85)  [1/1] 0.00ns
.preheader7.preheader:17  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @L_col_str)

ST_6: empty_3 (86)  [1/1] 0.00ns
.preheader7.preheader:18  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_6: tmp_14 (117)  [1/1] 0.00ns  loc: matmul.c:46
.preheader7.preheader:49  %tmp_14 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %tmp_1_mid2_v, i4 0)

ST_6: tmp_15_cast (118)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:50  %tmp_15_cast = zext i9 %tmp_14 to i10

ST_6: StgValue_338 (119)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:51  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_6: tmp_2 (120)  [1/1] 0.00ns  loc: matmul.c:23
.preheader7.preheader:52  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_6: StgValue_340 (121)  [1/1] 0.00ns  loc: matmul.c:25
.preheader7.preheader:53  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_6: a_0_load_3 (126)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:58  %a_0_load_3 = load float* %a_0_addr_3, align 4

ST_6: a_1_load_3 (130)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:62  %a_1_load_3 = load float* %a_1_addr_3, align 4

ST_6: a_2_load_3 (134)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:66  %a_2_load_3 = load float* %a_2_addr_3, align 4

ST_6: a_3_load_3 (138)  [1/2] 2.71ns  loc: matmul.c:32
.preheader7.preheader:70  %a_3_load_3 = load float* %a_3_addr_3, align 4

ST_6: a_row_load_15 (139)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:71  %a_row_load_15 = select i1 %tmp_3, float %a_3_load_3, float %a_row_load_45

ST_6: a_row_load_14 (140)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:72  %a_row_load_14 = select i1 %tmp_3, float %a_3_load_2, float %a_row_load_44

ST_6: a_row_load_13 (141)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:73  %a_row_load_13 = select i1 %tmp_3, float %a_3_load_1, float %a_row_load_43

ST_6: a_row_load_11 (143)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:75  %a_row_load_11 = select i1 %tmp_3, float %a_2_load_3, float %a_row_load_41

ST_6: a_row_load_10 (144)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:76  %a_row_load_10 = select i1 %tmp_3, float %a_2_load_2, float %a_row_load_40

ST_6: a_row_load_9 (145)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:77  %a_row_load_9 = select i1 %tmp_3, float %a_2_load_1, float %a_row_load_39

ST_6: a_row_load_7 (147)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:79  %a_row_load_7 = select i1 %tmp_3, float %a_1_load_3, float %a_row_load_37

ST_6: a_row_load_6 (148)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:80  %a_row_load_6 = select i1 %tmp_3, float %a_1_load_2, float %a_row_load_36

ST_6: a_row_load_5 (149)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:81  %a_row_load_5 = select i1 %tmp_3, float %a_1_load_1, float %a_row_load_35

ST_6: a_row_load_3 (151)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:83  %a_row_load_3 = select i1 %tmp_3, float %a_0_load_3, float %a_row_load_33

ST_6: a_row_load_2 (152)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:84  %a_row_load_2 = select i1 %tmp_3, float %a_0_load_2, float %a_row_load_32

ST_6: a_row_load_1 (153)  [1/1] 1.37ns  loc: matmul.c:30
.preheader7.preheader:85  %a_row_load_1 = select i1 %tmp_3, float %a_0_load_1, float %a_row_load_31

ST_6: StgValue_357 (155)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:87  store float %a_row_load_15, float* %a_row_load_s

ST_6: StgValue_358 (156)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:88  store float %a_row_load_14, float* %a_row_load_16

ST_6: StgValue_359 (157)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:89  store float %a_row_load_13, float* %a_row_load_17

ST_6: StgValue_360 (159)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:91  store float %a_row_load_11, float* %a_row_load_19

ST_6: StgValue_361 (160)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:92  store float %a_row_load_10, float* %a_row_load_20

ST_6: StgValue_362 (161)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:93  store float %a_row_load_9, float* %a_row_load_21

ST_6: StgValue_363 (163)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:95  store float %a_row_load_7, float* %a_row_load_23

ST_6: StgValue_364 (164)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:96  store float %a_row_load_6, float* %a_row_load_24

ST_6: StgValue_365 (165)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:97  store float %a_row_load_5, float* %a_row_load_25

ST_6: StgValue_366 (167)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:99  store float %a_row_load_3, float* %a_row_load_27

ST_6: StgValue_367 (168)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:100  store float %a_row_load_2, float* %a_row_load_28

ST_6: StgValue_368 (169)  [1/1] 0.00ns  loc: matmul.c:30
.preheader7.preheader:101  store float %a_row_load_1, float* %a_row_load_29

ST_6: b_0_load_3 (206)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:33  %b_0_load_3 = load float* %b_0_addr_3, align 4

ST_6: b_copy_3_addr (207)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:34  %b_copy_3_addr = getelementptr [16 x float]* %b_copy_3, i64 0, i64 %tmp_6

ST_6: StgValue_371 (208)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:35  store float %b_0_load_3, float* %b_copy_3_addr, align 4

ST_6: b_1_load_3 (218)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:45  %b_1_load_3 = load float* %b_1_addr_3, align 4

ST_6: b_copy_7_addr (219)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:46  %b_copy_7_addr = getelementptr [16 x float]* %b_copy_7, i64 0, i64 %tmp_6

ST_6: StgValue_374 (220)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:47  store float %b_1_load_3, float* %b_copy_7_addr, align 4

ST_6: b_2_load_3 (230)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:57  %b_2_load_3 = load float* %b_2_addr_3, align 4

ST_6: b_copy_11_addr (231)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:58  %b_copy_11_addr = getelementptr [16 x float]* %b_copy_11, i64 0, i64 %tmp_6

ST_6: StgValue_377 (232)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:59  store float %b_2_load_3, float* %b_copy_11_addr, align 4

ST_6: b_3_load_3 (242)  [1/2] 2.71ns  loc: matmul.c:38
.preheader.preheader:69  %b_3_load_3 = load float* %b_3_addr_3, align 4

ST_6: b_copy_15_addr (243)  [1/1] 0.00ns  loc: matmul.c:38
.preheader.preheader:70  %b_copy_15_addr = getelementptr [16 x float]* %b_copy_15, i64 0, i64 %tmp_6

ST_6: StgValue_380 (244)  [1/1] 2.39ns  loc: matmul.c:38
.preheader.preheader:71  store float %b_3_load_3, float* %b_copy_15_addr, align 4

ST_6: StgValue_381 (245)  [1/1] 0.00ns
.preheader.preheader:72  br label %.loopexit

ST_6: tmp_9_cast (248)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:1  %tmp_9_cast = zext i5 %j_mid2 to i10

ST_6: tmp_18 (249)  [1/1] 1.79ns  loc: matmul.c:46
.loopexit:2  %tmp_18 = add i10 %tmp_15_cast, %tmp_9_cast

ST_6: tmp_s (254)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:7  %tmp_s = fmul float %a_row_load, %b_copy_0_load

ST_6: b_copy_1_load (257)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:10  %b_copy_1_load = load float* %b_copy_1_addr_1, align 4

ST_6: tmp_2_1 (258)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:11  %tmp_2_1 = fmul float %a_row_load_1, %b_copy_1_load

ST_6: b_copy_2_addr_1 (260)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:13  %b_copy_2_addr_1 = getelementptr [16 x float]* %b_copy_2, i64 0, i64 %tmp_9

ST_6: b_copy_2_load (261)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:14  %b_copy_2_load = load float* %b_copy_2_addr_1, align 4

ST_6: tmp_2_4 (270)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:23  %tmp_2_4 = fmul float %a_row_load_4, %b_copy_4_load

ST_6: b_copy_5_load (273)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:26  %b_copy_5_load = load float* %b_copy_5_addr_1, align 4

ST_6: tmp_2_5 (274)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:27  %tmp_2_5 = fmul float %a_row_load_5, %b_copy_5_load

ST_6: b_copy_6_addr_1 (276)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:29  %b_copy_6_addr_1 = getelementptr [16 x float]* %b_copy_6, i64 0, i64 %tmp_9

ST_6: b_copy_6_load (277)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:30  %b_copy_6_load = load float* %b_copy_6_addr_1, align 4

ST_6: tmp_2_8 (286)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:39  %tmp_2_8 = fmul float %a_row_load_8, %b_copy_8_load

ST_6: b_copy_9_load (289)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:42  %b_copy_9_load = load float* %b_copy_9_addr_1, align 4

ST_6: tmp_2_9 (290)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:43  %tmp_2_9 = fmul float %a_row_load_9, %b_copy_9_load

ST_6: b_copy_10_addr_1 (292)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:45  %b_copy_10_addr_1 = getelementptr [16 x float]* %b_copy_10, i64 0, i64 %tmp_9

ST_6: b_copy_10_load (293)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:46  %b_copy_10_load = load float* %b_copy_10_addr_1, align 4

ST_6: tmp_2_11 (302)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:55  %tmp_2_11 = fmul float %a_row_load_12, %b_copy_12_load

ST_6: b_copy_13_load (305)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:58  %b_copy_13_load = load float* %b_copy_13_addr_1, align 4

ST_6: tmp_2_12 (306)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:59  %tmp_2_12 = fmul float %a_row_load_13, %b_copy_13_load

ST_6: b_copy_14_addr_1 (308)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:61  %b_copy_14_addr_1 = getelementptr [16 x float]* %b_copy_14, i64 0, i64 %tmp_9

ST_6: b_copy_14_load (309)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:62  %b_copy_14_load = load float* %b_copy_14_addr_1, align 4


 <State 7>: 8.17ns
ST_7: tmp_s (254)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:7  %tmp_s = fmul float %a_row_load, %b_copy_0_load

ST_7: tmp_2_1 (258)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:11  %tmp_2_1 = fmul float %a_row_load_1, %b_copy_1_load

ST_7: b_copy_2_load (261)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:14  %b_copy_2_load = load float* %b_copy_2_addr_1, align 4

ST_7: tmp_2_2 (262)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:15  %tmp_2_2 = fmul float %a_row_load_2, %b_copy_2_load

ST_7: b_copy_3_addr_1 (264)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:17  %b_copy_3_addr_1 = getelementptr [16 x float]* %b_copy_3, i64 0, i64 %tmp_9

ST_7: b_copy_3_load (265)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:18  %b_copy_3_load = load float* %b_copy_3_addr_1, align 4

ST_7: tmp_2_4 (270)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:23  %tmp_2_4 = fmul float %a_row_load_4, %b_copy_4_load

ST_7: tmp_2_5 (274)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:27  %tmp_2_5 = fmul float %a_row_load_5, %b_copy_5_load

ST_7: b_copy_6_load (277)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:30  %b_copy_6_load = load float* %b_copy_6_addr_1, align 4

ST_7: tmp_2_6 (278)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:31  %tmp_2_6 = fmul float %a_row_load_6, %b_copy_6_load

ST_7: b_copy_7_addr_1 (280)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:33  %b_copy_7_addr_1 = getelementptr [16 x float]* %b_copy_7, i64 0, i64 %tmp_9

ST_7: b_copy_7_load (281)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:34  %b_copy_7_load = load float* %b_copy_7_addr_1, align 4

ST_7: tmp_2_8 (286)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:39  %tmp_2_8 = fmul float %a_row_load_8, %b_copy_8_load

ST_7: tmp_2_9 (290)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:43  %tmp_2_9 = fmul float %a_row_load_9, %b_copy_9_load

ST_7: b_copy_10_load (293)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:46  %b_copy_10_load = load float* %b_copy_10_addr_1, align 4

ST_7: tmp_2_s (294)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:47  %tmp_2_s = fmul float %a_row_load_10, %b_copy_10_load

ST_7: b_copy_11_addr_1 (296)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:49  %b_copy_11_addr_1 = getelementptr [16 x float]* %b_copy_11, i64 0, i64 %tmp_9

ST_7: b_copy_11_load (297)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:50  %b_copy_11_load = load float* %b_copy_11_addr_1, align 4

ST_7: tmp_2_11 (302)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:55  %tmp_2_11 = fmul float %a_row_load_12, %b_copy_12_load

ST_7: tmp_2_12 (306)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:59  %tmp_2_12 = fmul float %a_row_load_13, %b_copy_13_load

ST_7: b_copy_14_load (309)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:62  %b_copy_14_load = load float* %b_copy_14_addr_1, align 4

ST_7: tmp_2_13 (310)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:63  %tmp_2_13 = fmul float %a_row_load_14, %b_copy_14_load

ST_7: b_copy_15_addr_1 (312)  [1/1] 0.00ns  loc: matmul.c:43
.loopexit:65  %b_copy_15_addr_1 = getelementptr [16 x float]* %b_copy_15, i64 0, i64 %tmp_9

ST_7: b_copy_15_load (313)  [2/2] 2.39ns  loc: matmul.c:43
.loopexit:66  %b_copy_15_load = load float* %b_copy_15_addr_1, align 4


 <State 8>: 8.17ns
ST_8: tmp_s (254)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:7  %tmp_s = fmul float %a_row_load, %b_copy_0_load

ST_8: tmp_2_1 (258)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:11  %tmp_2_1 = fmul float %a_row_load_1, %b_copy_1_load

ST_8: tmp_2_2 (262)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:15  %tmp_2_2 = fmul float %a_row_load_2, %b_copy_2_load

ST_8: b_copy_3_load (265)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:18  %b_copy_3_load = load float* %b_copy_3_addr_1, align 4

ST_8: tmp_2_3 (266)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:19  %tmp_2_3 = fmul float %a_row_load_3, %b_copy_3_load

ST_8: tmp_2_4 (270)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:23  %tmp_2_4 = fmul float %a_row_load_4, %b_copy_4_load

ST_8: tmp_2_5 (274)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:27  %tmp_2_5 = fmul float %a_row_load_5, %b_copy_5_load

ST_8: tmp_2_6 (278)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:31  %tmp_2_6 = fmul float %a_row_load_6, %b_copy_6_load

ST_8: b_copy_7_load (281)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:34  %b_copy_7_load = load float* %b_copy_7_addr_1, align 4

ST_8: tmp_2_7 (282)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:35  %tmp_2_7 = fmul float %a_row_load_7, %b_copy_7_load

ST_8: tmp_2_8 (286)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:39  %tmp_2_8 = fmul float %a_row_load_8, %b_copy_8_load

ST_8: tmp_2_9 (290)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:43  %tmp_2_9 = fmul float %a_row_load_9, %b_copy_9_load

ST_8: tmp_2_s (294)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:47  %tmp_2_s = fmul float %a_row_load_10, %b_copy_10_load

ST_8: b_copy_11_load (297)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:50  %b_copy_11_load = load float* %b_copy_11_addr_1, align 4

ST_8: tmp_2_10 (298)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:51  %tmp_2_10 = fmul float %a_row_load_11, %b_copy_11_load

ST_8: tmp_2_11 (302)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:55  %tmp_2_11 = fmul float %a_row_load_12, %b_copy_12_load

ST_8: tmp_2_12 (306)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:59  %tmp_2_12 = fmul float %a_row_load_13, %b_copy_13_load

ST_8: tmp_2_13 (310)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:63  %tmp_2_13 = fmul float %a_row_load_14, %b_copy_14_load

ST_8: b_copy_15_load (313)  [1/2] 2.39ns  loc: matmul.c:43
.loopexit:66  %b_copy_15_load = load float* %b_copy_15_addr_1, align 4

ST_8: tmp_2_14 (314)  [4/4] 5.78ns  loc: matmul.c:43
.loopexit:67  %tmp_2_14 = fmul float %a_row_load_15, %b_copy_15_load


 <State 9>: 8.26ns
ST_9: tmp_5 (255)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:8  %tmp_5 = fadd float %tmp_s, 0.000000e+00

ST_9: tmp_2_1 (258)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:11  %tmp_2_1 = fmul float %a_row_load_1, %b_copy_1_load

ST_9: tmp_2_2 (262)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:15  %tmp_2_2 = fmul float %a_row_load_2, %b_copy_2_load

ST_9: tmp_2_3 (266)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:19  %tmp_2_3 = fmul float %a_row_load_3, %b_copy_3_load

ST_9: tmp_2_5 (274)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:27  %tmp_2_5 = fmul float %a_row_load_5, %b_copy_5_load

ST_9: tmp_2_6 (278)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:31  %tmp_2_6 = fmul float %a_row_load_6, %b_copy_6_load

ST_9: tmp_2_7 (282)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:35  %tmp_2_7 = fmul float %a_row_load_7, %b_copy_7_load

ST_9: tmp_2_9 (290)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:43  %tmp_2_9 = fmul float %a_row_load_9, %b_copy_9_load

ST_9: tmp_2_s (294)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:47  %tmp_2_s = fmul float %a_row_load_10, %b_copy_10_load

ST_9: tmp_2_10 (298)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:51  %tmp_2_10 = fmul float %a_row_load_11, %b_copy_11_load

ST_9: tmp_2_12 (306)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:59  %tmp_2_12 = fmul float %a_row_load_13, %b_copy_13_load

ST_9: tmp_2_13 (310)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:63  %tmp_2_13 = fmul float %a_row_load_14, %b_copy_14_load

ST_9: tmp_2_14 (314)  [3/4] 5.78ns  loc: matmul.c:43
.loopexit:67  %tmp_2_14 = fmul float %a_row_load_15, %b_copy_15_load


 <State 10>: 8.26ns
ST_10: tmp_5 (255)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:8  %tmp_5 = fadd float %tmp_s, 0.000000e+00

ST_10: tmp_2_2 (262)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:15  %tmp_2_2 = fmul float %a_row_load_2, %b_copy_2_load

ST_10: tmp_2_3 (266)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:19  %tmp_2_3 = fmul float %a_row_load_3, %b_copy_3_load

ST_10: tmp_2_6 (278)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:31  %tmp_2_6 = fmul float %a_row_load_6, %b_copy_6_load

ST_10: tmp_2_7 (282)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:35  %tmp_2_7 = fmul float %a_row_load_7, %b_copy_7_load

ST_10: tmp_2_s (294)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:47  %tmp_2_s = fmul float %a_row_load_10, %b_copy_10_load

ST_10: tmp_2_10 (298)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:51  %tmp_2_10 = fmul float %a_row_load_11, %b_copy_11_load

ST_10: tmp_2_13 (310)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:63  %tmp_2_13 = fmul float %a_row_load_14, %b_copy_14_load

ST_10: tmp_2_14 (314)  [2/4] 5.78ns  loc: matmul.c:43
.loopexit:67  %tmp_2_14 = fmul float %a_row_load_15, %b_copy_15_load


 <State 11>: 8.26ns
ST_11: tmp_5 (255)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:8  %tmp_5 = fadd float %tmp_s, 0.000000e+00

ST_11: tmp_2_3 (266)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:19  %tmp_2_3 = fmul float %a_row_load_3, %b_copy_3_load

ST_11: tmp_2_7 (282)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:35  %tmp_2_7 = fmul float %a_row_load_7, %b_copy_7_load

ST_11: tmp_2_10 (298)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:51  %tmp_2_10 = fmul float %a_row_load_11, %b_copy_11_load

ST_11: tmp_2_14 (314)  [1/4] 5.78ns  loc: matmul.c:43
.loopexit:67  %tmp_2_14 = fmul float %a_row_load_15, %b_copy_15_load


 <State 12>: 8.26ns
ST_12: tmp_5 (255)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:8  %tmp_5 = fadd float %tmp_s, 0.000000e+00


 <State 13>: 8.26ns
ST_13: tmp_5 (255)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:8  %tmp_5 = fadd float %tmp_s, 0.000000e+00


 <State 14>: 8.26ns
ST_14: tmp_5_1 (259)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:12  %tmp_5_1 = fadd float %tmp_5, %tmp_2_1


 <State 15>: 8.26ns
ST_15: tmp_5_1 (259)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:12  %tmp_5_1 = fadd float %tmp_5, %tmp_2_1


 <State 16>: 8.26ns
ST_16: tmp_5_1 (259)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:12  %tmp_5_1 = fadd float %tmp_5, %tmp_2_1


 <State 17>: 8.26ns
ST_17: tmp_5_1 (259)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:12  %tmp_5_1 = fadd float %tmp_5, %tmp_2_1


 <State 18>: 8.26ns
ST_18: tmp_5_1 (259)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:12  %tmp_5_1 = fadd float %tmp_5, %tmp_2_1


 <State 19>: 8.26ns
ST_19: tmp_5_2 (263)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:16  %tmp_5_2 = fadd float %tmp_5_1, %tmp_2_2


 <State 20>: 8.26ns
ST_20: tmp_5_2 (263)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:16  %tmp_5_2 = fadd float %tmp_5_1, %tmp_2_2


 <State 21>: 8.26ns
ST_21: tmp_5_2 (263)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:16  %tmp_5_2 = fadd float %tmp_5_1, %tmp_2_2


 <State 22>: 8.26ns
ST_22: tmp_5_2 (263)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:16  %tmp_5_2 = fadd float %tmp_5_1, %tmp_2_2


 <State 23>: 8.26ns
ST_23: tmp_5_2 (263)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:16  %tmp_5_2 = fadd float %tmp_5_1, %tmp_2_2


 <State 24>: 8.26ns
ST_24: tmp_5_3 (267)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:20  %tmp_5_3 = fadd float %tmp_5_2, %tmp_2_3


 <State 25>: 8.26ns
ST_25: tmp_5_3 (267)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:20  %tmp_5_3 = fadd float %tmp_5_2, %tmp_2_3


 <State 26>: 8.26ns
ST_26: tmp_5_3 (267)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:20  %tmp_5_3 = fadd float %tmp_5_2, %tmp_2_3


 <State 27>: 8.26ns
ST_27: tmp_5_3 (267)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:20  %tmp_5_3 = fadd float %tmp_5_2, %tmp_2_3


 <State 28>: 8.26ns
ST_28: tmp_5_3 (267)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:20  %tmp_5_3 = fadd float %tmp_5_2, %tmp_2_3


 <State 29>: 8.26ns
ST_29: tmp_5_4 (271)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:24  %tmp_5_4 = fadd float %tmp_5_3, %tmp_2_4


 <State 30>: 8.26ns
ST_30: tmp_5_4 (271)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:24  %tmp_5_4 = fadd float %tmp_5_3, %tmp_2_4


 <State 31>: 8.26ns
ST_31: tmp_5_4 (271)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:24  %tmp_5_4 = fadd float %tmp_5_3, %tmp_2_4


 <State 32>: 8.26ns
ST_32: tmp_5_4 (271)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:24  %tmp_5_4 = fadd float %tmp_5_3, %tmp_2_4


 <State 33>: 8.26ns
ST_33: tmp_5_4 (271)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:24  %tmp_5_4 = fadd float %tmp_5_3, %tmp_2_4


 <State 34>: 8.26ns
ST_34: tmp_5_5 (275)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:28  %tmp_5_5 = fadd float %tmp_5_4, %tmp_2_5


 <State 35>: 8.26ns
ST_35: tmp_5_5 (275)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:28  %tmp_5_5 = fadd float %tmp_5_4, %tmp_2_5


 <State 36>: 8.26ns
ST_36: tmp_5_5 (275)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:28  %tmp_5_5 = fadd float %tmp_5_4, %tmp_2_5


 <State 37>: 8.26ns
ST_37: tmp_5_5 (275)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:28  %tmp_5_5 = fadd float %tmp_5_4, %tmp_2_5


 <State 38>: 8.26ns
ST_38: tmp_5_5 (275)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:28  %tmp_5_5 = fadd float %tmp_5_4, %tmp_2_5


 <State 39>: 8.26ns
ST_39: tmp_5_6 (279)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:32  %tmp_5_6 = fadd float %tmp_5_5, %tmp_2_6


 <State 40>: 8.26ns
ST_40: tmp_5_6 (279)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:32  %tmp_5_6 = fadd float %tmp_5_5, %tmp_2_6


 <State 41>: 8.26ns
ST_41: tmp_5_6 (279)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:32  %tmp_5_6 = fadd float %tmp_5_5, %tmp_2_6


 <State 42>: 8.26ns
ST_42: tmp_5_6 (279)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:32  %tmp_5_6 = fadd float %tmp_5_5, %tmp_2_6


 <State 43>: 8.26ns
ST_43: tmp_5_6 (279)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:32  %tmp_5_6 = fadd float %tmp_5_5, %tmp_2_6


 <State 44>: 8.26ns
ST_44: tmp_5_7 (283)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:36  %tmp_5_7 = fadd float %tmp_5_6, %tmp_2_7


 <State 45>: 8.26ns
ST_45: tmp_5_7 (283)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:36  %tmp_5_7 = fadd float %tmp_5_6, %tmp_2_7


 <State 46>: 8.26ns
ST_46: tmp_5_7 (283)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:36  %tmp_5_7 = fadd float %tmp_5_6, %tmp_2_7


 <State 47>: 8.26ns
ST_47: tmp_5_7 (283)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:36  %tmp_5_7 = fadd float %tmp_5_6, %tmp_2_7


 <State 48>: 8.26ns
ST_48: tmp_5_7 (283)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:36  %tmp_5_7 = fadd float %tmp_5_6, %tmp_2_7


 <State 49>: 8.26ns
ST_49: tmp_5_8 (287)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:40  %tmp_5_8 = fadd float %tmp_5_7, %tmp_2_8


 <State 50>: 8.26ns
ST_50: tmp_5_8 (287)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:40  %tmp_5_8 = fadd float %tmp_5_7, %tmp_2_8


 <State 51>: 8.26ns
ST_51: tmp_5_8 (287)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:40  %tmp_5_8 = fadd float %tmp_5_7, %tmp_2_8


 <State 52>: 8.26ns
ST_52: tmp_5_8 (287)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:40  %tmp_5_8 = fadd float %tmp_5_7, %tmp_2_8


 <State 53>: 8.26ns
ST_53: tmp_5_8 (287)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:40  %tmp_5_8 = fadd float %tmp_5_7, %tmp_2_8


 <State 54>: 8.26ns
ST_54: tmp_5_9 (291)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:44  %tmp_5_9 = fadd float %tmp_5_8, %tmp_2_9


 <State 55>: 8.26ns
ST_55: tmp_5_9 (291)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:44  %tmp_5_9 = fadd float %tmp_5_8, %tmp_2_9


 <State 56>: 8.26ns
ST_56: tmp_5_9 (291)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:44  %tmp_5_9 = fadd float %tmp_5_8, %tmp_2_9


 <State 57>: 8.26ns
ST_57: tmp_5_9 (291)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:44  %tmp_5_9 = fadd float %tmp_5_8, %tmp_2_9


 <State 58>: 8.26ns
ST_58: tmp_5_9 (291)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:44  %tmp_5_9 = fadd float %tmp_5_8, %tmp_2_9


 <State 59>: 8.26ns
ST_59: tmp_5_s (295)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:48  %tmp_5_s = fadd float %tmp_5_9, %tmp_2_s


 <State 60>: 8.26ns
ST_60: tmp_5_s (295)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:48  %tmp_5_s = fadd float %tmp_5_9, %tmp_2_s


 <State 61>: 8.26ns
ST_61: tmp_5_s (295)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:48  %tmp_5_s = fadd float %tmp_5_9, %tmp_2_s


 <State 62>: 8.26ns
ST_62: tmp_5_s (295)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:48  %tmp_5_s = fadd float %tmp_5_9, %tmp_2_s


 <State 63>: 8.26ns
ST_63: tmp_5_s (295)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:48  %tmp_5_s = fadd float %tmp_5_9, %tmp_2_s


 <State 64>: 8.26ns
ST_64: tmp_5_10 (299)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:52  %tmp_5_10 = fadd float %tmp_5_s, %tmp_2_10


 <State 65>: 8.26ns
ST_65: tmp_5_10 (299)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:52  %tmp_5_10 = fadd float %tmp_5_s, %tmp_2_10


 <State 66>: 8.26ns
ST_66: tmp_5_10 (299)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:52  %tmp_5_10 = fadd float %tmp_5_s, %tmp_2_10


 <State 67>: 8.26ns
ST_67: tmp_5_10 (299)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:52  %tmp_5_10 = fadd float %tmp_5_s, %tmp_2_10


 <State 68>: 8.26ns
ST_68: tmp_5_10 (299)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:52  %tmp_5_10 = fadd float %tmp_5_s, %tmp_2_10


 <State 69>: 8.26ns
ST_69: tmp_5_11 (303)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:56  %tmp_5_11 = fadd float %tmp_5_10, %tmp_2_11


 <State 70>: 8.26ns
ST_70: tmp_5_11 (303)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:56  %tmp_5_11 = fadd float %tmp_5_10, %tmp_2_11


 <State 71>: 8.26ns
ST_71: tmp_5_11 (303)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:56  %tmp_5_11 = fadd float %tmp_5_10, %tmp_2_11


 <State 72>: 8.26ns
ST_72: tmp_5_11 (303)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:56  %tmp_5_11 = fadd float %tmp_5_10, %tmp_2_11


 <State 73>: 8.26ns
ST_73: tmp_5_11 (303)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:56  %tmp_5_11 = fadd float %tmp_5_10, %tmp_2_11


 <State 74>: 8.26ns
ST_74: tmp_5_12 (307)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:60  %tmp_5_12 = fadd float %tmp_5_11, %tmp_2_12


 <State 75>: 8.26ns
ST_75: tmp_5_12 (307)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:60  %tmp_5_12 = fadd float %tmp_5_11, %tmp_2_12


 <State 76>: 8.26ns
ST_76: tmp_5_12 (307)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:60  %tmp_5_12 = fadd float %tmp_5_11, %tmp_2_12


 <State 77>: 8.26ns
ST_77: tmp_5_12 (307)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:60  %tmp_5_12 = fadd float %tmp_5_11, %tmp_2_12


 <State 78>: 8.26ns
ST_78: tmp_5_12 (307)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:60  %tmp_5_12 = fadd float %tmp_5_11, %tmp_2_12


 <State 79>: 8.26ns
ST_79: tmp_5_13 (311)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:64  %tmp_5_13 = fadd float %tmp_5_12, %tmp_2_13


 <State 80>: 8.26ns
ST_80: tmp_5_13 (311)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:64  %tmp_5_13 = fadd float %tmp_5_12, %tmp_2_13


 <State 81>: 8.26ns
ST_81: tmp_5_13 (311)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:64  %tmp_5_13 = fadd float %tmp_5_12, %tmp_2_13


 <State 82>: 8.26ns
ST_82: tmp_5_13 (311)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:64  %tmp_5_13 = fadd float %tmp_5_12, %tmp_2_13


 <State 83>: 8.26ns
ST_83: tmp_5_13 (311)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:64  %tmp_5_13 = fadd float %tmp_5_12, %tmp_2_13


 <State 84>: 8.26ns
ST_84: tmp_5_14 (315)  [5/5] 8.26ns  loc: matmul.c:43
.loopexit:68  %tmp_5_14 = fadd float %tmp_5_13, %tmp_2_14


 <State 85>: 8.26ns
ST_85: tmp_5_14 (315)  [4/5] 8.26ns  loc: matmul.c:43
.loopexit:68  %tmp_5_14 = fadd float %tmp_5_13, %tmp_2_14


 <State 86>: 8.26ns
ST_86: tmp_5_14 (315)  [3/5] 8.26ns  loc: matmul.c:43
.loopexit:68  %tmp_5_14 = fadd float %tmp_5_13, %tmp_2_14


 <State 87>: 8.26ns
ST_87: tmp_5_14 (315)  [2/5] 8.26ns  loc: matmul.c:43
.loopexit:68  %tmp_5_14 = fadd float %tmp_5_13, %tmp_2_14


 <State 88>: 8.26ns
ST_88: tmp_5_14 (315)  [1/5] 8.26ns  loc: matmul.c:43
.loopexit:68  %tmp_5_14 = fadd float %tmp_5_13, %tmp_2_14


 <State 89>: 2.71ns
ST_89: tmp_19_cast (250)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:3  %tmp_19_cast = zext i10 %tmp_18 to i64

ST_89: c_addr (251)  [1/1] 0.00ns  loc: matmul.c:46
.loopexit:4  %c_addr = getelementptr [256 x float]* %c, i64 0, i64 %tmp_19_cast

ST_89: StgValue_554 (316)  [1/1] 2.71ns  loc: matmul.c:46
.loopexit:69  store float %tmp_5_14, float* %c_addr, align 4

ST_89: empty (317)  [1/1] 0.00ns  loc: matmul.c:47
.loopexit:70  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_89: StgValue_556 (319)  [1/1] 0.00ns  loc: matmul.c:23
.loopexit:72  br label %.preheader7


 <State 90>: 0.00ns
ST_90: StgValue_557 (321)  [1/1] 0.00ns  loc: matmul.c:49
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [61]  (1.57 ns)

 <State 2>: 6.45ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matmul.c:23) [63]  (0 ns)
	'icmp' operation ('exitcond', matmul.c:23) [87]  (2.37 ns)
	'select' operation ('j_mid2', matmul.c:23) [88]  (1.37 ns)
	'getelementptr' operation ('b_0_addr', matmul.c:38) [176]  (0 ns)
	'load' operation ('b_0_load', matmul.c:38) on array 'b_0' [197]  (2.71 ns)

 <State 3>: 5.1ns
The critical path consists of the following:
	'load' operation ('b_0_load', matmul.c:38) on array 'b_0' [197]  (2.71 ns)
	'store' operation (matmul.c:38) of variable 'b_0_load', matmul.c:38 on array 'b_copy[0]', matmul.c:18 [199]  (2.39 ns)

 <State 4>: 5.1ns
The critical path consists of the following:
	'load' operation ('b_0_load_1', matmul.c:38) on array 'b_0' [200]  (2.71 ns)
	'store' operation (matmul.c:38) of variable 'b_0_load_1', matmul.c:38 on array 'b_copy[1]', matmul.c:18 [202]  (2.39 ns)

 <State 5>: 8.17ns
The critical path consists of the following:
	'load' operation ('b_copy_0_load', matmul.c:43) on array 'b_copy[0]', matmul.c:18 [253]  (2.39 ns)
	'fmul' operation ('tmp_s', matmul.c:43) [254]  (5.78 ns)

 <State 6>: 8.17ns
The critical path consists of the following:
	'load' operation ('b_copy_1_load', matmul.c:43) on array 'b_copy[1]', matmul.c:18 [257]  (2.39 ns)
	'fmul' operation ('tmp_2_1', matmul.c:43) [258]  (5.78 ns)

 <State 7>: 8.17ns
The critical path consists of the following:
	'load' operation ('b_copy_2_load', matmul.c:43) on array 'b_copy[2]', matmul.c:18 [261]  (2.39 ns)
	'fmul' operation ('tmp_2_2', matmul.c:43) [262]  (5.78 ns)

 <State 8>: 8.17ns
The critical path consists of the following:
	'load' operation ('b_copy_3_load', matmul.c:43) on array 'b_copy[3]', matmul.c:18 [265]  (2.39 ns)
	'fmul' operation ('tmp_2_3', matmul.c:43) [266]  (5.78 ns)

 <State 9>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', matmul.c:43) [255]  (8.26 ns)

 <State 10>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', matmul.c:43) [255]  (8.26 ns)

 <State 11>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', matmul.c:43) [255]  (8.26 ns)

 <State 12>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', matmul.c:43) [255]  (8.26 ns)

 <State 13>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', matmul.c:43) [255]  (8.26 ns)

 <State 14>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_1', matmul.c:43) [259]  (8.26 ns)

 <State 15>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_1', matmul.c:43) [259]  (8.26 ns)

 <State 16>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_1', matmul.c:43) [259]  (8.26 ns)

 <State 17>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_1', matmul.c:43) [259]  (8.26 ns)

 <State 18>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_1', matmul.c:43) [259]  (8.26 ns)

 <State 19>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_2', matmul.c:43) [263]  (8.26 ns)

 <State 20>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_2', matmul.c:43) [263]  (8.26 ns)

 <State 21>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_2', matmul.c:43) [263]  (8.26 ns)

 <State 22>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_2', matmul.c:43) [263]  (8.26 ns)

 <State 23>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_2', matmul.c:43) [263]  (8.26 ns)

 <State 24>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_3', matmul.c:43) [267]  (8.26 ns)

 <State 25>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_3', matmul.c:43) [267]  (8.26 ns)

 <State 26>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_3', matmul.c:43) [267]  (8.26 ns)

 <State 27>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_3', matmul.c:43) [267]  (8.26 ns)

 <State 28>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_3', matmul.c:43) [267]  (8.26 ns)

 <State 29>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_4', matmul.c:43) [271]  (8.26 ns)

 <State 30>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_4', matmul.c:43) [271]  (8.26 ns)

 <State 31>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_4', matmul.c:43) [271]  (8.26 ns)

 <State 32>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_4', matmul.c:43) [271]  (8.26 ns)

 <State 33>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_4', matmul.c:43) [271]  (8.26 ns)

 <State 34>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_5', matmul.c:43) [275]  (8.26 ns)

 <State 35>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_5', matmul.c:43) [275]  (8.26 ns)

 <State 36>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_5', matmul.c:43) [275]  (8.26 ns)

 <State 37>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_5', matmul.c:43) [275]  (8.26 ns)

 <State 38>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_5', matmul.c:43) [275]  (8.26 ns)

 <State 39>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_6', matmul.c:43) [279]  (8.26 ns)

 <State 40>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_6', matmul.c:43) [279]  (8.26 ns)

 <State 41>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_6', matmul.c:43) [279]  (8.26 ns)

 <State 42>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_6', matmul.c:43) [279]  (8.26 ns)

 <State 43>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_6', matmul.c:43) [279]  (8.26 ns)

 <State 44>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_7', matmul.c:43) [283]  (8.26 ns)

 <State 45>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_7', matmul.c:43) [283]  (8.26 ns)

 <State 46>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_7', matmul.c:43) [283]  (8.26 ns)

 <State 47>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_7', matmul.c:43) [283]  (8.26 ns)

 <State 48>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_7', matmul.c:43) [283]  (8.26 ns)

 <State 49>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_8', matmul.c:43) [287]  (8.26 ns)

 <State 50>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_8', matmul.c:43) [287]  (8.26 ns)

 <State 51>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_8', matmul.c:43) [287]  (8.26 ns)

 <State 52>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_8', matmul.c:43) [287]  (8.26 ns)

 <State 53>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_8', matmul.c:43) [287]  (8.26 ns)

 <State 54>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_9', matmul.c:43) [291]  (8.26 ns)

 <State 55>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_9', matmul.c:43) [291]  (8.26 ns)

 <State 56>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_9', matmul.c:43) [291]  (8.26 ns)

 <State 57>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_9', matmul.c:43) [291]  (8.26 ns)

 <State 58>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_9', matmul.c:43) [291]  (8.26 ns)

 <State 59>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_s', matmul.c:43) [295]  (8.26 ns)

 <State 60>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_s', matmul.c:43) [295]  (8.26 ns)

 <State 61>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_s', matmul.c:43) [295]  (8.26 ns)

 <State 62>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_s', matmul.c:43) [295]  (8.26 ns)

 <State 63>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_s', matmul.c:43) [295]  (8.26 ns)

 <State 64>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_10', matmul.c:43) [299]  (8.26 ns)

 <State 65>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_10', matmul.c:43) [299]  (8.26 ns)

 <State 66>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_10', matmul.c:43) [299]  (8.26 ns)

 <State 67>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_10', matmul.c:43) [299]  (8.26 ns)

 <State 68>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_10', matmul.c:43) [299]  (8.26 ns)

 <State 69>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_11', matmul.c:43) [303]  (8.26 ns)

 <State 70>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_11', matmul.c:43) [303]  (8.26 ns)

 <State 71>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_11', matmul.c:43) [303]  (8.26 ns)

 <State 72>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_11', matmul.c:43) [303]  (8.26 ns)

 <State 73>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_11', matmul.c:43) [303]  (8.26 ns)

 <State 74>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_12', matmul.c:43) [307]  (8.26 ns)

 <State 75>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_12', matmul.c:43) [307]  (8.26 ns)

 <State 76>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_12', matmul.c:43) [307]  (8.26 ns)

 <State 77>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_12', matmul.c:43) [307]  (8.26 ns)

 <State 78>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_12', matmul.c:43) [307]  (8.26 ns)

 <State 79>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_13', matmul.c:43) [311]  (8.26 ns)

 <State 80>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_13', matmul.c:43) [311]  (8.26 ns)

 <State 81>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_13', matmul.c:43) [311]  (8.26 ns)

 <State 82>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_13', matmul.c:43) [311]  (8.26 ns)

 <State 83>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_13', matmul.c:43) [311]  (8.26 ns)

 <State 84>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_14', matmul.c:43) [315]  (8.26 ns)

 <State 85>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_14', matmul.c:43) [315]  (8.26 ns)

 <State 86>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_14', matmul.c:43) [315]  (8.26 ns)

 <State 87>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_14', matmul.c:43) [315]  (8.26 ns)

 <State 88>: 8.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5_14', matmul.c:43) [315]  (8.26 ns)

 <State 89>: 2.71ns
The critical path consists of the following:
	'getelementptr' operation ('c_addr', matmul.c:46) [251]  (0 ns)
	'store' operation (matmul.c:46) of variable 'tmp_5_14', matmul.c:43 on array 'c' [316]  (2.71 ns)

 <State 90>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
