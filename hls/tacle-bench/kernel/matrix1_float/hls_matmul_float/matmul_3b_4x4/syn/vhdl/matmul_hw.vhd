-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_EN_A : OUT STD_LOGIC;
    a_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_Clk_A : OUT STD_LOGIC;
    a_Rst_A : OUT STD_LOGIC;
    b_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_EN_A : OUT STD_LOGIC;
    b_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_Clk_A : OUT STD_LOGIC;
    b_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1491,HLS_SYN_LUT=2654}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv61_1 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_252 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_263 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_274 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal tmp_3_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_304_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_next_reg_1239 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_mid2_fu_322_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1244 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid2_fu_342_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_1254 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_mid2_v_fu_350_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid2_v_reg_1274 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_358_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1279 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_376_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1297 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_1336 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1349 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_540_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1365 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_fu_602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_709_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_1_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_804_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_901_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1410 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_914_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_1415 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_row_load_3_fu_962_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_3_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_2_fu_969_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1068_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1430 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1435 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_2_1_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_2_1_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_2_2_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter3_tmp_2_3_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1455 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_1_reg_1460 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_5_2_reg_1465 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_5_3_reg_1470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_256_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_phi_fu_267_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_phi_fu_278_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_397_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_cast_fu_420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_593_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_610_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_770_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_cast_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_1111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_load_s_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_9_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_8_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_row_load_7_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_11_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_18_fu_533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_8_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_17_fu_526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_12_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_16_fu_519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_1_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_3_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_11_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_18_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_8_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_17_fu_695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_12_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_16_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_1_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_3_fu_681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_11_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_18_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_8_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_17_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_12_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_16_fu_880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_1_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_3_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_11_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_18_fu_1061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_8_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_17_fu_1054_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_12_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_16_fu_1047_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_1_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_3_fu_1040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_310_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_392_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_cast_fu_411_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_414_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_copy_0_3_fu_430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_4_fu_443_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_5_fu_464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_6_fu_472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_9_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_2_fu_456_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_7_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_14_fu_496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_0_3_15_fu_504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_540_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_540_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_588_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_copy_1_3_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_4_fu_625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_5_fu_639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_6_fu_646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_9_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_2_fu_632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_7_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_14_fu_667_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_1_3_15_fu_674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_709_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_765_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_cast5_fu_790_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_fu_793_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_cast_fu_762_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_cast6_fu_787_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_copy_2_3_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_4_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_5_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_6_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_9_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_2_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_7_fu_845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_14_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_2_3_15_fu_866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_901_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_fu_977_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_4_fu_984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_5_fu_998_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_6_fu_1005_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_9_fu_1019_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_2_fu_991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_7_fu_1012_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_14_fu_1026_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_copy_3_3_15_fu_1033_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1068_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1068_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1068_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component matmul_hw_fadd_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_fmul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matmul_hw_mux_42_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_fadd_32bkb_U1 : component matmul_hw_fadd_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_285_p0,
        din1 => grp_fu_285_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_285_p2);

    matmul_hw_fmul_32cud_U2 : component matmul_hw_fmul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_290_p0,
        din1 => grp_fu_290_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_290_p2);

    matmul_hw_mux_42_dEe_U3 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_4_fu_540_p1,
        din2 => tmp_4_fu_540_p2,
        din3 => tmp_4_fu_540_p3,
        din4 => tmp_4_fu_540_p4,
        din5 => tmp_reg_1297,
        dout => tmp_4_fu_540_p6);

    matmul_hw_mux_42_dEe_U4 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_7_fu_709_p1,
        din2 => tmp_7_fu_709_p2,
        din3 => tmp_7_fu_709_p3,
        din4 => tmp_7_fu_709_p4,
        din5 => tmp_reg_1297,
        dout => tmp_7_fu_709_p6);

    matmul_hw_mux_42_dEe_U5 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_8_fu_901_p1,
        din2 => tmp_8_fu_901_p2,
        din3 => tmp_8_fu_901_p3,
        din4 => tmp_8_fu_901_p4,
        din5 => tmp_reg_1297,
        dout => tmp_8_fu_901_p6);

    matmul_hw_mux_42_dEe_U6 : component matmul_hw_mux_42_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => tmp_9_fu_1068_p1,
        din2 => tmp_9_fu_1068_p2,
        din3 => tmp_9_fu_1068_p3,
        din4 => tmp_9_fu_1068_p4,
        din5 => tmp_reg_1297,
        dout => tmp_9_fu_1068_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_298_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((exitcond_flatten_reg_1235 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                i_reg_263 <= tmp_1_mid2_v_reg_1274;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_263 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                indvar_flatten_reg_252 <= indvar_flatten_next_reg_1239;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_252 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                j_reg_274 <= j_1_reg_1415;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_274 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_load_3_reg_1420 <= a_row_load_3_fu_962_p3;
                tmp_9_reg_1430 <= tmp_9_fu_1068_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                a_row_load_7_fu_100 <= a_row_load_3_fu_962_p3;
                a_row_load_8_fu_96 <= a_row_load_2_fu_969_p3;
                b_copy_3_3_11_fu_152 <= b_copy_3_3_18_fu_1061_p3;
                b_copy_3_3_12_fu_160 <= b_copy_3_3_16_fu_1047_p3;
                b_copy_3_3_1_fu_164 <= b_copy_3_3_3_fu_1040_p3;
                b_copy_3_3_8_fu_156 <= b_copy_3_3_17_fu_1054_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_row_load_9_fu_92 <= a_row_load_1_fu_779_p3;
                b_copy_2_3_11_fu_136 <= b_copy_2_3_18_fu_894_p3;
                b_copy_2_3_12_fu_144 <= b_copy_2_3_16_fu_880_p3;
                b_copy_2_3_1_fu_148 <= b_copy_2_3_3_fu_873_p3;
                b_copy_2_3_8_fu_140 <= b_copy_2_3_17_fu_887_p3;
                j_1_reg_1415 <= j_1_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                a_row_load_s_fu_88 <= a_row_load_fu_602_p3;
                b_copy_1_3_11_fu_120 <= b_copy_1_3_18_fu_702_p3;
                b_copy_1_3_12_fu_128 <= b_copy_1_3_16_fu_688_p3;
                b_copy_1_3_1_fu_132 <= b_copy_1_3_3_fu_681_p3;
                b_copy_1_3_8_fu_124 <= b_copy_1_3_17_fu_695_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235 <= exitcond_flatten_reg_1235;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235;
                ap_pipeline_reg_pp0_iter3_tmp_2_3_reg_1450 <= tmp_2_3_reg_1450;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235;
                ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1450 <= ap_pipeline_reg_pp0_iter3_tmp_2_3_reg_1450;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235;
                ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1450 <= ap_pipeline_reg_pp0_iter4_tmp_2_3_reg_1450;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1235;
                exitcond_flatten_reg_1235 <= exitcond_flatten_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405 <= tmp_20_reg_1405;
                ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter1_tmp_20_reg_1405;
                ap_pipeline_reg_pp0_iter2_tmp_2_2_reg_1445 <= tmp_2_2_reg_1445;
                ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter2_tmp_20_reg_1405;
                ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1445 <= ap_pipeline_reg_pp0_iter2_tmp_2_2_reg_1445;
                ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter3_tmp_20_reg_1405;
                ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405 <= ap_pipeline_reg_pp0_iter4_tmp_20_reg_1405;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                ap_pipeline_reg_pp0_iter2_tmp_2_1_reg_1440 <= tmp_2_1_reg_1440;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0))) then
                b_copy_0_3_11_fu_104 <= b_copy_0_3_18_fu_533_p3;
                b_copy_0_3_12_fu_112 <= b_copy_0_3_16_fu_519_p3;
                b_copy_0_3_1_fu_116 <= b_copy_0_3_3_fu_512_p3;
                b_copy_0_3_8_fu_108 <= b_copy_0_3_17_fu_526_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1239 <= indvar_flatten_next_fu_304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_298_p2))) then
                j_mid2_reg_1244 <= j_mid2_fu_322_p3;
                    tmp_1_reg_1279(4 downto 2) <= tmp_1_fu_358_p3(4 downto 2);
                tmp_mid2_reg_1254 <= tmp_mid2_fu_342_p3;
                tmp_reg_1297 <= tmp_fu_376_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = tmp_3_reg_1313))))) then
                reg_294 <= a_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_1235 = ap_const_lv1_0))) then
                sel_tmp2_reg_1336 <= sel_tmp2_fu_438_p2;
                sel_tmp4_reg_1349 <= sel_tmp4_fu_451_p2;
                sel_tmp_reg_1326 <= sel_tmp_fu_425_p2;
                tmp_3_reg_1313 <= tmp_3_fu_406_p2;
                tmp_4_reg_1365 <= tmp_4_fu_540_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_298_p2))) then
                tmp_1_mid2_v_reg_1274 <= tmp_1_mid2_v_fu_350_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_20_reg_1405 <= tmp_20_fu_804_p2;
                tmp_8_reg_1410 <= tmp_8_fu_901_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) then
                tmp_2_1_reg_1440 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) then
                tmp_2_2_reg_1445 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                tmp_2_3_reg_1450 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1235))) then
                tmp_5_1_reg_1460 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1235))) then
                tmp_5_2_reg_1465 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235))) then
                tmp_5_3_reg_1470 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1235))) then
                tmp_5_reg_1455 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_7_reg_1385 <= tmp_7_fu_709_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1235))) then
                tmp_s_reg_1435 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_1279(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, exitcond_flatten_fu_298_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_298_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter5))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    a_Addr_A <= std_logic_vector(shift_left(unsigned(a_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_10_fu_366_p1, tmp_12_fu_397_p3, tmp_14_fu_593_p3, tmp_16_fu_770_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_Addr_A_orig <= tmp_16_fu_770_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_Addr_A_orig <= tmp_14_fu_593_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_Addr_A_orig <= tmp_12_fu_397_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_Addr_A_orig <= tmp_10_fu_366_p1(32 - 1 downto 0);
            else 
                a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_Clk_A <= ap_clk;
    a_Din_A <= ap_const_lv32_0;

    a_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            a_EN_A <= ap_const_logic_1;
        else 
            a_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_Rst_A <= ap_rst;
    a_WEN_A <= ap_const_lv4_0;
    a_row_load_1_fu_779_p3 <= 
        reg_294 when (tmp_3_reg_1313(0) = '1') else 
        a_row_load_9_fu_92;
    a_row_load_2_fu_969_p3 <= 
        reg_294 when (tmp_3_reg_1313(0) = '1') else 
        a_row_load_8_fu_96;
    a_row_load_3_fu_962_p3 <= 
        a_Dout_A when (tmp_3_reg_1313(0) = '1') else 
        a_row_load_7_fu_100;
    a_row_load_fu_602_p3 <= 
        reg_294 when (tmp_3_reg_1313(0) = '1') else 
        a_row_load_s_fu_88;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state29 <= ap_CS_fsm(5 downto 5);

    ap_done_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_Addr_A <= std_logic_vector(shift_left(unsigned(b_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_6_fu_371_p1, tmp_17_cast_fu_420_p1, tmp_18_fu_610_p3, tmp_19_cast_fu_799_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_Addr_A_orig <= tmp_19_cast_fu_799_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_Addr_A_orig <= tmp_18_fu_610_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_Addr_A_orig <= tmp_17_cast_fu_420_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_Addr_A_orig <= tmp_6_fu_371_p1(32 - 1 downto 0);
            else 
                b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_Clk_A <= ap_clk;
    b_Din_A <= ap_const_lv32_0;

    b_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_EN_A <= ap_const_logic_1;
        else 
            b_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_Rst_A <= ap_rst;
    b_WEN_A <= ap_const_lv4_0;
    b_copy_0_3_14_fu_496_p3 <= 
        b_copy_0_3_8_fu_108 when (sel_tmp4_fu_451_p2(0) = '1') else 
        b_copy_0_3_9_fu_488_p3;
    b_copy_0_3_15_fu_504_p3 <= 
        b_Dout_A when (sel_tmp4_fu_451_p2(0) = '1') else 
        b_copy_0_3_11_fu_104;
    b_copy_0_3_16_fu_519_p3 <= 
        b_copy_0_3_7_fu_480_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_12_fu_112;
    b_copy_0_3_17_fu_526_p3 <= 
        b_copy_0_3_14_fu_496_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_8_fu_108;
    b_copy_0_3_18_fu_533_p3 <= 
        b_copy_0_3_15_fu_504_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_11_fu_104;
    b_copy_0_3_2_fu_456_p3 <= 
        b_copy_0_3_1_fu_116 when (sel_tmp4_fu_451_p2(0) = '1') else 
        b_copy_0_3_4_fu_443_p3;
    b_copy_0_3_3_fu_512_p3 <= 
        b_copy_0_3_2_fu_456_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_1_fu_116;
    b_copy_0_3_4_fu_443_p3 <= 
        b_copy_0_3_1_fu_116 when (sel_tmp2_fu_438_p2(0) = '1') else 
        b_copy_0_3_fu_430_p3;
    b_copy_0_3_5_fu_464_p3 <= 
        b_Dout_A when (sel_tmp_fu_425_p2(0) = '1') else 
        b_copy_0_3_12_fu_112;
    b_copy_0_3_6_fu_472_p3 <= 
        b_copy_0_3_12_fu_112 when (sel_tmp2_fu_438_p2(0) = '1') else 
        b_copy_0_3_5_fu_464_p3;
    b_copy_0_3_7_fu_480_p3 <= 
        b_copy_0_3_12_fu_112 when (sel_tmp4_fu_451_p2(0) = '1') else 
        b_copy_0_3_6_fu_472_p3;
    b_copy_0_3_9_fu_488_p3 <= 
        b_Dout_A when (sel_tmp2_fu_438_p2(0) = '1') else 
        b_copy_0_3_8_fu_108;
    b_copy_0_3_fu_430_p3 <= 
        b_copy_0_3_1_fu_116 when (sel_tmp_fu_425_p2(0) = '1') else 
        b_Dout_A;
    b_copy_1_3_14_fu_667_p3 <= 
        b_copy_1_3_8_fu_124 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_1_3_9_fu_660_p3;
    b_copy_1_3_15_fu_674_p3 <= 
        b_Dout_A when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_1_3_11_fu_120;
    b_copy_1_3_16_fu_688_p3 <= 
        b_copy_1_3_7_fu_653_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_12_fu_128;
    b_copy_1_3_17_fu_695_p3 <= 
        b_copy_1_3_14_fu_667_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_8_fu_124;
    b_copy_1_3_18_fu_702_p3 <= 
        b_copy_1_3_15_fu_674_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_11_fu_120;
    b_copy_1_3_2_fu_632_p3 <= 
        b_copy_1_3_1_fu_132 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_1_3_4_fu_625_p3;
    b_copy_1_3_3_fu_681_p3 <= 
        b_copy_1_3_2_fu_632_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_1_fu_132;
    b_copy_1_3_4_fu_625_p3 <= 
        b_copy_1_3_1_fu_132 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_1_3_fu_618_p3;
    b_copy_1_3_5_fu_639_p3 <= 
        b_Dout_A when (sel_tmp_reg_1326(0) = '1') else 
        b_copy_1_3_12_fu_128;
    b_copy_1_3_6_fu_646_p3 <= 
        b_copy_1_3_12_fu_128 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_1_3_5_fu_639_p3;
    b_copy_1_3_7_fu_653_p3 <= 
        b_copy_1_3_12_fu_128 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_1_3_6_fu_646_p3;
    b_copy_1_3_9_fu_660_p3 <= 
        b_Dout_A when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_1_3_8_fu_124;
    b_copy_1_3_fu_618_p3 <= 
        b_copy_1_3_1_fu_132 when (sel_tmp_reg_1326(0) = '1') else 
        b_Dout_A;
    b_copy_2_3_14_fu_859_p3 <= 
        b_copy_2_3_8_fu_140 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_2_3_9_fu_852_p3;
    b_copy_2_3_15_fu_866_p3 <= 
        b_Dout_A when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_2_3_11_fu_136;
    b_copy_2_3_16_fu_880_p3 <= 
        b_copy_2_3_7_fu_845_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_12_fu_144;
    b_copy_2_3_17_fu_887_p3 <= 
        b_copy_2_3_14_fu_859_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_8_fu_140;
    b_copy_2_3_18_fu_894_p3 <= 
        b_copy_2_3_15_fu_866_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_11_fu_136;
    b_copy_2_3_2_fu_824_p3 <= 
        b_copy_2_3_1_fu_148 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_2_3_4_fu_817_p3;
    b_copy_2_3_3_fu_873_p3 <= 
        b_copy_2_3_2_fu_824_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_1_fu_148;
    b_copy_2_3_4_fu_817_p3 <= 
        b_copy_2_3_1_fu_148 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_2_3_fu_810_p3;
    b_copy_2_3_5_fu_831_p3 <= 
        b_Dout_A when (sel_tmp_reg_1326(0) = '1') else 
        b_copy_2_3_12_fu_144;
    b_copy_2_3_6_fu_838_p3 <= 
        b_copy_2_3_12_fu_144 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_2_3_5_fu_831_p3;
    b_copy_2_3_7_fu_845_p3 <= 
        b_copy_2_3_12_fu_144 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_2_3_6_fu_838_p3;
    b_copy_2_3_9_fu_852_p3 <= 
        b_Dout_A when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_2_3_8_fu_140;
    b_copy_2_3_fu_810_p3 <= 
        b_copy_2_3_1_fu_148 when (sel_tmp_reg_1326(0) = '1') else 
        b_Dout_A;
    b_copy_3_3_14_fu_1026_p3 <= 
        b_copy_3_3_8_fu_156 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_3_3_9_fu_1019_p3;
    b_copy_3_3_15_fu_1033_p3 <= 
        b_Dout_A when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_3_3_11_fu_152;
    b_copy_3_3_16_fu_1047_p3 <= 
        b_copy_3_3_7_fu_1012_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_12_fu_160;
    b_copy_3_3_17_fu_1054_p3 <= 
        b_copy_3_3_14_fu_1026_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_8_fu_156;
    b_copy_3_3_18_fu_1061_p3 <= 
        b_copy_3_3_15_fu_1033_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_11_fu_152;
    b_copy_3_3_2_fu_991_p3 <= 
        b_copy_3_3_1_fu_164 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_3_3_4_fu_984_p3;
    b_copy_3_3_3_fu_1040_p3 <= 
        b_copy_3_3_2_fu_991_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_1_fu_164;
    b_copy_3_3_4_fu_984_p3 <= 
        b_copy_3_3_1_fu_164 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_3_3_fu_977_p3;
    b_copy_3_3_5_fu_998_p3 <= 
        b_Dout_A when (sel_tmp_reg_1326(0) = '1') else 
        b_copy_3_3_12_fu_160;
    b_copy_3_3_6_fu_1005_p3 <= 
        b_copy_3_3_12_fu_160 when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_3_3_5_fu_998_p3;
    b_copy_3_3_7_fu_1012_p3 <= 
        b_copy_3_3_12_fu_160 when (sel_tmp4_reg_1349(0) = '1') else 
        b_copy_3_3_6_fu_1005_p3;
    b_copy_3_3_9_fu_1019_p3 <= 
        b_Dout_A when (sel_tmp2_reg_1336(0) = '1') else 
        b_copy_3_3_8_fu_156;
    b_copy_3_3_fu_977_p3 <= 
        b_copy_3_3_1_fu_164 when (sel_tmp_reg_1326(0) = '1') else 
        b_Dout_A;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_20_cast_fu_1111_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= tmp_5_3_reg_1470;

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235, ap_enable_reg_pp0_iter6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1235)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_298_p2 <= "1" when (indvar_flatten_phi_fu_256_p4 = ap_const_lv5_10) else "0";
    exitcond_fu_316_p2 <= "1" when (j_phi_fu_278_p4 = ap_const_lv3_4) else "0";

    grp_fu_285_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_s_reg_1435, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_5_reg_1455, tmp_5_1_reg_1460, tmp_5_2_reg_1465, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_285_p0 <= tmp_5_2_reg_1465;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_285_p0 <= tmp_5_1_reg_1460;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_285_p0 <= tmp_5_reg_1455;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_285_p0 <= tmp_s_reg_1435;
        else 
            grp_fu_285_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter2_tmp_2_1_reg_1440, ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1445, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1450, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            grp_fu_285_p1 <= ap_pipeline_reg_pp0_iter5_tmp_2_3_reg_1450;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            grp_fu_285_p1 <= ap_pipeline_reg_pp0_iter3_tmp_2_2_reg_1445;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_285_p1 <= ap_pipeline_reg_pp0_iter2_tmp_2_1_reg_1440;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_285_p1 <= ap_const_lv32_0;
        else 
            grp_fu_285_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, a_row_load_fu_602_p3, a_row_load_1_fu_779_p3, a_row_load_3_reg_1420, a_row_load_2_fu_969_p3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_290_p0 <= a_row_load_3_reg_1420;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_290_p0 <= a_row_load_2_fu_969_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_290_p0 <= a_row_load_1_fu_779_p3;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_290_p0 <= a_row_load_fu_602_p3;
        else 
            grp_fu_290_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_290_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_4_reg_1365, tmp_7_reg_1385, tmp_8_reg_1410, tmp_9_reg_1430, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_290_p1 <= tmp_9_reg_1430;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_290_p1 <= tmp_8_reg_1410;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_290_p1 <= tmp_7_reg_1385;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_290_p1 <= tmp_4_reg_1365;
        else 
            grp_fu_290_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_310_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_phi_fu_267_p4));

    i_phi_fu_267_p4_assign_proc : process(i_reg_263, exitcond_flatten_reg_1235, ap_CS_fsm_pp0_stage0, tmp_1_mid2_v_reg_1274, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            i_phi_fu_267_p4 <= tmp_1_mid2_v_reg_1274;
        else 
            i_phi_fu_267_p4 <= i_reg_263;
        end if; 
    end process;

    indvar_flatten_next_fu_304_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_256_p4) + unsigned(ap_const_lv5_1));

    indvar_flatten_phi_fu_256_p4_assign_proc : process(indvar_flatten_reg_252, exitcond_flatten_reg_1235, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1239, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            indvar_flatten_phi_fu_256_p4 <= indvar_flatten_next_reg_1239;
        else 
            indvar_flatten_phi_fu_256_p4 <= indvar_flatten_reg_252;
        end if; 
    end process;

    j_1_fu_914_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid2_reg_1244));
    j_mid2_fu_322_p3 <= 
        ap_const_lv3_0 when (exitcond_fu_316_p2(0) = '1') else 
        j_phi_fu_278_p4;

    j_phi_fu_278_p4_assign_proc : process(j_reg_274, exitcond_flatten_reg_1235, ap_CS_fsm_pp0_stage0, j_1_reg_1415, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_reg_1235 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_278_p4 <= j_1_reg_1415;
        else 
            j_phi_fu_278_p4 <= j_reg_274;
        end if; 
    end process;

    sel_tmp2_fu_438_p2 <= "1" when (tmp_reg_1297 = ap_const_lv2_1) else "0";
    sel_tmp4_fu_451_p2 <= "1" when (tmp_reg_1297 = ap_const_lv2_0) else "0";
    sel_tmp_fu_425_p2 <= "1" when (tmp_reg_1297 = ap_const_lv2_2) else "0";
    tmp1_fu_336_p2 <= "1" when (i_phi_fu_267_p4 = ap_const_lv3_0) else "0";
    tmp_10_cast_fu_762_p1 <= std_logic_vector(resize(unsigned(tmp_1_reg_1279),6));
    tmp_10_fu_366_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_358_p3),64));
    tmp_11_fu_392_p2 <= (tmp_1_reg_1279 or ap_const_lv5_1);
    tmp_12_fu_397_p3 <= (ap_const_lv59_0 & tmp_11_fu_392_p2);
    tmp_13_fu_588_p2 <= (tmp_1_reg_1279 or ap_const_lv5_2);
    tmp_14_fu_593_p3 <= (ap_const_lv59_0 & tmp_13_fu_588_p2);
    tmp_15_fu_765_p2 <= (tmp_1_reg_1279 or ap_const_lv5_3);
    tmp_16_fu_770_p3 <= (ap_const_lv59_0 & tmp_15_fu_765_p2);
    tmp_17_cast_fu_420_p1 <= std_logic_vector(resize(unsigned(tmp_17_fu_414_p2),64));
    tmp_17_fu_414_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(tmp_6_cast_fu_411_p1));
    tmp_18_fu_610_p3 <= (ap_const_lv61_1 & j_mid2_reg_1244);
    tmp_19_cast_fu_799_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_793_p2),64));
    tmp_19_fu_793_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_6_cast5_fu_790_p1));
    tmp_1_fu_358_p3 <= (tmp_1_mid2_v_fu_350_p3 & ap_const_lv2_0);
    tmp_1_mid2_v_fu_350_p3 <= 
        i_1_fu_310_p2 when (exitcond_fu_316_p2(0) = '1') else 
        i_phi_fu_267_p4;
    tmp_20_cast_fu_1111_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter5_tmp_20_reg_1405),64));
    tmp_20_fu_804_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_762_p1) + unsigned(tmp_6_cast6_fu_787_p1));
    tmp_3_fu_406_p2 <= "1" when (j_mid2_reg_1244 = ap_const_lv3_0) else "0";
    tmp_4_fu_540_p1 <= 
        b_copy_0_3_15_fu_504_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_11_fu_104;
    tmp_4_fu_540_p2 <= 
        b_copy_0_3_14_fu_496_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_8_fu_108;
    tmp_4_fu_540_p3 <= 
        b_copy_0_3_7_fu_480_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_12_fu_112;
    tmp_4_fu_540_p4 <= 
        b_copy_0_3_2_fu_456_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_0_3_1_fu_116;
    tmp_6_cast5_fu_790_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1244),5));
    tmp_6_cast6_fu_787_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1244),6));
    tmp_6_cast_fu_411_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1244),4));
    tmp_6_fu_371_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_322_p3),64));
    tmp_7_fu_709_p1 <= 
        b_copy_1_3_15_fu_674_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_11_fu_120;
    tmp_7_fu_709_p2 <= 
        b_copy_1_3_14_fu_667_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_8_fu_124;
    tmp_7_fu_709_p3 <= 
        b_copy_1_3_7_fu_653_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_12_fu_128;
    tmp_7_fu_709_p4 <= 
        b_copy_1_3_2_fu_632_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_1_3_1_fu_132;
    tmp_8_fu_901_p1 <= 
        b_copy_2_3_15_fu_866_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_11_fu_136;
    tmp_8_fu_901_p2 <= 
        b_copy_2_3_14_fu_859_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_8_fu_140;
    tmp_8_fu_901_p3 <= 
        b_copy_2_3_7_fu_845_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_12_fu_144;
    tmp_8_fu_901_p4 <= 
        b_copy_2_3_2_fu_824_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_2_3_1_fu_148;
    tmp_9_fu_1068_p1 <= 
        b_copy_3_3_15_fu_1033_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_11_fu_152;
    tmp_9_fu_1068_p2 <= 
        b_copy_3_3_14_fu_1026_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_8_fu_156;
    tmp_9_fu_1068_p3 <= 
        b_copy_3_3_7_fu_1012_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_12_fu_160;
    tmp_9_fu_1068_p4 <= 
        b_copy_3_3_2_fu_991_p3 when (tmp_mid2_reg_1254(0) = '1') else 
        b_copy_3_3_1_fu_164;
    tmp_fu_376_p1 <= j_mid2_fu_322_p3(2 - 1 downto 0);
    tmp_mid1_fu_330_p2 <= "1" when (i_1_fu_310_p2 = ap_const_lv3_0) else "0";
    tmp_mid2_fu_342_p3 <= 
        tmp_mid1_fu_330_p2 when (exitcond_fu_316_p2(0) = '1') else 
        tmp1_fu_336_p2;
end behav;
