// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=87,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=652,HLS_SYN_LUT=659}" *)

module matmul_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_Addr_A,
        a_EN_A,
        a_WEN_A,
        a_Din_A,
        a_Dout_A,
        a_Clk_A,
        a_Rst_A,
        b_Addr_A,
        b_EN_A,
        b_WEN_A,
        b_Din_A,
        b_Dout_A,
        b_Clk_A,
        b_Rst_A,
        c_Addr_A,
        c_EN_A,
        c_WEN_A,
        c_Din_A,
        c_Dout_A,
        c_Clk_A,
        c_Rst_A
);

parameter    ap_ST_fsm_state1 = 6'b1;
parameter    ap_ST_fsm_pp0_stage0 = 6'b10;
parameter    ap_ST_fsm_pp0_stage1 = 6'b100;
parameter    ap_ST_fsm_pp0_stage2 = 6'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 6'b10000;
parameter    ap_ST_fsm_state28 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv61_1 = 61'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv32_5 = 32'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] a_Addr_A;
output   a_EN_A;
output  [3:0] a_WEN_A;
output  [31:0] a_Din_A;
input  [31:0] a_Dout_A;
output   a_Clk_A;
output   a_Rst_A;
output  [31:0] b_Addr_A;
output   b_EN_A;
output  [3:0] b_WEN_A;
output  [31:0] b_Din_A;
input  [31:0] b_Dout_A;
output   b_Clk_A;
output   b_Rst_A;
output  [31:0] c_Addr_A;
output   c_EN_A;
output  [3:0] c_WEN_A;
output  [31:0] c_Din_A;
input  [31:0] c_Dout_A;
output   c_Clk_A;
output   c_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_EN_A;
reg b_EN_A;
reg c_EN_A;
reg[3:0] c_WEN_A;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_166;
reg   [2:0] i_reg_177;
reg   [2:0] j_reg_188;
wire   [0:0] exitcond_flatten_fu_210_p2;
reg   [0:0] exitcond_flatten_reg_367;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367;
reg   [0:0] ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_367;
reg   [0:0] ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_367;
reg   [0:0] ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_367;
reg   [0:0] ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_367;
reg   [0:0] ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_367;
wire   [4:0] indvar_flatten_next_fu_216_p2;
reg   [4:0] indvar_flatten_next_reg_371;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] j_mid2_fu_234_p3;
reg   [2:0] j_mid2_reg_376;
wire   [2:0] tmp_mid2_v_fu_242_p3;
reg   [2:0] tmp_mid2_v_reg_385;
wire   [4:0] tmp_fu_250_p3;
reg   [4:0] tmp_reg_390;
wire   [0:0] ap_CS_fsm_pp0_stage1;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [5:0] tmp_14_fu_352_p2;
reg   [5:0] tmp_14_reg_458;
reg   [5:0] ap_pipeline_reg_pp0_iter1_tmp_14_reg_458;
reg   [5:0] ap_pipeline_reg_pp0_iter2_tmp_14_reg_458;
reg   [5:0] ap_pipeline_reg_pp0_iter3_tmp_14_reg_458;
reg   [5:0] ap_pipeline_reg_pp0_iter4_tmp_14_reg_458;
reg   [5:0] ap_pipeline_reg_pp0_iter5_tmp_14_reg_458;
wire   [2:0] j_1_fu_358_p2;
reg   [2:0] j_1_reg_473;
wire   [31:0] grp_fu_204_p2;
reg   [31:0] tmp_6_reg_478;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] tmp_6_1_reg_493;
reg   [31:0] ap_pipeline_reg_pp0_iter2_tmp_6_1_reg_493;
reg   [31:0] tmp_6_2_reg_498;
reg   [31:0] ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498;
reg   [31:0] ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498;
reg   [31:0] tmp_6_3_reg_503;
reg   [31:0] ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_503;
reg   [31:0] ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_503;
reg   [31:0] ap_pipeline_reg_pp0_iter4_tmp_6_3_reg_503;
wire   [31:0] grp_fu_199_p2;
reg   [31:0] tmp_s_reg_508;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] tmp_1_1_reg_513;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] tmp_1_2_reg_518;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] tmp_1_3_reg_523;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter5;
reg   [4:0] indvar_flatten_phi_fu_170_p4;
reg   [2:0] i_phi_fu_181_p4;
reg   [2:0] j_phi_fu_192_p4;
wire   [63:0] tmp_3_fu_258_p1;
wire   [63:0] tmp_2_fu_263_p1;
wire   [63:0] tmp_5_fu_273_p3;
wire   [63:0] tmp_11_cast_fu_291_p1;
wire   [63:0] tmp_8_fu_301_p3;
wire   [63:0] tmp_12_fu_310_p3;
wire   [63:0] tmp_10_fu_326_p3;
wire   [63:0] tmp_13_cast_fu_347_p1;
wire   [63:0] tmp_14_cast_fu_363_p1;
reg   [31:0] a_Addr_A_orig;
reg   [31:0] b_Addr_A_orig;
wire   [31:0] c_Addr_A_orig;
reg   [31:0] grp_fu_199_p0;
reg   [31:0] grp_fu_199_p1;
wire   [0:0] exitcond_fu_228_p2;
wire   [2:0] i_1_fu_222_p2;
wire   [4:0] tmp_4_fu_268_p2;
wire   [3:0] tmp_2_cast_fu_282_p1;
wire   [3:0] tmp_11_fu_285_p2;
wire   [4:0] tmp_7_fu_296_p2;
wire   [4:0] tmp_9_fu_321_p2;
wire   [4:0] tmp_2_cast3_fu_338_p1;
wire   [4:0] tmp_13_fu_341_p2;
wire   [5:0] tmp_2_cast4_fu_335_p1;
wire   [5:0] tmp_3_cast_fu_318_p1;
wire   [0:0] ap_CS_fsm_state28;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

matmul_hw_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fadd_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_199_p0),
    .din1(grp_fu_199_p1),
    .ce(1'b1),
    .dout(grp_fu_199_p2)
);

matmul_hw_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matmul_hw_fmul_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_Dout_A),
    .din1(b_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_204_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(exitcond_flatten_fu_210_p2 == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & ~(exitcond_flatten_reg_367 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_reg_177 <= tmp_mid2_v_reg_385;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_177 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_reg_166 <= indvar_flatten_next_reg_371;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_166 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_reg_188 <= j_1_reg_473;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_reg_188 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367 <= exitcond_flatten_reg_367;
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_367 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367;
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_367 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_367;
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_367 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_367;
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_367 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_367;
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_367 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_367;
        exitcond_flatten_reg_367 <= exitcond_flatten_fu_210_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
        ap_pipeline_reg_pp0_iter1_tmp_14_reg_458 <= tmp_14_reg_458;
        ap_pipeline_reg_pp0_iter2_tmp_14_reg_458 <= ap_pipeline_reg_pp0_iter1_tmp_14_reg_458;
        ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_503 <= tmp_6_3_reg_503;
        ap_pipeline_reg_pp0_iter3_tmp_14_reg_458 <= ap_pipeline_reg_pp0_iter2_tmp_14_reg_458;
        ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_503 <= ap_pipeline_reg_pp0_iter2_tmp_6_3_reg_503;
        ap_pipeline_reg_pp0_iter4_tmp_14_reg_458 <= ap_pipeline_reg_pp0_iter3_tmp_14_reg_458;
        ap_pipeline_reg_pp0_iter4_tmp_6_3_reg_503 <= ap_pipeline_reg_pp0_iter3_tmp_6_3_reg_503;
        ap_pipeline_reg_pp0_iter5_tmp_14_reg_458 <= ap_pipeline_reg_pp0_iter4_tmp_14_reg_458;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        ap_pipeline_reg_pp0_iter2_tmp_6_1_reg_493 <= tmp_6_1_reg_493;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
        ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498 <= tmp_6_2_reg_498;
        ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498 <= ap_pipeline_reg_pp0_iter2_tmp_6_2_reg_498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_371 <= indvar_flatten_next_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_1_reg_473 <= j_1_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_210_p2 == 1'b0))) begin
        j_mid2_reg_376 <= j_mid2_fu_234_p3;
        tmp_reg_390[4 : 2] <= tmp_fu_250_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_14_reg_458 <= tmp_14_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_1_1_reg_513 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter4) & (ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_1_2_reg_518 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_1_3_reg_523 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_6_1_reg_493 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_6_2_reg_498 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_6_3_reg_503 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        tmp_6_reg_478 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_210_p2 == 1'b0))) begin
        tmp_mid2_v_reg_385 <= tmp_mid2_v_fu_242_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_367 == 1'b0))) begin
        tmp_s_reg_508 <= grp_fu_199_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            a_Addr_A_orig = tmp_10_fu_326_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            a_Addr_A_orig = tmp_8_fu_301_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            a_Addr_A_orig = tmp_5_fu_273_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            a_Addr_A_orig = tmp_3_fu_258_p1;
        end else begin
            a_Addr_A_orig = 'bx;
        end
    end else begin
        a_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        a_EN_A = 1'b1;
    end else begin
        a_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter0)) begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            b_Addr_A_orig = tmp_13_cast_fu_347_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            b_Addr_A_orig = tmp_12_fu_310_p3;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            b_Addr_A_orig = tmp_11_cast_fu_291_p1;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            b_Addr_A_orig = tmp_2_fu_263_p1;
        end else begin
            b_Addr_A_orig = 'bx;
        end
    end else begin
        b_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        b_EN_A = 1'b1;
    end else begin
        b_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6))) begin
        c_EN_A = 1'b1;
    end else begin
        c_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_367 == 1'b0))) begin
        c_WEN_A = ap_const_lv4_F;
    end else begin
        c_WEN_A = ap_const_lv4_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_199_p0 = tmp_1_2_reg_518;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_199_p0 = tmp_1_1_reg_513;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_199_p0 = tmp_s_reg_508;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_199_p0 = tmp_6_reg_478;
    end else begin
        grp_fu_199_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        grp_fu_199_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_3_reg_503;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        grp_fu_199_p1 = ap_pipeline_reg_pp0_iter3_tmp_6_2_reg_498;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        grp_fu_199_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_1_reg_493;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_199_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_199_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_181_p4 = tmp_mid2_v_reg_385;
    end else begin
        i_phi_fu_181_p4 = i_reg_177;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_phi_fu_170_p4 = indvar_flatten_next_reg_371;
    end else begin
        indvar_flatten_phi_fu_170_p4 = indvar_flatten_reg_166;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_367 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        j_phi_fu_192_p4 = j_1_reg_473;
    end else begin
        j_phi_fu_192_p4 = j_reg_188;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & ~(exitcond_flatten_fu_210_p2 == 1'b0) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & ~(1'b1 == ap_enable_reg_pp0_iter5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        end
        ap_ST_fsm_pp0_stage3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_Addr_A = a_Addr_A_orig << ap_const_lv32_2;

assign a_Clk_A = ap_clk;

assign a_Din_A = ap_const_lv32_0;

assign a_Rst_A = ap_rst;

assign a_WEN_A = ap_const_lv4_0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_5];

assign b_Addr_A = b_Addr_A_orig << ap_const_lv32_2;

assign b_Clk_A = ap_clk;

assign b_Din_A = ap_const_lv32_0;

assign b_Rst_A = ap_rst;

assign b_WEN_A = ap_const_lv4_0;

assign c_Addr_A = c_Addr_A_orig << ap_const_lv32_2;

assign c_Addr_A_orig = tmp_14_cast_fu_363_p1;

assign c_Clk_A = ap_clk;

assign c_Din_A = tmp_1_3_reg_523;

assign c_Rst_A = ap_rst;

assign exitcond_flatten_fu_210_p2 = ((indvar_flatten_phi_fu_170_p4 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign exitcond_fu_228_p2 = ((j_phi_fu_192_p4 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign i_1_fu_222_p2 = (i_phi_fu_181_p4 + ap_const_lv3_1);

assign indvar_flatten_next_fu_216_p2 = (indvar_flatten_phi_fu_170_p4 + ap_const_lv5_1);

assign j_1_fu_358_p2 = (j_mid2_reg_376 + ap_const_lv3_1);

assign j_mid2_fu_234_p3 = ((exitcond_fu_228_p2[0:0] === 1'b1) ? ap_const_lv3_0 : j_phi_fu_192_p4);

assign tmp_10_fu_326_p3 = {{ap_const_lv59_0}, {tmp_9_fu_321_p2}};

assign tmp_11_cast_fu_291_p1 = tmp_11_fu_285_p2;

assign tmp_11_fu_285_p2 = (tmp_2_cast_fu_282_p1 + ap_const_lv4_4);

assign tmp_12_fu_310_p3 = {{ap_const_lv61_1}, {j_mid2_reg_376}};

assign tmp_13_cast_fu_347_p1 = tmp_13_fu_341_p2;

assign tmp_13_fu_341_p2 = (tmp_2_cast3_fu_338_p1 + ap_const_lv5_C);

assign tmp_14_cast_fu_363_p1 = ap_pipeline_reg_pp0_iter5_tmp_14_reg_458;

assign tmp_14_fu_352_p2 = (tmp_2_cast4_fu_335_p1 + tmp_3_cast_fu_318_p1);

assign tmp_2_cast3_fu_338_p1 = j_mid2_reg_376;

assign tmp_2_cast4_fu_335_p1 = j_mid2_reg_376;

assign tmp_2_cast_fu_282_p1 = j_mid2_reg_376;

assign tmp_2_fu_263_p1 = j_mid2_fu_234_p3;

assign tmp_3_cast_fu_318_p1 = tmp_reg_390;

assign tmp_3_fu_258_p1 = tmp_fu_250_p3;

assign tmp_4_fu_268_p2 = (tmp_reg_390 | ap_const_lv5_1);

assign tmp_5_fu_273_p3 = {{ap_const_lv59_0}, {tmp_4_fu_268_p2}};

assign tmp_7_fu_296_p2 = (tmp_reg_390 | ap_const_lv5_2);

assign tmp_8_fu_301_p3 = {{ap_const_lv59_0}, {tmp_7_fu_296_p2}};

assign tmp_9_fu_321_p2 = (tmp_reg_390 | ap_const_lv5_3);

assign tmp_fu_250_p3 = {{tmp_mid2_v_fu_242_p3}, {ap_const_lv2_0}};

assign tmp_mid2_v_fu_242_p3 = ((exitcond_fu_228_p2[0:0] === 1'b1) ? i_1_fu_222_p2 : i_phi_fu_181_p4);

always @ (posedge ap_clk) begin
    tmp_reg_390[1:0] <= 2'b00;
end

endmodule //matmul_hw
