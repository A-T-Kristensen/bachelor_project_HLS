// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matmul_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matmul_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matmul_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> matmul_hw::ap_ST_fsm_state1 = "1";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_pp0_stage15 = "10000000000000000";
const sc_lv<18> matmul_hw::ap_ST_fsm_state88 = "100000000000000000";
const sc_lv<32> matmul_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matmul_hw::ap_const_lv1_1 = "1";
const sc_lv<32> matmul_hw::ap_const_lv32_2 = "10";
const sc_lv<1> matmul_hw::ap_const_lv1_0 = "0";
const sc_lv<32> matmul_hw::ap_const_lv32_5 = "101";
const sc_lv<32> matmul_hw::ap_const_lv32_8 = "1000";
const sc_lv<32> matmul_hw::ap_const_lv32_B = "1011";
const sc_lv<32> matmul_hw::ap_const_lv32_E = "1110";
const sc_lv<32> matmul_hw::ap_const_lv32_3 = "11";
const sc_lv<32> matmul_hw::ap_const_lv32_6 = "110";
const sc_lv<32> matmul_hw::ap_const_lv32_9 = "1001";
const sc_lv<32> matmul_hw::ap_const_lv32_C = "1100";
const sc_lv<32> matmul_hw::ap_const_lv32_F = "1111";
const sc_lv<32> matmul_hw::ap_const_lv32_4 = "100";
const sc_lv<32> matmul_hw::ap_const_lv32_7 = "111";
const sc_lv<32> matmul_hw::ap_const_lv32_A = "1010";
const sc_lv<32> matmul_hw::ap_const_lv32_D = "1101";
const sc_lv<32> matmul_hw::ap_const_lv32_10 = "10000";
const sc_lv<32> matmul_hw::ap_const_lv32_1 = "1";
const sc_lv<9> matmul_hw::ap_const_lv9_0 = "000000000";
const sc_lv<5> matmul_hw::ap_const_lv5_0 = "00000";
const sc_lv<4> matmul_hw::ap_const_lv4_0 = "0000";
const sc_lv<4> matmul_hw::ap_const_lv4_F = "1111";
const sc_lv<9> matmul_hw::ap_const_lv9_100 = "100000000";
const sc_lv<9> matmul_hw::ap_const_lv9_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_1 = "1";
const sc_lv<5> matmul_hw::ap_const_lv5_10 = "10000";
const sc_lv<55> matmul_hw::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<6> matmul_hw::ap_const_lv6_10 = "10000";
const sc_lv<9> matmul_hw::ap_const_lv9_2 = "10";
const sc_lv<59> matmul_hw::ap_const_lv59_1 = "1";
const sc_lv<9> matmul_hw::ap_const_lv9_3 = "11";
const sc_lv<7> matmul_hw::ap_const_lv7_30 = "110000";
const sc_lv<9> matmul_hw::ap_const_lv9_4 = "100";
const sc_lv<59> matmul_hw::ap_const_lv59_2 = "10";
const sc_lv<9> matmul_hw::ap_const_lv9_5 = "101";
const sc_lv<7> matmul_hw::ap_const_lv7_50 = "1010000";
const sc_lv<9> matmul_hw::ap_const_lv9_6 = "110";
const sc_lv<59> matmul_hw::ap_const_lv59_3 = "11";
const sc_lv<9> matmul_hw::ap_const_lv9_7 = "111";
const sc_lv<8> matmul_hw::ap_const_lv8_70 = "1110000";
const sc_lv<9> matmul_hw::ap_const_lv9_8 = "1000";
const sc_lv<59> matmul_hw::ap_const_lv59_4 = "100";
const sc_lv<9> matmul_hw::ap_const_lv9_9 = "1001";
const sc_lv<8> matmul_hw::ap_const_lv8_90 = "10010000";
const sc_lv<9> matmul_hw::ap_const_lv9_A = "1010";
const sc_lv<59> matmul_hw::ap_const_lv59_5 = "101";
const sc_lv<9> matmul_hw::ap_const_lv9_B = "1011";
const sc_lv<8> matmul_hw::ap_const_lv8_B0 = "10110000";
const sc_lv<9> matmul_hw::ap_const_lv9_C = "1100";
const sc_lv<59> matmul_hw::ap_const_lv59_6 = "110";
const sc_lv<9> matmul_hw::ap_const_lv9_D = "1101";
const sc_lv<9> matmul_hw::ap_const_lv9_E = "1110";
const sc_lv<59> matmul_hw::ap_const_lv59_7 = "111";
const sc_lv<9> matmul_hw::ap_const_lv9_F = "1111";
const sc_lv<9> matmul_hw::ap_const_lv9_F0 = "11110000";
const sc_lv<32> matmul_hw::ap_const_lv32_11 = "10001";

matmul_hw::matmul_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matmul_hw_fadd_32bkb_U1 = new matmul_hw_fadd_32bkb<1,5,32,32,32>("matmul_hw_fadd_32bkb_U1");
    matmul_hw_fadd_32bkb_U1->clk(ap_clk);
    matmul_hw_fadd_32bkb_U1->reset(ap_rst);
    matmul_hw_fadd_32bkb_U1->din0(grp_fu_437_p0);
    matmul_hw_fadd_32bkb_U1->din1(grp_fu_437_p1);
    matmul_hw_fadd_32bkb_U1->ce(ap_var_for_const0);
    matmul_hw_fadd_32bkb_U1->dout(grp_fu_437_p2);
    matmul_hw_fmul_32cud_U2 = new matmul_hw_fmul_32cud<1,4,32,32,32>("matmul_hw_fmul_32cud_U2");
    matmul_hw_fmul_32cud_U2->clk(ap_clk);
    matmul_hw_fmul_32cud_U2->reset(ap_rst);
    matmul_hw_fmul_32cud_U2->din0(a_Dout_A);
    matmul_hw_fmul_32cud_U2->din1(b_Dout_A);
    matmul_hw_fmul_32cud_U2->ce(ap_var_for_const0);
    matmul_hw_fmul_32cud_U2->dout(grp_fu_442_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_Addr_A);
    sensitive << ( a_Addr_A_orig );

    SC_METHOD(thread_a_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_fu_552_p1 );
    sensitive << ( tmp_5_fu_567_p3 );
    sensitive << ( tmp_8_fu_595_p3 );
    sensitive << ( tmp_10_fu_617_p3 );
    sensitive << ( tmp_12_fu_645_p3 );
    sensitive << ( tmp_14_fu_667_p3 );
    sensitive << ( tmp_16_fu_691_p3 );
    sensitive << ( tmp_18_fu_713_p3 );
    sensitive << ( tmp_20_fu_741_p3 );
    sensitive << ( tmp_22_fu_763_p3 );
    sensitive << ( tmp_24_fu_787_p3 );
    sensitive << ( tmp_26_fu_809_p3 );
    sensitive << ( tmp_28_fu_833_p3 );
    sensitive << ( tmp_30_fu_855_p3 );
    sensitive << ( tmp_32_fu_877_p3 );
    sensitive << ( tmp_34_fu_902_p3 );

    SC_METHOD(thread_a_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_a_Din_A);

    SC_METHOD(thread_a_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_a_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_a_WEN_A);

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state88 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state88 );

    SC_METHOD(thread_b_Addr_A);
    sensitive << ( b_Addr_A_orig );

    SC_METHOD(thread_b_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_fu_557_p1 );
    sensitive << ( tmp_35_cast_fu_585_p1 );
    sensitive << ( tmp_36_fu_604_p3 );
    sensitive << ( tmp_37_cast_fu_635_p1 );
    sensitive << ( tmp_38_fu_654_p3 );
    sensitive << ( tmp_39_cast_fu_681_p1 );
    sensitive << ( tmp_40_fu_700_p3 );
    sensitive << ( tmp_41_cast_fu_731_p1 );
    sensitive << ( tmp_42_fu_750_p3 );
    sensitive << ( tmp_43_cast_fu_777_p1 );
    sensitive << ( tmp_44_fu_796_p3 );
    sensitive << ( tmp_45_cast_fu_823_p1 );
    sensitive << ( tmp_46_fu_842_p3 );
    sensitive << ( tmp_47_cast_fu_867_p1 );
    sensitive << ( tmp_47_fu_886_p3 );
    sensitive << ( tmp_49_cast_fu_923_p1 );

    SC_METHOD(thread_b_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_b_Din_A);

    SC_METHOD(thread_b_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_b_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_b_WEN_A);

    SC_METHOD(thread_c_Addr_A);
    sensitive << ( c_Addr_A_orig );

    SC_METHOD(thread_c_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_50_cast_fu_939_p1 );

    SC_METHOD(thread_c_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_c_Din_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( reg_498 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_c_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_c_WEN_A);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943 );

    SC_METHOD(thread_exitcond_flatten_fu_504_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_phi_fu_408_p4 );

    SC_METHOD(thread_exitcond_fu_522_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_504_p2 );
    sensitive << ( j_phi_fu_430_p4 );

    SC_METHOD(thread_grp_fu_437_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( reg_478 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_483 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( reg_488 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( reg_493 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( reg_498 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_6_reg_1049 );

    SC_METHOD(thread_grp_fu_437_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_6_1_reg_1069 );
    sensitive << ( tmp_6_2_reg_1084 );
    sensitive << ( tmp_6_3_reg_1105 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1120 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1135 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1150 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1165 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1180 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1195 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1210 );
    sensitive << ( ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1230 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1240 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1255 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1260 );
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1265 );

    SC_METHOD(thread_i_1_fu_516_p2);
    sensitive << ( i_phi_fu_419_p4 );

    SC_METHOD(thread_i_phi_fu_419_p4);
    sensitive << ( i_reg_415 );
    sensitive << ( exitcond_flatten_reg_943 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_969 );

    SC_METHOD(thread_indvar_flatten_next_fu_510_p2);
    sensitive << ( indvar_flatten_phi_fu_408_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_408_p4);
    sensitive << ( indvar_flatten_reg_404 );
    sensitive << ( exitcond_flatten_reg_943 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_947 );

    SC_METHOD(thread_j_1_fu_934_p2);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_j_mid2_fu_528_p3);
    sensitive << ( j_phi_fu_430_p4 );
    sensitive << ( exitcond_fu_522_p2 );

    SC_METHOD(thread_j_phi_fu_430_p4);
    sensitive << ( j_reg_426 );
    sensitive << ( exitcond_flatten_reg_943 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_1235 );

    SC_METHOD(thread_tmp_10_fu_617_p3);
    sensitive << ( tmp_9_fu_612_p2 );

    SC_METHOD(thread_tmp_11_fu_640_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_12_fu_645_p3);
    sensitive << ( tmp_11_fu_640_p2 );

    SC_METHOD(thread_tmp_13_fu_662_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_14_fu_667_p3);
    sensitive << ( tmp_13_fu_662_p2 );

    SC_METHOD(thread_tmp_15_fu_686_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_16_fu_691_p3);
    sensitive << ( tmp_15_fu_686_p2 );

    SC_METHOD(thread_tmp_17_fu_708_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_18_fu_713_p3);
    sensitive << ( tmp_17_fu_708_p2 );

    SC_METHOD(thread_tmp_19_fu_736_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_20_fu_741_p3);
    sensitive << ( tmp_19_fu_736_p2 );

    SC_METHOD(thread_tmp_21_fu_758_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_22_fu_763_p3);
    sensitive << ( tmp_21_fu_758_p2 );

    SC_METHOD(thread_tmp_23_fu_782_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_24_fu_787_p3);
    sensitive << ( tmp_23_fu_782_p2 );

    SC_METHOD(thread_tmp_25_fu_804_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_26_fu_809_p3);
    sensitive << ( tmp_25_fu_804_p2 );

    SC_METHOD(thread_tmp_27_fu_828_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_28_fu_833_p3);
    sensitive << ( tmp_27_fu_828_p2 );

    SC_METHOD(thread_tmp_29_fu_850_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_2_cast4_cast_fu_626_p1);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_2_cast4_fu_722_p1);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_2_cast5_fu_914_p1);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_2_cast6_fu_911_p1);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_2_cast_fu_576_p1);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_2_fu_557_p1);
    sensitive << ( j_mid2_fu_528_p3 );

    SC_METHOD(thread_tmp_30_fu_855_p3);
    sensitive << ( tmp_29_fu_850_p2 );

    SC_METHOD(thread_tmp_31_fu_872_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_32_fu_877_p3);
    sensitive << ( tmp_31_fu_872_p2 );

    SC_METHOD(thread_tmp_33_fu_897_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_34_fu_902_p3);
    sensitive << ( tmp_33_fu_897_p2 );

    SC_METHOD(thread_tmp_35_cast_fu_585_p1);
    sensitive << ( tmp_35_fu_579_p2 );

    SC_METHOD(thread_tmp_35_fu_579_p2);
    sensitive << ( tmp_2_cast_fu_576_p1 );

    SC_METHOD(thread_tmp_36_fu_604_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_37_cast_fu_635_p1);
    sensitive << ( tmp_37_fu_629_p2 );

    SC_METHOD(thread_tmp_37_fu_629_p2);
    sensitive << ( tmp_2_cast4_cast_fu_626_p1 );

    SC_METHOD(thread_tmp_38_fu_654_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_39_cast_fu_681_p1);
    sensitive << ( tmp_39_fu_676_p2 );

    SC_METHOD(thread_tmp_39_fu_676_p2);
    sensitive << ( tmp_2_cast4_cast_reg_1029 );

    SC_METHOD(thread_tmp_3_cast_fu_894_p1);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_3_fu_552_p1);
    sensitive << ( tmp_fu_544_p3 );

    SC_METHOD(thread_tmp_40_fu_700_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_41_cast_fu_731_p1);
    sensitive << ( tmp_41_fu_725_p2 );

    SC_METHOD(thread_tmp_41_fu_725_p2);
    sensitive << ( tmp_2_cast4_fu_722_p1 );

    SC_METHOD(thread_tmp_42_fu_750_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_43_cast_fu_777_p1);
    sensitive << ( tmp_43_fu_772_p2 );

    SC_METHOD(thread_tmp_43_fu_772_p2);
    sensitive << ( tmp_2_cast4_reg_1094 );

    SC_METHOD(thread_tmp_44_fu_796_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_45_cast_fu_823_p1);
    sensitive << ( tmp_45_fu_818_p2 );

    SC_METHOD(thread_tmp_45_fu_818_p2);
    sensitive << ( tmp_2_cast4_reg_1094 );

    SC_METHOD(thread_tmp_46_fu_842_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_47_cast7_fu_864_p1);
    sensitive << ( tmp_39_reg_1059 );

    SC_METHOD(thread_tmp_47_cast_fu_867_p1);
    sensitive << ( tmp_47_cast7_fu_864_p1 );

    SC_METHOD(thread_tmp_47_fu_886_p3);
    sensitive << ( j_mid2_reg_952 );

    SC_METHOD(thread_tmp_48_fu_917_p2);
    sensitive << ( tmp_2_cast5_fu_914_p1 );

    SC_METHOD(thread_tmp_49_cast_fu_923_p1);
    sensitive << ( tmp_48_fu_917_p2 );

    SC_METHOD(thread_tmp_49_fu_928_p2);
    sensitive << ( tmp_3_cast_fu_894_p1 );
    sensitive << ( tmp_2_cast6_fu_911_p1 );

    SC_METHOD(thread_tmp_4_fu_562_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_50_cast_fu_939_p1);
    sensitive << ( ap_pipeline_reg_pp0_iter4_tmp_49_reg_1225 );

    SC_METHOD(thread_tmp_5_fu_567_p3);
    sensitive << ( tmp_4_fu_562_p2 );

    SC_METHOD(thread_tmp_7_fu_590_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_8_fu_595_p3);
    sensitive << ( tmp_7_fu_590_p2 );

    SC_METHOD(thread_tmp_9_fu_612_p2);
    sensitive << ( tmp_reg_974 );

    SC_METHOD(thread_tmp_fu_544_p3);
    sensitive << ( tmp_mid2_v_fu_536_p3 );

    SC_METHOD(thread_tmp_mid2_v_fu_536_p3);
    sensitive << ( i_phi_fu_419_p4 );
    sensitive << ( exitcond_fu_522_p2 );
    sensitive << ( i_1_fu_516_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( exitcond_flatten_fu_504_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matmul_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_Addr_A, "(port)a_Addr_A");
    sc_trace(mVcdFile, a_EN_A, "(port)a_EN_A");
    sc_trace(mVcdFile, a_WEN_A, "(port)a_WEN_A");
    sc_trace(mVcdFile, a_Din_A, "(port)a_Din_A");
    sc_trace(mVcdFile, a_Dout_A, "(port)a_Dout_A");
    sc_trace(mVcdFile, a_Clk_A, "(port)a_Clk_A");
    sc_trace(mVcdFile, a_Rst_A, "(port)a_Rst_A");
    sc_trace(mVcdFile, b_Addr_A, "(port)b_Addr_A");
    sc_trace(mVcdFile, b_EN_A, "(port)b_EN_A");
    sc_trace(mVcdFile, b_WEN_A, "(port)b_WEN_A");
    sc_trace(mVcdFile, b_Din_A, "(port)b_Din_A");
    sc_trace(mVcdFile, b_Dout_A, "(port)b_Dout_A");
    sc_trace(mVcdFile, b_Clk_A, "(port)b_Clk_A");
    sc_trace(mVcdFile, b_Rst_A, "(port)b_Rst_A");
    sc_trace(mVcdFile, c_Addr_A, "(port)c_Addr_A");
    sc_trace(mVcdFile, c_EN_A, "(port)c_EN_A");
    sc_trace(mVcdFile, c_WEN_A, "(port)c_WEN_A");
    sc_trace(mVcdFile, c_Din_A, "(port)c_Din_A");
    sc_trace(mVcdFile, c_Dout_A, "(port)c_Dout_A");
    sc_trace(mVcdFile, c_Clk_A, "(port)c_Clk_A");
    sc_trace(mVcdFile, c_Rst_A, "(port)c_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_404, "indvar_flatten_reg_404");
    sc_trace(mVcdFile, i_reg_415, "i_reg_415");
    sc_trace(mVcdFile, j_reg_426, "j_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_flatten_reg_943, "exitcond_flatten_reg_943");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, grp_fu_437_p2, "grp_fu_437_p2");
    sc_trace(mVcdFile, reg_478, "reg_478");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943");
    sc_trace(mVcdFile, reg_483, "reg_483");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943");
    sc_trace(mVcdFile, reg_488, "reg_488");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943");
    sc_trace(mVcdFile, reg_493, "reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, reg_498, "reg_498");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943");
    sc_trace(mVcdFile, exitcond_flatten_fu_504_p2, "exitcond_flatten_fu_504_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_510_p2, "indvar_flatten_next_fu_510_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_947, "indvar_flatten_next_reg_947");
    sc_trace(mVcdFile, j_mid2_fu_528_p3, "j_mid2_fu_528_p3");
    sc_trace(mVcdFile, j_mid2_reg_952, "j_mid2_reg_952");
    sc_trace(mVcdFile, tmp_mid2_v_fu_536_p3, "tmp_mid2_v_fu_536_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_969, "tmp_mid2_v_reg_969");
    sc_trace(mVcdFile, tmp_fu_544_p3, "tmp_fu_544_p3");
    sc_trace(mVcdFile, tmp_reg_974, "tmp_reg_974");
    sc_trace(mVcdFile, tmp_2_cast4_cast_fu_626_p1, "tmp_2_cast4_cast_fu_626_p1");
    sc_trace(mVcdFile, tmp_2_cast4_cast_reg_1029, "tmp_2_cast4_cast_reg_1029");
    sc_trace(mVcdFile, grp_fu_442_p2, "grp_fu_442_p2");
    sc_trace(mVcdFile, tmp_6_reg_1049, "tmp_6_reg_1049");
    sc_trace(mVcdFile, tmp_39_fu_676_p2, "tmp_39_fu_676_p2");
    sc_trace(mVcdFile, tmp_39_reg_1059, "tmp_39_reg_1059");
    sc_trace(mVcdFile, tmp_6_1_reg_1069, "tmp_6_1_reg_1069");
    sc_trace(mVcdFile, tmp_6_2_reg_1084, "tmp_6_2_reg_1084");
    sc_trace(mVcdFile, tmp_2_cast4_fu_722_p1, "tmp_2_cast4_fu_722_p1");
    sc_trace(mVcdFile, tmp_2_cast4_reg_1094, "tmp_2_cast4_reg_1094");
    sc_trace(mVcdFile, tmp_6_3_reg_1105, "tmp_6_3_reg_1105");
    sc_trace(mVcdFile, tmp_6_4_reg_1120, "tmp_6_4_reg_1120");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1120, "ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1120");
    sc_trace(mVcdFile, tmp_6_5_reg_1135, "tmp_6_5_reg_1135");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1135, "ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1135");
    sc_trace(mVcdFile, tmp_6_6_reg_1150, "tmp_6_6_reg_1150");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1150, "ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1150");
    sc_trace(mVcdFile, tmp_6_7_reg_1165, "tmp_6_7_reg_1165");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1165, "ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1165");
    sc_trace(mVcdFile, tmp_6_8_reg_1180, "tmp_6_8_reg_1180");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1180, "ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1180");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1180, "ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1180");
    sc_trace(mVcdFile, tmp_6_9_reg_1195, "tmp_6_9_reg_1195");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1195, "ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1195");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1195, "ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1195");
    sc_trace(mVcdFile, tmp_6_s_reg_1210, "tmp_6_s_reg_1210");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1210, "ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1210");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1210, "ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1210");
    sc_trace(mVcdFile, tmp_49_fu_928_p2, "tmp_49_fu_928_p2");
    sc_trace(mVcdFile, tmp_49_reg_1225, "tmp_49_reg_1225");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_49_reg_1225, "ap_pipeline_reg_pp0_iter1_tmp_49_reg_1225");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_49_reg_1225, "ap_pipeline_reg_pp0_iter2_tmp_49_reg_1225");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_49_reg_1225, "ap_pipeline_reg_pp0_iter3_tmp_49_reg_1225");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_49_reg_1225, "ap_pipeline_reg_pp0_iter4_tmp_49_reg_1225");
    sc_trace(mVcdFile, tmp_6_10_reg_1230, "tmp_6_10_reg_1230");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1230, "ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1230");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1230, "ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1230");
    sc_trace(mVcdFile, j_1_fu_934_p2, "j_1_fu_934_p2");
    sc_trace(mVcdFile, j_1_reg_1235, "j_1_reg_1235");
    sc_trace(mVcdFile, tmp_6_11_reg_1240, "tmp_6_11_reg_1240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1240, "ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1240, "ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1240");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1240, "ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1240");
    sc_trace(mVcdFile, tmp_6_12_reg_1255, "tmp_6_12_reg_1255");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1255, "ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1255");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1255, "ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1255");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1255, "ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1255");
    sc_trace(mVcdFile, tmp_6_13_reg_1260, "tmp_6_13_reg_1260");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1260, "ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1260");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1260, "ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1260");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1260, "ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1260");
    sc_trace(mVcdFile, tmp_6_14_reg_1265, "tmp_6_14_reg_1265");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1265, "ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1265");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1265, "ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1265");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1265, "ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1265");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_408_p4, "indvar_flatten_phi_fu_408_p4");
    sc_trace(mVcdFile, i_phi_fu_419_p4, "i_phi_fu_419_p4");
    sc_trace(mVcdFile, j_phi_fu_430_p4, "j_phi_fu_430_p4");
    sc_trace(mVcdFile, tmp_3_fu_552_p1, "tmp_3_fu_552_p1");
    sc_trace(mVcdFile, tmp_2_fu_557_p1, "tmp_2_fu_557_p1");
    sc_trace(mVcdFile, tmp_5_fu_567_p3, "tmp_5_fu_567_p3");
    sc_trace(mVcdFile, tmp_35_cast_fu_585_p1, "tmp_35_cast_fu_585_p1");
    sc_trace(mVcdFile, tmp_8_fu_595_p3, "tmp_8_fu_595_p3");
    sc_trace(mVcdFile, tmp_36_fu_604_p3, "tmp_36_fu_604_p3");
    sc_trace(mVcdFile, tmp_10_fu_617_p3, "tmp_10_fu_617_p3");
    sc_trace(mVcdFile, tmp_37_cast_fu_635_p1, "tmp_37_cast_fu_635_p1");
    sc_trace(mVcdFile, tmp_12_fu_645_p3, "tmp_12_fu_645_p3");
    sc_trace(mVcdFile, tmp_38_fu_654_p3, "tmp_38_fu_654_p3");
    sc_trace(mVcdFile, tmp_14_fu_667_p3, "tmp_14_fu_667_p3");
    sc_trace(mVcdFile, tmp_39_cast_fu_681_p1, "tmp_39_cast_fu_681_p1");
    sc_trace(mVcdFile, tmp_16_fu_691_p3, "tmp_16_fu_691_p3");
    sc_trace(mVcdFile, tmp_40_fu_700_p3, "tmp_40_fu_700_p3");
    sc_trace(mVcdFile, tmp_18_fu_713_p3, "tmp_18_fu_713_p3");
    sc_trace(mVcdFile, tmp_41_cast_fu_731_p1, "tmp_41_cast_fu_731_p1");
    sc_trace(mVcdFile, tmp_20_fu_741_p3, "tmp_20_fu_741_p3");
    sc_trace(mVcdFile, tmp_42_fu_750_p3, "tmp_42_fu_750_p3");
    sc_trace(mVcdFile, tmp_22_fu_763_p3, "tmp_22_fu_763_p3");
    sc_trace(mVcdFile, tmp_43_cast_fu_777_p1, "tmp_43_cast_fu_777_p1");
    sc_trace(mVcdFile, tmp_24_fu_787_p3, "tmp_24_fu_787_p3");
    sc_trace(mVcdFile, tmp_44_fu_796_p3, "tmp_44_fu_796_p3");
    sc_trace(mVcdFile, tmp_26_fu_809_p3, "tmp_26_fu_809_p3");
    sc_trace(mVcdFile, tmp_45_cast_fu_823_p1, "tmp_45_cast_fu_823_p1");
    sc_trace(mVcdFile, tmp_28_fu_833_p3, "tmp_28_fu_833_p3");
    sc_trace(mVcdFile, tmp_46_fu_842_p3, "tmp_46_fu_842_p3");
    sc_trace(mVcdFile, tmp_30_fu_855_p3, "tmp_30_fu_855_p3");
    sc_trace(mVcdFile, tmp_47_cast_fu_867_p1, "tmp_47_cast_fu_867_p1");
    sc_trace(mVcdFile, tmp_32_fu_877_p3, "tmp_32_fu_877_p3");
    sc_trace(mVcdFile, tmp_47_fu_886_p3, "tmp_47_fu_886_p3");
    sc_trace(mVcdFile, tmp_34_fu_902_p3, "tmp_34_fu_902_p3");
    sc_trace(mVcdFile, tmp_49_cast_fu_923_p1, "tmp_49_cast_fu_923_p1");
    sc_trace(mVcdFile, tmp_50_cast_fu_939_p1, "tmp_50_cast_fu_939_p1");
    sc_trace(mVcdFile, a_Addr_A_orig, "a_Addr_A_orig");
    sc_trace(mVcdFile, b_Addr_A_orig, "b_Addr_A_orig");
    sc_trace(mVcdFile, c_Addr_A_orig, "c_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_437_p0, "grp_fu_437_p0");
    sc_trace(mVcdFile, grp_fu_437_p1, "grp_fu_437_p1");
    sc_trace(mVcdFile, exitcond_fu_522_p2, "exitcond_fu_522_p2");
    sc_trace(mVcdFile, i_1_fu_516_p2, "i_1_fu_516_p2");
    sc_trace(mVcdFile, tmp_4_fu_562_p2, "tmp_4_fu_562_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_576_p1, "tmp_2_cast_fu_576_p1");
    sc_trace(mVcdFile, tmp_35_fu_579_p2, "tmp_35_fu_579_p2");
    sc_trace(mVcdFile, tmp_7_fu_590_p2, "tmp_7_fu_590_p2");
    sc_trace(mVcdFile, tmp_9_fu_612_p2, "tmp_9_fu_612_p2");
    sc_trace(mVcdFile, tmp_37_fu_629_p2, "tmp_37_fu_629_p2");
    sc_trace(mVcdFile, tmp_11_fu_640_p2, "tmp_11_fu_640_p2");
    sc_trace(mVcdFile, tmp_13_fu_662_p2, "tmp_13_fu_662_p2");
    sc_trace(mVcdFile, tmp_15_fu_686_p2, "tmp_15_fu_686_p2");
    sc_trace(mVcdFile, tmp_17_fu_708_p2, "tmp_17_fu_708_p2");
    sc_trace(mVcdFile, tmp_41_fu_725_p2, "tmp_41_fu_725_p2");
    sc_trace(mVcdFile, tmp_19_fu_736_p2, "tmp_19_fu_736_p2");
    sc_trace(mVcdFile, tmp_21_fu_758_p2, "tmp_21_fu_758_p2");
    sc_trace(mVcdFile, tmp_43_fu_772_p2, "tmp_43_fu_772_p2");
    sc_trace(mVcdFile, tmp_23_fu_782_p2, "tmp_23_fu_782_p2");
    sc_trace(mVcdFile, tmp_25_fu_804_p2, "tmp_25_fu_804_p2");
    sc_trace(mVcdFile, tmp_45_fu_818_p2, "tmp_45_fu_818_p2");
    sc_trace(mVcdFile, tmp_27_fu_828_p2, "tmp_27_fu_828_p2");
    sc_trace(mVcdFile, tmp_29_fu_850_p2, "tmp_29_fu_850_p2");
    sc_trace(mVcdFile, tmp_47_cast7_fu_864_p1, "tmp_47_cast7_fu_864_p1");
    sc_trace(mVcdFile, tmp_31_fu_872_p2, "tmp_31_fu_872_p2");
    sc_trace(mVcdFile, tmp_33_fu_897_p2, "tmp_33_fu_897_p2");
    sc_trace(mVcdFile, tmp_2_cast5_fu_914_p1, "tmp_2_cast5_fu_914_p1");
    sc_trace(mVcdFile, tmp_48_fu_917_p2, "tmp_48_fu_917_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_894_p1, "tmp_3_cast_fu_894_p1");
    sc_trace(mVcdFile, tmp_2_cast6_fu_911_p1, "tmp_2_cast6_fu_911_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matmul_hw.hdltvin.dat");
    mHdltvoutHandle.open("matmul_hw.hdltvout.dat");
}

matmul_hw::~matmul_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matmul_hw_fadd_32bkb_U1;
    delete matmul_hw_fmul_32cud_U2;
}

void matmul_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matmul_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_504_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_reg_415 = tmp_mid2_v_reg_969.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_415 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_reg_404 = indvar_flatten_next_reg_947.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_404 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_reg_426 = j_1_reg_1235.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_426 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943 = exitcond_flatten_reg_943.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1240 = tmp_6_11_reg_1240.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1240 = ap_pipeline_reg_pp0_iter2_tmp_6_11_reg_1240.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1240 = ap_pipeline_reg_pp0_iter3_tmp_6_11_reg_1240.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943.read();
        exitcond_flatten_reg_943 = exitcond_flatten_fu_504_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_49_reg_1225 = tmp_49_reg_1225.read();
        ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1230 = tmp_6_10_reg_1230.read();
        ap_pipeline_reg_pp0_iter2_tmp_49_reg_1225 = ap_pipeline_reg_pp0_iter1_tmp_49_reg_1225.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1230 = ap_pipeline_reg_pp0_iter1_tmp_6_10_reg_1230.read();
        ap_pipeline_reg_pp0_iter3_tmp_49_reg_1225 = ap_pipeline_reg_pp0_iter2_tmp_49_reg_1225.read();
        ap_pipeline_reg_pp0_iter4_tmp_49_reg_1225 = ap_pipeline_reg_pp0_iter3_tmp_49_reg_1225.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1120 = tmp_6_4_reg_1120.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1135 = tmp_6_5_reg_1135.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1150 = tmp_6_6_reg_1150.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1165 = tmp_6_7_reg_1165.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1180 = tmp_6_8_reg_1180.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1180 = ap_pipeline_reg_pp0_iter1_tmp_6_8_reg_1180.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1195 = tmp_6_9_reg_1195.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1195 = ap_pipeline_reg_pp0_iter1_tmp_6_9_reg_1195.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1210 = tmp_6_s_reg_1210.read();
        ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1210 = ap_pipeline_reg_pp0_iter1_tmp_6_s_reg_1210.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1255 = tmp_6_12_reg_1255.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1255 = ap_pipeline_reg_pp0_iter2_tmp_6_12_reg_1255.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1255 = ap_pipeline_reg_pp0_iter3_tmp_6_12_reg_1255.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1260 = tmp_6_13_reg_1260.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1260 = ap_pipeline_reg_pp0_iter2_tmp_6_13_reg_1260.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1260 = ap_pipeline_reg_pp0_iter3_tmp_6_13_reg_1260.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1265 = tmp_6_14_reg_1265.read();
        ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1265 = ap_pipeline_reg_pp0_iter2_tmp_6_14_reg_1265.read();
        ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1265 = ap_pipeline_reg_pp0_iter3_tmp_6_14_reg_1265.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_next_reg_947 = indvar_flatten_next_fu_510_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        j_1_reg_1235 = j_1_fu_934_p2.read();
        tmp_6_10_reg_1230 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_504_p2.read()))) {
        j_mid2_reg_952 = j_mid2_fu_528_p3.read();
        tmp_reg_974 = tmp_fu_544_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read())))) {
        reg_478 = grp_fu_437_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943.read())))) {
        reg_483 = grp_fu_437_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943.read())))) {
        reg_488 = grp_fu_437_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_943.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        reg_493 = grp_fu_437_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_943.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943.read())))) {
        reg_498 = grp_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()))) {
        tmp_2_cast4_cast_reg_1029 = tmp_2_cast4_cast_fu_626_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        tmp_2_cast4_reg_1094 = tmp_2_cast4_fu_722_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_39_reg_1059 = tmp_39_fu_676_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        tmp_49_reg_1225 = tmp_49_fu_928_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        tmp_6_11_reg_1240 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read()))) {
        tmp_6_12_reg_1255 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read()))) {
        tmp_6_13_reg_1260 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_943.read()))) {
        tmp_6_14_reg_1265 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        tmp_6_1_reg_1069 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()))) {
        tmp_6_2_reg_1084 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        tmp_6_3_reg_1105 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        tmp_6_4_reg_1120 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()))) {
        tmp_6_5_reg_1135 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        tmp_6_6_reg_1150 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()))) {
        tmp_6_7_reg_1165 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()))) {
        tmp_6_8_reg_1180 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()))) {
        tmp_6_9_reg_1195 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()))) {
        tmp_6_reg_1049 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()))) {
        tmp_6_s_reg_1210 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_504_p2.read()))) {
        tmp_mid2_v_reg_969 = tmp_mid2_v_fu_536_p3.read();
    }
}

void matmul_hw::thread_a_Addr_A() {
    a_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): a_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_a_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_34_fu_902_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_32_fu_877_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_30_fu_855_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_28_fu_833_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_26_fu_809_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_24_fu_787_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_22_fu_763_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_20_fu_741_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_18_fu_713_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_16_fu_691_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_14_fu_667_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_12_fu_645_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_10_fu_617_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_8_fu_595_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_5_fu_567_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            a_Addr_A_orig =  (sc_lv<32>) (tmp_3_fu_552_p1.read());
        } else {
            a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        a_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_a_Clk_A() {
    a_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_a_Din_A() {
    a_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_a_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        a_EN_A = ap_const_logic_1;
    } else {
        a_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_a_Rst_A() {
    a_Rst_A = ap_rst.read();
}

void matmul_hw::thread_a_WEN_A() {
    a_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read().range(2, 2);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read().range(11, 11);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read().range(12, 12);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read().range(13, 13);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read().range(14, 14);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read().range(15, 15);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read().range(16, 16);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read().range(3, 3);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read().range(4, 4);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read().range(5, 5);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read().range(6, 6);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read().range(7, 7);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read().range(8, 8);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read().range(9, 9);
}

void matmul_hw::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read().range(10, 10);
}

void matmul_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void matmul_hw::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read().range(17, 17);
}

void matmul_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state88.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matmul_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state88.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Addr_A() {
    b_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): b_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_b_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_49_cast_fu_923_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_47_fu_886_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_47_cast_fu_867_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_46_fu_842_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_45_cast_fu_823_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_44_fu_796_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_43_cast_fu_777_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_42_fu_750_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_41_cast_fu_731_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_40_fu_700_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_39_cast_fu_681_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_38_fu_654_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_37_cast_fu_635_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_36_fu_604_p3.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_35_cast_fu_585_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())) {
            b_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_557_p1.read());
        } else {
            b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        b_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_b_Clk_A() {
    b_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_b_Din_A() {
    b_Din_A = ap_const_lv32_0;
}

void matmul_hw::thread_b_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read())))) {
        b_EN_A = ap_const_logic_1;
    } else {
        b_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_b_Rst_A() {
    b_Rst_A = ap_rst.read();
}

void matmul_hw::thread_b_WEN_A() {
    b_WEN_A = ap_const_lv4_0;
}

void matmul_hw::thread_c_Addr_A() {
    c_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): c_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void matmul_hw::thread_c_Addr_A_orig() {
    c_Addr_A_orig =  (sc_lv<32>) (tmp_50_cast_fu_939_p1.read());
}

void matmul_hw::thread_c_Clk_A() {
    c_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void matmul_hw::thread_c_Din_A() {
    c_Din_A = reg_498.read();
}

void matmul_hw::thread_c_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        c_EN_A = ap_const_logic_1;
    } else {
        c_EN_A = ap_const_logic_0;
    }
}

void matmul_hw::thread_c_Rst_A() {
    c_Rst_A = ap_rst.read();
}

void matmul_hw::thread_c_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_943.read())))) {
        c_WEN_A = ap_const_lv4_F;
    } else {
        c_WEN_A = ap_const_lv4_0;
    }
}

void matmul_hw::thread_exitcond_flatten_fu_504_p2() {
    exitcond_flatten_fu_504_p2 = (!indvar_flatten_phi_fu_408_p4.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_408_p4.read() == ap_const_lv9_100);
}

void matmul_hw::thread_exitcond_fu_522_p2() {
    exitcond_fu_522_p2 = (!j_phi_fu_430_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_430_p4.read() == ap_const_lv5_10);
}

void matmul_hw::thread_grp_fu_437_p0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        grp_fu_437_p0 = reg_498.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        grp_fu_437_p0 = reg_493.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        grp_fu_437_p0 = reg_488.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        grp_fu_437_p0 = reg_483.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        grp_fu_437_p0 = reg_478.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_437_p0 = tmp_6_reg_1049.read();
    } else {
        grp_fu_437_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_grp_fu_437_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_14_reg_1265.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage11.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_13_reg_1260.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_12_reg_1255.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter4_tmp_6_11_reg_1240.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage12.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_10_reg_1230.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_s_reg_1210.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_9_reg_1195.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage13.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter2_tmp_6_8_reg_1180.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_7_reg_1165.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_6_reg_1150.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage14.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_5_reg_1135.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_437_p1 = ap_pipeline_reg_pp0_iter1_tmp_6_4_reg_1120.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_437_p1 = tmp_6_3_reg_1105.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage15.read()))) {
        grp_fu_437_p1 = tmp_6_2_reg_1084.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage10.read()))) {
        grp_fu_437_p1 = tmp_6_1_reg_1069.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()))) {
        grp_fu_437_p1 = ap_const_lv32_0;
    } else {
        grp_fu_437_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matmul_hw::thread_i_1_fu_516_p2() {
    i_1_fu_516_p2 = (!i_phi_fu_419_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_phi_fu_419_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_i_phi_fu_419_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        i_phi_fu_419_p4 = tmp_mid2_v_reg_969.read();
    } else {
        i_phi_fu_419_p4 = i_reg_415.read();
    }
}

void matmul_hw::thread_indvar_flatten_next_fu_510_p2() {
    indvar_flatten_next_fu_510_p2 = (!indvar_flatten_phi_fu_408_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(indvar_flatten_phi_fu_408_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void matmul_hw::thread_indvar_flatten_phi_fu_408_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        indvar_flatten_phi_fu_408_p4 = indvar_flatten_next_reg_947.read();
    } else {
        indvar_flatten_phi_fu_408_p4 = indvar_flatten_reg_404.read();
    }
}

void matmul_hw::thread_j_1_fu_934_p2() {
    j_1_fu_934_p2 = (!j_mid2_reg_952.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_mid2_reg_952.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matmul_hw::thread_j_mid2_fu_528_p3() {
    j_mid2_fu_528_p3 = (!exitcond_fu_522_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_522_p2.read()[0].to_bool())? ap_const_lv5_0: j_phi_fu_430_p4.read());
}

void matmul_hw::thread_j_phi_fu_430_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_943.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        j_phi_fu_430_p4 = j_1_reg_1235.read();
    } else {
        j_phi_fu_430_p4 = j_reg_426.read();
    }
}

void matmul_hw::thread_tmp_10_fu_617_p3() {
    tmp_10_fu_617_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_9_fu_612_p2.read());
}

void matmul_hw::thread_tmp_11_fu_640_p2() {
    tmp_11_fu_640_p2 = (tmp_reg_974.read() | ap_const_lv9_4);
}

void matmul_hw::thread_tmp_12_fu_645_p3() {
    tmp_12_fu_645_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_11_fu_640_p2.read());
}

void matmul_hw::thread_tmp_13_fu_662_p2() {
    tmp_13_fu_662_p2 = (tmp_reg_974.read() | ap_const_lv9_5);
}

void matmul_hw::thread_tmp_14_fu_667_p3() {
    tmp_14_fu_667_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_13_fu_662_p2.read());
}

void matmul_hw::thread_tmp_15_fu_686_p2() {
    tmp_15_fu_686_p2 = (tmp_reg_974.read() | ap_const_lv9_6);
}

void matmul_hw::thread_tmp_16_fu_691_p3() {
    tmp_16_fu_691_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_15_fu_686_p2.read());
}

void matmul_hw::thread_tmp_17_fu_708_p2() {
    tmp_17_fu_708_p2 = (tmp_reg_974.read() | ap_const_lv9_7);
}

void matmul_hw::thread_tmp_18_fu_713_p3() {
    tmp_18_fu_713_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_17_fu_708_p2.read());
}

void matmul_hw::thread_tmp_19_fu_736_p2() {
    tmp_19_fu_736_p2 = (tmp_reg_974.read() | ap_const_lv9_8);
}

void matmul_hw::thread_tmp_20_fu_741_p3() {
    tmp_20_fu_741_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_19_fu_736_p2.read());
}

void matmul_hw::thread_tmp_21_fu_758_p2() {
    tmp_21_fu_758_p2 = (tmp_reg_974.read() | ap_const_lv9_9);
}

void matmul_hw::thread_tmp_22_fu_763_p3() {
    tmp_22_fu_763_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_21_fu_758_p2.read());
}

void matmul_hw::thread_tmp_23_fu_782_p2() {
    tmp_23_fu_782_p2 = (tmp_reg_974.read() | ap_const_lv9_A);
}

void matmul_hw::thread_tmp_24_fu_787_p3() {
    tmp_24_fu_787_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_23_fu_782_p2.read());
}

void matmul_hw::thread_tmp_25_fu_804_p2() {
    tmp_25_fu_804_p2 = (tmp_reg_974.read() | ap_const_lv9_B);
}

void matmul_hw::thread_tmp_26_fu_809_p3() {
    tmp_26_fu_809_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_25_fu_804_p2.read());
}

void matmul_hw::thread_tmp_27_fu_828_p2() {
    tmp_27_fu_828_p2 = (tmp_reg_974.read() | ap_const_lv9_C);
}

void matmul_hw::thread_tmp_28_fu_833_p3() {
    tmp_28_fu_833_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_27_fu_828_p2.read());
}

void matmul_hw::thread_tmp_29_fu_850_p2() {
    tmp_29_fu_850_p2 = (tmp_reg_974.read() | ap_const_lv9_D);
}

void matmul_hw::thread_tmp_2_cast4_cast_fu_626_p1() {
    tmp_2_cast4_cast_fu_626_p1 = esl_zext<7,5>(j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_2_cast4_fu_722_p1() {
    tmp_2_cast4_fu_722_p1 = esl_zext<8,5>(j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_2_cast5_fu_914_p1() {
    tmp_2_cast5_fu_914_p1 = esl_zext<9,5>(j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_2_cast6_fu_911_p1() {
    tmp_2_cast6_fu_911_p1 = esl_zext<10,5>(j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_2_cast_fu_576_p1() {
    tmp_2_cast_fu_576_p1 = esl_zext<6,5>(j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_2_fu_557_p1() {
    tmp_2_fu_557_p1 = esl_zext<64,5>(j_mid2_fu_528_p3.read());
}

void matmul_hw::thread_tmp_30_fu_855_p3() {
    tmp_30_fu_855_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_29_fu_850_p2.read());
}

void matmul_hw::thread_tmp_31_fu_872_p2() {
    tmp_31_fu_872_p2 = (tmp_reg_974.read() | ap_const_lv9_E);
}

void matmul_hw::thread_tmp_32_fu_877_p3() {
    tmp_32_fu_877_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_31_fu_872_p2.read());
}

void matmul_hw::thread_tmp_33_fu_897_p2() {
    tmp_33_fu_897_p2 = (tmp_reg_974.read() | ap_const_lv9_F);
}

void matmul_hw::thread_tmp_34_fu_902_p3() {
    tmp_34_fu_902_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_33_fu_897_p2.read());
}

void matmul_hw::thread_tmp_35_cast_fu_585_p1() {
    tmp_35_cast_fu_585_p1 = esl_zext<64,6>(tmp_35_fu_579_p2.read());
}

void matmul_hw::thread_tmp_35_fu_579_p2() {
    tmp_35_fu_579_p2 = (!tmp_2_cast_fu_576_p1.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_2_cast_fu_576_p1.read()) + sc_biguint<6>(ap_const_lv6_10));
}

void matmul_hw::thread_tmp_36_fu_604_p3() {
    tmp_36_fu_604_p3 = esl_concat<59,5>(ap_const_lv59_1, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_37_cast_fu_635_p1() {
    tmp_37_cast_fu_635_p1 = esl_zext<64,7>(tmp_37_fu_629_p2.read());
}

void matmul_hw::thread_tmp_37_fu_629_p2() {
    tmp_37_fu_629_p2 = (!tmp_2_cast4_cast_fu_626_p1.read().is_01() || !ap_const_lv7_30.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast4_cast_fu_626_p1.read()) + sc_biguint<7>(ap_const_lv7_30));
}

void matmul_hw::thread_tmp_38_fu_654_p3() {
    tmp_38_fu_654_p3 = esl_concat<59,5>(ap_const_lv59_2, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_39_cast_fu_681_p1() {
    tmp_39_cast_fu_681_p1 = esl_zext<64,7>(tmp_39_fu_676_p2.read());
}

void matmul_hw::thread_tmp_39_fu_676_p2() {
    tmp_39_fu_676_p2 = (!tmp_2_cast4_cast_reg_1029.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_2_cast4_cast_reg_1029.read()) + sc_bigint<7>(ap_const_lv7_50));
}

void matmul_hw::thread_tmp_3_cast_fu_894_p1() {
    tmp_3_cast_fu_894_p1 = esl_zext<10,9>(tmp_reg_974.read());
}

void matmul_hw::thread_tmp_3_fu_552_p1() {
    tmp_3_fu_552_p1 = esl_zext<64,9>(tmp_fu_544_p3.read());
}

void matmul_hw::thread_tmp_40_fu_700_p3() {
    tmp_40_fu_700_p3 = esl_concat<59,5>(ap_const_lv59_3, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_41_cast_fu_731_p1() {
    tmp_41_cast_fu_731_p1 = esl_zext<64,8>(tmp_41_fu_725_p2.read());
}

void matmul_hw::thread_tmp_41_fu_725_p2() {
    tmp_41_fu_725_p2 = (!tmp_2_cast4_fu_722_p1.read().is_01() || !ap_const_lv8_70.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast4_fu_722_p1.read()) + sc_biguint<8>(ap_const_lv8_70));
}

void matmul_hw::thread_tmp_42_fu_750_p3() {
    tmp_42_fu_750_p3 = esl_concat<59,5>(ap_const_lv59_4, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_43_cast_fu_777_p1() {
    tmp_43_cast_fu_777_p1 = esl_zext<64,8>(tmp_43_fu_772_p2.read());
}

void matmul_hw::thread_tmp_43_fu_772_p2() {
    tmp_43_fu_772_p2 = (!tmp_2_cast4_reg_1094.read().is_01() || !ap_const_lv8_90.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast4_reg_1094.read()) + sc_bigint<8>(ap_const_lv8_90));
}

void matmul_hw::thread_tmp_44_fu_796_p3() {
    tmp_44_fu_796_p3 = esl_concat<59,5>(ap_const_lv59_5, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_45_cast_fu_823_p1() {
    tmp_45_cast_fu_823_p1 = esl_zext<64,8>(tmp_45_fu_818_p2.read());
}

void matmul_hw::thread_tmp_45_fu_818_p2() {
    tmp_45_fu_818_p2 = (!tmp_2_cast4_reg_1094.read().is_01() || !ap_const_lv8_B0.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_cast4_reg_1094.read()) + sc_bigint<8>(ap_const_lv8_B0));
}

void matmul_hw::thread_tmp_46_fu_842_p3() {
    tmp_46_fu_842_p3 = esl_concat<59,5>(ap_const_lv59_6, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_47_cast7_fu_864_p1() {
    tmp_47_cast7_fu_864_p1 = esl_sext<8,7>(tmp_39_reg_1059.read());
}

void matmul_hw::thread_tmp_47_cast_fu_867_p1() {
    tmp_47_cast_fu_867_p1 = esl_zext<64,8>(tmp_47_cast7_fu_864_p1.read());
}

void matmul_hw::thread_tmp_47_fu_886_p3() {
    tmp_47_fu_886_p3 = esl_concat<59,5>(ap_const_lv59_7, j_mid2_reg_952.read());
}

void matmul_hw::thread_tmp_48_fu_917_p2() {
    tmp_48_fu_917_p2 = (!tmp_2_cast5_fu_914_p1.read().is_01() || !ap_const_lv9_F0.is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_2_cast5_fu_914_p1.read()) + sc_biguint<9>(ap_const_lv9_F0));
}

void matmul_hw::thread_tmp_49_cast_fu_923_p1() {
    tmp_49_cast_fu_923_p1 = esl_zext<64,9>(tmp_48_fu_917_p2.read());
}

void matmul_hw::thread_tmp_49_fu_928_p2() {
    tmp_49_fu_928_p2 = (!tmp_3_cast_fu_894_p1.read().is_01() || !tmp_2_cast6_fu_911_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_3_cast_fu_894_p1.read()) + sc_biguint<10>(tmp_2_cast6_fu_911_p1.read()));
}

void matmul_hw::thread_tmp_4_fu_562_p2() {
    tmp_4_fu_562_p2 = (tmp_reg_974.read() | ap_const_lv9_1);
}

void matmul_hw::thread_tmp_50_cast_fu_939_p1() {
    tmp_50_cast_fu_939_p1 = esl_zext<64,10>(ap_pipeline_reg_pp0_iter4_tmp_49_reg_1225.read());
}

void matmul_hw::thread_tmp_5_fu_567_p3() {
    tmp_5_fu_567_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_4_fu_562_p2.read());
}

void matmul_hw::thread_tmp_7_fu_590_p2() {
    tmp_7_fu_590_p2 = (tmp_reg_974.read() | ap_const_lv9_2);
}

void matmul_hw::thread_tmp_8_fu_595_p3() {
    tmp_8_fu_595_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_7_fu_590_p2.read());
}

void matmul_hw::thread_tmp_9_fu_612_p2() {
    tmp_9_fu_612_p2 = (tmp_reg_974.read() | ap_const_lv9_3);
}

void matmul_hw::thread_tmp_fu_544_p3() {
    tmp_fu_544_p3 = esl_concat<5,4>(tmp_mid2_v_fu_536_p3.read(), ap_const_lv4_0);
}

void matmul_hw::thread_tmp_mid2_v_fu_536_p3() {
    tmp_mid2_v_fu_536_p3 = (!exitcond_fu_522_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_fu_522_p2.read()[0].to_bool())? i_1_fu_516_p2.read(): i_phi_fu_419_p4.read());
}

void matmul_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_504_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state88;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state88;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void matmul_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Addr_A\" :  \"" << a_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_EN_A\" :  \"" << a_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_WEN_A\" :  \"" << a_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Din_A\" :  \"" << a_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_Dout_A\" :  \"" << a_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Clk_A\" :  \"" << a_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_Rst_A\" :  \"" << a_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Addr_A\" :  \"" << b_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_EN_A\" :  \"" << b_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_WEN_A\" :  \"" << b_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Din_A\" :  \"" << b_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_Dout_A\" :  \"" << b_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Clk_A\" :  \"" << b_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_Rst_A\" :  \"" << b_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Addr_A\" :  \"" << c_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_EN_A\" :  \"" << c_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_WEN_A\" :  \"" << c_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Din_A\" :  \"" << c_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_Dout_A\" :  \"" << c_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Clk_A\" :  \"" << c_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_Rst_A\" :  \"" << c_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

