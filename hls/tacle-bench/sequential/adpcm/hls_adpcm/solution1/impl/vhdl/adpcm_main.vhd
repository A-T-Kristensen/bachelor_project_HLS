-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    test_data_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_EN_A : OUT STD_LOGIC;
    test_data_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_data_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_Clk_A : OUT STD_LOGIC;
    test_data_Rst_A : OUT STD_LOGIC;
    compressed_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_EN_A : OUT STD_LOGIC;
    compressed_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    compressed_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_Clk_A : OUT STD_LOGIC;
    compressed_Rst_A : OUT STD_LOGIC;
    dec_result_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_EN_A : OUT STD_LOGIC;
    dec_result_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    dec_result_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Clk_A : OUT STD_LOGIC;
    dec_result_Rst_A : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adpcm_main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "adpcm_main,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.611000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=26,HLS_SYN_FF=5031,HLS_SYN_LUT=5808}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (90 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (90 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (90 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (90 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (90 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (90 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (90 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (90 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (90 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (90 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (90 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFE310 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110001100010000";
    constant ap_const_lv32_FFFFF9B0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111100110110000";
    constant ap_const_lv32_1CF0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001110011110000";
    constant ap_const_lv32_650 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011001010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (90 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bpl_ce1 : STD_LOGIC;
    signal delay_bpl_we1 : STD_LOGIC;
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bph_ce1 : STD_LOGIC;
    signal delay_bph_we1 : STD_LOGIC;
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bpl_ce1 : STD_LOGIC;
    signal dec_del_bpl_we1 : STD_LOGIC;
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bph_ce1 : STD_LOGIC;
    signal dec_del_bph_we1 : STD_LOGIC;
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_we0 : STD_LOGIC;
    signal accumc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_we0 : STD_LOGIC;
    signal accumd_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal reg_653 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal exitcond_i_i_fu_2608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ad_ptr_0_rec_i_i_reg_665 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_reg_676 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_0_i_i_reg_688 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa1_0_i_i_reg_698 : STD_LOGIC_VECTOR (49 downto 0);
    signal reg_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_filtez_fu_1174_ap_done : STD_LOGIC;
    signal grp_filtep_fu_1215_ap_done : STD_LOGIC;
    signal grp_logscl_fu_1270_ap_done : STD_LOGIC;
    signal grp_logsch_fu_1419_ap_done : STD_LOGIC;
    signal tqmf_ptr_0_rec_i_i_reg_744 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_756 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_767 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_777 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_s_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_828 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond2_reg_3366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal exitcond2_i_i_reg_3486 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3486 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_831 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal reg_838 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal p_rec2_i_i_reg_846 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal reg_868 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal reg_871 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ad_ptr_0_sum7_i_i_reg_930 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal exitcond_i_i7_fu_2395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal reg_960 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal grp_scalel_fu_1291_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_1392_ap_done : STD_LOGIC;
    signal reg_1543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_1554 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1174_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1560 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_logscl_fu_1270_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1565 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal grp_upzero_fu_1322_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_1363_ap_done : STD_LOGIC;
    signal reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1419_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1583 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state105 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal reg_1588 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal reg_1595 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_quantl_fu_1244_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_1363_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1601 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_1606 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_1610 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1119_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal reg_1614 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond2_reg_3366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3486 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1618 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_1622 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal reg_1633 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1639 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state104 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_3191 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_3195 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_30_fu_1749_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_3205 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_reg_3213 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_32_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal qq6_code6_table_load_reg_3228 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_1831_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_reg_3233 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_75_cast_fu_1859_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_75_cast_reg_3239 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_82_cast_fu_1879_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_95_cast_fu_1887_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_96_cast_fu_1914_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_77_cast_fu_1919_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_62_reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal dec_ph1_load_reg_3316 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_3322 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_2079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_reg_3327 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_cast_fu_2103_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal dec_plt1_load_reg_3345 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_3351 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_2263_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal xa2_cast_fu_2267_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond2_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal accumd_load_1_reg_3390 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_cast_fu_2299_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_129_cast_fu_2304_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_131_cast_fu_2309_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_132_cast_fu_2313_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_120_cast_fu_2328_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal tmp_92_reg_3420 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_reg_3425 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal exitcond_i_i7_reg_3430 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_2418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_3444 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_68_cast_fu_2440_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal test_data_load_reg_3461 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal test_data_load_1_reg_3471 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal xa_cast_fu_2491_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_2495_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond2_i_i_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_cast_fu_2523_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_115_cast_fu_2528_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_117_cast_fu_2533_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_118_cast_fu_2538_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_110_cast_fu_2553_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal exitcond_i_i_reg_3535 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_3544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_2685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_reg_3559 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_1244_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_reg_3580 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_filtep_fu_1215_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_3591 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_cast_fu_2737_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_144_cast_fu_2742_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal tmp_146_cast_fu_2746_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_40_reg_3616 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_2823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_reg_3622 : STD_LOGIC_VECTOR (0 downto 0);
    signal plt1_load_reg_3637 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3643 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_cast5_fu_2953_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_160_cast5_reg_3648 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_129_fu_3017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_129_reg_3653 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal tmp_167_cast_fu_3047_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ph1_load_reg_3679 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3685 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1174_ap_start : STD_LOGIC;
    signal grp_filtez_fu_1174_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_1174_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_1174_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_1174_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_1174_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1174_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_1174_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_1174_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1215_ap_start : STD_LOGIC;
    signal grp_filtep_fu_1215_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_1215_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_1215_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1215_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1215_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1215_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_1244_ap_start : STD_LOGIC;
    signal grp_quantl_fu_1244_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_1244_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_1270_ap_start : STD_LOGIC;
    signal grp_logscl_fu_1270_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_1270_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_1270_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_1270_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_1291_ap_start : STD_LOGIC;
    signal grp_scalel_fu_1291_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_1291_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_1291_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_1291_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_1291_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_upzero_fu_1322_ap_start : STD_LOGIC;
    signal grp_upzero_fu_1322_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_1322_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_1322_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1322_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_1322_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_1322_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1322_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_1322_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_1322_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1322_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_1322_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1322_bli_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1322_bli_ce1 : STD_LOGIC;
    signal grp_upzero_fu_1322_bli_we1 : STD_LOGIC;
    signal grp_upzero_fu_1322_bli_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1363_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_1363_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_1363_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_1363_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1363_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1363_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1363_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1363_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1392_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_1392_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_1392_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_1392_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1392_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1392_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1392_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1419_ap_start : STD_LOGIC;
    signal grp_logsch_fu_1419_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_1419_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_1419_ih : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1419_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal ad_ptr_0_rec_i_i_phi_fu_669_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_phi_fu_680_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_1_rec_i_i_phi_fu_712_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_1_rec_i_i_reg_708 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_i_i6_reg_720 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state107 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal tqmf_ptr_0_rec_i_i_phi_fu_748_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_phi_fu_760_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_phi_fu_791_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_787 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_i_i_reg_799 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_filtez_fu_1174_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_1215_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_1244_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_1270_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_1291_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_reg_grp_upzero_fu_1322_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_1363_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_1392_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_1419_ap_start : STD_LOGIC := '0';
    signal tmp_63_fu_1782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_1874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_2283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_2277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_2294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_2401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_2407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal tmp_116_fu_2413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_132_fu_2430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_2445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_2456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal tmp_103_fu_2716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_130_fu_3073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_trunc_ext_fu_2937_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc8_ext_fu_3141_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_153_ext_fu_2886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_ext_fu_2835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_ext_fu_2876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal tmp_174_ext_fu_3131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_159_cast_cast_fu_2924_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_166_cast_cast_fu_2956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_ext_fu_3121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal p_trunc9_ext_fu_2155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc10_ext_fu_2197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_ext_fu_2171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_ext_fu_2108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_ext_fu_2145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_ext_fu_2181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal compressed_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal dec_result_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal test_data_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_130_cast_fu_2318_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_133_cast_fu_2323_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_38_fu_2333_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_39_fu_2379_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_116_cast_fu_2543_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_119_cast_fu_2548_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_37_fu_2558_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_36_fu_2598_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_811_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_123_cast_fu_2368_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_121_cast_fu_2384_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_113_cast_fu_2593_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_111_cast_fu_2603_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1119_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1499_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_neg2_fu_1682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr2_fu_1688_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t2_fu_1698_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1445_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_24_fu_1704_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg3_fu_1720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr3_fu_1725_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t3_fu_1735_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_29_fu_1741_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg1_fu_1762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1795_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1804_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_33_fu_1787_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1814_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1835_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_1_cast_fu_1864_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_1900_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_1900_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_2079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_cast_fu_2103_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_fu_2235_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_2246_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_2242_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_2253_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_2257_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa2_cast_fu_2267_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_2288_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl7_fu_2338_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_2350_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_2346_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_2358_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_90_fu_2362_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_121_cast_fu_2384_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_2407_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_131_fu_2424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_2450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_2461_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_2473_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_2469_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_2481_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_2485_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xb_cast_fu_2495_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2511_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl5_fu_2563_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2575_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2571_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2583_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_86_fu_2587_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_111_cast_fu_2603_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2614_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum_i_i_cast_fu_2619_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_96_fu_2624_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_97_fu_2640_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_101_fu_2685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_2706_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_2787_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_9_fu_2787_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_41_fu_2801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2983_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_13_fu_2993_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_3003_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_128_fu_2969_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_3013_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_3033_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_3033_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_fu_3060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1119_ce : STD_LOGIC;
    signal tmp_31_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (90 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce1 : OUT STD_LOGIC;
        bli_we1 : OUT STD_LOGIC;
        bli_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mux_42eOg_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_delay_ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_delay_jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_qq6_copcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tqmf_U : component adpcm_main_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => tqmf_d0,
        q0 => tqmf_q0,
        address1 => ap_const_lv5_0,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => test_data_load_1_reg_3471);

    h_U : component adpcm_main_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0);

    delay_bpl_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        q0 => delay_bpl_q0,
        address1 => grp_upzero_fu_1322_bli_address1,
        ce1 => delay_bpl_ce1,
        we1 => delay_bpl_we1,
        d1 => grp_upzero_fu_1322_bli_d1);

    delay_dltx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_1322_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_1322_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_1322_dlti_d1,
        q1 => delay_dltx_q1);

    qq4_code4_table_U : component adpcm_main_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    delay_bph_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        q0 => delay_bph_q0,
        address1 => grp_upzero_fu_1322_bli_address1,
        ce1 => delay_bph_ce1,
        we1 => delay_bph_we1,
        d1 => grp_upzero_fu_1322_bli_d1);

    delay_dhx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_1322_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_1322_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_1322_dlti_d1,
        q1 => delay_dhx_q1);

    dec_del_bpl_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        q0 => dec_del_bpl_q0,
        address1 => grp_upzero_fu_1322_bli_address1,
        ce1 => dec_del_bpl_ce1,
        we1 => dec_del_bpl_we1,
        d1 => grp_upzero_fu_1322_bli_d1);

    dec_del_dltx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_1322_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_1322_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_1322_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq6_code6_table_U : component adpcm_main_qq6_copcA
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        q0 => dec_del_bph_q0,
        address1 => grp_upzero_fu_1322_bli_address1,
        ce1 => dec_del_bph_ce1,
        we1 => dec_del_bph_we1,
        d1 => grp_upzero_fu_1322_bli_d1);

    dec_del_dhx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_1322_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_1322_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_1322_dlti_d1,
        q1 => dec_del_dhx_q1);

    accumc_U : component adpcm_main_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        we0 => accumc_we0,
        d0 => accumc_d0,
        q0 => accumc_q0);

    accumd_U : component adpcm_main_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        we0 => accumd_we0,
        d0 => accumd_d0,
        q0 => accumd_q0);

    grp_filtez_fu_1174 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_1174_ap_start,
        ap_done => grp_filtez_fu_1174_ap_done,
        ap_idle => grp_filtez_fu_1174_ap_idle,
        ap_ready => grp_filtez_fu_1174_ap_ready,
        bpl_address0 => grp_filtez_fu_1174_bpl_address0,
        bpl_ce0 => grp_filtez_fu_1174_bpl_ce0,
        bpl_q0 => grp_filtez_fu_1174_bpl_q0,
        dlt_address0 => grp_filtez_fu_1174_dlt_address0,
        dlt_ce0 => grp_filtez_fu_1174_dlt_ce0,
        dlt_q0 => grp_filtez_fu_1174_dlt_q0,
        ap_return => grp_filtez_fu_1174_ap_return);

    grp_filtep_fu_1215 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_1215_ap_start,
        ap_done => grp_filtep_fu_1215_ap_done,
        ap_idle => grp_filtep_fu_1215_ap_idle,
        ap_ready => grp_filtep_fu_1215_ap_ready,
        rlt1 => grp_filtep_fu_1215_rlt1,
        al1 => grp_filtep_fu_1215_al1,
        rlt2 => grp_filtep_fu_1215_rlt2,
        al2 => grp_filtep_fu_1215_al2,
        ap_return => grp_filtep_fu_1215_ap_return);

    grp_quantl_fu_1244 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_1244_ap_start,
        ap_done => grp_quantl_fu_1244_ap_done,
        ap_idle => grp_quantl_fu_1244_ap_idle,
        ap_ready => grp_quantl_fu_1244_ap_ready,
        el => tmp_101_reg_3559,
        detl => detl,
        ap_return => grp_quantl_fu_1244_ap_return);

    grp_logscl_fu_1270 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_1270_ap_start,
        ap_done => grp_logscl_fu_1270_ap_done,
        ap_idle => grp_logscl_fu_1270_ap_idle,
        ap_ready => grp_logscl_fu_1270_ap_ready,
        il => grp_logscl_fu_1270_il,
        nbl => grp_logscl_fu_1270_nbl,
        ap_return => grp_logscl_fu_1270_ap_return);

    grp_scalel_fu_1291 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_1291_ap_start,
        ap_done => grp_scalel_fu_1291_ap_done,
        ap_idle => grp_scalel_fu_1291_ap_idle,
        ap_ready => grp_scalel_fu_1291_ap_ready,
        nbl => grp_scalel_fu_1291_nbl,
        shift_constant => grp_scalel_fu_1291_shift_constant,
        ap_return => grp_scalel_fu_1291_ap_return);

    grp_upzero_fu_1322 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_1322_ap_start,
        ap_done => grp_upzero_fu_1322_ap_done,
        ap_idle => grp_upzero_fu_1322_ap_idle,
        ap_ready => grp_upzero_fu_1322_ap_ready,
        dlt => grp_upzero_fu_1322_dlt,
        dlti_address0 => grp_upzero_fu_1322_dlti_address0,
        dlti_ce0 => grp_upzero_fu_1322_dlti_ce0,
        dlti_we0 => grp_upzero_fu_1322_dlti_we0,
        dlti_d0 => grp_upzero_fu_1322_dlti_d0,
        dlti_q0 => grp_upzero_fu_1322_dlti_q0,
        dlti_address1 => grp_upzero_fu_1322_dlti_address1,
        dlti_ce1 => grp_upzero_fu_1322_dlti_ce1,
        dlti_we1 => grp_upzero_fu_1322_dlti_we1,
        dlti_d1 => grp_upzero_fu_1322_dlti_d1,
        dlti_q1 => grp_upzero_fu_1322_dlti_q1,
        bli_address0 => grp_upzero_fu_1322_bli_address0,
        bli_ce0 => grp_upzero_fu_1322_bli_ce0,
        bli_q0 => grp_upzero_fu_1322_bli_q0,
        bli_address1 => grp_upzero_fu_1322_bli_address1,
        bli_ce1 => grp_upzero_fu_1322_bli_ce1,
        bli_we1 => grp_upzero_fu_1322_bli_we1,
        bli_d1 => grp_upzero_fu_1322_bli_d1);

    grp_uppol2_fu_1363 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_1363_ap_start,
        ap_done => grp_uppol2_fu_1363_ap_done,
        ap_idle => grp_uppol2_fu_1363_ap_idle,
        ap_ready => grp_uppol2_fu_1363_ap_ready,
        al1 => grp_uppol2_fu_1363_al1,
        al2 => grp_uppol2_fu_1363_al2,
        plt => grp_uppol2_fu_1363_plt,
        plt1 => grp_uppol2_fu_1363_plt1,
        plt2 => grp_uppol2_fu_1363_plt2,
        ap_return => grp_uppol2_fu_1363_ap_return);

    grp_uppol1_fu_1392 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_1392_ap_start,
        ap_done => grp_uppol1_fu_1392_ap_done,
        ap_idle => grp_uppol1_fu_1392_ap_idle,
        ap_ready => grp_uppol1_fu_1392_ap_ready,
        al1 => grp_uppol1_fu_1392_al1,
        apl2 => reg_1601,
        plt => grp_uppol1_fu_1392_plt,
        plt1 => grp_uppol1_fu_1392_plt1,
        ap_return => grp_uppol1_fu_1392_ap_return);

    grp_logsch_fu_1419 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_1419_ap_start,
        ap_done => grp_logsch_fu_1419_ap_done,
        ap_idle => grp_logsch_fu_1419_ap_idle,
        ap_ready => grp_logsch_fu_1419_ap_ready,
        ih => grp_logsch_fu_1419_ih,
        nbh => grp_logsch_fu_1419_nbh,
        ap_return => grp_logsch_fu_1419_ap_return);

    adpcm_main_mul_32cud_x_U39 : component adpcm_main_mul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1119_p0,
        din1 => grp_fu_1119_p1,
        ce => grp_fu_1119_ce,
        dout => grp_fu_1119_p2);

    adpcm_main_mux_42eOg_x_U40 : component adpcm_main_mux_42eOg_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => ap_const_lv32_FFFFE310,
        din2 => ap_const_lv32_FFFFF9B0,
        din3 => ap_const_lv32_1CF0,
        din4 => ap_const_lv32_650,
        din5 => tmp_6_fu_1900_p5,
        dout => tmp_6_fu_1900_p6);

    adpcm_main_mux_42eOg_x_U41 : component adpcm_main_mux_42eOg_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => ap_const_lv32_FFFFE310,
        din2 => ap_const_lv32_FFFFF9B0,
        din3 => ap_const_lv32_1CF0,
        din4 => ap_const_lv32_650,
        din5 => tmp_11_fu_3033_p5,
        dout => tmp_11_fu_3033_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond2_fu_2271_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = exitcond2_reg_3366))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = exitcond2_reg_3366))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2499_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and not((ap_const_lv1_0 = exitcond2_i_i_reg_3486))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_1215_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_1215_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state83)))) then 
                    ap_reg_grp_filtep_fu_1215_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_1215_ap_ready)) then 
                    ap_reg_grp_filtep_fu_1215_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_1174_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_1174_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state83)))) then 
                    ap_reg_grp_filtez_fu_1174_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_1174_ap_ready)) then 
                    ap_reg_grp_filtez_fu_1174_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_1419_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_1419_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state104)))) then 
                    ap_reg_grp_logsch_fu_1419_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_1419_ap_ready)) then 
                    ap_reg_grp_logsch_fu_1419_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_1270_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_1270_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state93)))) then 
                    ap_reg_grp_logscl_fu_1270_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_1270_ap_ready)) then 
                    ap_reg_grp_logscl_fu_1270_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_1244_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_1244_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
                    ap_reg_grp_quantl_fu_1244_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_1244_ap_ready)) then 
                    ap_reg_grp_quantl_fu_1244_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_1291_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_1291_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state95)) or ((ap_const_lv1_1 = ap_CS_fsm_state106)))) then 
                    ap_reg_grp_scalel_fu_1291_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_1291_ap_ready)) then 
                    ap_reg_grp_scalel_fu_1291_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_1392_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_1392_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state95)) or ((ap_const_lv1_1 = ap_CS_fsm_state106)))) then 
                    ap_reg_grp_uppol1_fu_1392_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_1392_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_1392_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_1363_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_1363_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state93)) or ((ap_const_lv1_1 = ap_CS_fsm_state104)))) then 
                    ap_reg_grp_uppol2_fu_1363_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_1363_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_1363_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_1322_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_1322_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state93)) or ((ap_const_lv1_1 = ap_CS_fsm_state104)))) then 
                    ap_reg_grp_upzero_fu_1322_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_1322_ap_ready)) then 
                    ap_reg_grp_upzero_fu_1322_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond2_reg_3366) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                ad_ptr_0_rec_i_i_reg_665 <= p_rec2_i_i_reg_846;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                ad_ptr_0_rec_i_i_reg_665 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_708_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                ad_ptr_1_rec_i_i_reg_708 <= grp_fu_811_p2(5 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                ad_ptr_1_rec_i_i_reg_708 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    dec_deth_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                                dec_deth(14 downto 0) <= p_trunc10_ext_fu_2197_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_1652_p2))) then 
                dec_deth(0) <= '0';
                dec_deth(1) <= '0';
                dec_deth(2) <= '0';
                dec_deth(3) <= '1';
                dec_deth(4) <= '0';
                dec_deth(5) <= '0';
                dec_deth(6) <= '0';
                dec_deth(7) <= '0';
                dec_deth(8) <= '0';
                dec_deth(9) <= '0';
                dec_deth(10) <= '0';
                dec_deth(11) <= '0';
                dec_deth(12) <= '0';
                dec_deth(13) <= '0';
                dec_deth(14) <= '0';
            end if; 
        end if;
    end process;

    dec_detl_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done))))) then 
                                dec_detl(14 downto 0) <= p_trunc9_ext_fu_2155_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_1652_p2))) then 
                dec_detl(0) <= '0';
                dec_detl(1) <= '0';
                dec_detl(2) <= '0';
                dec_detl(3) <= '0';
                dec_detl(4) <= '0';
                dec_detl(5) <= '1';
                dec_detl(6) <= '0';
                dec_detl(7) <= '0';
                dec_detl(8) <= '0';
                dec_detl(9) <= '0';
                dec_detl(10) <= '0';
                dec_detl(11) <= '0';
                dec_detl(12) <= '0';
                dec_detl(13) <= '0';
                dec_detl(14) <= '0';
            end if; 
        end if;
    end process;

    dec_il_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    deth_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state107))) then 
                                deth(14 downto 0) <= p_trunc8_ext_fu_3141_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_1652_p2)))) then 
                deth(0) <= '0';
                deth(1) <= '0';
                deth(2) <= '0';
                deth(3) <= '1';
                deth(4) <= '0';
                deth(5) <= '0';
                deth(6) <= '0';
                deth(7) <= '0';
                deth(8) <= '0';
                deth(9) <= '0';
                deth(10) <= '0';
                deth(11) <= '0';
                deth(12) <= '0';
                deth(13) <= '0';
                deth(14) <= '0';
            end if; 
        end if;
    end process;

    detl_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state96) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))))) then 
                                detl(14 downto 0) <= p_trunc_ext_fu_2937_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_1652_p2)))) then 
                detl(0) <= '0';
                detl(1) <= '0';
                detl(2) <= '0';
                detl(3) <= '0';
                detl(4) <= '0';
                detl(5) <= '1';
                detl(6) <= '0';
                detl(7) <= '0';
                detl(8) <= '0';
                detl(9) <= '0';
                detl(10) <= '0';
                detl(11) <= '0';
                detl(12) <= '0';
                detl(13) <= '0';
                detl(14) <= '0';
            end if; 
        end if;
    end process;

    enc_ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state96) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and not((ap_const_lv1_0 = tmp_115_reg_3622)))) then 
                                enc_ih(1 downto 0) <= tmp_166_cast_cast_fu_2956_p3(1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
                                enc_ih(1 downto 0) <= tmp_159_cast_cast_fu_2924_p3(1 downto 0);
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond2_reg_3366) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                h_ptr_0_rec_i_i_reg_676 <= reg_868;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                h_ptr_0_rec_i_i_reg_676 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i_0_i_i_reg_756 <= reg_871;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                i_0_i_i_reg_756 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i6_reg_720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                i_1_i_i6_reg_720 <= reg_871;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                i_1_i_i6_reg_720 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_799_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
                i_1_i_i_reg_799 <= reg_868;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
                i_1_i_i_reg_799 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    reg_653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                reg_653 <= ap_const_lv32_0;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_state77) and (exitcond_i_i_fu_2608_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)))) then 
                reg_653 <= grp_fu_811_p2(32 - 1 downto 0);
            end if; 
        end if;
    end process;

    reg_732_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state107))) then 
                reg_732 <= reg_960(32 - 1 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_1652_p2)))) then 
                reg_732 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done))))) then 
                reg_732 <= grp_fu_811_p2(32 - 1 downto 0);
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_787_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_787 <= grp_fu_811_p2(6 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_787 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                tqmf_ptr_0_rec_i_i_reg_744 <= reg_831(5 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                tqmf_ptr_0_rec_i_i_reg_744 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366))) then 
                xa1_0_i_i_reg_698 <= reg_831;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                xa1_0_i_i_reg_698 <= xa1_cast_fu_2263_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366))) then 
                xa2_0_i_i_reg_688 <= grp_fu_811_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
                xa2_0_i_i_reg_688 <= xa2_cast_fu_2267_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                xa_0_i_i_reg_767 <= reg_828;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                xa_0_i_i_reg_767 <= xa_cast_fu_2491_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_777_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                xb_0_i_i_reg_777 <= grp_fu_811_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                xb_0_i_i_reg_777 <= xb_cast_fu_2495_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = exitcond2_reg_3366))) then
                accumd_load_1_reg_3390 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state42) and (ap_const_lv1_0 = exitcond_i_i7_fu_2395_p2))) then
                ad_ptr_0_sum7_i_i_reg_930 <= grp_fu_811_p2(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state107))) then
                ah1 <= grp_uppol1_fu_1392_ap_return;
                rh1 <= grp_fu_811_p2(32 - 1 downto 0);
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state106))) then
                ah2 <= tmp_174_ext_fu_3131_p1;
                    nbh(14 downto 0) <= tmp_171_ext_fu_3121_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state96) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))))) then
                al1 <= grp_uppol1_fu_1392_ap_return;
                tmp_129_reg_3653 <= tmp_129_fu_3017_p3;
                    tmp_160_cast5_reg_3648(14 downto 0) <= tmp_160_cast5_fu_2953_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state95))) then
                al2 <= tmp_153_ext_fu_2886_p1;
                    nbl(14 downto 0) <= tmp_150_ext_fu_2876_p1(14 downto 0);
                rlt1 <= grp_fu_811_p2(32 - 1 downto 0);
                rlt2 <= rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond2_reg_3366 <= exitcond2_reg_3366;
                ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366 <= ap_pipeline_reg_pp0_iter1_exitcond2_reg_3366;
                exitcond2_reg_3366 <= exitcond2_fu_2271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3486 <= exitcond2_i_i_reg_3486;
                ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3486 <= ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3486;
                exitcond2_i_i_reg_3486 <= exitcond2_i_i_fu_2499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done))))) then
                dec_ah1 <= grp_uppol1_fu_1392_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then
                dec_ah2 <= tmp_103_ext_fu_2145_p1;
                    dec_nbl(14 downto 0) <= tmp_87_ext_fu_2108_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_3345 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_3351 <= dec_plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state19))) then
                dec_al1 <= grp_uppol1_fu_1392_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                dec_al2 <= tmp_90_ext_fu_2171_p1;
                    dec_nbh(14 downto 0) <= tmp_100_ext_fu_2181_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                dec_dh <= grp_fu_1119_p2(46 downto 15);
                dec_rl <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                dec_dlt <= grp_fu_1119_p2(46 downto 15);
                dec_ph <= grp_fu_811_p2(32 - 1 downto 0);
                tmp_62_reg_3304 <= grp_fu_1119_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                dec_ih <= tmp_54_fu_1845_p1;
                tmp_34_reg_3233 <= tmp_34_fu_1831_p1;
                    tmp_75_cast_reg_3239(14 downto 0) <= tmp_75_cast_fu_1859_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_3316 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_3322 <= dec_ph2;
                dec_rh1 <= reg_838(32 - 1 downto 0);
                dec_rh2 <= dec_rh1;
                tmp_83_reg_3327 <= tmp_83_fu_2079_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done))))) then
                dec_plt <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then
                dec_rlt1 <= grp_fu_811_p2(32 - 1 downto 0);
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state10))) then
                dec_sh <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done))))) then
                dec_sl <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state102))) then
                dh <= grp_fu_1119_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state91))) then
                dlt <= grp_fu_1119_p2(46 downto 15);
                tmp_115_reg_3622 <= tmp_115_fu_2823_p2;
                tmp_40_reg_3616 <= n_assign_fu_2767_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then
                    enc_il(5 downto 0) <= tmp_143_ext_fu_2835_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3637 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3643 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state42))) then
                exitcond_i_i7_reg_3430 <= exitcond_i_i7_fu_2395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then
                exitcond_i_i_reg_3535 <= exitcond_i_i_fu_2608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_reg_3191) and (ap_const_lv1_0 = tmp_32_fu_1757_p2))) then
                p_lshr1_reg_3213 <= p_neg1_fu_1762_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                p_rec2_i_i_reg_846 <= grp_fu_811_p2(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state103))) then
                ph <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then
                ph1 <= ph;
                ph1_load_reg_3679 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3685 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state92))) then
                plt <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                qq6_code6_table_load_reg_3228 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state85)))) then
                reg_1543 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then
                reg_1547 <= dec_al1;
                reg_1554 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state82) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done)))))) then
                reg_1560 <= grp_filtez_fu_1174_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state94) and not(((ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))))) then
                reg_1565 <= grp_logscl_fu_1270_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then
                reg_1570 <= dec_ah1;
                reg_1577 <= dec_ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state105) and not(((ap_const_logic_0 = grp_logsch_fu_1419_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))))) then
                reg_1583 <= grp_logsch_fu_1419_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state91)) or ((ap_const_lv1_1 = ap_CS_fsm_state102)))) then
                reg_1588 <= grp_fu_1119_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state84) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1244_ap_done)))))) then
                reg_1595 <= grp_filtez_fu_1174_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state94) and not(((ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state105) and not(((ap_const_logic_0 = grp_logsch_fu_1419_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))))) then
                reg_1601 <= grp_uppol2_fu_1363_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)))) then
                reg_1606 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3486)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3486)))) then
                reg_1610 <= h_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3486)))) then
                reg_1614 <= grp_fu_1119_p2(46 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond2_reg_3366)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3486)))) then
                reg_1618 <= grp_fu_1119_p2(46 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3486)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3486)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)) or ((ap_const_lv1_1 = ap_CS_fsm_state69)))) then
                reg_1622 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state93)))) then
                reg_1626 <= al1;
                reg_1633 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state83)) or ((ap_const_lv1_1 = ap_CS_fsm_state104)))) then
                reg_1639 <= ah1;
                reg_1646 <= ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3486)))) then
                reg_828 <= grp_fu_811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3366) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3486)))) then
                reg_831 <= grp_fu_811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)))) then
                reg_838 <= grp_fu_811_p2(47 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_0 = exitcond2_reg_3366)) or ((ap_const_lv1_1 = ap_CS_fsm_state78)))) then
                reg_868 <= grp_fu_811_p2(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then
                reg_871 <= grp_fu_811_p2(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_state96) and not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done)))))) then
                reg_960 <= grp_fu_811_p2(47 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then
                sh <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state82) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done))))) then
                sl <= grp_fu_811_p2(32 - 1 downto 0);
                tmp_101_reg_3559 <= tmp_101_fu_2685_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then
                test_data_load_1_reg_3471 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then
                test_data_load_reg_3461 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state84) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1244_ap_done))))) then
                tmp_102_reg_3580 <= grp_quantl_fu_1244_ap_return;
                tmp_112_reg_3591 <= grp_filtep_fu_1215_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then
                tmp_117_reg_3444 <= tmp_117_fu_2418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_1652_p2)))) then
                    tmp_25_reg_3195(31 downto 1) <= tmp_25_fu_1712_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                    tmp_30_reg_3205(31 downto 1) <= tmp_30_fu_1749_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state41))) then
                tmp_91_reg_3425 <= grp_fu_1499_p1(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tmp_92_reg_3420 <= grp_fu_1499_p1(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state81))) then
                tmp_96_reg_3544 <= tmp_96_fu_2624_p1(46 downto 15);
                xh <= tmp_97_fu_2640_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                tmp_reg_3191 <= tmp_fu_1652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_1652_p2))) then
                tmp_s_reg_822 <= grp_fu_811_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    detl(31 downto 15) <= "00000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    enc_il(31 downto 6) <= "00000000000000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    enc_ih(31 downto 2) <= "000000000000000000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    dec_detl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    tmp_25_reg_3195(0) <= '0';
    tmp_30_reg_3205(0) <= '0';
    tmp_75_cast_reg_3239(46 downto 15) <= "00000000000000000000000000000000";
    tmp_160_cast5_reg_3648(46 downto 15) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_filtez_fu_1174_ap_done, grp_filtep_fu_1215_ap_done, grp_logscl_fu_1270_ap_done, grp_logsch_fu_1419_ap_done, tmp_fu_1652_p2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage3, grp_scalel_fu_1291_ap_done, grp_uppol1_fu_1392_ap_done, grp_upzero_fu_1322_ap_done, grp_uppol2_fu_1363_ap_done, grp_quantl_fu_1244_ap_done, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, tmp_reg_3191, tmp_32_fu_1757_p2, exitcond2_fu_2271_p2, exitcond_i_i7_reg_3430, exitcond2_i_i_fu_2499_p2, exitcond_i_i_reg_3535, tmp_31_fu_2435_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_1652_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                elsif ((not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_1652_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not((ap_const_lv1_0 = tmp_reg_3191)) or not((ap_const_lv1_0 = tmp_32_fu_1757_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond2_fu_2271_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if ((ap_const_lv1_0 = exitcond_i_i7_reg_3430)) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state48 => 
                if (not((ap_const_lv1_0 = tmp_31_fu_2435_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2499_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
            when ap_ST_fsm_pp2_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
            when ap_ST_fsm_pp2_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if ((ap_const_lv1_0 = exitcond_i_i_reg_3535)) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1244_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state95;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state97;
                else
                    ap_NS_fsm <= ap_ST_fsm_state96;
                end if;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_1419_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state106;
                else
                    ap_NS_fsm <= ap_ST_fsm_state105;
                end if;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state107;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_2407_p0 <= grp_fu_811_p2(5 - 1 downto 0);
    ac_ptr_0_sum_i_i_cas_fu_2407_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_cas_fu_2407_p0),64));

    accumc_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state43, ap_CS_fsm_state46, ad_ptr_0_rec_i_i_cas_fu_2277_p1, ad_ptr_0_sum7_i_i_ca_fu_2401_p1, ac_ptr_0_sum_i_i_cas_fu_2407_p1, ap_CS_fsm_state44, ap_CS_fsm_state33)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            accumc_address0 <= ac_ptr_0_sum_i_i_cas_fu_2407_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_2401_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_2277_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state44, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, tmp_83_reg_3327, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            accumc_d0 <= tmp_83_reg_3327;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            accumc_d0 <= accumc_q0;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state43, ap_CS_fsm_state46, ad_ptr_0_rec_i_i_cas_fu_2277_p1, ad_ptr_0_sum7_i_i_ca_fu_2401_p1, ac_ptr_0_sum_i_i_cas_fu_2407_p1, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            accumd_address0 <= ac_ptr_0_sum_i_i_cas_fu_2407_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_2401_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_2277_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, reg_838, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            accumd_d0 <= reg_838(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            accumd_d0 <= accumd_q0;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_2277_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_phi_fu_669_p4),64));

    ad_ptr_0_rec_i_i_phi_fu_669_p4_assign_proc : process(ad_ptr_0_rec_i_i_reg_665, exitcond2_reg_3366, p_rec2_i_i_reg_846, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond2_reg_3366) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            ad_ptr_0_rec_i_i_phi_fu_669_p4 <= p_rec2_i_i_reg_846;
        else 
            ad_ptr_0_rec_i_i_phi_fu_669_p4 <= ad_ptr_0_rec_i_i_reg_665;
        end if; 
    end process;

    ad_ptr_0_sum7_i_i_ca_fu_2401_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_reg_930),64));
    ad_ptr_1_rec_i_i_phi_fu_712_p4 <= ad_ptr_1_rec_i_i_reg_708;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(48 downto 48);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state102 <= ap_CS_fsm(85 downto 85);
    ap_CS_fsm_state103 <= ap_CS_fsm(86 downto 86);
    ap_CS_fsm_state104 <= ap_CS_fsm(87 downto 87);
    ap_CS_fsm_state105 <= ap_CS_fsm(88 downto 88);
    ap_CS_fsm_state106 <= ap_CS_fsm(89 downto 89);
    ap_CS_fsm_state107 <= ap_CS_fsm(90 downto 90);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state33 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state34 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state35 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state39 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state41 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state42 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state43 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state44 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state45 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state46 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state47 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state48 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state49 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state50 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state53 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state54 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state55 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state68 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state69 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state70 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state74 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state75 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state76 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_state77 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_state78 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_state79 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state80 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state81 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state82 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state83 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state84 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state85 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_state86 <= ap_CS_fsm(69 downto 69);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state90 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state91 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state92 <= ap_CS_fsm(75 downto 75);
    ap_CS_fsm_state93 <= ap_CS_fsm(76 downto 76);
    ap_CS_fsm_state94 <= ap_CS_fsm(77 downto 77);
    ap_CS_fsm_state95 <= ap_CS_fsm(78 downto 78);
    ap_CS_fsm_state96 <= ap_CS_fsm(79 downto 79);
    ap_CS_fsm_state97 <= ap_CS_fsm(80 downto 80);

    ap_done_assign_proc : process(tmp_reg_3191, ap_CS_fsm_state3, tmp_32_fu_1757_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (not((ap_const_lv1_0 = tmp_reg_3191)) or not((ap_const_lv1_0 = tmp_32_fu_1757_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_3191, ap_CS_fsm_state3, tmp_32_fu_1757_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (not((ap_const_lv1_0 = tmp_reg_3191)) or not((ap_const_lv1_0 = tmp_32_fu_1757_p2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Addr_A <= std_logic_vector(shift_left(unsigned(compressed_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    compressed_Addr_A_orig_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state97, tmp_50_fu_1826_p1, tmp_130_fu_3073_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state97))) then 
            compressed_Addr_A_orig <= tmp_130_fu_3073_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            compressed_Addr_A_orig <= tmp_50_fu_1826_p1(32 - 1 downto 0);
        else 
            compressed_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    compressed_Clk_A <= ap_clk;
    compressed_Din_A <= (enc_il or tmp_126_fu_3060_p2);

    compressed_EN_A_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state97)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state97)))) then 
            compressed_EN_A <= ap_const_logic_1;
        else 
            compressed_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Rst_A <= ap_rst;

    compressed_WEN_A_assign_proc : process(ap_CS_fsm_state97)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state97)))) then 
            compressed_WEN_A <= ap_const_lv4_F;
        else 
            compressed_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state15, grp_filtez_fu_1174_bpl_address0, grp_upzero_fu_1322_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bph_address0 <= grp_upzero_fu_1322_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_address0 <= grp_filtez_fu_1174_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state15, grp_filtez_fu_1174_bpl_ce0, grp_upzero_fu_1322_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_1322_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_1174_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_ce1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_1322_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bph_ce1 <= grp_upzero_fu_1322_bli_ce1;
        else 
            dec_del_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_1322_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bph_we1 <= grp_upzero_fu_1322_bli_we1;
        else 
            dec_del_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_filtez_fu_1174_bpl_address0, grp_upzero_fu_1322_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_1322_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_1174_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_filtez_fu_1174_bpl_ce0, grp_upzero_fu_1322_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_1322_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_1174_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_ce1_assign_proc : process(ap_CS_fsm_state17, grp_upzero_fu_1322_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_bpl_ce1 <= grp_upzero_fu_1322_bli_ce1;
        else 
            dec_del_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we1_assign_proc : process(ap_CS_fsm_state17, grp_upzero_fu_1322_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_bpl_we1 <= grp_upzero_fu_1322_bli_we1;
        else 
            dec_del_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state15, grp_filtez_fu_1174_dlt_address0, grp_upzero_fu_1322_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_1322_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_1174_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state15, grp_filtez_fu_1174_dlt_ce0, grp_upzero_fu_1322_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_1322_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_1174_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_1322_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_1322_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_1322_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_1322_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_1322_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_1322_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_filtez_fu_1174_dlt_address0, grp_upzero_fu_1322_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_1322_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_1174_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_filtez_fu_1174_dlt_ce0, grp_upzero_fu_1322_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_1322_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_1174_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state17, grp_upzero_fu_1322_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_1322_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state17, grp_upzero_fu_1322_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_1322_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state17, grp_upzero_fu_1322_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_1322_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Addr_A <= std_logic_vector(shift_left(unsigned(dec_result_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    dec_result_Addr_A_orig_assign_proc : process(ap_CS_fsm_state47, tmp_117_reg_3444, ap_CS_fsm_state46, tmp_116_fu_2413_p1, tmp_132_fu_2430_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state47) and not((ap_const_lv1_0 = tmp_117_reg_3444)))) then 
            dec_result_Addr_A_orig <= tmp_132_fu_2430_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = tmp_117_reg_3444))) then 
            dec_result_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            dec_result_Addr_A_orig <= tmp_116_fu_2413_p1(32 - 1 downto 0);
        else 
            dec_result_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dec_result_Clk_A <= ap_clk;

    dec_result_Din_A_assign_proc : process(ap_CS_fsm_state47, tmp_92_reg_3420, tmp_91_reg_3425, tmp_117_reg_3444, ap_CS_fsm_state46)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state47) and not((ap_const_lv1_0 = tmp_117_reg_3444))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = tmp_117_reg_3444)))) then 
            dec_result_Din_A <= tmp_92_reg_3420;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            dec_result_Din_A <= tmp_91_reg_3425;
        else 
            dec_result_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_EN_A_assign_proc : process(ap_CS_fsm_state47, tmp_117_reg_3444, ap_CS_fsm_state46)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not((ap_const_lv1_0 = tmp_117_reg_3444))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = tmp_117_reg_3444)))) then 
            dec_result_EN_A <= ap_const_logic_1;
        else 
            dec_result_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Rst_A <= ap_rst;

    dec_result_WEN_A_assign_proc : process(ap_CS_fsm_state47, tmp_117_reg_3444, ap_CS_fsm_state46)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not((ap_const_lv1_0 = tmp_117_reg_3444))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and (ap_const_lv1_0 = tmp_117_reg_3444)))) then 
            dec_result_WEN_A <= ap_const_lv4_F;
        else 
            dec_result_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

        decis_fu_2797_p1 <= std_logic_vector(resize(signed(tmp_9_fu_2787_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state105, ap_CS_fsm_state84, grp_filtez_fu_1174_bpl_address0, grp_upzero_fu_1322_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_bph_address0 <= grp_upzero_fu_1322_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            delay_bph_address0 <= grp_filtez_fu_1174_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state105, ap_CS_fsm_state84, grp_filtez_fu_1174_bpl_ce0, grp_upzero_fu_1322_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_bph_ce0 <= grp_upzero_fu_1322_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            delay_bph_ce0 <= grp_filtez_fu_1174_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_ce1_assign_proc : process(ap_CS_fsm_state105, grp_upzero_fu_1322_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_bph_ce1 <= grp_upzero_fu_1322_bli_ce1;
        else 
            delay_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we1_assign_proc : process(ap_CS_fsm_state105, grp_upzero_fu_1322_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_bph_we1 <= grp_upzero_fu_1322_bli_we1;
        else 
            delay_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state94, grp_filtez_fu_1174_bpl_address0, grp_upzero_fu_1322_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_bpl_address0 <= grp_upzero_fu_1322_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            delay_bpl_address0 <= grp_filtez_fu_1174_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state94, grp_filtez_fu_1174_bpl_ce0, grp_upzero_fu_1322_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_bpl_ce0 <= grp_upzero_fu_1322_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            delay_bpl_ce0 <= grp_filtez_fu_1174_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_ce1_assign_proc : process(ap_CS_fsm_state94, grp_upzero_fu_1322_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_bpl_ce1 <= grp_upzero_fu_1322_bli_ce1;
        else 
            delay_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we1_assign_proc : process(ap_CS_fsm_state94, grp_upzero_fu_1322_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_bpl_we1 <= grp_upzero_fu_1322_bli_we1;
        else 
            delay_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state105, ap_CS_fsm_state84, grp_filtez_fu_1174_dlt_address0, grp_upzero_fu_1322_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_dhx_address0 <= grp_upzero_fu_1322_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            delay_dhx_address0 <= grp_filtez_fu_1174_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state105, ap_CS_fsm_state84, grp_filtez_fu_1174_dlt_ce0, grp_upzero_fu_1322_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_dhx_ce0 <= grp_upzero_fu_1322_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            delay_dhx_ce0 <= grp_filtez_fu_1174_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state105, grp_upzero_fu_1322_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_dhx_ce1 <= grp_upzero_fu_1322_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state105, grp_upzero_fu_1322_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_dhx_we0 <= grp_upzero_fu_1322_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state105, grp_upzero_fu_1322_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            delay_dhx_we1 <= grp_upzero_fu_1322_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state94, grp_filtez_fu_1174_dlt_address0, grp_upzero_fu_1322_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_dltx_address0 <= grp_upzero_fu_1322_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            delay_dltx_address0 <= grp_filtez_fu_1174_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state94, grp_filtez_fu_1174_dlt_ce0, grp_upzero_fu_1322_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_dltx_ce0 <= grp_upzero_fu_1322_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            delay_dltx_ce0 <= grp_filtez_fu_1174_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state94, grp_upzero_fu_1322_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_dltx_ce1 <= grp_upzero_fu_1322_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state94, grp_upzero_fu_1322_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_dltx_we0 <= grp_upzero_fu_1322_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state94, grp_upzero_fu_1322_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            delay_dltx_we1 <= grp_upzero_fu_1322_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_2271_p2 <= "1" when (ad_ptr_0_rec_i_i_phi_fu_669_p4 = ap_const_lv4_A) else "0";
    exitcond2_i_i_fu_2499_p2 <= "1" when (i_0_i_i_phi_fu_760_p4 = ap_const_lv4_A) else "0";
    exitcond_i_i7_fu_2395_p2 <= "1" when (i_1_i_i6_reg_720 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_2608_p2 <= "1" when (i_1_i_i_reg_799 = ap_const_lv5_16) else "0";

    grp_filtep_fu_1215_al1_assign_proc : process(ap_CS_fsm_state9, reg_1547, ap_CS_fsm_state82, reg_1570, ap_CS_fsm_state10, ap_CS_fsm_state84, reg_1626, reg_1639)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtep_fu_1215_al1 <= reg_1639;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtep_fu_1215_al1 <= reg_1626;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtep_fu_1215_al1 <= reg_1570;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1215_al1 <= reg_1547;
        else 
            grp_filtep_fu_1215_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_1215_al2_assign_proc : process(ap_CS_fsm_state9, reg_1554, ap_CS_fsm_state82, reg_1577, ap_CS_fsm_state10, ap_CS_fsm_state84, reg_1633, reg_1646)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtep_fu_1215_al2 <= reg_1646;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtep_fu_1215_al2 <= reg_1633;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtep_fu_1215_al2 <= reg_1577;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1215_al2 <= reg_1554;
        else 
            grp_filtep_fu_1215_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_1215_ap_start <= ap_reg_grp_filtep_fu_1215_ap_start;

    grp_filtep_fu_1215_rlt1_assign_proc : process(rlt1, rh1, dec_rlt1, dec_rh1, ap_CS_fsm_state9, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state84)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtep_fu_1215_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtep_fu_1215_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtep_fu_1215_rlt1 <= dec_rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1215_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_1215_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_1215_rlt2_assign_proc : process(rlt2, rh2, dec_rlt2, dec_rh2, ap_CS_fsm_state9, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state84)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtep_fu_1215_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtep_fu_1215_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtep_fu_1215_rlt2 <= dec_rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1215_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_1215_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_1174_ap_start <= ap_reg_grp_filtez_fu_1174_ap_start;

    grp_filtez_fu_1174_bpl_q0_assign_proc : process(delay_bpl_q0, delay_bph_q0, dec_del_bpl_q0, dec_del_bph_q0, ap_CS_fsm_state9, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state84)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtez_fu_1174_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtez_fu_1174_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_1174_bpl_q0 <= dec_del_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtez_fu_1174_bpl_q0 <= dec_del_bpl_q0;
        else 
            grp_filtez_fu_1174_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_1174_dlt_q0_assign_proc : process(delay_dltx_q0, delay_dhx_q0, dec_del_dltx_q0, dec_del_dhx_q0, ap_CS_fsm_state9, ap_CS_fsm_state82, ap_CS_fsm_state10, ap_CS_fsm_state84)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_filtez_fu_1174_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_filtez_fu_1174_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_1174_dlt_q0 <= dec_del_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtez_fu_1174_dlt_q0 <= dec_del_dltx_q0;
        else 
            grp_filtez_fu_1174_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1119_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state77, ap_CS_fsm_state9, grp_filtez_fu_1174_ap_done, grp_filtep_fu_1215_ap_done, grp_logscl_fu_1270_ap_done, grp_logsch_fu_1419_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state76, ap_CS_fsm_state45, ap_CS_fsm_state80, ap_CS_fsm_state78, ap_CS_fsm_state43, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_state96, grp_scalel_fu_1291_ap_done, grp_uppol1_fu_1392_ap_done, ap_CS_fsm_state82, ap_CS_fsm_state94, grp_upzero_fu_1322_ap_done, grp_uppol2_fu_1363_ap_done, ap_CS_fsm_state105, ap_CS_fsm_state10, ap_CS_fsm_state84, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state34, ap_CS_fsm_state49, ap_CS_fsm_state69, ap_CS_fsm_state81, ap_CS_fsm_state93, ap_CS_fsm_state83, ap_CS_fsm_state104, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state46, ap_CS_fsm_state107, ap_CS_fsm_state95, ap_CS_fsm_state106, ap_CS_fsm_state19, ap_CS_fsm_state44, ap_CS_fsm_state79, ap_CS_fsm_state92, ap_CS_fsm_state103, ap_CS_fsm_state33, ap_CS_fsm_state48, ap_CS_fsm_state68)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) or (ap_const_lv1_1 = ap_CS_fsm_state77) or (ap_const_lv1_1 = ap_CS_fsm_state13) or (ap_const_lv1_1 = ap_CS_fsm_state14) or (ap_const_lv1_1 = ap_CS_fsm_state76) or (ap_const_lv1_1 = ap_CS_fsm_state45) or (ap_const_lv1_1 = ap_CS_fsm_state80) or (ap_const_lv1_1 = ap_CS_fsm_state78) or (ap_const_lv1_1 = ap_CS_fsm_state43) or (ap_const_lv1_1 = ap_CS_fsm_state42) or (ap_const_lv1_1 = ap_CS_fsm_state47) or (ap_const_lv1_1 = ap_CS_fsm_state96) or (ap_const_lv1_1 = ap_CS_fsm_state82) or (ap_const_lv1_1 = ap_CS_fsm_state94) or (ap_const_lv1_1 = ap_CS_fsm_state105) or (ap_const_lv1_1 = ap_CS_fsm_state84) or (ap_const_lv1_1 = ap_CS_fsm_state34) or (ap_const_lv1_1 = ap_CS_fsm_state49) or (ap_const_lv1_1 = ap_CS_fsm_state69) or (ap_const_lv1_1 = ap_CS_fsm_state81) or (ap_const_lv1_1 = ap_CS_fsm_state93) or (ap_const_lv1_1 = ap_CS_fsm_state83) or (ap_const_lv1_1 = ap_CS_fsm_state104) or (ap_const_lv1_1 = ap_CS_fsm_state2) or (ap_const_lv1_1 = ap_CS_fsm_state3) or (ap_const_lv1_1 = ap_CS_fsm_state4) or (ap_const_lv1_1 = ap_CS_fsm_state41) or (ap_const_lv1_1 = ap_CS_fsm_state46) or (ap_const_lv1_1 = ap_CS_fsm_state107) or (ap_const_lv1_1 = ap_CS_fsm_state95) or (ap_const_lv1_1 = ap_CS_fsm_state106) or (ap_const_lv1_1 = ap_CS_fsm_state44) or (ap_const_lv1_1 = ap_CS_fsm_state79) or (ap_const_lv1_1 = ap_CS_fsm_state92) or (ap_const_lv1_1 = ap_CS_fsm_state103) or (ap_const_lv1_1 = ap_CS_fsm_state33) or (ap_const_lv1_1 = ap_CS_fsm_state48) or (ap_const_lv1_1 = ap_CS_fsm_state68) or ((ap_const_lv1_1 = ap_CS_fsm_state9) and ((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1270_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1419_ap_done))) or (((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and ((ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and ((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1322_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1363_ap_done))) or (((ap_const_logic_0 = grp_scalel_fu_1291_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1392_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state19)))) then 
            grp_fu_1119_ce <= ap_const_logic_0;
        else 
            grp_fu_1119_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1119_p0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state6, ap_CS_fsm_state85, ap_CS_fsm_state15, ap_CS_fsm_state5, tmp_82_cast_fu_1879_p1, tmp_96_cast_fu_1914_p1, tmp_77_cast_fu_1919_p1, ap_CS_fsm_state7, tmp_129_cast_fu_2304_p1, tmp_132_cast_fu_2313_p1, ap_CS_fsm_state35, tmp_68_cast_fu_2440_p1, ap_CS_fsm_state50, tmp_115_cast_fu_2528_p1, tmp_118_cast_fu_2538_p1, ap_CS_fsm_state70, tmp_160_cast_fu_2737_p1, ap_CS_fsm_state86, tmp_146_cast_fu_2746_p1, tmp_160_cast5_reg_3648, ap_CS_fsm_state97)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state97))) then 
            grp_fu_1119_p0 <= tmp_160_cast5_reg_3648(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state86))) then 
            grp_fu_1119_p0 <= tmp_146_cast_fu_2746_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state85))) then 
            grp_fu_1119_p0 <= tmp_160_cast_fu_2737_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_1119_p0 <= tmp_118_cast_fu_2538_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            grp_fu_1119_p0 <= tmp_115_cast_fu_2528_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state50))) then 
            grp_fu_1119_p0 <= tmp_68_cast_fu_2440_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_1119_p0 <= tmp_132_cast_fu_2313_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_1119_p0 <= tmp_129_cast_fu_2304_p1(32 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)))) then 
            grp_fu_1119_p0 <= ap_const_lv39_7FFFFFFFD4(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            grp_fu_1119_p0 <= tmp_77_cast_fu_1919_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            grp_fu_1119_p0 <= tmp_96_cast_fu_1914_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            grp_fu_1119_p0 <= tmp_82_cast_fu_1879_p1(32 - 1 downto 0);
        else 
            grp_fu_1119_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1119_p1_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state6, ap_CS_fsm_state85, ap_CS_fsm_state15, ap_CS_fsm_state5, tmp_75_cast_fu_1859_p1, tmp_75_cast_reg_3239, tmp_95_cast_fu_1887_p1, ap_CS_fsm_state7, tmp_109_cast_fu_2103_p1, tmp_128_cast_fu_2299_p1, tmp_131_cast_fu_2309_p1, tmp_120_cast_fu_2328_p1, ap_CS_fsm_state35, ap_CS_fsm_state50, tmp_114_cast_fu_2523_p1, tmp_117_cast_fu_2533_p1, tmp_110_cast_fu_2553_p1, ap_CS_fsm_state70, tmp_144_cast_fu_2742_p1, ap_CS_fsm_state86, ap_CS_fsm_state97, tmp_167_cast_fu_3047_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state97))) then 
            grp_fu_1119_p1 <= tmp_167_cast_fu_3047_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state86))) then 
            grp_fu_1119_p1 <= tmp_144_cast_fu_2742_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state85))) then 
            grp_fu_1119_p1 <= ap_const_lv43_234(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            grp_fu_1119_p1 <= tmp_110_cast_fu_2553_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_1119_p1 <= tmp_117_cast_fu_2533_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            grp_fu_1119_p1 <= tmp_114_cast_fu_2523_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state50))) then 
            grp_fu_1119_p1 <= ap_const_lv39_7FFFFFFFD4(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            grp_fu_1119_p1 <= tmp_120_cast_fu_2328_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_1119_p1 <= tmp_131_cast_fu_2309_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_1119_p1 <= tmp_128_cast_fu_2299_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_fu_1119_p1 <= tmp_109_cast_fu_2103_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            grp_fu_1119_p1 <= tmp_75_cast_reg_3239(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            grp_fu_1119_p1 <= tmp_95_cast_fu_1887_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            grp_fu_1119_p1 <= tmp_75_cast_fu_1859_p1(32 - 1 downto 0);
        else 
            grp_fu_1119_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1437_p1 <= grp_fu_811_p2(32 - 1 downto 0);
    grp_fu_1437_p3 <= grp_fu_1437_p1(31 downto 31);
    grp_fu_1445_p1 <= grp_fu_811_p2(32 - 1 downto 0);
    grp_fu_1445_p4 <= grp_fu_1445_p1(31 downto 1);
    grp_fu_1499_p1 <= grp_fu_811_p2(46 - 1 downto 0);

    grp_fu_811_p0_assign_proc : process(ap_CS_fsm_state1, size, dlt, sh, dec_dlt, dec_dh, reg_653, ap_CS_fsm_state77, ap_CS_fsm_state90, h_ptr_0_rec_i_i_reg_676, ap_CS_fsm_state9, tqmf_ptr_0_rec_i_i_reg_744, tmp_fu_1652_p2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_838, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state76, ap_CS_fsm_state45, ap_CS_fsm_state80, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_state78, ap_CS_fsm_state43, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_pp2_stage3, reg_960, ap_CS_fsm_state75, ap_CS_fsm_state96, grp_filtez_fu_1174_ap_return, reg_1560, ap_CS_fsm_state82, reg_1588, ap_CS_fsm_state10, ap_CS_fsm_state11, reg_1595, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state81, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state20, ap_CS_fsm_state41, ad_ptr_0_rec_i_i_phi_fu_669_p4, ad_ptr_1_rec_i_i_phi_fu_712_p4, ad_ptr_1_rec_i_i_reg_708, i_1_i_i6_reg_720, ap_CS_fsm_state107, i_0_i_i_phi_fu_760_p4, tqmf_ptr_0_pn_rec_i_s_phi_fu_791_p4, tqmf_ptr_0_pn_rec_i_s_reg_787, i_1_i_i_reg_799, ap_CS_fsm_state95, ap_CS_fsm_state44, ap_CS_fsm_state79, ap_CS_fsm_state92, ap_CS_fsm_state103, tmp_130_cast_fu_2318_p1, tmp_133_cast_fu_2323_p1, tmp_38_fu_2333_p1, tmp_39_fu_2379_p1, tmp_116_cast_fu_2543_p1, tmp_119_cast_fu_2548_p1, tmp_37_fu_2558_p1, tmp_36_fu_2598_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state107))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(sh),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(ap_const_lv32_2),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(dlt),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_960),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_787),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(i_1_i_i_reg_799),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_pn_rec_i_s_phi_fu_791_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tmp_36_fu_2598_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tmp_37_fu_2558_p1),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_811_p0 <= tmp_119_cast_fu_2548_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then 
            grp_fu_811_p0 <= tmp_116_cast_fu_2543_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_744),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(i_0_i_i_phi_fu_760_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state47))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_653),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(ad_ptr_1_rec_i_i_reg_708),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(i_1_i_i6_reg_720),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(ad_ptr_1_rec_i_i_phi_fu_712_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tmp_39_fu_2379_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(tmp_38_fu_2333_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_811_p0 <= tmp_133_cast_fu_2323_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_811_p0 <= tmp_130_cast_fu_2318_p1;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_reg_676),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_phi_fu_669_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(dec_dlt),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_1560),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_838),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(dec_dh),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_1595),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state103)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(reg_1588),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state82)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(grp_filtez_fu_1174_ap_return),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_CS_fsm_state1 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_fu_1652_p2)) or ((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_lv1_0 = tmp_fu_1652_p2))))) then 
            grp_fu_811_p0 <= std_logic_vector(resize(unsigned(size),50));
        else 
            grp_fu_811_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_811_p1_assign_proc : process(ap_CS_fsm_state1, sl, dh, dec_sl, dec_rl, dec_sh, ap_CS_fsm_state77, ap_CS_fsm_state90, xa2_0_i_i_reg_688, xa1_0_i_i_reg_698, reg_732, ap_CS_fsm_state9, xa_0_i_i_reg_767, xb_0_i_i_reg_777, tmp_fu_1652_p2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_838, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state76, ap_CS_fsm_state45, ap_CS_fsm_state80, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_state78, ap_CS_fsm_state43, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state42, ap_CS_fsm_state47, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state75, ap_CS_fsm_state96, ap_CS_fsm_state82, reg_1588, ap_CS_fsm_state10, ap_CS_fsm_state11, reg_1595, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state81, ap_CS_fsm_state2, tmp_62_reg_3304, ap_CS_fsm_state12, ap_CS_fsm_state20, ap_CS_fsm_state41, grp_filtep_fu_1215_ap_return, tmp_112_reg_3591, ap_CS_fsm_state107, ap_CS_fsm_state95, ap_CS_fsm_state44, ap_CS_fsm_state79, ap_CS_fsm_state92, ap_CS_fsm_state103, tmp_123_cast_fu_2368_p1, tmp_121_cast_fu_2384_p1, tmp_113_cast_fu_2593_p1, tmp_111_cast_fu_2603_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state107))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(dh),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state103))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(reg_1595),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(sl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state90))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_112_reg_3591),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(reg_838),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv6_3F),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state79))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv6_17),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv5_1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv6_15),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_111_cast_fu_2603_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_113_cast_fu_2593_p1),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_811_p1 <= xb_0_i_i_reg_777;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then 
            grp_fu_811_p1 <= xa_0_i_i_reg_767;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state47))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv32_2),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv5_1F),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv5_A),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv5_9),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_121_cast_fu_2384_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_123_cast_fu_2368_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_811_p1 <= xa2_0_i_i_reg_688;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_811_p1 <= xa1_0_i_i_reg_698;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv5_2),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv4_1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(dec_sl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(tmp_62_reg_3304),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(dec_rl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(dec_sh),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(reg_1588),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state96)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(reg_732),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state82)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(grp_filtep_fu_1215_ap_return),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_const_lv1_0 = tmp_fu_1652_p2))))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv32_1),50));
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and (ap_const_lv1_0 = tmp_fu_1652_p2))) then 
            grp_fu_811_p1 <= std_logic_vector(resize(signed(ap_const_lv32_FFFFFFFF),50));
        else 
            grp_fu_811_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_811_p2 <= std_logic_vector(unsigned(grp_fu_811_p0) + unsigned(grp_fu_811_p1));
    grp_logsch_fu_1419_ap_start <= ap_reg_grp_logsch_fu_1419_ap_start;

    grp_logsch_fu_1419_ih_assign_proc : process(enc_ih, dec_ih, ap_CS_fsm_state9, ap_CS_fsm_state105)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_logsch_fu_1419_ih <= enc_ih;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_logsch_fu_1419_ih <= dec_ih;
        else 
            grp_logsch_fu_1419_ih <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_logsch_fu_1419_nbh_assign_proc : process(nbh, dec_nbh, ap_CS_fsm_state9, ap_CS_fsm_state105)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_logsch_fu_1419_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_logsch_fu_1419_nbh <= dec_nbh;
        else 
            grp_logsch_fu_1419_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_1270_ap_start <= ap_reg_grp_logscl_fu_1270_ap_start;

    grp_logscl_fu_1270_il_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state94, tmp_34_reg_3233, tmp_102_reg_3580)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_logscl_fu_1270_il <= tmp_102_reg_3580;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_logscl_fu_1270_il <= tmp_34_reg_3233;
        else 
            grp_logscl_fu_1270_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_1270_nbl_assign_proc : process(nbl, dec_nbl, ap_CS_fsm_state9, ap_CS_fsm_state94)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_logscl_fu_1270_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_logscl_fu_1270_nbl <= dec_nbl;
        else 
            grp_logscl_fu_1270_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_1244_ap_start <= ap_reg_grp_quantl_fu_1244_ap_start;
    grp_scalel_fu_1291_ap_start <= ap_reg_grp_scalel_fu_1291_ap_start;

    grp_scalel_fu_1291_nbl_assign_proc : process(ap_CS_fsm_state96, reg_1565, reg_1583, ap_CS_fsm_state17, ap_CS_fsm_state107, ap_CS_fsm_state19)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state107)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)))) then 
            grp_scalel_fu_1291_nbl <= reg_1583;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state96)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_1291_nbl <= reg_1565;
        else 
            grp_scalel_fu_1291_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_1291_shift_constant_assign_proc : process(ap_CS_fsm_state96, ap_CS_fsm_state17, ap_CS_fsm_state107, ap_CS_fsm_state19)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state107)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)))) then 
            grp_scalel_fu_1291_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state96)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_1291_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_1291_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_1392_al1_assign_proc : process(ap_CS_fsm_state96, reg_1547, reg_1570, ap_CS_fsm_state17, reg_1626, reg_1639, ap_CS_fsm_state107, ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state107))) then 
            grp_uppol1_fu_1392_al1 <= reg_1639;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_uppol1_fu_1392_al1 <= reg_1626;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            grp_uppol1_fu_1392_al1 <= reg_1547;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_1392_al1 <= reg_1570;
        else 
            grp_uppol1_fu_1392_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_1392_ap_start <= ap_reg_grp_uppol1_fu_1392_ap_start;

    grp_uppol1_fu_1392_plt_assign_proc : process(plt, ph, dec_plt, dec_ph, ap_CS_fsm_state96, ap_CS_fsm_state17, ap_CS_fsm_state107, ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state107))) then 
            grp_uppol1_fu_1392_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_uppol1_fu_1392_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            grp_uppol1_fu_1392_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_1392_plt <= dec_ph;
        else 
            grp_uppol1_fu_1392_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_1392_plt1_assign_proc : process(ap_CS_fsm_state96, ap_CS_fsm_state17, dec_ph1_load_reg_3316, dec_plt1_load_reg_3345, plt1_load_reg_3637, ph1_load_reg_3679, ap_CS_fsm_state107, ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state107))) then 
            grp_uppol1_fu_1392_plt1 <= ph1_load_reg_3679;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_uppol1_fu_1392_plt1 <= plt1_load_reg_3637;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            grp_uppol1_fu_1392_plt1 <= dec_plt1_load_reg_3345;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_1392_plt1 <= dec_ph1_load_reg_3316;
        else 
            grp_uppol1_fu_1392_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1363_al1_assign_proc : process(reg_1547, ap_CS_fsm_state94, reg_1570, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17, reg_1626, reg_1639)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_uppol2_fu_1363_al1 <= reg_1639;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_uppol2_fu_1363_al1 <= reg_1626;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol2_fu_1363_al1 <= reg_1547;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_1363_al1 <= reg_1570;
        else 
            grp_uppol2_fu_1363_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1363_al2_assign_proc : process(reg_1554, ap_CS_fsm_state94, reg_1577, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17, reg_1633, reg_1646)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_uppol2_fu_1363_al2 <= reg_1646;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_uppol2_fu_1363_al2 <= reg_1633;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol2_fu_1363_al2 <= reg_1554;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_1363_al2 <= reg_1577;
        else 
            grp_uppol2_fu_1363_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_1363_ap_start <= ap_reg_grp_uppol2_fu_1363_ap_start;

    grp_uppol2_fu_1363_plt_assign_proc : process(plt, ph, dec_plt, dec_ph, ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_uppol2_fu_1363_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_uppol2_fu_1363_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol2_fu_1363_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_1363_plt <= dec_ph;
        else 
            grp_uppol2_fu_1363_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1363_plt1_assign_proc : process(ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17, dec_ph1_load_reg_3316, dec_plt1_load_reg_3345, plt1_load_reg_3637, ph1_load_reg_3679)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_uppol2_fu_1363_plt1 <= ph1_load_reg_3679;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_uppol2_fu_1363_plt1 <= plt1_load_reg_3637;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol2_fu_1363_plt1 <= dec_plt1_load_reg_3345;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_1363_plt1 <= dec_ph1_load_reg_3316;
        else 
            grp_uppol2_fu_1363_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1363_plt2_assign_proc : process(ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17, dec_ph2_load_reg_3322, dec_plt2_load_reg_3351, plt2_load_reg_3643, ph2_load_reg_3685)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_uppol2_fu_1363_plt2 <= ph2_load_reg_3685;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_uppol2_fu_1363_plt2 <= plt2_load_reg_3643;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol2_fu_1363_plt2 <= dec_plt2_load_reg_3351;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_1363_plt2 <= dec_ph2_load_reg_3322;
        else 
            grp_uppol2_fu_1363_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_1322_ap_start <= ap_reg_grp_upzero_fu_1322_ap_start;

    grp_upzero_fu_1322_bli_q0_assign_proc : process(delay_bpl_q0, delay_bph_q0, dec_del_bpl_q0, dec_del_bph_q0, ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_upzero_fu_1322_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_upzero_fu_1322_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_upzero_fu_1322_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_1322_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_1322_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1322_dlt_assign_proc : process(ap_CS_fsm_state94, ap_CS_fsm_state105, reg_1588, ap_CS_fsm_state15, ap_CS_fsm_state17, tmp_62_reg_3304)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_upzero_fu_1322_dlt <= tmp_62_reg_3304;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state94)) or ((ap_const_lv1_1 = ap_CS_fsm_state105)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)))) then 
            grp_upzero_fu_1322_dlt <= reg_1588;
        else 
            grp_upzero_fu_1322_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1322_dlti_q0_assign_proc : process(delay_dltx_q0, delay_dhx_q0, dec_del_dltx_q0, dec_del_dhx_q0, ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_upzero_fu_1322_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_upzero_fu_1322_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_upzero_fu_1322_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_1322_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_1322_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1322_dlti_q1_assign_proc : process(delay_dltx_q1, delay_dhx_q1, dec_del_dltx_q1, dec_del_dhx_q1, ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then 
            grp_upzero_fu_1322_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_upzero_fu_1322_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_upzero_fu_1322_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_1322_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_1322_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp2_stage0, h_ptr_0_rec_i_i_cast_fu_2283_p1, h_ptr_0_sum9_i_i_cas_fu_2294_p1, tqmf_ptr_0_rec_i_i_c_fu_2505_p1, tqmf_ptr_0_sum67_i_i_1_fu_2517_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            h_address0 <= tqmf_ptr_0_sum67_i_i_1_fu_2517_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2505_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            h_address0 <= h_ptr_0_sum9_i_i_cas_fu_2294_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_2283_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp2_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_2283_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_phi_fu_680_p4),64));

    h_ptr_0_rec_i_i_phi_fu_680_p4_assign_proc : process(h_ptr_0_rec_i_i_reg_676, exitcond2_reg_3366, ap_CS_fsm_pp0_stage0, reg_868, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond2_reg_3366) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            h_ptr_0_rec_i_i_phi_fu_680_p4 <= reg_868;
        else 
            h_ptr_0_rec_i_i_phi_fu_680_p4 <= h_ptr_0_rec_i_i_reg_676;
        end if; 
    end process;

    h_ptr_0_sum9_i_i_cas_fu_2294_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_2288_p2),64));
    h_ptr_0_sum9_i_i_fu_2288_p2 <= (h_ptr_0_rec_i_i_reg_676 or ap_const_lv5_1);

    i_0_i_i_phi_fu_760_p4_assign_proc : process(i_0_i_i_reg_756, exitcond2_i_i_reg_3486, reg_871, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            i_0_i_i_phi_fu_760_p4 <= reg_871;
        else 
            i_0_i_i_phi_fu_760_p4 <= i_0_i_i_reg_756;
        end if; 
    end process;

    m_fu_2809_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2767_p2));
    n_assign_1_fu_2815_p3 <= 
        m_fu_2809_p2 when (tmp_41_fu_2801_p3(0) = '1') else 
        n_assign_fu_2767_p2;
    n_assign_fu_2767_p2 <= std_logic_vector(unsigned(xh) - unsigned(reg_653));
    p_lshr2_fu_1688_p4 <= p_neg2_fu_1682_p2(31 downto 1);
    p_lshr3_fu_1725_p4 <= p_neg3_fu_1720_p2(31 downto 1);
    p_lshr_f1_fu_1804_p4 <= reg_653(31 downto 1);
    p_lshr_f_fu_3003_p4 <= reg_732(31 downto 1);
    p_lshr_fu_2983_p4 <= p_neg_fu_2977_p2(31 downto 1);
    p_neg1_fu_1762_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_653));
    p_neg2_fu_1682_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg3_fu_1720_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg_fu_2977_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_732));
    p_neg_t1_fu_1798_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_7_fu_1795_p1));
    p_neg_t2_fu_1698_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr2_fu_1688_p4));
    p_neg_t3_fu_1735_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr3_fu_1725_p4));
    p_neg_t_fu_2997_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_13_fu_2993_p1));
        p_shl2_cast_fu_2481_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2473_p3),37));

    p_shl2_fu_2473_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_2242_p1 <= std_logic_vector(resize(signed(p_shl3_fu_2235_p3),37));

    p_shl3_fu_2235_p3 <= (tmp_83_reg_3327 & ap_const_lv4_0);
        p_shl4_cast_fu_2253_p1 <= std_logic_vector(resize(signed(p_shl4_fu_2246_p3),37));

    p_shl4_fu_2246_p3 <= (tmp_83_reg_3327 & ap_const_lv2_0);
        p_shl5_cast_fu_2571_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2563_p3),37));

    p_shl5_fu_2563_p3 <= (tqmf_q0 & ap_const_lv4_0);
        p_shl6_cast_fu_2583_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2575_p3),37));

    p_shl6_fu_2575_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl7_cast_fu_2346_p1 <= std_logic_vector(resize(signed(p_shl7_fu_2338_p3),37));

    p_shl7_fu_2338_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_2358_p1 <= std_logic_vector(resize(signed(p_shl8_fu_2350_p3),37));

    p_shl8_fu_2350_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_2469_p1 <= std_logic_vector(resize(signed(p_shl_fu_2461_p3),37));

    p_shl_fu_2461_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2619_p0 <= grp_fu_811_p2(6 - 1 downto 0);
    p_sum_i_i_cast_fu_2619_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_cast_fu_2619_p0),64));
    p_trunc10_ext_fu_2197_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1291_ap_return),32));
    p_trunc8_ext_fu_3141_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1291_ap_return),32));
    p_trunc9_ext_fu_2155_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1291_ap_return),32));
    p_trunc_ext_fu_2937_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1291_ap_return),32));

    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state5, tmp_58_fu_1874_p1, tmp_103_fu_2716_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            qq4_code4_table_address0 <= tmp_103_fu_2716_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            qq4_code4_table_address0 <= tmp_58_fu_1874_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_1174_ap_done, grp_filtep_fu_1215_ap_done, ap_CS_fsm_state84, grp_quantl_fu_1244_ap_done, ap_CS_fsm_state5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state84) and not(((ap_const_logic_0 = grp_filtez_fu_1174_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1215_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1244_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state5)))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_63_fu_1782_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Addr_A <= std_logic_vector(shift_left(unsigned(test_data_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    test_data_Addr_A_orig_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, tmp_43_fu_2445_p1, tmp_47_fu_2456_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            test_data_Addr_A_orig <= tmp_47_fu_2456_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            test_data_Addr_A_orig <= tmp_43_fu_2445_p1(32 - 1 downto 0);
        else 
            test_data_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    test_data_Clk_A <= ap_clk;
    test_data_Din_A <= ap_const_lv32_0;

    test_data_EN_A_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            test_data_EN_A <= ap_const_logic_1;
        else 
            test_data_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Rst_A <= ap_rst;
    test_data_WEN_A <= ap_const_lv4_0;
    tmp_100_ext_fu_2181_p1 <= std_logic_vector(resize(unsigned(reg_1583),32));
    tmp_101_fu_2685_p1 <= grp_fu_811_p2(32 - 1 downto 0);
    tmp_101_fu_2685_p2 <= std_logic_vector(unsigned(tmp_96_reg_3544) - unsigned(tmp_101_fu_2685_p1));
        tmp_103_ext_fu_2145_p1 <= std_logic_vector(resize(signed(reg_1601),32));

    tmp_103_fu_2716_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_2706_p4),64));
    tmp_109_cast_fu_2103_p0 <= reg_838(32 - 1 downto 0);
        tmp_109_cast_fu_2103_p1 <= std_logic_vector(resize(signed(tmp_109_cast_fu_2103_p0),39));

    tmp_10_fu_2706_p4 <= grp_quantl_fu_1244_ap_return(5 downto 2);
        tmp_110_cast_fu_2553_p1 <= std_logic_vector(resize(signed(reg_1622),39));

    tmp_111_cast_fu_2603_p0 <= reg_1614(39 - 1 downto 0);
        tmp_111_cast_fu_2603_p1 <= std_logic_vector(resize(signed(tmp_111_cast_fu_2603_p0),47));

        tmp_113_cast_fu_2593_p1 <= std_logic_vector(resize(signed(tmp_86_fu_2587_p2),47));

        tmp_114_cast_fu_2523_p1 <= std_logic_vector(resize(signed(reg_1622),46));

        tmp_115_cast_fu_2528_p1 <= std_logic_vector(resize(signed(reg_1610),46));

    tmp_115_fu_2823_p2 <= "1" when (signed(n_assign_1_fu_2815_p3) > signed(decis_fu_2797_p1)) else "0";
        tmp_116_cast_fu_2543_p1 <= std_logic_vector(resize(signed(reg_1614),50));

        tmp_116_fu_2413_p1 <= std_logic_vector(resize(signed(reg_653),64));

        tmp_117_cast_fu_2533_p1 <= std_logic_vector(resize(signed(reg_1622),46));

    tmp_117_fu_2418_p2 <= "1" when (signed(reg_653) < signed(tmp_s_reg_822)) else "0";
        tmp_118_cast_fu_2538_p1 <= std_logic_vector(resize(signed(reg_1610),46));

        tmp_119_cast_fu_2548_p1 <= std_logic_vector(resize(signed(reg_1618),50));

    tmp_11_fu_3033_p5 <= enc_ih(2 - 1 downto 0);
        tmp_120_cast_fu_2328_p1 <= std_logic_vector(resize(signed(reg_1606),39));

    tmp_121_cast_fu_2384_p0 <= reg_1614(39 - 1 downto 0);
        tmp_121_cast_fu_2384_p1 <= std_logic_vector(resize(signed(tmp_121_cast_fu_2384_p0),46));

        tmp_123_cast_fu_2368_p1 <= std_logic_vector(resize(signed(tmp_90_fu_2362_p2),46));

    tmp_126_fu_3060_p2 <= std_logic_vector(shift_left(unsigned(enc_ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
        tmp_128_cast_fu_2299_p1 <= std_logic_vector(resize(signed(reg_1606),46));

    tmp_128_fu_2969_p3 <= reg_732(31 downto 31);
        tmp_129_cast_fu_2304_p1 <= std_logic_vector(resize(signed(reg_1610),46));

    tmp_129_fu_3017_p3 <= 
        p_neg_t_fu_2997_p2 when (tmp_128_fu_2969_p3(0) = '1') else 
        tmp_14_fu_3013_p1;
        tmp_130_cast_fu_2318_p1 <= std_logic_vector(resize(signed(reg_1614),50));

        tmp_130_fu_3073_p1 <= std_logic_vector(resize(signed(tmp_129_reg_3653),64));

        tmp_131_cast_fu_2309_p1 <= std_logic_vector(resize(signed(accumd_load_1_reg_3390),46));

    tmp_131_fu_2424_p2 <= (reg_653 or ap_const_lv32_1);
        tmp_132_cast_fu_2313_p1 <= std_logic_vector(resize(signed(reg_1610),46));

        tmp_132_fu_2430_p1 <= std_logic_vector(resize(signed(tmp_131_fu_2424_p2),64));

        tmp_133_cast_fu_2323_p1 <= std_logic_vector(resize(signed(reg_1618),50));

    tmp_13_fu_2993_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2983_p4),32));
    tmp_143_ext_fu_2835_p1 <= std_logic_vector(resize(unsigned(tmp_102_reg_3580),32));
        tmp_144_cast_fu_2742_p1 <= std_logic_vector(resize(signed(detl),47));

        tmp_146_cast_fu_2746_p1 <= std_logic_vector(resize(signed(reg_1543),47));

    tmp_14_fu_3013_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_3003_p4),32));
    tmp_150_ext_fu_2876_p1 <= std_logic_vector(resize(unsigned(reg_1565),32));
        tmp_153_ext_fu_2886_p1 <= std_logic_vector(resize(signed(reg_1601),32));

    tmp_159_cast_cast_fu_2924_p3 <= 
        ap_const_lv32_1 when (tmp_40_reg_3616(0) = '1') else 
        ap_const_lv32_3;
        tmp_160_cast5_fu_2953_p1 <= std_logic_vector(resize(signed(deth),47));

        tmp_160_cast_fu_2737_p1 <= std_logic_vector(resize(signed(deth),43));

    tmp_166_cast_cast_fu_2956_p3 <= 
        ap_const_lv32_0 when (tmp_40_reg_3616(0) = '1') else 
        ap_const_lv32_2;
        tmp_167_cast_fu_3047_p1 <= std_logic_vector(resize(signed(tmp_11_fu_3033_p6),47));

    tmp_171_ext_fu_3121_p1 <= std_logic_vector(resize(unsigned(reg_1583),32));
        tmp_174_ext_fu_3131_p1 <= std_logic_vector(resize(signed(reg_1601),32));

    tmp_1_cast_fu_1864_p4 <= compressed_Dout_A(5 downto 2);
    tmp_24_fu_1704_p3 <= 
        p_neg_t2_fu_1698_p2 when (grp_fu_1437_p3(0) = '1') else 
        grp_fu_1445_p4;
    tmp_25_fu_1712_p3 <= (tmp_24_fu_1704_p3 & ap_const_lv1_0);
    tmp_29_fu_1741_p3 <= 
        p_neg_t3_fu_1735_p2 when (grp_fu_1437_p3(0) = '1') else 
        grp_fu_1445_p4;
    tmp_30_fu_1749_p3 <= (tmp_29_fu_1741_p3 & ap_const_lv1_0);
    tmp_31_fu_2435_p2 <= "1" when (reg_732 = tmp_25_reg_3195) else "0";
    tmp_32_fu_1757_p2 <= "1" when (reg_653 = tmp_30_reg_3205) else "0";
    tmp_33_fu_1787_p3 <= reg_653(31 downto 31);
    tmp_34_fu_1831_p1 <= compressed_Dout_A(6 - 1 downto 0);
    tmp_36_fu_2598_p1 <= xa_0_i_i_reg_767(47 - 1 downto 0);
    tmp_37_fu_2558_p1 <= xb_0_i_i_reg_777(47 - 1 downto 0);
    tmp_38_fu_2333_p1 <= xa2_0_i_i_reg_688(46 - 1 downto 0);
    tmp_39_fu_2379_p1 <= xa1_0_i_i_reg_698(46 - 1 downto 0);
    tmp_41_fu_2801_p3 <= n_assign_fu_2767_p2(31 downto 31);
        tmp_43_fu_2445_p1 <= std_logic_vector(resize(signed(reg_732),64));

    tmp_44_fu_2450_p2 <= (reg_732 or ap_const_lv32_1);
    tmp_45_fu_1835_p4 <= compressed_Dout_A(31 downto 6);
        tmp_47_fu_2456_p1 <= std_logic_vector(resize(signed(tmp_44_fu_2450_p2),64));

    tmp_48_fu_1818_p3 <= 
        p_neg_t1_fu_1798_p2 when (tmp_33_fu_1787_p3(0) = '1') else 
        tmp_8_fu_1814_p1;
        tmp_50_fu_1826_p1 <= std_logic_vector(resize(signed(tmp_48_fu_1818_p3),64));

        tmp_54_fu_1845_p1 <= std_logic_vector(resize(signed(tmp_45_fu_1835_p4),32));

    tmp_58_fu_1874_p1 <= std_logic_vector(resize(unsigned(tmp_1_cast_fu_1864_p4),64));
        tmp_63_fu_1782_p1 <= std_logic_vector(resize(signed(dec_il),64));

        tmp_68_cast_fu_2440_p1 <= std_logic_vector(resize(signed(reg_1622),39));

    tmp_6_fu_1900_p5 <= dec_ih(2 - 1 downto 0);
        tmp_75_cast_fu_1859_p1 <= std_logic_vector(resize(signed(dec_detl),47));

        tmp_77_cast_fu_1919_p1 <= std_logic_vector(resize(signed(reg_1543),47));

    tmp_7_fu_1795_p1 <= std_logic_vector(resize(unsigned(p_lshr1_reg_3213),32));
        tmp_82_cast_fu_1879_p1 <= std_logic_vector(resize(signed(qq6_code6_table_load_reg_3228),47));

    tmp_83_fu_2079_p1 <= reg_838(32 - 1 downto 0);
    tmp_83_fu_2079_p2 <= std_logic_vector(unsigned(dec_rl) - unsigned(tmp_83_fu_2079_p1));
    tmp_86_fu_2587_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2571_p1) - signed(p_shl6_cast_fu_2583_p1));
    tmp_87_ext_fu_2108_p1 <= std_logic_vector(resize(unsigned(reg_1565),32));
    tmp_8_fu_1814_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1804_p4),32));
        tmp_90_ext_fu_2171_p1 <= std_logic_vector(resize(signed(reg_1601),32));

    tmp_90_fu_2362_p2 <= std_logic_vector(signed(p_shl7_cast_fu_2346_p1) - signed(p_shl8_cast_fu_2358_p1));
        tmp_95_cast_fu_1887_p1 <= std_logic_vector(resize(signed(dec_deth),47));

        tmp_96_cast_fu_1914_p1 <= std_logic_vector(resize(signed(tmp_6_fu_1900_p6),47));

    tmp_96_fu_2624_p1 <= grp_fu_811_p2(47 - 1 downto 0);
    tmp_97_fu_2640_p2 <= std_logic_vector(unsigned(reg_838) - unsigned(reg_960));
    tmp_9_fu_2787_p1 <= reg_1614(43 - 1 downto 0);
    tmp_9_fu_2787_p4 <= tmp_9_fu_2787_p1(42 downto 12);
    tmp_fu_1652_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";

    tqmf_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_state78, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state81, ap_CS_fsm_state54, tqmf_ptr_0_rec_i_i_c_fu_2505_p1, tqmf_ptr_0_sum67_i_i_1_fu_2517_p1, tqmf_ptr_0_sum_i_i_c_fu_2614_p1, p_sum_i_i_cast_fu_2619_p1, ap_CS_fsm_state79, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state74)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state79))) then 
            tqmf_address0 <= p_sum_i_i_cast_fu_2619_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            tqmf_address0 <= tqmf_ptr_0_sum_i_i_c_fu_2614_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state74))) then 
            tqmf_address0 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state68))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            tqmf_address0 <= tqmf_ptr_0_sum67_i_i_1_fu_2517_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2505_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_state78, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state81, ap_CS_fsm_state54, ap_CS_fsm_state79, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state74)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state78)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_state81)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d0_assign_proc : process(tqmf_q0, ap_CS_fsm_state81, test_data_load_reg_3461, ap_CS_fsm_state79)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            tqmf_d0 <= test_data_load_reg_3461;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state79))) then 
            tqmf_d0 <= tqmf_q0;
        else 
            tqmf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr_0_pn_rec_i_s_phi_fu_791_p4 <= tqmf_ptr_0_pn_rec_i_s_reg_787;
    tqmf_ptr_0_rec_i_i_c_fu_2505_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_phi_fu_748_p4),64));

    tqmf_ptr_0_rec_i_i_phi_fu_748_p4_assign_proc : process(tqmf_ptr_0_rec_i_i_reg_744, exitcond2_i_i_reg_3486, reg_831, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond2_i_i_reg_3486) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            tqmf_ptr_0_rec_i_i_phi_fu_748_p4 <= reg_831(5 - 1 downto 0);
        else 
            tqmf_ptr_0_rec_i_i_phi_fu_748_p4 <= tqmf_ptr_0_rec_i_i_reg_744;
        end if; 
    end process;

    tqmf_ptr_0_sum67_i_i_1_fu_2517_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2511_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2511_p2 <= (tqmf_ptr_0_rec_i_i_reg_744 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2614_p0 <= reg_653(6 - 1 downto 0);
    tqmf_ptr_0_sum_i_i_c_fu_2614_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_c_fu_2614_p0),64));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_state79)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state81)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state81)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

        xa1_cast_fu_2263_p1 <= std_logic_vector(resize(signed(xa1_fu_2257_p2),50));

    xa1_fu_2257_p2 <= std_logic_vector(signed(p_shl3_cast_fu_2242_p1) - signed(p_shl4_cast_fu_2253_p1));
    xa2_cast_fu_2267_p0 <= grp_fu_1119_p2(39 - 1 downto 0);
        xa2_cast_fu_2267_p1 <= std_logic_vector(resize(signed(xa2_cast_fu_2267_p0),50));

        xa_cast_fu_2491_p1 <= std_logic_vector(resize(signed(xa_fu_2485_p2),50));

    xa_fu_2485_p2 <= std_logic_vector(signed(p_shl_cast_fu_2469_p1) - signed(p_shl2_cast_fu_2481_p1));
    xb_cast_fu_2495_p0 <= grp_fu_1119_p2(39 - 1 downto 0);
        xb_cast_fu_2495_p1 <= std_logic_vector(resize(signed(xb_cast_fu_2495_p0),50));

end behav;
