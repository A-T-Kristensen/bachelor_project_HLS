// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _quantl_HH_
#define _quantl_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "adpcm_main_mul_32hbi.h"
#include "quantl_decis_levl.h"
#include "quantl_quant26bt_fYi.h"
#include "quantl_quant26bt_g8j.h"

namespace ap_rtl {

struct quantl : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > el;
    sc_in< sc_lv<32> > detl;
    sc_out< sc_lv<6> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    quantl(sc_module_name name);
    SC_HAS_PROCESS(quantl);

    ~quantl();

    sc_trace_file* mVcdFile;

    quantl_decis_levl* decis_levl_U;
    quantl_quant26bt_fYi* quant26bt_pos_U;
    quantl_quant26bt_g8j* quant26bt_neg_U;
    adpcm_main_mul_32hbi<1,4,32,15,47>* adpcm_main_mul_32hbi_U36;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > decis_levl_address0;
    sc_signal< sc_logic > decis_levl_ce0;
    sc_signal< sc_lv<15> > decis_levl_q0;
    sc_signal< sc_lv<5> > quant26bt_pos_address0;
    sc_signal< sc_logic > quant26bt_pos_ce0;
    sc_signal< sc_lv<6> > quant26bt_pos_q0;
    sc_signal< sc_lv<5> > quant26bt_neg_address0;
    sc_signal< sc_logic > quant26bt_neg_ce0;
    sc_signal< sc_lv<6> > quant26bt_neg_q0;
    sc_signal< sc_lv<1> > tmp_fu_100_p3;
    sc_signal< sc_lv<1> > tmp_reg_178;
    sc_signal< sc_lv<32> > n_assign_fu_114_p3;
    sc_signal< sc_lv<32> > n_assign_reg_183;
    sc_signal< sc_lv<47> > tmp_cast_fu_122_p1;
    sc_signal< sc_lv<47> > tmp_cast_reg_188;
    sc_signal< sc_lv<1> > tmp_s_fu_126_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_193;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > mil_1_fu_132_p2;
    sc_signal< sc_lv<5> > mil_1_reg_197;
    sc_signal< sc_lv<15> > decis_levl_load_reg_207;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_6_reg_217;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_27_fu_161_p2;
    sc_signal< sc_lv<5> > mil_reg_88;
    sc_signal< sc_lv<64> > tmp_25_fu_138_p1;
    sc_signal< sc_lv<64> > tmp_28_fu_165_p1;
    sc_signal< sc_lv<32> > m_fu_108_p2;
    sc_signal< sc_lv<32> > grp_fu_146_p0;
    sc_signal< sc_lv<15> > grp_fu_146_p1;
    sc_signal< sc_lv<47> > grp_fu_146_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > ril_2_fu_171_p3;
    sc_signal< sc_lv<6> > ap_return_preg;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<47> > grp_fu_146_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<6> ap_const_lv6_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_decis_levl_address0();
    void thread_decis_levl_ce0();
    void thread_grp_fu_146_p0();
    void thread_grp_fu_146_p1();
    void thread_grp_fu_146_p10();
    void thread_m_fu_108_p2();
    void thread_mil_1_fu_132_p2();
    void thread_n_assign_fu_114_p3();
    void thread_quant26bt_neg_address0();
    void thread_quant26bt_neg_ce0();
    void thread_quant26bt_pos_address0();
    void thread_quant26bt_pos_ce0();
    void thread_ril_2_fu_171_p3();
    void thread_tmp_25_fu_138_p1();
    void thread_tmp_27_fu_161_p2();
    void thread_tmp_28_fu_165_p1();
    void thread_tmp_cast_fu_122_p1();
    void thread_tmp_fu_100_p3();
    void thread_tmp_s_fu_126_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
