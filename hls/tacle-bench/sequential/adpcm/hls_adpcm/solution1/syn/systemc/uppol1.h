// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _uppol1_HH_
#define _uppol1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "adpcm_main_mul_32bkb.h"

namespace ap_rtl {

struct uppol1 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > al1;
    sc_in< sc_lv<15> > apl2;
    sc_in< sc_lv<32> > plt;
    sc_in< sc_lv<32> > plt1;
    sc_out< sc_lv<16> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    uppol1(sc_module_name name);
    SC_HAS_PROCESS(uppol1);

    ~uppol1();

    sc_trace_file* mVcdFile;

    adpcm_main_mul_32bkb<1,6,32,32,64>* adpcm_main_mul_32bkb_x_U28;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_66_p2;
    sc_signal< sc_lv<64> > tmp_22_reg_187;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > apl1_fu_119_p2;
    sc_signal< sc_lv<32> > apl1_reg_192;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > apl1_4_fu_129_p2;
    sc_signal< sc_lv<16> > apl1_4_reg_198;
    sc_signal< sc_lv<40> > p_shl_fu_76_p3;
    sc_signal< sc_lv<41> > p_shl_cast3_fu_84_p1;
    sc_signal< sc_lv<41> > tmp_cast1_fu_72_p1;
    sc_signal< sc_lv<41> > tmp_s_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_fu_94_p3;
    sc_signal< sc_lv<32> > apl_v_cast_cast_cast_fu_111_p3;
    sc_signal< sc_lv<32> > tmp_23_fu_101_p4;
    sc_signal< sc_lv<16> > apl2_cast_fu_125_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > apl1_4_cast_fu_135_p1;
    sc_signal< sc_lv<1> > tmp_24_fu_138_p2;
    sc_signal< sc_lv<32> > wd3_0_apl1_fu_143_p3;
    sc_signal< sc_lv<16> > apl1_3_fu_154_p2;
    sc_signal< sc_lv<32> > apl1_3_cast_fu_159_p1;
    sc_signal< sc_lv<1> > tmp_25_fu_163_p2;
    sc_signal< sc_lv<16> > tmp_11_fu_150_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_FFFFFF40;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<16> ap_const_lv16_3C00;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_apl1_3_cast_fu_159_p1();
    void thread_apl1_3_fu_154_p2();
    void thread_apl1_4_cast_fu_135_p1();
    void thread_apl1_4_fu_129_p2();
    void thread_apl1_fu_119_p2();
    void thread_apl2_cast_fu_125_p1();
    void thread_apl_v_cast_cast_cast_fu_111_p3();
    void thread_p_shl_cast3_fu_84_p1();
    void thread_p_shl_fu_76_p3();
    void thread_tmp_11_fu_150_p1();
    void thread_tmp_23_fu_101_p4();
    void thread_tmp_24_fu_138_p2();
    void thread_tmp_25_fu_163_p2();
    void thread_tmp_cast1_fu_72_p1();
    void thread_tmp_fu_94_p3();
    void thread_tmp_s_fu_88_p2();
    void thread_wd3_0_apl1_fu_143_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
