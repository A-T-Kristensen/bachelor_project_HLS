// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _logsch_HH_
#define _logsch_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "adpcm_main_mux_42eOg.h"

namespace ap_rtl {

struct logsch : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > ih;
    sc_in< sc_lv<32> > nbh;
    sc_out< sc_lv<15> > ap_return;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    logsch(sc_module_name name);
    SC_HAS_PROCESS(logsch);

    ~logsch();

    sc_trace_file* mVcdFile;

    adpcm_main_mux_42eOg<1,1,32,32,32,32,2,32>* adpcm_main_mux_42eOg_U73;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<31> > nbh_assign_cast_fu_114_p2;
    sc_signal< sc_lv<31> > nbh_assign_cast_reg_152;
    sc_signal< sc_lv<1> > tmp_18_reg_157;
    sc_signal< sc_lv<39> > p_shl_fu_52_p3;
    sc_signal< sc_lv<39> > tmp_cast2_fu_48_p1;
    sc_signal< sc_lv<39> > tmp_s_fu_60_p2;
    sc_signal< sc_lv<2> > tmp_fu_80_p5;
    sc_signal< sc_lv<32> > tmp_fu_80_p6;
    sc_signal< sc_lv<32> > wd_fu_66_p4;
    sc_signal< sc_lv<31> > tmp_17_fu_104_p1;
    sc_signal< sc_lv<31> > tmp_4_fu_94_p4;
    sc_signal< sc_lv<32> > nbh_assign_fu_108_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > p_s_fu_128_p3;
    sc_signal< sc_lv<1> > tmp_40_fu_138_p2;
    sc_signal< sc_lv<15> > tmp_19_fu_134_p1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_31E;
    static const sc_lv<32> ap_const_lv32_FFFFFF2A;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<31> ap_const_lv31_5800;
    static const sc_lv<15> ap_const_lv15_5800;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_nbh_assign_cast_fu_114_p2();
    void thread_nbh_assign_fu_108_p2();
    void thread_p_s_fu_128_p3();
    void thread_p_shl_fu_52_p3();
    void thread_tmp_17_fu_104_p1();
    void thread_tmp_19_fu_134_p1();
    void thread_tmp_40_fu_138_p2();
    void thread_tmp_4_fu_94_p4();
    void thread_tmp_cast2_fu_48_p1();
    void thread_tmp_fu_80_p5();
    void thread_tmp_s_fu_60_p2();
    void thread_wd_fu_66_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
