// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _logscl_HH_
#define _logscl_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "logscl_wl_code_tadEe.h"

namespace ap_rtl {

struct logscl : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<6> > il;
    sc_in< sc_lv<32> > nbl;
    sc_out< sc_lv<15> > ap_return;


    // Module declarations
    logscl(sc_module_name name);
    SC_HAS_PROCESS(logscl);

    ~logscl();

    sc_trace_file* mVcdFile;

    logscl_wl_code_tadEe* wl_code_table_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > wl_code_table_address0;
    sc_signal< sc_logic > wl_code_table_ce0;
    sc_signal< sc_lv<13> > wl_code_table_q0;
    sc_signal< sc_lv<31> > nbl_assign_cast_fu_141_p2;
    sc_signal< sc_lv<31> > nbl_assign_cast_reg_184;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_14_reg_189;
    sc_signal< sc_lv<64> > tmp_36_fu_84_p1;
    sc_signal< sc_lv<4> > tmp_13_fu_74_p4;
    sc_signal< sc_lv<39> > p_shl_fu_93_p3;
    sc_signal< sc_lv<39> > tmp_cast2_fu_89_p1;
    sc_signal< sc_lv<39> > tmp_s_fu_101_p2;
    sc_signal< sc_lv<32> > wl_code_table_load_c_fu_117_p1;
    sc_signal< sc_lv<32> > tmp_35_fu_107_p4;
    sc_signal< sc_lv<31> > tmp_3_fu_125_p4;
    sc_signal< sc_lv<31> > tmp_fu_121_p1;
    sc_signal< sc_lv<32> > nbl_assign_fu_135_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > p_s_fu_155_p3;
    sc_signal< sc_lv<1> > tmp_37_fu_165_p2;
    sc_signal< sc_lv<15> > tmp_15_fu_161_p1;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<31> ap_const_lv31_4800;
    static const sc_lv<15> ap_const_lv15_4800;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_nbl_assign_cast_fu_141_p2();
    void thread_nbl_assign_fu_135_p2();
    void thread_p_s_fu_155_p3();
    void thread_p_shl_fu_93_p3();
    void thread_tmp_13_fu_74_p4();
    void thread_tmp_15_fu_161_p1();
    void thread_tmp_35_fu_107_p4();
    void thread_tmp_36_fu_84_p1();
    void thread_tmp_37_fu_165_p2();
    void thread_tmp_3_fu_125_p4();
    void thread_tmp_cast2_fu_89_p1();
    void thread_tmp_fu_121_p1();
    void thread_tmp_s_fu_101_p2();
    void thread_wl_code_table_address0();
    void thread_wl_code_table_ce0();
    void thread_wl_code_table_load_c_fu_117_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
