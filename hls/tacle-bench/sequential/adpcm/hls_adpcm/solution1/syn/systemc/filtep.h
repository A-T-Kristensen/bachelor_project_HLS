// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _filtep_HH_
#define _filtep_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "adpcm_main_mul_32cud.h"

namespace ap_rtl {

struct filtep : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > rlt1;
    sc_in< sc_lv<32> > al1;
    sc_in< sc_lv<32> > rlt2;
    sc_in< sc_lv<32> > al2;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    filtep(sc_module_name name);
    SC_HAS_PROCESS(filtep);

    ~filtep();

    sc_trace_file* mVcdFile;

    adpcm_main_mul_32cud<1,6,32,32,47>* adpcm_main_mul_32cud_U5;
    adpcm_main_mul_32cud<1,6,32,32,47>* adpcm_main_mul_32cud_U6;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<47> > grp_fu_56_p2;
    sc_signal< sc_lv<47> > pl_reg_116;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<47> > grp_fu_76_p2;
    sc_signal< sc_lv<47> > tmp_s_reg_121;
    sc_signal< sc_lv<32> > tmp_fu_42_p2;
    sc_signal< sc_lv<32> > tmp_17_fu_62_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<47> > pl_1_fu_82_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_2E;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_pl_1_fu_82_p2();
    void thread_tmp_17_fu_62_p2();
    void thread_tmp_fu_42_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
