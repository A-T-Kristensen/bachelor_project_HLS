// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "upzero.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic upzero::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic upzero::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> upzero::ap_ST_fsm_state1 = "1";
const sc_lv<9> upzero::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<9> upzero::ap_ST_fsm_state11 = "100";
const sc_lv<9> upzero::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<9> upzero::ap_ST_fsm_state14 = "10000";
const sc_lv<9> upzero::ap_ST_fsm_state15 = "100000";
const sc_lv<9> upzero::ap_ST_fsm_state16 = "1000000";
const sc_lv<9> upzero::ap_ST_fsm_state17 = "10000000";
const sc_lv<9> upzero::ap_ST_fsm_state18 = "100000000";
const bool upzero::ap_const_boolean_1 = true;
const sc_lv<32> upzero::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> upzero::ap_const_lv1_1 = "1";
const sc_lv<32> upzero::ap_const_lv32_1 = "1";
const sc_lv<1> upzero::ap_const_lv1_0 = "0";
const sc_lv<32> upzero::ap_const_lv32_4 = "100";
const sc_lv<32> upzero::ap_const_lv32_5 = "101";
const sc_lv<32> upzero::ap_const_lv32_6 = "110";
const sc_lv<32> upzero::ap_const_lv32_2 = "10";
const sc_lv<32> upzero::ap_const_lv32_3 = "11";
const sc_lv<3> upzero::ap_const_lv3_0 = "000";
const sc_lv<64> upzero::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> upzero::ap_const_lv64_4 = "100";
const sc_lv<64> upzero::ap_const_lv64_3 = "11";
const sc_lv<64> upzero::ap_const_lv64_2 = "10";
const sc_lv<64> upzero::ap_const_lv64_1 = "1";
const sc_lv<64> upzero::ap_const_lv64_5 = "101";
const sc_lv<32> upzero::ap_const_lv32_7 = "111";
const sc_lv<32> upzero::ap_const_lv32_8 = "1000";
const sc_lv<3> upzero::ap_const_lv3_6 = "110";
const sc_lv<3> upzero::ap_const_lv3_1 = "1";
const sc_lv<32> upzero::ap_const_lv32_3F = "111111";
const sc_lv<32> upzero::ap_const_lv32_FFFFFF80 = "11111111111111111111111110000000";
const sc_lv<32> upzero::ap_const_lv32_80 = "10000000";
const sc_lv<8> upzero::ap_const_lv8_0 = "00000000";
const sc_lv<32> upzero::ap_const_lv32_27 = "100111";

upzero::upzero(sc_module_name name) : sc_module(name), mVcdFile(0) {
    adpcm_main_mul_32bkb_x_U17 = new adpcm_main_mul_32bkb<1,6,32,32,64>("adpcm_main_mul_32bkb_x_U17");
    adpcm_main_mul_32bkb_x_U17->clk(ap_clk);
    adpcm_main_mul_32bkb_x_U17->reset(ap_rst);
    adpcm_main_mul_32bkb_x_U17->din0(grp_fu_223_p0);
    adpcm_main_mul_32bkb_x_U17->din1(reg_184);
    adpcm_main_mul_32bkb_x_U17->ce(ap_var_for_const0);
    adpcm_main_mul_32bkb_x_U17->dout(grp_fu_223_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_bli_address0);
    sensitive << ( ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_2_fu_288_p1 );

    SC_METHOD(thread_bli_address1);
    sensitive << ( ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( bli_addr_reg_399 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_bli_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_bli_ce1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_bli_d1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_11_fu_269_p2 );
    sensitive << ( tmp_4_fu_305_p2 );

    SC_METHOD(thread_bli_we1);
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_342 );
    sensitive << ( exitcond1_reg_390 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_dlti_addr_4_reg_410);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dlti_addr_5_reg_415);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dlti_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( dlti_addr_5_reg_415 );
    sensitive << ( tmp_8_fu_213_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dlti_address1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( dlti_addr_4_reg_410 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dlti_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dlti_ce1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dlti_d0);
    sensitive << ( reg_184 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dlti_d1);
    sensitive << ( dlt );
    sensitive << ( reg_184 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( dlti_load_2_reg_405 );
    sensitive << ( dlti_load_4_reg_420 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dlti_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dlti_we1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_exitcond1_fu_276_p2);
    sensitive << ( i_reg_173 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_201_p2);
    sensitive << ( i_1_reg_162 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_223_p0);
    sensitive << ( tmp_1_reg_337 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_i_2_fu_282_p2);
    sensitive << ( i_reg_173 );

    SC_METHOD(thread_i_3_fu_207_p2);
    sensitive << ( i_1_reg_162 );

    SC_METHOD(thread_p_shl1_fu_246_p3);
    sensitive << ( bli_load_1_reg_372 );

    SC_METHOD(thread_p_shl_fu_297_p3);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_tmp_10_cast_fu_243_p1);
    sensitive << ( bli_load_1_reg_372 );

    SC_METHOD(thread_tmp_10_fu_253_p2);
    sensitive << ( p_shl1_fu_246_p3 );
    sensitive << ( tmp_10_cast_fu_243_p1 );

    SC_METHOD(thread_tmp_11_fu_269_p2);
    sensitive << ( wd2_cast_cast_cast_fu_235_p3 );
    sensitive << ( wd3_fu_259_p4 );

    SC_METHOD(thread_tmp_1_fu_197_p1);
    sensitive << ( dlt );

    SC_METHOD(thread_tmp_2_fu_288_p1);
    sensitive << ( i_reg_173 );

    SC_METHOD(thread_tmp_3_cast_fu_293_p1);
    sensitive << ( bli_q0 );

    SC_METHOD(thread_tmp_4_fu_305_p2);
    sensitive << ( p_shl_fu_297_p3 );
    sensitive << ( tmp_3_cast_fu_293_p1 );

    SC_METHOD(thread_tmp_7_fu_228_p3);
    sensitive << ( tmp_s_reg_367 );

    SC_METHOD(thread_tmp_8_fu_213_p1);
    sensitive << ( i_1_reg_162 );

    SC_METHOD(thread_tmp_fu_191_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dlt );

    SC_METHOD(thread_wd2_cast_cast_cast_fu_235_p3);
    sensitive << ( tmp_7_fu_228_p3 );

    SC_METHOD(thread_wd3_fu_259_p4);
    sensitive << ( tmp_10_fu_253_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_fu_191_p2 );
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "upzero_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dlt, "(port)dlt");
    sc_trace(mVcdFile, dlti_address0, "(port)dlti_address0");
    sc_trace(mVcdFile, dlti_ce0, "(port)dlti_ce0");
    sc_trace(mVcdFile, dlti_we0, "(port)dlti_we0");
    sc_trace(mVcdFile, dlti_d0, "(port)dlti_d0");
    sc_trace(mVcdFile, dlti_q0, "(port)dlti_q0");
    sc_trace(mVcdFile, dlti_address1, "(port)dlti_address1");
    sc_trace(mVcdFile, dlti_ce1, "(port)dlti_ce1");
    sc_trace(mVcdFile, dlti_we1, "(port)dlti_we1");
    sc_trace(mVcdFile, dlti_d1, "(port)dlti_d1");
    sc_trace(mVcdFile, dlti_q1, "(port)dlti_q1");
    sc_trace(mVcdFile, bli_address0, "(port)bli_address0");
    sc_trace(mVcdFile, bli_ce0, "(port)bli_ce0");
    sc_trace(mVcdFile, bli_q0, "(port)bli_q0");
    sc_trace(mVcdFile, bli_address1, "(port)bli_address1");
    sc_trace(mVcdFile, bli_ce1, "(port)bli_ce1");
    sc_trace(mVcdFile, bli_we1, "(port)bli_we1");
    sc_trace(mVcdFile, bli_d1, "(port)bli_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_reg_162, "i_1_reg_162");
    sc_trace(mVcdFile, i_reg_173, "i_reg_173");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond_reg_342, "exitcond_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_fu_191_p2, "tmp_fu_191_p2");
    sc_trace(mVcdFile, tmp_1_fu_197_p1, "tmp_1_fu_197_p1");
    sc_trace(mVcdFile, tmp_1_reg_337, "tmp_1_reg_337");
    sc_trace(mVcdFile, exitcond_fu_201_p2, "exitcond_fu_201_p2");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_reg_342, "ap_pipeline_reg_pp0_iter1_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_reg_342, "ap_pipeline_reg_pp0_iter2_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_reg_342, "ap_pipeline_reg_pp0_iter3_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_reg_342, "ap_pipeline_reg_pp0_iter4_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_reg_342, "ap_pipeline_reg_pp0_iter5_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_exitcond_reg_342, "ap_pipeline_reg_pp0_iter6_exitcond_reg_342");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_exitcond_reg_342, "ap_pipeline_reg_pp0_iter7_exitcond_reg_342");
    sc_trace(mVcdFile, i_3_fu_207_p2, "i_3_fu_207_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, bli_addr_1_reg_356, "bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356, "ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, tmp_s_reg_367, "tmp_s_reg_367");
    sc_trace(mVcdFile, bli_load_1_reg_372, "bli_load_1_reg_372");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond1_fu_276_p2, "exitcond1_fu_276_p2");
    sc_trace(mVcdFile, exitcond1_reg_390, "exitcond1_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, i_2_fu_282_p2, "i_2_fu_282_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, bli_addr_reg_399, "bli_addr_reg_399");
    sc_trace(mVcdFile, dlti_load_2_reg_405, "dlti_load_2_reg_405");
    sc_trace(mVcdFile, dlti_addr_4_reg_410, "dlti_addr_4_reg_410");
    sc_trace(mVcdFile, dlti_addr_5_reg_415, "dlti_addr_5_reg_415");
    sc_trace(mVcdFile, dlti_load_4_reg_420, "dlti_load_4_reg_420");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, tmp_8_fu_213_p1, "tmp_8_fu_213_p1");
    sc_trace(mVcdFile, tmp_2_fu_288_p1, "tmp_2_fu_288_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_11_fu_269_p2, "tmp_11_fu_269_p2");
    sc_trace(mVcdFile, grp_fu_223_p0, "grp_fu_223_p0");
    sc_trace(mVcdFile, tmp_7_fu_228_p3, "tmp_7_fu_228_p3");
    sc_trace(mVcdFile, p_shl1_fu_246_p3, "p_shl1_fu_246_p3");
    sc_trace(mVcdFile, tmp_10_cast_fu_243_p1, "tmp_10_cast_fu_243_p1");
    sc_trace(mVcdFile, tmp_10_fu_253_p2, "tmp_10_fu_253_p2");
    sc_trace(mVcdFile, wd2_cast_cast_cast_fu_235_p3, "wd2_cast_cast_cast_fu_235_p3");
    sc_trace(mVcdFile, wd3_fu_259_p4, "wd3_fu_259_p4");
    sc_trace(mVcdFile, p_shl_fu_297_p3, "p_shl_fu_297_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_293_p1, "tmp_3_cast_fu_293_p1");
    sc_trace(mVcdFile, tmp_4_fu_305_p2, "tmp_4_fu_305_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

upzero::~upzero() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete adpcm_main_mul_32bkb_x_U17;
}

void upzero::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void upzero::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
        i_1_reg_162 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()))) {
        i_1_reg_162 = i_3_fu_207_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
        i_reg_173 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        i_reg_173 = i_2_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        reg_184 = dlti_q1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(exitcond_reg_342.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())))) {
        reg_184 = dlti_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356 = bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter1_exitcond_reg_342 = exitcond_reg_342.read();
        exitcond_reg_342 = exitcond_fu_201_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter2_exitcond_reg_342 = ap_pipeline_reg_pp0_iter1_exitcond_reg_342.read();
        ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter3_exitcond_reg_342 = ap_pipeline_reg_pp0_iter2_exitcond_reg_342.read();
        ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter4_exitcond_reg_342 = ap_pipeline_reg_pp0_iter3_exitcond_reg_342.read();
        ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter5_exitcond_reg_342 = ap_pipeline_reg_pp0_iter4_exitcond_reg_342.read();
        ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter6_exitcond_reg_342 = ap_pipeline_reg_pp0_iter5_exitcond_reg_342.read();
        ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356 = ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356.read();
        ap_pipeline_reg_pp0_iter7_exitcond_reg_342 = ap_pipeline_reg_pp0_iter6_exitcond_reg_342.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()))) {
        bli_addr_1_reg_356 =  (sc_lv<3>) (tmp_8_fu_213_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        bli_addr_reg_399 =  (sc_lv<3>) (tmp_2_fu_288_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter6_exitcond_reg_342.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        bli_load_1_reg_372 = bli_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        dlti_load_2_reg_405 = dlti_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        dlti_load_4_reg_420 = dlti_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()))) {
        exitcond1_reg_390 = exitcond1_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
        tmp_1_reg_337 = tmp_1_fu_197_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter6_exitcond_reg_342.read())) {
        tmp_s_reg_367 = grp_fu_223_p2.read();
    }
}

void upzero::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void upzero::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read().range(3, 3);
}

void upzero::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void upzero::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(2, 2);
}

void upzero::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(4, 4);
}

void upzero::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(5, 5);
}

void upzero::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(6, 6);
}

void upzero::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(7, 7);
}

void upzero::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(8, 8);
}

void upzero::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void upzero::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void upzero::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void upzero::thread_bli_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        bli_address0 =  (sc_lv<3>) (tmp_2_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())) {
        bli_address0 = ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356.read();
    } else {
        bli_address0 = "XXX";
    }
}

void upzero::thread_bli_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        bli_address1 = bli_addr_reg_399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) {
        bli_address1 = ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356.read();
    } else {
        bli_address1 = "XXX";
    }
}

void upzero::thread_bli_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        bli_ce0 = ap_const_logic_1;
    } else {
        bli_ce0 = ap_const_logic_0;
    }
}

void upzero::thread_bli_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        bli_ce1 = ap_const_logic_1;
    } else {
        bli_ce1 = ap_const_logic_0;
    }
}

void upzero::thread_bli_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        bli_d1 = tmp_4_fu_305_p2.read().range(39, 8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) {
        bli_d1 = tmp_11_fu_269_p2.read();
    } else {
        bli_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void upzero::thread_bli_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_342.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_390.read())))) {
        bli_we1 = ap_const_logic_1;
    } else {
        bli_we1 = ap_const_logic_0;
    }
}

void upzero::thread_dlti_addr_4_reg_410() {
    dlti_addr_4_reg_410 =  (sc_lv<3>) (ap_const_lv64_2);
}

void upzero::thread_dlti_addr_5_reg_415() {
    dlti_addr_5_reg_415 =  (sc_lv<3>) (ap_const_lv64_1);
}

void upzero::thread_dlti_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        dlti_address0 = dlti_addr_5_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        dlti_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dlti_address0 =  (sc_lv<3>) (tmp_8_fu_213_p1.read());
    } else {
        dlti_address0 = "XXX";
    }
}

void upzero::thread_dlti_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        dlti_address1 = dlti_addr_4_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        dlti_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else {
        dlti_address1 = "XXX";
    }
}

void upzero::thread_dlti_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())))) {
        dlti_ce0 = ap_const_logic_1;
    } else {
        dlti_ce0 = ap_const_logic_0;
    }
}

void upzero::thread_dlti_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        dlti_ce1 = ap_const_logic_1;
    } else {
        dlti_ce1 = ap_const_logic_0;
    }
}

void upzero::thread_dlti_d0() {
    dlti_d0 = reg_184.read();
}

void upzero::thread_dlti_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        dlti_d1 = dlt.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        dlti_d1 = dlti_load_4_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        dlti_d1 = dlti_load_2_reg_405.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        dlti_d1 = reg_184.read();
    } else {
        dlti_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void upzero::thread_dlti_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())))) {
        dlti_we0 = ap_const_logic_1;
    } else {
        dlti_we0 = ap_const_logic_0;
    }
}

void upzero::thread_dlti_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        dlti_we1 = ap_const_logic_1;
    } else {
        dlti_we1 = ap_const_logic_0;
    }
}

void upzero::thread_exitcond1_fu_276_p2() {
    exitcond1_fu_276_p2 = (!i_reg_173.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_173.read() == ap_const_lv3_6);
}

void upzero::thread_exitcond_fu_201_p2() {
    exitcond_fu_201_p2 = (!i_1_reg_162.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_162.read() == ap_const_lv3_6);
}

void upzero::thread_grp_fu_223_p0() {
    grp_fu_223_p0 =  (sc_lv<32>) (tmp_1_reg_337.read());
}

void upzero::thread_i_2_fu_282_p2() {
    i_2_fu_282_p2 = (!i_reg_173.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_173.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void upzero::thread_i_3_fu_207_p2() {
    i_3_fu_207_p2 = (!i_1_reg_162.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_162.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void upzero::thread_p_shl1_fu_246_p3() {
    p_shl1_fu_246_p3 = esl_concat<32,8>(bli_load_1_reg_372.read(), ap_const_lv8_0);
}

void upzero::thread_p_shl_fu_297_p3() {
    p_shl_fu_297_p3 = esl_concat<32,8>(bli_q0.read(), ap_const_lv8_0);
}

void upzero::thread_tmp_10_cast_fu_243_p1() {
    tmp_10_cast_fu_243_p1 = esl_sext<40,32>(bli_load_1_reg_372.read());
}

void upzero::thread_tmp_10_fu_253_p2() {
    tmp_10_fu_253_p2 = (!p_shl1_fu_246_p3.read().is_01() || !tmp_10_cast_fu_243_p1.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_shl1_fu_246_p3.read()) - sc_bigint<40>(tmp_10_cast_fu_243_p1.read()));
}

void upzero::thread_tmp_11_fu_269_p2() {
    tmp_11_fu_269_p2 = (!wd2_cast_cast_cast_fu_235_p3.read().is_01() || !wd3_fu_259_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(wd2_cast_cast_cast_fu_235_p3.read()) + sc_biguint<32>(wd3_fu_259_p4.read()));
}

void upzero::thread_tmp_1_fu_197_p1() {
    tmp_1_fu_197_p1 = esl_sext<64,32>(dlt.read());
}

void upzero::thread_tmp_2_fu_288_p1() {
    tmp_2_fu_288_p1 = esl_zext<64,3>(i_reg_173.read());
}

void upzero::thread_tmp_3_cast_fu_293_p1() {
    tmp_3_cast_fu_293_p1 = esl_sext<40,32>(bli_q0.read());
}

void upzero::thread_tmp_4_fu_305_p2() {
    tmp_4_fu_305_p2 = (!p_shl_fu_297_p3.read().is_01() || !tmp_3_cast_fu_293_p1.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_shl_fu_297_p3.read()) - sc_bigint<40>(tmp_3_cast_fu_293_p1.read()));
}

void upzero::thread_tmp_7_fu_228_p3() {
    tmp_7_fu_228_p3 = tmp_s_reg_367.read().range(63, 63);
}

void upzero::thread_tmp_8_fu_213_p1() {
    tmp_8_fu_213_p1 = esl_zext<64,3>(i_1_reg_162.read());
}

void upzero::thread_tmp_fu_191_p2() {
    tmp_fu_191_p2 = (!dlt.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(dlt.read() == ap_const_lv32_0);
}

void upzero::thread_wd2_cast_cast_cast_fu_235_p3() {
    wd2_cast_cast_cast_fu_235_p3 = (!tmp_7_fu_228_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_7_fu_228_p3.read()[0].to_bool())? ap_const_lv32_FFFFFF80: ap_const_lv32_80);
}

void upzero::thread_wd3_fu_259_p4() {
    wd3_fu_259_p4 = tmp_10_fu_253_p2.read().range(39, 8);
}

void upzero::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_191_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_201_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

