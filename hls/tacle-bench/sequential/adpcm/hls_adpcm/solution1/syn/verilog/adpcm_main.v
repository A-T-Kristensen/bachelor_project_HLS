// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adpcm_main,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.611000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=11,HLS_SYN_DSP=70,HLS_SYN_FF=5552,HLS_SYN_LUT=5182}" *)

module adpcm_main (
        test_data_Addr_A,
        test_data_EN_A,
        test_data_Din_A,
        test_data_Dout_A,
        test_data_WEN_A,
        test_data_Clk_A,
        ap_clk,
        test_data_Rst_A,
        ap_rst,
        compressed_Addr_A,
        compressed_EN_A,
        compressed_Din_A,
        compressed_Dout_A,
        compressed_WEN_A,
        compressed_Clk_A,
        compressed_Rst_A,
        dec_result_Addr_A,
        dec_result_EN_A,
        dec_result_Din_A,
        dec_result_Dout_A,
        dec_result_WEN_A,
        dec_result_Clk_A,
        dec_result_Rst_A,
        select_r,
        size,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);

parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;

output  [31:0] test_data_Addr_A;
output   test_data_EN_A;
output  [31:0] test_data_Din_A;
input  [31:0] test_data_Dout_A;
output  [3:0] test_data_WEN_A;
output   test_data_Clk_A;
input   ap_clk;
output   test_data_Rst_A;
input   ap_rst;
output  [31:0] compressed_Addr_A;
output   compressed_EN_A;
output  [31:0] compressed_Din_A;
input  [31:0] compressed_Dout_A;
output  [3:0] compressed_WEN_A;
output   compressed_Clk_A;
output   compressed_Rst_A;
output  [31:0] dec_result_Addr_A;
output   dec_result_EN_A;
output  [31:0] dec_result_Din_A;
input  [31:0] dec_result_Dout_A;
output  [3:0] dec_result_WEN_A;
output   dec_result_Clk_A;
output   dec_result_Rst_A;
input  [31:0] select_r;
input  [31:0] size;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire   [31:0] Block_proc_U0_dec_result_Addr_A;
wire    Block_proc_U0_dec_result_EN_A;
wire   [3:0] Block_proc_U0_dec_result_WEN_A;
wire   [31:0] Block_proc_U0_dec_result_Din_A;
wire   [31:0] Block_proc_U0_test_data_Addr_A;
wire    Block_proc_U0_test_data_EN_A;
wire   [3:0] Block_proc_U0_test_data_WEN_A;
wire   [31:0] Block_proc_U0_test_data_Din_A;
wire   [31:0] Block_proc_U0_compressed_Addr_A;
wire    Block_proc_U0_compressed_EN_A;
wire   [3:0] Block_proc_U0_compressed_WEN_A;
wire   [31:0] Block_proc_U0_compressed_Din_A;
wire    ap_hs_continue;
wire    ap_hs_done;
wire    ap_hs_ready;

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .select_r(select_r),
    .size(size),
    .dec_result_Addr_A(Block_proc_U0_dec_result_Addr_A),
    .dec_result_EN_A(Block_proc_U0_dec_result_EN_A),
    .dec_result_WEN_A(Block_proc_U0_dec_result_WEN_A),
    .dec_result_Din_A(Block_proc_U0_dec_result_Din_A),
    .dec_result_Dout_A(ap_const_lv32_0),
    .test_data_Addr_A(Block_proc_U0_test_data_Addr_A),
    .test_data_EN_A(Block_proc_U0_test_data_EN_A),
    .test_data_WEN_A(Block_proc_U0_test_data_WEN_A),
    .test_data_Din_A(Block_proc_U0_test_data_Din_A),
    .test_data_Dout_A(test_data_Dout_A),
    .compressed_Addr_A(Block_proc_U0_compressed_Addr_A),
    .compressed_EN_A(Block_proc_U0_compressed_EN_A),
    .compressed_WEN_A(Block_proc_U0_compressed_WEN_A),
    .compressed_Din_A(Block_proc_U0_compressed_Din_A),
    .compressed_Dout_A(compressed_Dout_A)
);

assign Block_proc_U0_ap_continue = 1'b1;

assign Block_proc_U0_ap_start = ap_start;

assign ap_done = Block_proc_U0_ap_done;

assign ap_hs_continue = 1'b1;

assign ap_hs_done = Block_proc_U0_ap_done;

assign ap_hs_ready = Block_proc_U0_ap_ready;

assign ap_idle = Block_proc_U0_ap_idle;

assign ap_ready = Block_proc_U0_ap_ready;

assign compressed_Addr_A = Block_proc_U0_compressed_Addr_A;

assign compressed_Clk_A = ap_clk;

assign compressed_Din_A = Block_proc_U0_compressed_Din_A;

assign compressed_EN_A = Block_proc_U0_compressed_EN_A;

assign compressed_Rst_A = ap_rst;

assign compressed_WEN_A = Block_proc_U0_compressed_WEN_A;

assign dec_result_Addr_A = Block_proc_U0_dec_result_Addr_A;

assign dec_result_Clk_A = ap_clk;

assign dec_result_Din_A = Block_proc_U0_dec_result_Din_A;

assign dec_result_EN_A = Block_proc_U0_dec_result_EN_A;

assign dec_result_Rst_A = ap_rst;

assign dec_result_WEN_A = Block_proc_U0_dec_result_WEN_A;

assign test_data_Addr_A = Block_proc_U0_test_data_Addr_A;

assign test_data_Clk_A = ap_clk;

assign test_data_Din_A = ap_const_lv32_0;

assign test_data_EN_A = Block_proc_U0_test_data_EN_A;

assign test_data_Rst_A = ap_rst;

assign test_data_WEN_A = 1'b0;

endmodule //adpcm_main
