-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    test_data_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_EN_A : OUT STD_LOGIC;
    test_data_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_data_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_Clk_A : OUT STD_LOGIC;
    test_data_Rst_A : OUT STD_LOGIC;
    compressed_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_EN_A : OUT STD_LOGIC;
    compressed_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    compressed_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_Clk_A : OUT STD_LOGIC;
    compressed_Rst_A : OUT STD_LOGIC;
    dec_result_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_EN_A : OUT STD_LOGIC;
    dec_result_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    dec_result_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Clk_A : OUT STD_LOGIC;
    dec_result_Rst_A : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adpcm_main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "adpcm_main,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.611000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=26,HLS_SYN_FF=5410,HLS_SYN_LUT=5759}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (89 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (89 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (89 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (89 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (89 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (89 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (89 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (89 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (89 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (89 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (89 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (89 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (89 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";
    constant ap_const_lv32_FFFFE310 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110001100010000";
    constant ap_const_lv32_FFFFF9B0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111100110110000";
    constant ap_const_lv32_1CF0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001110011110000";
    constant ap_const_lv32_650 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011001010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (89 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bpl_ce1 : STD_LOGIC;
    signal delay_bpl_we1 : STD_LOGIC;
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bph_ce1 : STD_LOGIC;
    signal delay_bph_we1 : STD_LOGIC;
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bpl_ce1 : STD_LOGIC;
    signal dec_del_bpl_we1 : STD_LOGIC;
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bph_ce1 : STD_LOGIC;
    signal dec_del_bph_we1 : STD_LOGIC;
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_we0 : STD_LOGIC;
    signal accumc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_we0 : STD_LOGIC;
    signal accumd_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_ptr_0_rec_i_i_reg_661 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_0_rec_i_i_reg_673 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa1_0_i_i_reg_684 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa2_0_i_i_reg_693 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_803_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal reg_725 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tqmf_ptr_0_rec_i_i_reg_737 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_749 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_760 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_770 : STD_LOGIC_VECTOR (49 downto 0);
    signal reg_816 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_filtez_fu_1152_ap_done : STD_LOGIC;
    signal grp_filtep_fu_1193_ap_done : STD_LOGIC;
    signal grp_logscl_fu_1248_ap_done : STD_LOGIC;
    signal grp_logsch_fu_1397_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal grp_scalel_fu_1269_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_1370_ap_done : STD_LOGIC;
    signal reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal exitcond2_i_i_reg_3373 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i5_reg_825 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal p_rec2_i_i_reg_828 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal reg_844 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3373 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal reg_890 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal reg_893 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_44_reg_3083 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal xb_1_reg_907 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal tmp_117_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal reg_1514 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal reg_1518 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1152_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1531 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal grp_logscl_fu_1248_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1536 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state93 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal grp_upzero_fu_1300_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_1341_ap_done : STD_LOGIC;
    signal reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1548 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1397_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1554 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal reg_1559 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal grp_quantl_fu_1222_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_1341_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1572 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal reg_1581 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1097_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal reg_1585 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3373 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1589 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_1593 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal reg_1597 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1610 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal reg_1617 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_3074 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_3087 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1701_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_3091 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal qq6_code6_table_load_reg_3106 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_1722_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_reg_3111 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_75_cast_fu_1750_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_75_cast_reg_3117 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_82_cast_fu_1770_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_95_cast_fu_1778_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_96_cast_fu_1805_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_77_cast_fu_1810_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_66_reg_3182 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal dec_ph1_load_reg_3194 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_3200 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_reg_3205 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_cast_fu_1994_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal dec_plt1_load_reg_3223 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_3229 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_2154_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal xa2_cast_fu_2158_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond2_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_3259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond2_reg_3259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond2_reg_3259 : STD_LOGIC_VECTOR (0 downto 0);
    signal accumd_load_1_reg_3268 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_cast_fu_2190_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_129_cast_fu_2195_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_131_cast_fu_2200_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_132_cast_fu_2204_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_25_fu_2214_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_25_reg_3293 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_24_fu_2223_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_24_reg_3298 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_98_reg_3303 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_cast_fu_2268_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_97_reg_3313 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal tmp_121_fu_2307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_reg_3331 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal tmp_68_cast_fu_2324_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal test_data_load_reg_3348 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal test_data_load_1_reg_3358 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal xa_cast_fu_2375_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_2379_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond2_i_i_fu_2383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_cast_fu_2407_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_115_cast_fu_2412_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_117_cast_fu_2417_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_118_cast_fu_2422_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_110_cast_fu_2437_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal tmp_100_reg_3430 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_3445 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_1222_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_106_reg_3466 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_filtep_fu_1193_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_3477 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_cast_fu_2621_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_144_cast_fu_2626_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal tmp_146_cast_fu_2630_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_28_reg_3502 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_2707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_reg_3508 : STD_LOGIC_VECTOR (0 downto 0);
    signal plt1_load_reg_3523 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3529 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_cast5_fu_2837_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_160_cast5_reg_3534 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_131_fu_2901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_131_reg_3539 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_3544 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal tmp_167_cast_fu_2931_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ph1_load_reg_3569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3575 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1152_ap_start : STD_LOGIC;
    signal grp_filtez_fu_1152_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_1152_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_1152_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_1152_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_1152_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_1152_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_1152_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_1152_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1193_ap_start : STD_LOGIC;
    signal grp_filtep_fu_1193_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_1193_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_1193_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1193_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1193_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_1193_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_1222_ap_start : STD_LOGIC;
    signal grp_quantl_fu_1222_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_1222_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_1248_ap_start : STD_LOGIC;
    signal grp_logscl_fu_1248_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_1248_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_1248_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_1248_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_1269_ap_start : STD_LOGIC;
    signal grp_scalel_fu_1269_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_1269_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_1269_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_1269_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_1269_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_upzero_fu_1300_ap_start : STD_LOGIC;
    signal grp_upzero_fu_1300_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_1300_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_1300_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1300_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_1300_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_1300_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1300_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_1300_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_1300_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1300_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_1300_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_1300_bli_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_1300_bli_ce1 : STD_LOGIC;
    signal grp_upzero_fu_1300_bli_we1 : STD_LOGIC;
    signal grp_upzero_fu_1300_bli_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1341_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_1341_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_1341_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_1341_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1341_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1341_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1341_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_1341_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1370_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_1370_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_1370_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_1370_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1370_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1370_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_1370_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1397_ap_start : STD_LOGIC;
    signal grp_logsch_fu_1397_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_1397_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_1397_ih : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_1397_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i1_reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_ptr_0_rec_i_i_phi_fu_665_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_0_rec_i_i_phi_fu_677_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ad_ptr_1_rec_i_i_phi_fu_706_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_1_rec_i_i_reg_702 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_i_i7_fu_2296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_i_i1_reg_714 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state106 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal tqmf_ptr_0_rec_i_i_phi_fu_741_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_phi_fu_753_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_phi_fu_784_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_780 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_i_i_fu_2502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_i_i_reg_792 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_filtez_fu_1152_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_1193_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_1222_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_1248_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_1269_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_reg_grp_upzero_fu_1300_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_1341_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_1370_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_1397_ap_start : STD_LOGIC := '0';
    signal tmp_67_fu_1713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_1718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_1765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_2168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_2162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_2185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_2284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_2290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal tmp_120_fu_2302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_134_fu_2319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_2329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_2340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal tmp_107_fu_2600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_132_fu_2957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_trunc_ext_fu_2821_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc8_ext_fu_3025_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_153_ext_fu_2770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_ext_fu_2719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_ext_fu_2760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal tmp_174_ext_fu_3015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_159_cast_cast_fu_2808_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_166_cast_cast_fu_2840_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_ext_fu_3005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal p_trunc9_ext_fu_2046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc10_ext_fu_2088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_ext_fu_2062_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_ext_fu_1999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_ext_fu_2036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_ext_fu_2072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal compressed_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal dec_result_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal test_data_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_803_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_123_cast_fu_2257_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_121_cast_fu_2273_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_116_cast_fu_2427_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_119_cast_fu_2432_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_27_fu_2442_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_26_fu_2482_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_803_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_130_cast_fu_2209_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_133_cast_fu_2218_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_113_cast_fu_2477_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_111_cast_fu_2487_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1097_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1465_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1475_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg1_fu_1661_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_1667_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_7_fu_1677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1687_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_fu_1653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1726_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_1_cast_fu_1755_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_1791_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_1791_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_fu_2126_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_2137_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_2133_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_2144_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_2148_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa2_cast_fu_2158_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_2179_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl7_fu_2227_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_2239_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_2235_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_2247_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_96_fu_2251_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_121_cast_fu_2273_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_2284_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_2290_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_133_fu_2313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_2334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_2345_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_2357_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_2353_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_2365_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_2369_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xb_cast_fu_2379_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2395_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl5_fu_2447_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2459_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2455_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2467_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_92_fu_2471_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_111_cast_fu_2487_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2492_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum_i_i_cast_fu_2497_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_100_fu_2508_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_101_fu_2524_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_105_fu_2569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_2590_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_2671_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_9_fu_2671_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_29_fu_2685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2867_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_13_fu_2877_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_2887_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_32_fu_2853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_2917_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_2917_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_2944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1097_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (89 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce1 : OUT STD_LOGIC;
        bli_we1 : OUT STD_LOGIC;
        bli_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mux_42eOg_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_delay_ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_delay_jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_qq6_copcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tqmf_U : component adpcm_main_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => tqmf_d0,
        q0 => tqmf_q0,
        address1 => ap_const_lv5_0,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => test_data_load_1_reg_3358);

    h_U : component adpcm_main_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0);

    delay_bpl_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        q0 => delay_bpl_q0,
        address1 => grp_upzero_fu_1300_bli_address1,
        ce1 => delay_bpl_ce1,
        we1 => delay_bpl_we1,
        d1 => grp_upzero_fu_1300_bli_d1);

    delay_dltx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_1300_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_1300_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_1300_dlti_d1,
        q1 => delay_dltx_q1);

    qq4_code4_table_U : component adpcm_main_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    delay_bph_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        q0 => delay_bph_q0,
        address1 => grp_upzero_fu_1300_bli_address1,
        ce1 => delay_bph_ce1,
        we1 => delay_bph_we1,
        d1 => grp_upzero_fu_1300_bli_d1);

    delay_dhx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_1300_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_1300_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_1300_dlti_d1,
        q1 => delay_dhx_q1);

    dec_del_bpl_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        q0 => dec_del_bpl_q0,
        address1 => grp_upzero_fu_1300_bli_address1,
        ce1 => dec_del_bpl_ce1,
        we1 => dec_del_bpl_we1,
        d1 => grp_upzero_fu_1300_bli_d1);

    dec_del_dltx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_1300_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_1300_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_1300_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq6_code6_table_U : component adpcm_main_qq6_copcA
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component adpcm_main_delay_ibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        q0 => dec_del_bph_q0,
        address1 => grp_upzero_fu_1300_bli_address1,
        ce1 => dec_del_bph_ce1,
        we1 => dec_del_bph_we1,
        d1 => grp_upzero_fu_1300_bli_d1);

    dec_del_dhx_U : component adpcm_main_delay_jbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_1300_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_1300_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_1300_dlti_d1,
        q1 => dec_del_dhx_q1);

    accumc_U : component adpcm_main_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        we0 => accumc_we0,
        d0 => accumc_d0,
        q0 => accumc_q0);

    accumd_U : component adpcm_main_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        we0 => accumd_we0,
        d0 => accumd_d0,
        q0 => accumd_q0);

    grp_filtez_fu_1152 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_1152_ap_start,
        ap_done => grp_filtez_fu_1152_ap_done,
        ap_idle => grp_filtez_fu_1152_ap_idle,
        ap_ready => grp_filtez_fu_1152_ap_ready,
        bpl_address0 => grp_filtez_fu_1152_bpl_address0,
        bpl_ce0 => grp_filtez_fu_1152_bpl_ce0,
        bpl_q0 => grp_filtez_fu_1152_bpl_q0,
        dlt_address0 => grp_filtez_fu_1152_dlt_address0,
        dlt_ce0 => grp_filtez_fu_1152_dlt_ce0,
        dlt_q0 => grp_filtez_fu_1152_dlt_q0,
        ap_return => grp_filtez_fu_1152_ap_return);

    grp_filtep_fu_1193 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_1193_ap_start,
        ap_done => grp_filtep_fu_1193_ap_done,
        ap_idle => grp_filtep_fu_1193_ap_idle,
        ap_ready => grp_filtep_fu_1193_ap_ready,
        rlt1 => grp_filtep_fu_1193_rlt1,
        al1 => grp_filtep_fu_1193_al1,
        rlt2 => grp_filtep_fu_1193_rlt2,
        al2 => grp_filtep_fu_1193_al2,
        ap_return => grp_filtep_fu_1193_ap_return);

    grp_quantl_fu_1222 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_1222_ap_start,
        ap_done => grp_quantl_fu_1222_ap_done,
        ap_idle => grp_quantl_fu_1222_ap_idle,
        ap_ready => grp_quantl_fu_1222_ap_ready,
        el => tmp_105_reg_3445,
        detl => detl,
        ap_return => grp_quantl_fu_1222_ap_return);

    grp_logscl_fu_1248 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_1248_ap_start,
        ap_done => grp_logscl_fu_1248_ap_done,
        ap_idle => grp_logscl_fu_1248_ap_idle,
        ap_ready => grp_logscl_fu_1248_ap_ready,
        il => grp_logscl_fu_1248_il,
        nbl => grp_logscl_fu_1248_nbl,
        ap_return => grp_logscl_fu_1248_ap_return);

    grp_scalel_fu_1269 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_1269_ap_start,
        ap_done => grp_scalel_fu_1269_ap_done,
        ap_idle => grp_scalel_fu_1269_ap_idle,
        ap_ready => grp_scalel_fu_1269_ap_ready,
        nbl => grp_scalel_fu_1269_nbl,
        shift_constant => grp_scalel_fu_1269_shift_constant,
        ap_return => grp_scalel_fu_1269_ap_return);

    grp_upzero_fu_1300 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_1300_ap_start,
        ap_done => grp_upzero_fu_1300_ap_done,
        ap_idle => grp_upzero_fu_1300_ap_idle,
        ap_ready => grp_upzero_fu_1300_ap_ready,
        dlt => grp_upzero_fu_1300_dlt,
        dlti_address0 => grp_upzero_fu_1300_dlti_address0,
        dlti_ce0 => grp_upzero_fu_1300_dlti_ce0,
        dlti_we0 => grp_upzero_fu_1300_dlti_we0,
        dlti_d0 => grp_upzero_fu_1300_dlti_d0,
        dlti_q0 => grp_upzero_fu_1300_dlti_q0,
        dlti_address1 => grp_upzero_fu_1300_dlti_address1,
        dlti_ce1 => grp_upzero_fu_1300_dlti_ce1,
        dlti_we1 => grp_upzero_fu_1300_dlti_we1,
        dlti_d1 => grp_upzero_fu_1300_dlti_d1,
        dlti_q1 => grp_upzero_fu_1300_dlti_q1,
        bli_address0 => grp_upzero_fu_1300_bli_address0,
        bli_ce0 => grp_upzero_fu_1300_bli_ce0,
        bli_q0 => grp_upzero_fu_1300_bli_q0,
        bli_address1 => grp_upzero_fu_1300_bli_address1,
        bli_ce1 => grp_upzero_fu_1300_bli_ce1,
        bli_we1 => grp_upzero_fu_1300_bli_we1,
        bli_d1 => grp_upzero_fu_1300_bli_d1);

    grp_uppol2_fu_1341 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_1341_ap_start,
        ap_done => grp_uppol2_fu_1341_ap_done,
        ap_idle => grp_uppol2_fu_1341_ap_idle,
        ap_ready => grp_uppol2_fu_1341_ap_ready,
        al1 => grp_uppol2_fu_1341_al1,
        al2 => grp_uppol2_fu_1341_al2,
        plt => grp_uppol2_fu_1341_plt,
        plt1 => grp_uppol2_fu_1341_plt1,
        plt2 => grp_uppol2_fu_1341_plt2,
        ap_return => grp_uppol2_fu_1341_ap_return);

    grp_uppol1_fu_1370 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_1370_ap_start,
        ap_done => grp_uppol1_fu_1370_ap_done,
        ap_idle => grp_uppol1_fu_1370_ap_idle,
        ap_ready => grp_uppol1_fu_1370_ap_ready,
        al1 => grp_uppol1_fu_1370_al1,
        apl2 => reg_1572,
        plt => grp_uppol1_fu_1370_plt,
        plt1 => grp_uppol1_fu_1370_plt1,
        ap_return => grp_uppol1_fu_1370_ap_return);

    grp_logsch_fu_1397 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_1397_ap_start,
        ap_done => grp_logsch_fu_1397_ap_done,
        ap_idle => grp_logsch_fu_1397_ap_idle,
        ap_ready => grp_logsch_fu_1397_ap_ready,
        ih => grp_logsch_fu_1397_ih,
        nbh => grp_logsch_fu_1397_nbh,
        ap_return => grp_logsch_fu_1397_ap_return);

    adpcm_main_mul_32cud_x_U39 : component adpcm_main_mul_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1097_p0,
        din1 => grp_fu_1097_p1,
        ce => grp_fu_1097_ce,
        dout => grp_fu_1097_p2);

    adpcm_main_mux_42eOg_x_U40 : component adpcm_main_mux_42eOg_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => ap_const_lv32_FFFFE310,
        din2 => ap_const_lv32_FFFFF9B0,
        din3 => ap_const_lv32_1CF0,
        din4 => ap_const_lv32_650,
        din5 => tmp_6_fu_1791_p5,
        dout => tmp_6_fu_1791_p6);

    adpcm_main_mux_42eOg_x_U41 : component adpcm_main_mux_42eOg_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din1 => ap_const_lv32_FFFFE310,
        din2 => ap_const_lv32_FFFFF9B0,
        din3 => ap_const_lv32_1CF0,
        din4 => ap_const_lv32_650,
        din5 => tmp_11_fu_2917_p5,
        dout => tmp_11_fu_2917_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_lv1_0 = exitcond2_reg_3259)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2383_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state54)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and not((ap_const_lv1_0 = exitcond2_i_i_reg_3373))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_1193_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_1193_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state82)))) then 
                    ap_reg_grp_filtep_fu_1193_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_1193_ap_ready)) then 
                    ap_reg_grp_filtep_fu_1193_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_1152_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_1152_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state82)))) then 
                    ap_reg_grp_filtez_fu_1152_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_1152_ap_ready)) then 
                    ap_reg_grp_filtez_fu_1152_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_1397_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_1397_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state103)))) then 
                    ap_reg_grp_logsch_fu_1397_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_1397_ap_ready)) then 
                    ap_reg_grp_logsch_fu_1397_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_1248_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_1248_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)))) then 
                    ap_reg_grp_logscl_fu_1248_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_1248_ap_ready)) then 
                    ap_reg_grp_logscl_fu_1248_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_1222_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_1222_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
                    ap_reg_grp_quantl_fu_1222_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_1222_ap_ready)) then 
                    ap_reg_grp_quantl_fu_1222_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_1269_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_1269_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state94)) or ((ap_const_lv1_1 = ap_CS_fsm_state105)))) then 
                    ap_reg_grp_scalel_fu_1269_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_1269_ap_ready)) then 
                    ap_reg_grp_scalel_fu_1269_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_1370_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_1370_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state94)) or ((ap_const_lv1_1 = ap_CS_fsm_state105)))) then 
                    ap_reg_grp_uppol1_fu_1370_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_1370_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_1370_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_1341_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_1341_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)) or ((ap_const_lv1_1 = ap_CS_fsm_state103)))) then 
                    ap_reg_grp_uppol2_fu_1341_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_1341_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_1341_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_1300_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_1300_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)) or ((ap_const_lv1_1 = ap_CS_fsm_state103)))) then 
                    ap_reg_grp_upzero_fu_1300_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_1300_ap_ready)) then 
                    ap_reg_grp_upzero_fu_1300_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_673_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond2_reg_3259))) then 
                ad_ptr_0_rec_i_i_reg_673 <= p_rec2_i_i_reg_828;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                ad_ptr_0_rec_i_i_reg_673 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_702_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = exitcond_i_i7_fu_2296_p2))) then 
                ad_ptr_1_rec_i_i_reg_702 <= reg_893;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                ad_ptr_1_rec_i_i_reg_702 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    dec_deth_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                                dec_deth(14 downto 0) <= p_trunc10_ext_fu_2088_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0))) then 
                dec_deth(0) <= '0';
                dec_deth(1) <= '0';
                dec_deth(2) <= '0';
                dec_deth(3) <= '1';
                dec_deth(4) <= '0';
                dec_deth(5) <= '0';
                dec_deth(6) <= '0';
                dec_deth(7) <= '0';
                dec_deth(8) <= '0';
                dec_deth(9) <= '0';
                dec_deth(10) <= '0';
                dec_deth(11) <= '0';
                dec_deth(12) <= '0';
                dec_deth(13) <= '0';
                dec_deth(14) <= '0';
            end if; 
        end if;
    end process;

    dec_detl_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done))))) then 
                                dec_detl(14 downto 0) <= p_trunc9_ext_fu_2046_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0))) then 
                dec_detl(0) <= '0';
                dec_detl(1) <= '0';
                dec_detl(2) <= '0';
                dec_detl(3) <= '0';
                dec_detl(4) <= '0';
                dec_detl(5) <= '1';
                dec_detl(6) <= '0';
                dec_detl(7) <= '0';
                dec_detl(8) <= '0';
                dec_detl(9) <= '0';
                dec_detl(10) <= '0';
                dec_detl(11) <= '0';
                dec_detl(12) <= '0';
                dec_detl(13) <= '0';
                dec_detl(14) <= '0';
            end if; 
        end if;
    end process;

    dec_il_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    deth_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))))) then 
                                deth(14 downto 0) <= p_trunc8_ext_fu_3025_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)))) then 
                deth(0) <= '0';
                deth(1) <= '0';
                deth(2) <= '0';
                deth(3) <= '1';
                deth(4) <= '0';
                deth(5) <= '0';
                deth(6) <= '0';
                deth(7) <= '0';
                deth(8) <= '0';
                deth(9) <= '0';
                deth(10) <= '0';
                deth(11) <= '0';
                deth(12) <= '0';
                deth(13) <= '0';
                deth(14) <= '0';
            end if; 
        end if;
    end process;

    detl_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state95) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done))))) then 
                                detl(14 downto 0) <= p_trunc_ext_fu_2821_p1(14 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)))) then 
                detl(0) <= '0';
                detl(1) <= '0';
                detl(2) <= '0';
                detl(3) <= '0';
                detl(4) <= '0';
                detl(5) <= '1';
                detl(6) <= '0';
                detl(7) <= '0';
                detl(8) <= '0';
                detl(9) <= '0';
                detl(10) <= '0';
                detl(11) <= '0';
                detl(12) <= '0';
                detl(13) <= '0';
                detl(14) <= '0';
            end if; 
        end if;
    end process;

    enc_ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state95) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done))) and not((ap_const_lv1_0 = tmp_119_reg_3508)))) then 
                                enc_ih(1 downto 0) <= tmp_166_cast_cast_fu_2840_p3(1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
                                enc_ih(1 downto 0) <= tmp_159_cast_cast_fu_2808_p3(1 downto 0);
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond2_reg_3259))) then 
                h_ptr_0_rec_i_i_reg_661 <= phitmp_i_i5_reg_825;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                h_ptr_0_rec_i_i_reg_661 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = grp_fu_1415_p2)))) then 
                i_0_i1_reg_649 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and not((ap_const_lv1_0 = grp_fu_1475_p2)))) then 
                i_0_i1_reg_649 <= grp_fu_803_p2(32 - 1 downto 0);
            end if; 
        end if;
    end process;

    i_0_i_i_reg_749_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i_0_i_i_reg_749 <= reg_890;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                i_0_i_i_reg_749 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i1_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = exitcond_i_i7_fu_2296_p2))) then 
                i_1_i_i1_reg_714 <= grp_fu_803_p2(4 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
                i_1_i_i1_reg_714 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_792_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state79) and (ap_const_lv1_0 = exitcond_i_i_fu_2502_p2))) then 
                i_1_i_i_reg_792 <= grp_fu_803_p2(5 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
                i_1_i_i_reg_792 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    reg_725_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = grp_fu_1415_p2)))) then 
                reg_725 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) and not((ap_const_lv1_0 = tmp_50_reg_3544)))) then 
                reg_725 <= reg_816(32 - 1 downto 0);
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0))) then 
                reg_725 <= grp_fu_803_p2(32 - 1 downto 0);
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_780_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state79) and (ap_const_lv1_0 = exitcond_i_i_fu_2502_p2))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_780 <= reg_900(6 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_780 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_737_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                tqmf_ptr_0_rec_i_i_reg_737 <= reg_820(5 - 1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                tqmf_ptr_0_rec_i_i_reg_737 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_684_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3259))) then 
                xa1_0_i_i_reg_684 <= reg_844;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                xa1_0_i_i_reg_684 <= xa1_cast_fu_2154_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter2_exitcond2_reg_3259))) then 
                xa2_0_i_i_reg_693 <= grp_fu_803_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
                xa2_0_i_i_reg_693 <= xa2_cast_fu_2158_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_760_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                xa_0_i_i_reg_760 <= reg_844;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                xa_0_i_i_reg_760 <= xa_cast_fu_2375_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_770_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
                xb_0_i_i_reg_770 <= grp_fu_803_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                xb_0_i_i_reg_770 <= xb_cast_fu_2379_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                accumd_load_1_reg_3268 <= accumd_q0;
                phitmp_i_i5_reg_825 <= grp_fu_803_p2(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))))) then
                ah1 <= grp_uppol1_fu_1370_ap_return;
                rh1 <= grp_fu_803_p2(32 - 1 downto 0);
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state105))) then
                ah2 <= tmp_174_ext_fu_3015_p1;
                    nbh(14 downto 0) <= tmp_171_ext_fu_3005_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state95) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done))))) then
                al1 <= grp_uppol1_fu_1370_ap_return;
                tmp_131_reg_3539 <= tmp_131_fu_2901_p3;
                    tmp_160_cast5_reg_3534(14 downto 0) <= tmp_160_cast5_fu_2837_p1(14 downto 0);
                tmp_50_reg_3544 <= grp_fu_1475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state94))) then
                al2 <= tmp_153_ext_fu_2770_p1;
                    nbl(14 downto 0) <= tmp_150_ext_fu_2760_p1(14 downto 0);
                rlt1 <= grp_fu_803_p2(32 - 1 downto 0);
                rlt2 <= rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond2_reg_3259 <= exitcond2_reg_3259;
                ap_pipeline_reg_pp0_iter2_exitcond2_reg_3259 <= ap_pipeline_reg_pp0_iter1_exitcond2_reg_3259;
                exitcond2_reg_3259 <= exitcond2_fu_2173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3373 <= exitcond2_i_i_reg_3373;
                ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3373 <= ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3373;
                exitcond2_i_i_reg_3373 <= exitcond2_i_i_fu_2383_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done))))) then
                dec_ah1 <= grp_uppol1_fu_1370_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                dec_ah2 <= tmp_103_ext_fu_2036_p1;
                    dec_nbl(14 downto 0) <= tmp_87_ext_fu_1999_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_3223 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_3229 <= dec_plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state18))) then
                dec_al1 <= grp_uppol1_fu_1370_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                dec_al2 <= tmp_90_ext_fu_2062_p1;
                    dec_nbh(14 downto 0) <= tmp_100_ext_fu_2072_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                dec_dh <= grp_fu_1097_p2(46 downto 15);
                dec_rl <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                dec_dlt <= grp_fu_1097_p2(46 downto 15);
                dec_ph <= grp_fu_803_p2(32 - 1 downto 0);
                tmp_66_reg_3182 <= grp_fu_1097_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                dec_ih <= tmp_61_fu_1736_p1;
                tmp_22_reg_3111 <= tmp_22_fu_1722_p1;
                    tmp_75_cast_reg_3117(14 downto 0) <= tmp_75_cast_fu_1750_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_3194 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_3200 <= dec_ph2;
                dec_rh1 <= reg_820;
                dec_rh2 <= dec_rh1;
                tmp_87_reg_3205 <= tmp_87_fu_1970_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done))))) then
                dec_plt <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                dec_rlt1 <= grp_fu_803_p2(32 - 1 downto 0);
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state9))) then
                dec_sh <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done))))) then
                dec_sl <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state101))) then
                dh <= grp_fu_1097_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state90))) then
                dlt <= grp_fu_1097_p2(46 downto 15);
                tmp_119_reg_3508 <= tmp_119_fu_2707_p2;
                tmp_28_reg_3502 <= n_assign_fu_2651_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state92))) then
                    enc_il(5 downto 0) <= tmp_143_ext_fu_2719_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3523 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3529 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                p_rec2_i_i_reg_828 <= grp_fu_803_p2(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state102))) then
                ph <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state103))) then
                ph1 <= ph;
                ph1_load_reg_3569 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3575 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state91))) then
                plt <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                qq6_code6_table_load_reg_3106 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state84)))) then
                reg_1514 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)))) then
                reg_1518 <= dec_al1;
                reg_1525 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state81) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done)))))) then
                reg_1531 <= grp_filtez_fu_1152_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state93) and not(((ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))))) then
                reg_1536 <= grp_logscl_fu_1248_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then
                reg_1541 <= dec_ah1;
                reg_1548 <= dec_ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state104) and not(((ap_const_logic_0 = grp_logsch_fu_1397_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))))) then
                reg_1554 <= grp_logsch_fu_1397_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state90)) or ((ap_const_lv1_1 = ap_CS_fsm_state101)))) then
                reg_1559 <= grp_fu_1097_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state83) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1222_ap_done)))))) then
                reg_1566 <= grp_filtez_fu_1152_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state93) and not(((ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state104) and not(((ap_const_logic_0 = grp_logsch_fu_1397_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))))) then
                reg_1572 <= grp_uppol2_fu_1341_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)))) then
                reg_1577 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3373)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2)))) then
                reg_1581 <= h_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state74)) or ((ap_const_lv1_1 = ap_CS_fsm_state89)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3373)))) then
                reg_1585 <= grp_fu_1097_p2(46 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3373)))) then
                reg_1589 <= grp_fu_1097_p2(46 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3373)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then
                reg_1593 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state92)))) then
                reg_1597 <= al1;
                reg_1604 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state82)) or ((ap_const_lv1_1 = ap_CS_fsm_state103)))) then
                reg_1610 <= ah1;
                reg_1617 <= ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state75)) or ((ap_const_lv1_1 = ap_CS_fsm_state95) and not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done)))))) then
                reg_816 <= grp_fu_803_p2(47 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_reg_3373)))) then
                reg_820 <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3373)))) then
                reg_844 <= grp_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then
                reg_890 <= grp_fu_803_p2(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then
                reg_893 <= grp_fu_803_p2(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083))) or ((ap_const_lv1_1 = ap_CS_fsm_state78)))) then
                reg_900 <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state89))) then
                sh <= grp_fu_803_p2(32 - 1 downto 0);
                tmp_117_reg_1051 <= grp_fu_803_p2(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state81) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done))))) then
                sl <= grp_fu_803_p2(32 - 1 downto 0);
                tmp_105_reg_3445 <= tmp_105_fu_2569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then
                test_data_load_1_reg_3358 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then
                test_data_load_reg_3348 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then
                tmp_100_reg_3430 <= tmp_100_fu_2508_p1(46 downto 15);
                xh <= tmp_101_fu_2524_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state83) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1222_ap_done))))) then
                tmp_106_reg_3466 <= grp_quantl_fu_1222_ap_return;
                tmp_116_reg_3477 <= grp_filtep_fu_1193_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then
                tmp_121_reg_3331 <= tmp_121_fu_2307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_24_reg_3298 <= tmp_24_fu_2223_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then
                tmp_25_reg_3293 <= tmp_25_fu_2214_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)))) then
                tmp_43_reg_3087 <= grp_fu_1415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0))) then
                tmp_44_reg_3083 <= grp_fu_1415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                tmp_57_reg_3091 <= tmp_57_fu_1701_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tmp_97_reg_3313 <= grp_fu_1465_p1(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then
                tmp_98_reg_3303 <= grp_fu_1465_p1(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                tmp_reg_3074 <= tmp_fu_1623_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state74))) then
                xb_1_reg_907 <= grp_fu_803_p2(47 - 1 downto 0);
            end if;
        end if;
    end process;
    detl(31 downto 15) <= "00000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    enc_il(31 downto 6) <= "00000000000000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    enc_ih(31 downto 2) <= "000000000000000000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    dec_detl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    tmp_75_cast_reg_3117(46 downto 15) <= "00000000000000000000000000000000";
    tmp_160_cast5_reg_3534(46 downto 15) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_1623_p2, grp_filtez_fu_1152_ap_done, grp_filtep_fu_1193_ap_done, grp_logscl_fu_1248_ap_done, grp_logsch_fu_1397_ap_done, grp_scalel_fu_1269_ap_done, grp_uppol1_fu_1370_ap_done, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp2_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, tmp_44_reg_3083, grp_upzero_fu_1300_ap_done, grp_uppol2_fu_1341_ap_done, grp_quantl_fu_1222_ap_done, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, tmp_reg_3074, grp_fu_1415_p2, tmp_43_reg_3087, exitcond2_i_i_fu_2383_p2, grp_fu_1475_p2, tmp_50_reg_3544, exitcond_i_i7_fu_2296_p2, exitcond_i_i_fu_2502_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = grp_fu_1415_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                elsif ((not((ap_start = ap_const_logic_0)) and not((tmp_fu_1623_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = grp_fu_1415_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state106;
                elsif ((not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = grp_fu_1415_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((ap_start = ap_const_logic_0)) and (tmp_fu_1623_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = grp_fu_1415_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if ((ap_const_lv1_0 = exitcond_i_i7_fu_2296_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((ap_const_lv1_0 = tmp_44_reg_3083) or (ap_const_lv1_0 = grp_fu_1475_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state106;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2383_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
            when ap_ST_fsm_pp2_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
            when ap_ST_fsm_pp2_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if ((ap_const_lv1_0 = exitcond_i_i_fu_2502_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1222_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state94;
                else
                    ap_NS_fsm <= ap_ST_fsm_state93;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_state95;
                end if;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_1397_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state105;
                else
                    ap_NS_fsm <= ap_ST_fsm_state104;
                end if;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                if ((not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) and ((ap_const_lv1_0 = tmp_reg_3074) or (ap_const_lv1_0 = tmp_43_reg_3087) or (ap_const_lv1_0 = tmp_50_reg_3544)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) and not((ap_const_lv1_0 = tmp_50_reg_3544)))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state106;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_2290_p0 <= grp_fu_803_p2(5 - 1 downto 0);
    ac_ptr_0_sum_i_i_cas_fu_2290_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_cas_fu_2290_p0),64));

    accumc_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state41, ap_CS_fsm_state45, ad_ptr_0_rec_i_i_cas_fu_2162_p1, ad_ptr_0_sum7_i_i_ca_fu_2284_p1, ac_ptr_0_sum_i_i_cas_fu_2290_p1, ap_CS_fsm_state42, ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            accumc_address0 <= ac_ptr_0_sum_i_i_cas_fu_2290_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_2284_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_2162_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state42, ap_CS_fsm_state32)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, tmp_87_reg_3205, ap_CS_fsm_state45, ap_CS_fsm_state42)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            accumc_d0 <= tmp_87_reg_3205;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            accumc_d0 <= accumc_q0;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state42)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state41, ap_CS_fsm_state45, ad_ptr_0_rec_i_i_cas_fu_2162_p1, ad_ptr_0_sum7_i_i_ca_fu_2284_p1, ac_ptr_0_sum_i_i_cas_fu_2290_p1, ap_CS_fsm_state42, ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            accumd_address0 <= ac_ptr_0_sum_i_i_cas_fu_2290_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_2284_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_2162_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state42, ap_CS_fsm_state32)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, reg_820, ap_CS_fsm_state45, ap_CS_fsm_state42)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            accumd_d0 <= reg_820;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            accumd_d0 <= accumd_q0;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state42)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_2162_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_phi_fu_677_p4),64));

    ad_ptr_0_rec_i_i_phi_fu_677_p4_assign_proc : process(ad_ptr_0_rec_i_i_reg_673, p_rec2_i_i_reg_828, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond2_reg_3259)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond2_reg_3259))) then 
            ad_ptr_0_rec_i_i_phi_fu_677_p4 <= p_rec2_i_i_reg_828;
        else 
            ad_ptr_0_rec_i_i_phi_fu_677_p4 <= ad_ptr_0_rec_i_i_reg_673;
        end if; 
    end process;

    ad_ptr_0_sum7_i_i_ca_fu_2284_p0 <= grp_fu_803_p2(5 - 1 downto 0);
    ad_ptr_0_sum7_i_i_ca_fu_2284_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_ca_fu_2284_p0),64));
    ad_ptr_1_rec_i_i_phi_fu_706_p4 <= ad_ptr_1_rec_i_i_reg_702;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(48 downto 48);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state101 <= ap_CS_fsm(84 downto 84);
    ap_CS_fsm_state102 <= ap_CS_fsm(85 downto 85);
    ap_CS_fsm_state103 <= ap_CS_fsm(86 downto 86);
    ap_CS_fsm_state104 <= ap_CS_fsm(87 downto 87);
    ap_CS_fsm_state105 <= ap_CS_fsm(88 downto 88);
    ap_CS_fsm_state106 <= ap_CS_fsm(89 downto 89);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state32 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state33 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state34 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state39 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state41 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state42 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state43 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state44 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state45 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state46 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state47 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state48 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state49 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state52 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state53 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state54 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state67 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state68 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state69 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state73 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state74 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state75 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state76 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_state77 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_state78 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_state79 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state80 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state81 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state82 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state83 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state84 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state85 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_state89 <= ap_CS_fsm(72 downto 72);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state90 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state91 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state92 <= ap_CS_fsm(75 downto 75);
    ap_CS_fsm_state93 <= ap_CS_fsm(76 downto 76);
    ap_CS_fsm_state94 <= ap_CS_fsm(77 downto 77);
    ap_CS_fsm_state95 <= ap_CS_fsm(78 downto 78);
    ap_CS_fsm_state96 <= ap_CS_fsm(79 downto 79);

    ap_done_assign_proc : process(grp_scalel_fu_1269_ap_done, grp_uppol1_fu_1370_ap_done, tmp_reg_3074, tmp_43_reg_3087, tmp_50_reg_3544, ap_CS_fsm_state106)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) and ((ap_const_lv1_0 = tmp_reg_3074) or (ap_const_lv1_0 = tmp_43_reg_3087) or (ap_const_lv1_0 = tmp_50_reg_3544)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_scalel_fu_1269_ap_done, grp_uppol1_fu_1370_ap_done, tmp_reg_3074, tmp_43_reg_3087, tmp_50_reg_3544, ap_CS_fsm_state106)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))) or ((ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) and ((ap_const_lv1_0 = tmp_reg_3074) or (ap_const_lv1_0 = tmp_43_reg_3087) or (ap_const_lv1_0 = tmp_50_reg_3544)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Addr_A <= std_logic_vector(shift_left(unsigned(compressed_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    compressed_Addr_A_orig_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state96, tmp_58_fu_1718_p1, tmp_132_fu_2957_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            compressed_Addr_A_orig <= tmp_132_fu_2957_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            compressed_Addr_A_orig <= tmp_58_fu_1718_p1(32 - 1 downto 0);
        else 
            compressed_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    compressed_Clk_A <= ap_clk;
    compressed_Din_A <= (enc_il or tmp_31_fu_2944_p2);

    compressed_EN_A_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state96)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state96)))) then 
            compressed_EN_A <= ap_const_logic_1;
        else 
            compressed_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Rst_A <= ap_rst;

    compressed_WEN_A_assign_proc : process(ap_CS_fsm_state96)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state96)))) then 
            compressed_WEN_A <= ap_const_lv4_F;
        else 
            compressed_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state14, grp_filtez_fu_1152_bpl_address0, grp_upzero_fu_1300_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bph_address0 <= grp_upzero_fu_1300_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_bph_address0 <= grp_filtez_fu_1152_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state14, grp_filtez_fu_1152_bpl_ce0, grp_upzero_fu_1300_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_1300_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_1152_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_ce1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_1300_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bph_ce1 <= grp_upzero_fu_1300_bli_ce1;
        else 
            dec_del_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_1300_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bph_we1 <= grp_upzero_fu_1300_bli_we1;
        else 
            dec_del_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_filtez_fu_1152_bpl_address0, grp_upzero_fu_1300_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_1300_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_1152_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_filtez_fu_1152_bpl_ce0, grp_upzero_fu_1300_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_1300_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_1152_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_ce1_assign_proc : process(ap_CS_fsm_state16, grp_upzero_fu_1300_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_bpl_ce1 <= grp_upzero_fu_1300_bli_ce1;
        else 
            dec_del_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we1_assign_proc : process(ap_CS_fsm_state16, grp_upzero_fu_1300_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_bpl_we1 <= grp_upzero_fu_1300_bli_we1;
        else 
            dec_del_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state14, grp_filtez_fu_1152_dlt_address0, grp_upzero_fu_1300_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_1300_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_1152_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state14, grp_filtez_fu_1152_dlt_ce0, grp_upzero_fu_1300_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_1300_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_1152_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_1300_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_1300_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_1300_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_1300_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_1300_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_1300_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_filtez_fu_1152_dlt_address0, grp_upzero_fu_1300_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_1300_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_1152_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_filtez_fu_1152_dlt_ce0, grp_upzero_fu_1300_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_1300_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_1152_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state16, grp_upzero_fu_1300_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_1300_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state16, grp_upzero_fu_1300_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_1300_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state16, grp_upzero_fu_1300_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_1300_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Addr_A <= std_logic_vector(shift_left(unsigned(dec_result_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    dec_result_Addr_A_orig_assign_proc : process(ap_CS_fsm_state46, tmp_44_reg_3083, tmp_121_reg_3331, ap_CS_fsm_state45, tmp_120_fu_2302_p1, tmp_134_fu_2319_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and not((ap_const_lv1_0 = tmp_121_reg_3331)))) then 
            dec_result_Addr_A_orig <= tmp_134_fu_2319_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and (ap_const_lv1_0 = tmp_121_reg_3331))) then 
            dec_result_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            dec_result_Addr_A_orig <= tmp_120_fu_2302_p1(32 - 1 downto 0);
        else 
            dec_result_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dec_result_Clk_A <= ap_clk;

    dec_result_Din_A_assign_proc : process(ap_CS_fsm_state46, tmp_44_reg_3083, tmp_98_reg_3303, tmp_97_reg_3313, tmp_121_reg_3331, ap_CS_fsm_state45)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and not((ap_const_lv1_0 = tmp_121_reg_3331))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and (ap_const_lv1_0 = tmp_121_reg_3331)))) then 
            dec_result_Din_A <= tmp_98_reg_3303;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
            dec_result_Din_A <= tmp_97_reg_3313;
        else 
            dec_result_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_EN_A_assign_proc : process(ap_CS_fsm_state46, tmp_44_reg_3083, tmp_121_reg_3331, ap_CS_fsm_state45)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and not((ap_const_lv1_0 = tmp_121_reg_3331))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and (ap_const_lv1_0 = tmp_121_reg_3331)))) then 
            dec_result_EN_A <= ap_const_logic_1;
        else 
            dec_result_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Rst_A <= ap_rst;

    dec_result_WEN_A_assign_proc : process(ap_CS_fsm_state46, tmp_44_reg_3083, tmp_121_reg_3331, ap_CS_fsm_state45)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and not((ap_const_lv1_0 = tmp_121_reg_3331))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((ap_const_lv1_0 = tmp_44_reg_3083)) and (ap_const_lv1_0 = tmp_121_reg_3331)))) then 
            dec_result_WEN_A <= ap_const_lv4_F;
        else 
            dec_result_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

        decis_fu_2681_p1 <= std_logic_vector(resize(signed(tmp_9_fu_2671_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state104, ap_CS_fsm_state83, grp_filtez_fu_1152_bpl_address0, grp_upzero_fu_1300_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_bph_address0 <= grp_upzero_fu_1300_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            delay_bph_address0 <= grp_filtez_fu_1152_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state104, ap_CS_fsm_state83, grp_filtez_fu_1152_bpl_ce0, grp_upzero_fu_1300_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_bph_ce0 <= grp_upzero_fu_1300_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            delay_bph_ce0 <= grp_filtez_fu_1152_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_ce1_assign_proc : process(ap_CS_fsm_state104, grp_upzero_fu_1300_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_bph_ce1 <= grp_upzero_fu_1300_bli_ce1;
        else 
            delay_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we1_assign_proc : process(ap_CS_fsm_state104, grp_upzero_fu_1300_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_bph_we1 <= grp_upzero_fu_1300_bli_we1;
        else 
            delay_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_state93, grp_filtez_fu_1152_bpl_address0, grp_upzero_fu_1300_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_bpl_address0 <= grp_upzero_fu_1300_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            delay_bpl_address0 <= grp_filtez_fu_1152_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_state93, grp_filtez_fu_1152_bpl_ce0, grp_upzero_fu_1300_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_bpl_ce0 <= grp_upzero_fu_1300_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            delay_bpl_ce0 <= grp_filtez_fu_1152_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_ce1_assign_proc : process(ap_CS_fsm_state93, grp_upzero_fu_1300_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_bpl_ce1 <= grp_upzero_fu_1300_bli_ce1;
        else 
            delay_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we1_assign_proc : process(ap_CS_fsm_state93, grp_upzero_fu_1300_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_bpl_we1 <= grp_upzero_fu_1300_bli_we1;
        else 
            delay_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state104, ap_CS_fsm_state83, grp_filtez_fu_1152_dlt_address0, grp_upzero_fu_1300_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_dhx_address0 <= grp_upzero_fu_1300_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            delay_dhx_address0 <= grp_filtez_fu_1152_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state104, ap_CS_fsm_state83, grp_filtez_fu_1152_dlt_ce0, grp_upzero_fu_1300_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_dhx_ce0 <= grp_upzero_fu_1300_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            delay_dhx_ce0 <= grp_filtez_fu_1152_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state104, grp_upzero_fu_1300_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_dhx_ce1 <= grp_upzero_fu_1300_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state104, grp_upzero_fu_1300_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_dhx_we0 <= grp_upzero_fu_1300_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state104, grp_upzero_fu_1300_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            delay_dhx_we1 <= grp_upzero_fu_1300_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_state93, grp_filtez_fu_1152_dlt_address0, grp_upzero_fu_1300_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_dltx_address0 <= grp_upzero_fu_1300_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            delay_dltx_address0 <= grp_filtez_fu_1152_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_state93, grp_filtez_fu_1152_dlt_ce0, grp_upzero_fu_1300_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_dltx_ce0 <= grp_upzero_fu_1300_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            delay_dltx_ce0 <= grp_filtez_fu_1152_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state93, grp_upzero_fu_1300_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_dltx_ce1 <= grp_upzero_fu_1300_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state93, grp_upzero_fu_1300_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_dltx_we0 <= grp_upzero_fu_1300_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state93, grp_upzero_fu_1300_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            delay_dltx_we1 <= grp_upzero_fu_1300_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_2173_p2 <= "1" when (ad_ptr_0_rec_i_i_phi_fu_677_p4 = ap_const_lv4_9) else "0";
    exitcond2_i_i_fu_2383_p2 <= "1" when (i_0_i_i_phi_fu_753_p4 = ap_const_lv4_A) else "0";
    exitcond_i_i7_fu_2296_p2 <= "1" when (i_1_i_i1_reg_714 = ap_const_lv4_9) else "0";
    exitcond_i_i_fu_2502_p2 <= "1" when (i_1_i_i_reg_792 = ap_const_lv5_15) else "0";

    grp_filtep_fu_1193_al1_assign_proc : process(ap_CS_fsm_state8, reg_1518, ap_CS_fsm_state81, reg_1541, ap_CS_fsm_state9, ap_CS_fsm_state83, reg_1597, reg_1610)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtep_fu_1193_al1 <= reg_1610;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtep_fu_1193_al1 <= reg_1597;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1193_al1 <= reg_1541;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtep_fu_1193_al1 <= reg_1518;
        else 
            grp_filtep_fu_1193_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_1193_al2_assign_proc : process(ap_CS_fsm_state8, reg_1525, ap_CS_fsm_state81, reg_1548, ap_CS_fsm_state9, ap_CS_fsm_state83, reg_1604, reg_1617)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtep_fu_1193_al2 <= reg_1617;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtep_fu_1193_al2 <= reg_1604;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1193_al2 <= reg_1548;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtep_fu_1193_al2 <= reg_1525;
        else 
            grp_filtep_fu_1193_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_1193_ap_start <= ap_reg_grp_filtep_fu_1193_ap_start;

    grp_filtep_fu_1193_rlt1_assign_proc : process(rlt1, rh1, dec_rlt1, dec_rh1, ap_CS_fsm_state8, ap_CS_fsm_state81, ap_CS_fsm_state9, ap_CS_fsm_state83)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtep_fu_1193_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtep_fu_1193_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1193_rlt1 <= dec_rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtep_fu_1193_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_1193_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_1193_rlt2_assign_proc : process(rlt2, rh2, dec_rlt2, dec_rh2, ap_CS_fsm_state8, ap_CS_fsm_state81, ap_CS_fsm_state9, ap_CS_fsm_state83)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtep_fu_1193_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtep_fu_1193_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtep_fu_1193_rlt2 <= dec_rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtep_fu_1193_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_1193_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_1152_ap_start <= ap_reg_grp_filtez_fu_1152_ap_start;

    grp_filtez_fu_1152_bpl_q0_assign_proc : process(delay_bpl_q0, delay_bph_q0, dec_del_bpl_q0, dec_del_bph_q0, ap_CS_fsm_state8, ap_CS_fsm_state81, ap_CS_fsm_state9, ap_CS_fsm_state83)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtez_fu_1152_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtez_fu_1152_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtez_fu_1152_bpl_q0 <= dec_del_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtez_fu_1152_bpl_q0 <= dec_del_bpl_q0;
        else 
            grp_filtez_fu_1152_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_1152_dlt_q0_assign_proc : process(delay_dltx_q0, delay_dhx_q0, dec_del_dltx_q0, dec_del_dhx_q0, ap_CS_fsm_state8, ap_CS_fsm_state81, ap_CS_fsm_state9, ap_CS_fsm_state83)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            grp_filtez_fu_1152_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state81))) then 
            grp_filtez_fu_1152_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_filtez_fu_1152_dlt_q0 <= dec_del_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_filtez_fu_1152_dlt_q0 <= dec_del_dltx_q0;
        else 
            grp_filtez_fu_1152_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1097_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state8, grp_filtez_fu_1152_ap_done, grp_filtep_fu_1193_ap_done, grp_logscl_fu_1248_ap_done, grp_logsch_fu_1397_ap_done, ap_CS_fsm_state75, ap_CS_fsm_state95, grp_scalel_fu_1269_ap_done, grp_uppol1_fu_1370_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state44, ap_CS_fsm_state43, ap_CS_fsm_state79, ap_CS_fsm_state46, ap_CS_fsm_state78, ap_CS_fsm_state81, ap_CS_fsm_state93, grp_upzero_fu_1300_ap_done, grp_uppol2_fu_1341_ap_done, ap_CS_fsm_state104, ap_CS_fsm_state9, ap_CS_fsm_state83, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state33, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state80, ap_CS_fsm_state92, ap_CS_fsm_state82, ap_CS_fsm_state103, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state45, ap_CS_fsm_state76, ap_CS_fsm_state106, ap_CS_fsm_state94, ap_CS_fsm_state105, ap_CS_fsm_state18, ap_CS_fsm_state42, ap_CS_fsm_state77, ap_CS_fsm_state91, ap_CS_fsm_state102, ap_CS_fsm_state32, ap_CS_fsm_state47, ap_CS_fsm_state67)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) or (ap_const_lv1_1 = ap_CS_fsm_state75) or (ap_const_lv1_1 = ap_CS_fsm_state95) or (ap_const_lv1_1 = ap_CS_fsm_state12) or (ap_const_lv1_1 = ap_CS_fsm_state13) or (ap_const_lv1_1 = ap_CS_fsm_state44) or (ap_const_lv1_1 = ap_CS_fsm_state43) or (ap_const_lv1_1 = ap_CS_fsm_state79) or (ap_const_lv1_1 = ap_CS_fsm_state46) or (ap_const_lv1_1 = ap_CS_fsm_state78) or (ap_const_lv1_1 = ap_CS_fsm_state81) or (ap_const_lv1_1 = ap_CS_fsm_state93) or (ap_const_lv1_1 = ap_CS_fsm_state104) or (ap_const_lv1_1 = ap_CS_fsm_state83) or (ap_const_lv1_1 = ap_CS_fsm_state33) or (ap_const_lv1_1 = ap_CS_fsm_state48) or (ap_const_lv1_1 = ap_CS_fsm_state68) or (ap_const_lv1_1 = ap_CS_fsm_state80) or (ap_const_lv1_1 = ap_CS_fsm_state92) or (ap_const_lv1_1 = ap_CS_fsm_state82) or (ap_const_lv1_1 = ap_CS_fsm_state103) or (ap_const_lv1_1 = ap_CS_fsm_state2) or (ap_const_lv1_1 = ap_CS_fsm_state3) or (ap_const_lv1_1 = ap_CS_fsm_state40) or (ap_const_lv1_1 = ap_CS_fsm_state41) or (ap_const_lv1_1 = ap_CS_fsm_state45) or (ap_const_lv1_1 = ap_CS_fsm_state76) or (ap_const_lv1_1 = ap_CS_fsm_state106) or (ap_const_lv1_1 = ap_CS_fsm_state94) or (ap_const_lv1_1 = ap_CS_fsm_state105) or (ap_const_lv1_1 = ap_CS_fsm_state42) or (ap_const_lv1_1 = ap_CS_fsm_state77) or (ap_const_lv1_1 = ap_CS_fsm_state91) or (ap_const_lv1_1 = ap_CS_fsm_state102) or (ap_const_lv1_1 = ap_CS_fsm_state32) or (ap_const_lv1_1 = ap_CS_fsm_state47) or (ap_const_lv1_1 = ap_CS_fsm_state67) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and ((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_logscl_fu_1248_ap_done) or (ap_const_logic_0 = grp_logsch_fu_1397_ap_done))) or (((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and ((ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and ((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done) or (ap_const_logic_0 = grp_upzero_fu_1300_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_1341_ap_done))) or (((ap_const_logic_0 = grp_scalel_fu_1269_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_1370_ap_done)) and (ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            grp_fu_1097_ce <= ap_const_logic_0;
        else 
            grp_fu_1097_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1097_p0_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state5, ap_CS_fsm_state84, ap_CS_fsm_state14, ap_CS_fsm_state4, tmp_82_cast_fu_1770_p1, tmp_96_cast_fu_1805_p1, tmp_77_cast_fu_1810_p1, ap_CS_fsm_state6, tmp_128_cast_fu_2190_p1, tmp_131_cast_fu_2200_p1, tmp_120_cast_fu_2268_p1, ap_CS_fsm_state34, tmp_68_cast_fu_2324_p1, ap_CS_fsm_state49, tmp_115_cast_fu_2412_p1, tmp_118_cast_fu_2422_p1, ap_CS_fsm_state69, tmp_160_cast_fu_2621_p1, ap_CS_fsm_state85, tmp_146_cast_fu_2630_p1, tmp_160_cast5_reg_3534, ap_CS_fsm_state96)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_fu_1097_p0 <= tmp_160_cast5_reg_3534(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state85))) then 
            grp_fu_1097_p0 <= tmp_146_cast_fu_2630_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_fu_1097_p0 <= tmp_160_cast_fu_2621_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_1097_p0 <= tmp_118_cast_fu_2422_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2))) then 
            grp_fu_1097_p0 <= tmp_115_cast_fu_2412_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_1097_p0 <= tmp_68_cast_fu_2324_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state34))) then 
            grp_fu_1097_p0 <= tmp_120_cast_fu_2268_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1097_p0 <= tmp_131_cast_fu_2200_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1097_p0 <= tmp_128_cast_fu_2190_p1(32 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state69)))) then 
            grp_fu_1097_p0 <= ap_const_lv39_7FFFFFFFD4(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            grp_fu_1097_p0 <= tmp_77_cast_fu_1810_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            grp_fu_1097_p0 <= tmp_96_cast_fu_1805_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            grp_fu_1097_p0 <= tmp_82_cast_fu_1770_p1(32 - 1 downto 0);
        else 
            grp_fu_1097_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1097_p1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state5, ap_CS_fsm_state84, ap_CS_fsm_state14, ap_CS_fsm_state4, tmp_75_cast_fu_1750_p1, tmp_75_cast_reg_3117, tmp_95_cast_fu_1778_p1, ap_CS_fsm_state6, tmp_109_cast_fu_1994_p1, tmp_129_cast_fu_2195_p1, tmp_132_cast_fu_2204_p1, ap_CS_fsm_state34, ap_CS_fsm_state49, tmp_114_cast_fu_2407_p1, tmp_117_cast_fu_2417_p1, tmp_110_cast_fu_2437_p1, ap_CS_fsm_state69, tmp_144_cast_fu_2626_p1, ap_CS_fsm_state85, ap_CS_fsm_state96, tmp_167_cast_fu_2931_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state96))) then 
            grp_fu_1097_p1 <= tmp_167_cast_fu_2931_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state85))) then 
            grp_fu_1097_p1 <= tmp_144_cast_fu_2626_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state84))) then 
            grp_fu_1097_p1 <= ap_const_lv43_234(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_fu_1097_p1 <= tmp_110_cast_fu_2437_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_1097_p1 <= tmp_117_cast_fu_2417_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage2))) then 
            grp_fu_1097_p1 <= tmp_114_cast_fu_2407_p1(32 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)))) then 
            grp_fu_1097_p1 <= ap_const_lv39_7FFFFFFFD4(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1097_p1 <= tmp_132_cast_fu_2204_p1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1097_p1 <= tmp_129_cast_fu_2195_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_fu_1097_p1 <= tmp_109_cast_fu_1994_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            grp_fu_1097_p1 <= tmp_75_cast_reg_3117(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            grp_fu_1097_p1 <= tmp_95_cast_fu_1778_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            grp_fu_1097_p1 <= tmp_75_cast_fu_1750_p1(32 - 1 downto 0);
        else 
            grp_fu_1097_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1415_p2 <= "1" when (signed(size) > signed(ap_const_lv32_0)) else "0";
    grp_fu_1465_p1 <= grp_fu_803_p2(46 - 1 downto 0);
    grp_fu_1475_p0 <= grp_fu_803_p2(32 - 1 downto 0);
    grp_fu_1475_p2 <= "1" when (signed(grp_fu_1475_p0) < signed(size)) else "0";

    grp_fu_803_p0_assign_proc : process(ap_CS_fsm_state1, size, dlt, sh, dec_dlt, dec_dh, xa1_0_i_i_reg_684, xa2_0_i_i_reg_693, tqmf_ptr_0_rec_i_i_reg_737, ap_CS_fsm_state8, ap_CS_fsm_state75, ap_CS_fsm_state95, reg_820, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state44, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state43, ap_CS_fsm_state79, ap_CS_fsm_state46, ap_CS_fsm_state78, xb_1_reg_907, ap_CS_fsm_state74, ap_CS_fsm_state89, grp_filtez_fu_1152_ap_return, reg_1531, ap_CS_fsm_state81, reg_1559, ap_CS_fsm_state9, ap_CS_fsm_state10, reg_1566, ap_CS_fsm_state14, ap_CS_fsm_state33, ap_CS_fsm_state80, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state76, i_0_i1_reg_649, ad_ptr_1_rec_i_i_phi_fu_706_p4, ad_ptr_1_rec_i_i_reg_702, i_1_i_i1_reg_714, ap_CS_fsm_state106, i_0_i_i_phi_fu_753_p4, tqmf_ptr_0_pn_rec_i_s_phi_fu_784_p4, tqmf_ptr_0_pn_rec_i_s_reg_780, i_1_i_i_reg_792, ap_CS_fsm_state94, ap_CS_fsm_state42, ap_CS_fsm_state77, ap_CS_fsm_state91, ap_CS_fsm_state102, tmp_123_cast_fu_2257_p1, tmp_121_cast_fu_2273_p1, tmp_116_cast_fu_2427_p1, tmp_119_cast_fu_2432_p1, tmp_27_fu_2442_p1, tmp_26_fu_2482_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(sh),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(ap_const_lv32_2),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(dlt),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(xb_1_reg_907),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state79))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(i_1_i_i_reg_792),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state78)) or ((ap_const_lv1_1 = ap_CS_fsm_state77)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_780),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_pn_rec_i_s_phi_fu_784_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tmp_26_fu_2482_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state74))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tmp_27_fu_2442_p1),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_803_p0 <= tmp_119_cast_fu_2432_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then 
            grp_fu_803_p0 <= tmp_116_cast_fu_2427_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_737),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(i_0_i_i_phi_fu_753_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(i_0_i1_reg_649),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state44))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(i_1_i_i1_reg_714),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(ad_ptr_1_rec_i_i_reg_702),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(ad_ptr_1_rec_i_i_phi_fu_706_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tmp_121_cast_fu_2273_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(tmp_123_cast_fu_2257_p1),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_803_p0 <= xa2_0_i_i_reg_693;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_803_p0 <= xa1_0_i_i_reg_684;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(ap_const_lv5_2),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(ap_const_lv4_1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(dec_dlt),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state91)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(reg_1531),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(reg_820),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(dec_dh),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state89)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(reg_1566),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state102)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(reg_1559),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(grp_filtez_fu_1152_ap_return),50));
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            grp_fu_803_p0 <= std_logic_vector(resize(unsigned(size),50));
        else 
            grp_fu_803_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_803_p1_assign_proc : process(ap_CS_fsm_state1, sl, dh, dec_sl, dec_rl, dec_sh, h_ptr_0_rec_i_i_reg_661, reg_725, xa_0_i_i_reg_760, xb_0_i_i_reg_770, reg_816, ap_CS_fsm_state8, ap_CS_fsm_state75, ap_CS_fsm_state95, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp2_stage3, ap_CS_fsm_state44, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state43, ap_CS_fsm_state79, ap_CS_fsm_state46, ap_CS_fsm_state78, ap_CS_fsm_state74, ap_CS_fsm_state89, ap_CS_fsm_state81, reg_1559, ap_CS_fsm_state9, ap_CS_fsm_state10, reg_1566, ap_CS_fsm_state14, ap_CS_fsm_state33, ap_CS_fsm_state80, tmp_66_reg_3182, ap_CS_fsm_state11, ap_CS_fsm_state19, tmp_25_reg_3293, tmp_24_reg_3298, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state76, grp_filtep_fu_1193_ap_return, tmp_116_reg_3477, ad_ptr_0_rec_i_i_phi_fu_677_p4, ap_CS_fsm_state106, ap_CS_fsm_state94, ap_CS_fsm_state42, ap_CS_fsm_state77, ap_CS_fsm_state91, ap_CS_fsm_state102, tmp_130_cast_fu_2209_p1, tmp_133_cast_fu_2218_p1, tmp_113_cast_fu_2477_p1, tmp_111_cast_fu_2487_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(dh),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state102))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(reg_1566),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(reg_725),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state94))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(sl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state89))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_116_reg_3477),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state79))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv5_1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv6_3F),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv6_17),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv6_15),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_111_cast_fu_2487_p1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state74))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_113_cast_fu_2477_p1),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage3))) then 
            grp_fu_803_p1 <= xb_0_i_i_reg_770;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage2) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then 
            grp_fu_803_p1 <= xa_0_i_i_reg_760;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv5_2),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv32_2),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv4_1),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state43))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv5_1F),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state42))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv5_A),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv5_9),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_25_reg_3293),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_24_reg_3298),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_803_p1 <= tmp_133_cast_fu_2218_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            grp_fu_803_p1 <= tmp_130_cast_fu_2209_p1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(h_ptr_0_rec_i_i_reg_661),50));
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ad_ptr_0_rec_i_i_phi_fu_677_p4),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(dec_sl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(tmp_66_reg_3182),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(dec_rl),50));
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(dec_sh),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state91)))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(reg_1559),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state80)))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(reg_816),50));
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(grp_filtep_fu_1193_ap_return),50));
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            grp_fu_803_p1 <= std_logic_vector(resize(signed(ap_const_lv32_FFFFFFFF),50));
        else 
            grp_fu_803_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_803_p2 <= std_logic_vector(unsigned(grp_fu_803_p0) + unsigned(grp_fu_803_p1));
    grp_logsch_fu_1397_ap_start <= ap_reg_grp_logsch_fu_1397_ap_start;

    grp_logsch_fu_1397_ih_assign_proc : process(enc_ih, dec_ih, ap_CS_fsm_state8, ap_CS_fsm_state104)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_logsch_fu_1397_ih <= enc_ih;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_logsch_fu_1397_ih <= dec_ih;
        else 
            grp_logsch_fu_1397_ih <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_logsch_fu_1397_nbh_assign_proc : process(nbh, dec_nbh, ap_CS_fsm_state8, ap_CS_fsm_state104)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_logsch_fu_1397_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_logsch_fu_1397_nbh <= dec_nbh;
        else 
            grp_logsch_fu_1397_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_1248_ap_start <= ap_reg_grp_logscl_fu_1248_ap_start;

    grp_logscl_fu_1248_il_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state93, tmp_22_reg_3111, tmp_106_reg_3466)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_logscl_fu_1248_il <= tmp_106_reg_3466;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_logscl_fu_1248_il <= tmp_22_reg_3111;
        else 
            grp_logscl_fu_1248_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_1248_nbl_assign_proc : process(nbl, dec_nbl, ap_CS_fsm_state8, ap_CS_fsm_state93)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_logscl_fu_1248_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_logscl_fu_1248_nbl <= dec_nbl;
        else 
            grp_logscl_fu_1248_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_1222_ap_start <= ap_reg_grp_quantl_fu_1222_ap_start;
    grp_scalel_fu_1269_ap_start <= ap_reg_grp_scalel_fu_1269_ap_start;

    grp_scalel_fu_1269_nbl_assign_proc : process(ap_CS_fsm_state95, reg_1536, reg_1554, ap_CS_fsm_state16, tmp_reg_3074, tmp_43_reg_3087, ap_CS_fsm_state106, ap_CS_fsm_state18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) then 
            grp_scalel_fu_1269_nbl <= reg_1554;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state95)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_1269_nbl <= reg_1536;
        else 
            grp_scalel_fu_1269_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_1269_shift_constant_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state16, tmp_reg_3074, tmp_43_reg_3087, ap_CS_fsm_state106, ap_CS_fsm_state18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087))))) then 
            grp_scalel_fu_1269_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state95)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_1269_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_1269_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_1370_al1_assign_proc : process(ap_CS_fsm_state95, reg_1518, reg_1541, ap_CS_fsm_state16, reg_1597, reg_1610, tmp_reg_3074, tmp_43_reg_3087, ap_CS_fsm_state106, ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)))) then 
            grp_uppol1_fu_1370_al1 <= reg_1610;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_uppol1_fu_1370_al1 <= reg_1597;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            grp_uppol1_fu_1370_al1 <= reg_1518;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_1370_al1 <= reg_1541;
        else 
            grp_uppol1_fu_1370_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_1370_ap_start <= ap_reg_grp_uppol1_fu_1370_ap_start;

    grp_uppol1_fu_1370_plt_assign_proc : process(plt, ph, dec_plt, dec_ph, ap_CS_fsm_state95, ap_CS_fsm_state16, tmp_reg_3074, tmp_43_reg_3087, ap_CS_fsm_state106, ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)))) then 
            grp_uppol1_fu_1370_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_uppol1_fu_1370_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            grp_uppol1_fu_1370_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_1370_plt <= dec_ph;
        else 
            grp_uppol1_fu_1370_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_1370_plt1_assign_proc : process(ap_CS_fsm_state95, ap_CS_fsm_state16, tmp_reg_3074, tmp_43_reg_3087, dec_ph1_load_reg_3194, dec_plt1_load_reg_3223, plt1_load_reg_3523, ph1_load_reg_3569, ap_CS_fsm_state106, ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state106) and not((ap_const_lv1_0 = tmp_reg_3074)) and not((ap_const_lv1_0 = tmp_43_reg_3087)))) then 
            grp_uppol1_fu_1370_plt1 <= ph1_load_reg_3569;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state95))) then 
            grp_uppol1_fu_1370_plt1 <= plt1_load_reg_3523;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            grp_uppol1_fu_1370_plt1 <= dec_plt1_load_reg_3223;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_1370_plt1 <= dec_ph1_load_reg_3194;
        else 
            grp_uppol1_fu_1370_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1341_al1_assign_proc : process(reg_1518, ap_CS_fsm_state93, reg_1541, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16, reg_1597, reg_1610)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_uppol2_fu_1341_al1 <= reg_1610;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_uppol2_fu_1341_al1 <= reg_1597;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol2_fu_1341_al1 <= reg_1518;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_1341_al1 <= reg_1541;
        else 
            grp_uppol2_fu_1341_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1341_al2_assign_proc : process(reg_1525, ap_CS_fsm_state93, reg_1548, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16, reg_1604, reg_1617)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_uppol2_fu_1341_al2 <= reg_1617;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_uppol2_fu_1341_al2 <= reg_1604;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol2_fu_1341_al2 <= reg_1525;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_1341_al2 <= reg_1548;
        else 
            grp_uppol2_fu_1341_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_1341_ap_start <= ap_reg_grp_uppol2_fu_1341_ap_start;

    grp_uppol2_fu_1341_plt_assign_proc : process(plt, ph, dec_plt, dec_ph, ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_uppol2_fu_1341_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_uppol2_fu_1341_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol2_fu_1341_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_1341_plt <= dec_ph;
        else 
            grp_uppol2_fu_1341_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1341_plt1_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16, dec_ph1_load_reg_3194, dec_plt1_load_reg_3223, plt1_load_reg_3523, ph1_load_reg_3569)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_uppol2_fu_1341_plt1 <= ph1_load_reg_3569;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_uppol2_fu_1341_plt1 <= plt1_load_reg_3523;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol2_fu_1341_plt1 <= dec_plt1_load_reg_3223;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_1341_plt1 <= dec_ph1_load_reg_3194;
        else 
            grp_uppol2_fu_1341_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_1341_plt2_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16, dec_ph2_load_reg_3200, dec_plt2_load_reg_3229, plt2_load_reg_3529, ph2_load_reg_3575)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_uppol2_fu_1341_plt2 <= ph2_load_reg_3575;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_uppol2_fu_1341_plt2 <= plt2_load_reg_3529;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol2_fu_1341_plt2 <= dec_plt2_load_reg_3229;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_1341_plt2 <= dec_ph2_load_reg_3200;
        else 
            grp_uppol2_fu_1341_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_1300_ap_start <= ap_reg_grp_upzero_fu_1300_ap_start;

    grp_upzero_fu_1300_bli_q0_assign_proc : process(delay_bpl_q0, delay_bph_q0, dec_del_bpl_q0, dec_del_bph_q0, ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_upzero_fu_1300_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_upzero_fu_1300_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_upzero_fu_1300_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_1300_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_1300_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1300_dlt_assign_proc : process(ap_CS_fsm_state93, ap_CS_fsm_state104, reg_1559, ap_CS_fsm_state14, ap_CS_fsm_state16, tmp_66_reg_3182)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_upzero_fu_1300_dlt <= tmp_66_reg_3182;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state93)) or ((ap_const_lv1_1 = ap_CS_fsm_state104)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then 
            grp_upzero_fu_1300_dlt <= reg_1559;
        else 
            grp_upzero_fu_1300_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1300_dlti_q0_assign_proc : process(delay_dltx_q0, delay_dhx_q0, dec_del_dltx_q0, dec_del_dhx_q0, ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_upzero_fu_1300_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_upzero_fu_1300_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_upzero_fu_1300_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_1300_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_1300_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_1300_dlti_q1_assign_proc : process(delay_dltx_q1, delay_dhx_q1, dec_del_dltx_q1, dec_del_dhx_q1, ap_CS_fsm_state93, ap_CS_fsm_state104, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state104))) then 
            grp_upzero_fu_1300_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state93))) then 
            grp_upzero_fu_1300_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_upzero_fu_1300_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_1300_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_1300_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, h_ptr_0_rec_i_i_cast_fu_2168_p1, h_ptr_0_sum9_i_i_cas_fu_2185_p1, tqmf_ptr_0_rec_i_i_c_fu_2389_p1, tqmf_ptr_0_sum67_i_i_1_fu_2401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            h_address0 <= tqmf_ptr_0_sum67_i_i_1_fu_2401_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2389_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            h_address0 <= h_ptr_0_sum9_i_i_cas_fu_2185_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_2168_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_2168_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_phi_fu_665_p4),64));

    h_ptr_0_rec_i_i_phi_fu_665_p4_assign_proc : process(h_ptr_0_rec_i_i_reg_661, phitmp_i_i5_reg_825, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond2_reg_3259)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond2_reg_3259))) then 
            h_ptr_0_rec_i_i_phi_fu_665_p4 <= phitmp_i_i5_reg_825;
        else 
            h_ptr_0_rec_i_i_phi_fu_665_p4 <= h_ptr_0_rec_i_i_reg_661;
        end if; 
    end process;

    h_ptr_0_sum9_i_i_cas_fu_2185_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_2179_p2),64));
    h_ptr_0_sum9_i_i_fu_2179_p2 <= (h_ptr_0_rec_i_i_reg_661 or ap_const_lv5_1);

    i_0_i_i_phi_fu_753_p4_assign_proc : process(i_0_i_i_reg_749, exitcond2_i_i_reg_3373, reg_890, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            i_0_i_i_phi_fu_753_p4 <= reg_890;
        else 
            i_0_i_i_phi_fu_753_p4 <= i_0_i_i_reg_749;
        end if; 
    end process;

    m_fu_2693_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2651_p2));
    n_assign_1_fu_2699_p3 <= 
        m_fu_2693_p2 when (tmp_29_fu_2685_p3(0) = '1') else 
        n_assign_fu_2651_p2;
    n_assign_fu_2651_p2 <= std_logic_vector(unsigned(xh) - unsigned(tmp_117_reg_1051));
    p_lshr1_fu_1667_p4 <= p_neg1_fu_1661_p2(31 downto 1);
    p_lshr_f1_fu_1687_p4 <= i_0_i1_reg_649(31 downto 1);
    p_lshr_f_fu_2887_p4 <= reg_725(31 downto 1);
    p_lshr_fu_2867_p4 <= p_neg_fu_2861_p2(31 downto 1);
    p_neg1_fu_1661_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i1_reg_649));
    p_neg_fu_2861_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_725));
    p_neg_t1_fu_1681_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_7_fu_1677_p1));
    p_neg_t_fu_2881_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_13_fu_2877_p1));
        p_shl2_cast_fu_2365_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2357_p3),37));

    p_shl2_fu_2357_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_2133_p1 <= std_logic_vector(resize(signed(p_shl3_fu_2126_p3),37));

    p_shl3_fu_2126_p3 <= (tmp_87_reg_3205 & ap_const_lv4_0);
        p_shl4_cast_fu_2144_p1 <= std_logic_vector(resize(signed(p_shl4_fu_2137_p3),37));

    p_shl4_fu_2137_p3 <= (tmp_87_reg_3205 & ap_const_lv2_0);
        p_shl5_cast_fu_2455_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2447_p3),37));

    p_shl5_fu_2447_p3 <= (tqmf_q0 & ap_const_lv4_0);
        p_shl6_cast_fu_2467_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2459_p3),37));

    p_shl6_fu_2459_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl7_cast_fu_2235_p1 <= std_logic_vector(resize(signed(p_shl7_fu_2227_p3),37));

    p_shl7_fu_2227_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_2247_p1 <= std_logic_vector(resize(signed(p_shl8_fu_2239_p3),37));

    p_shl8_fu_2239_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_2353_p1 <= std_logic_vector(resize(signed(p_shl_fu_2345_p3),37));

    p_shl_fu_2345_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2497_p0 <= grp_fu_803_p2(6 - 1 downto 0);
    p_sum_i_i_cast_fu_2497_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_cast_fu_2497_p0),64));
    p_trunc10_ext_fu_2088_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1269_ap_return),32));
    p_trunc8_ext_fu_3025_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1269_ap_return),32));
    p_trunc9_ext_fu_2046_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1269_ap_return),32));
    p_trunc_ext_fu_2821_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_1269_ap_return),32));

    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state4, tmp_64_fu_1765_p1, tmp_107_fu_2600_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state83))) then 
            qq4_code4_table_address0 <= tmp_107_fu_2600_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            qq4_code4_table_address0 <= tmp_64_fu_1765_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_1152_ap_done, grp_filtep_fu_1193_ap_done, ap_CS_fsm_state83, grp_quantl_fu_1222_ap_done, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state83) and not(((ap_const_logic_0 = grp_filtez_fu_1152_ap_done) or (ap_const_logic_0 = grp_filtep_fu_1193_ap_done) or (ap_const_logic_0 = grp_quantl_fu_1222_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state4)))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_67_fu_1713_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Addr_A <= std_logic_vector(shift_left(unsigned(test_data_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    test_data_Addr_A_orig_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state53, tmp_47_fu_2329_p1, tmp_55_fu_2340_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            test_data_Addr_A_orig <= tmp_55_fu_2340_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            test_data_Addr_A_orig <= tmp_47_fu_2329_p1(32 - 1 downto 0);
        else 
            test_data_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    test_data_Clk_A <= ap_clk;
    test_data_Din_A <= ap_const_lv32_0;

    test_data_EN_A_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state53)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state53)))) then 
            test_data_EN_A <= ap_const_logic_1;
        else 
            test_data_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Rst_A <= ap_rst;
    test_data_WEN_A <= ap_const_lv4_0;
    tmp_100_ext_fu_2072_p1 <= std_logic_vector(resize(unsigned(reg_1554),32));
    tmp_100_fu_2508_p1 <= grp_fu_803_p2(47 - 1 downto 0);
    tmp_101_fu_2524_p2 <= std_logic_vector(unsigned(reg_816) - unsigned(xb_1_reg_907));
        tmp_103_ext_fu_2036_p1 <= std_logic_vector(resize(signed(reg_1572),32));

    tmp_105_fu_2569_p1 <= grp_fu_803_p2(32 - 1 downto 0);
    tmp_105_fu_2569_p2 <= std_logic_vector(unsigned(tmp_100_reg_3430) - unsigned(tmp_105_fu_2569_p1));
    tmp_107_fu_2600_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_2590_p4),64));
        tmp_109_cast_fu_1994_p1 <= std_logic_vector(resize(signed(reg_820),39));

    tmp_10_fu_2590_p4 <= grp_quantl_fu_1222_ap_return(5 downto 2);
        tmp_110_cast_fu_2437_p1 <= std_logic_vector(resize(signed(reg_1593),39));

    tmp_111_cast_fu_2487_p0 <= reg_1585(39 - 1 downto 0);
        tmp_111_cast_fu_2487_p1 <= std_logic_vector(resize(signed(tmp_111_cast_fu_2487_p0),47));

        tmp_113_cast_fu_2477_p1 <= std_logic_vector(resize(signed(tmp_92_fu_2471_p2),47));

        tmp_114_cast_fu_2407_p1 <= std_logic_vector(resize(signed(reg_1593),46));

        tmp_115_cast_fu_2412_p1 <= std_logic_vector(resize(signed(reg_1581),46));

        tmp_116_cast_fu_2427_p1 <= std_logic_vector(resize(signed(reg_1585),50));

        tmp_117_cast_fu_2417_p1 <= std_logic_vector(resize(signed(reg_1593),46));

        tmp_118_cast_fu_2422_p1 <= std_logic_vector(resize(signed(reg_1581),46));

        tmp_119_cast_fu_2432_p1 <= std_logic_vector(resize(signed(reg_1589),50));

    tmp_119_fu_2707_p2 <= "1" when (signed(n_assign_1_fu_2699_p3) > signed(decis_fu_2681_p1)) else "0";
    tmp_11_fu_2917_p5 <= enc_ih(2 - 1 downto 0);
        tmp_120_cast_fu_2268_p1 <= std_logic_vector(resize(signed(reg_1577),39));

        tmp_120_fu_2302_p1 <= std_logic_vector(resize(signed(i_0_i1_reg_649),64));

    tmp_121_cast_fu_2273_p0 <= reg_1585(39 - 1 downto 0);
        tmp_121_cast_fu_2273_p1 <= std_logic_vector(resize(signed(tmp_121_cast_fu_2273_p0),46));

    tmp_121_fu_2307_p2 <= "1" when (signed(i_0_i1_reg_649) < signed(reg_725)) else "0";
        tmp_123_cast_fu_2257_p1 <= std_logic_vector(resize(signed(tmp_96_fu_2251_p2),46));

        tmp_128_cast_fu_2190_p1 <= std_logic_vector(resize(signed(reg_1577),46));

        tmp_129_cast_fu_2195_p1 <= std_logic_vector(resize(signed(reg_1581),46));

        tmp_130_cast_fu_2209_p1 <= std_logic_vector(resize(signed(reg_1585),50));

        tmp_131_cast_fu_2200_p1 <= std_logic_vector(resize(signed(accumd_load_1_reg_3268),46));

    tmp_131_fu_2901_p3 <= 
        p_neg_t_fu_2881_p2 when (tmp_32_fu_2853_p3(0) = '1') else 
        tmp_14_fu_2897_p1;
        tmp_132_cast_fu_2204_p1 <= std_logic_vector(resize(signed(reg_1581),46));

        tmp_132_fu_2957_p1 <= std_logic_vector(resize(signed(tmp_131_reg_3539),64));

        tmp_133_cast_fu_2218_p1 <= std_logic_vector(resize(signed(reg_1589),50));

    tmp_133_fu_2313_p2 <= (i_0_i1_reg_649 or ap_const_lv32_1);
        tmp_134_fu_2319_p1 <= std_logic_vector(resize(signed(tmp_133_fu_2313_p2),64));

    tmp_13_fu_2877_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2867_p4),32));
    tmp_143_ext_fu_2719_p1 <= std_logic_vector(resize(unsigned(tmp_106_reg_3466),32));
        tmp_144_cast_fu_2626_p1 <= std_logic_vector(resize(signed(detl),47));

        tmp_146_cast_fu_2630_p1 <= std_logic_vector(resize(signed(reg_1514),47));

    tmp_14_fu_2897_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_2887_p4),32));
    tmp_150_ext_fu_2760_p1 <= std_logic_vector(resize(unsigned(reg_1536),32));
        tmp_153_ext_fu_2770_p1 <= std_logic_vector(resize(signed(reg_1572),32));

    tmp_159_cast_cast_fu_2808_p3 <= 
        ap_const_lv32_1 when (tmp_28_reg_3502(0) = '1') else 
        ap_const_lv32_3;
        tmp_160_cast5_fu_2837_p1 <= std_logic_vector(resize(signed(deth),47));

        tmp_160_cast_fu_2621_p1 <= std_logic_vector(resize(signed(deth),43));

    tmp_166_cast_cast_fu_2840_p3 <= 
        ap_const_lv32_0 when (tmp_28_reg_3502(0) = '1') else 
        ap_const_lv32_2;
        tmp_167_cast_fu_2931_p1 <= std_logic_vector(resize(signed(tmp_11_fu_2917_p6),47));

    tmp_171_ext_fu_3005_p1 <= std_logic_vector(resize(unsigned(reg_1554),32));
        tmp_174_ext_fu_3015_p1 <= std_logic_vector(resize(signed(reg_1572),32));

    tmp_1_cast_fu_1755_p4 <= compressed_Dout_A(5 downto 2);
    tmp_21_fu_1653_p3 <= i_0_i1_reg_649(31 downto 31);
    tmp_22_fu_1722_p1 <= compressed_Dout_A(6 - 1 downto 0);
    tmp_24_fu_2223_p1 <= grp_fu_803_p2(46 - 1 downto 0);
    tmp_25_fu_2214_p1 <= grp_fu_803_p2(46 - 1 downto 0);
    tmp_26_fu_2482_p1 <= xa_0_i_i_reg_760(47 - 1 downto 0);
    tmp_27_fu_2442_p1 <= xb_0_i_i_reg_770(47 - 1 downto 0);
    tmp_29_fu_2685_p3 <= n_assign_fu_2651_p2(31 downto 31);
    tmp_31_fu_2944_p2 <= std_logic_vector(shift_left(unsigned(enc_ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_32_fu_2853_p3 <= reg_725(31 downto 31);
    tmp_45_fu_1726_p4 <= compressed_Dout_A(31 downto 6);
        tmp_47_fu_2329_p1 <= std_logic_vector(resize(signed(reg_725),64));

    tmp_48_fu_2334_p2 <= (reg_725 or ap_const_lv32_1);
        tmp_55_fu_2340_p1 <= std_logic_vector(resize(signed(tmp_48_fu_2334_p2),64));

    tmp_57_fu_1701_p3 <= 
        p_neg_t1_fu_1681_p2 when (tmp_21_fu_1653_p3(0) = '1') else 
        tmp_8_fu_1697_p1;
        tmp_58_fu_1718_p1 <= std_logic_vector(resize(signed(tmp_57_reg_3091),64));

        tmp_61_fu_1736_p1 <= std_logic_vector(resize(signed(tmp_45_fu_1726_p4),32));

    tmp_64_fu_1765_p1 <= std_logic_vector(resize(unsigned(tmp_1_cast_fu_1755_p4),64));
        tmp_67_fu_1713_p1 <= std_logic_vector(resize(signed(dec_il),64));

        tmp_68_cast_fu_2324_p1 <= std_logic_vector(resize(signed(reg_1593),39));

    tmp_6_fu_1791_p5 <= dec_ih(2 - 1 downto 0);
        tmp_75_cast_fu_1750_p1 <= std_logic_vector(resize(signed(dec_detl),47));

        tmp_77_cast_fu_1810_p1 <= std_logic_vector(resize(signed(reg_1514),47));

    tmp_7_fu_1677_p1 <= std_logic_vector(resize(unsigned(p_lshr1_fu_1667_p4),32));
        tmp_82_cast_fu_1770_p1 <= std_logic_vector(resize(signed(qq6_code6_table_load_reg_3106),47));

    tmp_87_ext_fu_1999_p1 <= std_logic_vector(resize(unsigned(reg_1536),32));
    tmp_87_fu_1970_p2 <= std_logic_vector(unsigned(dec_rl) - unsigned(reg_820));
    tmp_8_fu_1697_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1687_p4),32));
        tmp_90_ext_fu_2062_p1 <= std_logic_vector(resize(signed(reg_1572),32));

    tmp_92_fu_2471_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2455_p1) - signed(p_shl6_cast_fu_2467_p1));
        tmp_95_cast_fu_1778_p1 <= std_logic_vector(resize(signed(dec_deth),47));

        tmp_96_cast_fu_1805_p1 <= std_logic_vector(resize(signed(tmp_6_fu_1791_p6),47));

    tmp_96_fu_2251_p2 <= std_logic_vector(signed(p_shl7_cast_fu_2235_p1) - signed(p_shl8_cast_fu_2247_p1));
    tmp_9_fu_2671_p1 <= reg_1585(43 - 1 downto 0);
    tmp_9_fu_2671_p4 <= tmp_9_fu_2671_p1(42 downto 12);
    tmp_fu_1623_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";

    tqmf_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state80, ap_CS_fsm_state53, ap_CS_fsm_state76, tqmf_ptr_0_rec_i_i_c_fu_2389_p1, tqmf_ptr_0_sum67_i_i_1_fu_2401_p1, tqmf_ptr_0_sum_i_i_c_fu_2492_p1, p_sum_i_i_cast_fu_2497_p1, ap_CS_fsm_state77, ap_CS_fsm_state47, ap_CS_fsm_state67, ap_CS_fsm_state73)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            tqmf_address0 <= p_sum_i_i_cast_fu_2497_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            tqmf_address0 <= tqmf_ptr_0_sum_i_i_c_fu_2492_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state73))) then 
            tqmf_address0 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            tqmf_address0 <= tqmf_ptr_0_sum67_i_i_1_fu_2401_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2389_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state80, ap_CS_fsm_state53, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state47, ap_CS_fsm_state67, ap_CS_fsm_state73)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage1) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)) or ((ap_const_lv1_1 = ap_CS_fsm_state77)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)) or ((ap_const_lv1_1 = ap_CS_fsm_state73)))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_state80)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d0_assign_proc : process(tqmf_q0, ap_CS_fsm_state80, test_data_load_reg_3348, ap_CS_fsm_state77)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            tqmf_d0 <= test_data_load_reg_3348;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            tqmf_d0 <= tqmf_q0;
        else 
            tqmf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr_0_pn_rec_i_s_phi_fu_784_p4 <= tqmf_ptr_0_pn_rec_i_s_reg_780;
    tqmf_ptr_0_rec_i_i_c_fu_2389_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_phi_fu_741_p4),64));

    tqmf_ptr_0_rec_i_i_phi_fu_741_p4_assign_proc : process(tqmf_ptr_0_rec_i_i_reg_737, reg_820, exitcond2_i_i_reg_3373, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_0 = exitcond2_i_i_reg_3373) and (ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            tqmf_ptr_0_rec_i_i_phi_fu_741_p4 <= reg_820(5 - 1 downto 0);
        else 
            tqmf_ptr_0_rec_i_i_phi_fu_741_p4 <= tqmf_ptr_0_rec_i_i_reg_737;
        end if; 
    end process;

    tqmf_ptr_0_sum67_i_i_1_fu_2401_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2395_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2395_p2 <= (tqmf_ptr_0_rec_i_i_reg_737 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2492_p0 <= grp_fu_803_p2(6 - 1 downto 0);
    tqmf_ptr_0_sum_i_i_c_fu_2492_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_c_fu_2492_p0),64));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state77)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state80)) or ((ap_const_lv1_1 = ap_CS_fsm_state77)))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state80)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state80)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

        xa1_cast_fu_2154_p1 <= std_logic_vector(resize(signed(xa1_fu_2148_p2),50));

    xa1_fu_2148_p2 <= std_logic_vector(signed(p_shl3_cast_fu_2133_p1) - signed(p_shl4_cast_fu_2144_p1));
    xa2_cast_fu_2158_p0 <= grp_fu_1097_p2(39 - 1 downto 0);
        xa2_cast_fu_2158_p1 <= std_logic_vector(resize(signed(xa2_cast_fu_2158_p0),50));

        xa_cast_fu_2375_p1 <= std_logic_vector(resize(signed(xa_fu_2369_p2),50));

    xa_fu_2369_p2 <= std_logic_vector(signed(p_shl_cast_fu_2353_p1) - signed(p_shl2_cast_fu_2365_p1));
    xb_cast_fu_2379_p0 <= grp_fu_1097_p2(39 - 1 downto 0);
        xb_cast_fu_2379_p1 <= std_logic_vector(resize(signed(xb_cast_fu_2379_p0),50));

end behav;
