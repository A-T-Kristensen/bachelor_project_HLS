-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    dec_result_ce0 : OUT STD_LOGIC;
    dec_result_we0 : OUT STD_LOGIC;
    dec_result_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    test_data_ce0 : OUT STD_LOGIC;
    test_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    compressed_ce0 : OUT STD_LOGIC;
    compressed_we0 : OUT STD_LOGIC;
    compressed_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (76 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (76 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (76 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (76 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (76 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (76 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (76 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (76 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (76 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (76 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (76 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_we0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_we0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq2_code2_table_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal qq2_code2_table_ce0 : STD_LOGIC;
    signal qq2_code2_table_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal tqmf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce1 : STD_LOGIC;
    signal h_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_we0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_we0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_we0 : STD_LOGIC;
    signal accumc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_we0 : STD_LOGIC;
    signal accumd_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_957 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal reg_962 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal reg_966 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_filtez_fu_763_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_970 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_filtez_fu_763_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_filtep_fu_809_ap_done : STD_LOGIC;
    signal grp_filtep_fu_817_ap_done : STD_LOGIC;
    signal reg_974 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logscl_fu_837_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_987 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_logscl_fu_837_ap_done : STD_LOGIC;
    signal grp_logsch_fu_845_ap_done : STD_LOGIC;
    signal grp_upzero_fu_786_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_777_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state64 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_logsch_fu_845_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_992 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_uppol2_fu_777_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_997 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_scalel_fu_853_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_801_ap_done : STD_LOGIC;
    signal reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal reg_1006 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal reg_1010 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal exitcond_i_i_fu_2236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2862 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2866 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_1086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_2876 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1124_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_2881 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_39_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1203_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_46_reg_2897 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_18_reg_2903 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal qq6_code6_table_load_reg_2933 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_cast_fu_1273_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_10_reg_2954 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_11_fu_1312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_2959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_2974 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_2980 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph1_load_reg_3032 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_3038 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt1_load_reg_3049 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_3055 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_1582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_3060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_1588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_3066 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_1735_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal xa2_cast_fu_1739_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_rec2_i_i_fu_1760_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec2_i_i_reg_3106 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_1754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i3_fu_1777_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i3_reg_3116 : STD_LOGIC_VECTOR (4 downto 0);
    signal accumd_load_1_reg_3121 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_1791_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_85_reg_3146 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_1804_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_86_reg_3151 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_2_fu_1813_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal xa2_2_fu_1822_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_1832_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_81_reg_3171 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_83_reg_3176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_84_reg_3181 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_addr_1_reg_3186 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal accumd_addr_1_reg_3191 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_i_fu_1939_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec_i_i_reg_3196 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_fu_1963_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_3214 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_3219 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i5_fu_1957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_1990_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal test_data_load_reg_3238 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal test_data_load_1_reg_3248 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal xa_cast_fu_2052_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_2056_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal i_fu_2072_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3276 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_i_i_fu_2066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i_fu_2090_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i_reg_3291 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr_load_reg_3296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_fu_2104_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_79_reg_3321 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_fu_2117_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_80_reg_3326 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa_2_fu_2126_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal xb_2_fu_2135_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal grp_fu_2145_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_77_reg_3346 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal xa_1_fu_2162_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_1_reg_3351 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal xb_1_fu_2202_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_1_reg_3357 : STD_LOGIC_VECTOR (46 downto 0);
    signal tqmf_addr_2_reg_3363 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr1_0_rec_i_i_fu_2219_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr1_0_rec_i_i_reg_3368 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_4_fu_2242_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_3381 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_88_reg_3386 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_2304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_reg_3411 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_reg_3416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_quantl_fu_825_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_94_reg_3427 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_quantl_fu_825_ap_done : STD_LOGIC;
    signal tmp_23_reg_3438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal tmp_97_reg_3454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal plt1_load_reg_3481 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3487 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_3492 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2396_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_106_reg_3497 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_125_fu_2499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_reg_3502 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal tmp_107_fu_2556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_reg_3507 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_cast1_fu_2614_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_159_cast1_reg_3511 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal i_6_fu_2713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_3521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_26_reg_3531 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_27_fu_2738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_3536 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ph1_load_reg_3552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3558 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_763_ap_start : STD_LOGIC;
    signal grp_filtez_fu_763_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_763_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_763_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_763_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_763_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_763_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_763_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_763_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_777_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_777_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_777_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_777_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_777_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_777_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_777_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_777_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_ap_start : STD_LOGIC;
    signal grp_upzero_fu_786_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_786_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_786_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_786_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_786_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_786_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_786_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_786_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_786_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_786_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_786_bli_we0 : STD_LOGIC;
    signal grp_upzero_fu_786_bli_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_786_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_801_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_801_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_801_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_801_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_801_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_801_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_801_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_filtep_fu_809_ap_start : STD_LOGIC;
    signal grp_filtep_fu_809_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_809_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_809_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_ap_start : STD_LOGIC;
    signal grp_filtep_fu_817_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_817_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_817_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_825_ap_start : STD_LOGIC;
    signal grp_quantl_fu_825_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_825_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_837_ap_start : STD_LOGIC;
    signal grp_logscl_fu_837_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_837_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_837_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_837_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_845_ap_start : STD_LOGIC;
    signal grp_logsch_fu_845_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_845_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_845_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_853_ap_start : STD_LOGIC;
    signal grp_scalel_fu_853_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_853_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_853_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_853_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_853_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_i1_reg_611 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_623 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ad_ptr_0_rec_i_i_reg_635 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_reg_646 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_0_i_i_reg_657 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa1_0_i_i_reg_667 : STD_LOGIC_VECTOR (49 downto 0);
    signal ad_ptr_1_rec_i_i_reg_677 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal i_1_i_i4_reg_688 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_rec_i_i_reg_699 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_710 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_721 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_731 : STD_LOGIC_VECTOR (49 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_741 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal i_1_i_i_reg_752 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_filtez_fu_763_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_777_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_upzero_fu_786_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_801_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_reg_grp_filtep_fu_809_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_817_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_825_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_837_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_845_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_853_ap_start : STD_LOGIC := '0';
    signal tmp_45_fu_1193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_1237_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_1743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_1748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_1772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_1933_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_1951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_1969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_1985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_2017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_fu_2348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_110_fu_2630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_cast_cast_ca_fu_2507_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_164_cast_cast_ca_fu_2617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext1_fu_1655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_ext_fu_1635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc45_ext_fu_1606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_142_ext_fu_2413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_ext_fu_1499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc2_ext_fu_1616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_ext_fu_1536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc46_ext_fu_1665_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_ext_fu_1645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_2590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc3_ext_fu_2572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_ext_fu_2474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext_fu_2562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_ext_fu_2464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_98_fu_2402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp_117_fu_2838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc4_ext_fu_2820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_ext_fu_2800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2488_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc44_ext_fu_2810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_170_ext_fu_2790_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_2747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr3_fu_1062_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t3_fu_1072_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_877_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_36_fu_1078_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg2_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr2_fu_1100_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t2_fu_1110_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_fu_1116_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg1_fu_1145_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_1151_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_12_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1171_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_43_fu_1137_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1185_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1207_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1263_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_1281_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1290_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1629_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_fu_1707_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_1718_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_1714_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_1725_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_1729_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1629_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_1766_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_129_cast_fu_1810_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_132_cast_fu_1819_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1832_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_118_fu_1838_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_120_cast_fu_1846_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_shl7_fu_1855_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_1867_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_1863_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_1875_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_82_fu_1879_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_124_fu_1842_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_122_cast_fu_1885_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_1849_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_1_fu_1889_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ac_ptr_0_sum_i_i_fu_1927_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_0_sum7_i_i_fu_1945_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_122_fu_1979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2000_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_41_fu_2011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_2022_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_2034_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_2030_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_2042_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_2046_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_2000_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2078_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_115_cast_fu_2123_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_118_cast_fu_2132_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_2145_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_76_fu_2155_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_110_cast_fu_2159_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl5_fu_2168_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2180_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2176_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2188_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_78_fu_2192_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_75_fu_2151_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_112_cast_fu_2198_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_sum_i_i_fu_2208_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr_0_sum_i_i_fu_2225_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_87_fu_2248_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_89_fu_2268_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_21_fu_2338_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2366_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_2396_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_2521_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_126_fu_2534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2548_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_2639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2666_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_22_fu_2676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_2686_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_128_fu_2652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_2696_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_fu_2700_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2723_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_38_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1281_ce : STD_LOGIC;
    signal grp_fu_1290_ce : STD_LOGIC;
    signal grp_fu_1629_ce : STD_LOGIC;
    signal grp_fu_2396_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (76 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_we0 : OUT STD_LOGIC;
        bli_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_14tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_16udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_7svdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component Block_proc_dec_deibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_dec_dejbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq6_colbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq2_coocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Block_proc_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Block_proc_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dec_del_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        we0 => dec_del_bpl_we0,
        d0 => grp_upzero_fu_786_bli_d0,
        q0 => dec_del_bpl_q0);

    dec_del_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_786_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_786_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_786_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq4_code4_table_U : component Block_proc_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component Block_proc_qq6_colbW
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        we0 => dec_del_bph_we0,
        d0 => grp_upzero_fu_786_bli_d0,
        q0 => dec_del_bph_q0);

    dec_del_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_786_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_786_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_786_dlti_d1,
        q1 => dec_del_dhx_q1);

    qq2_code2_table_U : component Block_proc_qq2_coocq
    generic map (
        DataWidth => 14,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq2_code2_table_address0,
        ce0 => qq2_code2_table_ce0,
        q0 => qq2_code2_table_q0);

    tqmf_U : component Block_proc_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => test_data_load_1_reg_3248,
        q0 => tqmf_q0,
        address1 => tqmf_address1,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => tqmf_d1,
        q1 => tqmf_q1);

    h_U : component Block_proc_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0,
        address1 => h_address1,
        ce1 => h_ce1,
        q1 => h_q1);

    delay_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        we0 => delay_bpl_we0,
        d0 => grp_upzero_fu_786_bli_d0,
        q0 => delay_bpl_q0);

    delay_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_786_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_786_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_786_dlti_d1,
        q1 => delay_dltx_q1);

    delay_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        we0 => delay_bph_we0,
        d0 => grp_upzero_fu_786_bli_d0,
        q0 => delay_bph_q0);

    delay_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_786_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_786_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_786_dlti_d1,
        q1 => delay_dhx_q1);

    accumc_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        we0 => accumc_we0,
        d0 => accumc_d0,
        q0 => accumc_q0);

    accumd_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        we0 => accumd_we0,
        d0 => accumd_d0,
        q0 => accumd_q0);

    grp_filtez_fu_763 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_763_ap_start,
        ap_done => grp_filtez_fu_763_ap_done,
        ap_idle => grp_filtez_fu_763_ap_idle,
        ap_ready => grp_filtez_fu_763_ap_ready,
        bpl_address0 => grp_filtez_fu_763_bpl_address0,
        bpl_ce0 => grp_filtez_fu_763_bpl_ce0,
        bpl_q0 => grp_filtez_fu_763_bpl_q0,
        dlt_address0 => grp_filtez_fu_763_dlt_address0,
        dlt_ce0 => grp_filtez_fu_763_dlt_ce0,
        dlt_q0 => grp_filtez_fu_763_dlt_q0,
        ap_return => grp_filtez_fu_763_ap_return);

    grp_uppol2_fu_777 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_777_ap_start,
        ap_done => grp_uppol2_fu_777_ap_done,
        ap_idle => grp_uppol2_fu_777_ap_idle,
        ap_ready => grp_uppol2_fu_777_ap_ready,
        al1 => grp_uppol2_fu_777_al1,
        al2 => grp_uppol2_fu_777_al2,
        plt => grp_uppol2_fu_777_plt,
        plt1 => grp_uppol2_fu_777_plt1,
        plt2 => grp_uppol2_fu_777_plt2,
        ap_return => grp_uppol2_fu_777_ap_return);

    grp_upzero_fu_786 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_786_ap_start,
        ap_done => grp_upzero_fu_786_ap_done,
        ap_idle => grp_upzero_fu_786_ap_idle,
        ap_ready => grp_upzero_fu_786_ap_ready,
        dlt => grp_upzero_fu_786_dlt,
        dlti_address0 => grp_upzero_fu_786_dlti_address0,
        dlti_ce0 => grp_upzero_fu_786_dlti_ce0,
        dlti_we0 => grp_upzero_fu_786_dlti_we0,
        dlti_d0 => grp_upzero_fu_786_dlti_d0,
        dlti_q0 => grp_upzero_fu_786_dlti_q0,
        dlti_address1 => grp_upzero_fu_786_dlti_address1,
        dlti_ce1 => grp_upzero_fu_786_dlti_ce1,
        dlti_we1 => grp_upzero_fu_786_dlti_we1,
        dlti_d1 => grp_upzero_fu_786_dlti_d1,
        dlti_q1 => grp_upzero_fu_786_dlti_q1,
        bli_address0 => grp_upzero_fu_786_bli_address0,
        bli_ce0 => grp_upzero_fu_786_bli_ce0,
        bli_we0 => grp_upzero_fu_786_bli_we0,
        bli_d0 => grp_upzero_fu_786_bli_d0,
        bli_q0 => grp_upzero_fu_786_bli_q0);

    grp_uppol1_fu_801 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_801_ap_start,
        ap_done => grp_uppol1_fu_801_ap_done,
        ap_idle => grp_uppol1_fu_801_ap_idle,
        ap_ready => grp_uppol1_fu_801_ap_ready,
        al1 => grp_uppol1_fu_801_al1,
        apl2 => reg_997,
        plt => grp_uppol1_fu_801_plt,
        plt1 => grp_uppol1_fu_801_plt1,
        ap_return => grp_uppol1_fu_801_ap_return);

    grp_filtep_fu_809 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_809_ap_start,
        ap_done => grp_filtep_fu_809_ap_done,
        ap_idle => grp_filtep_fu_809_ap_idle,
        ap_ready => grp_filtep_fu_809_ap_ready,
        rlt1 => grp_filtep_fu_809_rlt1,
        al1 => grp_filtep_fu_809_al1,
        rlt2 => grp_filtep_fu_809_rlt2,
        al2 => grp_filtep_fu_809_al2,
        ap_return => grp_filtep_fu_809_ap_return);

    grp_filtep_fu_817 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_817_ap_start,
        ap_done => grp_filtep_fu_817_ap_done,
        ap_idle => grp_filtep_fu_817_ap_idle,
        ap_ready => grp_filtep_fu_817_ap_ready,
        rlt1 => grp_filtep_fu_817_rlt1,
        al1 => grp_filtep_fu_817_al1,
        rlt2 => grp_filtep_fu_817_rlt2,
        al2 => grp_filtep_fu_817_al2,
        ap_return => grp_filtep_fu_817_ap_return);

    grp_quantl_fu_825 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_825_ap_start,
        ap_done => grp_quantl_fu_825_ap_done,
        ap_idle => grp_quantl_fu_825_ap_idle,
        ap_ready => grp_quantl_fu_825_ap_ready,
        el => tmp_93_reg_3411,
        detl => detl,
        ap_return => grp_quantl_fu_825_ap_return);

    grp_logscl_fu_837 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_837_ap_start,
        ap_done => grp_logscl_fu_837_ap_done,
        ap_idle => grp_logscl_fu_837_ap_idle,
        ap_ready => grp_logscl_fu_837_ap_ready,
        il => grp_logscl_fu_837_il,
        nbl => grp_logscl_fu_837_nbl,
        ap_return => grp_logscl_fu_837_ap_return);

    grp_logsch_fu_845 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_845_ap_start,
        ap_done => grp_logsch_fu_845_ap_done,
        ap_idle => grp_logsch_fu_845_ap_idle,
        ap_ready => grp_logsch_fu_845_ap_ready,
        ih => reg_957,
        nbh => grp_logsch_fu_845_nbh,
        ap_return => grp_logsch_fu_845_ap_return);

    grp_scalel_fu_853 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_853_ap_start,
        ap_done => grp_scalel_fu_853_ap_done,
        ap_idle => grp_scalel_fu_853_ap_idle,
        ap_ready => grp_scalel_fu_853_ap_ready,
        nbl => grp_scalel_fu_853_nbl,
        shift_constant => grp_scalel_fu_853_shift_constant,
        ap_return => grp_scalel_fu_853_ap_return);

    adpcm_main_mul_14tde_U42 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_962,
        din1 => dec_deth,
        ce => ap_const_logic_1,
        dout => grp_fu_1263_p2);

    adpcm_main_mul_16udo_U43 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_966,
        din1 => grp_fu_1281_p1,
        ce => grp_fu_1281_ce,
        dout => grp_fu_1281_p2);

    adpcm_main_mul_16udo_U44 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq6_code6_table_load_reg_2933,
        din1 => grp_fu_1290_p1,
        ce => grp_fu_1290_ce,
        dout => grp_fu_1290_p2);

    adpcm_main_mul_7svdy_U45 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1629_p0,
        din1 => tmp_73_reg_3060,
        ce => grp_fu_1629_ce,
        dout => grp_fu_1629_p2);

    adpcm_main_mul_32wdI_U46 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1002,
        din1 => reg_1006,
        ce => ap_const_logic_1,
        dout => grp_fu_1791_p2);

    adpcm_main_mul_32wdI_U47 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_1_reg_3121,
        din1 => reg_1010,
        ce => ap_const_logic_1,
        dout => grp_fu_1804_p2);

    adpcm_main_mul_7svdy_U48 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1832_p0,
        din1 => reg_1002,
        ce => ap_const_logic_1,
        dout => grp_fu_1832_p2);

    adpcm_main_mul_32xdS_U49 : component adpcm_main_mul_32xdS
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1014,
        din1 => grp_fu_2000_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2000_p2);

    adpcm_main_mul_32wdI_U50 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1014,
        din1 => reg_1006,
        ce => ap_const_logic_1,
        dout => grp_fu_2104_p2);

    adpcm_main_mul_32wdI_U51 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_ptr_load_reg_3296,
        din1 => reg_1010,
        ce => ap_const_logic_1,
        dout => grp_fu_2117_p2);

    adpcm_main_mul_7svdy_U52 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2145_p0,
        din1 => reg_1014,
        ce => ap_const_logic_1,
        dout => grp_fu_2145_p2);

    adpcm_main_mul_32yd2_U53 : component adpcm_main_mul_32yd2
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => detl,
        din1 => reg_966,
        ce => ap_const_logic_1,
        dout => grp_fu_2366_p2);

    adpcm_main_mul_32zec_U54 : component adpcm_main_mul_32zec
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => deth,
        din1 => grp_fu_2396_p1,
        ce => grp_fu_2396_ce,
        dout => grp_fu_2396_p2);

    adpcm_main_mul_14tde_U55 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_962,
        din1 => grp_fu_2723_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2723_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2862) and not((ap_const_lv1_0 = tmp_39_fu_1132_p2))) or (not((ap_const_lv1_0 = tmp_reg_2862)) and not((ap_const_lv1_0 = tmp_38_fu_1198_p2)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_809_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_809_ap_ready)) then 
                    ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_817_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_817_ap_ready)) then 
                    ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_763_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_763_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state55)))) then 
                    ap_reg_grp_filtez_fu_763_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_763_ap_ready)) then 
                    ap_reg_grp_filtez_fu_763_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_845_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_845_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_logsch_fu_845_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_845_ap_ready)) then 
                    ap_reg_grp_logsch_fu_845_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_837_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_837_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)))) then 
                    ap_reg_grp_logscl_fu_837_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_837_ap_ready)) then 
                    ap_reg_grp_logscl_fu_837_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_825_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_825_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_reg_grp_quantl_fu_825_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_825_ap_ready)) then 
                    ap_reg_grp_quantl_fu_825_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_853_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_853_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state65)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)))) then 
                    ap_reg_grp_scalel_fu_853_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_853_ap_ready)) then 
                    ap_reg_grp_scalel_fu_853_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_801_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_801_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state65)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)))) then 
                    ap_reg_grp_uppol1_fu_801_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_801_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_801_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_777_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_777_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_uppol2_fu_777_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_777_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_777_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_786_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_786_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_upzero_fu_786_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_786_ap_ready)) then 
                    ap_reg_grp_upzero_fu_786_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                ad_ptr_0_rec_i_i_reg_635 <= p_rec2_i_i_reg_3106;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                ad_ptr_0_rec_i_i_reg_635 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                ad_ptr_1_rec_i_i_reg_677 <= p_rec_i_i_reg_3196;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                ad_ptr_1_rec_i_i_reg_677 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                h_ptr_0_rec_i_i_reg_646 <= phitmp_i_i3_reg_3116;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                h_ptr_0_rec_i_i_reg_646 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                i_0_i1_reg_611 <= i_7_fu_1990_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1044_p2))) then 
                i_0_i1_reg_611 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                i_0_i_i_reg_710 <= i_reg_3276;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                i_0_i_i_reg_710 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1044_p2)))) then 
                i_0_i_reg_623 <= ap_const_lv32_0;
            elsif ((not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state77))) then 
                i_0_i_reg_623 <= i_6_reg_3521;
            end if; 
        end if;
    end process;

    i_1_i_i4_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                i_1_i_i4_reg_688 <= i_5_reg_3214;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                i_1_i_i4_reg_688 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                i_1_i_i_reg_752 <= i_4_reg_3381;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state51))) then 
                i_1_i_i_reg_752 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66) and not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))) and not((ap_const_lv1_0 = tmp_107_reg_3507)))) then 
                ih <= tmp_164_cast_cast_ca_fu_2617_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
                ih <= tmp_158_cast_cast_ca_fu_2507_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                ih <= tmp_47_fu_1217_p1;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_741_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_741 <= tqmf_ptr1_0_rec_i_i_reg_3368;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state51))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_741 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_699_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                tqmf_ptr_0_rec_i_i_reg_699 <= phitmp_i_i_reg_3291;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                tqmf_ptr_0_rec_i_i_reg_699 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                xa1_0_i_i_reg_667 <= xa1_2_fu_1813_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                xa1_0_i_i_reg_667 <= xa1_cast_fu_1735_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                xa2_0_i_i_reg_657 <= xa2_2_fu_1822_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                xa2_0_i_i_reg_657 <= xa2_cast_fu_1739_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_721_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                xa_0_i_i_reg_721 <= xa_2_fu_2126_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                xa_0_i_i_reg_721 <= xa_cast_fu_2052_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                xb_0_i_i_reg_731 <= xb_2_fu_2135_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                xb_0_i_i_reg_731 <= xb_cast_fu_2056_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31))) then
                accumc_addr_1_reg_3186 <= ac_ptr_0_sum_i_i_cas_fu_1933_p1(4 - 1 downto 0);
                accumd_addr_1_reg_3191 <= ac_ptr_0_sum_i_i_cas_fu_1933_p1(4 - 1 downto 0);
                i_5_reg_3214 <= i_5_fu_1963_p2;
                p_rec_i_i_reg_3196 <= p_rec_i_i_fu_1939_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                accumd_load_1_reg_3121 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state77))) then
                ah1 <= p_trunc4_ext_fu_2820_p1;
                    deth(14 downto 0) <= p_trunc44_ext_fu_2810_p1(14 downto 0);
                rh1 <= tmp_117_fu_2838_p2;
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then
                ah2 <= tmp_173_ext_fu_2800_p1;
                    nbh(14 downto 0) <= tmp_170_ext_fu_2790_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66) and not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))))) then
                al1 <= p_trunc3_ext_fu_2572_p1;
                    detl(14 downto 0) <= p_trunc_ext_fu_2562_p1(14 downto 0);
                rlt1 <= tmp_103_fu_2590_p2;
                rlt2 <= rlt1;
                    tmp_159_cast1_reg_3511(14 downto 0) <= tmp_159_cast1_fu_2614_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then
                al2 <= tmp_152_ext_fu_2474_p1;
                    nbl(14 downto 0) <= tmp_149_ext_fu_2464_p1(14 downto 0);
                tmp_107_reg_3507 <= tmp_107_fu_2556_p2;
                tmp_125_reg_3502 <= n_assign_fu_2488_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done) or (ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))))) then
                dec_ah1 <= p_trunc2_ext_fu_1616_p1;
                    dec_detl(14 downto 0) <= p_trunc45_ext_fu_1606_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                dec_ah2 <= tmp_102_ext_fu_1536_p1;
                    dec_nbl(14 downto 0) <= tmp_85_ext_fu_1499_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_3049 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_3055 <= dec_plt2;
                dec_rh1 <= tmp_72_fu_1554_p2;
                dec_rh2 <= dec_rh1;
                tmp_73_reg_3060 <= tmp_73_fu_1582_p2;
                tmp_74_reg_3066 <= tmp_74_fu_1588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state16))) then
                dec_al1 <= p_trunc_ext1_fu_1655_p1;
                    dec_deth(14 downto 0) <= p_trunc46_ext_fu_1665_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                dec_al2 <= tmp_88_ext_fu_1635_p1;
                    dec_nbh(14 downto 0) <= tmp_99_ext_fu_1645_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_763_ap_done)))) then
                dec_dh <= tmp_11_fu_1312_p1;
                dec_ph <= tmp_67_fu_1315_p2;
                tmp_11_reg_2959 <= tmp_11_fu_1312_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                dec_dlt <= grp_fu_1281_p2(46 downto 15);
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_3032 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_3038 <= dec_ph2;
                tmp_52_reg_2974 <= grp_fu_1281_p2(46 downto 15);
                tmp_56_reg_2980 <= grp_fu_1290_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done))))) then
                dec_plt <= tmp_53_fu_1459_p2;
                dec_sh <= tmp_64_fu_1481_p2;
                dec_sl <= grp_fu_917_p2;
                rl <= tmp_57_fu_1464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                dec_rlt1 <= tmp_62_fu_1683_p2;
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state73))) then
                dh <= tmp_27_fu_2738_p1;
                ph <= tmp_114_fu_2747_p2;
                tmp_27_reg_3536 <= tmp_27_fu_2738_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then
                dlt <= grp_fu_2366_p2(46 downto 15);
                tmp_97_reg_3454 <= grp_fu_2366_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52))) then
                i_4_reg_3381 <= i_4_fu_2242_p2;
                tqmf_addr_2_reg_3363 <= p_sum_i_i_cast_fu_2214_p1(5 - 1 downto 0);
                tqmf_ptr1_0_rec_i_i_reg_3368 <= tqmf_ptr1_0_rec_i_i_fu_2219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then
                i_6_reg_3521 <= i_6_fu_2713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then
                i_reg_3276 <= i_fu_2072_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state63))) then
                    il(5 downto 0) <= tmp_142_ext_fu_2413_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3481 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3487 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                p_rec2_i_i_reg_3106 <= p_rec2_i_i_fu_1760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state74))) then
                ph1 <= ph;
                ph1_load_reg_3552 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3558 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1754_p2))) then
                phitmp_i_i3_reg_3116 <= phitmp_i_i3_fu_1777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2))) then
                phitmp_i_i_reg_3291 <= phitmp_i_i_fu_2090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then
                plt <= tmp_98_fu_2402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                qq6_code6_table_load_reg_2933 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then
                reg_1002 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then
                reg_1006 <= h_q0;
                reg_1010 <= h_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)))) then
                reg_1014 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state63)))) then
                reg_1018 <= al1;
                reg_1025 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then
                reg_1031 <= ah1;
                reg_1038 <= ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then
                reg_957 <= ih;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then
                reg_962 <= qq2_code2_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)))) then
                reg_966 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_763_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state54) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done)))))) then
                reg_970 <= grp_filtez_fu_763_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then
                reg_974 <= dec_al1;
                reg_981 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))))) then
                reg_987 <= grp_logscl_fu_837_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state75) and not(((ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))))) then
                reg_992 <= grp_logsch_fu_845_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state75) and not(((ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done) or (ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))))) then
                reg_997 <= grp_uppol2_fu_777_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done))))) then
                sh <= tmp_105_fu_2454_p2;
                tmp_105_reg_3492 <= tmp_105_fu_2454_p2;
                tmp_106_reg_3497 <= grp_fu_2396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done))))) then
                sl <= grp_fu_917_p2;
                tmp_104_reg_3416 <= grp_filtep_fu_817_ap_return;
                tmp_93_reg_3411 <= tmp_93_fu_2304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state38))) then
                test_data_load_1_reg_3248 <= test_data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state37))) then
                test_data_load_reg_3238 <= test_data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then
                tmp_109_reg_3219 <= tmp_109_fu_1974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state9))) then
                tmp_10_reg_2954 <= grp_fu_1263_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                tmp_18_reg_2903 <= compressed_q0(5 downto 2);
                tmp_46_reg_2897 <= tmp_46_fu_1203_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_quantl_fu_825_ap_done))))) then
                tmp_23_reg_3438 <= grp_filtez_fu_763_ap_return;
                tmp_94_reg_3427 <= grp_quantl_fu_825_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state72))) then
                tmp_26_reg_3531 <= grp_fu_2723_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1044_p2)))) then
                    tmp_32_reg_2881(31 downto 1) <= tmp_32_fu_1124_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1044_p2))) then
                    tmp_37_reg_2876(31 downto 1) <= tmp_37_fu_1086_p3(31 downto 1);
                tmp_s_reg_2866 <= tmp_s_fu_1050_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state50))) then
                tmp_77_reg_3346 <= grp_fu_2145_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then
                tmp_79_reg_3321 <= grp_fu_2104_p2;
                tmp_80_reg_3326 <= grp_fu_2117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then
                tmp_81_reg_3171 <= grp_fu_1832_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then
                tmp_83_reg_3176 <= xa1_1_fu_1849_p2(45 downto 14);
                tmp_84_reg_3181 <= xa2_1_fu_1889_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then
                tmp_85_reg_3146 <= grp_fu_1791_p2;
                tmp_86_reg_3151 <= grp_fu_1804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0)))) then
                tmp_88_reg_3386 <= tmp_87_fu_2248_p2(46 downto 15);
                xh <= tmp_89_fu_2268_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then
                tmp_reg_2862 <= tmp_fu_1044_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tqmf_ptr_load_reg_3296 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state51))) then
                xa_1_reg_3351 <= xa_1_fu_2162_p2;
                xb_1_reg_3357 <= xb_1_fu_2202_p2;
            end if;
        end if;
    end process;
    dec_detl(31 downto 15) <= "00000000000000000";
    il(31 downto 6) <= "00000000000000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    detl(31 downto 15) <= "00000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    tmp_37_reg_2876(0) <= '0';
    tmp_32_reg_2881(0) <= '0';
    tmp_159_cast1_reg_3511(44 downto 15) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, grp_filtez_fu_763_ap_done, grp_filtep_fu_809_ap_done, grp_filtep_fu_817_ap_done, grp_logscl_fu_837_ap_done, grp_logsch_fu_845_ap_done, grp_upzero_fu_786_ap_done, grp_uppol2_fu_777_ap_done, grp_scalel_fu_853_ap_done, grp_uppol1_fu_801_ap_done, exitcond_i_i_fu_2236_p2, tmp_reg_2862, tmp_39_fu_1132_p2, exitcond_fu_1754_p2, exitcond_i_i5_fu_1957_p2, exitcond2_i_i_fu_2066_p2, grp_quantl_fu_825_ap_done, tmp_38_fu_1198_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((((ap_const_lv1_0 = tmp_reg_2862) and not((ap_const_lv1_0 = tmp_39_fu_1132_p2))) or (not((ap_const_lv1_0 = tmp_reg_2862)) and not((ap_const_lv1_0 = tmp_38_fu_1198_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((ap_const_lv1_0 = tmp_reg_2862)) and (ap_const_lv1_0 = tmp_38_fu_1198_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (not((ap_const_logic_0 = grp_filtez_fu_763_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done) or (ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1754_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (not((ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state54 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_quantl_fu_825_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_1933_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_fu_1927_p2),64));
    ac_ptr_0_sum_i_i_fu_1927_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_677) + unsigned(ap_const_lv5_A));

    accumc_address0_assign_proc : process(ap_CS_fsm_state18, exitcond_fu_1754_p2, accumc_addr_1_reg_3186, ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32, ad_ptr_0_rec_i_i_cas_fu_1748_p1, ad_ptr_0_sum7_i_i_ca_fu_1951_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumc_address0 <= accumc_addr_1_reg_3186;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1951_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18) and not((ap_const_lv1_0 = exitcond_fu_1754_p2)))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1754_p2))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_1748_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_state18, exitcond_fu_1754_p2, ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1754_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not((ap_const_lv1_0 = exitcond_fu_1754_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, tmp_74_reg_3066, ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumc_d0 <= accumc_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumc_d0 <= tmp_74_reg_3066;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state32)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state29, ap_CS_fsm_state31, accumd_addr_1_reg_3191, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32, ad_ptr_0_rec_i_i_cas_fu_1748_p1, ad_ptr_0_sum7_i_i_ca_fu_1951_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumd_address0 <= accumd_addr_1_reg_3191;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1951_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_1748_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state29, ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, tmp_73_reg_3060, ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumd_d0 <= accumd_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2)))) then 
            accumd_d0 <= tmp_73_reg_3060;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state31, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state32)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state32)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_1748_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_reg_635),64));
    ad_ptr_0_sum7_i_i_ca_fu_1951_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_fu_1945_p2),64));
    ad_ptr_0_sum7_i_i_fu_1945_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_677) + unsigned(ap_const_lv5_9));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state44 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state72 <= ap_CS_fsm(71 downto 71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72 downto 72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75 downto 75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76 downto 76);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_done_reg, tmp_reg_2862, ap_CS_fsm_state2, tmp_39_fu_1132_p2, tmp_38_fu_1198_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2862) and not((ap_const_lv1_0 = tmp_39_fu_1132_p2))) or (not((ap_const_lv1_0 = tmp_reg_2862)) and not((ap_const_lv1_0 = tmp_38_fu_1198_p2))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_2862, ap_CS_fsm_state2, tmp_39_fu_1132_p2, tmp_38_fu_1198_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2862) and not((ap_const_lv1_0 = tmp_39_fu_1132_p2))) or (not((ap_const_lv1_0 = tmp_reg_2862)) and not((ap_const_lv1_0 = tmp_38_fu_1198_p2)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    compressed_address0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state2, tmp_45_fu_1193_p1, tmp_121_fu_2708_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            compressed_address0 <= tmp_121_fu_2708_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            compressed_address0 <= tmp_45_fu_1193_p1(2 - 1 downto 0);
        else 
            compressed_address0 <= "XX";
        end if; 
    end process;


    compressed_ce0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state67)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)))) then 
            compressed_ce0 <= ap_const_logic_1;
        else 
            compressed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    compressed_d0 <= (il or tmp_127_fu_2639_p2);

    compressed_we0_assign_proc : process(ap_CS_fsm_state67)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            compressed_we0 <= ap_const_logic_1;
        else 
            compressed_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_763_bpl_address0, grp_upzero_fu_786_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_address0 <= grp_upzero_fu_786_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_address0 <= grp_filtez_fu_763_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_763_bpl_ce0, grp_upzero_fu_786_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_786_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_763_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_786_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_we0 <= grp_upzero_fu_786_bli_we0;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_763_bpl_address0, grp_upzero_fu_786_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_786_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_763_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_763_bpl_ce0, grp_upzero_fu_786_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_786_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_763_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_786_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_we0 <= grp_upzero_fu_786_bli_we0;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_763_dlt_address0, grp_upzero_fu_786_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_786_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_763_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_763_dlt_ce0, grp_upzero_fu_786_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_786_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_763_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_786_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_786_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_786_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_786_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_786_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_786_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_763_dlt_address0, grp_upzero_fu_786_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_786_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_763_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_763_dlt_ce0, grp_upzero_fu_786_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_786_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_763_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_786_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_786_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_786_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_786_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_786_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_786_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_address0_assign_proc : process(ap_CS_fsm_state31, tmp_109_reg_3219, ap_CS_fsm_state33, tmp_108_fu_1969_p1, tmp_123_fu_1985_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33) and not((ap_const_lv1_0 = tmp_109_reg_3219)))) then 
            dec_result_address0 <= tmp_123_fu_1985_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state33) and (ap_const_lv1_0 = tmp_109_reg_3219))) then 
            dec_result_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
            dec_result_address0 <= tmp_108_fu_1969_p1(2 - 1 downto 0);
        else 
            dec_result_address0 <= "XX";
        end if; 
    end process;


    dec_result_ce0_assign_proc : process(ap_CS_fsm_state31, tmp_109_reg_3219, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not((ap_const_lv1_0 = tmp_109_reg_3219))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and (ap_const_lv1_0 = tmp_109_reg_3219)))) then 
            dec_result_ce0 <= ap_const_logic_1;
        else 
            dec_result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_d0_assign_proc : process(tmp_83_reg_3176, tmp_84_reg_3181, ap_CS_fsm_state31, tmp_109_reg_3219, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state33) and not((ap_const_lv1_0 = tmp_109_reg_3219))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and (ap_const_lv1_0 = tmp_109_reg_3219)))) then 
            dec_result_d0 <= tmp_84_reg_3181;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
            dec_result_d0 <= tmp_83_reg_3176;
        else 
            dec_result_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_we0_assign_proc : process(ap_CS_fsm_state31, tmp_109_reg_3219, exitcond_i_i5_fu_1957_p2, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1957_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not((ap_const_lv1_0 = tmp_109_reg_3219))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and (ap_const_lv1_0 = tmp_109_reg_3219)))) then 
            dec_result_we0 <= ap_const_logic_1;
        else 
            dec_result_we0 <= ap_const_logic_0;
        end if; 
    end process;

        decis_fu_2530_p1 <= std_logic_vector(resize(signed(tmp_13_fu_2521_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_763_bpl_address0, grp_upzero_fu_786_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_address0 <= grp_upzero_fu_786_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_bph_address0 <= grp_filtez_fu_763_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_763_bpl_ce0, grp_upzero_fu_786_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_ce0 <= grp_upzero_fu_786_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_bph_ce0 <= grp_filtez_fu_763_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we0_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_786_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_we0 <= grp_upzero_fu_786_bli_we0;
        else 
            delay_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_763_bpl_address0, grp_upzero_fu_786_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_address0 <= grp_upzero_fu_786_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_bpl_address0 <= grp_filtez_fu_763_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_763_bpl_ce0, grp_upzero_fu_786_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_ce0 <= grp_upzero_fu_786_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_bpl_ce0 <= grp_filtez_fu_763_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we0_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_786_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_we0 <= grp_upzero_fu_786_bli_we0;
        else 
            delay_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_763_dlt_address0, grp_upzero_fu_786_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_address0 <= grp_upzero_fu_786_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_dhx_address0 <= grp_filtez_fu_763_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_763_dlt_ce0, grp_upzero_fu_786_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_ce0 <= grp_upzero_fu_786_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_dhx_ce0 <= grp_filtez_fu_763_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_786_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_ce1 <= grp_upzero_fu_786_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_786_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_we0 <= grp_upzero_fu_786_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_786_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_we1 <= grp_upzero_fu_786_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_763_dlt_address0, grp_upzero_fu_786_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_address0 <= grp_upzero_fu_786_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_dltx_address0 <= grp_filtez_fu_763_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_763_dlt_ce0, grp_upzero_fu_786_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_ce0 <= grp_upzero_fu_786_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_dltx_ce0 <= grp_filtez_fu_763_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_786_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_ce1 <= grp_upzero_fu_786_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_786_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_we0 <= grp_upzero_fu_786_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_786_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_we1 <= grp_upzero_fu_786_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_i_i_fu_2066_p2 <= "1" when (i_0_i_i_reg_710 = ap_const_lv4_A) else "0";
    exitcond_fu_1754_p2 <= "1" when (ad_ptr_0_rec_i_i_reg_635 = ap_const_lv4_A) else "0";
    exitcond_i_i5_fu_1957_p2 <= "1" when (i_1_i_i4_reg_688 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_2236_p2 <= "1" when (i_1_i_i_reg_752 = ap_const_lv5_16) else "0";

    grp_filtep_fu_809_al1_assign_proc : process(ap_CS_fsm_state54, reg_974, ap_CS_fsm_state12, reg_1018)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_al1 <= reg_1018;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_al1 <= reg_974;
        else 
            grp_filtep_fu_809_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_809_al2_assign_proc : process(ap_CS_fsm_state54, reg_981, ap_CS_fsm_state12, reg_1025)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_al2 <= reg_1025;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_al2 <= reg_981;
        else 
            grp_filtep_fu_809_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_809_ap_start <= ap_reg_grp_filtep_fu_809_ap_start;

    grp_filtep_fu_809_rlt1_assign_proc : process(dec_rlt1, rlt1, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_809_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_809_rlt2_assign_proc : process(dec_rlt2, rlt2, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_809_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_817_al1_assign_proc : process(dec_ah1, ap_CS_fsm_state54, ap_CS_fsm_state12, reg_1031)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_817_al1 <= reg_1031;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_817_al1 <= dec_ah1;
        else 
            grp_filtep_fu_817_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_817_al2_assign_proc : process(dec_ah2, ap_CS_fsm_state54, ap_CS_fsm_state12, reg_1038)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_817_al2 <= reg_1038;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_817_al2 <= dec_ah2;
        else 
            grp_filtep_fu_817_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_817_ap_start <= ap_reg_grp_filtep_fu_817_ap_start;

    grp_filtep_fu_817_rlt1_assign_proc : process(dec_rh1, rh1, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_817_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_817_rlt1 <= dec_rh1;
        else 
            grp_filtep_fu_817_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_817_rlt2_assign_proc : process(dec_rh2, rh2, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_817_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_817_rlt2 <= dec_rh2;
        else 
            grp_filtep_fu_817_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_763_ap_start <= ap_reg_grp_filtez_fu_763_ap_start;

    grp_filtez_fu_763_bpl_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state10, ap_CS_fsm_state54, ap_CS_fsm_state12, ap_CS_fsm_state56)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            grp_filtez_fu_763_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtez_fu_763_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtez_fu_763_bpl_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_763_bpl_q0 <= dec_del_bph_q0;
        else 
            grp_filtez_fu_763_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_763_dlt_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state10, ap_CS_fsm_state54, ap_CS_fsm_state12, ap_CS_fsm_state56)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            grp_filtez_fu_763_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtez_fu_763_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtez_fu_763_dlt_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_763_dlt_q0 <= dec_del_dhx_q0;
        else 
            grp_filtez_fu_763_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1281_ce_assign_proc : process(ap_CS_fsm_state10, grp_filtez_fu_763_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_763_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state11) or (ap_const_lv1_1 = ap_CS_fsm_state8) or (ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_fu_1281_ce <= ap_const_logic_1;
        else 
            grp_fu_1281_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1281_p1 <= tmp_73_cast_fu_1273_p1(32 - 1 downto 0);

    grp_fu_1290_ce_assign_proc : process(ap_CS_fsm_state10, grp_filtez_fu_763_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_763_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state11) or (ap_const_lv1_1 = ap_CS_fsm_state8) or (ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_fu_1290_ce <= ap_const_logic_1;
        else 
            grp_fu_1290_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1290_p1 <= tmp_73_cast_fu_1273_p1(32 - 1 downto 0);

    grp_fu_1629_ce_assign_proc : process(grp_upzero_fu_786_ap_done, grp_uppol2_fu_777_ap_done, ap_CS_fsm_state14, grp_scalel_fu_853_ap_done, grp_uppol1_fu_801_ap_done, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done) or (ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state17) or (ap_const_lv1_1 = ap_CS_fsm_state15) or (not(((ap_const_logic_0 = grp_scalel_fu_853_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_801_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_fu_1629_ce <= ap_const_logic_1;
        else 
            grp_fu_1629_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1629_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_1832_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2000_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2145_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);

    grp_fu_2396_ce_assign_proc : process(grp_logscl_fu_837_ap_done, grp_upzero_fu_786_ap_done, grp_uppol2_fu_777_ap_done, ap_CS_fsm_state64, ap_CS_fsm_state63, ap_CS_fsm_state61, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_786_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_777_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state63) or (ap_const_lv1_1 = ap_CS_fsm_state61) or (ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            grp_fu_2396_ce <= ap_const_logic_1;
        else 
            grp_fu_2396_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2396_p1 <= ap_const_lv43_234(11 - 1 downto 0);
    grp_fu_2723_p1 <= tmp_159_cast1_reg_3511(32 - 1 downto 0);
    grp_fu_863_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_1));
    grp_fu_869_p3 <= grp_fu_863_p2(31 downto 31);
    grp_fu_877_p4 <= grp_fu_863_p2(31 downto 1);
    grp_fu_917_p2 <= std_logic_vector(unsigned(grp_filtep_fu_809_ap_return) + unsigned(grp_filtez_fu_763_ap_return));
    grp_logsch_fu_845_ap_start <= ap_reg_grp_logsch_fu_845_ap_start;

    grp_logsch_fu_845_nbh_assign_proc : process(dec_nbh, nbh, ap_CS_fsm_state12, ap_CS_fsm_state75)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_logsch_fu_845_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logsch_fu_845_nbh <= dec_nbh;
        else 
            grp_logsch_fu_845_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_837_ap_start <= ap_reg_grp_logscl_fu_837_ap_start;

    grp_logscl_fu_837_il_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, tmp_46_reg_2897, tmp_94_reg_3427)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_logscl_fu_837_il <= tmp_94_reg_3427;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logscl_fu_837_il <= tmp_46_reg_2897;
        else 
            grp_logscl_fu_837_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_837_nbl_assign_proc : process(dec_nbl, nbl, ap_CS_fsm_state12, ap_CS_fsm_state64)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_logscl_fu_837_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logscl_fu_837_nbl <= dec_nbl;
        else 
            grp_logscl_fu_837_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_825_ap_start <= ap_reg_grp_quantl_fu_825_ap_start;
    grp_scalel_fu_853_ap_start <= ap_reg_grp_scalel_fu_853_ap_start;

    grp_scalel_fu_853_nbl_assign_proc : process(reg_987, reg_992, ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state77)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_853_nbl <= reg_992;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)))) then 
            grp_scalel_fu_853_nbl <= reg_987;
        else 
            grp_scalel_fu_853_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_853_shift_constant_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state77)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_853_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)))) then 
            grp_scalel_fu_853_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_853_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_801_al1_assign_proc : process(dec_ah1, reg_974, ap_CS_fsm_state14, reg_1018, reg_1031, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_801_al1 <= reg_1031;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_801_al1 <= reg_1018;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_801_al1 <= reg_974;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_801_al1 <= dec_ah1;
        else 
            grp_uppol1_fu_801_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_801_ap_start <= ap_reg_grp_uppol1_fu_801_ap_start;

    grp_uppol1_fu_801_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_801_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_801_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_801_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_801_plt <= dec_ph;
        else 
            grp_uppol1_fu_801_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_801_plt1_assign_proc : process(ap_CS_fsm_state14, dec_ph1_load_reg_3032, dec_plt1_load_reg_3049, plt1_load_reg_3481, ap_CS_fsm_state66, ph1_load_reg_3552, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_801_plt1 <= ph1_load_reg_3552;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_801_plt1 <= plt1_load_reg_3481;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_801_plt1 <= dec_plt1_load_reg_3049;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_801_plt1 <= dec_ph1_load_reg_3032;
        else 
            grp_uppol1_fu_801_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_777_al1_assign_proc : process(dec_ah1, reg_974, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, reg_1018, reg_1031)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_777_al1 <= reg_1031;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_777_al1 <= reg_1018;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_777_al1 <= reg_974;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_777_al1 <= dec_ah1;
        else 
            grp_uppol2_fu_777_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_777_al2_assign_proc : process(dec_ah2, reg_981, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, reg_1025, reg_1038)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_777_al2 <= reg_1038;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_777_al2 <= reg_1025;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_777_al2 <= reg_981;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_777_al2 <= dec_ah2;
        else 
            grp_uppol2_fu_777_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_777_ap_start <= ap_reg_grp_uppol2_fu_777_ap_start;

    grp_uppol2_fu_777_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_777_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_777_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_777_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_777_plt <= dec_ph;
        else 
            grp_uppol2_fu_777_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_777_plt1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, dec_ph1_load_reg_3032, dec_plt1_load_reg_3049, plt1_load_reg_3481, ph1_load_reg_3552)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_777_plt1 <= ph1_load_reg_3552;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_777_plt1 <= plt1_load_reg_3481;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_777_plt1 <= dec_plt1_load_reg_3049;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_777_plt1 <= dec_ph1_load_reg_3032;
        else 
            grp_uppol2_fu_777_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_777_plt2_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, dec_ph2_load_reg_3038, dec_plt2_load_reg_3055, plt2_load_reg_3487, ph2_load_reg_3558)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_777_plt2 <= ph2_load_reg_3558;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_777_plt2 <= plt2_load_reg_3487;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_777_plt2 <= dec_plt2_load_reg_3055;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_777_plt2 <= dec_ph2_load_reg_3038;
        else 
            grp_uppol2_fu_777_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_786_ap_start <= ap_reg_grp_upzero_fu_786_ap_start;

    grp_upzero_fu_786_bli_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_786_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_786_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_786_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_786_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_786_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_786_dlt_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, tmp_11_reg_2959, tmp_52_reg_2974, tmp_97_reg_3454, tmp_27_reg_3536)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_786_dlt <= tmp_27_reg_3536;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_786_dlt <= tmp_97_reg_3454;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_786_dlt <= tmp_52_reg_2974;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_786_dlt <= tmp_11_reg_2959;
        else 
            grp_upzero_fu_786_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_786_dlti_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_786_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_786_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_786_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_786_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_786_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_786_dlti_q1_assign_proc : process(dec_del_dltx_q1, dec_del_dhx_q1, delay_dltx_q1, delay_dhx_q1, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_786_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_786_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_786_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_786_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_786_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39, h_ptr_0_rec_i_i_cast_fu_1743_p1, tqmf_ptr_0_rec_i_i_c_fu_2060_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2060_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_1743_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_address1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39, h_ptr_0_sum9_i_i_cas_fu_1772_p1, tqmf_ptr_0_sum67_i_i_1_fu_2084_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            h_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2084_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            h_address1 <= h_ptr_0_sum9_i_i_cas_fu_1772_p1(5 - 1 downto 0);
        else 
            h_address1 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_1743_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_reg_646),64));
    h_ptr_0_sum9_i_i_cas_fu_1772_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_1766_p2),64));
    h_ptr_0_sum9_i_i_fu_1766_p2 <= (h_ptr_0_rec_i_i_reg_646 or ap_const_lv5_1);
    i_4_fu_2242_p2 <= std_logic_vector(unsigned(i_1_i_i_reg_752) + unsigned(ap_const_lv5_1));
    i_5_fu_1963_p2 <= std_logic_vector(unsigned(i_1_i_i4_reg_688) + unsigned(ap_const_lv4_1));
    i_6_fu_2713_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(i_0_i_reg_623));
    i_7_fu_1990_p2 <= std_logic_vector(unsigned(i_0_i1_reg_611) + unsigned(ap_const_lv32_2));
    i_fu_2072_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_710) + unsigned(ap_const_lv4_1));
    m_fu_2542_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2488_p2));
    n_assign_1_fu_2548_p3 <= 
        m_fu_2542_p2 when (tmp_126_fu_2534_p3(0) = '1') else 
        n_assign_fu_2488_p2;
    n_assign_fu_2488_p2 <= std_logic_vector(unsigned(xh) - unsigned(tmp_105_reg_3492));
    p_lshr1_fu_1151_p4 <= p_neg1_fu_1145_p2(31 downto 1);
    p_lshr2_fu_1100_p4 <= p_neg2_fu_1094_p2(31 downto 1);
    p_lshr3_fu_1062_p4 <= p_neg3_fu_1056_p2(31 downto 1);
    p_lshr_f1_fu_1171_p4 <= i_0_i1_reg_611(31 downto 1);
    p_lshr_f_fu_2686_p4 <= i_0_i_reg_623(31 downto 1);
    p_lshr_fu_2666_p4 <= p_neg_fu_2660_p2(31 downto 1);
    p_neg1_fu_1145_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i1_reg_611));
    p_neg2_fu_1094_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg3_fu_1056_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg_fu_2660_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i_reg_623));
    p_neg_t1_fu_1165_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_12_fu_1161_p1));
    p_neg_t2_fu_1110_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr2_fu_1100_p4));
    p_neg_t3_fu_1072_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr3_fu_1062_p4));
    p_neg_t_fu_2680_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_22_fu_2676_p1));
    p_rec2_i_i_fu_1760_p2 <= std_logic_vector(unsigned(ad_ptr_0_rec_i_i_reg_635) + unsigned(ap_const_lv4_1));
    p_rec_i_i_fu_1939_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_677) + unsigned(ap_const_lv5_1F));
        p_shl2_cast_fu_2042_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2034_p3),37));

    p_shl2_fu_2034_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_1714_p1 <= std_logic_vector(resize(signed(p_shl3_fu_1707_p3),37));

    p_shl3_fu_1707_p3 <= (tmp_74_reg_3066 & ap_const_lv4_0);
        p_shl4_cast_fu_1725_p1 <= std_logic_vector(resize(signed(p_shl4_fu_1718_p3),37));

    p_shl4_fu_1718_p3 <= (tmp_74_reg_3066 & ap_const_lv2_0);
        p_shl5_cast_fu_2176_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2168_p3),37));

    p_shl5_fu_2168_p3 <= (tqmf_q1 & ap_const_lv4_0);
        p_shl6_cast_fu_2188_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2180_p3),37));

    p_shl6_fu_2180_p3 <= (tqmf_q1 & ap_const_lv2_0);
        p_shl7_cast_fu_1863_p1 <= std_logic_vector(resize(signed(p_shl7_fu_1855_p3),37));

    p_shl7_fu_1855_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_1875_p1 <= std_logic_vector(resize(signed(p_shl8_fu_1867_p3),37));

    p_shl8_fu_1867_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_2030_p1 <= std_logic_vector(resize(signed(p_shl_fu_2022_p3),37));

    p_shl_fu_2022_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2214_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_fu_2208_p2),64));
    p_sum_i_i_fu_2208_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_741) + unsigned(ap_const_lv6_17));
        p_trunc2_ext_fu_1616_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_801_ap_return),32));

        p_trunc3_ext_fu_2572_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_801_ap_return),32));

    p_trunc44_ext_fu_2810_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_853_ap_return),32));
    p_trunc45_ext_fu_1606_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_853_ap_return),32));
    p_trunc46_ext_fu_1665_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_853_ap_return),32));
        p_trunc4_ext_fu_2820_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_801_ap_return),32));

        p_trunc_ext1_fu_1655_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_801_ap_return),32));

    p_trunc_ext_fu_2562_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_853_ap_return),32));
    phitmp_i_i3_fu_1777_p2 <= std_logic_vector(unsigned(h_ptr_0_rec_i_i_reg_646) + unsigned(ap_const_lv5_2));
    phitmp_i_i_fu_2090_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_rec_i_i_reg_699) + unsigned(ap_const_lv5_2));

    qq2_code2_table_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state67, tmp_65_fu_1237_p1, tmp_110_fu_2630_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            qq2_code2_table_address0 <= tmp_110_fu_2630_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            qq2_code2_table_address0 <= tmp_65_fu_1237_p1(2 - 1 downto 0);
        else 
            qq2_code2_table_address0 <= "XX";
        end if; 
    end process;


    qq2_code2_table_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state67)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            qq2_code2_table_ce0 <= ap_const_logic_1;
        else 
            qq2_code2_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state56, tmp_50_fu_1242_p1, tmp_95_fu_2348_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            qq4_code4_table_address0 <= tmp_95_fu_2348_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            qq4_code4_table_address0 <= tmp_50_fu_1242_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_763_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state56, grp_quantl_fu_825_ap_done)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_filtez_fu_763_ap_done) or (ap_const_logic_0 = grp_quantl_fu_825_ap_done)))))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_54_fu_1246_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    test_data_address0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, tmp_40_fu_2006_p1, tmp_42_fu_2017_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
            test_data_address0 <= tmp_42_fu_2017_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state36))) then 
            test_data_address0 <= tmp_40_fu_2006_p1(2 - 1 downto 0);
        else 
            test_data_address0 <= "XX";
        end if; 
    end process;


    test_data_ce0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            test_data_ce0 <= ap_const_logic_1;
        else 
            test_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_102_ext_fu_1536_p1 <= std_logic_vector(resize(signed(reg_997),32));

    tmp_103_fu_2590_p2 <= std_logic_vector(unsigned(sl) + unsigned(dlt));
    tmp_105_fu_2454_p2 <= std_logic_vector(unsigned(tmp_104_reg_3416) + unsigned(tmp_23_reg_3438));
    tmp_107_fu_2556_p2 <= "1" when (signed(n_assign_1_fu_2548_p3) > signed(decis_fu_2530_p1)) else "0";
        tmp_108_fu_1969_p1 <= std_logic_vector(resize(signed(i_0_i1_reg_611),64));

    tmp_109_fu_1974_p2 <= "1" when (signed(i_0_i1_reg_611) < signed(tmp_s_reg_2866)) else "0";
        tmp_110_cast_fu_2159_p1 <= std_logic_vector(resize(signed(tmp_77_reg_3346),47));

        tmp_110_fu_2630_p1 <= std_logic_vector(resize(signed(ih),64));

        tmp_112_cast_fu_2198_p1 <= std_logic_vector(resize(signed(tmp_78_fu_2192_p2),47));

    tmp_114_fu_2747_p2 <= std_logic_vector(signed(tmp_27_fu_2738_p1) + signed(tmp_23_reg_3438));
        tmp_115_cast_fu_2123_p1 <= std_logic_vector(resize(signed(tmp_79_reg_3321),50));

    tmp_117_fu_2838_p2 <= std_logic_vector(unsigned(dh) + unsigned(sh));
        tmp_118_cast_fu_2132_p1 <= std_logic_vector(resize(signed(tmp_80_reg_3326),50));

    tmp_118_fu_1838_p1 <= xa1_0_i_i_reg_667(46 - 1 downto 0);
        tmp_11_fu_1312_p1 <= std_logic_vector(resize(signed(tmp_10_reg_2954),32));

        tmp_120_cast_fu_1846_p1 <= std_logic_vector(resize(signed(tmp_81_reg_3171),46));

    tmp_120_fu_2700_p3 <= 
        p_neg_t_fu_2680_p2 when (tmp_128_fu_2652_p3(0) = '1') else 
        tmp_24_fu_2696_p1;
        tmp_121_fu_2708_p1 <= std_logic_vector(resize(signed(tmp_120_fu_2700_p3),64));

        tmp_122_cast_fu_1885_p1 <= std_logic_vector(resize(signed(tmp_82_fu_1879_p2),46));

    tmp_122_fu_1979_p2 <= (i_0_i1_reg_611 or ap_const_lv32_1);
        tmp_123_fu_1985_p1 <= std_logic_vector(resize(signed(tmp_122_fu_1979_p2),64));

    tmp_124_fu_1842_p1 <= xa2_0_i_i_reg_657(46 - 1 downto 0);
    tmp_125_fu_2499_p3 <= n_assign_fu_2488_p2(31 downto 31);
    tmp_126_fu_2534_p3 <= n_assign_fu_2488_p2(31 downto 31);
    tmp_127_fu_2639_p2 <= std_logic_vector(shift_left(unsigned(ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_128_fu_2652_p3 <= i_0_i_reg_623(31 downto 31);
        tmp_129_cast_fu_1810_p1 <= std_logic_vector(resize(signed(tmp_85_reg_3146),50));

    tmp_12_fu_1161_p1 <= std_logic_vector(resize(unsigned(p_lshr1_fu_1151_p4),32));
        tmp_132_cast_fu_1819_p1 <= std_logic_vector(resize(signed(tmp_86_reg_3151),50));

    tmp_13_fu_2521_p4 <= tmp_106_reg_3497(42 downto 12);
    tmp_142_ext_fu_2413_p1 <= std_logic_vector(resize(unsigned(tmp_94_reg_3427),32));
    tmp_149_ext_fu_2464_p1 <= std_logic_vector(resize(unsigned(reg_987),32));
    tmp_14_fu_1181_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1171_p4),32));
        tmp_152_ext_fu_2474_p1 <= std_logic_vector(resize(signed(reg_997),32));

    tmp_158_cast_cast_ca_fu_2507_p3 <= 
        ap_const_lv32_1 when (tmp_125_fu_2499_p3(0) = '1') else 
        ap_const_lv32_3;
        tmp_159_cast1_fu_2614_p1 <= std_logic_vector(resize(signed(deth),45));

    tmp_15_fu_1207_p4 <= compressed_q0(31 downto 6);
    tmp_164_cast_cast_ca_fu_2617_p3 <= 
        ap_const_lv32_0 when (tmp_125_reg_3502(0) = '1') else 
        ap_const_lv32_2;
    tmp_170_ext_fu_2790_p1 <= std_logic_vector(resize(unsigned(reg_992),32));
        tmp_173_ext_fu_2800_p1 <= std_logic_vector(resize(signed(reg_997),32));

    tmp_21_fu_2338_p4 <= grp_quantl_fu_825_ap_return(5 downto 2);
    tmp_22_fu_2676_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2666_p4),32));
    tmp_24_fu_2696_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_2686_p4),32));
        tmp_27_fu_2738_p1 <= std_logic_vector(resize(signed(tmp_26_reg_3531),32));

    tmp_31_fu_1116_p3 <= 
        p_neg_t2_fu_1110_p2 when (grp_fu_869_p3(0) = '1') else 
        grp_fu_877_p4;
    tmp_32_fu_1124_p3 <= (tmp_31_fu_1116_p3 & ap_const_lv1_0);
    tmp_36_fu_1078_p3 <= 
        p_neg_t3_fu_1072_p2 when (grp_fu_869_p3(0) = '1') else 
        grp_fu_877_p4;
    tmp_37_fu_1086_p3 <= (tmp_36_fu_1078_p3 & ap_const_lv1_0);
    tmp_38_fu_1198_p2 <= "1" when (i_0_i_reg_623 = tmp_32_reg_2881) else "0";
    tmp_39_fu_1132_p2 <= "1" when (i_0_i1_reg_611 = tmp_37_reg_2876) else "0";
        tmp_40_fu_2006_p1 <= std_logic_vector(resize(signed(i_0_i_reg_623),64));

    tmp_41_fu_2011_p2 <= (i_0_i_reg_623 or ap_const_lv32_1);
        tmp_42_fu_2017_p1 <= std_logic_vector(resize(signed(tmp_41_fu_2011_p2),64));

    tmp_43_fu_1137_p3 <= i_0_i1_reg_611(31 downto 31);
    tmp_44_fu_1185_p3 <= 
        p_neg_t1_fu_1165_p2 when (tmp_43_fu_1137_p3(0) = '1') else 
        tmp_14_fu_1181_p1;
        tmp_45_fu_1193_p1 <= std_logic_vector(resize(signed(tmp_44_fu_1185_p3),64));

    tmp_46_fu_1203_p1 <= compressed_q0(6 - 1 downto 0);
        tmp_47_fu_1217_p1 <= std_logic_vector(resize(signed(tmp_15_fu_1207_p4),32));

    tmp_50_fu_1242_p1 <= std_logic_vector(resize(unsigned(tmp_18_reg_2903),64));
    tmp_53_fu_1459_p2 <= std_logic_vector(unsigned(tmp_52_reg_2974) + unsigned(grp_filtez_fu_763_ap_return));
        tmp_54_fu_1246_p1 <= std_logic_vector(resize(signed(il),64));

    tmp_57_fu_1464_p2 <= std_logic_vector(unsigned(grp_fu_917_p2) + unsigned(tmp_56_reg_2980));
    tmp_62_fu_1683_p2 <= std_logic_vector(unsigned(dec_sl) + unsigned(dec_dlt));
    tmp_64_fu_1481_p2 <= std_logic_vector(unsigned(grp_filtep_fu_817_ap_return) + unsigned(reg_970));
        tmp_65_fu_1237_p1 <= std_logic_vector(resize(signed(ih),64));

    tmp_67_fu_1315_p2 <= std_logic_vector(signed(tmp_11_fu_1312_p1) + signed(grp_filtez_fu_763_ap_return));
    tmp_72_fu_1554_p2 <= std_logic_vector(unsigned(dec_sh) + unsigned(dec_dh));
        tmp_73_cast_fu_1273_p1 <= std_logic_vector(resize(signed(dec_detl),47));

    tmp_73_fu_1582_p2 <= std_logic_vector(unsigned(tmp_72_fu_1554_p2) + unsigned(rl));
    tmp_74_fu_1588_p2 <= std_logic_vector(unsigned(rl) - unsigned(tmp_72_fu_1554_p2));
    tmp_75_fu_2151_p1 <= xb_0_i_i_reg_731(47 - 1 downto 0);
    tmp_76_fu_2155_p1 <= xa_0_i_i_reg_721(47 - 1 downto 0);
    tmp_78_fu_2192_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2176_p1) - signed(p_shl6_cast_fu_2188_p1));
    tmp_82_fu_1879_p2 <= std_logic_vector(signed(p_shl7_cast_fu_1863_p1) - signed(p_shl8_cast_fu_1875_p1));
    tmp_85_ext_fu_1499_p1 <= std_logic_vector(resize(unsigned(reg_987),32));
    tmp_87_fu_2248_p2 <= std_logic_vector(unsigned(xa_1_reg_3351) + unsigned(xb_1_reg_3357));
        tmp_88_ext_fu_1635_p1 <= std_logic_vector(resize(signed(reg_997),32));

    tmp_89_fu_2268_p2 <= std_logic_vector(unsigned(xa_1_reg_3351) - unsigned(xb_1_reg_3357));
    tmp_93_fu_2304_p2 <= std_logic_vector(unsigned(tmp_88_reg_3386) - unsigned(grp_fu_917_p2));
    tmp_95_fu_2348_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_2338_p4),64));
    tmp_98_fu_2402_p2 <= std_logic_vector(unsigned(tmp_97_reg_3454) + unsigned(reg_970));
    tmp_99_ext_fu_1645_p1 <= std_logic_vector(resize(unsigned(reg_992),32));
    tmp_fu_1044_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";
    tmp_s_fu_1050_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_FFFFFFFF));

    tqmf_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state37, ap_CS_fsm_state39, exitcond2_i_i_fu_2066_p2, tqmf_ptr_0_rec_i_i_c_fu_2060_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2)))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2060_p1(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2236_p2, ap_CS_fsm_state39, ap_CS_fsm_state50, tqmf_addr_2_reg_3363, ap_CS_fsm_state53, tqmf_ptr_0_sum67_i_i_1_fu_2084_p1, tqmf_ptr_0_sum_i_i_c_fu_2231_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            tqmf_address1 <= tqmf_addr_2_reg_3363;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0)))) then 
            tqmf_address1 <= ap_const_lv5_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and (exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) then 
            tqmf_address1 <= tqmf_ptr_0_sum_i_i_c_fu_2231_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state50))) then 
            tqmf_address1 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            tqmf_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2084_p1(5 - 1 downto 0);
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state37, ap_CS_fsm_state39, exitcond2_i_i_fu_2066_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2066_p2))))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2236_p2, ap_CS_fsm_state39, ap_CS_fsm_state50, ap_CS_fsm_state53)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state50)) or ((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and (exitcond_i_i_fu_2236_p2 = ap_const_lv1_0)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d1_assign_proc : process(tqmf_q1, ap_CS_fsm_state52, exitcond_i_i_fu_2236_p2, test_data_load_reg_3238, ap_CS_fsm_state53)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            tqmf_d1 <= tqmf_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0)))) then 
            tqmf_d1 <= test_data_load_reg_3238;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr1_0_rec_i_i_fu_2219_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_741) + unsigned(ap_const_lv6_3F));
    tqmf_ptr_0_rec_i_i_c_fu_2060_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_699),64));
    tqmf_ptr_0_sum67_i_i_1_fu_2084_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2078_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2078_p2 <= (tqmf_ptr_0_rec_i_i_reg_699 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2231_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_fu_2225_p2),64));
    tqmf_ptr_0_sum_i_i_fu_2225_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_741) + unsigned(ap_const_lv6_15));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2236_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2236_p2, ap_CS_fsm_state53)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2236_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state53)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_1849_p2 <= std_logic_vector(unsigned(tmp_118_fu_1838_p1) + unsigned(tmp_120_cast_fu_1846_p1));
    xa1_2_fu_1813_p2 <= std_logic_vector(signed(tmp_129_cast_fu_1810_p1) + signed(xa1_0_i_i_reg_667));
        xa1_cast_fu_1735_p1 <= std_logic_vector(resize(signed(xa1_fu_1729_p2),50));

    xa1_fu_1729_p2 <= std_logic_vector(signed(p_shl3_cast_fu_1714_p1) - signed(p_shl4_cast_fu_1725_p1));
    xa2_1_fu_1889_p2 <= std_logic_vector(unsigned(tmp_124_fu_1842_p1) + unsigned(tmp_122_cast_fu_1885_p1));
    xa2_2_fu_1822_p2 <= std_logic_vector(signed(tmp_132_cast_fu_1819_p1) + signed(xa2_0_i_i_reg_657));
        xa2_cast_fu_1739_p1 <= std_logic_vector(resize(signed(grp_fu_1629_p2),50));

    xa_1_fu_2162_p2 <= std_logic_vector(unsigned(tmp_76_fu_2155_p1) + unsigned(tmp_110_cast_fu_2159_p1));
    xa_2_fu_2126_p2 <= std_logic_vector(signed(tmp_115_cast_fu_2123_p1) + signed(xa_0_i_i_reg_721));
        xa_cast_fu_2052_p1 <= std_logic_vector(resize(signed(xa_fu_2046_p2),50));

    xa_fu_2046_p2 <= std_logic_vector(signed(p_shl_cast_fu_2030_p1) - signed(p_shl2_cast_fu_2042_p1));
    xb_1_fu_2202_p2 <= std_logic_vector(unsigned(tmp_75_fu_2151_p1) + unsigned(tmp_112_cast_fu_2198_p1));
    xb_2_fu_2135_p2 <= std_logic_vector(signed(tmp_118_cast_fu_2132_p1) + signed(xb_0_i_i_reg_731));
        xb_cast_fu_2056_p1 <= std_logic_vector(resize(signed(grp_fu_2000_p2),50));

end behav;
