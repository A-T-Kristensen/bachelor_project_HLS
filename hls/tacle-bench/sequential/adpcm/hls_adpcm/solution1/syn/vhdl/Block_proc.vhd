-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_EN_A : OUT STD_LOGIC;
    dec_result_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    dec_result_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_EN_A : OUT STD_LOGIC;
    test_data_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_data_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_EN_A : OUT STD_LOGIC;
    compressed_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    compressed_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (67 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (67 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (67 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (67 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (67 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (67 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (67 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (67 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (67 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (67 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (67 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dec_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bpl_ce1 : STD_LOGIC;
    signal dec_del_bpl_we1 : STD_LOGIC;
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bph_ce1 : STD_LOGIC;
    signal dec_del_bph_we1 : STD_LOGIC;
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq2_code2_table_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal qq2_code2_table_ce0 : STD_LOGIC;
    signal qq2_code2_table_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal tqmf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce1 : STD_LOGIC;
    signal h_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bpl_ce1 : STD_LOGIC;
    signal delay_bpl_we1 : STD_LOGIC;
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_bph_ce1 : STD_LOGIC;
    signal delay_bph_we1 : STD_LOGIC;
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce1 : STD_LOGIC;
    signal accumc_we1 : STD_LOGIC;
    signal accumc_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce1 : STD_LOGIC;
    signal accumd_we1 : STD_LOGIC;
    signal accumd_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ad_ptr_0_rec_i_i_reg_666 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_reg_677 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_0_i_i_reg_688 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa1_0_i_i_reg_698 : STD_LOGIC_VECTOR (49 downto 0);
    signal ad_ptr_1_rec_i_i_reg_708 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_i_i4_reg_719 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_rec_i_i_reg_730 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_741 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_752 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_762 : STD_LOGIC_VECTOR (49 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_772 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_i_i_reg_783 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_980 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_filtez_fu_794_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_filtez_fu_794_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state59 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal grp_filtep_fu_840_ap_done : STD_LOGIC;
    signal grp_filtep_fu_848_ap_done : STD_LOGIC;
    signal reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logscl_fu_868_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1005 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_logscl_fu_868_ap_done : STD_LOGIC;
    signal grp_logsch_fu_876_ap_done : STD_LOGIC;
    signal grp_upzero_fu_817_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_808_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal grp_logsch_fu_876_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1010 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_uppol2_fu_808_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1015 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_scalel_fu_884_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_832_ap_done : STD_LOGIC;
    signal reg_1020 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_1024 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1028 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal reg_1037 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1050 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2890 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2894 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1105_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_2904 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1143_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_2909 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_reg_2917 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_29_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_31_fu_1221_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_31_reg_2930 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_47_reg_2936 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal qq6_code6_table_load_reg_2971 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_cast_fu_1299_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_7_reg_2992 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_8_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_2997 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_3012 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_3018 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph1_load_reg_3070 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_3076 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt1_load_reg_3087 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_3093 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_1608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_reg_3098 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_reg_3104 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_1761_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal xa2_cast_fu_1765_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec2_i_i_fu_1775_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal phitmp_i_i3_fu_1803_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal accumd_load_1_reg_3160 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1817_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_96_reg_3185 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1830_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_97_reg_3190 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_2_fu_1839_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal xa2_2_fu_1848_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal tmp_34_fu_1864_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_34_reg_3210 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_fu_1858_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_92_reg_3215 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_95_reg_3220 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_reg_3225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal exitcond_i_i5_fu_1952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i5_reg_3230 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal i_5_fu_1958_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ac_ptr_0_sum_i_i_fu_1964_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ac_ptr_0_sum_i_i_reg_3239 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec_i_i_fu_1970_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_120_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_3259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal i_7_fu_2014_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal test_data_load_reg_3278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal test_data_load_1_reg_3288 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal xa_cast_fu_2076_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_2080_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal exitcond2_i_i_fu_2084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter3_exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter4_exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter5_exitcond2_i_i_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_2090_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal phitmp_i_i_fu_2114_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr_load_reg_3337 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2128_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_90_reg_3362 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_2141_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_91_reg_3367 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa_2_fu_2150_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal xb_2_fu_2159_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal tmp_32_fu_2175_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_32_reg_3387 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal tmp_33_fu_2179_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_33_reg_3392 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_2169_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_88_reg_3397 : STD_LOGIC_VECTOR (38 downto 0);
    signal xa_1_fu_2186_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_1_reg_3402 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal xb_1_fu_2225_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_1_reg_3408 : STD_LOGIC_VECTOR (46 downto 0);
    signal exitcond_i_i_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i_reg_3414 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal i_4_fu_2236_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal p_sum_i_i_fu_2242_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum_i_i_reg_3423 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr1_0_rec_i_i_fu_2248_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_99_reg_3438 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_2325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_reg_3463 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_848_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_reg_3468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_quantl_fu_856_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_105_reg_3479 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_quantl_fu_856_ap_done : STD_LOGIC;
    signal tmp_54_reg_3490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal tmp_108_reg_3506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal plt1_load_reg_3533 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3539 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_fu_2475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_3544 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2417_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_117_reg_3549 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_36_fu_2520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_3554 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal tmp_118_fu_2577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_reg_3559 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_cast1_fu_2635_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_164_cast1_reg_3563 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal tmp_130_fu_2699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_reg_3568 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_fu_2707_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_3573 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal tmp_13_reg_3593 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal tmp_14_fu_2766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_3598 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ph1_load_reg_3614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal grp_filtez_fu_794_ap_start : STD_LOGIC;
    signal grp_filtez_fu_794_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_794_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_794_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_794_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_794_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_794_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_794_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_794_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_808_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_808_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_808_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_808_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_808_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_808_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_808_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_808_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_ap_start : STD_LOGIC;
    signal grp_upzero_fu_817_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_817_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_817_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_817_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_817_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_817_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_817_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_817_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_817_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_817_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_817_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_817_bli_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_817_bli_ce1 : STD_LOGIC;
    signal grp_upzero_fu_817_bli_we1 : STD_LOGIC;
    signal grp_upzero_fu_817_bli_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_832_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_832_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_832_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_832_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_832_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_832_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_832_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_filtep_fu_840_ap_start : STD_LOGIC;
    signal grp_filtep_fu_840_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_840_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_840_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_840_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_840_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_840_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_840_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_848_ap_start : STD_LOGIC;
    signal grp_filtep_fu_848_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_848_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_848_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_848_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_848_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_848_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_856_ap_start : STD_LOGIC;
    signal grp_quantl_fu_856_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_856_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_868_ap_start : STD_LOGIC;
    signal grp_logscl_fu_868_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_868_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_868_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_868_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_876_ap_start : STD_LOGIC;
    signal grp_logsch_fu_876_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_876_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_876_ih : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_876_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_884_ap_start : STD_LOGIC;
    signal grp_scalel_fu_884_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_884_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_884_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_884_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_884_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_i1_reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_reg_grp_filtez_fu_794_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_808_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_upzero_fu_817_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_832_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_reg_grp_filtep_fu_840_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_848_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_856_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_868_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_876_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_884_ap_start : STD_LOGIC := '0';
    signal tmp_59_fu_1216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_1264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_fu_1272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_1781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_1786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_1798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_1982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_1988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_fu_1993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_133_fu_2009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_2030_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_2041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_fu_2369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_131_fu_2743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_1235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_1709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext1_fu_1681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_ext_fu_1661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc45_ext_fu_1632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_1490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_ext_fu_1525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc2_ext_fu_1642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_ext_fu_1562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_1507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc46_ext_fu_1691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_ext_fu_1671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_1341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_2611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc3_ext_fu_2593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_157_ext_fu_2495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext_fu_2583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_ext_fu_2434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_154_ext_fu_2485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_2423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal tmp_128_fu_2866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc4_ext_fu_2848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_178_ext_fu_2828_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_163_cast_cast_ca_fu_2528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_169_cast_cast_ca_fu_2638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc44_ext_fu_2838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_175_ext_fu_2818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_2775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal compressed_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal dec_result_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal test_data_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_1075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr3_fu_1081_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_900_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t3_fu_1091_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_908_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_26_fu_1097_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg2_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr2_fu_1119_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t2_fu_1129_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_fu_1135_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg1_fu_1156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1194_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_30_fu_1177_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1208_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1225_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1289_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_1307_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1316_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1655_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_fu_1733_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_1744_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_1740_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_1751_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_1755_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1655_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_1792_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_134_cast_fu_1836_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_137_cast_fu_1845_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1858_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl7_fu_1872_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_1884_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_1880_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_1892_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_93_fu_1896_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_35_fu_1868_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_127_cast_fu_1902_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_1_fu_1906_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_125_cast_fu_1928_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_1931_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ad_ptr_0_sum7_i_i_fu_1976_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_132_fu_2003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2024_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_53_fu_2035_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_2046_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_2058_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_2054_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_2066_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_2070_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_2024_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2102_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_120_cast_fu_2147_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_123_cast_fu_2156_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_2169_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_115_cast_fu_2183_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl5_fu_2191_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2203_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2199_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2211_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_89_fu_2215_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_117_cast_fu_2221_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tqmf_ptr_0_sum_i_i_fu_2254_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_98_fu_2269_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_100_fu_2289_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_52_fu_2359_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2387_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_2417_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_2542_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_37_fu_2555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2563_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2659_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2665_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_15_fu_2675_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_2685_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_39_fu_2651_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_2730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2751_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_28_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1307_ce : STD_LOGIC;
    signal grp_fu_1316_ce : STD_LOGIC;
    signal grp_fu_1655_ce : STD_LOGIC;
    signal grp_fu_2417_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (67 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce1 : OUT STD_LOGIC;
        bli_we1 : OUT STD_LOGIC;
        bli_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_14tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_16udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_7svdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component Block_proc_dec_deibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_dec_dejbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq6_colbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq2_coocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Block_proc_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Block_proc_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dec_del_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        q0 => dec_del_bpl_q0,
        address1 => grp_upzero_fu_817_bli_address1,
        ce1 => dec_del_bpl_ce1,
        we1 => dec_del_bpl_we1,
        d1 => grp_upzero_fu_817_bli_d1);

    dec_del_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_817_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_817_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_817_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq4_code4_table_U : component Block_proc_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component Block_proc_qq6_colbW
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        q0 => dec_del_bph_q0,
        address1 => grp_upzero_fu_817_bli_address1,
        ce1 => dec_del_bph_ce1,
        we1 => dec_del_bph_we1,
        d1 => grp_upzero_fu_817_bli_d1);

    dec_del_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_817_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_817_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_817_dlti_d1,
        q1 => dec_del_dhx_q1);

    qq2_code2_table_U : component Block_proc_qq2_coocq
    generic map (
        DataWidth => 14,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq2_code2_table_address0,
        ce0 => qq2_code2_table_ce0,
        q0 => qq2_code2_table_q0);

    tqmf_U : component Block_proc_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => test_data_load_reg_3278,
        q0 => tqmf_q0,
        address1 => tqmf_address1,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => tqmf_d1,
        q1 => tqmf_q1);

    h_U : component Block_proc_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0,
        address1 => h_address1,
        ce1 => h_ce1,
        q1 => h_q1);

    delay_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        q0 => delay_bpl_q0,
        address1 => grp_upzero_fu_817_bli_address1,
        ce1 => delay_bpl_ce1,
        we1 => delay_bpl_we1,
        d1 => grp_upzero_fu_817_bli_d1);

    delay_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_817_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_817_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_817_dlti_d1,
        q1 => delay_dltx_q1);

    delay_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        q0 => delay_bph_q0,
        address1 => grp_upzero_fu_817_bli_address1,
        ce1 => delay_bph_ce1,
        we1 => delay_bph_we1,
        d1 => grp_upzero_fu_817_bli_d1);

    delay_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_817_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_817_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_817_dlti_d1,
        q1 => delay_dhx_q1);

    accumc_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        q0 => accumc_q0,
        address1 => accumc_address1,
        ce1 => accumc_ce1,
        we1 => accumc_we1,
        d1 => accumc_d1);

    accumd_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        q0 => accumd_q0,
        address1 => accumd_address1,
        ce1 => accumd_ce1,
        we1 => accumd_we1,
        d1 => accumd_d1);

    grp_filtez_fu_794 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_794_ap_start,
        ap_done => grp_filtez_fu_794_ap_done,
        ap_idle => grp_filtez_fu_794_ap_idle,
        ap_ready => grp_filtez_fu_794_ap_ready,
        bpl_address0 => grp_filtez_fu_794_bpl_address0,
        bpl_ce0 => grp_filtez_fu_794_bpl_ce0,
        bpl_q0 => grp_filtez_fu_794_bpl_q0,
        dlt_address0 => grp_filtez_fu_794_dlt_address0,
        dlt_ce0 => grp_filtez_fu_794_dlt_ce0,
        dlt_q0 => grp_filtez_fu_794_dlt_q0,
        ap_return => grp_filtez_fu_794_ap_return);

    grp_uppol2_fu_808 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_808_ap_start,
        ap_done => grp_uppol2_fu_808_ap_done,
        ap_idle => grp_uppol2_fu_808_ap_idle,
        ap_ready => grp_uppol2_fu_808_ap_ready,
        al1 => grp_uppol2_fu_808_al1,
        al2 => grp_uppol2_fu_808_al2,
        plt => grp_uppol2_fu_808_plt,
        plt1 => grp_uppol2_fu_808_plt1,
        plt2 => grp_uppol2_fu_808_plt2,
        ap_return => grp_uppol2_fu_808_ap_return);

    grp_upzero_fu_817 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_817_ap_start,
        ap_done => grp_upzero_fu_817_ap_done,
        ap_idle => grp_upzero_fu_817_ap_idle,
        ap_ready => grp_upzero_fu_817_ap_ready,
        dlt => grp_upzero_fu_817_dlt,
        dlti_address0 => grp_upzero_fu_817_dlti_address0,
        dlti_ce0 => grp_upzero_fu_817_dlti_ce0,
        dlti_we0 => grp_upzero_fu_817_dlti_we0,
        dlti_d0 => grp_upzero_fu_817_dlti_d0,
        dlti_q0 => grp_upzero_fu_817_dlti_q0,
        dlti_address1 => grp_upzero_fu_817_dlti_address1,
        dlti_ce1 => grp_upzero_fu_817_dlti_ce1,
        dlti_we1 => grp_upzero_fu_817_dlti_we1,
        dlti_d1 => grp_upzero_fu_817_dlti_d1,
        dlti_q1 => grp_upzero_fu_817_dlti_q1,
        bli_address0 => grp_upzero_fu_817_bli_address0,
        bli_ce0 => grp_upzero_fu_817_bli_ce0,
        bli_q0 => grp_upzero_fu_817_bli_q0,
        bli_address1 => grp_upzero_fu_817_bli_address1,
        bli_ce1 => grp_upzero_fu_817_bli_ce1,
        bli_we1 => grp_upzero_fu_817_bli_we1,
        bli_d1 => grp_upzero_fu_817_bli_d1);

    grp_uppol1_fu_832 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_832_ap_start,
        ap_done => grp_uppol1_fu_832_ap_done,
        ap_idle => grp_uppol1_fu_832_ap_idle,
        ap_ready => grp_uppol1_fu_832_ap_ready,
        al1 => grp_uppol1_fu_832_al1,
        apl2 => reg_1015,
        plt => grp_uppol1_fu_832_plt,
        plt1 => grp_uppol1_fu_832_plt1,
        ap_return => grp_uppol1_fu_832_ap_return);

    grp_filtep_fu_840 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_840_ap_start,
        ap_done => grp_filtep_fu_840_ap_done,
        ap_idle => grp_filtep_fu_840_ap_idle,
        ap_ready => grp_filtep_fu_840_ap_ready,
        rlt1 => grp_filtep_fu_840_rlt1,
        al1 => grp_filtep_fu_840_al1,
        rlt2 => grp_filtep_fu_840_rlt2,
        al2 => grp_filtep_fu_840_al2,
        ap_return => grp_filtep_fu_840_ap_return);

    grp_filtep_fu_848 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_848_ap_start,
        ap_done => grp_filtep_fu_848_ap_done,
        ap_idle => grp_filtep_fu_848_ap_idle,
        ap_ready => grp_filtep_fu_848_ap_ready,
        rlt1 => grp_filtep_fu_848_rlt1,
        al1 => grp_filtep_fu_848_al1,
        rlt2 => grp_filtep_fu_848_rlt2,
        al2 => grp_filtep_fu_848_al2,
        ap_return => grp_filtep_fu_848_ap_return);

    grp_quantl_fu_856 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_856_ap_start,
        ap_done => grp_quantl_fu_856_ap_done,
        ap_idle => grp_quantl_fu_856_ap_idle,
        ap_ready => grp_quantl_fu_856_ap_ready,
        el => tmp_104_reg_3463,
        detl => detl,
        ap_return => grp_quantl_fu_856_ap_return);

    grp_logscl_fu_868 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_868_ap_start,
        ap_done => grp_logscl_fu_868_ap_done,
        ap_idle => grp_logscl_fu_868_ap_idle,
        ap_ready => grp_logscl_fu_868_ap_ready,
        il => grp_logscl_fu_868_il,
        nbl => grp_logscl_fu_868_nbl,
        ap_return => grp_logscl_fu_868_ap_return);

    grp_logsch_fu_876 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_876_ap_start,
        ap_done => grp_logsch_fu_876_ap_done,
        ap_idle => grp_logsch_fu_876_ap_idle,
        ap_ready => grp_logsch_fu_876_ap_ready,
        ih => grp_logsch_fu_876_ih,
        nbh => grp_logsch_fu_876_nbh,
        ap_return => grp_logsch_fu_876_ap_return);

    grp_scalel_fu_884 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_884_ap_start,
        ap_done => grp_scalel_fu_884_ap_done,
        ap_idle => grp_scalel_fu_884_ap_idle,
        ap_ready => grp_scalel_fu_884_ap_ready,
        nbl => grp_scalel_fu_884_nbl,
        shift_constant => grp_scalel_fu_884_shift_constant,
        ap_return => grp_scalel_fu_884_ap_return);

    adpcm_main_mul_14tde_U42 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_980,
        din1 => dec_deth,
        ce => ap_const_logic_1,
        dout => grp_fu_1289_p2);

    adpcm_main_mul_16udo_U43 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_984,
        din1 => grp_fu_1307_p1,
        ce => grp_fu_1307_ce,
        dout => grp_fu_1307_p2);

    adpcm_main_mul_16udo_U44 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq6_code6_table_load_reg_2971,
        din1 => grp_fu_1316_p1,
        ce => grp_fu_1316_ce,
        dout => grp_fu_1316_p2);

    adpcm_main_mul_7svdy_U45 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1655_p0,
        din1 => tmp_86_reg_3098,
        ce => grp_fu_1655_ce,
        dout => grp_fu_1655_p2);

    adpcm_main_mul_32wdI_U46 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1020,
        din1 => reg_1024,
        ce => ap_const_logic_1,
        dout => grp_fu_1817_p2);

    adpcm_main_mul_32wdI_U47 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_1_reg_3160,
        din1 => reg_1028,
        ce => ap_const_logic_1,
        dout => grp_fu_1830_p2);

    adpcm_main_mul_7svdy_U48 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1858_p0,
        din1 => reg_1020,
        ce => ap_const_logic_1,
        dout => grp_fu_1858_p2);

    adpcm_main_mul_32xdS_U49 : component adpcm_main_mul_32xdS
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1032,
        din1 => grp_fu_2024_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2024_p2);

    adpcm_main_mul_32wdI_U50 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1032,
        din1 => reg_1024,
        ce => ap_const_logic_1,
        dout => grp_fu_2128_p2);

    adpcm_main_mul_32wdI_U51 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_ptr_load_reg_3337,
        din1 => reg_1028,
        ce => ap_const_logic_1,
        dout => grp_fu_2141_p2);

    adpcm_main_mul_7svdy_U52 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2169_p0,
        din1 => reg_1032,
        ce => ap_const_logic_1,
        dout => grp_fu_2169_p2);

    adpcm_main_mul_32yd2_U53 : component adpcm_main_mul_32yd2
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => detl,
        din1 => reg_984,
        ce => ap_const_logic_1,
        dout => grp_fu_2387_p2);

    adpcm_main_mul_32zec_U54 : component adpcm_main_mul_32zec
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => deth,
        din1 => grp_fu_2417_p1,
        ce => grp_fu_2417_ce,
        dout => grp_fu_2417_p2);

    adpcm_main_mul_14tde_U55 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_980,
        din1 => grp_fu_2751_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2751_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2890) and not((ap_const_lv1_0 = tmp_29_fu_1151_p2))) or (not((ap_const_lv1_0 = tmp_reg_2890)) and not((ap_const_lv1_0 = tmp_28_fu_1172_p2)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_fu_1769_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_fu_1769_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_fu_1769_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond_i_i_fu_2230_p2)))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and not((ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_840_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_840_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
                    ap_reg_grp_filtep_fu_840_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_840_ap_ready)) then 
                    ap_reg_grp_filtep_fu_840_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_848_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_848_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
                    ap_reg_grp_filtep_fu_848_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_848_ap_ready)) then 
                    ap_reg_grp_filtep_fu_848_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_794_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_794_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state60)))) then 
                    ap_reg_grp_filtez_fu_794_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_794_ap_ready)) then 
                    ap_reg_grp_filtez_fu_794_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_876_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_876_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then 
                    ap_reg_grp_logsch_fu_876_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_876_ap_ready)) then 
                    ap_reg_grp_logsch_fu_876_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_868_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_868_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then 
                    ap_reg_grp_logscl_fu_868_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_868_ap_ready)) then 
                    ap_reg_grp_logscl_fu_868_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_856_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_856_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state60))) then 
                    ap_reg_grp_quantl_fu_856_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_856_ap_ready)) then 
                    ap_reg_grp_quantl_fu_856_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_884_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_884_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)))) then 
                    ap_reg_grp_scalel_fu_884_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_884_ap_ready)) then 
                    ap_reg_grp_scalel_fu_884_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_832_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_832_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state81)))) then 
                    ap_reg_grp_uppol1_fu_832_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_832_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_832_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_808_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_808_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then 
                    ap_reg_grp_uppol2_fu_808_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_808_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_808_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_817_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_817_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then 
                    ap_reg_grp_upzero_fu_817_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_817_ap_ready)) then 
                    ap_reg_grp_upzero_fu_817_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_666_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_1769_p2))) then 
                ad_ptr_0_rec_i_i_reg_666 <= p_rec2_i_i_fu_1775_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                ad_ptr_0_rec_i_i_reg_666 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_708_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))) then 
                ad_ptr_1_rec_i_i_reg_708 <= p_rec_i_i_fu_1970_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                ad_ptr_1_rec_i_i_reg_708 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    dec_il_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    enc_ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state71) and not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))) and not((ap_const_lv1_0 = tmp_118_reg_3559)))) then 
                                enc_ih(1 downto 0) <= tmp_169_cast_cast_ca_fu_2638_p3(1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
                                enc_ih(1 downto 0) <= tmp_163_cast_cast_ca_fu_2528_p3(1 downto 0);
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_677_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_1769_p2))) then 
                h_ptr_0_rec_i_i_reg_677 <= phitmp_i_i3_fu_1803_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                h_ptr_0_rec_i_i_reg_677 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state36))) then 
                i_0_i1_reg_642 <= i_7_fu_2014_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1063_p2))) then 
                i_0_i1_reg_642 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_741_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2))) then 
                i_0_i_i_reg_741 <= i_fu_2090_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                i_0_i_i_reg_741 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1063_p2)))) then 
                i_0_i_reg_654 <= ap_const_lv32_0;
            elsif ((not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state82))) then 
                i_0_i_reg_654 <= i_6_reg_3573;
            end if; 
        end if;
    end process;

    i_1_i_i4_reg_719_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))) then 
                i_1_i_i4_reg_719 <= i_5_fu_1958_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                i_1_i_i4_reg_719 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_783_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))) then 
                i_1_i_i_reg_783 <= i_4_fu_2236_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                i_1_i_i_reg_783 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    reg_1032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state50))) then 
                reg_1032 <= tqmf_q1;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond2_i_i_reg_3303)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
                reg_1032 <= tqmf_q0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0) and (ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_772 <= tqmf_ptr1_0_rec_i_i_fu_2248_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_772 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_730_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2))) then 
                tqmf_ptr_0_rec_i_i_reg_730 <= phitmp_i_i_fu_2114_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                tqmf_ptr_0_rec_i_i_reg_730 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_3126))) then 
                xa1_0_i_i_reg_698 <= xa1_2_fu_1839_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                xa1_0_i_i_reg_698 <= xa1_cast_fu_1761_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_3126))) then 
                xa2_0_i_i_reg_688 <= xa2_2_fu_1848_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                xa2_0_i_i_reg_688 <= xa2_cast_fu_1765_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter5_exitcond2_i_i_reg_3303))) then 
                xa_0_i_i_reg_752 <= xa_2_fu_2150_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                xa_0_i_i_reg_752 <= xa_cast_fu_2076_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_762_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter5_exitcond2_i_i_reg_3303))) then 
                xb_0_i_i_reg_762 <= xb_2_fu_2159_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41))) then 
                xb_0_i_i_reg_762 <= xb_cast_fu_2080_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))) then
                ac_ptr_0_sum_i_i_reg_3239 <= ac_ptr_0_sum_i_i_fu_1964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_3126 = ap_const_lv1_0))) then
                accumd_load_1_reg_3160 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state82))) then
                ah1 <= p_trunc4_ext_fu_2848_p1;
                    deth(14 downto 0) <= p_trunc44_ext_fu_2838_p1(14 downto 0);
                rh1 <= tmp_128_fu_2866_p2;
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state81))) then
                ah2 <= tmp_178_ext_fu_2828_p1;
                    nbh(14 downto 0) <= tmp_175_ext_fu_2818_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state71) and not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))))) then
                al1 <= p_trunc3_ext_fu_2593_p1;
                    detl(14 downto 0) <= p_trunc_ext_fu_2583_p1(14 downto 0);
                i_6_reg_3573 <= i_6_fu_2707_p2;
                rlt1 <= tmp_114_fu_2611_p2;
                rlt2 <= rlt1;
                tmp_130_reg_3568 <= tmp_130_fu_2699_p3;
                    tmp_164_cast1_reg_3563(14 downto 0) <= tmp_164_cast1_fu_2635_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then
                al2 <= tmp_157_ext_fu_2495_p1;
                    nbl(14 downto 0) <= tmp_154_ext_fu_2485_p1(14 downto 0);
                tmp_118_reg_3559 <= tmp_118_fu_2577_p2;
                tmp_36_reg_3554 <= n_assign_fu_2509_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_reg_3126 <= exitcond_reg_3126;
                exitcond_reg_3126 <= exitcond_fu_1769_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp0_iter2_exitcond_reg_3126 <= ap_pipeline_reg_pp0_iter1_exitcond_reg_3126;
                ap_pipeline_reg_pp0_iter3_exitcond_reg_3126 <= ap_pipeline_reg_pp0_iter2_exitcond_reg_3126;
                ap_pipeline_reg_pp0_iter4_exitcond_reg_3126 <= ap_pipeline_reg_pp0_iter3_exitcond_reg_3126;
                ap_pipeline_reg_pp0_iter5_exitcond_reg_3126 <= ap_pipeline_reg_pp0_iter4_exitcond_reg_3126;
                ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3303 <= ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3303;
                ap_pipeline_reg_pp2_iter3_exitcond2_i_i_reg_3303 <= ap_pipeline_reg_pp2_iter2_exitcond2_i_i_reg_3303;
                ap_pipeline_reg_pp2_iter4_exitcond2_i_i_reg_3303 <= ap_pipeline_reg_pp2_iter3_exitcond2_i_i_reg_3303;
                ap_pipeline_reg_pp2_iter5_exitcond2_i_i_reg_3303 <= ap_pipeline_reg_pp2_iter4_exitcond2_i_i_reg_3303;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                ap_pipeline_reg_pp2_iter1_exitcond2_i_i_reg_3303 <= exitcond2_i_i_reg_3303;
                exitcond2_i_i_reg_3303 <= exitcond2_i_i_fu_2084_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done) or (ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))))) then
                dec_ah1 <= p_trunc2_ext_fu_1642_p1;
                    dec_detl(14 downto 0) <= p_trunc45_ext_fu_1632_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                dec_ah2 <= tmp_107_ext_fu_1562_p1;
                    dec_nbl(14 downto 0) <= tmp_90_ext_fu_1525_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_3087 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_3093 <= dec_plt2;
                dec_rh1 <= tmp_85_fu_1580_p2;
                dec_rh2 <= dec_rh1;
                tmp_86_reg_3098 <= tmp_86_fu_1608_p2;
                tmp_87_reg_3104 <= tmp_87_fu_1614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state17))) then
                dec_al1 <= p_trunc_ext1_fu_1681_p1;
                    dec_deth(14 downto 0) <= p_trunc46_ext_fu_1691_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then
                dec_al2 <= tmp_93_ext_fu_1661_p1;
                    dec_nbh(14 downto 0) <= tmp_104_ext_fu_1671_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_794_ap_done)))) then
                dec_dh <= tmp_8_fu_1338_p1;
                dec_ph <= tmp_80_fu_1341_p2;
                tmp_8_reg_2997 <= tmp_8_fu_1338_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                dec_dlt <= grp_fu_1307_p2(46 downto 15);
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_3070 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_3076 <= dec_ph2;
                tmp_65_reg_3012 <= grp_fu_1307_p2(46 downto 15);
                tmp_69_reg_3018 <= grp_fu_1316_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                dec_ih <= tmp_60_fu_1235_p1;
                tmp_31_reg_2930 <= tmp_31_fu_1221_p1;
                tmp_47_reg_2936 <= compressed_Dout_A(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done) or (ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done))))) then
                dec_plt <= tmp_66_fu_1485_p2;
                dec_rl <= tmp_70_fu_1490_p2;
                dec_sh <= tmp_77_fu_1507_p2;
                dec_sl <= grp_fu_940_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                dec_rlt1 <= tmp_75_fu_1709_p2;
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state78))) then
                dh <= tmp_14_fu_2766_p1;
                ph <= tmp_125_fu_2775_p2;
                tmp_14_reg_3598 <= tmp_14_fu_2766_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66))) then
                dlt <= grp_fu_2387_p2(46 downto 15);
                tmp_108_reg_3506 <= grp_fu_2387_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state68))) then
                    enc_il(5 downto 0) <= tmp_147_ext_fu_2434_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3533 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3539 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_i_i5_reg_3230 <= exitcond_i_i5_fu_1952_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond_i_i_reg_3414 <= exitcond_i_i_fu_2230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_reg_2890) and (ap_const_lv1_0 = tmp_29_fu_1151_p2))) then
                p_lshr1_reg_2917 <= p_neg1_fu_1156_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))) then
                p_sum_i_i_reg_3423 <= p_sum_i_i_fu_2242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state79))) then
                ph1 <= ph;
                ph1_load_reg_3614 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3620 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then
                plt <= tmp_109_fu_2423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then
                qq6_code6_table_load_reg_2971 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done) or (ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))))) then
                reg_1005 <= grp_logscl_fu_868_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done) or (ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state80) and not(((ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))))) then
                reg_1010 <= grp_logsch_fu_876_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done) or (ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state80) and not(((ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done) or (ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))))) then
                reg_1015 <= grp_uppol2_fu_808_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_3126 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state27)))) then
                reg_1020 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_3126 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond2_i_i_reg_3303)))) then
                reg_1024 <= h_q0;
                reg_1028 <= h_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then
                reg_1037 <= al1;
                reg_1044 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state79)))) then
                reg_1050 <= ah1;
                reg_1057 <= ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state73)))) then
                reg_980 <= qq2_code2_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then
                reg_984 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_794_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state59) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done)))))) then
                reg_988 <= grp_filtez_fu_794_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then
                reg_992 <= dec_al1;
                reg_999 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done))))) then
                sh <= tmp_116_fu_2475_p2;
                tmp_116_reg_3544 <= tmp_116_fu_2475_p2;
                tmp_117_reg_3549 <= grp_fu_2417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state59) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done))))) then
                sl <= grp_fu_940_p2;
                tmp_104_reg_3463 <= tmp_104_fu_2325_p2;
                tmp_115_reg_3468 <= grp_filtep_fu_848_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state41))) then
                test_data_load_1_reg_3288 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                test_data_load_reg_3278 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_quantl_fu_856_ap_done))))) then
                tmp_105_reg_3479 <= grp_quantl_fu_856_ap_return;
                tmp_54_reg_3490 <= grp_filtez_fu_794_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then
                tmp_120_reg_3259 <= tmp_120_fu_1998_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then
                tmp_13_reg_3593 <= grp_fu_2751_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1063_p2)))) then
                    tmp_22_reg_2909(31 downto 1) <= tmp_22_fu_1143_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1063_p2))) then
                    tmp_27_reg_2904(31 downto 1) <= tmp_27_fu_1105_p3(31 downto 1);
                tmp_s_reg_2894 <= tmp_s_fu_1069_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then
                tmp_32_reg_3387 <= tmp_32_fu_2175_p1;
                tmp_33_reg_3392 <= tmp_33_fu_2179_p1;
                tmp_88_reg_3397 <= grp_fu_2169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31))) then
                tmp_34_reg_3210 <= tmp_34_fu_1864_p1;
                tmp_92_reg_3215 <= grp_fu_1858_p2;
                tmp_95_reg_3220 <= xa2_1_fu_1906_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                tmp_7_reg_2992 <= grp_fu_1289_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp2_iter4_exitcond2_i_i_reg_3303)) then
                tmp_90_reg_3362 <= grp_fu_2128_p2;
                tmp_91_reg_3367 <= grp_fu_2141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then
                tmp_94_reg_3225 <= xa1_1_fu_1931_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_exitcond_reg_3126)) then
                tmp_96_reg_3185 <= grp_fu_1817_p2;
                tmp_97_reg_3190 <= grp_fu_1830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then
                tmp_99_reg_3438 <= tmp_98_fu_2269_p2(46 downto 15);
                xh <= tmp_100_fu_2289_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then
                tmp_reg_2890 <= tmp_fu_1063_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond2_i_i_reg_3303))) then
                tqmf_ptr_load_reg_3337 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then
                xa_1_reg_3402 <= xa_1_fu_2186_p2;
                xb_1_reg_3408 <= xb_1_fu_2225_p2;
            end if;
        end if;
    end process;
    dec_detl(31 downto 15) <= "00000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    detl(31 downto 15) <= "00000000000000000";
    enc_il(31 downto 6) <= "00000000000000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    enc_ih(31 downto 2) <= "000000000000000000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    tmp_27_reg_2904(0) <= '0';
    tmp_22_reg_2909(0) <= '0';
    tmp_164_cast1_reg_3563(44 downto 15) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, grp_filtez_fu_794_ap_done, grp_filtep_fu_840_ap_done, grp_filtep_fu_848_ap_done, grp_logscl_fu_868_ap_done, grp_logsch_fu_876_ap_done, grp_upzero_fu_817_ap_done, grp_uppol2_fu_808_ap_done, grp_scalel_fu_884_ap_done, grp_uppol1_fu_832_ap_done, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, tmp_reg_2890, tmp_29_fu_1151_p2, exitcond_fu_1769_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, exitcond_i_i5_fu_1952_p2, ap_enable_reg_pp1_iter0, exitcond2_i_i_fu_2084_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter6, exitcond_i_i_fu_2230_p2, ap_enable_reg_pp3_iter0, grp_quantl_fu_856_ap_done, ap_enable_reg_pp0_iter5, ap_enable_reg_pp2_iter5, tmp_28_fu_1172_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((((ap_const_lv1_0 = tmp_reg_2890) and not((ap_const_lv1_0 = tmp_29_fu_1151_p2))) or (not((ap_const_lv1_0 = tmp_reg_2890)) and not((ap_const_lv1_0 = tmp_28_fu_1172_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((ap_const_lv1_0 = tmp_reg_2890)) and (ap_const_lv1_0 = tmp_28_fu_1172_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (not((ap_const_logic_0 = grp_filtez_fu_794_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done) or (ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done) or (ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter5)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_1769_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_1769_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1952_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp2_iter6) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter5)))) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2084_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp3_iter0) and not((ap_const_lv1_0 = exitcond_i_i_fu_2230_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_filtep_fu_840_ap_done) or (ap_const_logic_0 = grp_filtep_fu_848_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_quantl_fu_856_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_876_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_1988_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_reg_3239),64));
    ac_ptr_0_sum_i_i_fu_1964_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_708) + unsigned(ap_const_lv5_A));

    accumc_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ad_ptr_0_rec_i_i_cas_fu_1786_p1, ad_ptr_0_sum7_i_i_ca_fu_1982_p1, ap_CS_fsm_state26)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1982_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_1786_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1, ac_ptr_0_sum_i_i_cas_fu_1988_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            accumc_address1 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            accumc_address1 <= ac_ptr_0_sum_i_i_cas_fu_1988_p1(4 - 1 downto 0);
        else 
            accumc_address1 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            accumc_ce1 <= ap_const_logic_1;
        else 
            accumc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d1_assign_proc : process(accumc_q0, tmp_87_reg_3104, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            accumc_d1 <= tmp_87_reg_3104;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            accumc_d1 <= accumc_q0;
        else 
            accumc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we1_assign_proc : process(exitcond_i_i5_reg_3230, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i5_reg_3230)))) then 
            accumc_we1 <= ap_const_logic_1;
        else 
            accumc_we1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ad_ptr_0_rec_i_i_cas_fu_1786_p1, ad_ptr_0_sum7_i_i_ca_fu_1982_p1, ap_CS_fsm_state30)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1982_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_1786_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1, ac_ptr_0_sum_i_i_cas_fu_1988_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            accumd_address1 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            accumd_address1 <= ac_ptr_0_sum_i_i_cas_fu_1988_p1(4 - 1 downto 0);
        else 
            accumd_address1 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state30)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            accumd_ce1 <= ap_const_logic_1;
        else 
            accumd_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d1_assign_proc : process(accumd_q0, tmp_86_reg_3098, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            accumd_d1 <= tmp_86_reg_3098;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            accumd_d1 <= accumd_q0;
        else 
            accumd_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we1_assign_proc : process(exitcond_i_i5_reg_3230, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state35, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_i_i5_reg_3230)))) then 
            accumd_we1 <= ap_const_logic_1;
        else 
            accumd_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_1786_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_reg_666),64));
    ad_ptr_0_sum7_i_i_ca_fu_1982_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_fu_1976_p2),64));
    ad_ptr_0_sum7_i_i_fu_1976_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_708) + unsigned(ap_const_lv5_9));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(42 downto 42);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state26 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state27 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state28 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state31 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state32 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state35 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state36 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state37 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state38 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state39 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state41 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state49 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state50 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state51 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state54 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state55 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state58 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state59 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state60 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state61 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state62 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_state63 <= ap_CS_fsm(48 downto 48);
    ap_CS_fsm_state66 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state67 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state68 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state69 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state70 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state71 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state72 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state73 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state74 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_state77 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state78 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state79 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state80 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state81 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state82 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_done_reg, tmp_reg_2890, ap_CS_fsm_state2, tmp_29_fu_1151_p2, tmp_28_fu_1172_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2890) and not((ap_const_lv1_0 = tmp_29_fu_1151_p2))) or (not((ap_const_lv1_0 = tmp_reg_2890)) and not((ap_const_lv1_0 = tmp_28_fu_1172_p2))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_2890, ap_CS_fsm_state2, tmp_29_fu_1151_p2, tmp_28_fu_1172_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2890) and not((ap_const_lv1_0 = tmp_29_fu_1151_p2))) or (not((ap_const_lv1_0 = tmp_reg_2890)) and not((ap_const_lv1_0 = tmp_28_fu_1172_p2)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Addr_A <= std_logic_vector(shift_left(unsigned(compressed_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    compressed_Addr_A_orig_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state72, tmp_59_fu_1216_p1, tmp_131_fu_2743_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state72))) then 
            compressed_Addr_A_orig <= tmp_131_fu_2743_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            compressed_Addr_A_orig <= tmp_59_fu_1216_p1(32 - 1 downto 0);
        else 
            compressed_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    compressed_Din_A <= (enc_il or tmp_38_fu_2730_p2);

    compressed_EN_A_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state72)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state72)))) then 
            compressed_EN_A <= ap_const_logic_1;
        else 
            compressed_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    compressed_WEN_A_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state72)))) then 
            compressed_WEN_A <= ap_const_lv4_F;
        else 
            compressed_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_794_bpl_address0, grp_upzero_fu_817_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_address0 <= grp_upzero_fu_817_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_bph_address0 <= grp_filtez_fu_794_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_794_bpl_ce0, grp_upzero_fu_817_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_817_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_794_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_ce1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_817_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_ce1 <= grp_upzero_fu_817_bli_ce1;
        else 
            dec_del_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_817_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_we1 <= grp_upzero_fu_817_bli_we1;
        else 
            dec_del_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_794_bpl_address0, grp_upzero_fu_817_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_817_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_794_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_794_bpl_ce0, grp_upzero_fu_817_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_817_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_794_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_ce1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_817_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_ce1 <= grp_upzero_fu_817_bli_ce1;
        else 
            dec_del_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_817_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_we1 <= grp_upzero_fu_817_bli_we1;
        else 
            dec_del_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_794_dlt_address0, grp_upzero_fu_817_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_817_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_794_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_794_dlt_ce0, grp_upzero_fu_817_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_817_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_794_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_817_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_817_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_817_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_817_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_817_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_817_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_794_dlt_address0, grp_upzero_fu_817_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_817_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_794_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_794_dlt_ce0, grp_upzero_fu_817_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_817_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_794_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_817_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_817_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_817_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_817_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_817_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_817_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Addr_A <= std_logic_vector(shift_left(unsigned(dec_result_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    dec_result_Addr_A_orig_assign_proc : process(tmp_120_reg_3259, ap_CS_fsm_state35, ap_CS_fsm_state36, tmp_119_fu_1993_p1, tmp_133_fu_2009_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state36) and not((ap_const_lv1_0 = tmp_120_reg_3259)))) then 
            dec_result_Addr_A_orig <= tmp_133_fu_2009_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = tmp_120_reg_3259))) then 
            dec_result_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            dec_result_Addr_A_orig <= tmp_119_fu_1993_p1(32 - 1 downto 0);
        else 
            dec_result_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_Din_A_assign_proc : process(tmp_95_reg_3220, tmp_94_reg_3225, tmp_120_reg_3259, ap_CS_fsm_state35, ap_CS_fsm_state36)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state36) and not((ap_const_lv1_0 = tmp_120_reg_3259))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = tmp_120_reg_3259)))) then 
            dec_result_Din_A <= tmp_95_reg_3220;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
            dec_result_Din_A <= tmp_94_reg_3225;
        else 
            dec_result_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_EN_A_assign_proc : process(tmp_120_reg_3259, ap_CS_fsm_state35, ap_CS_fsm_state36)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not((ap_const_lv1_0 = tmp_120_reg_3259))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = tmp_120_reg_3259)))) then 
            dec_result_EN_A <= ap_const_logic_1;
        else 
            dec_result_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_WEN_A_assign_proc : process(tmp_120_reg_3259, ap_CS_fsm_state35, ap_CS_fsm_state36)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not((ap_const_lv1_0 = tmp_120_reg_3259))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = tmp_120_reg_3259)))) then 
            dec_result_WEN_A <= ap_const_lv4_F;
        else 
            dec_result_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

        decis_fu_2551_p1 <= std_logic_vector(resize(signed(tmp_10_fu_2542_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state61, grp_filtez_fu_794_bpl_address0, grp_upzero_fu_817_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_bph_address0 <= grp_upzero_fu_817_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            delay_bph_address0 <= grp_filtez_fu_794_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state61, grp_filtez_fu_794_bpl_ce0, grp_upzero_fu_817_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_bph_ce0 <= grp_upzero_fu_817_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            delay_bph_ce0 <= grp_filtez_fu_794_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_ce1_assign_proc : process(ap_CS_fsm_state80, grp_upzero_fu_817_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_bph_ce1 <= grp_upzero_fu_817_bli_ce1;
        else 
            delay_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we1_assign_proc : process(ap_CS_fsm_state80, grp_upzero_fu_817_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_bph_we1 <= grp_upzero_fu_817_bli_we1;
        else 
            delay_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_filtez_fu_794_bpl_address0, grp_upzero_fu_817_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_bpl_address0 <= grp_upzero_fu_817_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            delay_bpl_address0 <= grp_filtez_fu_794_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_filtez_fu_794_bpl_ce0, grp_upzero_fu_817_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_bpl_ce0 <= grp_upzero_fu_817_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            delay_bpl_ce0 <= grp_filtez_fu_794_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_ce1_assign_proc : process(ap_CS_fsm_state69, grp_upzero_fu_817_bli_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_bpl_ce1 <= grp_upzero_fu_817_bli_ce1;
        else 
            delay_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we1_assign_proc : process(ap_CS_fsm_state69, grp_upzero_fu_817_bli_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_bpl_we1 <= grp_upzero_fu_817_bli_we1;
        else 
            delay_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state61, grp_filtez_fu_794_dlt_address0, grp_upzero_fu_817_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_dhx_address0 <= grp_upzero_fu_817_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            delay_dhx_address0 <= grp_filtez_fu_794_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state61, grp_filtez_fu_794_dlt_ce0, grp_upzero_fu_817_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_dhx_ce0 <= grp_upzero_fu_817_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            delay_dhx_ce0 <= grp_filtez_fu_794_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state80, grp_upzero_fu_817_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_dhx_ce1 <= grp_upzero_fu_817_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state80, grp_upzero_fu_817_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_dhx_we0 <= grp_upzero_fu_817_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state80, grp_upzero_fu_817_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            delay_dhx_we1 <= grp_upzero_fu_817_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_filtez_fu_794_dlt_address0, grp_upzero_fu_817_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_dltx_address0 <= grp_upzero_fu_817_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            delay_dltx_address0 <= grp_filtez_fu_794_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state59, ap_CS_fsm_state69, grp_filtez_fu_794_dlt_ce0, grp_upzero_fu_817_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_dltx_ce0 <= grp_upzero_fu_817_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            delay_dltx_ce0 <= grp_filtez_fu_794_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state69, grp_upzero_fu_817_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_dltx_ce1 <= grp_upzero_fu_817_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state69, grp_upzero_fu_817_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_dltx_we0 <= grp_upzero_fu_817_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state69, grp_upzero_fu_817_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            delay_dltx_we1 <= grp_upzero_fu_817_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_i_i_fu_2084_p2 <= "1" when (i_0_i_i_reg_741 = ap_const_lv4_A) else "0";
    exitcond_fu_1769_p2 <= "1" when (ad_ptr_0_rec_i_i_reg_666 = ap_const_lv4_A) else "0";
    exitcond_i_i5_fu_1952_p2 <= "1" when (i_1_i_i4_reg_719 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_2230_p2 <= "1" when (i_1_i_i_reg_783 = ap_const_lv5_16) else "0";

    grp_filtep_fu_840_al1_assign_proc : process(ap_CS_fsm_state59, reg_992, ap_CS_fsm_state13, reg_1037)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_840_al1 <= reg_1037;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_840_al1 <= reg_992;
        else 
            grp_filtep_fu_840_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_840_al2_assign_proc : process(ap_CS_fsm_state59, reg_999, ap_CS_fsm_state13, reg_1044)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_840_al2 <= reg_1044;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_840_al2 <= reg_999;
        else 
            grp_filtep_fu_840_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_840_ap_start <= ap_reg_grp_filtep_fu_840_ap_start;

    grp_filtep_fu_840_rlt1_assign_proc : process(dec_rlt1, rlt1, ap_CS_fsm_state59, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_840_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_840_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_840_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_840_rlt2_assign_proc : process(dec_rlt2, rlt2, ap_CS_fsm_state59, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_840_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_840_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_840_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_848_al1_assign_proc : process(dec_ah1, ap_CS_fsm_state59, ap_CS_fsm_state13, reg_1050)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_848_al1 <= reg_1050;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_848_al1 <= dec_ah1;
        else 
            grp_filtep_fu_848_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_848_al2_assign_proc : process(dec_ah2, ap_CS_fsm_state59, ap_CS_fsm_state13, reg_1057)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_848_al2 <= reg_1057;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_848_al2 <= dec_ah2;
        else 
            grp_filtep_fu_848_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_848_ap_start <= ap_reg_grp_filtep_fu_848_ap_start;

    grp_filtep_fu_848_rlt1_assign_proc : process(dec_rh1, rh1, ap_CS_fsm_state59, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_848_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_848_rlt1 <= dec_rh1;
        else 
            grp_filtep_fu_848_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_848_rlt2_assign_proc : process(dec_rh2, rh2, ap_CS_fsm_state59, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtep_fu_848_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_848_rlt2 <= dec_rh2;
        else 
            grp_filtep_fu_848_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_794_ap_start <= ap_reg_grp_filtez_fu_794_ap_start;

    grp_filtez_fu_794_bpl_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state11, ap_CS_fsm_state59, ap_CS_fsm_state13, ap_CS_fsm_state61)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            grp_filtez_fu_794_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtez_fu_794_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtez_fu_794_bpl_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            grp_filtez_fu_794_bpl_q0 <= dec_del_bph_q0;
        else 
            grp_filtez_fu_794_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_794_dlt_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state11, ap_CS_fsm_state59, ap_CS_fsm_state13, ap_CS_fsm_state61)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            grp_filtez_fu_794_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            grp_filtez_fu_794_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtez_fu_794_dlt_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            grp_filtez_fu_794_dlt_q0 <= dec_del_dhx_q0;
        else 
            grp_filtez_fu_794_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1307_ce_assign_proc : process(ap_CS_fsm_state11, grp_filtez_fu_794_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_794_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state12) or (ap_const_lv1_1 = ap_CS_fsm_state9) or (ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_fu_1307_ce <= ap_const_logic_1;
        else 
            grp_fu_1307_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1307_p1 <= tmp_78_cast_fu_1299_p1(32 - 1 downto 0);

    grp_fu_1316_ce_assign_proc : process(ap_CS_fsm_state11, grp_filtez_fu_794_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_794_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state12) or (ap_const_lv1_1 = ap_CS_fsm_state9) or (ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_fu_1316_ce <= ap_const_logic_1;
        else 
            grp_fu_1316_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1316_p1 <= tmp_78_cast_fu_1299_p1(32 - 1 downto 0);

    grp_fu_1655_ce_assign_proc : process(grp_upzero_fu_817_ap_done, grp_uppol2_fu_808_ap_done, ap_CS_fsm_state15, grp_scalel_fu_884_ap_done, grp_uppol1_fu_832_ap_done, ap_CS_fsm_state18, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done) or (ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state18) or (ap_const_lv1_1 = ap_CS_fsm_state16) or (not(((ap_const_logic_0 = grp_scalel_fu_884_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_832_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_fu_1655_ce <= ap_const_logic_1;
        else 
            grp_fu_1655_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1655_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_1858_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2024_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2169_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);

    grp_fu_2417_ce_assign_proc : process(grp_logscl_fu_868_ap_done, grp_upzero_fu_817_ap_done, grp_uppol2_fu_808_ap_done, ap_CS_fsm_state69, ap_CS_fsm_state68, ap_CS_fsm_state66, ap_CS_fsm_state67)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_logic_0 = grp_logscl_fu_868_ap_done) or (ap_const_logic_0 = grp_upzero_fu_817_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_808_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state68) or (ap_const_lv1_1 = ap_CS_fsm_state66) or (ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            grp_fu_2417_ce <= ap_const_logic_1;
        else 
            grp_fu_2417_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2417_p1 <= ap_const_lv43_234(11 - 1 downto 0);
    grp_fu_2751_p1 <= tmp_164_cast1_reg_3563(32 - 1 downto 0);
    grp_fu_894_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_1));
    grp_fu_900_p3 <= grp_fu_894_p2(31 downto 31);
    grp_fu_908_p4 <= grp_fu_894_p2(31 downto 1);
    grp_fu_940_p2 <= std_logic_vector(unsigned(grp_filtep_fu_840_ap_return) + unsigned(grp_filtez_fu_794_ap_return));
    grp_logsch_fu_876_ap_start <= ap_reg_grp_logsch_fu_876_ap_start;

    grp_logsch_fu_876_ih_assign_proc : process(dec_ih, enc_ih, ap_CS_fsm_state13, ap_CS_fsm_state80)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_logsch_fu_876_ih <= enc_ih;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logsch_fu_876_ih <= dec_ih;
        else 
            grp_logsch_fu_876_ih <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_logsch_fu_876_nbh_assign_proc : process(dec_nbh, nbh, ap_CS_fsm_state13, ap_CS_fsm_state80)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_logsch_fu_876_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logsch_fu_876_nbh <= dec_nbh;
        else 
            grp_logsch_fu_876_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_868_ap_start <= ap_reg_grp_logscl_fu_868_ap_start;

    grp_logscl_fu_868_il_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state69, tmp_31_reg_2930, tmp_105_reg_3479)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_logscl_fu_868_il <= tmp_105_reg_3479;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logscl_fu_868_il <= tmp_31_reg_2930;
        else 
            grp_logscl_fu_868_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_868_nbl_assign_proc : process(dec_nbl, nbl, ap_CS_fsm_state13, ap_CS_fsm_state69)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_logscl_fu_868_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logscl_fu_868_nbl <= dec_nbl;
        else 
            grp_logscl_fu_868_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_856_ap_start <= ap_reg_grp_quantl_fu_856_ap_start;
    grp_scalel_fu_884_ap_start <= ap_reg_grp_scalel_fu_884_ap_start;

    grp_scalel_fu_884_nbl_assign_proc : process(reg_1005, reg_1010, ap_CS_fsm_state15, ap_CS_fsm_state71, ap_CS_fsm_state82, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state82)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_884_nbl <= reg_1010;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state71)))) then 
            grp_scalel_fu_884_nbl <= reg_1005;
        else 
            grp_scalel_fu_884_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_884_shift_constant_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state71, ap_CS_fsm_state82, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state82)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_884_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state71)))) then 
            grp_scalel_fu_884_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_884_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_832_al1_assign_proc : process(dec_ah1, reg_992, ap_CS_fsm_state15, reg_1037, reg_1050, ap_CS_fsm_state71, ap_CS_fsm_state82, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_uppol1_fu_832_al1 <= reg_1050;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state71))) then 
            grp_uppol1_fu_832_al1 <= reg_1037;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_832_al1 <= reg_992;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_832_al1 <= dec_ah1;
        else 
            grp_uppol1_fu_832_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_832_ap_start <= ap_reg_grp_uppol1_fu_832_ap_start;

    grp_uppol1_fu_832_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state15, ap_CS_fsm_state71, ap_CS_fsm_state82, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_uppol1_fu_832_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state71))) then 
            grp_uppol1_fu_832_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_832_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_832_plt <= dec_ph;
        else 
            grp_uppol1_fu_832_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_832_plt1_assign_proc : process(ap_CS_fsm_state15, dec_ph1_load_reg_3070, dec_plt1_load_reg_3087, plt1_load_reg_3533, ap_CS_fsm_state71, ph1_load_reg_3614, ap_CS_fsm_state82, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state82))) then 
            grp_uppol1_fu_832_plt1 <= ph1_load_reg_3614;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state71))) then 
            grp_uppol1_fu_832_plt1 <= plt1_load_reg_3533;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_832_plt1 <= dec_plt1_load_reg_3087;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_832_plt1 <= dec_ph1_load_reg_3070;
        else 
            grp_uppol1_fu_832_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_808_al1_assign_proc : process(dec_ah1, reg_992, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15, reg_1037, reg_1050)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_uppol2_fu_808_al1 <= reg_1050;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_uppol2_fu_808_al1 <= reg_1037;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_808_al1 <= reg_992;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_808_al1 <= dec_ah1;
        else 
            grp_uppol2_fu_808_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_808_al2_assign_proc : process(dec_ah2, reg_999, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15, reg_1044, reg_1057)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_uppol2_fu_808_al2 <= reg_1057;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_uppol2_fu_808_al2 <= reg_1044;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_808_al2 <= reg_999;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_808_al2 <= dec_ah2;
        else 
            grp_uppol2_fu_808_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_808_ap_start <= ap_reg_grp_uppol2_fu_808_ap_start;

    grp_uppol2_fu_808_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_uppol2_fu_808_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_uppol2_fu_808_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_808_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_808_plt <= dec_ph;
        else 
            grp_uppol2_fu_808_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_808_plt1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15, dec_ph1_load_reg_3070, dec_plt1_load_reg_3087, plt1_load_reg_3533, ph1_load_reg_3614)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_uppol2_fu_808_plt1 <= ph1_load_reg_3614;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_uppol2_fu_808_plt1 <= plt1_load_reg_3533;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_808_plt1 <= dec_plt1_load_reg_3087;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_808_plt1 <= dec_ph1_load_reg_3070;
        else 
            grp_uppol2_fu_808_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_808_plt2_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15, dec_ph2_load_reg_3076, dec_plt2_load_reg_3093, plt2_load_reg_3539, ph2_load_reg_3620)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_uppol2_fu_808_plt2 <= ph2_load_reg_3620;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_uppol2_fu_808_plt2 <= plt2_load_reg_3539;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_808_plt2 <= dec_plt2_load_reg_3093;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_808_plt2 <= dec_ph2_load_reg_3076;
        else 
            grp_uppol2_fu_808_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_817_ap_start <= ap_reg_grp_upzero_fu_817_ap_start;

    grp_upzero_fu_817_bli_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_upzero_fu_817_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_upzero_fu_817_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_817_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_817_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_817_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_817_dlt_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15, tmp_8_reg_2997, tmp_65_reg_3012, tmp_108_reg_3506, tmp_14_reg_3598)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_upzero_fu_817_dlt <= tmp_14_reg_3598;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_upzero_fu_817_dlt <= tmp_108_reg_3506;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_817_dlt <= tmp_65_reg_3012;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_817_dlt <= tmp_8_reg_2997;
        else 
            grp_upzero_fu_817_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_817_dlti_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_upzero_fu_817_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_upzero_fu_817_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_817_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_817_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_817_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_817_dlti_q1_assign_proc : process(dec_del_dltx_q1, dec_del_dhx_q1, delay_dltx_q1, delay_dhx_q1, ap_CS_fsm_state13, ap_CS_fsm_state69, ap_CS_fsm_state80, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state80))) then 
            grp_upzero_fu_817_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state69))) then 
            grp_upzero_fu_817_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_817_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_817_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_817_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter0, h_ptr_0_rec_i_i_cast_fu_1781_p1, tqmf_ptr_0_rec_i_i_c_fu_2096_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2096_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_1781_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter0, h_ptr_0_sum9_i_i_cas_fu_1798_p1, tqmf_ptr_0_sum67_i_i_1_fu_2108_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            h_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2108_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            h_address1 <= h_ptr_0_sum9_i_i_cas_fu_1798_p1(5 - 1 downto 0);
        else 
            h_address1 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)))) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_1781_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_reg_677),64));
    h_ptr_0_sum9_i_i_cas_fu_1798_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_1792_p2),64));
    h_ptr_0_sum9_i_i_fu_1792_p2 <= (h_ptr_0_rec_i_i_reg_677 or ap_const_lv5_1);
    i_4_fu_2236_p2 <= std_logic_vector(unsigned(i_1_i_i_reg_783) + unsigned(ap_const_lv5_1));
    i_5_fu_1958_p2 <= std_logic_vector(unsigned(i_1_i_i4_reg_719) + unsigned(ap_const_lv4_1));
    i_6_fu_2707_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(i_0_i_reg_654));
    i_7_fu_2014_p2 <= std_logic_vector(unsigned(i_0_i1_reg_642) + unsigned(ap_const_lv32_2));
    i_fu_2090_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_741) + unsigned(ap_const_lv4_1));
    m_fu_2563_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2509_p2));
    n_assign_1_fu_2569_p3 <= 
        m_fu_2563_p2 when (tmp_37_fu_2555_p3(0) = '1') else 
        n_assign_fu_2509_p2;
    n_assign_fu_2509_p2 <= std_logic_vector(unsigned(xh) - unsigned(tmp_116_reg_3544));
    p_lshr2_fu_1119_p4 <= p_neg2_fu_1113_p2(31 downto 1);
    p_lshr3_fu_1081_p4 <= p_neg3_fu_1075_p2(31 downto 1);
    p_lshr_f1_fu_1194_p4 <= i_0_i1_reg_642(31 downto 1);
    p_lshr_f_fu_2685_p4 <= i_0_i_reg_654(31 downto 1);
    p_lshr_fu_2665_p4 <= p_neg_fu_2659_p2(31 downto 1);
    p_neg1_fu_1156_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i1_reg_642));
    p_neg2_fu_1113_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg3_fu_1075_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg_fu_2659_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i_reg_654));
    p_neg_t1_fu_1188_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_9_fu_1185_p1));
    p_neg_t2_fu_1129_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr2_fu_1119_p4));
    p_neg_t3_fu_1091_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr3_fu_1081_p4));
    p_neg_t_fu_2679_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_15_fu_2675_p1));
    p_rec2_i_i_fu_1775_p2 <= std_logic_vector(unsigned(ad_ptr_0_rec_i_i_reg_666) + unsigned(ap_const_lv4_1));
    p_rec_i_i_fu_1970_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_708) + unsigned(ap_const_lv5_1F));
        p_shl2_cast_fu_2066_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2058_p3),37));

    p_shl2_fu_2058_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_1740_p1 <= std_logic_vector(resize(signed(p_shl3_fu_1733_p3),37));

    p_shl3_fu_1733_p3 <= (tmp_87_reg_3104 & ap_const_lv4_0);
        p_shl4_cast_fu_1751_p1 <= std_logic_vector(resize(signed(p_shl4_fu_1744_p3),37));

    p_shl4_fu_1744_p3 <= (tmp_87_reg_3104 & ap_const_lv2_0);
        p_shl5_cast_fu_2199_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2191_p3),37));

    p_shl5_fu_2191_p3 <= (tqmf_q1 & ap_const_lv4_0);
        p_shl6_cast_fu_2211_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2203_p3),37));

    p_shl6_fu_2203_p3 <= (tqmf_q1 & ap_const_lv2_0);
        p_shl7_cast_fu_1880_p1 <= std_logic_vector(resize(signed(p_shl7_fu_1872_p3),37));

    p_shl7_fu_1872_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_1892_p1 <= std_logic_vector(resize(signed(p_shl8_fu_1884_p3),37));

    p_shl8_fu_1884_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_2054_p1 <= std_logic_vector(resize(signed(p_shl_fu_2046_p3),37));

    p_shl_fu_2046_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2265_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_reg_3423),64));
    p_sum_i_i_fu_2242_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_772) + unsigned(ap_const_lv6_17));
        p_trunc2_ext_fu_1642_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_832_ap_return),32));

        p_trunc3_ext_fu_2593_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_832_ap_return),32));

    p_trunc44_ext_fu_2838_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_884_ap_return),32));
    p_trunc45_ext_fu_1632_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_884_ap_return),32));
    p_trunc46_ext_fu_1691_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_884_ap_return),32));
        p_trunc4_ext_fu_2848_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_832_ap_return),32));

        p_trunc_ext1_fu_1681_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_832_ap_return),32));

    p_trunc_ext_fu_2583_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_884_ap_return),32));
    phitmp_i_i3_fu_1803_p2 <= std_logic_vector(unsigned(h_ptr_0_rec_i_i_reg_677) + unsigned(ap_const_lv5_2));
    phitmp_i_i_fu_2114_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_rec_i_i_reg_730) + unsigned(ap_const_lv5_2));

    qq2_code2_table_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state72, tmp_78_fu_1259_p1, tmp_121_fu_2717_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state72))) then 
            qq2_code2_table_address0 <= tmp_121_fu_2717_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            qq2_code2_table_address0 <= tmp_78_fu_1259_p1(2 - 1 downto 0);
        else 
            qq2_code2_table_address0 <= "XX";
        end if; 
    end process;


    qq2_code2_table_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state72)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state72)))) then 
            qq2_code2_table_ce0 <= ap_const_logic_1;
        else 
            qq2_code2_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state61, tmp_63_fu_1264_p1, tmp_106_fu_2369_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
            qq4_code4_table_address0 <= tmp_106_fu_2369_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            qq4_code4_table_address0 <= tmp_63_fu_1264_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_794_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state61, grp_quantl_fu_856_ap_done)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state61) and not(((ap_const_logic_0 = grp_filtez_fu_794_ap_done) or (ap_const_logic_0 = grp_quantl_fu_856_ap_done)))))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_67_fu_1272_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Addr_A <= std_logic_vector(shift_left(unsigned(test_data_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    test_data_Addr_A_orig_assign_proc : process(ap_CS_fsm_state39, ap_CS_fsm_state40, tmp_46_fu_2030_p1, tmp_55_fu_2041_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            test_data_Addr_A_orig <= tmp_55_fu_2041_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            test_data_Addr_A_orig <= tmp_46_fu_2030_p1(32 - 1 downto 0);
        else 
            test_data_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    test_data_Din_A <= ap_const_lv32_0;

    test_data_EN_A_assign_proc : process(ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
            test_data_EN_A <= ap_const_logic_1;
        else 
            test_data_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    test_data_WEN_A <= ap_const_lv4_0;
    tmp_100_fu_2289_p2 <= std_logic_vector(unsigned(xa_1_reg_3402) - unsigned(xb_1_reg_3408));
    tmp_104_ext_fu_1671_p1 <= std_logic_vector(resize(unsigned(reg_1010),32));
    tmp_104_fu_2325_p2 <= std_logic_vector(unsigned(tmp_99_reg_3438) - unsigned(grp_fu_940_p2));
    tmp_106_fu_2369_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_2359_p4),64));
        tmp_107_ext_fu_1562_p1 <= std_logic_vector(resize(signed(reg_1015),32));

    tmp_109_fu_2423_p2 <= std_logic_vector(unsigned(tmp_108_reg_3506) + unsigned(reg_988));
    tmp_10_fu_2542_p4 <= tmp_117_reg_3549(42 downto 12);
    tmp_114_fu_2611_p2 <= std_logic_vector(unsigned(sl) + unsigned(dlt));
        tmp_115_cast_fu_2183_p1 <= std_logic_vector(resize(signed(tmp_88_reg_3397),47));

    tmp_116_fu_2475_p2 <= std_logic_vector(unsigned(tmp_115_reg_3468) + unsigned(tmp_54_reg_3490));
        tmp_117_cast_fu_2221_p1 <= std_logic_vector(resize(signed(tmp_89_fu_2215_p2),47));

    tmp_118_fu_2577_p2 <= "1" when (signed(n_assign_1_fu_2569_p3) > signed(decis_fu_2551_p1)) else "0";
        tmp_119_fu_1993_p1 <= std_logic_vector(resize(signed(i_0_i1_reg_642),64));

    tmp_11_fu_1204_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1194_p4),32));
        tmp_120_cast_fu_2147_p1 <= std_logic_vector(resize(signed(tmp_90_reg_3362),50));

    tmp_120_fu_1998_p2 <= "1" when (signed(i_0_i1_reg_642) < signed(tmp_s_reg_2894)) else "0";
        tmp_121_fu_2717_p1 <= std_logic_vector(resize(signed(enc_ih),64));

        tmp_123_cast_fu_2156_p1 <= std_logic_vector(resize(signed(tmp_91_reg_3367),50));

        tmp_125_cast_fu_1928_p1 <= std_logic_vector(resize(signed(tmp_92_reg_3215),46));

    tmp_125_fu_2775_p2 <= std_logic_vector(signed(tmp_14_fu_2766_p1) + signed(tmp_54_reg_3490));
        tmp_127_cast_fu_1902_p1 <= std_logic_vector(resize(signed(tmp_93_fu_1896_p2),46));

    tmp_128_fu_2866_p2 <= std_logic_vector(unsigned(dh) + unsigned(sh));
    tmp_130_fu_2699_p3 <= 
        p_neg_t_fu_2679_p2 when (tmp_39_fu_2651_p3(0) = '1') else 
        tmp_16_fu_2695_p1;
        tmp_131_fu_2743_p1 <= std_logic_vector(resize(signed(tmp_130_reg_3568),64));

    tmp_132_fu_2003_p2 <= (i_0_i1_reg_642 or ap_const_lv32_1);
        tmp_133_fu_2009_p1 <= std_logic_vector(resize(signed(tmp_132_fu_2003_p2),64));

        tmp_134_cast_fu_1836_p1 <= std_logic_vector(resize(signed(tmp_96_reg_3185),50));

        tmp_137_cast_fu_1845_p1 <= std_logic_vector(resize(signed(tmp_97_reg_3190),50));

    tmp_147_ext_fu_2434_p1 <= std_logic_vector(resize(unsigned(tmp_105_reg_3479),32));
        tmp_14_fu_2766_p1 <= std_logic_vector(resize(signed(tmp_13_reg_3593),32));

    tmp_154_ext_fu_2485_p1 <= std_logic_vector(resize(unsigned(reg_1005),32));
        tmp_157_ext_fu_2495_p1 <= std_logic_vector(resize(signed(reg_1015),32));

    tmp_15_fu_2675_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2665_p4),32));
    tmp_163_cast_cast_ca_fu_2528_p3 <= 
        ap_const_lv32_1 when (tmp_36_fu_2520_p3(0) = '1') else 
        ap_const_lv32_3;
        tmp_164_cast1_fu_2635_p1 <= std_logic_vector(resize(signed(deth),45));

    tmp_169_cast_cast_ca_fu_2638_p3 <= 
        ap_const_lv32_0 when (tmp_36_reg_3554(0) = '1') else 
        ap_const_lv32_2;
    tmp_16_fu_2695_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_2685_p4),32));
    tmp_175_ext_fu_2818_p1 <= std_logic_vector(resize(unsigned(reg_1010),32));
        tmp_178_ext_fu_2828_p1 <= std_logic_vector(resize(signed(reg_1015),32));

    tmp_21_fu_1135_p3 <= 
        p_neg_t2_fu_1129_p2 when (grp_fu_900_p3(0) = '1') else 
        grp_fu_908_p4;
    tmp_22_fu_1143_p3 <= (tmp_21_fu_1135_p3 & ap_const_lv1_0);
    tmp_26_fu_1097_p3 <= 
        p_neg_t3_fu_1091_p2 when (grp_fu_900_p3(0) = '1') else 
        grp_fu_908_p4;
    tmp_27_fu_1105_p3 <= (tmp_26_fu_1097_p3 & ap_const_lv1_0);
    tmp_28_fu_1172_p2 <= "1" when (i_0_i_reg_654 = tmp_22_reg_2909) else "0";
    tmp_29_fu_1151_p2 <= "1" when (i_0_i1_reg_642 = tmp_27_reg_2904) else "0";
    tmp_30_fu_1177_p3 <= i_0_i1_reg_642(31 downto 31);
    tmp_31_fu_1221_p1 <= compressed_Dout_A(6 - 1 downto 0);
    tmp_32_fu_2175_p1 <= xb_0_i_i_reg_762(47 - 1 downto 0);
    tmp_33_fu_2179_p1 <= xa_0_i_i_reg_752(47 - 1 downto 0);
    tmp_34_fu_1864_p1 <= xa1_0_i_i_reg_698(46 - 1 downto 0);
    tmp_35_fu_1868_p1 <= xa2_0_i_i_reg_688(46 - 1 downto 0);
    tmp_36_fu_2520_p3 <= n_assign_fu_2509_p2(31 downto 31);
    tmp_37_fu_2555_p3 <= n_assign_fu_2509_p2(31 downto 31);
    tmp_38_fu_2730_p2 <= std_logic_vector(shift_left(unsigned(enc_ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_39_fu_2651_p3 <= i_0_i_reg_654(31 downto 31);
    tmp_44_fu_1225_p4 <= compressed_Dout_A(31 downto 6);
        tmp_46_fu_2030_p1 <= std_logic_vector(resize(signed(i_0_i_reg_654),64));

    tmp_52_fu_2359_p4 <= grp_quantl_fu_856_ap_return(5 downto 2);
    tmp_53_fu_2035_p2 <= (i_0_i_reg_654 or ap_const_lv32_1);
        tmp_55_fu_2041_p1 <= std_logic_vector(resize(signed(tmp_53_fu_2035_p2),64));

    tmp_56_fu_1208_p3 <= 
        p_neg_t1_fu_1188_p2 when (tmp_30_fu_1177_p3(0) = '1') else 
        tmp_11_fu_1204_p1;
        tmp_59_fu_1216_p1 <= std_logic_vector(resize(signed(tmp_56_fu_1208_p3),64));

        tmp_60_fu_1235_p1 <= std_logic_vector(resize(signed(tmp_44_fu_1225_p4),32));

    tmp_63_fu_1264_p1 <= std_logic_vector(resize(unsigned(tmp_47_reg_2936),64));
    tmp_66_fu_1485_p2 <= std_logic_vector(unsigned(tmp_65_reg_3012) + unsigned(grp_filtez_fu_794_ap_return));
        tmp_67_fu_1272_p1 <= std_logic_vector(resize(signed(dec_il),64));

    tmp_70_fu_1490_p2 <= std_logic_vector(unsigned(grp_fu_940_p2) + unsigned(tmp_69_reg_3018));
    tmp_75_fu_1709_p2 <= std_logic_vector(unsigned(dec_sl) + unsigned(dec_dlt));
    tmp_77_fu_1507_p2 <= std_logic_vector(unsigned(grp_filtep_fu_848_ap_return) + unsigned(reg_988));
        tmp_78_cast_fu_1299_p1 <= std_logic_vector(resize(signed(dec_detl),47));

        tmp_78_fu_1259_p1 <= std_logic_vector(resize(signed(dec_ih),64));

    tmp_80_fu_1341_p2 <= std_logic_vector(signed(tmp_8_fu_1338_p1) + signed(grp_filtez_fu_794_ap_return));
    tmp_85_fu_1580_p2 <= std_logic_vector(unsigned(dec_sh) + unsigned(dec_dh));
    tmp_86_fu_1608_p2 <= std_logic_vector(unsigned(tmp_85_fu_1580_p2) + unsigned(dec_rl));
    tmp_87_fu_1614_p2 <= std_logic_vector(unsigned(dec_rl) - unsigned(tmp_85_fu_1580_p2));
    tmp_89_fu_2215_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2199_p1) - signed(p_shl6_cast_fu_2211_p1));
        tmp_8_fu_1338_p1 <= std_logic_vector(resize(signed(tmp_7_reg_2992),32));

    tmp_90_ext_fu_1525_p1 <= std_logic_vector(resize(unsigned(reg_1005),32));
        tmp_93_ext_fu_1661_p1 <= std_logic_vector(resize(signed(reg_1015),32));

    tmp_93_fu_1896_p2 <= std_logic_vector(signed(p_shl7_cast_fu_1880_p1) - signed(p_shl8_cast_fu_1892_p1));
    tmp_98_fu_2269_p2 <= std_logic_vector(unsigned(xa_1_reg_3402) + unsigned(xb_1_reg_3408));
    tmp_9_fu_1185_p1 <= std_logic_vector(resize(unsigned(p_lshr1_reg_2917),32));
    tmp_fu_1063_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";
    tmp_s_fu_1069_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_FFFFFFFF));

    tqmf_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state58, ap_CS_fsm_state2, ap_CS_fsm_state40, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, tqmf_ptr_0_rec_i_i_c_fu_2096_p1, tqmf_ptr_0_sum_i_i_c_fu_2260_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0))) then 
            tqmf_address0 <= tqmf_ptr_0_sum_i_i_c_fu_2260_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2096_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state58, ap_enable_reg_pp2_iter0, ap_CS_fsm_state54, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, tqmf_ptr_0_sum67_i_i_1_fu_2108_p1, p_sum_i_i_cast_fu_2265_p1, ap_CS_fsm_state49)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            tqmf_address1 <= ap_const_lv5_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            tqmf_address1 <= p_sum_i_i_cast_fu_2265_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            tqmf_address1 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            tqmf_address1 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            tqmf_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2108_p1(5 - 1 downto 0);
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state58, ap_CS_fsm_state2, ap_CS_fsm_state40, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter0)))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state58, ap_enable_reg_pp2_iter0, ap_CS_fsm_state54, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_state49)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d1_assign_proc : process(tqmf_q0, ap_CS_fsm_state58, test_data_load_1_reg_3288, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            tqmf_d1 <= test_data_load_1_reg_3288;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1))) then 
            tqmf_d1 <= tqmf_q0;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr1_0_rec_i_i_fu_2248_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_772) + unsigned(ap_const_lv6_3F));
    tqmf_ptr_0_rec_i_i_c_fu_2096_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_730),64));
    tqmf_ptr_0_sum67_i_i_1_fu_2108_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2102_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2102_p2 <= (tqmf_ptr_0_rec_i_i_reg_730 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2260_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_fu_2254_p2),64));
    tqmf_ptr_0_sum_i_i_fu_2254_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_772) + unsigned(ap_const_lv6_15));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state58, exitcond_i_i_reg_3414, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_enable_reg_pp3_iter1) and (ap_const_lv1_0 = exitcond_i_i_reg_3414)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_1931_p2 <= std_logic_vector(unsigned(tmp_34_reg_3210) + unsigned(tmp_125_cast_fu_1928_p1));
    xa1_2_fu_1839_p2 <= std_logic_vector(signed(tmp_134_cast_fu_1836_p1) + signed(xa1_0_i_i_reg_698));
        xa1_cast_fu_1761_p1 <= std_logic_vector(resize(signed(xa1_fu_1755_p2),50));

    xa1_fu_1755_p2 <= std_logic_vector(signed(p_shl3_cast_fu_1740_p1) - signed(p_shl4_cast_fu_1751_p1));
    xa2_1_fu_1906_p2 <= std_logic_vector(unsigned(tmp_35_fu_1868_p1) + unsigned(tmp_127_cast_fu_1902_p1));
    xa2_2_fu_1848_p2 <= std_logic_vector(signed(tmp_137_cast_fu_1845_p1) + signed(xa2_0_i_i_reg_688));
        xa2_cast_fu_1765_p1 <= std_logic_vector(resize(signed(grp_fu_1655_p2),50));

    xa_1_fu_2186_p2 <= std_logic_vector(unsigned(tmp_33_reg_3392) + unsigned(tmp_115_cast_fu_2183_p1));
    xa_2_fu_2150_p2 <= std_logic_vector(signed(tmp_120_cast_fu_2147_p1) + signed(xa_0_i_i_reg_752));
        xa_cast_fu_2076_p1 <= std_logic_vector(resize(signed(xa_fu_2070_p2),50));

    xa_fu_2070_p2 <= std_logic_vector(signed(p_shl_cast_fu_2054_p1) - signed(p_shl2_cast_fu_2066_p1));
    xb_1_fu_2225_p2 <= std_logic_vector(unsigned(tmp_32_reg_3387) + unsigned(tmp_117_cast_fu_2221_p1));
    xb_2_fu_2159_p2 <= std_logic_vector(signed(tmp_123_cast_fu_2156_p1) + signed(xb_0_i_i_reg_762));
        xb_cast_fu_2080_p1 <= std_logic_vector(resize(signed(grp_fu_2024_p2),50));

end behav;
