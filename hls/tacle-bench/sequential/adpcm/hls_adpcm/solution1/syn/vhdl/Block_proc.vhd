-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_EN_A : OUT STD_LOGIC;
    dec_result_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    dec_result_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_result_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_EN_A : OUT STD_LOGIC;
    test_data_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_data_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_data_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_EN_A : OUT STD_LOGIC;
    compressed_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    compressed_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (77 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (77 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (77 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (77 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (77 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (77 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (77 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (77 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (77 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (77 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (77 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (77 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dec_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_we0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_we0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq2_code2_table_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal qq2_code2_table_ce0 : STD_LOGIC;
    signal qq2_code2_table_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal tqmf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce1 : STD_LOGIC;
    signal h_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_we0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_we0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal enc_ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_we0 : STD_LOGIC;
    signal accumc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_we0 : STD_LOGIC;
    signal accumd_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_957 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal reg_961 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal grp_filtez_fu_771_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_965 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_filtez_fu_771_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_filtep_fu_817_ap_done : STD_LOGIC;
    signal grp_filtep_fu_825_ap_done : STD_LOGIC;
    signal reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logscl_fu_845_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_982 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_logscl_fu_845_ap_done : STD_LOGIC;
    signal grp_logsch_fu_853_ap_done : STD_LOGIC;
    signal grp_upzero_fu_794_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_785_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state65 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal grp_logsch_fu_853_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_987 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_uppol2_fu_785_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_992 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_scalel_fu_861_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_809_ap_done : STD_LOGIC;
    signal reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal reg_1001 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal reg_1005 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_1009 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal exitcond_i_i_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal reg_1020 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2871 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1045_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2875 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_1081_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_2885 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1119_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_2890 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_reg_2898 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_39_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_46_fu_1197_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_46_reg_2911 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_18_reg_2917 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal qq6_code6_table_load_reg_2952 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_cast_fu_1275_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_10_reg_2973 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_11_fu_1314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_2978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_2993 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_2999 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph1_load_reg_3051 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_3057 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt1_load_reg_3068 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_3074 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_1584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_3079 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_1590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_3085 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_1737_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal xa2_cast_fu_1741_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_rec2_i_i_fu_1762_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec2_i_i_reg_3125 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_1756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i3_fu_1779_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i3_reg_3135 : STD_LOGIC_VECTOR (4 downto 0);
    signal accumd_load_1_reg_3140 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_fu_1793_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_85_reg_3165 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_fu_1806_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_86_reg_3170 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_2_fu_1815_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal xa2_2_fu_1824_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_fu_1834_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_81_reg_3190 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_83_reg_3195 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_84_reg_3200 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_addr_1_reg_3205 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal accumd_addr_1_reg_3210 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_i_fu_1941_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec_i_i_reg_3215 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_fu_1965_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_3233 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_3238 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_i5_fu_1959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_1992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal test_data_load_reg_3257 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal test_data_load_1_reg_3267 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal xa_cast_fu_2054_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_2058_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal i_fu_2074_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3295 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_i_i_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i_fu_2092_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i_reg_3310 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr_load_reg_3315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_fu_2106_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_79_reg_3340 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_fu_2119_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_80_reg_3345 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa_2_fu_2128_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal xb_2_fu_2137_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_fu_2147_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_77_reg_3365 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal xa_1_fu_2164_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_1_reg_3370 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal xb_1_fu_2204_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_1_reg_3376 : STD_LOGIC_VECTOR (46 downto 0);
    signal tqmf_addr_2_reg_3382 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr1_0_rec_i_i_fu_2221_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr1_0_rec_i_i_reg_3387 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_4_fu_2244_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_3400 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_88_reg_3405 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_2306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_reg_3430 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_825_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_reg_3435 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_quantl_fu_833_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_94_reg_3446 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_quantl_fu_833_ap_done : STD_LOGIC;
    signal tmp_23_reg_3457 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal tmp_97_reg_3473 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal plt1_load_reg_3500 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3506 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2456_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_3511 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2398_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_106_reg_3516 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_125_fu_2501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_reg_3521 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal tmp_107_fu_2558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_reg_3526 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_cast1_fu_2616_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_159_cast1_reg_3530 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal tmp_120_fu_2680_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_reg_3535 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_fu_2688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_reg_3540 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal tmp_26_reg_3560 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal tmp_27_fu_2747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_3565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ph1_load_reg_3581 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3587 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_771_ap_start : STD_LOGIC;
    signal grp_filtez_fu_771_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_771_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_771_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_771_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_771_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_771_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_771_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_771_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_785_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_785_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_785_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_785_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_785_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_785_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_785_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_785_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_ap_start : STD_LOGIC;
    signal grp_upzero_fu_794_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_794_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_794_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_794_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_794_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_794_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_794_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_794_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_794_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_794_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_794_bli_we0 : STD_LOGIC;
    signal grp_upzero_fu_794_bli_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_794_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_809_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_809_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_809_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_809_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_809_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_809_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_809_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_filtep_fu_817_ap_start : STD_LOGIC;
    signal grp_filtep_fu_817_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_817_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_817_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_817_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_825_ap_start : STD_LOGIC;
    signal grp_filtep_fu_825_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_825_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_825_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_825_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_825_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_825_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_833_ap_start : STD_LOGIC;
    signal grp_quantl_fu_833_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_833_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_845_ap_start : STD_LOGIC;
    signal grp_logscl_fu_845_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_845_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_845_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_845_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_853_ap_start : STD_LOGIC;
    signal grp_logsch_fu_853_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_853_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_853_ih : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_853_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_861_ap_start : STD_LOGIC;
    signal grp_scalel_fu_861_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_861_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_861_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_861_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_861_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_i1_reg_619 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_631 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ad_ptr_0_rec_i_i_reg_643 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_reg_654 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_0_i_i_reg_665 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa1_0_i_i_reg_675 : STD_LOGIC_VECTOR (49 downto 0);
    signal ad_ptr_1_rec_i_i_reg_685 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal i_1_i_i4_reg_696 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_rec_i_i_reg_707 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_718 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_729 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_739 : STD_LOGIC_VECTOR (49 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_749 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal i_1_i_i_reg_760 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_filtez_fu_771_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_785_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_upzero_fu_794_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_809_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_reg_grp_filtep_fu_817_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_825_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_833_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_845_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_853_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_861_ap_start : STD_LOGIC := '0';
    signal tmp_45_fu_1192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_1248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_1745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_1750_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_1774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_1935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_1953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_1971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_2019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_fu_2350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_110_fu_2698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext1_fu_1657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_ext_fu_1637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc45_ext_fu_1608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_ext_fu_1501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1461_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc2_ext_fu_1618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_ext_fu_1538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc46_ext_fu_1667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_ext_fu_1647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_2592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc3_ext_fu_2574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_ext_fu_2476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext_fu_2564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_142_ext_fu_2415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_ext_fu_2466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_98_fu_2404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal tmp_117_fu_2847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc4_ext_fu_2829_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_ext_fu_2809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_cast_cast_ca_fu_2509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_164_cast_cast_ca_fu_2619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc44_ext_fu_2819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_170_ext_fu_2799_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_2756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal compressed_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_result_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal test_data_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr3_fu_1057_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t3_fu_1067_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_885_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_36_fu_1073_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg2_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr2_fu_1095_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t2_fu_1105_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_fu_1111_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg1_fu_1132_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1170_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_43_fu_1153_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1201_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1265_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_1283_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1292_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1631_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_fu_1709_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_1720_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_1716_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_1727_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_1731_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1631_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_1768_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_129_cast_fu_1812_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_132_cast_fu_1821_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1834_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_118_fu_1840_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_120_cast_fu_1848_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_shl7_fu_1857_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_1869_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_1865_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_1877_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_82_fu_1881_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_124_fu_1844_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_122_cast_fu_1887_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_1851_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_1_fu_1891_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ac_ptr_0_sum_i_i_fu_1929_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_0_sum7_i_i_fu_1947_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_122_fu_1981_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2002_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_41_fu_2013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_2024_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_2036_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_2032_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_2044_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_2048_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_2002_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2080_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_115_cast_fu_2125_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_118_cast_fu_2134_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_2147_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_76_fu_2157_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_110_cast_fu_2161_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl5_fu_2170_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2182_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2178_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2190_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_78_fu_2194_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_75_fu_2153_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_112_cast_fu_2200_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_sum_i_i_fu_2210_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr_0_sum_i_i_fu_2227_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_87_fu_2250_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_89_fu_2270_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_21_fu_2340_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2368_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_2398_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_2523_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_126_fu_2536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2550_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2646_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_22_fu_2656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_2666_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_128_fu_2632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_2676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_2711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2732_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_38_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1283_ce : STD_LOGIC;
    signal grp_fu_1292_ce : STD_LOGIC;
    signal grp_fu_1631_ce : STD_LOGIC;
    signal grp_fu_2398_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (77 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_we0 : OUT STD_LOGIC;
        bli_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_14tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_16udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_7svdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component Block_proc_dec_deibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_dec_dejbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq6_colbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq2_coocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Block_proc_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Block_proc_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dec_del_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        we0 => dec_del_bpl_we0,
        d0 => grp_upzero_fu_794_bli_d0,
        q0 => dec_del_bpl_q0);

    dec_del_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_794_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_794_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_794_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq4_code4_table_U : component Block_proc_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component Block_proc_qq6_colbW
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        we0 => dec_del_bph_we0,
        d0 => grp_upzero_fu_794_bli_d0,
        q0 => dec_del_bph_q0);

    dec_del_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_794_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_794_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_794_dlti_d1,
        q1 => dec_del_dhx_q1);

    qq2_code2_table_U : component Block_proc_qq2_coocq
    generic map (
        DataWidth => 14,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq2_code2_table_address0,
        ce0 => qq2_code2_table_ce0,
        q0 => qq2_code2_table_q0);

    tqmf_U : component Block_proc_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => test_data_load_1_reg_3267,
        q0 => tqmf_q0,
        address1 => tqmf_address1,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => tqmf_d1,
        q1 => tqmf_q1);

    h_U : component Block_proc_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0,
        address1 => h_address1,
        ce1 => h_ce1,
        q1 => h_q1);

    delay_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        we0 => delay_bpl_we0,
        d0 => grp_upzero_fu_794_bli_d0,
        q0 => delay_bpl_q0);

    delay_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_794_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_794_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_794_dlti_d1,
        q1 => delay_dltx_q1);

    delay_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        we0 => delay_bph_we0,
        d0 => grp_upzero_fu_794_bli_d0,
        q0 => delay_bph_q0);

    delay_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_794_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_794_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_794_dlti_d1,
        q1 => delay_dhx_q1);

    accumc_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        we0 => accumc_we0,
        d0 => accumc_d0,
        q0 => accumc_q0);

    accumd_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        we0 => accumd_we0,
        d0 => accumd_d0,
        q0 => accumd_q0);

    grp_filtez_fu_771 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_771_ap_start,
        ap_done => grp_filtez_fu_771_ap_done,
        ap_idle => grp_filtez_fu_771_ap_idle,
        ap_ready => grp_filtez_fu_771_ap_ready,
        bpl_address0 => grp_filtez_fu_771_bpl_address0,
        bpl_ce0 => grp_filtez_fu_771_bpl_ce0,
        bpl_q0 => grp_filtez_fu_771_bpl_q0,
        dlt_address0 => grp_filtez_fu_771_dlt_address0,
        dlt_ce0 => grp_filtez_fu_771_dlt_ce0,
        dlt_q0 => grp_filtez_fu_771_dlt_q0,
        ap_return => grp_filtez_fu_771_ap_return);

    grp_uppol2_fu_785 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_785_ap_start,
        ap_done => grp_uppol2_fu_785_ap_done,
        ap_idle => grp_uppol2_fu_785_ap_idle,
        ap_ready => grp_uppol2_fu_785_ap_ready,
        al1 => grp_uppol2_fu_785_al1,
        al2 => grp_uppol2_fu_785_al2,
        plt => grp_uppol2_fu_785_plt,
        plt1 => grp_uppol2_fu_785_plt1,
        plt2 => grp_uppol2_fu_785_plt2,
        ap_return => grp_uppol2_fu_785_ap_return);

    grp_upzero_fu_794 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_794_ap_start,
        ap_done => grp_upzero_fu_794_ap_done,
        ap_idle => grp_upzero_fu_794_ap_idle,
        ap_ready => grp_upzero_fu_794_ap_ready,
        dlt => grp_upzero_fu_794_dlt,
        dlti_address0 => grp_upzero_fu_794_dlti_address0,
        dlti_ce0 => grp_upzero_fu_794_dlti_ce0,
        dlti_we0 => grp_upzero_fu_794_dlti_we0,
        dlti_d0 => grp_upzero_fu_794_dlti_d0,
        dlti_q0 => grp_upzero_fu_794_dlti_q0,
        dlti_address1 => grp_upzero_fu_794_dlti_address1,
        dlti_ce1 => grp_upzero_fu_794_dlti_ce1,
        dlti_we1 => grp_upzero_fu_794_dlti_we1,
        dlti_d1 => grp_upzero_fu_794_dlti_d1,
        dlti_q1 => grp_upzero_fu_794_dlti_q1,
        bli_address0 => grp_upzero_fu_794_bli_address0,
        bli_ce0 => grp_upzero_fu_794_bli_ce0,
        bli_we0 => grp_upzero_fu_794_bli_we0,
        bli_d0 => grp_upzero_fu_794_bli_d0,
        bli_q0 => grp_upzero_fu_794_bli_q0);

    grp_uppol1_fu_809 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_809_ap_start,
        ap_done => grp_uppol1_fu_809_ap_done,
        ap_idle => grp_uppol1_fu_809_ap_idle,
        ap_ready => grp_uppol1_fu_809_ap_ready,
        al1 => grp_uppol1_fu_809_al1,
        apl2 => reg_992,
        plt => grp_uppol1_fu_809_plt,
        plt1 => grp_uppol1_fu_809_plt1,
        ap_return => grp_uppol1_fu_809_ap_return);

    grp_filtep_fu_817 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_817_ap_start,
        ap_done => grp_filtep_fu_817_ap_done,
        ap_idle => grp_filtep_fu_817_ap_idle,
        ap_ready => grp_filtep_fu_817_ap_ready,
        rlt1 => grp_filtep_fu_817_rlt1,
        al1 => grp_filtep_fu_817_al1,
        rlt2 => grp_filtep_fu_817_rlt2,
        al2 => grp_filtep_fu_817_al2,
        ap_return => grp_filtep_fu_817_ap_return);

    grp_filtep_fu_825 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_825_ap_start,
        ap_done => grp_filtep_fu_825_ap_done,
        ap_idle => grp_filtep_fu_825_ap_idle,
        ap_ready => grp_filtep_fu_825_ap_ready,
        rlt1 => grp_filtep_fu_825_rlt1,
        al1 => grp_filtep_fu_825_al1,
        rlt2 => grp_filtep_fu_825_rlt2,
        al2 => grp_filtep_fu_825_al2,
        ap_return => grp_filtep_fu_825_ap_return);

    grp_quantl_fu_833 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_833_ap_start,
        ap_done => grp_quantl_fu_833_ap_done,
        ap_idle => grp_quantl_fu_833_ap_idle,
        ap_ready => grp_quantl_fu_833_ap_ready,
        el => tmp_93_reg_3430,
        detl => detl,
        ap_return => grp_quantl_fu_833_ap_return);

    grp_logscl_fu_845 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_845_ap_start,
        ap_done => grp_logscl_fu_845_ap_done,
        ap_idle => grp_logscl_fu_845_ap_idle,
        ap_ready => grp_logscl_fu_845_ap_ready,
        il => grp_logscl_fu_845_il,
        nbl => grp_logscl_fu_845_nbl,
        ap_return => grp_logscl_fu_845_ap_return);

    grp_logsch_fu_853 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_853_ap_start,
        ap_done => grp_logsch_fu_853_ap_done,
        ap_idle => grp_logsch_fu_853_ap_idle,
        ap_ready => grp_logsch_fu_853_ap_ready,
        ih => grp_logsch_fu_853_ih,
        nbh => grp_logsch_fu_853_nbh,
        ap_return => grp_logsch_fu_853_ap_return);

    grp_scalel_fu_861 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_861_ap_start,
        ap_done => grp_scalel_fu_861_ap_done,
        ap_idle => grp_scalel_fu_861_ap_idle,
        ap_ready => grp_scalel_fu_861_ap_ready,
        nbl => grp_scalel_fu_861_nbl,
        shift_constant => grp_scalel_fu_861_shift_constant,
        ap_return => grp_scalel_fu_861_ap_return);

    adpcm_main_mul_14tde_U42 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_957,
        din1 => dec_deth,
        ce => ap_const_logic_1,
        dout => grp_fu_1265_p2);

    adpcm_main_mul_16udo_U43 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_961,
        din1 => grp_fu_1283_p1,
        ce => grp_fu_1283_ce,
        dout => grp_fu_1283_p2);

    adpcm_main_mul_16udo_U44 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq6_code6_table_load_reg_2952,
        din1 => grp_fu_1292_p1,
        ce => grp_fu_1292_ce,
        dout => grp_fu_1292_p2);

    adpcm_main_mul_7svdy_U45 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1631_p0,
        din1 => tmp_73_reg_3079,
        ce => grp_fu_1631_ce,
        dout => grp_fu_1631_p2);

    adpcm_main_mul_32wdI_U46 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_997,
        din1 => reg_1001,
        ce => ap_const_logic_1,
        dout => grp_fu_1793_p2);

    adpcm_main_mul_32wdI_U47 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_1_reg_3140,
        din1 => reg_1005,
        ce => ap_const_logic_1,
        dout => grp_fu_1806_p2);

    adpcm_main_mul_7svdy_U48 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1834_p0,
        din1 => reg_997,
        ce => ap_const_logic_1,
        dout => grp_fu_1834_p2);

    adpcm_main_mul_32xdS_U49 : component adpcm_main_mul_32xdS
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1009,
        din1 => grp_fu_2002_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2002_p2);

    adpcm_main_mul_32wdI_U50 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1009,
        din1 => reg_1001,
        ce => ap_const_logic_1,
        dout => grp_fu_2106_p2);

    adpcm_main_mul_32wdI_U51 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_ptr_load_reg_3315,
        din1 => reg_1005,
        ce => ap_const_logic_1,
        dout => grp_fu_2119_p2);

    adpcm_main_mul_7svdy_U52 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2147_p0,
        din1 => reg_1009,
        ce => ap_const_logic_1,
        dout => grp_fu_2147_p2);

    adpcm_main_mul_32yd2_U53 : component adpcm_main_mul_32yd2
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => detl,
        din1 => reg_961,
        ce => ap_const_logic_1,
        dout => grp_fu_2368_p2);

    adpcm_main_mul_32zec_U54 : component adpcm_main_mul_32zec
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => deth,
        din1 => grp_fu_2398_p1,
        ce => grp_fu_2398_ce,
        dout => grp_fu_2398_p2);

    adpcm_main_mul_14tde_U55 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_957,
        din1 => grp_fu_2732_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2732_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2871) and not((ap_const_lv1_0 = tmp_39_fu_1127_p2))) or (not((ap_const_lv1_0 = tmp_reg_2871)) and not((ap_const_lv1_0 = tmp_38_fu_1148_p2)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_817_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_817_ap_ready)) then 
                    ap_reg_grp_filtep_fu_817_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_825_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_825_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_825_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_825_ap_ready)) then 
                    ap_reg_grp_filtep_fu_825_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_771_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_771_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state56)))) then 
                    ap_reg_grp_filtez_fu_771_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_771_ap_ready)) then 
                    ap_reg_grp_filtez_fu_771_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_853_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_853_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)))) then 
                    ap_reg_grp_logsch_fu_853_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_853_ap_ready)) then 
                    ap_reg_grp_logsch_fu_853_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_845_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_845_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state64)))) then 
                    ap_reg_grp_logscl_fu_845_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_845_ap_ready)) then 
                    ap_reg_grp_logscl_fu_845_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_833_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_833_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
                    ap_reg_grp_quantl_fu_833_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_833_ap_ready)) then 
                    ap_reg_grp_quantl_fu_833_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_861_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_861_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state77)))) then 
                    ap_reg_grp_scalel_fu_861_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_861_ap_ready)) then 
                    ap_reg_grp_scalel_fu_861_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_809_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_809_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state77)))) then 
                    ap_reg_grp_uppol1_fu_809_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_809_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_809_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_785_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_785_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state64)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)))) then 
                    ap_reg_grp_uppol2_fu_785_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_785_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_785_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_794_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_794_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state64)) or ((ap_const_lv1_1 = ap_CS_fsm_state75)))) then 
                    ap_reg_grp_upzero_fu_794_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_794_ap_ready)) then 
                    ap_reg_grp_upzero_fu_794_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
                ad_ptr_0_rec_i_i_reg_643 <= p_rec2_i_i_reg_3125;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                ad_ptr_0_rec_i_i_reg_643 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                ad_ptr_1_rec_i_i_reg_685 <= p_rec_i_i_reg_3215;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
                ad_ptr_1_rec_i_i_reg_685 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    dec_il_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    enc_ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state67) and not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))) and not((ap_const_lv1_0 = tmp_107_reg_3526)))) then 
                                enc_ih(1 downto 0) <= tmp_164_cast_cast_ca_fu_2619_p3(1 downto 0);
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
                                enc_ih(1 downto 0) <= tmp_158_cast_cast_ca_fu_2509_p3(1 downto 0);
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
                h_ptr_0_rec_i_i_reg_654 <= phitmp_i_i3_reg_3135;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                h_ptr_0_rec_i_i_reg_654 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state34))) then 
                i_0_i1_reg_619 <= i_7_fu_1992_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1039_p2))) then 
                i_0_i1_reg_619 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_718_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
                i_0_i_i_reg_718 <= i_reg_3295;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
                i_0_i_i_reg_718 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1039_p2)))) then 
                i_0_i_reg_631 <= ap_const_lv32_0;
            elsif ((not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state78))) then 
                i_0_i_reg_631 <= i_6_reg_3540;
            end if; 
        end if;
    end process;

    i_1_i_i4_reg_696_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                i_1_i_i4_reg_696 <= i_5_reg_3233;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
                i_1_i_i4_reg_696 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_760_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                i_1_i_i_reg_760 <= i_4_reg_3400;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
                i_1_i_i_reg_760 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_749_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_749 <= tqmf_ptr1_0_rec_i_i_reg_3387;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_749 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
                tqmf_ptr_0_rec_i_i_reg_707 <= phitmp_i_i_reg_3310;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
                tqmf_ptr_0_rec_i_i_reg_707 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
                xa1_0_i_i_reg_675 <= xa1_2_fu_1815_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                xa1_0_i_i_reg_675 <= xa1_cast_fu_1737_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
                xa2_0_i_i_reg_665 <= xa2_2_fu_1824_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                xa2_0_i_i_reg_665 <= xa2_cast_fu_1741_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_729_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
                xa_0_i_i_reg_729 <= xa_2_fu_2128_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
                xa_0_i_i_reg_729 <= xa_cast_fu_2054_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_739_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46))) then 
                xb_0_i_i_reg_739 <= xb_2_fu_2137_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
                xb_0_i_i_reg_739 <= xb_cast_fu_2058_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then
                accumc_addr_1_reg_3205 <= ac_ptr_0_sum_i_i_cas_fu_1935_p1(4 - 1 downto 0);
                accumd_addr_1_reg_3210 <= ac_ptr_0_sum_i_i_cas_fu_1935_p1(4 - 1 downto 0);
                i_5_reg_3233 <= i_5_fu_1965_p2;
                p_rec_i_i_reg_3215 <= p_rec_i_i_fu_1941_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then
                accumd_load_1_reg_3140 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state78))) then
                ah1 <= p_trunc4_ext_fu_2829_p1;
                    deth(14 downto 0) <= p_trunc44_ext_fu_2819_p1(14 downto 0);
                rh1 <= tmp_117_fu_2847_p2;
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then
                ah2 <= tmp_173_ext_fu_2809_p1;
                    nbh(14 downto 0) <= tmp_170_ext_fu_2799_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state67) and not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))))) then
                al1 <= p_trunc3_ext_fu_2574_p1;
                    detl(14 downto 0) <= p_trunc_ext_fu_2564_p1(14 downto 0);
                i_6_reg_3540 <= i_6_fu_2688_p2;
                rlt1 <= tmp_103_fu_2592_p2;
                rlt2 <= rlt1;
                tmp_120_reg_3535 <= tmp_120_fu_2680_p3;
                    tmp_159_cast1_reg_3530(14 downto 0) <= tmp_159_cast1_fu_2616_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66))) then
                al2 <= tmp_152_ext_fu_2476_p1;
                    nbl(14 downto 0) <= tmp_149_ext_fu_2466_p1(14 downto 0);
                tmp_107_reg_3526 <= tmp_107_fu_2558_p2;
                tmp_125_reg_3521 <= n_assign_fu_2490_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done) or (ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))))) then
                dec_ah1 <= p_trunc2_ext_fu_1618_p1;
                    dec_detl(14 downto 0) <= p_trunc45_ext_fu_1608_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                dec_ah2 <= tmp_102_ext_fu_1538_p1;
                    dec_nbl(14 downto 0) <= tmp_85_ext_fu_1501_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_3068 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_3074 <= dec_plt2;
                dec_rh1 <= tmp_72_fu_1556_p2;
                dec_rh2 <= dec_rh1;
                tmp_73_reg_3079 <= tmp_73_fu_1584_p2;
                tmp_74_reg_3085 <= tmp_74_fu_1590_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state17))) then
                dec_al1 <= p_trunc_ext1_fu_1657_p1;
                    dec_deth(14 downto 0) <= p_trunc46_ext_fu_1667_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then
                dec_al2 <= tmp_88_ext_fu_1637_p1;
                    dec_nbh(14 downto 0) <= tmp_99_ext_fu_1647_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_771_ap_done)))) then
                dec_dh <= tmp_11_fu_1314_p1;
                dec_ph <= tmp_67_fu_1317_p2;
                tmp_11_reg_2978 <= tmp_11_fu_1314_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                dec_dlt <= grp_fu_1283_p2(46 downto 15);
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_3051 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_3057 <= dec_ph2;
                tmp_52_reg_2993 <= grp_fu_1283_p2(46 downto 15);
                tmp_56_reg_2999 <= grp_fu_1292_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                dec_ih <= tmp_47_fu_1211_p1;
                tmp_18_reg_2917 <= compressed_Dout_A(5 downto 2);
                tmp_46_reg_2911 <= tmp_46_fu_1197_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done) or (ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done))))) then
                dec_plt <= tmp_53_fu_1461_p2;
                dec_rl <= tmp_57_fu_1466_p2;
                dec_sh <= tmp_64_fu_1483_p2;
                dec_sl <= grp_fu_917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                dec_rlt1 <= tmp_62_fu_1685_p2;
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state74))) then
                dh <= tmp_27_fu_2747_p1;
                ph <= tmp_114_fu_2756_p2;
                tmp_27_reg_3565 <= tmp_27_fu_2747_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then
                dlt <= grp_fu_2368_p2(46 downto 15);
                tmp_97_reg_3473 <= grp_fu_2368_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then
                    enc_il(5 downto 0) <= tmp_142_ext_fu_2415_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3500 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3506 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then
                i_4_reg_3400 <= i_4_fu_2244_p2;
                tqmf_addr_2_reg_3382 <= p_sum_i_i_cast_fu_2216_p1(5 - 1 downto 0);
                tqmf_ptr1_0_rec_i_i_reg_3387 <= tqmf_ptr1_0_rec_i_i_fu_2221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                i_reg_3295 <= i_fu_2074_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_reg_2871) and (ap_const_lv1_0 = tmp_39_fu_1127_p2))) then
                p_lshr1_reg_2898 <= p_neg1_fu_1132_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                p_rec2_i_i_reg_3125 <= p_rec2_i_i_fu_1762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then
                ph1 <= ph;
                ph1_load_reg_3581 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3587 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond_fu_1756_p2))) then
                phitmp_i_i3_reg_3135 <= phitmp_i_i3_fu_1779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40) and (ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2))) then
                phitmp_i_i_reg_3310 <= phitmp_i_i_fu_2092_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state63))) then
                plt <= tmp_98_fu_2404_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then
                qq6_code6_table_load_reg_2952 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then
                reg_1001 <= h_q0;
                reg_1005 <= h_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)))) then
                reg_1009 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state64)))) then
                reg_1013 <= al1;
                reg_1020 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state75)))) then
                reg_1026 <= ah1;
                reg_1033 <= ah2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state69)))) then
                reg_957 <= qq2_code2_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then
                reg_961 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_771_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state55) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done)))))) then
                reg_965 <= grp_filtez_fu_771_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then
                reg_969 <= dec_al1;
                reg_976 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done) or (ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state65) and not(((ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))))) then
                reg_982 <= grp_logscl_fu_845_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done) or (ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state76) and not(((ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))))) then
                reg_987 <= grp_logsch_fu_853_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done) or (ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state65) and not(((ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state76) and not(((ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done) or (ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))))) then
                reg_992 <= grp_uppol2_fu_785_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then
                reg_997 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state65) and not(((ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done))))) then
                sh <= tmp_105_fu_2456_p2;
                tmp_105_reg_3511 <= tmp_105_fu_2456_p2;
                tmp_106_reg_3516 <= grp_fu_2398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state55) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done))))) then
                sl <= grp_fu_917_p2;
                tmp_104_reg_3435 <= grp_filtep_fu_825_ap_return;
                tmp_93_reg_3430 <= tmp_93_fu_2306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then
                test_data_load_1_reg_3267 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state38))) then
                test_data_load_reg_3257 <= test_data_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then
                tmp_109_reg_3238 <= tmp_109_fu_1976_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10))) then
                tmp_10_reg_2973 <= grp_fu_1265_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state57) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_quantl_fu_833_ap_done))))) then
                tmp_23_reg_3457 <= grp_filtez_fu_771_ap_return;
                tmp_94_reg_3446 <= grp_quantl_fu_833_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state73))) then
                tmp_26_reg_3560 <= grp_fu_2732_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1039_p2)))) then
                    tmp_32_reg_2890(31 downto 1) <= tmp_32_fu_1119_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1039_p2))) then
                    tmp_37_reg_2885(31 downto 1) <= tmp_37_fu_1081_p3(31 downto 1);
                tmp_s_reg_2875 <= tmp_s_fu_1045_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state51))) then
                tmp_77_reg_3365 <= grp_fu_2147_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then
                tmp_79_reg_3340 <= grp_fu_2106_p2;
                tmp_80_reg_3345 <= grp_fu_2119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then
                tmp_81_reg_3190 <= grp_fu_1834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31))) then
                tmp_83_reg_3195 <= xa1_1_fu_1851_p2(45 downto 14);
                tmp_84_reg_3200 <= xa2_1_fu_1891_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then
                tmp_85_reg_3165 <= grp_fu_1793_p2;
                tmp_86_reg_3170 <= grp_fu_1806_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0)))) then
                tmp_88_reg_3405 <= tmp_87_fu_2250_p2(46 downto 15);
                xh <= tmp_89_fu_2270_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then
                tmp_reg_2871 <= tmp_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state41))) then
                tqmf_ptr_load_reg_3315 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52))) then
                xa_1_reg_3370 <= xa_1_fu_2164_p2;
                xb_1_reg_3376 <= xb_1_fu_2204_p2;
            end if;
        end if;
    end process;
    dec_detl(31 downto 15) <= "00000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    detl(31 downto 15) <= "00000000000000000";
    enc_il(31 downto 6) <= "00000000000000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    enc_ih(31 downto 2) <= "000000000000000000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    tmp_37_reg_2885(0) <= '0';
    tmp_32_reg_2890(0) <= '0';
    tmp_159_cast1_reg_3530(44 downto 15) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, grp_filtez_fu_771_ap_done, grp_filtep_fu_817_ap_done, grp_filtep_fu_825_ap_done, grp_logscl_fu_845_ap_done, grp_logsch_fu_853_ap_done, grp_upzero_fu_794_ap_done, grp_uppol2_fu_785_ap_done, grp_scalel_fu_861_ap_done, grp_uppol1_fu_809_ap_done, exitcond_i_i_fu_2238_p2, tmp_reg_2871, tmp_39_fu_1127_p2, exitcond_fu_1756_p2, exitcond_i_i5_fu_1959_p2, exitcond2_i_i_fu_2068_p2, grp_quantl_fu_833_ap_done, tmp_38_fu_1148_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((((ap_const_lv1_0 = tmp_reg_2871) and not((ap_const_lv1_0 = tmp_39_fu_1127_p2))) or (not((ap_const_lv1_0 = tmp_reg_2871)) and not((ap_const_lv1_0 = tmp_38_fu_1148_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((ap_const_lv1_0 = tmp_reg_2871)) and (ap_const_lv1_0 = tmp_38_fu_1148_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (not((ap_const_logic_0 = grp_filtez_fu_771_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done) or (ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done) or (ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1756_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (not((ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state55 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_filtep_fu_817_ap_done) or (ap_const_logic_0 = grp_filtep_fu_825_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_quantl_fu_833_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_853_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_1935_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_fu_1929_p2),64));
    ac_ptr_0_sum_i_i_fu_1929_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_685) + unsigned(ap_const_lv5_A));

    accumc_address0_assign_proc : process(ap_CS_fsm_state19, exitcond_fu_1756_p2, accumc_addr_1_reg_3205, ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33, ad_ptr_0_rec_i_i_cas_fu_1750_p1, ad_ptr_0_sum7_i_i_ca_fu_1953_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            accumc_address0 <= accumc_addr_1_reg_3205;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and (ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1953_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19) and not((ap_const_lv1_0 = exitcond_fu_1756_p2)))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond_fu_1756_p2))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_1750_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_state19, exitcond_fu_1756_p2, ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and (ap_const_lv1_0 = exitcond_fu_1756_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not((ap_const_lv1_0 = exitcond_fu_1756_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and (ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, tmp_74_reg_3085, ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            accumc_d0 <= accumc_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumc_d0 <= tmp_74_reg_3085;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state33)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state30, ap_CS_fsm_state32, accumd_addr_1_reg_3210, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33, ad_ptr_0_rec_i_i_cas_fu_1750_p1, ad_ptr_0_sum7_i_i_ca_fu_1953_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            accumd_address0 <= accumd_addr_1_reg_3210;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and (ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1953_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_1750_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state30, ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and (ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, tmp_73_reg_3079, ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            accumd_d0 <= accumd_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2)))) then 
            accumd_d0 <= tmp_73_reg_3079;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state32, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state33)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_1750_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_reg_643),64));
    ad_ptr_0_sum7_i_i_ca_fu_1953_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_fu_1947_p2),64));
    ad_ptr_0_sum7_i_i_fu_1947_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_685) + unsigned(ap_const_lv5_9));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state45 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state51 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state62 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69 downto 69);
    ap_CS_fsm_state73 <= ap_CS_fsm(72 downto 72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75 downto 75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76 downto 76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77 downto 77);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_done_reg, tmp_reg_2871, ap_CS_fsm_state2, tmp_39_fu_1127_p2, tmp_38_fu_1148_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2871) and not((ap_const_lv1_0 = tmp_39_fu_1127_p2))) or (not((ap_const_lv1_0 = tmp_reg_2871)) and not((ap_const_lv1_0 = tmp_38_fu_1148_p2))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_2871, ap_CS_fsm_state2, tmp_39_fu_1127_p2, tmp_38_fu_1148_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2871) and not((ap_const_lv1_0 = tmp_39_fu_1127_p2))) or (not((ap_const_lv1_0 = tmp_reg_2871)) and not((ap_const_lv1_0 = tmp_38_fu_1148_p2)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compressed_Addr_A <= std_logic_vector(shift_left(unsigned(compressed_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    compressed_Addr_A_orig_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state68, tmp_45_fu_1192_p1, tmp_121_fu_2724_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state68))) then 
            compressed_Addr_A_orig <= tmp_121_fu_2724_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            compressed_Addr_A_orig <= tmp_45_fu_1192_p1(32 - 1 downto 0);
        else 
            compressed_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    compressed_Din_A <= (enc_il or tmp_127_fu_2711_p2);

    compressed_EN_A_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state68)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then 
            compressed_EN_A <= ap_const_logic_1;
        else 
            compressed_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    compressed_WEN_A_assign_proc : process(ap_CS_fsm_state68)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state68)))) then 
            compressed_WEN_A <= ap_const_lv4_F;
        else 
            compressed_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_771_bpl_address0, grp_upzero_fu_794_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_address0 <= grp_upzero_fu_794_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_bph_address0 <= grp_filtez_fu_771_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_771_bpl_ce0, grp_upzero_fu_794_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_794_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_771_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_794_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bph_we0 <= grp_upzero_fu_794_bli_we0;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_771_bpl_address0, grp_upzero_fu_794_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_794_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_771_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_771_bpl_ce0, grp_upzero_fu_794_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_794_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_771_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_794_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_bpl_we0 <= grp_upzero_fu_794_bli_we0;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_771_dlt_address0, grp_upzero_fu_794_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_794_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_771_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, grp_filtez_fu_771_dlt_ce0, grp_upzero_fu_794_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_794_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_771_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_794_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_794_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_794_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_794_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state13, grp_upzero_fu_794_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_794_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_771_dlt_address0, grp_upzero_fu_794_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_794_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_771_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_filtez_fu_771_dlt_ce0, grp_upzero_fu_794_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_794_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_771_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_794_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_794_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_794_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_794_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state15, grp_upzero_fu_794_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_794_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dec_result_Addr_A <= std_logic_vector(shift_left(unsigned(dec_result_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    dec_result_Addr_A_orig_assign_proc : process(ap_CS_fsm_state32, tmp_109_reg_3238, ap_CS_fsm_state34, tmp_108_fu_1971_p1, tmp_123_fu_1987_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state34) and not((ap_const_lv1_0 = tmp_109_reg_3238)))) then 
            dec_result_Addr_A_orig <= tmp_123_fu_1987_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state34) and (ap_const_lv1_0 = tmp_109_reg_3238))) then 
            dec_result_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            dec_result_Addr_A_orig <= tmp_108_fu_1971_p1(32 - 1 downto 0);
        else 
            dec_result_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_Din_A_assign_proc : process(tmp_83_reg_3195, tmp_84_reg_3200, ap_CS_fsm_state32, tmp_109_reg_3238, ap_CS_fsm_state34)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state34) and not((ap_const_lv1_0 = tmp_109_reg_3238))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and (ap_const_lv1_0 = tmp_109_reg_3238)))) then 
            dec_result_Din_A <= tmp_84_reg_3200;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            dec_result_Din_A <= tmp_83_reg_3195;
        else 
            dec_result_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_EN_A_assign_proc : process(ap_CS_fsm_state32, tmp_109_reg_3238, ap_CS_fsm_state34)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not((ap_const_lv1_0 = tmp_109_reg_3238))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and (ap_const_lv1_0 = tmp_109_reg_3238)))) then 
            dec_result_EN_A <= ap_const_logic_1;
        else 
            dec_result_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_WEN_A_assign_proc : process(ap_CS_fsm_state32, tmp_109_reg_3238, exitcond_i_i5_fu_1959_p2, ap_CS_fsm_state34)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1959_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not((ap_const_lv1_0 = tmp_109_reg_3238))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and (ap_const_lv1_0 = tmp_109_reg_3238)))) then 
            dec_result_WEN_A <= ap_const_lv4_F;
        else 
            dec_result_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

        decis_fu_2532_p1 <= std_logic_vector(resize(signed(tmp_13_fu_2523_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state57, grp_filtez_fu_771_bpl_address0, grp_upzero_fu_794_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_bph_address0 <= grp_upzero_fu_794_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            delay_bph_address0 <= grp_filtez_fu_771_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state57, grp_filtez_fu_771_bpl_ce0, grp_upzero_fu_794_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_bph_ce0 <= grp_upzero_fu_794_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            delay_bph_ce0 <= grp_filtez_fu_771_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we0_assign_proc : process(ap_CS_fsm_state76, grp_upzero_fu_794_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_bph_we0 <= grp_upzero_fu_794_bli_we0;
        else 
            delay_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state65, grp_filtez_fu_771_bpl_address0, grp_upzero_fu_794_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_bpl_address0 <= grp_upzero_fu_794_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            delay_bpl_address0 <= grp_filtez_fu_771_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state65, grp_filtez_fu_771_bpl_ce0, grp_upzero_fu_794_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_bpl_ce0 <= grp_upzero_fu_794_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            delay_bpl_ce0 <= grp_filtez_fu_771_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we0_assign_proc : process(ap_CS_fsm_state65, grp_upzero_fu_794_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_bpl_we0 <= grp_upzero_fu_794_bli_we0;
        else 
            delay_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state57, grp_filtez_fu_771_dlt_address0, grp_upzero_fu_794_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_dhx_address0 <= grp_upzero_fu_794_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            delay_dhx_address0 <= grp_filtez_fu_771_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state57, grp_filtez_fu_771_dlt_ce0, grp_upzero_fu_794_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_dhx_ce0 <= grp_upzero_fu_794_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            delay_dhx_ce0 <= grp_filtez_fu_771_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state76, grp_upzero_fu_794_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_dhx_ce1 <= grp_upzero_fu_794_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state76, grp_upzero_fu_794_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_dhx_we0 <= grp_upzero_fu_794_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state76, grp_upzero_fu_794_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            delay_dhx_we1 <= grp_upzero_fu_794_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state65, grp_filtez_fu_771_dlt_address0, grp_upzero_fu_794_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_dltx_address0 <= grp_upzero_fu_794_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            delay_dltx_address0 <= grp_filtez_fu_771_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state65, grp_filtez_fu_771_dlt_ce0, grp_upzero_fu_794_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_dltx_ce0 <= grp_upzero_fu_794_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            delay_dltx_ce0 <= grp_filtez_fu_771_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state65, grp_upzero_fu_794_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_dltx_ce1 <= grp_upzero_fu_794_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state65, grp_upzero_fu_794_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_dltx_we0 <= grp_upzero_fu_794_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state65, grp_upzero_fu_794_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            delay_dltx_we1 <= grp_upzero_fu_794_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_i_i_fu_2068_p2 <= "1" when (i_0_i_i_reg_718 = ap_const_lv4_A) else "0";
    exitcond_fu_1756_p2 <= "1" when (ad_ptr_0_rec_i_i_reg_643 = ap_const_lv4_A) else "0";
    exitcond_i_i5_fu_1959_p2 <= "1" when (i_1_i_i4_reg_696 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_2238_p2 <= "1" when (i_1_i_i_reg_760 = ap_const_lv5_16) else "0";

    grp_filtep_fu_817_al1_assign_proc : process(ap_CS_fsm_state55, reg_969, ap_CS_fsm_state13, reg_1013)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_817_al1 <= reg_1013;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_817_al1 <= reg_969;
        else 
            grp_filtep_fu_817_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_817_al2_assign_proc : process(ap_CS_fsm_state55, reg_976, ap_CS_fsm_state13, reg_1020)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_817_al2 <= reg_1020;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_817_al2 <= reg_976;
        else 
            grp_filtep_fu_817_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_817_ap_start <= ap_reg_grp_filtep_fu_817_ap_start;

    grp_filtep_fu_817_rlt1_assign_proc : process(dec_rlt1, rlt1, ap_CS_fsm_state55, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_817_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_817_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_817_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_817_rlt2_assign_proc : process(dec_rlt2, rlt2, ap_CS_fsm_state55, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_817_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_817_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_817_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_825_al1_assign_proc : process(dec_ah1, ap_CS_fsm_state55, ap_CS_fsm_state13, reg_1026)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_825_al1 <= reg_1026;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_825_al1 <= dec_ah1;
        else 
            grp_filtep_fu_825_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_825_al2_assign_proc : process(dec_ah2, ap_CS_fsm_state55, ap_CS_fsm_state13, reg_1033)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_825_al2 <= reg_1033;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_825_al2 <= dec_ah2;
        else 
            grp_filtep_fu_825_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_825_ap_start <= ap_reg_grp_filtep_fu_825_ap_start;

    grp_filtep_fu_825_rlt1_assign_proc : process(dec_rh1, rh1, ap_CS_fsm_state55, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_825_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_825_rlt1 <= dec_rh1;
        else 
            grp_filtep_fu_825_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_825_rlt2_assign_proc : process(dec_rh2, rh2, ap_CS_fsm_state55, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtep_fu_825_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtep_fu_825_rlt2 <= dec_rh2;
        else 
            grp_filtep_fu_825_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_771_ap_start <= ap_reg_grp_filtez_fu_771_ap_start;

    grp_filtez_fu_771_bpl_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state11, ap_CS_fsm_state55, ap_CS_fsm_state13, ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            grp_filtez_fu_771_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtez_fu_771_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtez_fu_771_bpl_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            grp_filtez_fu_771_bpl_q0 <= dec_del_bph_q0;
        else 
            grp_filtez_fu_771_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_771_dlt_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state11, ap_CS_fsm_state55, ap_CS_fsm_state13, ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            grp_filtez_fu_771_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            grp_filtez_fu_771_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_filtez_fu_771_dlt_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            grp_filtez_fu_771_dlt_q0 <= dec_del_dhx_q0;
        else 
            grp_filtez_fu_771_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1283_ce_assign_proc : process(ap_CS_fsm_state11, grp_filtez_fu_771_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_771_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state12) or (ap_const_lv1_1 = ap_CS_fsm_state9) or (ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_fu_1283_ce <= ap_const_logic_1;
        else 
            grp_fu_1283_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1283_p1 <= tmp_73_cast_fu_1275_p1(32 - 1 downto 0);

    grp_fu_1292_ce_assign_proc : process(ap_CS_fsm_state11, grp_filtez_fu_771_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not((ap_const_logic_0 = grp_filtez_fu_771_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state12) or (ap_const_lv1_1 = ap_CS_fsm_state9) or (ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_fu_1292_ce <= ap_const_logic_1;
        else 
            grp_fu_1292_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1292_p1 <= tmp_73_cast_fu_1275_p1(32 - 1 downto 0);

    grp_fu_1631_ce_assign_proc : process(grp_upzero_fu_794_ap_done, grp_uppol2_fu_785_ap_done, ap_CS_fsm_state15, grp_scalel_fu_861_ap_done, grp_uppol1_fu_809_ap_done, ap_CS_fsm_state18, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done) or (ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state18) or (ap_const_lv1_1 = ap_CS_fsm_state16) or (not(((ap_const_logic_0 = grp_scalel_fu_861_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_809_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_fu_1631_ce <= ap_const_logic_1;
        else 
            grp_fu_1631_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1631_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_1834_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2002_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2147_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);

    grp_fu_2398_ce_assign_proc : process(grp_logscl_fu_845_ap_done, grp_upzero_fu_794_ap_done, grp_uppol2_fu_785_ap_done, ap_CS_fsm_state65, ap_CS_fsm_state64, ap_CS_fsm_state62, ap_CS_fsm_state63)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state65) and not(((ap_const_logic_0 = grp_logscl_fu_845_ap_done) or (ap_const_logic_0 = grp_upzero_fu_794_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_785_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state64) or (ap_const_lv1_1 = ap_CS_fsm_state62) or (ap_const_lv1_1 = ap_CS_fsm_state63))) then 
            grp_fu_2398_ce <= ap_const_logic_1;
        else 
            grp_fu_2398_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2398_p1 <= ap_const_lv43_234(11 - 1 downto 0);
    grp_fu_2732_p1 <= tmp_159_cast1_reg_3530(32 - 1 downto 0);
    grp_fu_871_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_1));
    grp_fu_877_p3 <= grp_fu_871_p2(31 downto 31);
    grp_fu_885_p4 <= grp_fu_871_p2(31 downto 1);
    grp_fu_917_p2 <= std_logic_vector(unsigned(grp_filtep_fu_817_ap_return) + unsigned(grp_filtez_fu_771_ap_return));
    grp_logsch_fu_853_ap_start <= ap_reg_grp_logsch_fu_853_ap_start;

    grp_logsch_fu_853_ih_assign_proc : process(dec_ih, enc_ih, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_logsch_fu_853_ih <= enc_ih;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logsch_fu_853_ih <= dec_ih;
        else 
            grp_logsch_fu_853_ih <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_logsch_fu_853_nbh_assign_proc : process(dec_nbh, nbh, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_logsch_fu_853_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logsch_fu_853_nbh <= dec_nbh;
        else 
            grp_logsch_fu_853_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_845_ap_start <= ap_reg_grp_logscl_fu_845_ap_start;

    grp_logscl_fu_845_il_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, tmp_46_reg_2911, tmp_94_reg_3446)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_logscl_fu_845_il <= tmp_94_reg_3446;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logscl_fu_845_il <= tmp_46_reg_2911;
        else 
            grp_logscl_fu_845_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_845_nbl_assign_proc : process(dec_nbl, nbl, ap_CS_fsm_state13, ap_CS_fsm_state65)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_logscl_fu_845_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_logscl_fu_845_nbl <= dec_nbl;
        else 
            grp_logscl_fu_845_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_833_ap_start <= ap_reg_grp_quantl_fu_833_ap_start;
    grp_scalel_fu_861_ap_start <= ap_reg_grp_scalel_fu_861_ap_start;

    grp_scalel_fu_861_nbl_assign_proc : process(reg_982, reg_987, ap_CS_fsm_state15, ap_CS_fsm_state67, ap_CS_fsm_state78, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state78)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_861_nbl <= reg_987;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            grp_scalel_fu_861_nbl <= reg_982;
        else 
            grp_scalel_fu_861_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_861_shift_constant_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state67, ap_CS_fsm_state78, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state78)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            grp_scalel_fu_861_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            grp_scalel_fu_861_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_861_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_809_al1_assign_proc : process(dec_ah1, reg_969, ap_CS_fsm_state15, reg_1013, reg_1026, ap_CS_fsm_state67, ap_CS_fsm_state78, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_uppol1_fu_809_al1 <= reg_1026;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            grp_uppol1_fu_809_al1 <= reg_1013;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_809_al1 <= reg_969;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_809_al1 <= dec_ah1;
        else 
            grp_uppol1_fu_809_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_809_ap_start <= ap_reg_grp_uppol1_fu_809_ap_start;

    grp_uppol1_fu_809_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state15, ap_CS_fsm_state67, ap_CS_fsm_state78, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_uppol1_fu_809_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            grp_uppol1_fu_809_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_809_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_809_plt <= dec_ph;
        else 
            grp_uppol1_fu_809_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_809_plt1_assign_proc : process(ap_CS_fsm_state15, dec_ph1_load_reg_3051, dec_plt1_load_reg_3068, plt1_load_reg_3500, ap_CS_fsm_state67, ph1_load_reg_3581, ap_CS_fsm_state78, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state78))) then 
            grp_uppol1_fu_809_plt1 <= ph1_load_reg_3581;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            grp_uppol1_fu_809_plt1 <= plt1_load_reg_3500;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_uppol1_fu_809_plt1 <= dec_plt1_load_reg_3068;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol1_fu_809_plt1 <= dec_ph1_load_reg_3051;
        else 
            grp_uppol1_fu_809_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_785_al1_assign_proc : process(dec_ah1, reg_969, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15, reg_1013, reg_1026)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_uppol2_fu_785_al1 <= reg_1026;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_uppol2_fu_785_al1 <= reg_1013;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_785_al1 <= reg_969;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_785_al1 <= dec_ah1;
        else 
            grp_uppol2_fu_785_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_785_al2_assign_proc : process(dec_ah2, reg_976, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15, reg_1020, reg_1033)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_uppol2_fu_785_al2 <= reg_1033;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_uppol2_fu_785_al2 <= reg_1020;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_785_al2 <= reg_976;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_785_al2 <= dec_ah2;
        else 
            grp_uppol2_fu_785_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_785_ap_start <= ap_reg_grp_uppol2_fu_785_ap_start;

    grp_uppol2_fu_785_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_uppol2_fu_785_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_uppol2_fu_785_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_785_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_785_plt <= dec_ph;
        else 
            grp_uppol2_fu_785_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_785_plt1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15, dec_ph1_load_reg_3051, dec_plt1_load_reg_3068, plt1_load_reg_3500, ph1_load_reg_3581)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_uppol2_fu_785_plt1 <= ph1_load_reg_3581;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_uppol2_fu_785_plt1 <= plt1_load_reg_3500;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_785_plt1 <= dec_plt1_load_reg_3068;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_785_plt1 <= dec_ph1_load_reg_3051;
        else 
            grp_uppol2_fu_785_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_785_plt2_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15, dec_ph2_load_reg_3057, dec_plt2_load_reg_3074, plt2_load_reg_3506, ph2_load_reg_3587)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_uppol2_fu_785_plt2 <= ph2_load_reg_3587;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_uppol2_fu_785_plt2 <= plt2_load_reg_3506;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_uppol2_fu_785_plt2 <= dec_plt2_load_reg_3074;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_uppol2_fu_785_plt2 <= dec_ph2_load_reg_3057;
        else 
            grp_uppol2_fu_785_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_794_ap_start <= ap_reg_grp_upzero_fu_794_ap_start;

    grp_upzero_fu_794_bli_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_upzero_fu_794_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_upzero_fu_794_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_794_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_794_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_794_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_794_dlt_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15, tmp_11_reg_2978, tmp_52_reg_2993, tmp_97_reg_3473, tmp_27_reg_3565)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_upzero_fu_794_dlt <= tmp_27_reg_3565;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_upzero_fu_794_dlt <= tmp_97_reg_3473;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_794_dlt <= tmp_52_reg_2993;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_794_dlt <= tmp_11_reg_2978;
        else 
            grp_upzero_fu_794_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_794_dlti_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_upzero_fu_794_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_upzero_fu_794_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_794_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_794_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_794_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_794_dlti_q1_assign_proc : process(dec_del_dltx_q1, dec_del_dhx_q1, delay_dltx_q1, delay_dhx_q1, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state76, ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            grp_upzero_fu_794_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            grp_upzero_fu_794_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            grp_upzero_fu_794_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_upzero_fu_794_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_794_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state40, h_ptr_0_rec_i_i_cast_fu_1745_p1, tqmf_ptr_0_rec_i_i_c_fu_2062_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2062_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_1745_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_address1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state40, h_ptr_0_sum9_i_i_cas_fu_1774_p1, tqmf_ptr_0_sum67_i_i_1_fu_2086_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            h_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2086_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            h_address1 <= h_ptr_0_sum9_i_i_cas_fu_1774_p1(5 - 1 downto 0);
        else 
            h_address1 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state40)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state40)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_1745_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_reg_654),64));
    h_ptr_0_sum9_i_i_cas_fu_1774_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_1768_p2),64));
    h_ptr_0_sum9_i_i_fu_1768_p2 <= (h_ptr_0_rec_i_i_reg_654 or ap_const_lv5_1);
    i_4_fu_2244_p2 <= std_logic_vector(unsigned(i_1_i_i_reg_760) + unsigned(ap_const_lv5_1));
    i_5_fu_1965_p2 <= std_logic_vector(unsigned(i_1_i_i4_reg_696) + unsigned(ap_const_lv4_1));
    i_6_fu_2688_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(i_0_i_reg_631));
    i_7_fu_1992_p2 <= std_logic_vector(unsigned(i_0_i1_reg_619) + unsigned(ap_const_lv32_2));
    i_fu_2074_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_718) + unsigned(ap_const_lv4_1));
    m_fu_2544_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2490_p2));
    n_assign_1_fu_2550_p3 <= 
        m_fu_2544_p2 when (tmp_126_fu_2536_p3(0) = '1') else 
        n_assign_fu_2490_p2;
    n_assign_fu_2490_p2 <= std_logic_vector(unsigned(xh) - unsigned(tmp_105_reg_3511));
    p_lshr2_fu_1095_p4 <= p_neg2_fu_1089_p2(31 downto 1);
    p_lshr3_fu_1057_p4 <= p_neg3_fu_1051_p2(31 downto 1);
    p_lshr_f1_fu_1170_p4 <= i_0_i1_reg_619(31 downto 1);
    p_lshr_f_fu_2666_p4 <= i_0_i_reg_631(31 downto 1);
    p_lshr_fu_2646_p4 <= p_neg_fu_2640_p2(31 downto 1);
    p_neg1_fu_1132_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i1_reg_619));
    p_neg2_fu_1089_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg3_fu_1051_p2 <= (size xor ap_const_lv32_FFFFFFFF);
    p_neg_fu_2640_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i_reg_631));
    p_neg_t1_fu_1164_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_12_fu_1161_p1));
    p_neg_t2_fu_1105_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr2_fu_1095_p4));
    p_neg_t3_fu_1067_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr3_fu_1057_p4));
    p_neg_t_fu_2660_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_22_fu_2656_p1));
    p_rec2_i_i_fu_1762_p2 <= std_logic_vector(unsigned(ad_ptr_0_rec_i_i_reg_643) + unsigned(ap_const_lv4_1));
    p_rec_i_i_fu_1941_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_685) + unsigned(ap_const_lv5_1F));
        p_shl2_cast_fu_2044_p1 <= std_logic_vector(resize(signed(p_shl2_fu_2036_p3),37));

    p_shl2_fu_2036_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_1716_p1 <= std_logic_vector(resize(signed(p_shl3_fu_1709_p3),37));

    p_shl3_fu_1709_p3 <= (tmp_74_reg_3085 & ap_const_lv4_0);
        p_shl4_cast_fu_1727_p1 <= std_logic_vector(resize(signed(p_shl4_fu_1720_p3),37));

    p_shl4_fu_1720_p3 <= (tmp_74_reg_3085 & ap_const_lv2_0);
        p_shl5_cast_fu_2178_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2170_p3),37));

    p_shl5_fu_2170_p3 <= (tqmf_q1 & ap_const_lv4_0);
        p_shl6_cast_fu_2190_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2182_p3),37));

    p_shl6_fu_2182_p3 <= (tqmf_q1 & ap_const_lv2_0);
        p_shl7_cast_fu_1865_p1 <= std_logic_vector(resize(signed(p_shl7_fu_1857_p3),37));

    p_shl7_fu_1857_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_1877_p1 <= std_logic_vector(resize(signed(p_shl8_fu_1869_p3),37));

    p_shl8_fu_1869_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_2032_p1 <= std_logic_vector(resize(signed(p_shl_fu_2024_p3),37));

    p_shl_fu_2024_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2216_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_fu_2210_p2),64));
    p_sum_i_i_fu_2210_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_749) + unsigned(ap_const_lv6_17));
        p_trunc2_ext_fu_1618_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_809_ap_return),32));

        p_trunc3_ext_fu_2574_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_809_ap_return),32));

    p_trunc44_ext_fu_2819_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_861_ap_return),32));
    p_trunc45_ext_fu_1608_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_861_ap_return),32));
    p_trunc46_ext_fu_1667_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_861_ap_return),32));
        p_trunc4_ext_fu_2829_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_809_ap_return),32));

        p_trunc_ext1_fu_1657_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_809_ap_return),32));

    p_trunc_ext_fu_2564_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_861_ap_return),32));
    phitmp_i_i3_fu_1779_p2 <= std_logic_vector(unsigned(h_ptr_0_rec_i_i_reg_654) + unsigned(ap_const_lv5_2));
    phitmp_i_i_fu_2092_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_rec_i_i_reg_707) + unsigned(ap_const_lv5_2));

    qq2_code2_table_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state68, tmp_65_fu_1235_p1, tmp_110_fu_2698_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state68))) then 
            qq2_code2_table_address0 <= tmp_110_fu_2698_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            qq2_code2_table_address0 <= tmp_65_fu_1235_p1(2 - 1 downto 0);
        else 
            qq2_code2_table_address0 <= "XX";
        end if; 
    end process;


    qq2_code2_table_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state68)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then 
            qq2_code2_table_ce0 <= ap_const_logic_1;
        else 
            qq2_code2_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state57, tmp_50_fu_1240_p1, tmp_95_fu_2350_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            qq4_code4_table_address0 <= tmp_95_fu_2350_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            qq4_code4_table_address0 <= tmp_50_fu_1240_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_771_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state57, grp_quantl_fu_833_ap_done)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state57) and not(((ap_const_logic_0 = grp_filtez_fu_771_ap_done) or (ap_const_logic_0 = grp_quantl_fu_833_ap_done)))))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_54_fu_1248_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    test_data_Addr_A <= std_logic_vector(shift_left(unsigned(test_data_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    test_data_Addr_A_orig_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, tmp_40_fu_2008_p1, tmp_42_fu_2019_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
            test_data_Addr_A_orig <= tmp_42_fu_2019_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
            test_data_Addr_A_orig <= tmp_40_fu_2008_p1(32 - 1 downto 0);
        else 
            test_data_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    test_data_Din_A <= ap_const_lv32_0;

    test_data_EN_A_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)))) then 
            test_data_EN_A <= ap_const_logic_1;
        else 
            test_data_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    test_data_WEN_A <= ap_const_lv4_0;
        tmp_102_ext_fu_1538_p1 <= std_logic_vector(resize(signed(reg_992),32));

    tmp_103_fu_2592_p2 <= std_logic_vector(unsigned(sl) + unsigned(dlt));
    tmp_105_fu_2456_p2 <= std_logic_vector(unsigned(tmp_104_reg_3435) + unsigned(tmp_23_reg_3457));
    tmp_107_fu_2558_p2 <= "1" when (signed(n_assign_1_fu_2550_p3) > signed(decis_fu_2532_p1)) else "0";
        tmp_108_fu_1971_p1 <= std_logic_vector(resize(signed(i_0_i1_reg_619),64));

    tmp_109_fu_1976_p2 <= "1" when (signed(i_0_i1_reg_619) < signed(tmp_s_reg_2875)) else "0";
        tmp_110_cast_fu_2161_p1 <= std_logic_vector(resize(signed(tmp_77_reg_3365),47));

        tmp_110_fu_2698_p1 <= std_logic_vector(resize(signed(enc_ih),64));

        tmp_112_cast_fu_2200_p1 <= std_logic_vector(resize(signed(tmp_78_fu_2194_p2),47));

    tmp_114_fu_2756_p2 <= std_logic_vector(signed(tmp_27_fu_2747_p1) + signed(tmp_23_reg_3457));
        tmp_115_cast_fu_2125_p1 <= std_logic_vector(resize(signed(tmp_79_reg_3340),50));

    tmp_117_fu_2847_p2 <= std_logic_vector(unsigned(dh) + unsigned(sh));
        tmp_118_cast_fu_2134_p1 <= std_logic_vector(resize(signed(tmp_80_reg_3345),50));

    tmp_118_fu_1840_p1 <= xa1_0_i_i_reg_675(46 - 1 downto 0);
        tmp_11_fu_1314_p1 <= std_logic_vector(resize(signed(tmp_10_reg_2973),32));

        tmp_120_cast_fu_1848_p1 <= std_logic_vector(resize(signed(tmp_81_reg_3190),46));

    tmp_120_fu_2680_p3 <= 
        p_neg_t_fu_2660_p2 when (tmp_128_fu_2632_p3(0) = '1') else 
        tmp_24_fu_2676_p1;
        tmp_121_fu_2724_p1 <= std_logic_vector(resize(signed(tmp_120_reg_3535),64));

        tmp_122_cast_fu_1887_p1 <= std_logic_vector(resize(signed(tmp_82_fu_1881_p2),46));

    tmp_122_fu_1981_p2 <= (i_0_i1_reg_619 or ap_const_lv32_1);
        tmp_123_fu_1987_p1 <= std_logic_vector(resize(signed(tmp_122_fu_1981_p2),64));

    tmp_124_fu_1844_p1 <= xa2_0_i_i_reg_665(46 - 1 downto 0);
    tmp_125_fu_2501_p3 <= n_assign_fu_2490_p2(31 downto 31);
    tmp_126_fu_2536_p3 <= n_assign_fu_2490_p2(31 downto 31);
    tmp_127_fu_2711_p2 <= std_logic_vector(shift_left(unsigned(enc_ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_128_fu_2632_p3 <= i_0_i_reg_631(31 downto 31);
        tmp_129_cast_fu_1812_p1 <= std_logic_vector(resize(signed(tmp_85_reg_3165),50));

    tmp_12_fu_1161_p1 <= std_logic_vector(resize(unsigned(p_lshr1_reg_2898),32));
        tmp_132_cast_fu_1821_p1 <= std_logic_vector(resize(signed(tmp_86_reg_3170),50));

    tmp_13_fu_2523_p4 <= tmp_106_reg_3516(42 downto 12);
    tmp_142_ext_fu_2415_p1 <= std_logic_vector(resize(unsigned(tmp_94_reg_3446),32));
    tmp_149_ext_fu_2466_p1 <= std_logic_vector(resize(unsigned(reg_982),32));
    tmp_14_fu_1180_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1170_p4),32));
        tmp_152_ext_fu_2476_p1 <= std_logic_vector(resize(signed(reg_992),32));

    tmp_158_cast_cast_ca_fu_2509_p3 <= 
        ap_const_lv32_1 when (tmp_125_fu_2501_p3(0) = '1') else 
        ap_const_lv32_3;
        tmp_159_cast1_fu_2616_p1 <= std_logic_vector(resize(signed(deth),45));

    tmp_15_fu_1201_p4 <= compressed_Dout_A(31 downto 6);
    tmp_164_cast_cast_ca_fu_2619_p3 <= 
        ap_const_lv32_0 when (tmp_125_reg_3521(0) = '1') else 
        ap_const_lv32_2;
    tmp_170_ext_fu_2799_p1 <= std_logic_vector(resize(unsigned(reg_987),32));
        tmp_173_ext_fu_2809_p1 <= std_logic_vector(resize(signed(reg_992),32));

    tmp_21_fu_2340_p4 <= grp_quantl_fu_833_ap_return(5 downto 2);
    tmp_22_fu_2656_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2646_p4),32));
    tmp_24_fu_2676_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_2666_p4),32));
        tmp_27_fu_2747_p1 <= std_logic_vector(resize(signed(tmp_26_reg_3560),32));

    tmp_31_fu_1111_p3 <= 
        p_neg_t2_fu_1105_p2 when (grp_fu_877_p3(0) = '1') else 
        grp_fu_885_p4;
    tmp_32_fu_1119_p3 <= (tmp_31_fu_1111_p3 & ap_const_lv1_0);
    tmp_36_fu_1073_p3 <= 
        p_neg_t3_fu_1067_p2 when (grp_fu_877_p3(0) = '1') else 
        grp_fu_885_p4;
    tmp_37_fu_1081_p3 <= (tmp_36_fu_1073_p3 & ap_const_lv1_0);
    tmp_38_fu_1148_p2 <= "1" when (i_0_i_reg_631 = tmp_32_reg_2890) else "0";
    tmp_39_fu_1127_p2 <= "1" when (i_0_i1_reg_619 = tmp_37_reg_2885) else "0";
        tmp_40_fu_2008_p1 <= std_logic_vector(resize(signed(i_0_i_reg_631),64));

    tmp_41_fu_2013_p2 <= (i_0_i_reg_631 or ap_const_lv32_1);
        tmp_42_fu_2019_p1 <= std_logic_vector(resize(signed(tmp_41_fu_2013_p2),64));

    tmp_43_fu_1153_p3 <= i_0_i1_reg_619(31 downto 31);
    tmp_44_fu_1184_p3 <= 
        p_neg_t1_fu_1164_p2 when (tmp_43_fu_1153_p3(0) = '1') else 
        tmp_14_fu_1180_p1;
        tmp_45_fu_1192_p1 <= std_logic_vector(resize(signed(tmp_44_fu_1184_p3),64));

    tmp_46_fu_1197_p1 <= compressed_Dout_A(6 - 1 downto 0);
        tmp_47_fu_1211_p1 <= std_logic_vector(resize(signed(tmp_15_fu_1201_p4),32));

    tmp_50_fu_1240_p1 <= std_logic_vector(resize(unsigned(tmp_18_reg_2917),64));
    tmp_53_fu_1461_p2 <= std_logic_vector(unsigned(tmp_52_reg_2993) + unsigned(grp_filtez_fu_771_ap_return));
        tmp_54_fu_1248_p1 <= std_logic_vector(resize(signed(dec_il),64));

    tmp_57_fu_1466_p2 <= std_logic_vector(unsigned(grp_fu_917_p2) + unsigned(tmp_56_reg_2999));
    tmp_62_fu_1685_p2 <= std_logic_vector(unsigned(dec_sl) + unsigned(dec_dlt));
    tmp_64_fu_1483_p2 <= std_logic_vector(unsigned(grp_filtep_fu_825_ap_return) + unsigned(reg_965));
        tmp_65_fu_1235_p1 <= std_logic_vector(resize(signed(dec_ih),64));

    tmp_67_fu_1317_p2 <= std_logic_vector(signed(tmp_11_fu_1314_p1) + signed(grp_filtez_fu_771_ap_return));
    tmp_72_fu_1556_p2 <= std_logic_vector(unsigned(dec_sh) + unsigned(dec_dh));
        tmp_73_cast_fu_1275_p1 <= std_logic_vector(resize(signed(dec_detl),47));

    tmp_73_fu_1584_p2 <= std_logic_vector(unsigned(tmp_72_fu_1556_p2) + unsigned(dec_rl));
    tmp_74_fu_1590_p2 <= std_logic_vector(unsigned(dec_rl) - unsigned(tmp_72_fu_1556_p2));
    tmp_75_fu_2153_p1 <= xb_0_i_i_reg_739(47 - 1 downto 0);
    tmp_76_fu_2157_p1 <= xa_0_i_i_reg_729(47 - 1 downto 0);
    tmp_78_fu_2194_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2178_p1) - signed(p_shl6_cast_fu_2190_p1));
    tmp_82_fu_1881_p2 <= std_logic_vector(signed(p_shl7_cast_fu_1865_p1) - signed(p_shl8_cast_fu_1877_p1));
    tmp_85_ext_fu_1501_p1 <= std_logic_vector(resize(unsigned(reg_982),32));
    tmp_87_fu_2250_p2 <= std_logic_vector(unsigned(xa_1_reg_3370) + unsigned(xb_1_reg_3376));
        tmp_88_ext_fu_1637_p1 <= std_logic_vector(resize(signed(reg_992),32));

    tmp_89_fu_2270_p2 <= std_logic_vector(unsigned(xa_1_reg_3370) - unsigned(xb_1_reg_3376));
    tmp_93_fu_2306_p2 <= std_logic_vector(unsigned(tmp_88_reg_3405) - unsigned(grp_fu_917_p2));
    tmp_95_fu_2350_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_2340_p4),64));
    tmp_98_fu_2404_p2 <= std_logic_vector(unsigned(tmp_97_reg_3473) + unsigned(reg_965));
    tmp_99_ext_fu_1647_p1 <= std_logic_vector(resize(unsigned(reg_987),32));
    tmp_fu_1039_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";
    tmp_s_fu_1045_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_FFFFFFFF));

    tqmf_address0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state2, ap_CS_fsm_state38, ap_CS_fsm_state40, exitcond2_i_i_fu_2068_p2, tqmf_ptr_0_rec_i_i_c_fu_2062_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2)))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40) and (ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2062_p1(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_state53, exitcond_i_i_fu_2238_p2, ap_CS_fsm_state40, ap_CS_fsm_state51, tqmf_addr_2_reg_3382, ap_CS_fsm_state54, tqmf_ptr_0_sum67_i_i_1_fu_2086_p1, tqmf_ptr_0_sum_i_i_c_fu_2233_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            tqmf_address1 <= tqmf_addr_2_reg_3382;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0)))) then 
            tqmf_address1 <= ap_const_lv5_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53) and (exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) then 
            tqmf_address1 <= tqmf_ptr_0_sum_i_i_c_fu_2233_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state51))) then 
            tqmf_address1 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            tqmf_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2086_p1(5 - 1 downto 0);
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state2, ap_CS_fsm_state38, ap_CS_fsm_state40, exitcond2_i_i_fu_2068_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and (ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2068_p2))))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_state53, exitcond_i_i_fu_2238_p2, ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state51)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and (exitcond_i_i_fu_2238_p2 = ap_const_lv1_0)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d1_assign_proc : process(tqmf_q1, ap_CS_fsm_state53, exitcond_i_i_fu_2238_p2, test_data_load_reg_3257, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            tqmf_d1 <= tqmf_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0)))) then 
            tqmf_d1 <= test_data_load_reg_3257;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr1_0_rec_i_i_fu_2221_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_749) + unsigned(ap_const_lv6_3F));
    tqmf_ptr_0_rec_i_i_c_fu_2062_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_707),64));
    tqmf_ptr_0_sum67_i_i_1_fu_2086_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2080_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2080_p2 <= (tqmf_ptr_0_rec_i_i_reg_707 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2233_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_fu_2227_p2),64));
    tqmf_ptr_0_sum_i_i_fu_2227_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_749) + unsigned(ap_const_lv6_15));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state53, exitcond_i_i_fu_2238_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state53, exitcond_i_i_fu_2238_p2, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53) and not((exitcond_i_i_fu_2238_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_1851_p2 <= std_logic_vector(unsigned(tmp_118_fu_1840_p1) + unsigned(tmp_120_cast_fu_1848_p1));
    xa1_2_fu_1815_p2 <= std_logic_vector(signed(tmp_129_cast_fu_1812_p1) + signed(xa1_0_i_i_reg_675));
        xa1_cast_fu_1737_p1 <= std_logic_vector(resize(signed(xa1_fu_1731_p2),50));

    xa1_fu_1731_p2 <= std_logic_vector(signed(p_shl3_cast_fu_1716_p1) - signed(p_shl4_cast_fu_1727_p1));
    xa2_1_fu_1891_p2 <= std_logic_vector(unsigned(tmp_124_fu_1844_p1) + unsigned(tmp_122_cast_fu_1887_p1));
    xa2_2_fu_1824_p2 <= std_logic_vector(signed(tmp_132_cast_fu_1821_p1) + signed(xa2_0_i_i_reg_665));
        xa2_cast_fu_1741_p1 <= std_logic_vector(resize(signed(grp_fu_1631_p2),50));

    xa_1_fu_2164_p2 <= std_logic_vector(unsigned(tmp_76_fu_2157_p1) + unsigned(tmp_110_cast_fu_2161_p1));
    xa_2_fu_2128_p2 <= std_logic_vector(signed(tmp_115_cast_fu_2125_p1) + signed(xa_0_i_i_reg_729));
        xa_cast_fu_2054_p1 <= std_logic_vector(resize(signed(xa_fu_2048_p2),50));

    xa_fu_2048_p2 <= std_logic_vector(signed(p_shl_cast_fu_2032_p1) - signed(p_shl2_cast_fu_2044_p1));
    xb_1_fu_2204_p2 <= std_logic_vector(unsigned(tmp_75_fu_2153_p1) + unsigned(tmp_112_cast_fu_2200_p1));
    xb_2_fu_2137_p2 <= std_logic_vector(signed(tmp_118_cast_fu_2134_p1) + signed(xb_0_i_i_reg_739));
        xb_cast_fu_2058_p1 <= std_logic_vector(resize(signed(grp_fu_2002_p2),50));

end behav;
