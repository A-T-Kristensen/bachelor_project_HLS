-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Block_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_r : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    test_data_ce0 : OUT STD_LOGIC;
    test_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    compressed_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    compressed_ce0 : OUT STD_LOGIC;
    compressed_we0 : OUT STD_LOGIC;
    compressed_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_result_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    dec_result_ce0 : OUT STD_LOGIC;
    dec_result_we0 : OUT STD_LOGIC;
    dec_result_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Block_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (76 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (76 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (76 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (76 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (76 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (76 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (76 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (76 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (76 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (76 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (76 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv43_234 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000110100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ih : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_ce0 : STD_LOGIC;
    signal dec_del_bpl_we0 : STD_LOGIC;
    signal dec_del_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dltx_ce0 : STD_LOGIC;
    signal dec_del_dltx_we0 : STD_LOGIC;
    signal dec_del_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_ce1 : STD_LOGIC;
    signal dec_del_dltx_we1 : STD_LOGIC;
    signal dec_del_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal il : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_del_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_ce0 : STD_LOGIC;
    signal dec_del_bph_we0 : STD_LOGIC;
    signal dec_del_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_dhx_ce0 : STD_LOGIC;
    signal dec_del_dhx_we0 : STD_LOGIC;
    signal dec_del_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_ce1 : STD_LOGIC;
    signal dec_del_dhx_we1 : STD_LOGIC;
    signal dec_del_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal qq2_code2_table_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal qq2_code2_table_ce0 : STD_LOGIC;
    signal qq2_code2_table_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dec_ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tqmf_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce0 : STD_LOGIC;
    signal tqmf_we0 : STD_LOGIC;
    signal tqmf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ce1 : STD_LOGIC;
    signal tqmf_we1 : STD_LOGIC;
    signal tqmf_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal h_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_ce1 : STD_LOGIC;
    signal h_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bpl_ce0 : STD_LOGIC;
    signal delay_bpl_we0 : STD_LOGIC;
    signal delay_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dltx_ce0 : STD_LOGIC;
    signal delay_dltx_we0 : STD_LOGIC;
    signal delay_dltx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dltx_ce1 : STD_LOGIC;
    signal delay_dltx_we1 : STD_LOGIC;
    signal delay_dltx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rlt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rlt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal al2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal detl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dlt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbl : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal plt2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_bph_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_bph_ce0 : STD_LOGIC;
    signal delay_bph_we0 : STD_LOGIC;
    signal delay_bph_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal delay_dhx_ce0 : STD_LOGIC;
    signal delay_dhx_we0 : STD_LOGIC;
    signal delay_dhx_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal delay_dhx_ce1 : STD_LOGIC;
    signal delay_dhx_we1 : STD_LOGIC;
    signal delay_dhx_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rh1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rh2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ah2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal deth : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nbh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ph2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal accumc_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumc_ce0 : STD_LOGIC;
    signal accumc_we0 : STD_LOGIC;
    signal accumc_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal accumd_ce0 : STD_LOGIC;
    signal accumd_we0 : STD_LOGIC;
    signal accumd_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal reg_930 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_filtez_fu_755_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_filtez_fu_755_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_filtep_fu_801_ap_done : STD_LOGIC;
    signal grp_filtep_fu_809_ap_done : STD_LOGIC;
    signal reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logscl_fu_829_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_955 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_logscl_fu_829_ap_done : STD_LOGIC;
    signal grp_logsch_fu_837_ap_done : STD_LOGIC;
    signal grp_upzero_fu_778_ap_done : STD_LOGIC;
    signal grp_uppol2_fu_769_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state64 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_logsch_fu_837_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_960 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_uppol2_fu_769_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_965 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_scalel_fu_845_ap_done : STD_LOGIC;
    signal grp_uppol1_fu_793_ap_done : STD_LOGIC;
    signal reg_970 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal reg_974 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal reg_978 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal exitcond_i_i_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2805 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_2809 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_34_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1151_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_reg_2826 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_18_reg_2832 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal qq6_code6_table_load_reg_2862 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_cast_fu_1221_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_10_reg_2883 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_11_fu_1260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_2888 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_2903 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_2909 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph1_load_reg_2961 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_ph2_load_reg_2967 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt1_load_reg_2978 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_plt2_load_reg_2984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_1530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_1536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_2995 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_cast_fu_1683_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal xa2_cast_fu_1687_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_rec2_i_i_fu_1708_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec2_i_i_reg_3035 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i3_fu_1725_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i3_reg_3045 : STD_LOGIC_VECTOR (4 downto 0);
    signal accumd_load_1_reg_3050 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_1739_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_81_reg_3075 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_1752_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_82_reg_3080 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_2_fu_1761_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal xa2_2_fu_1770_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_1780_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_77_reg_3100 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_79_reg_3105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_80_reg_3110 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_addr_1_reg_3115 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal accumd_addr_1_reg_3120 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_i_fu_1887_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_rec_i_i_reg_3125 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_6_fu_1911_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_reg_3143 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_fu_1933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal test_data_load_reg_3163 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal test_data_load_1_reg_3173 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal xa_cast_fu_1995_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_cast_fu_1999_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal i_fu_2015_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3201 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_i_i_fu_2009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_i_i_fu_2033_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal phitmp_i_i_reg_3216 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr_load_reg_3221 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_fu_2047_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_73_reg_3246 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_fu_2060_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_74_reg_3251 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa_2_fu_2069_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal xb_2_fu_2078_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal grp_fu_2088_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_71_reg_3271 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal xa_1_fu_2105_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_1_reg_3276 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal xb_1_fu_2145_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_1_reg_3282 : STD_LOGIC_VECTOR (46 downto 0);
    signal tqmf_addr_2_reg_3288 : STD_LOGIC_VECTOR (4 downto 0);
    signal tqmf_ptr1_0_rec_i_i_fu_2162_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr1_0_rec_i_i_reg_3293 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_4_fu_2185_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_3306 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_84_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_2247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_reg_3336 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_reg_3341 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_quantl_fu_817_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_reg_3352 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_quantl_fu_817_ap_done : STD_LOGIC;
    signal tmp_23_reg_3363 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal tmp_93_reg_3379 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal plt1_load_reg_3406 : STD_LOGIC_VECTOR (31 downto 0);
    signal plt2_load_reg_3412 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_2397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_reg_3417 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2339_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_103_reg_3422 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_102_fu_2442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_reg_3427 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal tmp_105_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_3432 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_cast1_fu_2557_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_159_cast1_reg_3436 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal i_7_fu_2656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_reg_3446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_26_reg_3456 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_27_fu_2681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_3461 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ph1_load_reg_3477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ph2_load_reg_3483 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_755_ap_start : STD_LOGIC;
    signal grp_filtez_fu_755_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_755_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_755_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_755_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_755_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_755_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_755_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_755_dlt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_769_ap_start : STD_LOGIC;
    signal grp_uppol2_fu_769_ap_idle : STD_LOGIC;
    signal grp_uppol2_fu_769_ap_ready : STD_LOGIC;
    signal grp_uppol2_fu_769_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_769_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_769_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_769_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol2_fu_769_plt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_ap_start : STD_LOGIC;
    signal grp_upzero_fu_778_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_778_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_778_dlt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_778_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_778_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_778_dlti_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_dlti_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_778_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_778_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_778_dlti_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_dlti_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_778_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_778_bli_we0 : STD_LOGIC;
    signal grp_upzero_fu_778_bli_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_778_bli_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_793_ap_start : STD_LOGIC;
    signal grp_uppol1_fu_793_ap_idle : STD_LOGIC;
    signal grp_uppol1_fu_793_ap_ready : STD_LOGIC;
    signal grp_uppol1_fu_793_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_793_plt : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_793_plt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_uppol1_fu_793_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_filtep_fu_801_ap_start : STD_LOGIC;
    signal grp_filtep_fu_801_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_801_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_801_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_801_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_801_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_801_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_801_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_ap_start : STD_LOGIC;
    signal grp_filtep_fu_809_ap_idle : STD_LOGIC;
    signal grp_filtep_fu_809_ap_ready : STD_LOGIC;
    signal grp_filtep_fu_809_rlt1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_al1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_rlt2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtep_fu_809_al2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantl_fu_817_ap_start : STD_LOGIC;
    signal grp_quantl_fu_817_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_817_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_829_ap_start : STD_LOGIC;
    signal grp_logscl_fu_829_ap_idle : STD_LOGIC;
    signal grp_logscl_fu_829_ap_ready : STD_LOGIC;
    signal grp_logscl_fu_829_il : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_logscl_fu_829_nbl : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_logsch_fu_837_ap_start : STD_LOGIC;
    signal grp_logsch_fu_837_ap_idle : STD_LOGIC;
    signal grp_logsch_fu_837_ap_ready : STD_LOGIC;
    signal grp_logsch_fu_837_nbh : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scalel_fu_845_ap_start : STD_LOGIC;
    signal grp_scalel_fu_845_ap_idle : STD_LOGIC;
    signal grp_scalel_fu_845_ap_ready : STD_LOGIC;
    signal grp_scalel_fu_845_nbl : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_scalel_fu_845_shift_constant : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scalel_fu_845_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_i1_reg_603 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ad_ptr_0_rec_i_i_reg_627 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_ptr_0_rec_i_i_reg_638 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_0_i_i_reg_649 : STD_LOGIC_VECTOR (49 downto 0);
    signal xa1_0_i_i_reg_659 : STD_LOGIC_VECTOR (49 downto 0);
    signal ad_ptr_1_rec_i_i_reg_669 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal i_1_i_i4_reg_680 : STD_LOGIC_VECTOR (3 downto 0);
    signal tqmf_ptr_0_rec_i_i_reg_691 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_702 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_0_i_i_reg_713 : STD_LOGIC_VECTOR (49 downto 0);
    signal xb_0_i_i_reg_723 : STD_LOGIC_VECTOR (49 downto 0);
    signal tqmf_ptr_0_pn_rec_i_s_reg_733 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal i_1_i_i_reg_744 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_grp_filtez_fu_755_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol2_fu_769_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_upzero_fu_778_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_uppol1_fu_793_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_reg_grp_filtep_fu_801_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_filtep_fu_809_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_quantl_fu_817_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logscl_fu_829_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_logsch_fu_837_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_scalel_fu_845_ap_start : STD_LOGIC := '0';
    signal tmp_42_fu_1141_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_1185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_rec_i_i_cast_fu_1691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_rec_i_i_cas_fu_1696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_ptr_0_sum9_i_i_cas_fu_1720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ac_ptr_0_sum_i_i_cas_fu_1881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_ptr_0_sum7_i_i_ca_fu_1899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_fu_1917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_i5_fu_1905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_1928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_rec_i_i_c_fu_2003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum67_i_i_1_fu_2027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_sum_i_i_cast_fu_2157_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tqmf_ptr_0_sum_i_i_c_fu_2174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_2573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_2651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_cast_cast_ca_fu_2450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_167_cast_cast_ca_fu_2560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext1_fu_1603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_ext_fu_1583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc45_ext_fu_1554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_142_ext_fu_2356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_ext_fu_1447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc2_ext_fu_1564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_ext_fu_1484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_1429_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc46_ext_fu_1613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_ext_fu_1593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_2533_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc3_ext_fu_2515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_ext_fu_2417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc_ext_fu_2505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_ext_fu_2407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_2345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp_116_fu_2781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc4_ext_fu_2763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_ext_fu_2743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_fu_2431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_trunc44_ext_fu_2753_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_ext_fu_2733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_fu_2690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1018_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg2_fu_1032_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr2_fu_1038_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_29_fu_1024_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t2_fu_1048_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_30_fu_1054_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_fu_1064_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg1_fu_1093_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_1099_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_12_fu_1109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_1119_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_35_fu_1085_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1129_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1133_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1155_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1211_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_1229_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1238_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_1577_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_fu_1655_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl4_fu_1666_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl3_cast_fu_1662_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl4_cast_fu_1673_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_1677_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1577_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_ptr_0_sum9_i_i_fu_1714_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_129_cast_fu_1758_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_132_cast_fu_1767_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1780_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_75_fu_1786_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_120_cast_fu_1794_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal p_shl7_fu_1803_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl8_fu_1815_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl7_cast_fu_1811_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl8_cast_fu_1823_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_78_fu_1827_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_76_fu_1790_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_122_cast_fu_1833_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_1797_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_1_fu_1837_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ac_ptr_0_sum_i_i_fu_1875_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_ptr_0_sum7_i_i_fu_1893_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_107_fu_1922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1943_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_39_fu_1954_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_1965_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl2_fu_1977_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl_cast_fu_1973_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl2_cast_fu_1985_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_1989_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_1943_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tqmf_ptr_0_sum67_i_i_fu_2021_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_115_cast_fu_2066_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_118_cast_fu_2075_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_2088_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_fu_2098_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_110_cast_fu_2102_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl5_fu_2111_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl6_fu_2123_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl5_cast_fu_2119_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl6_cast_fu_2131_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_72_fu_2135_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_37_fu_2094_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_112_cast_fu_2141_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_sum_i_i_fu_2151_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tqmf_ptr_0_sum_i_i_fu_2168_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_83_fu_2191_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_85_fu_2211_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_21_fu_2281_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2309_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_2339_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_2464_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_104_fu_2477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_2485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_assign_1_fu_2491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal decis_fu_2473_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_2582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_2603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_2609_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_22_fu_2619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_2629_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_119_fu_2595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_2623_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_2639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_120_fu_2643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2666_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_33_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1229_ce : STD_LOGIC;
    signal grp_fu_1238_ce : STD_LOGIC;
    signal grp_fu_1577_ce : STD_LOGIC;
    signal grp_fu_2339_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (76 downto 0);

    component filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        plt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_we0 : OUT STD_LOGIC;
        bli_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uppol1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        apl2 : IN STD_LOGIC_VECTOR (14 downto 0);
        plt : IN STD_LOGIC_VECTOR (31 downto 0);
        plt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component filtep IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rlt1 : IN STD_LOGIC_VECTOR (31 downto 0);
        al1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rlt2 : IN STD_LOGIC_VECTOR (31 downto 0);
        al2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component logscl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        il : IN STD_LOGIC_VECTOR (5 downto 0);
        nbl : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component logsch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ih : IN STD_LOGIC_VECTOR (31 downto 0);
        nbh : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component scalel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nbl : IN STD_LOGIC_VECTOR (14 downto 0);
        shift_constant : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component adpcm_main_mul_14tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_16udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_7svdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_32yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component Block_proc_dec_deibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_dec_dejbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_qq4_cokbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq6_colbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Block_proc_qq2_coocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Block_proc_tqmf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_proc_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Block_proc_accumc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dec_del_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bpl_address0,
        ce0 => dec_del_bpl_ce0,
        we0 => dec_del_bpl_we0,
        d0 => grp_upzero_fu_778_bli_d0,
        q0 => dec_del_bpl_q0);

    dec_del_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dltx_address0,
        ce0 => dec_del_dltx_ce0,
        we0 => dec_del_dltx_we0,
        d0 => grp_upzero_fu_778_dlti_d0,
        q0 => dec_del_dltx_q0,
        address1 => grp_upzero_fu_778_dlti_address1,
        ce1 => dec_del_dltx_ce1,
        we1 => dec_del_dltx_we1,
        d1 => grp_upzero_fu_778_dlti_d1,
        q1 => dec_del_dltx_q1);

    qq4_code4_table_U : component Block_proc_qq4_cokbM
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component Block_proc_qq6_colbW
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    dec_del_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_bph_address0,
        ce0 => dec_del_bph_ce0,
        we0 => dec_del_bph_we0,
        d0 => grp_upzero_fu_778_bli_d0,
        q0 => dec_del_bph_q0);

    dec_del_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dec_del_dhx_address0,
        ce0 => dec_del_dhx_ce0,
        we0 => dec_del_dhx_we0,
        d0 => grp_upzero_fu_778_dlti_d0,
        q0 => dec_del_dhx_q0,
        address1 => grp_upzero_fu_778_dlti_address1,
        ce1 => dec_del_dhx_ce1,
        we1 => dec_del_dhx_we1,
        d1 => grp_upzero_fu_778_dlti_d1,
        q1 => dec_del_dhx_q1);

    qq2_code2_table_U : component Block_proc_qq2_coocq
    generic map (
        DataWidth => 14,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq2_code2_table_address0,
        ce0 => qq2_code2_table_ce0,
        q0 => qq2_code2_table_q0);

    tqmf_U : component Block_proc_tqmf
    generic map (
        DataWidth => 32,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tqmf_address0,
        ce0 => tqmf_ce0,
        we0 => tqmf_we0,
        d0 => test_data_load_1_reg_3173,
        q0 => tqmf_q0,
        address1 => tqmf_address1,
        ce1 => tqmf_ce1,
        we1 => tqmf_we1,
        d1 => tqmf_d1,
        q1 => tqmf_q1);

    h_U : component Block_proc_h
    generic map (
        DataWidth => 15,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        q0 => h_q0,
        address1 => h_address1,
        ce1 => h_ce1,
        q1 => h_q1);

    delay_bpl_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bpl_address0,
        ce0 => delay_bpl_ce0,
        we0 => delay_bpl_we0,
        d0 => grp_upzero_fu_778_bli_d0,
        q0 => delay_bpl_q0);

    delay_dltx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dltx_address0,
        ce0 => delay_dltx_ce0,
        we0 => delay_dltx_we0,
        d0 => grp_upzero_fu_778_dlti_d0,
        q0 => delay_dltx_q0,
        address1 => grp_upzero_fu_778_dlti_address1,
        ce1 => delay_dltx_ce1,
        we1 => delay_dltx_we1,
        d1 => grp_upzero_fu_778_dlti_d1,
        q1 => delay_dltx_q1);

    delay_bph_U : component Block_proc_dec_deibs
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_bph_address0,
        ce0 => delay_bph_ce0,
        we0 => delay_bph_we0,
        d0 => grp_upzero_fu_778_bli_d0,
        q0 => delay_bph_q0);

    delay_dhx_U : component Block_proc_dec_dejbC
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => delay_dhx_address0,
        ce0 => delay_dhx_ce0,
        we0 => delay_dhx_we0,
        d0 => grp_upzero_fu_778_dlti_d0,
        q0 => delay_dhx_q0,
        address1 => grp_upzero_fu_778_dlti_address1,
        ce1 => delay_dhx_ce1,
        we1 => delay_dhx_we1,
        d1 => grp_upzero_fu_778_dlti_d1,
        q1 => delay_dhx_q1);

    accumc_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumc_address0,
        ce0 => accumc_ce0,
        we0 => accumc_we0,
        d0 => accumc_d0,
        q0 => accumc_q0);

    accumd_U : component Block_proc_accumc
    generic map (
        DataWidth => 32,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accumd_address0,
        ce0 => accumd_ce0,
        we0 => accumd_we0,
        d0 => accumd_d0,
        q0 => accumd_q0);

    grp_filtez_fu_755 : component filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_755_ap_start,
        ap_done => grp_filtez_fu_755_ap_done,
        ap_idle => grp_filtez_fu_755_ap_idle,
        ap_ready => grp_filtez_fu_755_ap_ready,
        bpl_address0 => grp_filtez_fu_755_bpl_address0,
        bpl_ce0 => grp_filtez_fu_755_bpl_ce0,
        bpl_q0 => grp_filtez_fu_755_bpl_q0,
        dlt_address0 => grp_filtez_fu_755_dlt_address0,
        dlt_ce0 => grp_filtez_fu_755_dlt_ce0,
        dlt_q0 => grp_filtez_fu_755_dlt_q0,
        ap_return => grp_filtez_fu_755_ap_return);

    grp_uppol2_fu_769 : component uppol2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol2_fu_769_ap_start,
        ap_done => grp_uppol2_fu_769_ap_done,
        ap_idle => grp_uppol2_fu_769_ap_idle,
        ap_ready => grp_uppol2_fu_769_ap_ready,
        al1 => grp_uppol2_fu_769_al1,
        al2 => grp_uppol2_fu_769_al2,
        plt => grp_uppol2_fu_769_plt,
        plt1 => grp_uppol2_fu_769_plt1,
        plt2 => grp_uppol2_fu_769_plt2,
        ap_return => grp_uppol2_fu_769_ap_return);

    grp_upzero_fu_778 : component upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_778_ap_start,
        ap_done => grp_upzero_fu_778_ap_done,
        ap_idle => grp_upzero_fu_778_ap_idle,
        ap_ready => grp_upzero_fu_778_ap_ready,
        dlt => grp_upzero_fu_778_dlt,
        dlti_address0 => grp_upzero_fu_778_dlti_address0,
        dlti_ce0 => grp_upzero_fu_778_dlti_ce0,
        dlti_we0 => grp_upzero_fu_778_dlti_we0,
        dlti_d0 => grp_upzero_fu_778_dlti_d0,
        dlti_q0 => grp_upzero_fu_778_dlti_q0,
        dlti_address1 => grp_upzero_fu_778_dlti_address1,
        dlti_ce1 => grp_upzero_fu_778_dlti_ce1,
        dlti_we1 => grp_upzero_fu_778_dlti_we1,
        dlti_d1 => grp_upzero_fu_778_dlti_d1,
        dlti_q1 => grp_upzero_fu_778_dlti_q1,
        bli_address0 => grp_upzero_fu_778_bli_address0,
        bli_ce0 => grp_upzero_fu_778_bli_ce0,
        bli_we0 => grp_upzero_fu_778_bli_we0,
        bli_d0 => grp_upzero_fu_778_bli_d0,
        bli_q0 => grp_upzero_fu_778_bli_q0);

    grp_uppol1_fu_793 : component uppol1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_uppol1_fu_793_ap_start,
        ap_done => grp_uppol1_fu_793_ap_done,
        ap_idle => grp_uppol1_fu_793_ap_idle,
        ap_ready => grp_uppol1_fu_793_ap_ready,
        al1 => grp_uppol1_fu_793_al1,
        apl2 => reg_965,
        plt => grp_uppol1_fu_793_plt,
        plt1 => grp_uppol1_fu_793_plt1,
        ap_return => grp_uppol1_fu_793_ap_return);

    grp_filtep_fu_801 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_801_ap_start,
        ap_done => grp_filtep_fu_801_ap_done,
        ap_idle => grp_filtep_fu_801_ap_idle,
        ap_ready => grp_filtep_fu_801_ap_ready,
        rlt1 => grp_filtep_fu_801_rlt1,
        al1 => grp_filtep_fu_801_al1,
        rlt2 => grp_filtep_fu_801_rlt2,
        al2 => grp_filtep_fu_801_al2,
        ap_return => grp_filtep_fu_801_ap_return);

    grp_filtep_fu_809 : component filtep
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtep_fu_809_ap_start,
        ap_done => grp_filtep_fu_809_ap_done,
        ap_idle => grp_filtep_fu_809_ap_idle,
        ap_ready => grp_filtep_fu_809_ap_ready,
        rlt1 => grp_filtep_fu_809_rlt1,
        al1 => grp_filtep_fu_809_al1,
        rlt2 => grp_filtep_fu_809_rlt2,
        al2 => grp_filtep_fu_809_al2,
        ap_return => grp_filtep_fu_809_ap_return);

    grp_quantl_fu_817 : component quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_817_ap_start,
        ap_done => grp_quantl_fu_817_ap_done,
        ap_idle => grp_quantl_fu_817_ap_idle,
        ap_ready => grp_quantl_fu_817_ap_ready,
        el => tmp_89_reg_3336,
        detl => detl,
        ap_return => grp_quantl_fu_817_ap_return);

    grp_logscl_fu_829 : component logscl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logscl_fu_829_ap_start,
        ap_done => grp_logscl_fu_829_ap_done,
        ap_idle => grp_logscl_fu_829_ap_idle,
        ap_ready => grp_logscl_fu_829_ap_ready,
        il => grp_logscl_fu_829_il,
        nbl => grp_logscl_fu_829_nbl,
        ap_return => grp_logscl_fu_829_ap_return);

    grp_logsch_fu_837 : component logsch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_logsch_fu_837_ap_start,
        ap_done => grp_logsch_fu_837_ap_done,
        ap_idle => grp_logsch_fu_837_ap_idle,
        ap_ready => grp_logsch_fu_837_ap_ready,
        ih => reg_925,
        nbh => grp_logsch_fu_837_nbh,
        ap_return => grp_logsch_fu_837_ap_return);

    grp_scalel_fu_845 : component scalel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scalel_fu_845_ap_start,
        ap_done => grp_scalel_fu_845_ap_done,
        ap_idle => grp_scalel_fu_845_ap_idle,
        ap_ready => grp_scalel_fu_845_ap_ready,
        nbl => grp_scalel_fu_845_nbl,
        shift_constant => grp_scalel_fu_845_shift_constant,
        ap_return => grp_scalel_fu_845_ap_return);

    adpcm_main_mul_14tde_U42 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_930,
        din1 => dec_deth,
        ce => ap_const_logic_1,
        dout => grp_fu_1211_p2);

    adpcm_main_mul_16udo_U43 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_934,
        din1 => grp_fu_1229_p1,
        ce => grp_fu_1229_ce,
        dout => grp_fu_1229_p2);

    adpcm_main_mul_16udo_U44 : component adpcm_main_mul_16udo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq6_code6_table_load_reg_2862,
        din1 => grp_fu_1238_p1,
        ce => grp_fu_1238_ce,
        dout => grp_fu_1238_p2);

    adpcm_main_mul_7svdy_U45 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1577_p0,
        din1 => tmp_69_reg_2989,
        ce => grp_fu_1577_ce,
        dout => grp_fu_1577_p2);

    adpcm_main_mul_32wdI_U46 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_970,
        din1 => reg_974,
        ce => ap_const_logic_1,
        dout => grp_fu_1739_p2);

    adpcm_main_mul_32wdI_U47 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_1_reg_3050,
        din1 => reg_978,
        ce => ap_const_logic_1,
        dout => grp_fu_1752_p2);

    adpcm_main_mul_7svdy_U48 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1780_p0,
        din1 => reg_970,
        ce => ap_const_logic_1,
        dout => grp_fu_1780_p2);

    adpcm_main_mul_32xdS_U49 : component adpcm_main_mul_32xdS
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_982,
        din1 => grp_fu_1943_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1943_p2);

    adpcm_main_mul_32wdI_U50 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_982,
        din1 => reg_974,
        ce => ap_const_logic_1,
        dout => grp_fu_2047_p2);

    adpcm_main_mul_32wdI_U51 : component adpcm_main_mul_32wdI
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_ptr_load_reg_3221,
        din1 => reg_978,
        ce => ap_const_logic_1,
        dout => grp_fu_2060_p2);

    adpcm_main_mul_7svdy_U52 : component adpcm_main_mul_7svdy
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 7,
        din1_WIDTH => 32,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2088_p0,
        din1 => reg_982,
        ce => ap_const_logic_1,
        dout => grp_fu_2088_p2);

    adpcm_main_mul_32yd2_U53 : component adpcm_main_mul_32yd2
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => detl,
        din1 => reg_934,
        ce => ap_const_logic_1,
        dout => grp_fu_2309_p2);

    adpcm_main_mul_32zec_U54 : component adpcm_main_mul_32zec
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => deth,
        din1 => grp_fu_2339_p1,
        ce => grp_fu_2339_ce,
        dout => grp_fu_2339_p2);

    adpcm_main_mul_14tde_U55 : component adpcm_main_mul_14tde
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_930,
        din1 => grp_fu_2666_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2666_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2805) and not((ap_const_lv1_0 = tmp_34_fu_1080_p2))) or (not((ap_const_lv1_0 = tmp_reg_2805)) and not((ap_const_lv1_0 = tmp_33_fu_1146_p2)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_801_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_801_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_801_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_801_ap_ready)) then 
                    ap_reg_grp_filtep_fu_801_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtep_fu_809_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtep_fu_809_ap_ready)) then 
                    ap_reg_grp_filtep_fu_809_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filtez_fu_755_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filtez_fu_755_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state55)))) then 
                    ap_reg_grp_filtez_fu_755_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filtez_fu_755_ap_ready)) then 
                    ap_reg_grp_filtez_fu_755_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logsch_fu_837_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logsch_fu_837_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_logsch_fu_837_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logsch_fu_837_ap_ready)) then 
                    ap_reg_grp_logsch_fu_837_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_logscl_fu_829_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_logscl_fu_829_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)))) then 
                    ap_reg_grp_logscl_fu_829_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_logscl_fu_829_ap_ready)) then 
                    ap_reg_grp_logscl_fu_829_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_quantl_fu_817_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_quantl_fu_817_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_reg_grp_quantl_fu_817_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_quantl_fu_817_ap_ready)) then 
                    ap_reg_grp_quantl_fu_817_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_scalel_fu_845_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_scalel_fu_845_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state65)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)))) then 
                    ap_reg_grp_scalel_fu_845_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_scalel_fu_845_ap_ready)) then 
                    ap_reg_grp_scalel_fu_845_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol1_fu_793_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol1_fu_793_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state65)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state76)))) then 
                    ap_reg_grp_uppol1_fu_793_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol1_fu_793_ap_ready)) then 
                    ap_reg_grp_uppol1_fu_793_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_uppol2_fu_769_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_uppol2_fu_769_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_uppol2_fu_769_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_uppol2_fu_769_ap_ready)) then 
                    ap_reg_grp_uppol2_fu_769_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_upzero_fu_778_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_upzero_fu_778_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state63)) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then 
                    ap_reg_grp_upzero_fu_778_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_upzero_fu_778_ap_ready)) then 
                    ap_reg_grp_upzero_fu_778_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_ptr_0_rec_i_i_reg_627_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                ad_ptr_0_rec_i_i_reg_627 <= p_rec2_i_i_reg_3035;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                ad_ptr_0_rec_i_i_reg_627 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    ad_ptr_1_rec_i_i_reg_669_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                ad_ptr_1_rec_i_i_reg_669 <= p_rec_i_i_reg_3125;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                ad_ptr_1_rec_i_i_reg_669 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h_ptr_0_rec_i_i_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                h_ptr_0_rec_i_i_reg_638 <= phitmp_i_i3_reg_3045;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                h_ptr_0_rec_i_i_reg_638 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_lv1_0 = tmp_fu_1012_p2))) then 
                i_0_i1_reg_603 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                i_0_i1_reg_603 <= i_5_fu_1933_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_702_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                i_0_i_i_reg_702 <= i_reg_3201;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                i_0_i_i_reg_702 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_615_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and not((ap_const_lv1_0 = tmp_fu_1012_p2)))) then 
                i_0_i_reg_615 <= ap_const_lv32_0;
            elsif ((not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state77))) then 
                i_0_i_reg_615 <= i_7_reg_3446;
            end if; 
        end if;
    end process;

    i_1_i_i4_reg_680_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                i_1_i_i4_reg_680 <= i_6_reg_3143;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                i_1_i_i4_reg_680 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                i_1_i_i_reg_744 <= i_4_reg_3306;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state51))) then 
                i_1_i_i_reg_744 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ih_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66) and not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))) and not((ap_const_lv1_0 = tmp_105_reg_3432)))) then 
                ih <= tmp_167_cast_cast_ca_fu_2560_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
                ih <= tmp_158_cast_cast_ca_fu_2450_p3;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                ih <= tmp_43_fu_1165_p1;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_pn_rec_i_s_reg_733_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_733 <= tqmf_ptr1_0_rec_i_i_reg_3293;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state51))) then 
                tqmf_ptr_0_pn_rec_i_s_reg_733 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tqmf_ptr_0_rec_i_i_reg_691_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                tqmf_ptr_0_rec_i_i_reg_691 <= phitmp_i_i_reg_3216;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                tqmf_ptr_0_rec_i_i_reg_691 <= ap_const_lv5_2;
            end if; 
        end if;
    end process;

    xa1_0_i_i_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                xa1_0_i_i_reg_659 <= xa1_2_fu_1761_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                xa1_0_i_i_reg_659 <= xa1_cast_fu_1683_p1;
            end if; 
        end if;
    end process;

    xa2_0_i_i_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24))) then 
                xa2_0_i_i_reg_649 <= xa2_2_fu_1770_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
                xa2_0_i_i_reg_649 <= xa2_cast_fu_1687_p1;
            end if; 
        end if;
    end process;

    xa_0_i_i_reg_713_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                xa_0_i_i_reg_713 <= xa_2_fu_2069_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                xa_0_i_i_reg_713 <= xa_cast_fu_1995_p1;
            end if; 
        end if;
    end process;

    xb_0_i_i_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45))) then 
                xb_0_i_i_reg_723 <= xb_2_fu_2078_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
                xb_0_i_i_reg_723 <= xb_cast_fu_1999_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31))) then
                accumc_addr_1_reg_3115 <= ac_ptr_0_sum_i_i_cas_fu_1881_p1(4 - 1 downto 0);
                accumd_addr_1_reg_3120 <= ac_ptr_0_sum_i_i_cas_fu_1881_p1(4 - 1 downto 0);
                i_6_reg_3143 <= i_6_fu_1911_p2;
                p_rec_i_i_reg_3125 <= p_rec_i_i_fu_1887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then
                accumd_load_1_reg_3050 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state77))) then
                ah1 <= p_trunc4_ext_fu_2763_p1;
                    deth(14 downto 0) <= p_trunc44_ext_fu_2753_p1(14 downto 0);
                rh1 <= tmp_116_fu_2781_p2;
                rh2 <= rh1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then
                ah2 <= tmp_176_ext_fu_2743_p1;
                    nbh(14 downto 0) <= tmp_173_ext_fu_2733_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state66) and not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))))) then
                al1 <= p_trunc3_ext_fu_2515_p1;
                    detl(14 downto 0) <= p_trunc_ext_fu_2505_p1(14 downto 0);
                rlt1 <= tmp_99_fu_2533_p2;
                rlt2 <= rlt1;
                    tmp_159_cast1_reg_3436(14 downto 0) <= tmp_159_cast1_fu_2557_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then
                al2 <= tmp_152_ext_fu_2417_p1;
                    nbl(14 downto 0) <= tmp_149_ext_fu_2407_p1(14 downto 0);
                tmp_102_reg_3427 <= n_assign_fu_2431_p2(31 downto 31);
                tmp_105_reg_3432 <= tmp_105_fu_2499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done) or (ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))))) then
                dec_ah1 <= p_trunc2_ext_fu_1564_p1;
                    dec_detl(14 downto 0) <= p_trunc45_ext_fu_1554_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then
                dec_ah2 <= tmp_102_ext_fu_1484_p1;
                    dec_nbl(14 downto 0) <= tmp_85_ext_fu_1447_p1(14 downto 0);
                dec_plt1 <= dec_plt;
                dec_plt1_load_reg_2978 <= dec_plt1;
                dec_plt2 <= dec_plt1;
                dec_plt2_load_reg_2984 <= dec_plt2;
                dec_rh1 <= tmp_68_fu_1502_p2;
                dec_rh2 <= dec_rh1;
                tmp_69_reg_2989 <= tmp_69_fu_1530_p2;
                tmp_70_reg_2995 <= tmp_70_fu_1536_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state16))) then
                dec_al1 <= p_trunc_ext1_fu_1603_p1;
                    dec_deth(14 downto 0) <= p_trunc46_ext_fu_1613_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                dec_al2 <= tmp_88_ext_fu_1583_p1;
                    dec_nbh(14 downto 0) <= tmp_99_ext_fu_1593_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_755_ap_done)))) then
                dec_dh <= tmp_11_fu_1260_p1;
                dec_ph <= tmp_63_fu_1263_p2;
                tmp_11_reg_2888 <= tmp_11_fu_1260_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then
                dec_dlt <= grp_fu_1229_p2(46 downto 15);
                dec_ph1 <= dec_ph;
                dec_ph1_load_reg_2961 <= dec_ph1;
                dec_ph2 <= dec_ph1;
                dec_ph2_load_reg_2967 <= dec_ph2;
                tmp_48_reg_2903 <= grp_fu_1229_p2(46 downto 15);
                tmp_52_reg_2909 <= grp_fu_1238_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done))))) then
                dec_plt <= tmp_49_fu_1407_p2;
                dec_sh <= tmp_60_fu_1429_p2;
                dec_sl <= grp_fu_885_p2;
                rl <= tmp_53_fu_1412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                dec_rlt1 <= tmp_58_fu_1631_p2;
                dec_rlt2 <= dec_rlt1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state73))) then
                dh <= tmp_27_fu_2681_p1;
                ph <= tmp_113_fu_2690_p2;
                tmp_27_reg_3461 <= tmp_27_fu_2681_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then
                dlt <= grp_fu_2309_p2(46 downto 15);
                tmp_93_reg_3379 <= grp_fu_2309_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52))) then
                i_4_reg_3306 <= i_4_fu_2185_p2;
                tqmf_addr_2_reg_3288 <= p_sum_i_i_cast_fu_2157_p1(5 - 1 downto 0);
                tqmf_ptr1_0_rec_i_i_reg_3293 <= tqmf_ptr1_0_rec_i_i_fu_2162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then
                i_7_reg_3446 <= i_7_fu_2656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then
                i_reg_3201 <= i_fu_2015_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state63))) then
                    il(5 downto 0) <= tmp_142_ext_fu_2356_p1(5 downto 0);
                plt1 <= plt;
                plt1_load_reg_3406 <= plt1;
                plt2 <= plt1;
                plt2_load_reg_3412 <= plt2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then
                p_rec2_i_i_reg_3035 <= p_rec2_i_i_fu_1708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state74))) then
                ph1 <= ph;
                ph1_load_reg_3477 <= ph1;
                ph2 <= ph1;
                ph2_load_reg_3483 <= ph2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1702_p2))) then
                phitmp_i_i3_reg_3045 <= phitmp_i_i3_fu_1725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2))) then
                phitmp_i_i_reg_3216 <= phitmp_i_i_fu_2033_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then
                plt <= tmp_94_fu_2345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                qq6_code6_table_load_reg_2862 <= qq6_code6_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state74)))) then
                reg_1006 <= ah2;
                reg_999 <= ah1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then
                reg_925 <= ih;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state68)))) then
                reg_930 <= qq2_code2_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)))) then
                reg_934 <= qq4_code4_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_755_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_state54) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done)))))) then
                reg_938 <= grp_filtez_fu_755_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then
                reg_942 <= dec_al1;
                reg_949 <= dec_al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))))) then
                reg_955 <= grp_logscl_fu_829_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state75) and not(((ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))))) then
                reg_960 <= grp_logsch_fu_837_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state75) and not(((ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done) or (ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))))) then
                reg_965 <= grp_uppol2_fu_769_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then
                reg_970 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then
                reg_974 <= h_q0;
                reg_978 <= h_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)))) then
                reg_982 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state63)))) then
                reg_986 <= al1;
                reg_993 <= al2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done))))) then
                sh <= tmp_101_fu_2397_p2;
                tmp_101_reg_3417 <= tmp_101_fu_2397_p2;
                tmp_103_reg_3422 <= grp_fu_2339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state54) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done))))) then
                sl <= grp_fu_885_p2;
                tmp_100_reg_3341 <= grp_filtep_fu_809_ap_return;
                tmp_89_reg_3336 <= tmp_89_fu_2247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state38))) then
                test_data_load_1_reg_3173 <= test_data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state37))) then
                test_data_load_reg_3163 <= test_data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state9))) then
                tmp_10_reg_2883 <= grp_fu_1211_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                tmp_18_reg_2832 <= compressed_q0(5 downto 2);
                tmp_36_reg_2826 <= tmp_36_fu_1151_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_quantl_fu_817_ap_done))))) then
                tmp_23_reg_3363 <= grp_filtez_fu_755_ap_return;
                tmp_90_reg_3352 <= grp_quantl_fu_817_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state72))) then
                tmp_26_reg_3456 <= grp_fu_2666_p2(44 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then
                    tmp_32_reg_2809(31 downto 1) <= tmp_32_fu_1072_p3(31 downto 1);
                tmp_reg_2805 <= tmp_fu_1012_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state50))) then
                tmp_71_reg_3271 <= grp_fu_2088_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44))) then
                tmp_73_reg_3246 <= grp_fu_2047_p2;
                tmp_74_reg_3251 <= grp_fu_2060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then
                tmp_77_reg_3100 <= grp_fu_1780_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then
                tmp_79_reg_3105 <= xa1_1_fu_1797_p2(45 downto 14);
                tmp_80_reg_3110 <= xa2_1_fu_1837_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then
                tmp_81_reg_3075 <= grp_fu_1739_p2;
                tmp_82_reg_3080 <= grp_fu_1752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0)))) then
                tmp_84_reg_3311 <= tmp_83_fu_2191_p2(46 downto 15);
                xh <= tmp_85_fu_2211_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then
                tqmf_ptr_load_reg_3221 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state51))) then
                xa_1_reg_3276 <= xa_1_fu_2105_p2;
                xb_1_reg_3282 <= xb_1_fu_2145_p2;
            end if;
        end if;
    end process;
    dec_detl(31 downto 15) <= "00000000000000000";
    il(31 downto 6) <= "00000000000000000000000000";
    dec_nbl(31 downto 15) <= "00000000000000000";
    dec_deth(31 downto 15) <= "00000000000000000";
    dec_nbh(31 downto 15) <= "00000000000000000";
    detl(31 downto 15) <= "00000000000000000";
    nbl(31 downto 15) <= "00000000000000000";
    deth(31 downto 15) <= "00000000000000000";
    nbh(31 downto 15) <= "00000000000000000";
    tmp_32_reg_2809(0) <= '0';
    tmp_159_cast1_reg_3436(44 downto 15) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, grp_filtez_fu_755_ap_done, grp_filtep_fu_801_ap_done, grp_filtep_fu_809_ap_done, grp_logscl_fu_829_ap_done, grp_logsch_fu_837_ap_done, grp_upzero_fu_778_ap_done, grp_uppol2_fu_769_ap_done, grp_scalel_fu_845_ap_done, grp_uppol1_fu_793_ap_done, exitcond_i_i_fu_2179_p2, tmp_reg_2805, tmp_34_fu_1080_p2, exitcond_fu_1702_p2, exitcond2_i_i_fu_2009_p2, grp_quantl_fu_817_ap_done, exitcond_i_i5_fu_1905_p2, tmp_33_fu_1146_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((((ap_const_lv1_0 = tmp_reg_2805) and not((ap_const_lv1_0 = tmp_34_fu_1080_p2))) or (not((ap_const_lv1_0 = tmp_reg_2805)) and not((ap_const_lv1_0 = tmp_33_fu_1146_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((ap_const_lv1_0 = tmp_reg_2805)) and (ap_const_lv1_0 = tmp_33_fu_1146_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (not((ap_const_logic_0 = grp_filtez_fu_755_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done) or (ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (not(((ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done) or (ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (not((ap_const_lv1_0 = exitcond_fu_1702_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (not((ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state54 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_filtep_fu_801_ap_done) or (ap_const_logic_0 = grp_filtep_fu_809_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_quantl_fu_817_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (not(((ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (not(((ap_const_logic_0 = grp_logsch_fu_837_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ac_ptr_0_sum_i_i_cas_fu_1881_p1 <= std_logic_vector(resize(unsigned(ac_ptr_0_sum_i_i_fu_1875_p2),64));
    ac_ptr_0_sum_i_i_fu_1875_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_669) + unsigned(ap_const_lv5_A));

    accumc_address0_assign_proc : process(ap_CS_fsm_state18, exitcond_fu_1702_p2, accumc_addr_1_reg_3115, ap_CS_fsm_state31, ap_CS_fsm_state32, ad_ptr_0_rec_i_i_cas_fu_1696_p1, ad_ptr_0_sum7_i_i_ca_fu_1899_p1, exitcond_i_i5_fu_1905_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumc_address0 <= accumc_addr_1_reg_3115;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))) then 
            accumc_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1899_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18) and not((ap_const_lv1_0 = exitcond_fu_1702_p2)))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1702_p2))) then 
            accumc_address0 <= ad_ptr_0_rec_i_i_cas_fu_1696_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_state18, exitcond_fu_1702_p2, ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18) and (ap_const_lv1_0 = exitcond_fu_1702_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not((ap_const_lv1_0 = exitcond_fu_1702_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, tmp_70_reg_2995, ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumc_d0 <= accumc_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumc_d0 <= tmp_70_reg_2995;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state29, ap_CS_fsm_state31, accumd_addr_1_reg_3120, ap_CS_fsm_state32, ad_ptr_0_rec_i_i_cas_fu_1696_p1, ad_ptr_0_sum7_i_i_ca_fu_1899_p1, exitcond_i_i5_fu_1905_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumd_address0 <= accumd_addr_1_reg_3120;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))) then 
            accumd_address0 <= ad_ptr_0_sum7_i_i_ca_fu_1899_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            accumd_address0 <= ad_ptr_0_rec_i_i_cas_fu_1696_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and (ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, tmp_69_reg_2989, ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
            accumd_d0 <= accumd_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2)))) then 
            accumd_d0 <= tmp_69_reg_2989;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state32, exitcond_i_i5_fu_1905_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ad_ptr_0_rec_i_i_cas_fu_1696_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_rec_i_i_reg_627),64));
    ad_ptr_0_sum7_i_i_ca_fu_1899_p1 <= std_logic_vector(resize(unsigned(ad_ptr_0_sum7_i_i_fu_1893_p2),64));
    ad_ptr_0_sum7_i_i_fu_1893_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_669) + unsigned(ap_const_lv5_9));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state44 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61 downto 61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62 downto 62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63 downto 63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64 downto 64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65 downto 65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66 downto 66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67 downto 67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68 downto 68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state72 <= ap_CS_fsm(71 downto 71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72 downto 72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73 downto 73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74 downto 74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75 downto 75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76 downto 76);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_done_reg, tmp_reg_2805, ap_CS_fsm_state2, tmp_34_fu_1080_p2, tmp_33_fu_1146_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2805) and not((ap_const_lv1_0 = tmp_34_fu_1080_p2))) or (not((ap_const_lv1_0 = tmp_reg_2805)) and not((ap_const_lv1_0 = tmp_33_fu_1146_p2))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_2805, ap_CS_fsm_state2, tmp_34_fu_1080_p2, tmp_33_fu_1146_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (((ap_const_lv1_0 = tmp_reg_2805) and not((ap_const_lv1_0 = tmp_34_fu_1080_p2))) or (not((ap_const_lv1_0 = tmp_reg_2805)) and not((ap_const_lv1_0 = tmp_33_fu_1146_p2)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    compressed_address0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state2, tmp_42_fu_1141_p1, tmp_121_fu_2651_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            compressed_address0 <= tmp_121_fu_2651_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            compressed_address0 <= tmp_42_fu_1141_p1(2 - 1 downto 0);
        else 
            compressed_address0 <= "XX";
        end if; 
    end process;


    compressed_ce0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state67)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)))) then 
            compressed_ce0 <= ap_const_logic_1;
        else 
            compressed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    compressed_d0 <= (il or tmp_117_fu_2582_p2);

    compressed_we0_assign_proc : process(ap_CS_fsm_state67)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            compressed_we0 <= ap_const_logic_1;
        else 
            compressed_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_755_bpl_address0, grp_upzero_fu_778_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_address0 <= grp_upzero_fu_778_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_address0 <= grp_filtez_fu_755_bpl_address0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_755_bpl_ce0, grp_upzero_fu_778_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_ce0 <= grp_upzero_fu_778_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_bph_ce0 <= grp_filtez_fu_755_bpl_ce0;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_778_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bph_we0 <= grp_upzero_fu_778_bli_we0;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_755_bpl_address0, grp_upzero_fu_778_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_address0 <= grp_upzero_fu_778_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bpl_address0 <= grp_filtez_fu_755_bpl_address0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_755_bpl_ce0, grp_upzero_fu_778_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_ce0 <= grp_upzero_fu_778_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_bpl_ce0 <= grp_filtez_fu_755_bpl_ce0;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_778_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_bpl_we0 <= grp_upzero_fu_778_bli_we0;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_755_dlt_address0, grp_upzero_fu_778_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_address0 <= grp_upzero_fu_778_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_address0 <= grp_filtez_fu_755_dlt_address0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, grp_filtez_fu_755_dlt_ce0, grp_upzero_fu_778_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_ce0 <= grp_upzero_fu_778_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            dec_del_dhx_ce0 <= grp_filtez_fu_755_dlt_ce0;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_778_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_ce1 <= grp_upzero_fu_778_dlti_ce1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_778_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_we0 <= grp_upzero_fu_778_dlti_we0;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state12, grp_upzero_fu_778_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dhx_we1 <= grp_upzero_fu_778_dlti_we1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_755_dlt_address0, grp_upzero_fu_778_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_address0 <= grp_upzero_fu_778_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dltx_address0 <= grp_filtez_fu_755_dlt_address0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, grp_filtez_fu_755_dlt_ce0, grp_upzero_fu_778_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_ce0 <= grp_upzero_fu_778_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            dec_del_dltx_ce0 <= grp_filtez_fu_755_dlt_ce0;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_778_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_ce1 <= grp_upzero_fu_778_dlti_ce1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_778_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_we0 <= grp_upzero_fu_778_dlti_we0;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state14, grp_upzero_fu_778_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dec_del_dltx_we1 <= grp_upzero_fu_778_dlti_we1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_address0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state33, tmp_106_fu_1917_p1, tmp_108_fu_1928_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            dec_result_address0 <= tmp_108_fu_1928_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
            dec_result_address0 <= tmp_106_fu_1917_p1(2 - 1 downto 0);
        else 
            dec_result_address0 <= "XX";
        end if; 
    end process;


    dec_result_ce0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)))) then 
            dec_result_ce0 <= ap_const_logic_1;
        else 
            dec_result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_result_d0_assign_proc : process(tmp_79_reg_3105, tmp_80_reg_3110, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
            dec_result_d0 <= tmp_80_reg_3110;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state31))) then 
            dec_result_d0 <= tmp_79_reg_3105;
        else 
            dec_result_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_result_we0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state33, exitcond_i_i5_fu_1905_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((ap_const_lv1_0 = exitcond_i_i5_fu_1905_p2))))) then 
            dec_result_we0 <= ap_const_logic_1;
        else 
            dec_result_we0 <= ap_const_logic_0;
        end if; 
    end process;

        decis_fu_2473_p1 <= std_logic_vector(resize(signed(tmp_13_fu_2464_p4),32));


    delay_bph_address0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_755_bpl_address0, grp_upzero_fu_778_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_address0 <= grp_upzero_fu_778_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_bph_address0 <= grp_filtez_fu_755_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_755_bpl_ce0, grp_upzero_fu_778_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_ce0 <= grp_upzero_fu_778_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_bph_ce0 <= grp_filtez_fu_755_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we0_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_778_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_bph_we0 <= grp_upzero_fu_778_bli_we0;
        else 
            delay_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_755_bpl_address0, grp_upzero_fu_778_bli_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_address0 <= grp_upzero_fu_778_bli_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_bpl_address0 <= grp_filtez_fu_755_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_755_bpl_ce0, grp_upzero_fu_778_bli_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_ce0 <= grp_upzero_fu_778_bli_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_bpl_ce0 <= grp_filtez_fu_755_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we0_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_778_bli_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_bpl_we0 <= grp_upzero_fu_778_bli_we0;
        else 
            delay_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_755_dlt_address0, grp_upzero_fu_778_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_address0 <= grp_upzero_fu_778_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_dhx_address0 <= grp_filtez_fu_755_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state56, grp_filtez_fu_755_dlt_ce0, grp_upzero_fu_778_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_ce0 <= grp_upzero_fu_778_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            delay_dhx_ce0 <= grp_filtez_fu_755_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_778_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_ce1 <= grp_upzero_fu_778_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_778_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_we0 <= grp_upzero_fu_778_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state75, grp_upzero_fu_778_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            delay_dhx_we1 <= grp_upzero_fu_778_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_755_dlt_address0, grp_upzero_fu_778_dlti_address0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_address0 <= grp_upzero_fu_778_dlti_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_dltx_address0 <= grp_filtez_fu_755_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state64, grp_filtez_fu_755_dlt_ce0, grp_upzero_fu_778_dlti_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_ce0 <= grp_upzero_fu_778_dlti_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            delay_dltx_ce0 <= grp_filtez_fu_755_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_778_dlti_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_ce1 <= grp_upzero_fu_778_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_778_dlti_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_we0 <= grp_upzero_fu_778_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state64, grp_upzero_fu_778_dlti_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            delay_dltx_we1 <= grp_upzero_fu_778_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_i_i_fu_2009_p2 <= "1" when (i_0_i_i_reg_702 = ap_const_lv4_A) else "0";
    exitcond_fu_1702_p2 <= "1" when (ad_ptr_0_rec_i_i_reg_627 = ap_const_lv4_A) else "0";
    exitcond_i_i5_fu_1905_p2 <= "1" when (i_1_i_i4_reg_680 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_2179_p2 <= "1" when (i_1_i_i_reg_744 = ap_const_lv5_16) else "0";

    grp_filtep_fu_801_al1_assign_proc : process(ap_CS_fsm_state54, reg_942, ap_CS_fsm_state12, reg_986)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_801_al1 <= reg_986;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_801_al1 <= reg_942;
        else 
            grp_filtep_fu_801_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_801_al2_assign_proc : process(ap_CS_fsm_state54, reg_949, ap_CS_fsm_state12, reg_993)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_801_al2 <= reg_993;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_801_al2 <= reg_949;
        else 
            grp_filtep_fu_801_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_801_ap_start <= ap_reg_grp_filtep_fu_801_ap_start;

    grp_filtep_fu_801_rlt1_assign_proc : process(dec_rlt1, rlt1, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_801_rlt1 <= rlt1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_801_rlt1 <= dec_rlt1;
        else 
            grp_filtep_fu_801_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_801_rlt2_assign_proc : process(dec_rlt2, rlt2, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_801_rlt2 <= rlt2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_801_rlt2 <= dec_rlt2;
        else 
            grp_filtep_fu_801_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_809_al1_assign_proc : process(dec_ah1, ap_CS_fsm_state54, ap_CS_fsm_state12, reg_999)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_al1 <= reg_999;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_al1 <= dec_ah1;
        else 
            grp_filtep_fu_809_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_809_al2_assign_proc : process(dec_ah2, ap_CS_fsm_state54, ap_CS_fsm_state12, reg_1006)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_al2 <= reg_1006;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_al2 <= dec_ah2;
        else 
            grp_filtep_fu_809_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtep_fu_809_ap_start <= ap_reg_grp_filtep_fu_809_ap_start;

    grp_filtep_fu_809_rlt1_assign_proc : process(dec_rh1, rh1, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_rlt1 <= rh1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_rlt1 <= dec_rh1;
        else 
            grp_filtep_fu_809_rlt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtep_fu_809_rlt2_assign_proc : process(dec_rh2, rh2, ap_CS_fsm_state54, ap_CS_fsm_state12)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtep_fu_809_rlt2 <= rh2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtep_fu_809_rlt2 <= dec_rh2;
        else 
            grp_filtep_fu_809_rlt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_filtez_fu_755_ap_start <= ap_reg_grp_filtez_fu_755_ap_start;

    grp_filtez_fu_755_bpl_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state10, ap_CS_fsm_state54, ap_CS_fsm_state12, ap_CS_fsm_state56)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            grp_filtez_fu_755_bpl_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtez_fu_755_bpl_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtez_fu_755_bpl_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_755_bpl_q0 <= dec_del_bph_q0;
        else 
            grp_filtez_fu_755_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_755_dlt_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state10, ap_CS_fsm_state54, ap_CS_fsm_state12, ap_CS_fsm_state56)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            grp_filtez_fu_755_dlt_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_filtez_fu_755_dlt_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_filtez_fu_755_dlt_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            grp_filtez_fu_755_dlt_q0 <= dec_del_dhx_q0;
        else 
            grp_filtez_fu_755_dlt_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1229_ce_assign_proc : process(ap_CS_fsm_state10, grp_filtez_fu_755_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_755_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state11) or (ap_const_lv1_1 = ap_CS_fsm_state8) or (ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_fu_1229_ce <= ap_const_logic_1;
        else 
            grp_fu_1229_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1229_p1 <= tmp_73_cast_fu_1221_p1(32 - 1 downto 0);

    grp_fu_1238_ce_assign_proc : process(ap_CS_fsm_state10, grp_filtez_fu_755_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_const_logic_0 = grp_filtez_fu_755_ap_done))) or (ap_const_lv1_1 = ap_CS_fsm_state11) or (ap_const_lv1_1 = ap_CS_fsm_state8) or (ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            grp_fu_1238_ce <= ap_const_logic_1;
        else 
            grp_fu_1238_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1238_p1 <= tmp_73_cast_fu_1221_p1(32 - 1 downto 0);

    grp_fu_1577_ce_assign_proc : process(grp_upzero_fu_778_ap_done, grp_uppol2_fu_769_ap_done, ap_CS_fsm_state14, grp_scalel_fu_845_ap_done, grp_uppol1_fu_793_ap_done, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done) or (ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state17) or (ap_const_lv1_1 = ap_CS_fsm_state15) or (not(((ap_const_logic_0 = grp_scalel_fu_845_ap_done) or (ap_const_logic_0 = grp_uppol1_fu_793_ap_done))) and (ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_fu_1577_ce <= ap_const_logic_1;
        else 
            grp_fu_1577_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1577_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_1780_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_1943_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_2088_p0 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);

    grp_fu_2339_ce_assign_proc : process(grp_logscl_fu_829_ap_done, grp_upzero_fu_778_ap_done, grp_uppol2_fu_769_ap_done, ap_CS_fsm_state64, ap_CS_fsm_state63, ap_CS_fsm_state61, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state64) and not(((ap_const_logic_0 = grp_logscl_fu_829_ap_done) or (ap_const_logic_0 = grp_upzero_fu_778_ap_done) or (ap_const_logic_0 = grp_uppol2_fu_769_ap_done)))) or (ap_const_lv1_1 = ap_CS_fsm_state63) or (ap_const_lv1_1 = ap_CS_fsm_state61) or (ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            grp_fu_2339_ce <= ap_const_logic_1;
        else 
            grp_fu_2339_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2339_p1 <= ap_const_lv43_234(11 - 1 downto 0);
    grp_fu_2666_p1 <= tmp_159_cast1_reg_3436(32 - 1 downto 0);
    grp_fu_885_p2 <= std_logic_vector(unsigned(grp_filtep_fu_801_ap_return) + unsigned(grp_filtez_fu_755_ap_return));
    grp_logsch_fu_837_ap_start <= ap_reg_grp_logsch_fu_837_ap_start;

    grp_logsch_fu_837_nbh_assign_proc : process(dec_nbh, nbh, ap_CS_fsm_state12, ap_CS_fsm_state75)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_logsch_fu_837_nbh <= nbh;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logsch_fu_837_nbh <= dec_nbh;
        else 
            grp_logsch_fu_837_nbh <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_logscl_fu_829_ap_start <= ap_reg_grp_logscl_fu_829_ap_start;

    grp_logscl_fu_829_il_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, tmp_36_reg_2826, tmp_90_reg_3352)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_logscl_fu_829_il <= tmp_90_reg_3352;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logscl_fu_829_il <= tmp_36_reg_2826;
        else 
            grp_logscl_fu_829_il <= "XXXXXX";
        end if; 
    end process;


    grp_logscl_fu_829_nbl_assign_proc : process(dec_nbl, nbl, ap_CS_fsm_state12, ap_CS_fsm_state64)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_logscl_fu_829_nbl <= nbl;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_logscl_fu_829_nbl <= dec_nbl;
        else 
            grp_logscl_fu_829_nbl <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantl_fu_817_ap_start <= ap_reg_grp_quantl_fu_817_ap_start;
    grp_scalel_fu_845_ap_start <= ap_reg_grp_scalel_fu_845_ap_start;

    grp_scalel_fu_845_nbl_assign_proc : process(reg_955, reg_960, ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state77)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_845_nbl <= reg_960;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)))) then 
            grp_scalel_fu_845_nbl <= reg_955;
        else 
            grp_scalel_fu_845_nbl <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scalel_fu_845_shift_constant_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state77)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            grp_scalel_fu_845_shift_constant <= ap_const_lv5_A;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state66)))) then 
            grp_scalel_fu_845_shift_constant <= ap_const_lv5_8;
        else 
            grp_scalel_fu_845_shift_constant <= "XXXXX";
        end if; 
    end process;


    grp_uppol1_fu_793_al1_assign_proc : process(dec_ah1, reg_942, ap_CS_fsm_state14, reg_986, reg_999, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_793_al1 <= reg_999;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_793_al1 <= reg_986;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_793_al1 <= reg_942;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_793_al1 <= dec_ah1;
        else 
            grp_uppol1_fu_793_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol1_fu_793_ap_start <= ap_reg_grp_uppol1_fu_793_ap_start;

    grp_uppol1_fu_793_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_793_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_793_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_793_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_793_plt <= dec_ph;
        else 
            grp_uppol1_fu_793_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol1_fu_793_plt1_assign_proc : process(ap_CS_fsm_state14, dec_ph1_load_reg_2961, dec_plt1_load_reg_2978, plt1_load_reg_3406, ap_CS_fsm_state66, ph1_load_reg_3477, ap_CS_fsm_state77, ap_CS_fsm_state16)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state77))) then 
            grp_uppol1_fu_793_plt1 <= ph1_load_reg_3477;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state66))) then 
            grp_uppol1_fu_793_plt1 <= plt1_load_reg_3406;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_uppol1_fu_793_plt1 <= dec_plt1_load_reg_2978;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol1_fu_793_plt1 <= dec_ph1_load_reg_2961;
        else 
            grp_uppol1_fu_793_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_769_al1_assign_proc : process(dec_ah1, reg_942, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, reg_986, reg_999)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_769_al1 <= reg_999;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_769_al1 <= reg_986;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_769_al1 <= reg_942;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_769_al1 <= dec_ah1;
        else 
            grp_uppol2_fu_769_al1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_769_al2_assign_proc : process(dec_ah2, reg_949, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, reg_993, reg_1006)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_769_al2 <= reg_1006;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_769_al2 <= reg_993;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_769_al2 <= reg_949;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_769_al2 <= dec_ah2;
        else 
            grp_uppol2_fu_769_al2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_uppol2_fu_769_ap_start <= ap_reg_grp_uppol2_fu_769_ap_start;

    grp_uppol2_fu_769_plt_assign_proc : process(dec_plt, dec_ph, plt, ph, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_769_plt <= ph;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_769_plt <= plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_769_plt <= dec_plt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_769_plt <= dec_ph;
        else 
            grp_uppol2_fu_769_plt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_769_plt1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, dec_ph1_load_reg_2961, dec_plt1_load_reg_2978, plt1_load_reg_3406, ph1_load_reg_3477)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_769_plt1 <= ph1_load_reg_3477;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_769_plt1 <= plt1_load_reg_3406;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_769_plt1 <= dec_plt1_load_reg_2978;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_769_plt1 <= dec_ph1_load_reg_2961;
        else 
            grp_uppol2_fu_769_plt1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_uppol2_fu_769_plt2_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, dec_ph2_load_reg_2967, dec_plt2_load_reg_2984, plt2_load_reg_3412, ph2_load_reg_3483)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_uppol2_fu_769_plt2 <= ph2_load_reg_3483;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_uppol2_fu_769_plt2 <= plt2_load_reg_3412;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_uppol2_fu_769_plt2 <= dec_plt2_load_reg_2984;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_uppol2_fu_769_plt2 <= dec_ph2_load_reg_2967;
        else 
            grp_uppol2_fu_769_plt2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_upzero_fu_778_ap_start <= ap_reg_grp_upzero_fu_778_ap_start;

    grp_upzero_fu_778_bli_q0_assign_proc : process(dec_del_bpl_q0, dec_del_bph_q0, delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_778_bli_q0 <= delay_bph_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_778_bli_q0 <= delay_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_778_bli_q0 <= dec_del_bpl_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_778_bli_q0 <= dec_del_bph_q0;
        else 
            grp_upzero_fu_778_bli_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_778_dlt_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14, tmp_11_reg_2888, tmp_48_reg_2903, tmp_93_reg_3379, tmp_27_reg_3461)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_778_dlt <= tmp_27_reg_3461;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_778_dlt <= tmp_93_reg_3379;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_778_dlt <= tmp_48_reg_2903;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_778_dlt <= tmp_11_reg_2888;
        else 
            grp_upzero_fu_778_dlt <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_778_dlti_q0_assign_proc : process(dec_del_dltx_q0, dec_del_dhx_q0, delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_778_dlti_q0 <= delay_dhx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_778_dlti_q0 <= delay_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_778_dlti_q0 <= dec_del_dltx_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_778_dlti_q0 <= dec_del_dhx_q0;
        else 
            grp_upzero_fu_778_dlti_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_upzero_fu_778_dlti_q1_assign_proc : process(dec_del_dltx_q1, dec_del_dhx_q1, delay_dltx_q1, delay_dhx_q1, ap_CS_fsm_state12, ap_CS_fsm_state64, ap_CS_fsm_state75, ap_CS_fsm_state14)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state75))) then 
            grp_upzero_fu_778_dlti_q1 <= delay_dhx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            grp_upzero_fu_778_dlti_q1 <= delay_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            grp_upzero_fu_778_dlti_q1 <= dec_del_dltx_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_upzero_fu_778_dlti_q1 <= dec_del_dhx_q1;
        else 
            grp_upzero_fu_778_dlti_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39, h_ptr_0_rec_i_i_cast_fu_1691_p1, tqmf_ptr_0_rec_i_i_c_fu_2003_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            h_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2003_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            h_address0 <= h_ptr_0_rec_i_i_cast_fu_1691_p1(5 - 1 downto 0);
        else 
            h_address0 <= "XXXXX";
        end if; 
    end process;


    h_address1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39, h_ptr_0_sum9_i_i_cas_fu_1720_p1, tqmf_ptr_0_sum67_i_i_1_fu_2027_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            h_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2027_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            h_address1 <= h_ptr_0_sum9_i_i_cas_fu_1720_p1(5 - 1 downto 0);
        else 
            h_address1 <= "XXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    h_ptr_0_rec_i_i_cast_fu_1691_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_rec_i_i_reg_638),64));
    h_ptr_0_sum9_i_i_cas_fu_1720_p1 <= std_logic_vector(resize(unsigned(h_ptr_0_sum9_i_i_fu_1714_p2),64));
    h_ptr_0_sum9_i_i_fu_1714_p2 <= (h_ptr_0_rec_i_i_reg_638 or ap_const_lv5_1);
    i_4_fu_2185_p2 <= std_logic_vector(unsigned(i_1_i_i_reg_744) + unsigned(ap_const_lv5_1));
    i_5_fu_1933_p2 <= std_logic_vector(unsigned(i_0_i1_reg_603) + unsigned(ap_const_lv32_2));
    i_6_fu_1911_p2 <= std_logic_vector(unsigned(i_1_i_i4_reg_680) + unsigned(ap_const_lv4_1));
    i_7_fu_2656_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(i_0_i_reg_615));
    i_fu_2015_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_702) + unsigned(ap_const_lv4_1));
    m_fu_2485_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(n_assign_fu_2431_p2));
    n_assign_1_fu_2491_p3 <= 
        m_fu_2485_p2 when (tmp_104_fu_2477_p3(0) = '1') else 
        n_assign_fu_2431_p2;
    n_assign_fu_2431_p2 <= std_logic_vector(unsigned(xh) - unsigned(tmp_101_reg_3417));
    p_lshr1_fu_1099_p4 <= p_neg1_fu_1093_p2(31 downto 1);
    p_lshr2_fu_1038_p4 <= p_neg2_fu_1032_p2(31 downto 1);
    p_lshr_f1_fu_1119_p4 <= i_0_i1_reg_603(31 downto 1);
    p_lshr_f_fu_2629_p4 <= i_0_i_reg_615(31 downto 1);
    p_lshr_fu_2609_p4 <= p_neg_fu_2603_p2(31 downto 1);
    p_neg1_fu_1093_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i1_reg_603));
    p_neg2_fu_1032_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) - signed(size));
    p_neg_fu_2603_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(i_0_i_reg_615));
    p_neg_t1_fu_1113_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_12_fu_1109_p1));
    p_neg_t2_fu_1048_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(p_lshr2_fu_1038_p4));
    p_neg_t_fu_2623_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_22_fu_2619_p1));
    p_rec2_i_i_fu_1708_p2 <= std_logic_vector(unsigned(ad_ptr_0_rec_i_i_reg_627) + unsigned(ap_const_lv4_1));
    p_rec_i_i_fu_1887_p2 <= std_logic_vector(unsigned(ad_ptr_1_rec_i_i_reg_669) + unsigned(ap_const_lv5_1F));
        p_shl2_cast_fu_1985_p1 <= std_logic_vector(resize(signed(p_shl2_fu_1977_p3),37));

    p_shl2_fu_1977_p3 <= (tqmf_q0 & ap_const_lv2_0);
        p_shl3_cast_fu_1662_p1 <= std_logic_vector(resize(signed(p_shl3_fu_1655_p3),37));

    p_shl3_fu_1655_p3 <= (tmp_70_reg_2995 & ap_const_lv4_0);
        p_shl4_cast_fu_1673_p1 <= std_logic_vector(resize(signed(p_shl4_fu_1666_p3),37));

    p_shl4_fu_1666_p3 <= (tmp_70_reg_2995 & ap_const_lv2_0);
        p_shl5_cast_fu_2119_p1 <= std_logic_vector(resize(signed(p_shl5_fu_2111_p3),37));

    p_shl5_fu_2111_p3 <= (tqmf_q1 & ap_const_lv4_0);
        p_shl6_cast_fu_2131_p1 <= std_logic_vector(resize(signed(p_shl6_fu_2123_p3),37));

    p_shl6_fu_2123_p3 <= (tqmf_q1 & ap_const_lv2_0);
        p_shl7_cast_fu_1811_p1 <= std_logic_vector(resize(signed(p_shl7_fu_1803_p3),37));

    p_shl7_fu_1803_p3 <= (accumd_q0 & ap_const_lv4_0);
        p_shl8_cast_fu_1823_p1 <= std_logic_vector(resize(signed(p_shl8_fu_1815_p3),37));

    p_shl8_fu_1815_p3 <= (accumd_q0 & ap_const_lv2_0);
        p_shl_cast_fu_1973_p1 <= std_logic_vector(resize(signed(p_shl_fu_1965_p3),37));

    p_shl_fu_1965_p3 <= (tqmf_q0 & ap_const_lv4_0);
    p_sum_i_i_cast_fu_2157_p1 <= std_logic_vector(resize(unsigned(p_sum_i_i_fu_2151_p2),64));
    p_sum_i_i_fu_2151_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_733) + unsigned(ap_const_lv6_17));
        p_trunc2_ext_fu_1564_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_793_ap_return),32));

        p_trunc3_ext_fu_2515_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_793_ap_return),32));

    p_trunc44_ext_fu_2753_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_845_ap_return),32));
    p_trunc45_ext_fu_1554_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_845_ap_return),32));
    p_trunc46_ext_fu_1613_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_845_ap_return),32));
        p_trunc4_ext_fu_2763_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_793_ap_return),32));

        p_trunc_ext1_fu_1603_p1 <= std_logic_vector(resize(signed(grp_uppol1_fu_793_ap_return),32));

    p_trunc_ext_fu_2505_p1 <= std_logic_vector(resize(unsigned(grp_scalel_fu_845_ap_return),32));
    phitmp_i_i3_fu_1725_p2 <= std_logic_vector(unsigned(h_ptr_0_rec_i_i_reg_638) + unsigned(ap_const_lv5_2));
    phitmp_i_i_fu_2033_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_rec_i_i_reg_691) + unsigned(ap_const_lv5_2));

    qq2_code2_table_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state67, tmp_61_fu_1185_p1, tmp_109_fu_2573_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state67))) then 
            qq2_code2_table_address0 <= tmp_109_fu_2573_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            qq2_code2_table_address0 <= tmp_61_fu_1185_p1(2 - 1 downto 0);
        else 
            qq2_code2_table_address0 <= "XX";
        end if; 
    end process;


    qq2_code2_table_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state67)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state67)))) then 
            qq2_code2_table_ce0 <= ap_const_logic_1;
        else 
            qq2_code2_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    qq4_code4_table_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state56, tmp_46_fu_1190_p1, tmp_91_fu_2291_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            qq4_code4_table_address0 <= tmp_91_fu_2291_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            qq4_code4_table_address0 <= tmp_46_fu_1190_p1(4 - 1 downto 0);
        else 
            qq4_code4_table_address0 <= "XXXX";
        end if; 
    end process;


    qq4_code4_table_ce0_assign_proc : process(grp_filtez_fu_755_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state56, grp_quantl_fu_817_ap_done)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_filtez_fu_755_ap_done) or (ap_const_logic_0 = grp_quantl_fu_817_ap_done)))))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= tmp_50_fu_1194_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    test_data_address0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37, tmp_s_fu_1949_p1, tmp_40_fu_1960_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
            test_data_address0 <= tmp_40_fu_1960_p1(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state36))) then 
            test_data_address0 <= tmp_s_fu_1949_p1(2 - 1 downto 0);
        else 
            test_data_address0 <= "XX";
        end if; 
    end process;


    test_data_ce0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            test_data_ce0 <= ap_const_logic_1;
        else 
            test_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_101_fu_2397_p2 <= std_logic_vector(unsigned(tmp_100_reg_3341) + unsigned(tmp_23_reg_3363));
        tmp_102_ext_fu_1484_p1 <= std_logic_vector(resize(signed(reg_965),32));

    tmp_102_fu_2442_p3 <= n_assign_fu_2431_p2(31 downto 31);
    tmp_104_fu_2477_p3 <= n_assign_fu_2431_p2(31 downto 31);
    tmp_105_fu_2499_p2 <= "1" when (signed(n_assign_1_fu_2491_p3) > signed(decis_fu_2473_p1)) else "0";
        tmp_106_fu_1917_p1 <= std_logic_vector(resize(signed(i_0_i1_reg_603),64));

    tmp_107_fu_1922_p2 <= (i_0_i1_reg_603 or ap_const_lv32_1);
        tmp_108_fu_1928_p1 <= std_logic_vector(resize(signed(tmp_107_fu_1922_p2),64));

        tmp_109_fu_2573_p1 <= std_logic_vector(resize(signed(ih),64));

        tmp_110_cast_fu_2102_p1 <= std_logic_vector(resize(signed(tmp_71_reg_3271),47));

        tmp_112_cast_fu_2141_p1 <= std_logic_vector(resize(signed(tmp_72_fu_2135_p2),47));

    tmp_113_fu_2690_p2 <= std_logic_vector(signed(tmp_27_fu_2681_p1) + signed(tmp_23_reg_3363));
        tmp_115_cast_fu_2066_p1 <= std_logic_vector(resize(signed(tmp_73_reg_3246),50));

    tmp_116_fu_2781_p2 <= std_logic_vector(unsigned(dh) + unsigned(sh));
    tmp_117_fu_2582_p2 <= std_logic_vector(shift_left(unsigned(ih),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
        tmp_118_cast_fu_2075_p1 <= std_logic_vector(resize(signed(tmp_74_reg_3251),50));

    tmp_119_fu_2595_p3 <= i_0_i_reg_615(31 downto 31);
        tmp_11_fu_1260_p1 <= std_logic_vector(resize(signed(tmp_10_reg_2883),32));

        tmp_120_cast_fu_1794_p1 <= std_logic_vector(resize(signed(tmp_77_reg_3100),46));

    tmp_120_fu_2643_p3 <= 
        p_neg_t_fu_2623_p2 when (tmp_119_fu_2595_p3(0) = '1') else 
        tmp_24_fu_2639_p1;
        tmp_121_fu_2651_p1 <= std_logic_vector(resize(signed(tmp_120_fu_2643_p3),64));

        tmp_122_cast_fu_1833_p1 <= std_logic_vector(resize(signed(tmp_78_fu_1827_p2),46));

        tmp_129_cast_fu_1758_p1 <= std_logic_vector(resize(signed(tmp_81_reg_3075),50));

    tmp_12_fu_1109_p1 <= std_logic_vector(resize(unsigned(p_lshr1_fu_1099_p4),32));
        tmp_132_cast_fu_1767_p1 <= std_logic_vector(resize(signed(tmp_82_reg_3080),50));

    tmp_13_fu_2464_p4 <= tmp_103_reg_3422(42 downto 12);
    tmp_142_ext_fu_2356_p1 <= std_logic_vector(resize(unsigned(tmp_90_reg_3352),32));
    tmp_149_ext_fu_2407_p1 <= std_logic_vector(resize(unsigned(reg_955),32));
    tmp_14_fu_1129_p1 <= std_logic_vector(resize(unsigned(p_lshr_f1_fu_1119_p4),32));
        tmp_152_ext_fu_2417_p1 <= std_logic_vector(resize(signed(reg_965),32));

    tmp_158_cast_cast_ca_fu_2450_p3 <= 
        ap_const_lv32_1 when (tmp_102_fu_2442_p3(0) = '1') else 
        ap_const_lv32_3;
        tmp_159_cast1_fu_2557_p1 <= std_logic_vector(resize(signed(deth),45));

    tmp_15_fu_1155_p4 <= compressed_q0(31 downto 6);
    tmp_167_cast_cast_ca_fu_2560_p3 <= 
        ap_const_lv32_0 when (tmp_102_reg_3427(0) = '1') else 
        ap_const_lv32_2;
    tmp_173_ext_fu_2733_p1 <= std_logic_vector(resize(unsigned(reg_960),32));
        tmp_176_ext_fu_2743_p1 <= std_logic_vector(resize(signed(reg_965),32));

    tmp_21_fu_2281_p4 <= grp_quantl_fu_817_ap_return(5 downto 2);
    tmp_22_fu_2619_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_2609_p4),32));
    tmp_24_fu_2639_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_2629_p4),32));
        tmp_27_fu_2681_p1 <= std_logic_vector(resize(signed(tmp_26_reg_3456),32));

    tmp_28_fu_1018_p2 <= std_logic_vector(unsigned(size) + unsigned(ap_const_lv32_2));
    tmp_29_fu_1024_p3 <= tmp_28_fu_1018_p2(31 downto 31);
    tmp_30_fu_1054_p4 <= tmp_28_fu_1018_p2(31 downto 1);
    tmp_31_fu_1064_p3 <= 
        p_neg_t2_fu_1048_p2 when (tmp_29_fu_1024_p3(0) = '1') else 
        tmp_30_fu_1054_p4;
    tmp_32_fu_1072_p3 <= (tmp_31_fu_1064_p3 & ap_const_lv1_0);
    tmp_33_fu_1146_p2 <= "1" when (i_0_i_reg_615 = tmp_32_reg_2809) else "0";
    tmp_34_fu_1080_p2 <= "1" when (i_0_i1_reg_603 = tmp_32_reg_2809) else "0";
    tmp_35_fu_1085_p3 <= i_0_i1_reg_603(31 downto 31);
    tmp_36_fu_1151_p1 <= compressed_q0(6 - 1 downto 0);
    tmp_37_fu_2094_p1 <= xb_0_i_i_reg_723(47 - 1 downto 0);
    tmp_38_fu_2098_p1 <= xa_0_i_i_reg_713(47 - 1 downto 0);
    tmp_39_fu_1954_p2 <= (i_0_i_reg_615 or ap_const_lv32_1);
        tmp_40_fu_1960_p1 <= std_logic_vector(resize(signed(tmp_39_fu_1954_p2),64));

    tmp_41_fu_1133_p3 <= 
        p_neg_t1_fu_1113_p2 when (tmp_35_fu_1085_p3(0) = '1') else 
        tmp_14_fu_1129_p1;
        tmp_42_fu_1141_p1 <= std_logic_vector(resize(signed(tmp_41_fu_1133_p3),64));

        tmp_43_fu_1165_p1 <= std_logic_vector(resize(signed(tmp_15_fu_1155_p4),32));

    tmp_46_fu_1190_p1 <= std_logic_vector(resize(unsigned(tmp_18_reg_2832),64));
    tmp_49_fu_1407_p2 <= std_logic_vector(unsigned(tmp_48_reg_2903) + unsigned(grp_filtez_fu_755_ap_return));
        tmp_50_fu_1194_p1 <= std_logic_vector(resize(signed(il),64));

    tmp_53_fu_1412_p2 <= std_logic_vector(unsigned(grp_fu_885_p2) + unsigned(tmp_52_reg_2909));
    tmp_58_fu_1631_p2 <= std_logic_vector(unsigned(dec_sl) + unsigned(dec_dlt));
    tmp_60_fu_1429_p2 <= std_logic_vector(unsigned(grp_filtep_fu_809_ap_return) + unsigned(reg_938));
        tmp_61_fu_1185_p1 <= std_logic_vector(resize(signed(ih),64));

    tmp_63_fu_1263_p2 <= std_logic_vector(signed(tmp_11_fu_1260_p1) + signed(grp_filtez_fu_755_ap_return));
    tmp_68_fu_1502_p2 <= std_logic_vector(unsigned(dec_sh) + unsigned(dec_dh));
    tmp_69_fu_1530_p2 <= std_logic_vector(unsigned(tmp_68_fu_1502_p2) + unsigned(rl));
    tmp_70_fu_1536_p2 <= std_logic_vector(unsigned(rl) - unsigned(tmp_68_fu_1502_p2));
    tmp_72_fu_2135_p2 <= std_logic_vector(signed(p_shl5_cast_fu_2119_p1) - signed(p_shl6_cast_fu_2131_p1));
        tmp_73_cast_fu_1221_p1 <= std_logic_vector(resize(signed(dec_detl),47));

    tmp_75_fu_1786_p1 <= xa1_0_i_i_reg_659(46 - 1 downto 0);
    tmp_76_fu_1790_p1 <= xa2_0_i_i_reg_649(46 - 1 downto 0);
    tmp_78_fu_1827_p2 <= std_logic_vector(signed(p_shl7_cast_fu_1811_p1) - signed(p_shl8_cast_fu_1823_p1));
    tmp_83_fu_2191_p2 <= std_logic_vector(unsigned(xa_1_reg_3276) + unsigned(xb_1_reg_3282));
    tmp_85_ext_fu_1447_p1 <= std_logic_vector(resize(unsigned(reg_955),32));
    tmp_85_fu_2211_p2 <= std_logic_vector(unsigned(xa_1_reg_3276) - unsigned(xb_1_reg_3282));
        tmp_88_ext_fu_1583_p1 <= std_logic_vector(resize(signed(reg_965),32));

    tmp_89_fu_2247_p2 <= std_logic_vector(unsigned(tmp_84_reg_3311) - unsigned(grp_fu_885_p2));
    tmp_91_fu_2291_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_2281_p4),64));
    tmp_94_fu_2345_p2 <= std_logic_vector(unsigned(tmp_93_reg_3379) + unsigned(reg_938));
    tmp_99_ext_fu_1593_p1 <= std_logic_vector(resize(unsigned(reg_960),32));
    tmp_99_fu_2533_p2 <= std_logic_vector(unsigned(sl) + unsigned(dlt));
    tmp_fu_1012_p2 <= "1" when (select_r = ap_const_lv32_0) else "0";
        tmp_s_fu_1949_p1 <= std_logic_vector(resize(signed(i_0_i_reg_615),64));


    tqmf_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state37, ap_CS_fsm_state39, exitcond2_i_i_fu_2009_p2, tqmf_ptr_0_rec_i_i_c_fu_2003_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state39) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2)))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2))) then 
            tqmf_address0 <= tqmf_ptr_0_rec_i_i_c_fu_2003_p1(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2179_p2, ap_CS_fsm_state39, ap_CS_fsm_state50, tqmf_addr_2_reg_3288, ap_CS_fsm_state53, tqmf_ptr_0_sum67_i_i_1_fu_2027_p1, tqmf_ptr_0_sum_i_i_c_fu_2174_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            tqmf_address1 <= tqmf_addr_2_reg_3288;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0)))) then 
            tqmf_address1 <= ap_const_lv5_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and (exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) then 
            tqmf_address1 <= tqmf_ptr_0_sum_i_i_c_fu_2174_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state50))) then 
            tqmf_address1 <= ap_const_lv5_17;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            tqmf_address1 <= tqmf_ptr_0_sum67_i_i_1_fu_2027_p1(5 - 1 downto 0);
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state37, ap_CS_fsm_state39, exitcond2_i_i_fu_2009_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and (ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not((ap_const_lv1_0 = exitcond2_i_i_fu_2009_p2))))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2179_p2, ap_CS_fsm_state39, ap_CS_fsm_state50, ap_CS_fsm_state53)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state50)) or ((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and (exitcond_i_i_fu_2179_p2 = ap_const_lv1_0)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d1_assign_proc : process(tqmf_q1, ap_CS_fsm_state52, exitcond_i_i_fu_2179_p2, test_data_load_reg_3163, ap_CS_fsm_state53)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            tqmf_d1 <= tqmf_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0)))) then 
            tqmf_d1 <= test_data_load_reg_3163;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_ptr1_0_rec_i_i_fu_2162_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_733) + unsigned(ap_const_lv6_3F));
    tqmf_ptr_0_rec_i_i_c_fu_2003_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_rec_i_i_reg_691),64));
    tqmf_ptr_0_sum67_i_i_1_fu_2027_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum67_i_i_fu_2021_p2),64));
    tqmf_ptr_0_sum67_i_i_fu_2021_p2 <= (tqmf_ptr_0_rec_i_i_reg_691 or ap_const_lv5_1);
    tqmf_ptr_0_sum_i_i_c_fu_2174_p1 <= std_logic_vector(resize(unsigned(tqmf_ptr_0_sum_i_i_fu_2168_p2),64));
    tqmf_ptr_0_sum_i_i_fu_2168_p2 <= std_logic_vector(unsigned(tqmf_ptr_0_pn_rec_i_s_reg_733) + unsigned(ap_const_lv6_15));

    tqmf_we0_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2179_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state52, exitcond_i_i_fu_2179_p2, ap_CS_fsm_state53)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52) and not((exitcond_i_i_fu_2179_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state53)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_1797_p2 <= std_logic_vector(unsigned(tmp_75_fu_1786_p1) + unsigned(tmp_120_cast_fu_1794_p1));
    xa1_2_fu_1761_p2 <= std_logic_vector(signed(tmp_129_cast_fu_1758_p1) + signed(xa1_0_i_i_reg_659));
        xa1_cast_fu_1683_p1 <= std_logic_vector(resize(signed(xa1_fu_1677_p2),50));

    xa1_fu_1677_p2 <= std_logic_vector(signed(p_shl3_cast_fu_1662_p1) - signed(p_shl4_cast_fu_1673_p1));
    xa2_1_fu_1837_p2 <= std_logic_vector(unsigned(tmp_76_fu_1790_p1) + unsigned(tmp_122_cast_fu_1833_p1));
    xa2_2_fu_1770_p2 <= std_logic_vector(signed(tmp_132_cast_fu_1767_p1) + signed(xa2_0_i_i_reg_649));
        xa2_cast_fu_1687_p1 <= std_logic_vector(resize(signed(grp_fu_1577_p2),50));

    xa_1_fu_2105_p2 <= std_logic_vector(unsigned(tmp_38_fu_2098_p1) + unsigned(tmp_110_cast_fu_2102_p1));
    xa_2_fu_2069_p2 <= std_logic_vector(signed(tmp_115_cast_fu_2066_p1) + signed(xa_0_i_i_reg_713));
        xa_cast_fu_1995_p1 <= std_logic_vector(resize(signed(xa_fu_1989_p2),50));

    xa_fu_1989_p2 <= std_logic_vector(signed(p_shl_cast_fu_1973_p1) - signed(p_shl2_cast_fu_1985_p1));
    xb_1_fu_2145_p2 <= std_logic_vector(unsigned(tmp_37_fu_2094_p1) + unsigned(tmp_112_cast_fu_2141_p1));
    xb_2_fu_2078_p2 <= std_logic_vector(signed(tmp_118_cast_fu_2075_p1) + signed(xb_0_i_i_reg_723));
        xb_cast_fu_1999_p1 <= std_logic_vector(resize(signed(grp_fu_1943_p2),50));

end behav;
