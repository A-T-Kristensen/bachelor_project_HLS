-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity upzero is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dlt : IN STD_LOGIC_VECTOR (31 downto 0);
    dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dlti_ce0 : OUT STD_LOGIC;
    dlti_we0 : OUT STD_LOGIC;
    dlti_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dlti_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dlti_ce1 : OUT STD_LOGIC;
    dlti_we1 : OUT STD_LOGIC;
    dlti_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dlti_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    bli_ce0 : OUT STD_LOGIC;
    bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bli_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    bli_ce1 : OUT STD_LOGIC;
    bli_we1 : OUT STD_LOGIC;
    bli_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of upzero is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_FFFFFF80 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_162 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_173 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_reg_337 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_207_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_223_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_367 : STD_LOGIC_VECTOR (63 downto 0);
    signal bli_load_1_reg_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal exitcond1_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal i_2_fu_282_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal bli_addr_reg_399 : STD_LOGIC_VECTOR (2 downto 0);
    signal dlti_load_2_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal dlti_addr_4_reg_410 : STD_LOGIC_VECTOR (2 downto 0);
    signal dlti_addr_5_reg_415 : STD_LOGIC_VECTOR (2 downto 0);
    signal dlti_load_4_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_8_fu_213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_11_fu_269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl1_fu_246_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_10_cast_fu_243_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_10_fu_253_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal wd2_cast_cast_cast_fu_235_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_fu_259_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_297_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_cast_fu_293_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_fu_305_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component adpcm_main_mul_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    adpcm_main_mul_32bkb_x_U17 : component adpcm_main_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_223_p0,
        din1 => reg_184,
        ce => ap_const_logic_1,
        dout => grp_fu_223_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_fu_201_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_191_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_fu_201_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_191_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_fu_201_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond1_fu_276_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_191_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond1_fu_276_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_191_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = exitcond1_fu_276_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_191_p2))) then 
                i_1_reg_162 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_201_p2))) then 
                i_1_reg_162 <= i_3_fu_207_p2;
            end if; 
        end if;
    end process;

    i_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_191_p2)))) then 
                i_reg_173 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond1_fu_276_p2))) then 
                i_reg_173 <= i_2_fu_282_p2;
            end if; 
        end if;
    end process;

    reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
                reg_184 <= dlti_q1;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_reg_342 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
                reg_184 <= dlti_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356 <= bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter1_exitcond_reg_342 <= exitcond_reg_342;
                exitcond_reg_342 <= exitcond_fu_201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter1_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter2_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter1_exitcond_reg_342;
                ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter2_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter3_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter2_exitcond_reg_342;
                ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter3_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter4_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter3_exitcond_reg_342;
                ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter4_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter5_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter4_exitcond_reg_342;
                ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter6_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter5_exitcond_reg_342;
                ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356 <= ap_pipeline_reg_pp0_iter6_bli_addr_1_reg_356;
                ap_pipeline_reg_pp0_iter7_exitcond_reg_342 <= ap_pipeline_reg_pp0_iter6_exitcond_reg_342;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_fu_201_p2))) then
                bli_addr_1_reg_356 <= tmp_8_fu_213_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = exitcond1_fu_276_p2))) then
                bli_addr_reg_399 <= tmp_2_fu_288_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_342) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then
                bli_load_1_reg_372 <= bli_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                dlti_load_2_reg_405 <= dlti_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                dlti_load_4_reg_420 <= dlti_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond1_reg_390 <= exitcond1_fu_276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_191_p2))) then
                tmp_1_reg_337 <= tmp_1_fu_197_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_342)) then
                tmp_s_reg_367 <= grp_fu_223_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter1, tmp_fu_191_p2, exitcond_fu_201_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, exitcond1_fu_276_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((ap_start = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_fu_191_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_fu_191_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter8) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter7)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_201_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_201_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond1_fu_276_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state11 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state14 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state15 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state16 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state17 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state18 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state18)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bli_address0_assign_proc : process(ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter6, tmp_2_fu_288_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            bli_address0 <= tmp_2_fu_288_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp0_iter6)) then 
            bli_address0 <= ap_pipeline_reg_pp0_iter5_bli_addr_1_reg_356;
        else 
            bli_address0 <= "XXX";
        end if; 
    end process;


    bli_address1_assign_proc : process(ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356, ap_CS_fsm_pp1_stage0, bli_addr_reg_399, ap_enable_reg_pp0_iter8, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            bli_address1 <= bli_addr_reg_399;
        elsif ((ap_const_logic_1 = ap_enable_reg_pp0_iter8)) then 
            bli_address1 <= ap_pipeline_reg_pp0_iter7_bli_addr_1_reg_356;
        else 
            bli_address1 <= "XXX";
        end if; 
    end process;


    bli_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            bli_ce0 <= ap_const_logic_1;
        else 
            bli_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bli_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter8) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then 
            bli_ce1 <= ap_const_logic_1;
        else 
            bli_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bli_d1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp1_iter1, tmp_11_fu_269_p2, tmp_4_fu_305_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            bli_d1 <= tmp_4_fu_305_p2(39 downto 8);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp0_iter8)) then 
            bli_d1 <= tmp_11_fu_269_p2;
        else 
            bli_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bli_we1_assign_proc : process(ap_pipeline_reg_pp0_iter7_exitcond_reg_342, exitcond1_reg_390, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter7_exitcond_reg_342)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond1_reg_390)))) then 
            bli_we1 <= ap_const_logic_1;
        else 
            bli_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dlti_addr_4_reg_410 <= ap_const_lv64_2(3 - 1 downto 0);
    dlti_addr_5_reg_415 <= ap_const_lv64_1(3 - 1 downto 0);

    dlti_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_enable_reg_pp0_iter0, ap_CS_fsm_state11, dlti_addr_5_reg_415, tmp_8_fu_213_p1, ap_CS_fsm_state17)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dlti_address0 <= dlti_addr_5_reg_415;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dlti_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dlti_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dlti_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dlti_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            dlti_address0 <= tmp_8_fu_213_p1(3 - 1 downto 0);
        else 
            dlti_address0 <= "XXX";
        end if; 
    end process;


    dlti_address1_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state11, dlti_addr_4_reg_410, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            dlti_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dlti_address1 <= dlti_addr_4_reg_410;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dlti_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dlti_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            dlti_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            dlti_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        else 
            dlti_address1 <= "XXX";
        end if; 
    end process;


    dlti_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_enable_reg_pp0_iter0, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            dlti_ce0 <= ap_const_logic_1;
        else 
            dlti_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dlti_ce1_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            dlti_ce1 <= ap_const_logic_1;
        else 
            dlti_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dlti_d0 <= reg_184;

    dlti_d1_assign_proc : process(dlt, reg_184, ap_CS_fsm_state15, ap_CS_fsm_state16, dlti_load_2_reg_405, dlti_load_4_reg_420, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            dlti_d1 <= dlt;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            dlti_d1 <= dlti_load_4_reg_420;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            dlti_d1 <= dlti_load_2_reg_405;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            dlti_d1 <= reg_184;
        else 
            dlti_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dlti_we0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            dlti_we0 <= ap_const_logic_1;
        else 
            dlti_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dlti_we1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            dlti_we1 <= ap_const_logic_1;
        else 
            dlti_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_276_p2 <= "1" when (i_reg_173 = ap_const_lv3_6) else "0";
    exitcond_fu_201_p2 <= "1" when (i_1_reg_162 = ap_const_lv3_6) else "0";
    grp_fu_223_p0 <= tmp_1_reg_337(32 - 1 downto 0);
    i_2_fu_282_p2 <= std_logic_vector(unsigned(i_reg_173) + unsigned(ap_const_lv3_1));
    i_3_fu_207_p2 <= std_logic_vector(unsigned(i_1_reg_162) + unsigned(ap_const_lv3_1));
    p_shl1_fu_246_p3 <= (bli_load_1_reg_372 & ap_const_lv8_0);
    p_shl_fu_297_p3 <= (bli_q0 & ap_const_lv8_0);
        tmp_10_cast_fu_243_p1 <= std_logic_vector(resize(signed(bli_load_1_reg_372),40));

    tmp_10_fu_253_p2 <= std_logic_vector(unsigned(p_shl1_fu_246_p3) - unsigned(tmp_10_cast_fu_243_p1));
    tmp_11_fu_269_p2 <= std_logic_vector(unsigned(wd2_cast_cast_cast_fu_235_p3) + unsigned(wd3_fu_259_p4));
        tmp_1_fu_197_p1 <= std_logic_vector(resize(signed(dlt),64));

    tmp_2_fu_288_p1 <= std_logic_vector(resize(unsigned(i_reg_173),64));
        tmp_3_cast_fu_293_p1 <= std_logic_vector(resize(signed(bli_q0),40));

    tmp_4_fu_305_p2 <= std_logic_vector(unsigned(p_shl_fu_297_p3) - unsigned(tmp_3_cast_fu_293_p1));
    tmp_7_fu_228_p3 <= tmp_s_reg_367(63 downto 63);
    tmp_8_fu_213_p1 <= std_logic_vector(resize(unsigned(i_1_reg_162),64));
    tmp_fu_191_p2 <= "1" when (dlt = ap_const_lv32_0) else "0";
    wd2_cast_cast_cast_fu_235_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_7_fu_228_p3(0) = '1') else 
        ap_const_lv32_80;
    wd3_fu_259_p4 <= tmp_10_fu_253_p2(39 downto 8);
end behav;
